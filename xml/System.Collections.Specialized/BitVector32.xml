<Type Name="BitVector32" FullName="System.Collections.Specialized.BitVector32">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f654f0826a9f3ce2e39ffa26cce2806fb1fbdba7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36644541" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct BitVector32" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit BitVector32 extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.BitVector32" />
  <TypeSignature Language="VB.NET" Value="Public Structure BitVector32" />
  <TypeSignature Language="C++ CLI" Value="public value class BitVector32" />
  <TypeSignature Language="F#" Value="type BitVector32 = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="12710-101">Provides a simple structure that stores Boolean values and small integers in 32 bits of memory.</span>
      <span class="sxs-lookup">
        <span data-stu-id="12710-101">Provides a simple structure that stores Boolean values and small integers in 32 bits of memory.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12710-102"><xref:System.Collections.Specialized.BitVector32> 보다 더 효율적 <xref:System.Collections.BitArray> 부울 값과 내부적으로 사용 되는 작은 정수에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-102"><xref:System.Collections.Specialized.BitVector32> is more efficient than <xref:System.Collections.BitArray> for Boolean values and small integers that are used internally.</span></span> <span data-ttu-id="12710-103">A <xref:System.Collections.BitArray> 필요에 따라 무한정 증가할 수 있지만 클래스 인스턴스를 필요로 하는 메모리 및 성능 오버 헤드입니다.</span><span class="sxs-lookup"><span data-stu-id="12710-103">A <xref:System.Collections.BitArray> can grow indefinitely as needed, but it has the memory and performance overhead that a class instance requires.</span></span> <span data-ttu-id="12710-104">반면, 한 <xref:System.Collections.Specialized.BitVector32> 만 32 비트를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-104">In contrast, a <xref:System.Collections.Specialized.BitVector32> uses only 32 bits.</span></span>  
  
 <span data-ttu-id="12710-105">A <xref:System.Collections.Specialized.BitVector32> 구조 섹션에서 작은 정수 또는 부울의 비트 플래그를 포함 하도록 중 하나만 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="12710-105">A <xref:System.Collections.Specialized.BitVector32> structure can be set up to contain either sections for small integers or bit flags for Booleans, but not both.</span></span> <span data-ttu-id="12710-106">A <xref:System.Collections.Specialized.BitVector32.Section> 는 창에는 <xref:System.Collections.Specialized.BitVector32> 연속 비트에 지정 된 최대 값을 포함할 수 있는 가장 작은 수로 구성 되며 <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-106">A <xref:System.Collections.Specialized.BitVector32.Section> is a window into the <xref:System.Collections.Specialized.BitVector32> and is composed of the smallest number of consecutive bits that can contain the maximum value specified in <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span></span> <span data-ttu-id="12710-107">예를 들어 1의 최대 값을 가진 섹션 5의 최대 값을 가진 섹션은 세 개의 비트로 구성 하는 반면 1 비트만 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="12710-107">For example, a section with a maximum value of 1 is composed of only one bit, whereas a section with a maximum value of 5 is composed of three bits.</span></span> <span data-ttu-id="12710-108">만들 수는 <xref:System.Collections.Specialized.BitVector32.Section> 1 부울 값을 토대로 최대값이 적용 된 있으므로 저장할 수 있으므로 정수 및 부울 같은 <xref:System.Collections.Specialized.BitVector32>합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-108">You can create a <xref:System.Collections.Specialized.BitVector32.Section> with a maximum value of 1 to serve as a Boolean, thereby allowing you to store integers and Booleans in the same <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="12710-109">일부 구성원에 사용할 수는 <xref:System.Collections.Specialized.BitVector32> 로 설정 되어 있는 섹션에 비트 플래그를 설정 하는 하나에 대해 다른 멤버를 사용할 수 있지만 합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-109">Some members can be used for a <xref:System.Collections.Specialized.BitVector32> that is set up as sections, while other members can be used for one that is set up as bit flags.</span></span> <span data-ttu-id="12710-110">예를 들어는 <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=nameWithType> 속성에 대 한 인덱서는는 <xref:System.Collections.Specialized.BitVector32> 섹션으로 설정 된 및 <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=nameWithType> 속성은에 대 한 인덱서는 <xref:System.Collections.Specialized.BitVector32> 에 비트 플래그 설정 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-110">For example, the <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=nameWithType> property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as sections, and the <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=nameWithType> property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as bit flags.</span></span> <span data-ttu-id="12710-111"><xref:System.Collections.Specialized.BitVector32.CreateMask%2A> 일련의 개별 비트를 액세스 하는 데 사용할 수 있는 마스크의 만듭니다는 <xref:System.Collections.Specialized.BitVector32> 에 비트 플래그 설정 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-111"><xref:System.Collections.Specialized.BitVector32.CreateMask%2A> creates a series of masks that can be used to access individual bits in a <xref:System.Collections.Specialized.BitVector32> that is set up as bit flags.</span></span>  
  
 <span data-ttu-id="12710-112">에 마스크를 사용 하는 <xref:System.Collections.Specialized.BitVector32> 를으로 설정 된 섹션에는 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="12710-112">Using a mask on a <xref:System.Collections.Specialized.BitVector32> that is set up as sections might cause unexpected results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12710-113">다음 코드 예제에서는 한 <xref:System.Collections.Specialized.BitVector32> 비트 플래그의 컬렉션으로.</span><span class="sxs-lookup"><span data-stu-id="12710-113">The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of bit flags.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32_BitFlags#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_BitFlags/CPP/bitvector32_bitflags.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32_BitFlags#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_BitFlags/CS/bitvector32_bitflags.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32_BitFlags#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_BitFlags/VB/bitvector32_bitflags.vb#1)]  
  
 <span data-ttu-id="12710-114">다음 코드 예제에서는 한 <xref:System.Collections.Specialized.BitVector32> 섹션의 컬렉션으로.</span><span class="sxs-lookup"><span data-stu-id="12710-114">The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of sections.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CPP/bitvector32_sections.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CS/bitvector32_sections.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/VB/bitvector32_sections.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.BitArray" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="12710-115">Initializes a new instance of the <see cref="T:System.Collections.Specialized.BitVector32" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-115">Initializes a new instance of the <see cref="T:System.Collections.Specialized.BitVector32" /> structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitVector32 (System.Collections.Specialized.BitVector32 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Collections.Specialized.BitVector32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As BitVector32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitVector32(System::Collections::Specialized::BitVector32 value);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.BitVector32 : System.Collections.Specialized.BitVector32 -&gt; System.Collections.Specialized.BitVector32" Usage="new System.Collections.Specialized.BitVector32 value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Specialized.BitVector32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="12710-116">A <see cref="T:System.Collections.Specialized.BitVector32" /> structure that contains the data to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-116">A <see cref="T:System.Collections.Specialized.BitVector32" /> structure that contains the data to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12710-117">Initializes a new instance of the <see cref="T:System.Collections.Specialized.BitVector32" /> structure containing the data represented in an existing <see cref="T:System.Collections.Specialized.BitVector32" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-117">Initializes a new instance of the <see cref="T:System.Collections.Specialized.BitVector32" /> structure containing the data represented in an existing <see cref="T:System.Collections.Specialized.BitVector32" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12710-118">이 생성자는 o (1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="12710-118">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitVector32 (int data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitVector32(int data);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.BitVector32 : int -&gt; System.Collections.Specialized.BitVector32" Usage="new System.Collections.Specialized.BitVector32 data" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="12710-119">An integer representing the data of the new <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-119">An integer representing the data of the new <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12710-120">Initializes a new instance of the <see cref="T:System.Collections.Specialized.BitVector32" /> structure containing the data represented in an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-120">Initializes a new instance of the <see cref="T:System.Collections.Specialized.BitVector32" /> structure containing the data represented in an integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12710-121">이 생성자는 o (1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="12710-121">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateMask">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="12710-122">Creates a series of masks that can be used to retrieve individual bits in a <see cref="T:System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-122">Creates a series of masks that can be used to retrieve individual bits in a <see cref="T:System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateMask">
      <MemberSignature Language="C#" Value="public static int CreateMask ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CreateMask() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateMask" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMask () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CreateMask();" />
      <MemberSignature Language="F#" Value="static member CreateMask : unit -&gt; int" Usage="System.Collections.Specialized.BitVector32.CreateMask " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="12710-123">Creates the first mask in a series of masks that can be used to retrieve individual bits in a <see cref="T:System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-123">Creates the first mask in a series of masks that can be used to retrieve individual bits in a <see cref="T:System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12710-124">A mask that isolates the first bit flag in the <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-124">A mask that isolates the first bit flag in the <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12710-125">사용 하 여 `CreateMask()` 계열의 첫 번째 마스크를 만들려고 하 고 `CreateMask(int)` 모든 후속 마스크에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-125">Use `CreateMask()` to create the first mask in a series and `CreateMask(int)` for all subsequent masks.</span></span>  
  
 <span data-ttu-id="12710-126">동일한 비트 플래그를 참조 하도록 여러 마스크를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="12710-126">Multiple masks can be created to refer to the same bit flag.</span></span>  
  
 <span data-ttu-id="12710-127">결과 마스크 격리에 1 비트 플래그는 <xref:System.Collections.Specialized.BitVector32>합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-127">The resulting mask isolates only one bit flag in the <xref:System.Collections.Specialized.BitVector32>.</span></span> <span data-ttu-id="12710-128">비트 OR 연산을 사용 하 여 여러 비트 플래그에 격리 하는 마스크를 만들 마스크를 결합할 수는 <xref:System.Collections.Specialized.BitVector32>합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-128">You can combine masks using the bitwise OR operation to create a mask that isolates multiple bit flags in the <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="12710-129">에 마스크를 사용 하는 <xref:System.Collections.Specialized.BitVector32> 를으로 설정 된 섹션에는 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="12710-129">Using a mask on a <xref:System.Collections.Specialized.BitVector32> that is set up as sections might cause unexpected results.</span></span>  
  
 <span data-ttu-id="12710-130">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="12710-130">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12710-131">다음 코드 예제에는 만들고 마스크를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="12710-131">The following code example shows how to create and use masks.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CPP/bitvector32_createmasks.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CS/bitvector32_createmasks.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/VB/bitvector32_createmasks.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMask">
      <MemberSignature Language="C#" Value="public static int CreateMask (int previous);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CreateMask(int32 previous) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateMask(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMask (previous As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CreateMask(int previous);" />
      <MemberSignature Language="F#" Value="static member CreateMask : int -&gt; int" Usage="System.Collections.Specialized.BitVector32.CreateMask previous" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previous" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="previous">
          <span data-ttu-id="12710-132">The mask that indicates the previous bit flag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-132">The mask that indicates the previous bit flag.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12710-133">Creates an additional mask following the specified mask in a series of masks that can be used to retrieve individual bits in a <see cref="T:System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-133">Creates an additional mask following the specified mask in a series of masks that can be used to retrieve individual bits in a <see cref="T:System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12710-134">A mask that isolates the bit flag following the one that <paramref name="previous" /> points to in <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-134">A mask that isolates the bit flag following the one that <paramref name="previous" /> points to in <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12710-135">사용 하 여 `CreateMask()` 계열의 첫 번째 마스크를 만들려고 하 고 `CreateMask(int)` 모든 후속 마스크에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-135">Use `CreateMask()` to create the first mask in a series and `CreateMask(int)` for all subsequent masks.</span></span>  
  
 <span data-ttu-id="12710-136">동일한 비트 플래그를 참조 하도록 여러 마스크를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="12710-136">Multiple masks can be created to refer to the same bit flag.</span></span>  
  
 <span data-ttu-id="12710-137">결과 마스크 격리에 1 비트 플래그는 <xref:System.Collections.Specialized.BitVector32>합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-137">The resulting mask isolates only one bit flag in the <xref:System.Collections.Specialized.BitVector32>.</span></span> <span data-ttu-id="12710-138">비트 OR 연산을 사용 하 여 여러 비트 플래그에 격리 하는 마스크를 만들 마스크를 결합할 수는 <xref:System.Collections.Specialized.BitVector32>합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-138">You can combine masks using the bitwise OR operation to create a mask that isolates multiple bit flags in the <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="12710-139">에 마스크를 사용 하는 <xref:System.Collections.Specialized.BitVector32> 를으로 설정 된 섹션에는 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="12710-139">Using a mask on a <xref:System.Collections.Specialized.BitVector32> that is set up as sections might cause unexpected results.</span></span>  
  
 <span data-ttu-id="12710-140">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="12710-140">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12710-141">다음 코드 예제에는 만들고 마스크를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="12710-141">The following code example shows how to create and use masks.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CPP/bitvector32_createmasks.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CS/bitvector32_createmasks.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/VB/bitvector32_createmasks.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="12710-142">
            <paramref name="previous" /> indicates the last bit flag in the <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-142">
              <paramref name="previous" /> indicates the last bit flag in the <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSection">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="12710-143">Creates a series of sections that contain small integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-143">Creates a series of sections that contain small integers.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSection">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Specialized.BitVector32/Section CreateSection(int16 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSection (maxValue As Short) As BitVector32.Section" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::BitVector32::Section CreateSection(short maxValue);" />
      <MemberSignature Language="F#" Value="static member CreateSection : int16 -&gt; System.Collections.Specialized.BitVector32.Section" Usage="System.Collections.Specialized.BitVector32.CreateSection maxValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.BitVector32+Section</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="maxValue">
          <span data-ttu-id="12710-144">A 16-bit signed integer that specifies the maximum value for the new <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-144">A 16-bit signed integer that specifies the maximum value for the new <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12710-145">Creates the first <see cref="T:System.Collections.Specialized.BitVector32.Section" /> in a series of sections that contain small integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-145">Creates the first <see cref="T:System.Collections.Specialized.BitVector32.Section" /> in a series of sections that contain small integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12710-146">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> that can hold a number from zero to <paramref name="maxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-146">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> that can hold a number from zero to <paramref name="maxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12710-147">A <xref:System.Collections.Specialized.BitVector32.Section> 는 창에는 <xref:System.Collections.Specialized.BitVector32> 연속 비트에 지정 된 최대 값을 포함할 수 있는 가장 작은 수로 구성 되며 <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-147">A <xref:System.Collections.Specialized.BitVector32.Section> is a window into the <xref:System.Collections.Specialized.BitVector32> and is composed of the smallest number of consecutive bits that can contain the maximum value specified in <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span></span> <span data-ttu-id="12710-148">예를 들어 1의 최대 값을 가진 섹션 5의 최대 값을 가진 섹션은 세 개의 비트로 구성 하는 반면 1 비트만 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="12710-148">For example, a section with a maximum value of 1 is composed of only one bit, whereas a section with a maximum value of 5 is composed of three bits.</span></span> <span data-ttu-id="12710-149">만들 수는 <xref:System.Collections.Specialized.BitVector32.Section> 1 부울 값을 토대로 최대값이 적용 된 있으므로 저장할 수 있으므로 정수 및 부울 같은 <xref:System.Collections.Specialized.BitVector32>합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-149">You can create a <xref:System.Collections.Specialized.BitVector32.Section> with a maximum value of 1 to serve as a Boolean, thereby allowing you to store integers and Booleans in the same <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="12710-150">섹션이 이미 있는 경우는 <xref:System.Collections.Specialized.BitVector32>, 해당 섹션에 액세스할 수는; 하지만 섹션 겹치는 않을 예기치 않은 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="12710-150">If sections already exist in the <xref:System.Collections.Specialized.BitVector32>, those sections are still accessible; however, overlapping sections might cause unexpected results.</span></span>  
  
 <span data-ttu-id="12710-151">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="12710-151">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12710-152">다음 코드 예제에서는 한 <xref:System.Collections.Specialized.BitVector32> 섹션의 컬렉션으로.</span><span class="sxs-lookup"><span data-stu-id="12710-152">The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of sections.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CPP/bitvector32_sections.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CS/bitvector32_sections.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/VB/bitvector32_sections.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="12710-153">
            <paramref name="maxValue" /> is less than 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-153">
              <paramref name="maxValue" /> is less than 1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSection">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue, System.Collections.Specialized.BitVector32.Section previous);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Specialized.BitVector32/Section CreateSection(int16 maxValue, valuetype System.Collections.Specialized.BitVector32/Section previous) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSection (maxValue As Short, previous As BitVector32.Section) As BitVector32.Section" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::BitVector32::Section CreateSection(short maxValue, System::Collections::Specialized::BitVector32::Section previous);" />
      <MemberSignature Language="F#" Value="static member CreateSection : int16 * System.Collections.Specialized.BitVector32.Section -&gt; System.Collections.Specialized.BitVector32.Section" Usage="System.Collections.Specialized.BitVector32.CreateSection (maxValue, previous)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.BitVector32+Section</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int16" />
        <Parameter Name="previous" Type="System.Collections.Specialized.BitVector32+Section" />
      </Parameters>
      <Docs>
        <param name="maxValue">
          <span data-ttu-id="12710-154">A 16-bit signed integer that specifies the maximum value for the new <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-154">A 16-bit signed integer that specifies the maximum value for the new <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span>
          </span>
        </param>
        <param name="previous">
          <span data-ttu-id="12710-155">The previous <see cref="T:System.Collections.Specialized.BitVector32.Section" /> in the <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-155">The previous <see cref="T:System.Collections.Specialized.BitVector32.Section" /> in the <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12710-156">Creates a new <see cref="T:System.Collections.Specialized.BitVector32.Section" /> following the specified <see cref="T:System.Collections.Specialized.BitVector32.Section" /> in a series of sections that contain small integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-156">Creates a new <see cref="T:System.Collections.Specialized.BitVector32.Section" /> following the specified <see cref="T:System.Collections.Specialized.BitVector32.Section" /> in a series of sections that contain small integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12710-157">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> that can hold a number from zero to <paramref name="maxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-157">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> that can hold a number from zero to <paramref name="maxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12710-158">A <xref:System.Collections.Specialized.BitVector32.Section> 는 창에는 <xref:System.Collections.Specialized.BitVector32> 연속 비트에 지정 된 최대 값을 포함할 수 있는 가장 작은 수로 구성 되며 <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-158">A <xref:System.Collections.Specialized.BitVector32.Section> is a window into the <xref:System.Collections.Specialized.BitVector32> and is composed of the smallest number of consecutive bits that can contain the maximum value specified in <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span></span> <span data-ttu-id="12710-159">예를 들어 1의 최대 값을 가진 섹션 5의 최대 값을 가진 섹션은 세 개의 비트로 구성 하는 반면 1 비트만 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="12710-159">For example, a section with a maximum value of 1 is composed of only one bit, whereas a section with a maximum value of 5 is composed of three bits.</span></span> <span data-ttu-id="12710-160">만들 수는 <xref:System.Collections.Specialized.BitVector32.Section> 1 부울 값을 토대로 최대값이 적용 된 있으므로 저장할 수 있으므로 정수 및 부울 같은 <xref:System.Collections.Specialized.BitVector32>합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-160">You can create a <xref:System.Collections.Specialized.BitVector32.Section> with a maximum value of 1 to serve as a Boolean, thereby allowing you to store integers and Booleans in the same <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="12710-161">다음 섹션에서는 이미 있는 경우 `previous` 에 <xref:System.Collections.Specialized.BitVector32>, 해당 섹션에 액세스할 수는; 그러나 섹션 겹치는 않을 예기치 않은 결과가 합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-161">If sections already exist after `previous` in the <xref:System.Collections.Specialized.BitVector32>, those sections are still accessible; however, overlapping sections might cause unexpected results.</span></span>  
  
 <span data-ttu-id="12710-162">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="12710-162">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12710-163">다음 코드 예제에서는 한 <xref:System.Collections.Specialized.BitVector32> 섹션의 컬렉션으로.</span><span class="sxs-lookup"><span data-stu-id="12710-163">The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of sections.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CPP/bitvector32_sections.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CS/bitvector32_sections.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/VB/bitvector32_sections.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="12710-164">
            <paramref name="maxValue" /> is less than 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-164">
              <paramref name="maxValue" /> is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="12710-165">
            <paramref name="previous" /> includes the final bit in the <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-165">
              <paramref name="previous" /> includes the final bit in the <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          </span>
          <span data-ttu-id="12710-166">-or-  <paramref name="maxValue" /> is greater than the highest value that can be represented by the number of bits after <paramref name="previous" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-166">-or-  <paramref name="maxValue" /> is greater than the highest value that can be represented by the number of bits after <paramref name="previous" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public int Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Data" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.BitVector32.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Data { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : int" Usage="System.Collections.Specialized.BitVector32.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12710-167">Gets the value of the <see cref="T:System.Collections.Specialized.BitVector32" /> as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-167">Gets the value of the <see cref="T:System.Collections.Specialized.BitVector32" /> as an integer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12710-168">값은 <see cref="T:System.Collections.Specialized.BitVector32" /> 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-168">The value of the <see cref="T:System.Collections.Specialized.BitVector32" /> as an integer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12710-169">개별 섹션의 값에 액세스 또는 비트 플래그를 사용 하 여 <xref:System.Collections.Specialized.BitVector32.Item%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="12710-169">To access the value of the individual sections or bit flags, use the <xref:System.Collections.Specialized.BitVector32.Item%2A> property.</span></span>  
  
 <span data-ttu-id="12710-170">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="12710-170">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.BitVector32.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="bitVector32.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="12710-171">The object to compare with the current <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-171">The object to compare with the current <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12710-172">Determines whether the specified object is equal to the <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-172">Determines whether the specified object is equal to the <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12710-173">
            <see langword="true" /> if the specified object is equal to the <see cref="T:System.Collections.Specialized.BitVector32" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-173">
              <see langword="true" /> if the specified object is equal to the <see cref="T:System.Collections.Specialized.BitVector32" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12710-174">개체 `o` 같은 것으로 간주 되는 <xref:System.Collections.Specialized.BitVector32> 경우 유형의 `o` 와 호환 되는 <xref:System.Collections.Specialized.BitVector32> 형식 경우의 값 `o` 의 값과 같은 <xref:System.Collections.Specialized.BitVector32.Data%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-174">The object `o` is considered equal to the <xref:System.Collections.Specialized.BitVector32> if the type of `o` is compatible with the <xref:System.Collections.Specialized.BitVector32> type and if the value of `o` is equal to the value of <xref:System.Collections.Specialized.BitVector32.Data%2A>.</span></span>  
  
 <span data-ttu-id="12710-175">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="12710-175">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12710-176">다음 코드 예제에서는 비교는 <xref:System.Collections.Specialized.BitVector32> 다른 <xref:System.Collections.Specialized.BitVector32> 와 <xref:System.Int32>합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-176">The following code example compares a <xref:System.Collections.Specialized.BitVector32> with another <xref:System.Collections.Specialized.BitVector32> and with an <xref:System.Int32>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.Equals/CPP/bitvector32_equals.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.Equals/CS/bitvector32_equals.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.Equals/VB/bitvector32_equals.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="bitVector32.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="12710-177">Serves as a hash function for the <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-177">Serves as a hash function for the <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12710-178">A hash code for the <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-178">A hash code for the <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12710-179">해시 코드는 <xref:System.Collections.Specialized.BitVector32> 의 값에 따라 <xref:System.Collections.Specialized.BitVector32.Data%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-179">The hash code of a <xref:System.Collections.Specialized.BitVector32> is based on the value of <xref:System.Collections.Specialized.BitVector32.Data%2A>.</span></span> <span data-ttu-id="12710-180">두 인스턴스 <xref:System.Collections.Specialized.BitVector32> 에 대 한 동일한 값을 가진 <xref:System.Collections.Specialized.BitVector32.Data%2A> 동일한 해시 코드를 생성할 수도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="12710-180">Two instances of <xref:System.Collections.Specialized.BitVector32> with the same value for <xref:System.Collections.Specialized.BitVector32.Data%2A> will also generate the same hash code.</span></span>  
  
 <span data-ttu-id="12710-181">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="12710-181">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="12710-182">Gets or sets the value of the specified section or bit flag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-182">Gets or sets the value of the specified section or bit flag.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[System.Collections.Specialized.BitVector32.Section section] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(valuetype System.Collections.Specialized.BitVector32/Section)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(section As BitVector32.Section) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int default[System::Collections::Specialized::BitVector32::Section] { int get(System::Collections::Specialized::BitVector32::Section section); void set(System::Collections::Specialized::BitVector32::Section section, int value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Collections.Specialized.BitVector32.Section) : int with get, set" Usage="System.Collections.Specialized.BitVector32.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="section" Type="System.Collections.Specialized.BitVector32+Section" />
      </Parameters>
      <Docs>
        <param name="section">
          <span data-ttu-id="12710-183">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> that contains the value to get or set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-183">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> that contains the value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12710-184">Gets or sets the value stored in the specified <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-184">Gets or sets the value stored in the specified <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12710-185">에 지정 된 값 <see cref="T:System.Collections.Specialized.BitVector32.Section" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-185">The value stored in the specified <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12710-186"><xref:System.Collections.Specialized.BitVector32.Item%2A> [섹션] 속성은에 대 한 인덱서는 <xref:System.Collections.Specialized.BitVector32> 섹션으로 설정 된 및 <xref:System.Collections.Specialized.BitVector32.Item%2A> [int] 속성은 인덱스에 대 한는 <xref:System.Collections.Specialized.BitVector32> 에 비트 플래그 설정 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-186">The <xref:System.Collections.Specialized.BitVector32.Item%2A> [Section] property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as sections, and the <xref:System.Collections.Specialized.BitVector32.Item%2A> [int] property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as bit flags.</span></span>  
  
 <span data-ttu-id="12710-187">A <xref:System.Collections.Specialized.BitVector32.Section> 는 창에는 <xref:System.Collections.Specialized.BitVector32> 연속 비트에 지정 된 최대 값을 포함할 수 있는 가장 작은 수로 구성 되며 <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-187">A <xref:System.Collections.Specialized.BitVector32.Section> is a window into the <xref:System.Collections.Specialized.BitVector32> and is composed of the smallest number of consecutive bits that can contain the maximum value specified in <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span></span> <span data-ttu-id="12710-188">예를 들어 1의 최대 값을 가진 섹션 5의 최대 값을 가진 섹션은 세 개의 비트로 구성 하는 반면 1 비트만 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="12710-188">For example, a section with a maximum value of 1 is composed of only one bit, whereas a section with a maximum value of 5 is composed of three bits.</span></span> <span data-ttu-id="12710-189">만들 수는 <xref:System.Collections.Specialized.BitVector32.Section> 1 부울 값을 토대로 최대값이 적용 된 있으므로 저장할 수 있으므로 정수 및 부울 같은 <xref:System.Collections.Specialized.BitVector32>합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-189">You can create a <xref:System.Collections.Specialized.BitVector32.Section> with a maximum value of 1 to serve as a Boolean, thereby allowing you to store integers and Booleans in the same <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="12710-190">C# 언어의 키워드를 사용 하 여 구현 하는 대신 인덱서를 정의 하는 <xref:System.Collections.Specialized.BitVector32.Item%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="12710-190">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.BitVector32.Item%2A> property.</span></span> <span data-ttu-id="12710-191">Visual Basic에서는 동일한 인덱싱 기능을 제공하는 <xref:System.Collections.Specialized.BitVector32.Item%2A>을 기본 속성으로 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-191">Visual Basic implements <xref:System.Collections.Specialized.BitVector32.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="12710-192">이 속성의 값을 검색 하 하는 것은 o (1) 연산입니다. o (1) 작업 이기도 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-192">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)" />
        <altmember cref="T:System.Collections.Specialized.BitVector32.Section" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public bool this[int bit] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.BitVector32.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(bit As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool default[int] { bool get(int bit); void set(int bit, bool value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : bool with get, set" Usage="System.Collections.Specialized.BitVector32.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bit">
          <span data-ttu-id="12710-193">A mask that indicates the bit to get or set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-193">A mask that indicates the bit to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12710-194">Gets or sets the state of the bit flag indicated by the specified mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-194">Gets or sets the state of the bit flag indicated by the specified mask.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12710-195">
            <see langword="true" /> 지정한 비트 플래그 (1); 경우 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-195">
              <see langword="true" /> if the specified bit flag is on (1); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12710-196"><xref:System.Collections.Specialized.BitVector32.Item%2A> [섹션] 속성은에 대 한 인덱서는 <xref:System.Collections.Specialized.BitVector32> 섹션으로 설정 된 및 <xref:System.Collections.Specialized.BitVector32.Item%2A> [int] 속성은 인덱스에 대 한는 <xref:System.Collections.Specialized.BitVector32> 에 비트 플래그 설정 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-196">The <xref:System.Collections.Specialized.BitVector32.Item%2A> [Section] property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as sections, and the <xref:System.Collections.Specialized.BitVector32.Item%2A> [int] property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as bit flags.</span></span>  
  
 <span data-ttu-id="12710-197">이 속성을 사용 하면 한 <xref:System.Collections.Specialized.BitVector32> 를으로 설정 된 섹션에는 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="12710-197">Using this property on a <xref:System.Collections.Specialized.BitVector32> that is set up as sections might cause unexpected results.</span></span>  
  
 <span data-ttu-id="12710-198">C# 언어의 키워드를 사용 하 여 구현 하는 대신 인덱서를 정의 하는 <xref:System.Collections.Specialized.BitVector32.Item%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="12710-198">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.BitVector32.Item%2A> property.</span></span> <span data-ttu-id="12710-199">Visual Basic에서는 동일한 인덱싱 기능을 제공하는 <xref:System.Collections.Specialized.BitVector32.Item%2A>을 기본 속성으로 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-199">Visual Basic implements <xref:System.Collections.Specialized.BitVector32.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="12710-200">이 속성의 값을 검색 하 하는 것은 o (1) 연산입니다. o (1) 작업 이기도 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-200">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.BitVector32.CreateMask" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="12710-201">Returns a string that represents a <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-201">Returns a string that represents a <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bitVector32.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="12710-202">Returns a string that represents the current <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-202">Returns a string that represents the current <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12710-203">A string that represents the current <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-203">A string that represents the current <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12710-204">이 메서드를 재정의 <xref:System.Object.ToString%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="12710-204">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="12710-205">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="12710-205">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (System.Collections.Specialized.BitVector32 value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Collections.Specialized.BitVector32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As BitVector32) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Collections::Specialized::BitVector32 value);" />
      <MemberSignature Language="F#" Value="static member ToString : System.Collections.Specialized.BitVector32 -&gt; string" Usage="System.Collections.Specialized.BitVector32.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Specialized.BitVector32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="12710-206">The <see cref="T:System.Collections.Specialized.BitVector32" /> to represent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-206">The <see cref="T:System.Collections.Specialized.BitVector32" /> to represent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12710-207">Returns a string that represents the specified <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-207">Returns a string that represents the specified <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12710-208">A string that represents the specified <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12710-208">A string that represents the specified <see cref="T:System.Collections.Specialized.BitVector32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12710-209">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="12710-209">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
  </Members>
</Type>