<Type Name="StringCollection" FullName="System.Collections.Specialized.StringCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fdc2078f4de530d41e3a31aac8b914b958b4e55c" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39951375" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.StringCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class StringCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type StringCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2a1c9-101">문자열 컬렉션을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a1c9-101">Represents a collection of strings.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-102"><xref:System.Collections.Specialized.StringCollection> 허용 `null` 유효한 값으로 중복 요소를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-102"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="2a1c9-103">문자열 비교 대/소문자를 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-103">String comparisons are case-sensitive.</span></span>  
  
 <span data-ttu-id="2a1c9-104">이 컬렉션의 요소는 정수 인덱스를 사용 하 여 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-104">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="2a1c9-105">이 컬렉션의 인덱스는 0부터 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-105">Indexes in this collection are zero-based.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a1c9-106">다양 한 속성 및 메서드는 다음 코드 예제에서는 <xref:System.Collections.Specialized.StringCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-106">The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/stringcollection.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/stringcollection.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/stringcollection.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="2a1c9-107">공용 정적 (<see langword="Shared" /> Visual Basic의)이 형식의 멤버는 스레드로부터 안전 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a1c9-107">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="2a1c9-108">인터페이스 멤버는 스레드로부터 안전하지 않습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a1c9-108">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="2a1c9-109">이 구현은 동기화를 제공 하지 않습니다 스레드로부터 안전한 래퍼를 <see cref="T:System.Collections.Specialized.StringCollection" />, 파생된 클래스의 자체 동기화 된 버전을 만들 수 있지만 <see cref="T:System.Collections.Specialized.StringCollection" /> 사용 하 여를 <see cref="P:System.Collections.Specialized.StringCollection.SyncRoot" /> 속성.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a1c9-109">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.Specialized.StringCollection" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.Specialized.StringCollection" /> using the <see cref="P:System.Collections.Specialized.StringCollection.SyncRoot" /> property.</span>
      </span>
      <span data-ttu-id="2a1c9-110">컬렉션을 열거 되지 본질적으로 스레드로부터 안전한 프로시저가 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a1c9-110">Enumerating through a collection is intrinsically not a thread safe procedure.</span>
      </span>
      <span data-ttu-id="2a1c9-111">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a1c9-111">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="2a1c9-112">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a1c9-112">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a1c9-113">
            <see cref="T:System.Collections.Specialized.StringCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-113">Initializes a new instance of the <see cref="T:System.Collections.Specialized.StringCollection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-114">이 생성자는 o (1) 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-114">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; int" Usage="stringCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2a1c9-115">
            <see cref="T:System.Collections.Specialized.StringCollection" />의 끝에 추가할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-115">The string to add to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
          <span data-ttu-id="2a1c9-116">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-116">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a1c9-117">문자열을 <see cref="T:System.Collections.Specialized.StringCollection" />의 끝에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-117">Adds a string to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a1c9-118">새 요소가 삽입된 인덱스이며 0부터 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-118">The zero-based index at which the new element is inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-119"><xref:System.Collections.Specialized.StringCollection> 허용 `null` 유효한 값으로 중복 요소를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-119"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="2a1c9-120">경우 <xref:System.Collections.Specialized.StringCollection.Count%2A> 작습니다 용량 보다이 메서드는 o (1) 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-120">If <xref:System.Collections.Specialized.StringCollection.Count%2A> is less than the capacity, this method is an O(1) operation.</span></span> <span data-ttu-id="2a1c9-121">이 메서드는 O가 용량을 늘려야 하는 새 요소를 수용할 수 있도록 하는 경우 (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.StringCollection.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-121">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a1c9-122">새 요소를 추가 하는 다음 코드 예제는 <xref:System.Collections.Specialized.StringCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-122">The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CPP/stringcollectionadd.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CS/stringcollectionadd.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/VB/stringcollectionadd.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])" />
        <altmember cref="P:System.Collections.Specialized.StringCollection.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::String ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string[] -&gt; unit" Usage="stringCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2a1c9-123">
            <see cref="T:System.Collections.Specialized.StringCollection" />의 끝에 추가할 문자열의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-123">An array of strings to add to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
          <span data-ttu-id="2a1c9-124">배열 자체는 <see langword="null" />일 수가 없지만 <see langword="null" />인 요소를 포함할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-124">The array itself can not be <see langword="null" /> but it can contain elements that are <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a1c9-125">문자열 배열의 요소를 <see cref="T:System.Collections.Specialized.StringCollection" />의 끝에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-125">Copies the elements of a string array to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-126"><xref:System.Collections.Specialized.StringCollection> 허용 `null` 유효한 값으로 중복 요소를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-126"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="2a1c9-127">경우는 <xref:System.Collections.Specialized.StringCollection> 용량을 늘리지 않고도 새 요소를 수용할 수 있는,이 메서드는 O (`n`) 작업을 여기서 `n` 추가할 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-127">If the <xref:System.Collections.Specialized.StringCollection> can accommodate the new elements without increasing the capacity, this method is an O(`n`) operation, where `n` is the number of elements to be added.</span></span> <span data-ttu-id="2a1c9-128">용량에 새 요소에 맞게 늘어날 수 해야 하는 경우이 메서드는 O를 됩니다 (`n` + `m`) 작업을 여기서 `n` 요소를 추가할 수는 및 `m` 는 <xref:System.Collections.Specialized.StringCollection.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-128">If the capacity needs to be increased to accommodate the new elements, this method becomes an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a1c9-129">새 요소를 추가 하는 다음 코드 예제는 <xref:System.Collections.Specialized.StringCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-129">The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CPP/stringcollectionadd.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CS/stringcollectionadd.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/VB/stringcollectionadd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a1c9-130">
            <paramref name="value" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-130">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Specialized.StringCollection.Add(System.String)" />
        <altmember cref="P:System.Collections.Specialized.StringCollection.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="stringCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a1c9-131">
            <see cref="T:System.Collections.Specialized.StringCollection" />에서 문자열을 모두 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-131">Removes all the strings from the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-132"><xref:System.Collections.Specialized.StringCollection.Count%2A> 가 0으로 설정 하 고 컬렉션의 요소에서 다른 개체에 대 한 참조도 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-132"><xref:System.Collections.Specialized.StringCollection.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="2a1c9-133">이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.StringCollection.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-133">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a1c9-134">다음 코드 예제에서 요소를 제거 합니다 <xref:System.Collections.Specialized.StringCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-134">The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CPP/stringcollectionremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CS/stringcollectionremove.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/VB/stringcollectionremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="stringCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2a1c9-135">
            <see cref="T:System.Collections.Specialized.StringCollection" />에서 찾을 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-135">The string to locate in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
          <span data-ttu-id="2a1c9-136">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-136">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a1c9-137">지정한 문자열이 <see cref="T:System.Collections.Specialized.StringCollection" />에 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-137">Determines whether the specified string is in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a1c9-138">
            <see langword="true" />가 <paramref name="value" />에 있으면 <see cref="T:System.Collections.Specialized.StringCollection" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-138">
              <see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Collections.Specialized.StringCollection" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-139"><xref:System.Collections.Specialized.StringCollection.Contains%2A> 메서드 작업을 계속 수행 하기 전에 문자열의 존재를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-139">The <xref:System.Collections.Specialized.StringCollection.Contains%2A> method can confirm the existence of a string before performing further operations.</span></span>  
  
 <span data-ttu-id="2a1c9-140">이 메서드를 호출 하 여 같은지 확인 <xref:System.Object.Equals%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-140">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2a1c9-141">문자열 비교 대/소문자를 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-141">String comparisons are case-sensitive.</span></span>  
  
 <span data-ttu-id="2a1c9-142">이 메서드는; 선형 검색을 수행합니다. 따라서이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.StringCollection.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-142">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 <span data-ttu-id="2a1c9-143">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 <xref:System.Object.Equals%2A> 하 고 <xref:System.IComparable.CompareTo%2A> 메서드를 `item` 항목이 있는지 여부를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-143">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="2a1c9-144">.NET Framework의 이전 버전을 사용 하 여이 결정 했습니다 합니다 <xref:System.Object.Equals%2A> 및 <xref:System.IComparable.CompareTo%2A> 의 메서드는 `item` 컬렉션의 개체에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-144">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a1c9-145">다음 코드 예제에서는 검색 된 <xref:System.Collections.Specialized.StringCollection> 요소에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-145">The following code example searches the <xref:System.Collections.Specialized.StringCollection> for an element.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/CPP/stringcollectioncontains.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/CS/stringcollectioncontains.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/VB/stringcollectioncontains.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (string[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(string[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As String(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::String ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : string[] * int -&gt; unit" Usage="stringCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="2a1c9-146">
            <see cref="T:System.Collections.Specialized.StringCollection" />에서 복사된 요소의 대상인 1차원 문자열 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-146">The one-dimensional array of strings that is the destination of the elements copied from <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
          <span data-ttu-id="2a1c9-147">
            <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-147">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2a1c9-148">
            <c>배열</c>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-148">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a1c9-149">대상 배열의 지정한 인덱스에서 시작하여 전체 <see cref="T:System.Collections.Specialized.StringCollection" /> 값을 1차원 문자열 배열에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-149">Copies the entire <see cref="T:System.Collections.Specialized.StringCollection" /> values to a one-dimensional array of strings, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-150">지정된 된 배열의 호환 되는 형식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-150">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="2a1c9-151">요소에 복사 됩니다는 <xref:System.Array> 는 동일한 순서로 열거자를 <xref:System.Collections.Specialized.StringCollection> 반복을 <xref:System.Collections.Specialized.StringCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-151">The elements are copied to the <xref:System.Array> in the same order in which the enumerator of the <xref:System.Collections.Specialized.StringCollection> iterates through the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 <span data-ttu-id="2a1c9-152">이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.StringCollection.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-152">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a1c9-153">다음 코드 예제에서는 복사본을 <xref:System.Collections.Specialized.StringCollection> 를 배열 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-153">The following code example copies a <xref:System.Collections.Specialized.StringCollection> to an array.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/CPP/stringcollectioncopyto.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/CS/stringcollectioncopyto.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/VB/stringcollectioncopyto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a1c9-154">
            <paramref name="array" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-154">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2a1c9-155">
            <paramref name="index" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-155">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2a1c9-156">
            <paramref name="array" />가 다차원 배열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-156">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="2a1c9-157">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-157">-or-</span>
          </span>
          <span data-ttu-id="2a1c9-158">소스 <see cref="T:System.Collections.Specialized.StringCollection" />의 요소 수가 대상 <paramref name="array" />의 <paramref name="index" />부터 끝까지 사용 가능한 공간보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-158">The number of elements in the source <see cref="T:System.Collections.Specialized.StringCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="2a1c9-159">소스 <see cref="T:System.Collections.Specialized.StringCollection" />의 형식을 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-159">The type of the source <see cref="T:System.Collections.Specialized.StringCollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Array" />
        <altmember cref="M:System.Collections.Specialized.StringCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Specialized.StringCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a1c9-160">
            <see cref="T:System.Collections.Specialized.StringCollection" />에 포함된 문자열 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-160">Gets the number of strings contained in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a1c9-161">
            <see cref="T:System.Collections.Specialized.StringCollection" />에 포함된 문자열 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-161">The number of strings contained in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-162">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-162">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a1c9-163">다음 코드 예제에서는 복사본을 <xref:System.Collections.Specialized.StringCollection> 를 배열 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-163">The following code example copies a <xref:System.Collections.Specialized.StringCollection> to an array.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/CPP/stringcollectioncopyto.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/CS/stringcollectioncopyto.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/VB/stringcollectioncopyto.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Specialized.StringEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As StringEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::StringEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Specialized.StringEnumerator" Usage="stringCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a1c9-164">
            <see cref="T:System.Collections.Specialized.StringEnumerator" />을 반복하는 <see cref="T:System.Collections.Specialized.StringCollection" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-164">Returns a <see cref="T:System.Collections.Specialized.StringEnumerator" /> that iterates through the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a1c9-165">
            <see cref="T:System.Collections.Specialized.StringEnumerator" />에 대한 <see cref="T:System.Collections.Specialized.StringCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-165">A <see cref="T:System.Collections.Specialized.StringEnumerator" /> for the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-166">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="2a1c9-166">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="2a1c9-167">@FSHO1@C# 언어의 `foreach` 문(Visual Basic의 경우 `for each`)은 열거자의 복잡성을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-167">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="2a1c9-168">그러므로 열거자를 직접 조작하는 대신 `foreach`를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-168">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="2a1c9-169">열거자를 사용하여 컬렉션의 데이터를 읽을 수는 있지만 내부 컬렉션을 수정할 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-169">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2a1c9-170">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-170">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2a1c9-171"><xref:System.Collections.Specialized.StringEnumerator.Reset%2A>을 실행하면 열거자가 이 위치로 복원됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-171"><xref:System.Collections.Specialized.StringEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="2a1c9-172">이 위치에서 <xref:System.Collections.Specialized.StringEnumerator.Current%2A>는 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-172">At this position, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="2a1c9-173">따라서 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>의 값을 읽기 전에 <xref:System.Collections.Specialized.StringEnumerator.Current%2A>를 호출하여 열거자를 해당 컬렉션의 첫 번째 요소로 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-173">Therefore, you must call <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="2a1c9-174"><xref:System.Collections.Specialized.StringEnumerator.Current%2A>에서는 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> 또는 <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>이 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-174"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> returns the same object until either <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> or <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="2a1c9-175"><xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>는 <xref:System.Collections.Specialized.StringEnumerator.Current%2A>를 다음 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-175"><xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> sets <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="2a1c9-176">경우 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> 열거자를 컬렉션의 끝 컬렉션의 마지막 요소 뒤에 배치 되는 전달 하 고 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-176">If <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="2a1c9-177">열거자가 있는 경우이 위치에 대 한 후속 호출은 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> 반환할 수도 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-177">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="2a1c9-178">마지막으로 호출 하는 경우 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> 반환 `false`, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> 정의 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-178">If the last call to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="2a1c9-179"><xref:System.Collections.Specialized.StringEnumerator.Current%2A>를 컬렉션의 첫째 요소에 다시 설정하려면 <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>을 호출한 뒤 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-179">To set <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> followed by <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="2a1c9-180">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-180">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2a1c9-181">컬렉션에 대해 변경 내용을 수행하면(예: 요소 추가, 수정 또는 삭제) 열거자는 복구 불가능하게 무효화되고 해당 동작은 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-181">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="2a1c9-182">열거자는 컬렉션에 독점적으로 액세스할 수 있는 권한이 없으므로 컬렉션을 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-182">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span>  <span data-ttu-id="2a1c9-183">열거 동안 스레드 보안을 보장하려면 전체 열거 동안 컬렉션을 잠그면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-183">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="2a1c9-184">여러 스레드에서 컬렉션에 액세스하여 읽고 쓸 수 있도록 허용하려면 사용자 지정 동기화를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-184">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="2a1c9-185">이 방법은 O(1) 작업에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-185">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string -&gt; int" Usage="stringCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2a1c9-186">찾을 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-186">The string to locate.</span>
          </span>
          <span data-ttu-id="2a1c9-187">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-187">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a1c9-188">지정한 문자열을 검색하고 <see cref="T:System.Collections.Specialized.StringCollection" /> 내에서 처음 나오는 0부터 시작하는 인덱스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-188">Searches for the specified string and returns the zero-based index of the first occurrence within the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a1c9-189">
            <see cref="T:System.Collections.Specialized.StringCollection" />에서 <paramref name="value" />이 처음 나오는 인덱스(0부터 시작)이거나, 해당 항목이 없으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-189">The zero-based index of the first occurrence of <paramref name="value" /> in the <see cref="T:System.Collections.Specialized.StringCollection" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-190">이 메서드를 호출 하 여 같은지 확인 <xref:System.Object.Equals%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-190">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2a1c9-191">문자열 비교 대/소문자를 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-191">String comparisons are case-sensitive.</span></span>  
  
 <span data-ttu-id="2a1c9-192">이 메서드는; 선형 검색을 수행합니다. 따라서이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.StringCollection.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-192">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 <span data-ttu-id="2a1c9-193">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 <xref:System.Object.Equals%2A> 하 고 <xref:System.IComparable.CompareTo%2A> 메서드를 `item` 항목이 있는지 여부를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-193">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="2a1c9-194">.NET Framework의 이전 버전을 사용 하 여이 결정 했습니다 합니다 <xref:System.Object.Equals%2A> 및 <xref:System.IComparable.CompareTo%2A> 의 메서드는 `item` 컬렉션의 개체에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-194">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a1c9-195">다음 코드 예제에서는 검색 된 <xref:System.Collections.Specialized.StringCollection> 요소에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-195">The following code example searches the <xref:System.Collections.Specialized.StringCollection> for an element.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/CPP/stringcollectioncontains.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/CS/stringcollectioncontains.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/VB/stringcollectioncontains.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.StringCollection.Contains(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; unit" Usage="stringCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="2a1c9-196">
            <c>값</c>이 삽입된 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-196">The zero-based index at which <c>value</c> is inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2a1c9-197">삽입할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-197">The string to insert.</span>
          </span>
          <span data-ttu-id="2a1c9-198">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-198">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a1c9-199">지정한 인덱스에 있는 <see cref="T:System.Collections.Specialized.StringCollection" />에 문자열을 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-199">Inserts a string into the <see cref="T:System.Collections.Specialized.StringCollection" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-200">중복 문자열에서 허용 됩니다 <xref:System.Collections.Specialized.StringCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-200">Duplicate strings are allowed in <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 <span data-ttu-id="2a1c9-201">하는 경우 `index` 값과 같음 <xref:System.Collections.Specialized.StringCollection.Count%2A>를 `value` 끝에 추가 됩니다 <xref:System.Collections.Specialized.StringCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-201">If `index` is equal to <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` is added to the end of <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 <span data-ttu-id="2a1c9-202">목록처럼 연속된 요소로 구성된 컬렉션에서는 삽입 지점 다음에 있는 요소를 아래로 이동하여 새 요소로 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-202">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="2a1c9-203">컬렉션에 인덱스가 지정된 경우 이동되는 요소의 인덱스도 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-203">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="2a1c9-204">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화되어 있는 컬렉션에는 이러한 동작이 적용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-204">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="2a1c9-205">이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.StringCollection.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-205">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a1c9-206">새 요소를 추가 하는 다음 코드 예제는 <xref:System.Collections.Specialized.StringCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-206">The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CPP/stringcollectionadd.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CS/stringcollectionadd.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/VB/stringcollectionadd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2a1c9-207">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-207">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2a1c9-208">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-208">-or-</span>
          </span>
          <span data-ttu-id="2a1c9-209">
            <paramref name="index" />이 <see cref="P:System.Collections.Specialized.StringCollection.Count" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-209">
              <paramref name="index" /> greater than <see cref="P:System.Collections.Specialized.StringCollection.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
        <altmember cref="M:System.Collections.Specialized.StringCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.Specialized.StringCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a1c9-210">
            <see cref="T:System.Collections.Specialized.StringCollection" />가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-210">Gets a value indicating whether the <see cref="T:System.Collections.Specialized.StringCollection" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a1c9-211">이 속성은 항상 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-211">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-212"><xref:System.Collections.Specialized.StringCollection> 구현 된 <xref:System.Collections.Specialized.StringCollection.IsReadOnly%2A> 속성에서 필요 하므로 <xref:System.Collections.IList?displayProperty=nameWithType> 인터페이스.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-212"><xref:System.Collections.Specialized.StringCollection> implements the <xref:System.Collections.Specialized.StringCollection.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="2a1c9-213">읽기 전용 컬렉션에서는 컬렉션을 만든 다음에 요소를 추가, 제거 또는 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-213">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="2a1c9-214">읽기 전용 컬렉션은 지정 된 컬렉션을 수정 하지 못하도록 하는 래퍼 컬렉션 따라서 기본 컬렉션이 변경 되 면 읽기 전용 컬렉션에 이러한 내용을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-214">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="2a1c9-215"><xref:System.Collections.Specialized.StringCollection> 인스턴스는 항상 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-215">A <xref:System.Collections.Specialized.StringCollection> instance is always writable.</span></span>  
  
 <span data-ttu-id="2a1c9-216">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-216">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.Specialized.StringCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a1c9-217">
            <see cref="T:System.Collections.Specialized.StringCollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-217">Gets a value indicating whether access to the <see cref="T:System.Collections.Specialized.StringCollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a1c9-218">이 속성은 항상 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-218">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-219"><xref:System.Collections.Specialized.StringCollection> 구현 된 <xref:System.Collections.Specialized.StringCollection.IsSynchronized%2A> 속성에서 필요 하므로 <xref:System.Collections.ICollection> 인터페이스.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-219"><xref:System.Collections.Specialized.StringCollection> implements the <xref:System.Collections.Specialized.StringCollection.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection> interface.</span></span>  
  
 <span data-ttu-id="2a1c9-220">컬렉션을 열거 되지 본질적으로 스레드로부터 안전한 프로시저가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-220">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="2a1c9-221">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-221">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="2a1c9-222">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-222">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="2a1c9-223">다음 코드 예제에 사용 하 여 컬렉션을 잠그는 방법을 보여 줍니다는 <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> 열거 하는 동안:</span><span class="sxs-lookup"><span data-stu-id="2a1c9-223">The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/remarks.cpp#2)]
 [!code-csharp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/remarks.cs#2)]
 [!code-vb[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/remarks.vb#2)]  
  
 <span data-ttu-id="2a1c9-224">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-224">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.StringCollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[int] { System::String ^ get(int index); void set(int index, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string with get, set" Usage="System.Collections.Specialized.StringCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="2a1c9-225">가져오거나 설정할 엔트리 인덱스이며 0부터 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-225">The zero-based index of the entry to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a1c9-226">지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-226">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a1c9-227">지정한 인덱스의 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-227">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-228">이 속성은 `myCollection[index]` 구문을 사용하여 컬렉션의 특정 요소에 액세스하는 기능을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-228">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="2a1c9-229"><xref:System.Collections.Specialized.StringCollection> 허용 `null` 유효한 값으로 중복 요소를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-229"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="2a1c9-230">C# 언어 키워드를 사용 하 여 구현 하는 대신 인덱서를 정의 하는 <xref:System.Collections.Specialized.StringCollection.Item%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-230">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.StringCollection.Item%2A> property.</span></span> <span data-ttu-id="2a1c9-231">Visual Basic에서는 동일한 인덱싱 기능을 제공하는 <xref:System.Collections.Specialized.StringCollection.Item%2A>을 기본 속성으로 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-231">Visual Basic implements <xref:System.Collections.Specialized.StringCollection.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="2a1c9-232">이 속성의 값을 검색 하는 것은 O(1) 작업; O(1) 작업 이기도 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-232">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2a1c9-233">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-233">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2a1c9-234">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-234">-or-</span>
          </span>
          <span data-ttu-id="2a1c9-235">
            <paramref name="index" />가 <see cref="P:System.Collections.Specialized.StringCollection.Count" />보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-235">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Specialized.StringCollection.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="stringCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2a1c9-236">
            <see cref="T:System.Collections.Specialized.StringCollection" />에서 제거할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-236">The string to remove from the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
          <span data-ttu-id="2a1c9-237">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-237">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a1c9-238">
            <see cref="T:System.Collections.Specialized.StringCollection" />에서 맨 처음 발견되는 특정 문자열을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-238">Removes the first occurrence of a specific string from the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-239">중복 문자열에서 허용 됩니다 <xref:System.Collections.Specialized.StringCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-239">Duplicate strings are allowed in <xref:System.Collections.Specialized.StringCollection>.</span></span> <span data-ttu-id="2a1c9-240">첫 번째 일치 항목만 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-240">Only the first occurrence is removed.</span></span> <span data-ttu-id="2a1c9-241">지정된 된 문자열의 모든 항목을 제거 하려면 사용 하 여 `RemoveAt(IndexOf(value))` 하면서 반복적으로 <xref:System.Collections.Specialized.StringCollection.IndexOf%2A> -1을 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-241">To remove all occurrences of the specified string, use `RemoveAt(IndexOf(value))` repeatedly while <xref:System.Collections.Specialized.StringCollection.IndexOf%2A> does not return -1.</span></span>  
  
 <span data-ttu-id="2a1c9-242">경우는 <xref:System.Collections.Specialized.StringCollection> 지정된 된 개체를 포함 하지 않습니다는 <xref:System.Collections.Specialized.StringCollection> 그대로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-242">If the <xref:System.Collections.Specialized.StringCollection> does not contain the specified object, the <xref:System.Collections.Specialized.StringCollection> remains unchanged.</span></span> <span data-ttu-id="2a1c9-243">예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-243">No exception is thrown.</span></span>  
  
 <span data-ttu-id="2a1c9-244">목록처럼 연속된 요소로 구성된 컬렉션에서는 제거된 요소 다음에 있는 요소를 위로 이동하여 빈 자리를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-244">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="2a1c9-245">컬렉션에 인덱스가 지정된 경우 이동되는 요소의 인덱스도 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-245">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="2a1c9-246">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화되어 있는 컬렉션에는 이러한 동작이 적용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-246">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="2a1c9-247">이 메서드를 호출 하 여 같은지 확인 <xref:System.Object.Equals%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-247">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2a1c9-248">문자열 비교 대/소문자를 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-248">String comparisons are case-sensitive.</span></span>  
  
 <span data-ttu-id="2a1c9-249">이 메서드는; 선형 검색을 수행합니다. 따라서이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.StringCollection.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-249">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a1c9-250">다음 코드 예제에서 요소를 제거 합니다 <xref:System.Collections.Specialized.StringCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-250">The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CPP/stringcollectionremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CS/stringcollectionremove.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/VB/stringcollectionremove.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="stringCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="2a1c9-251">제거할 문자열의 인덱스이며 0부터 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-251">The zero-based index of the string to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a1c9-252">
            <see cref="T:System.Collections.Specialized.StringCollection" />의 지정한 인덱스에 있는 문자열을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-252">Removes the string at the specified index of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-253">목록처럼 연속된 요소로 구성된 컬렉션에서는 제거된 요소 다음에 있는 요소를 위로 이동하여 빈 자리를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-253">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="2a1c9-254">컬렉션에 인덱스가 지정된 경우 이동되는 요소의 인덱스도 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-254">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="2a1c9-255">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화되어 있는 컬렉션에는 이러한 동작이 적용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-255">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="2a1c9-256">이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.StringCollection.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-256">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a1c9-257">다음 코드 예제에서 요소를 제거 합니다 <xref:System.Collections.Specialized.StringCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-257">The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CPP/stringcollectionremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CS/stringcollectionremove.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/VB/stringcollectionremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2a1c9-258">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-258">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2a1c9-259">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-259">-or-</span>
          </span>
          <span data-ttu-id="2a1c9-260">
            <paramref name="index" />가 <see cref="P:System.Collections.Specialized.StringCollection.Count" />보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-260">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Specialized.StringCollection.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.Specialized.StringCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a1c9-261">
            <see cref="T:System.Collections.Specialized.StringCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-261">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a1c9-262">
            <see cref="T:System.Collections.Specialized.StringCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-262">An object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-263">파생된 클래스의 동기화 된 버전을 제공할 수 있습니다 합니다 <xref:System.Collections.Specialized.StringCollection> 를 사용 하는 <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-263">Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.StringCollection> using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="2a1c9-264">동기화 하는 코드에서 작업을 수행 해야 합니다 <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> 의 합니다 <xref:System.Collections.Specialized.StringCollection>에서 직접는 <xref:System.Collections.Specialized.StringCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-264">The synchronizing code must perform operations on the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.StringCollection>, not directly on the <xref:System.Collections.Specialized.StringCollection>.</span></span> <span data-ttu-id="2a1c9-265">이렇게 하면 다른 개체에서 파생되는 컬렉션에 대해 적절한 작업이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-265">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="2a1c9-266">특히, 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화를 유지 관리는 <xref:System.Collections.Specialized.StringCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-266">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.StringCollection> object.</span></span>  
  
 <span data-ttu-id="2a1c9-267">컬렉션을 열거 되지 본질적으로 스레드로부터 안전한 프로시저가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-267">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="2a1c9-268">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-268">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="2a1c9-269">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-269">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="2a1c9-270">다음 코드 예제에 사용 하 여 컬렉션을 잠그는 방법을 보여 줍니다는 <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> 열거 하는 동안:</span><span class="sxs-lookup"><span data-stu-id="2a1c9-270">The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/remarks.cpp#2)]
 [!code-csharp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/remarks.cs#2)]
 [!code-vb[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/remarks.vb#2)]  
  
 <span data-ttu-id="2a1c9-271">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-271">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.StringCollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="2a1c9-272">
            <see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Collections.Specialized.StringCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-272">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
          <span data-ttu-id="2a1c9-273">
            <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-273">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2a1c9-274">
            <c>배열</c>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-274">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a1c9-275">대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Collections.Specialized.StringCollection" />을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-275">Copies the entire <see cref="T:System.Collections.Specialized.StringCollection" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-276">지정된 된 배열의 호환 되는 형식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-276">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="2a1c9-277">이 메서드는 <xref:System.Array.Copy%2A?displayProperty=nameWithType> 요소를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-277">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="2a1c9-278">이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.StringCollection.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-278">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a1c9-279">
            <paramref name="array" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-279">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2a1c9-280">
            <paramref name="index" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-280">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2a1c9-281">
            <paramref name="array" />가 다차원 배열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-281">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="2a1c9-282">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-282">-or-</span>
          </span>
          <span data-ttu-id="2a1c9-283">소스 <see cref="T:System.Collections.Specialized.StringCollection" />의 요소 수가 대상 <paramref name="array" />의 <paramref name="index" />부터 끝까지 사용 가능한 공간보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-283">The number of elements in the source <see cref="T:System.Collections.Specialized.StringCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="2a1c9-284">소스 <see cref="T:System.Collections.Specialized.StringCollection" />의 형식을 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-284">The type of the source <see cref="T:System.Collections.Specialized.StringCollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a1c9-285">
            <see cref="T:System.Collections.IEnumerator" />을 반복하는 <see cref="T:System.Collections.Specialized.StringCollection" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-285">Returns a <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a1c9-286">
            <see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Collections.Specialized.StringCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-286">A <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-287">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="2a1c9-287">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="2a1c9-288">@FSHO1@C# 언어의 `foreach` 문(Visual Basic의 경우 `for each`)은 열거자의 복잡성을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-288">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="2a1c9-289">그러므로 열거자를 직접 조작하는 대신 `foreach`를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-289">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="2a1c9-290">열거자를 사용하여 컬렉션의 데이터를 읽을 수는 있지만 내부 컬렉션을 수정할 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-290">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2a1c9-291">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-291">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2a1c9-292"><xref:System.Collections.IEnumerator.Reset%2A>을 실행하면 열거자가 이 위치로 복원됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-292"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="2a1c9-293">이 위치에서, 호출 <xref:System.Collections.IEnumerator.Current%2A> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-293">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="2a1c9-294">따라서 <xref:System.Collections.IEnumerator.MoveNext%2A>의 값을 읽기 전에 <xref:System.Collections.IEnumerator.Current%2A>를 호출하여 열거자를 해당 컬렉션의 첫 번째 요소로 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-294">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="2a1c9-295"><xref:System.Collections.IEnumerator.Current%2A>에서는 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A>이 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-295"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="2a1c9-296"><xref:System.Collections.IEnumerator.MoveNext%2A>는 <xref:System.Collections.IEnumerator.Current%2A>를 다음 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-296"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="2a1c9-297">경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 열거자를 컬렉션의 끝 컬렉션의 마지막 요소 뒤에 배치 되는 전달 하 고 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-297">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="2a1c9-298">열거자가 있는 경우이 위치에 대 한 후속 호출은 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환할 수도 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-298">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="2a1c9-299">마지막으로 호출 하는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`호출, <xref:System.Collections.IEnumerator.Current%2A> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-299">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="2a1c9-300"><xref:System.Collections.IEnumerator.Current%2A>를 컬렉션의 첫째 요소에 다시 설정하려면 <xref:System.Collections.IEnumerator.Reset%2A>을 호출한 뒤 <xref:System.Collections.IEnumerator.MoveNext%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-300">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="2a1c9-301">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-301">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2a1c9-302">변경에 추가 하는 등 컬렉션을 수정 하거나 요소를 삭제, 열거자가 복구할 유효 하지 않으며을 다음에 호출할 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A> throw는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-302">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="2a1c9-303">컬렉션 사이 수정 된 경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 하 고 <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> 열거자가 이미 무효화 된 경우에로 설정 되어 있는 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-303">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="2a1c9-304">열거자는 컬렉션에 독점적으로 액세스할 수 있는 권한이 없으므로 컬렉션을 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-304">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="2a1c9-305">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-305">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="2a1c9-306">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-306">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="2a1c9-307">이 방법은 O(1) 작업에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-307">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2a1c9-308">
            <see cref="T:System.Object" />의 끝에 추가할 <see cref="T:System.Collections.Specialized.StringCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-308">The <see cref="T:System.Object" /> to be added to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
          <span data-ttu-id="2a1c9-309">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-309">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a1c9-310">개체를 <see cref="T:System.Collections.Specialized.StringCollection" />의 끝 부분에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-310">Adds an object to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a1c9-311">
            <paramref name="value" />가 추가된 <see cref="T:System.Collections.Specialized.StringCollection" /> 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-311">The <see cref="T:System.Collections.Specialized.StringCollection" /> index at which the <paramref name="value" /> has been added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-312"><xref:System.Collections.Specialized.StringCollection> 허용 `null` 유효한 값으로 중복 요소를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-312"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="2a1c9-313">하는 경우 <xref:System.Collections.Specialized.StringCollection.Count%2A> 이미 용량과 용량의 <xref:System.Collections.Specialized.StringCollection> 자동으로 내부 배열을 다시 할당 하 여 증가 하는 새 요소가 추가 되기 전에 기존 요소를 새 배열에 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-313">If <xref:System.Collections.Specialized.StringCollection.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.StringCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="2a1c9-314">경우 <xref:System.Collections.Specialized.StringCollection.Count%2A> 작습니다 용량 보다이 메서드는 o (1) 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-314">If <xref:System.Collections.Specialized.StringCollection.Count%2A> is less than the capacity, this method is an O(1) operation.</span></span> <span data-ttu-id="2a1c9-315">이 메서드는 O가 용량을 늘려야 하는 새 요소를 수용할 수 있도록 하는 경우 (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.StringCollection.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-315">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2a1c9-316">
            <see cref="T:System.Collections.Specialized.StringCollection" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-316">The <see cref="T:System.Collections.Specialized.StringCollection" /> is read-only.</span>
          </span>
          <span data-ttu-id="2a1c9-317">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-317">-or-</span>
          </span>
          <span data-ttu-id="2a1c9-318">
            <see cref="T:System.Collections.Specialized.StringCollection" />가 고정 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-318">The <see cref="T:System.Collections.Specialized.StringCollection" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2a1c9-319">
            <see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.Specialized.StringCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-319">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
          <span data-ttu-id="2a1c9-320">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-320">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a1c9-321">
            <see cref="T:System.Collections.Specialized.StringCollection" />에 요소가 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-321">Determines whether an element is in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a1c9-322">
            <see langword="true" />가 <paramref name="value" />에 있으면 <see cref="T:System.Collections.Specialized.StringCollection" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-322">
              <see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Collections.Specialized.StringCollection" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-323">이 메서드를 호출 하 여 같은지 확인 <xref:System.Object.Equals%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-323">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2a1c9-324">이 메서드는; 선형 검색을 수행합니다. 따라서이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.StringCollection.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-324">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 <span data-ttu-id="2a1c9-325">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 <xref:System.Object.Equals%2A> 하 고 <xref:System.IComparable.CompareTo%2A> 메서드를 `item` 항목이 있는지 여부를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-325">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="2a1c9-326">.NET Framework의 이전 버전을 사용 하 여이 결정 했습니다 합니다 <xref:System.Object.Equals%2A> 및 <xref:System.IComparable.CompareTo%2A> 의 메서드는 `item` 컬렉션의 개체에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-326">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2a1c9-327">
            <see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.Specialized.StringCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-327">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
          <span data-ttu-id="2a1c9-328">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-328">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a1c9-329">지정한 <see cref="T:System.Object" />를 검색하고, 전체 <see cref="T:System.Collections.Specialized.StringCollection" /> 내에서 처음 나오는 0부터 시작하는 인덱스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-329">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a1c9-330">
            <paramref name="value" />가 있으면 전체 <see cref="T:System.Collections.Specialized.StringCollection" />에서 맨 처음 발견되는 값의 0부터 시작하는 인덱스이고, 그렇지 않으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-330">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.Specialized.StringCollection" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-331"><xref:System.Collections.Specialized.StringCollection> 검색은 앞으로 첫 번째 요소부터 마지막 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-331">The <xref:System.Collections.Specialized.StringCollection> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="2a1c9-332">이 메서드를 호출 하 여 같은지 확인 <xref:System.Object.Equals%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-332">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2a1c9-333">이 메서드는; 선형 검색을 수행합니다. 따라서이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.StringCollection.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-333">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 <span data-ttu-id="2a1c9-334">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 <xref:System.Object.Equals%2A> 하 고 <xref:System.IComparable.CompareTo%2A> 메서드를 `item` 항목이 있는지 여부를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-334">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="2a1c9-335">.NET Framework의 이전 버전을 사용 하 여이 결정 했습니다 합니다 <xref:System.Object.Equals%2A> 및 <xref:System.IComparable.CompareTo%2A> 의 메서드는 `item` 컬렉션의 개체에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-335">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="2a1c9-336">
            <c>value</c>를 삽입할 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-336">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2a1c9-337">삽입할 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-337">The <see cref="T:System.Object" /> to insert.</span>
          </span>
          <span data-ttu-id="2a1c9-338">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-338">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a1c9-339">
            <see cref="T:System.Collections.Specialized.StringCollection" />의 지정된 인덱스에 요소를 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-339">Inserts an element into the <see cref="T:System.Collections.Specialized.StringCollection" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-340">하는 경우 <xref:System.Collections.Specialized.StringCollection.Count%2A> 이미 용량과 용량의 <xref:System.Collections.Specialized.StringCollection> 자동으로 내부 배열을 다시 할당 하 여 증가 하는 새 요소가 추가 되기 전에 기존 요소를 새 배열에 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-340">If <xref:System.Collections.Specialized.StringCollection.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.StringCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="2a1c9-341">하는 경우 `index` 값과 같음 <xref:System.Collections.Specialized.StringCollection.Count%2A>를 `value` 끝에 추가 됩니다 <xref:System.Collections.Specialized.StringCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-341">If `index` is equal to <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` is added to the end of <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 <span data-ttu-id="2a1c9-342">목록처럼 연속된 요소로 구성된 컬렉션에서는 삽입 지점 다음에 있는 요소를 아래로 이동하여 새 요소로 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-342">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="2a1c9-343">컬렉션에 인덱스가 지정된 경우 이동되는 요소의 인덱스도 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-343">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="2a1c9-344">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화되어 있는 컬렉션에는 이러한 동작이 적용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-344">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="2a1c9-345">이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.StringCollection.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-345">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2a1c9-346">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-346">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2a1c9-347">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-347">-or-</span>
          </span>
          <span data-ttu-id="2a1c9-348">
            <paramref name="index" />가 <see cref="P:System.Collections.Specialized.StringCollection.Count" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-348">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.Specialized.StringCollection.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2a1c9-349">
            <see cref="T:System.Collections.Specialized.StringCollection" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-349">The <see cref="T:System.Collections.Specialized.StringCollection" /> is read-only.</span>
          </span>
          <span data-ttu-id="2a1c9-350">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-350">-or-</span>
          </span>
          <span data-ttu-id="2a1c9-351">
            <see cref="T:System.Collections.Specialized.StringCollection" />가 고정 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-351">The <see cref="T:System.Collections.Specialized.StringCollection" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a1c9-352">
            <see cref="T:System.Collections.Specialized.StringCollection" /> 개체의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-352">Gets a value indicating whether the <see cref="T:System.Collections.Specialized.StringCollection" /> object has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a1c9-353">
            <see cref="T:System.Collections.Specialized.StringCollection" /> 개체의 크기가 고정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-353">
              <see langword="true" /> if the <see cref="T:System.Collections.Specialized.StringCollection" /> object has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2a1c9-354">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-354">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-355">크기가 고정된 된 컬렉션인 컬렉션 만들어지기는 하지만 기존 요소를 수정할 수는 후에 추가 하거나 제거할 요소의 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-355">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="2a1c9-356">크기가 고정된 된 컬렉션은 요소; 추가 및 제거를 방지 하는 래퍼를 지정 된 컬렉션 따라서 기본 컬렉션 추가 또는 제거 요소를 포함 하 여 변경 된 경우 고정 크기 컬렉션에 해당 내용을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-356">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="2a1c9-357">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-357">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a1c9-358">
            <see cref="T:System.Collections.Specialized.StringCollection" /> 개체가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-358">Gets a value indicating whether the <see cref="T:System.Collections.Specialized.StringCollection" /> object is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a1c9-359">
            <see cref="T:System.Collections.Specialized.StringCollection" /> 개체가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-359">
              <see langword="true" /> if the <see cref="T:System.Collections.Specialized.StringCollection" /> object is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2a1c9-360">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-360">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-361">읽기 전용 컬렉션에서는 컬렉션을 만든 다음에 요소를 추가, 제거 또는 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-361">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="2a1c9-362">읽기 전용 컬렉션은 지정 된 컬렉션을 수정 하지 못하도록 하는 래퍼 컬렉션 따라서 기본 컬렉션이 변경 되 면 읽기 전용 컬렉션에 이러한 내용을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-362">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="2a1c9-363">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-363">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="2a1c9-364">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-364">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a1c9-365">지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-365">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a1c9-366">지정한 인덱스의 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-366">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-367">이 구문을 사용 하 여 컬렉션의 특정 요소에 액세스 하는 기능을 제공 합니다. `myCollection[index]`합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-367">Thismethod provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="2a1c9-368">C# 언어를 사용 하는 [이](~/docs/csharp/language-reference/keywords/this.md) 구현 하는 대신 인덱서를 정의 하는 키워드는 <xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-368">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A> property.</span></span> <span data-ttu-id="2a1c9-369">Visual Basic에서는 동일한 인덱싱 기능을 제공하는 <xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A>을 기본 속성으로 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-369">Visual Basic implements <xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="2a1c9-370"><xref:System.Collections.Specialized.StringCollection> 허용 `null` 유효한 값으로 중복 요소를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-370"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="2a1c9-371">이 속성의 값을 검색 하는 것은 O(1) 작업; O(1) 작업 이기도 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-371">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2a1c9-372">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-372">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2a1c9-373">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-373">-or-</span>
          </span>
          <span data-ttu-id="2a1c9-374">
            <paramref name="index" />가 <see cref="P:System.Collections.Specialized.StringCollection.Count" />보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-374">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Specialized.StringCollection.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2a1c9-375">
            <see cref="T:System.Object" />에서 제거할 <see cref="T:System.Collections.Specialized.StringCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-375">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
          <span data-ttu-id="2a1c9-376">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-376">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a1c9-377">
            <see cref="T:System.Collections.Specialized.StringCollection" />에서 맨 처음 발견되는 특정 개체를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-377">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Specialized.StringCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a1c9-378">경우는 <xref:System.Collections.Specialized.StringCollection> 지정된 된 개체를 포함 하지 않습니다는 <xref:System.Collections.Specialized.StringCollection> 그대로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-378">If the <xref:System.Collections.Specialized.StringCollection> does not contain the specified object, the <xref:System.Collections.Specialized.StringCollection> remains unchanged.</span></span> <span data-ttu-id="2a1c9-379">예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-379">No exception is thrown.</span></span>  
  
 <span data-ttu-id="2a1c9-380">목록처럼 연속된 요소로 구성된 컬렉션에서는 제거된 요소 다음에 있는 요소를 위로 이동하여 빈 자리를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-380">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="2a1c9-381">컬렉션에 인덱스가 지정된 경우 이동되는 요소의 인덱스도 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-381">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="2a1c9-382">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화되어 있는 컬렉션에는 이러한 동작이 적용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-382">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="2a1c9-383">이 메서드를 호출 하 여 같은지 확인 <xref:System.Object.Equals%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-383">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2a1c9-384">이 메서드는; 선형 검색을 수행합니다. 따라서이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.StringCollection.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2a1c9-384">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2a1c9-385">
            <see cref="T:System.Collections.Specialized.StringCollection" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-385">The <see cref="T:System.Collections.Specialized.StringCollection" /> is read-only.</span>
          </span>
          <span data-ttu-id="2a1c9-386">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-386">-or-</span>
          </span>
          <span data-ttu-id="2a1c9-387">
            <see cref="T:System.Collections.Specialized.StringCollection" />가 고정 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a1c9-387">The <see cref="T:System.Collections.Specialized.StringCollection" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
      </Docs>
    </Member>
  </Members>
</Type>