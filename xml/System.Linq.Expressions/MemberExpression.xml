<Type Name="MemberExpression" FullName="System.Linq.Expressions.MemberExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c7bf963d5b41294603215eb53b8484350fda219" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36479093" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MemberExpression : System.Linq.Expressions.Expression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemberExpression extends System.Linq.Expressions.Expression" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.MemberExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class MemberExpression&#xA;Inherits Expression" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemberExpression : System::Linq::Expressions::Expression" />
  <TypeSignature Language="F#" Value="type MemberExpression = class&#xA;    inherit Expression" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Linq.Expressions.Expression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Linq.Expressions.Expression/MemberExpressionProxy))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0f496-101">필드 또는 속성에 대한 액세스를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0f496-101">Represents accessing a field or property.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f496-102">사용 하 여는 <xref:System.Linq.Expressions.Expression.Field%2A>, <xref:System.Linq.Expressions.Expression.Property%2A> 또는 <xref:System.Linq.Expressions.Expression.PropertyOrField%2A> 를 만드는 팩터리 메서드가 <xref:System.Linq.Expressions.MemberExpression>합니다.</span><span class="sxs-lookup"><span data-stu-id="0f496-102">Use the <xref:System.Linq.Expressions.Expression.Field%2A>, <xref:System.Linq.Expressions.Expression.Property%2A> or <xref:System.Linq.Expressions.Expression.PropertyOrField%2A> factory methods to create a <xref:System.Linq.Expressions.MemberExpression>.</span></span>  
  
 <span data-ttu-id="0f496-103">값은 <xref:System.Linq.Expressions.Expression.NodeType%2A> 속성은 <xref:System.Linq.Expressions.MemberExpression> 은 <xref:System.Linq.Expressions.ExpressionType.MemberAccess>합니다.</span><span class="sxs-lookup"><span data-stu-id="0f496-103">The value of the <xref:System.Linq.Expressions.Expression.NodeType%2A> property of a <xref:System.Linq.Expressions.MemberExpression> is <xref:System.Linq.Expressions.ExpressionType.MemberAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f496-104">다음 예제에서는 한 <xref:System.Linq.Expressions.MemberExpression> 필드 멤버의 값을 가져오는 것을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="0f496-104">The following example creates a <xref:System.Linq.Expressions.MemberExpression> that represents getting the value of a field member.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#5)]
 [!code-vb[System.Linq.Expressions.Expression#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="protected internal override System.Linq.Expressions.Expression Accept (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Linq.Expressions.Expression Accept(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.MemberExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function Accept (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Linq::Expressions::Expression ^ Accept(System::Linq::Expressions::ExpressionVisitor ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression" Usage="memberExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">
          <span data-ttu-id="0f496-105">이 노드를 열어 볼 방문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f496-105">The visitor to visit this node with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f496-106">이 노드 형식에 대한 특정 Visit 메서드로 디스패치합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f496-106">Dispatches to the specific visit method for this node type.</span>
          </span>
          <span data-ttu-id="0f496-107">예를 들어 <see cref="T:System.Linq.Expressions.MethodCallExpression" />은 <see cref="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />을 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f496-107">For example, <see cref="T:System.Linq.Expressions.MethodCallExpression" /> calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f496-108">이 노드를 열어 본 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f496-108">The result of visiting this node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f496-109">에 대 한이 기본 구현은 <xref:System.Linq.Expressions.ExpressionType.Extension> 노드 호출 <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0f496-109">This default implementation for <xref:System.Linq.Expressions.ExpressionType.Extension> nodes calls <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>.</span></span> <span data-ttu-id="0f496-110">파생된 방문자 클래스에 더 구체적인 메서드를 호출 하려면이 메서드를 재정의 <xref:System.Linq.Expressions.ExpressionVisitor> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0f496-110">Override this method to call into a more specific method on a derived visitor class of the <xref:System.Linq.Expressions.ExpressionVisitor> class.</span></span> <span data-ttu-id="0f496-111">하지만 호출 하 여 알 수 없는 방문자 계속 지원 해야 <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0f496-111">However, it should still support unknown visitors by calling <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression Expression" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.MemberExpression.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::Expression ^ Expression { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expression : System.Linq.Expressions.Expression" Usage="System.Linq.Expressions.MemberExpression.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f496-112">필드 또는 속성을 포함하는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f496-112">Gets the containing object of the field or property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f496-113">필드 또는 속성을 포함하는 개체를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f496-113">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the containing object of the field or property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.MemberExpression.Member" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Reflection.MemberInfo" Usage="System.Linq.Expressions.MemberExpression.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f496-114">액세스할 필드 또는 속성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f496-114">Gets the field or property to be accessed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f496-115">액세스할 필드 또는 속성을 나타내는 <see cref="T:System.Reflection.MemberInfo" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f496-115">The <see cref="T:System.Reflection.MemberInfo" /> that represents the field or property to be accessed.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override sealed System.Linq.Expressions.ExpressionType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Linq.Expressions.ExpressionType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.MemberExpression.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property NodeType As ExpressionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::ExpressionType NodeType { System::Linq::Expressions::ExpressionType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Linq.Expressions.ExpressionType" Usage="System.Linq.Expressions.MemberExpression.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ExpressionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f496-116">이 <see cref="P:System.Linq.Expressions.MemberExpression.Expression" />의 노드 형식을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f496-116">Returns the node type of this <see cref="P:System.Linq.Expressions.MemberExpression.Expression" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f496-117">이 식을 나타내는 <see cref="T:System.Linq.Expressions.ExpressionType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f496-117">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.MemberExpression Update (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Linq.Expressions.MemberExpression Update(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.MemberExpression.Update(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::MemberExpression ^ Update(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.Update : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.MemberExpression" Usage="memberExpression.Update expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="0f496-118">결과의 <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f496-118">The <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property of the result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f496-119">제공된 자식을 사용하여 이 식과 같은 새 식을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f496-119">Creates a new expression that is like this one, but using the supplied children.</span>
          </span>
          <span data-ttu-id="0f496-120">모든 자식이 같으면 이 식을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f496-120">If all of the children are the same, it will return this expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f496-121">자식이 변경되지 않은 경우 이 식이고, 그러지 않은 경우 자식이 업데이트된 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f496-121">This expression if no children are changed or an expression with the updated children.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>