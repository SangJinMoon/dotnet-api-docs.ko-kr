<Type Name="LambdaExpression" FullName="System.Linq.Expressions.LambdaExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="06678ae260a607f724ddeef2eb2b7e55f15afead" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30458857" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class LambdaExpression : System.Linq.Expressions.Expression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LambdaExpression extends System.Linq.Expressions.Expression" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.LambdaExpression" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LambdaExpression&#xA;Inherits Expression" />
  <TypeSignature Language="C++ CLI" Value="public ref class LambdaExpression abstract : System::Linq::Expressions::Expression" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Linq.Expressions.Expression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Linq.Expressions.Expression/LambdaExpressionProxy))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bf5c7-101">람다 식을 설명합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf5c7-101">Describes a lambda expression.</span>
      </span>
      <span data-ttu-id="bf5c7-102">.NET 메서드 본문과 유사한 코드 블록을 캡처합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf5c7-102">This captures a block of code that is similar to a .NET method body.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf5c7-103"><xref:System.Linq.Expressions.LambdaExpression> 유형 식 트리 형식의 람다 식을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="bf5c7-103">The <xref:System.Linq.Expressions.LambdaExpression> type represents a lambda expression in the form of an expression tree.</span></span> <span data-ttu-id="bf5c7-104"><xref:System.Linq.Expressions.Expression%601> 형식에서 파생 된 <xref:System.Linq.Expressions.LambdaExpression> 더 명시적으로 사용할 수도 있습니다를 람다 식을 나타내는 람다 식의 형식이 캡처합니다.</span><span class="sxs-lookup"><span data-stu-id="bf5c7-104">The <xref:System.Linq.Expressions.Expression%601> type, which derives from <xref:System.Linq.Expressions.LambdaExpression> and captures the type of the lambda expression more explicitly, can also be used to represent a lambda expression.</span></span> <span data-ttu-id="bf5c7-105">런타임에서 람다 식을 나타내는 식 트리 노드는 항상 형식의 <xref:System.Linq.Expressions.Expression%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="bf5c7-105">At runtime, an expression tree node that represents a lambda expression is always of type <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="bf5c7-106">값은 <xref:System.Linq.Expressions.Expression.NodeType%2A> 속성은 <xref:System.Linq.Expressions.LambdaExpression> 은 <xref:System.Linq.Expressions.ExpressionType.Lambda>합니다.</span><span class="sxs-lookup"><span data-stu-id="bf5c7-106">The value of the <xref:System.Linq.Expressions.Expression.NodeType%2A> property of a <xref:System.Linq.Expressions.LambdaExpression> is <xref:System.Linq.Expressions.ExpressionType.Lambda>.</span></span>  
  
 <span data-ttu-id="bf5c7-107">사용 하 여는 <xref:System.Linq.Expressions.Expression.Lambda%2A> 를 만드는 팩터리 메서드가 <xref:System.Linq.Expressions.LambdaExpression> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bf5c7-107">Use the <xref:System.Linq.Expressions.Expression.Lambda%2A> factory methods to create a <xref:System.Linq.Expressions.LambdaExpression> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf5c7-108">다음 예제에서는를 사용 하 여 전달 된 인수에 1을 추가 하는 람다 식을 나타내는 식을 만드는 방법을 <xref:System.Linq.Expressions.Expression.Lambda%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bf5c7-108">The following example demonstrates how to create an expression that represents a lambda expression that adds 1 to the passed argument by using the <xref:System.Linq.Expressions.Expression.Lambda%2A> method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#42)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#42)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Body { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression Body" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.LambdaExpression.Body" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Body As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::Expression ^ Body { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf5c7-109">람다 식의 본문을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-109">Gets the body of the lambda expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf5c7-110">람다 식의 본문을 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-110">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the body of the lambda expression.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Compile">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bf5c7-111">람다 식을 나타내는 대리자를 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-111">Produces a delegate that represents the lambda expression.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public Delegate Compile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Delegate Compile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.LambdaExpression.Compile" />
      <MemberSignature Language="VB.NET" Value="Public Function Compile () As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Delegate ^ Compile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf5c7-112">람다 식을 나타내는 대리자를 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-112">Produces a delegate that represents the lambda expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf5c7-113">람다 식의 컴파일된 버전을 포함하는 <see cref="T:System.Delegate" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-113">A <see cref="T:System.Delegate" /> that contains the compiled version of the lambda expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf5c7-114"><xref:System.Linq.Expressions.LambdaExpression.Compile%2A> 메서드를 사용 하 여 변환할 수 있습니다는 <xref:System.Linq.Expressions.LambdaExpression> 식 트리를 나타내는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="bf5c7-114">The <xref:System.Linq.Expressions.LambdaExpression.Compile%2A> method can be used to convert a <xref:System.Linq.Expressions.LambdaExpression> expression tree into the delegate that it represents.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public Delegate Compile (bool preferInterpretation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Delegate Compile(bool preferInterpretation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.LambdaExpression.Compile(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compile (preferInterpretation As Boolean) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Delegate ^ Compile(bool preferInterpretation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preferInterpretation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="preferInterpretation">
          <span data-ttu-id="bf5c7-115">식이 해석된 형식으로 컴파일되어야 함을 나타내려면 <see langword="true" />이고(사용 가능 시), 그러지 않은 경우 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-115">
              <see langword="true" /> to indicate that the expression should be compiled to an interpreted form, if it's available; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf5c7-116">람다 식을 나타내는 해석되거나 컴파일된 대리자를 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-116">Produces an interpreted or compiled delegate that represents the lambda expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf5c7-117">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 개체에서 설명하는 컴파일된 람다 식을 나타내는 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-117">A delegate that represents the compiled lambda expression described by the <see cref="T:System.Linq.Expressions.LambdaExpression" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public Delegate Compile (System.Runtime.CompilerServices.DebugInfoGenerator debugInfoGenerator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Delegate Compile(class System.Runtime.CompilerServices.DebugInfoGenerator debugInfoGenerator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.LambdaExpression.Compile(System.Runtime.CompilerServices.DebugInfoGenerator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Delegate ^ Compile(System::Runtime::CompilerServices::DebugInfoGenerator ^ debugInfoGenerator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="debugInfoGenerator" Type="System.Runtime.CompilerServices.DebugInfoGenerator" />
      </Parameters>
      <Docs>
        <param name="debugInfoGenerator">
          <span data-ttu-id="bf5c7-118">컴파일러에서 시퀀스 위치를 표시하고 지역 변수에 주석을 추가하는 데 사용하는 디버깅 정보 생성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-118">Debugging information generator used by the compiler to mark sequence points and annotate local variables.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf5c7-119">람다 식을 나타내는 대리자를 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-119">Produces a delegate that represents the lambda expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf5c7-120">컴파일된 람다 버전을 포함하는 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-120">A delegate containing the compiled version of the lambda.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CompileToMethod">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bf5c7-121">람다를 메서드 정의로 컴파일합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-121">Compiles the lambda into a method definition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompileToMethod">
      <MemberSignature Language="C#" Value="public void CompileToMethod (System.Reflection.Emit.MethodBuilder method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileToMethod(class System.Reflection.Emit.MethodBuilder method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.LambdaExpression.CompileToMethod(System.Reflection.Emit.MethodBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileToMethod (method As MethodBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileToMethod(System::Reflection::Emit::MethodBuilder ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.Emit.MethodBuilder" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="bf5c7-122">람다의 IL을 포함하는 데 사용할 <see cref="T:System.Reflection.Emit.MethodBuilder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-122">A <see cref="T:System.Reflection.Emit.MethodBuilder" /> which will be used to hold the lambda's IL.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf5c7-123">람다를 메서드 정의로 컴파일합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-123">Compiles the lambda into a method definition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileToMethod">
      <MemberSignature Language="C#" Value="public void CompileToMethod (System.Reflection.Emit.MethodBuilder method, System.Runtime.CompilerServices.DebugInfoGenerator debugInfoGenerator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileToMethod(class System.Reflection.Emit.MethodBuilder method, class System.Runtime.CompilerServices.DebugInfoGenerator debugInfoGenerator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.LambdaExpression.CompileToMethod(System.Reflection.Emit.MethodBuilder,System.Runtime.CompilerServices.DebugInfoGenerator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileToMethod(System::Reflection::Emit::MethodBuilder ^ method, System::Runtime::CompilerServices::DebugInfoGenerator ^ debugInfoGenerator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.Emit.MethodBuilder" />
        <Parameter Name="debugInfoGenerator" Type="System.Runtime.CompilerServices.DebugInfoGenerator" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="bf5c7-124">람다의 IL을 포함하는 데 사용할 <see cref="T:System.Reflection.Emit.MethodBuilder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-124">A <see cref="T:System.Reflection.Emit.MethodBuilder" /> which will be used to hold the lambda's IL.</span>
          </span>
        </param>
        <param name="debugInfoGenerator">
          <span data-ttu-id="bf5c7-125">컴파일러에서 시퀀스 위치를 표시하고 지역 변수에 주석을 추가하는 데 사용하는 디버깅 정보 생성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-125">Debugging information generator used by the compiler to mark sequence points and annotate local variables.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf5c7-126">람다를 메서드 정의 및 사용자 지정 디버그 정보로 컴파일합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-126">Compiles the lambda into a method definition and custom debug information.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.LambdaExpression.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf5c7-127">람다 식의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-127">Gets the name of the lambda expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf5c7-128">람다 식의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-128">The name of the lambda expression.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf5c7-129">디버깅에 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bf5c7-129">Used for debugging.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override sealed System.Linq.Expressions.ExpressionType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Linq.Expressions.ExpressionType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.LambdaExpression.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property NodeType As ExpressionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::ExpressionType NodeType { System::Linq::Expressions::ExpressionType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ExpressionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf5c7-130">이 <see cref="T:System.Linq.Expressions.Expression" />의 노드 형식을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-130">Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf5c7-131">이 식을 나타내는 <see cref="T:System.Linq.Expressions.ExpressionType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-131">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt; Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Linq.Expressions.ParameterExpression&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.LambdaExpression.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As ReadOnlyCollection(Of ParameterExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ Parameters { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.ParameterExpression&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf5c7-132">람다 식의 매개 변수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-132">Gets the parameters of the lambda expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf5c7-133">람다 식의 매개 변수를 나타내는 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 개체의 <see cref="T:System.Linq.Expressions.ParameterExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-133">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects that represent the parameters of the lambda expression.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public Type ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.LambdaExpression.ReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReturnType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf5c7-134">람다 식의 반환 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-134">Gets the return type of the lambda expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf5c7-135">람다 식의 형식을 나타내는 <see cref="T:System.Type" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-135">The <see cref="T:System.Type" /> object representing the type of the lambda expression.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TailCall">
      <MemberSignature Language="C#" Value="public bool TailCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TailCall" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.LambdaExpression.TailCall" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TailCall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TailCall { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf5c7-136">마무리 호출 최적화를 사용하여 람다 식을 컴파일할지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-136">Gets the value that indicates if the lambda expression will be compiled with the tail call optimization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf5c7-137">마무리 호출 최적화를 사용하여 람다 식을 컴파일하면 true이고, 그렇지 않으면 false입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-137">True if the lambda expression will be compiled with the tail call optimization, otherwise false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override sealed Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.LambdaExpression.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf5c7-138">이 <see cref="T:System.Linq.Expressions.Expression" />이 나타내는 식의 정적 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-138">Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf5c7-139">식의 정적 형식을 나타내는 <see cref="P:System.Linq.Expressions.LambdaExpression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5c7-139">The <see cref="P:System.Linq.Expressions.LambdaExpression.Type" /> that represents the static type of the expression.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>