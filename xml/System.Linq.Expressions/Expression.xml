<Type Name="Expression" FullName="System.Linq.Expressions.Expression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4e9615e4182e6b650a9cbb9024f593836bd0e0ca" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
    <Meta Name="ms.locfileid" Value="32090636" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Expression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Expression extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.Expression" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Expression" />
  <TypeSignature Language="C++ CLI" Value="public ref class Expression abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5ff2c-101">식 트리 노드를 나타내는 클래스가 파생되는 기본 클래스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5ff2c-101">Provides the base class from which the classes that represent expression tree nodes are derived.</span>
      </span>
      <span data-ttu-id="5ff2c-102">또한 다양한 노드 형식을 만드는 <see langword="static" />(Visual Basic에서는 <see langword="Shared" />) 팩터리 메서드가 들어 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5ff2c-102">It also contains <see langword="static" /> (<see langword="Shared" /> in Visual Basic) factory methods to create the various node types.</span>
      </span>
      <span data-ttu-id="5ff2c-103">이 클래스는 <see langword="abstract" /> 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5ff2c-103">This is an <see langword="abstract" /> class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-104">다음 코드 예제에서는 블록 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-104">The following code example shows how to create a block expression.</span></span> <span data-ttu-id="5ff2c-105">블록 식은 두 개의 <xref:System.Linq.Expressions.MethodCallExpression> 개체와 하나의 <xref:System.Linq.Expressions.ConstantExpression> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-105">The block expression consists of two <xref:System.Linq.Expressions.MethodCallExpression> objects and one <xref:System.Linq.Expressions.ConstantExpression> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#13)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#13)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-106">
            <see cref="T:System.Linq.Expressions.Expression" />의 새 인스턴스를 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-106">Constructs a new instance of <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Expression ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Expression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-107">
            <see cref="T:System.Linq.Expressions.Expression" />의 새 인스턴스를 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-107">Constructs a new instance of <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Expression (System.Linq.Expressions.ExpressionType nodeType, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Linq.Expressions.ExpressionType nodeType, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.#ctor(System.Linq.Expressions.ExpressionType,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Expression(System::Linq::Expressions::ExpressionType nodeType, Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("use a different constructor that does not take ExpressionType. Then override NodeType and Type properties to provide the values that would be specified to this constructor.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="nodeType" Type="System.Linq.Expressions.ExpressionType" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="nodeType">
          <span data-ttu-id="5ff2c-108">노드 형식으로 설정할 <see cref="T:System.Linq.Expressions.ExpressionType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-108">The <see cref="T:System.Linq.Expressions.ExpressionType" /> to set as the node type.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-109">이 <see cref="P:System.Linq.Expressions.Expression.Type" />의 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-109">The <see cref="P:System.Linq.Expressions.Expression.Type" /> of this <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-110">
            <see cref="T:System.Linq.Expressions.Expression" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-110">Initializes a new instance of the <see cref="T:System.Linq.Expressions.Expression" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-111">이 생성자는 파생된 클래스의 생성자에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-111">This constructor is called from constructors in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="protected internal virtual System.Linq.Expressions.Expression Accept (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Linq.Expressions.Expression Accept(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function Accept (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Linq::Expressions::Expression ^ Accept(System::Linq::Expressions::ExpressionVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">
          <span data-ttu-id="5ff2c-112">이 노드를 열어 볼 방문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-112">The visitor to visit this node with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-113">이 노드 형식에 대한 특정 Visit 메서드로 디스패치합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-113">Dispatches to the specific visit method for this node type.</span>
          </span>
          <span data-ttu-id="5ff2c-114">예를 들어 <see cref="T:System.Linq.Expressions.MethodCallExpression" />은 <see cref="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />을 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-114">For example, <see cref="T:System.Linq.Expressions.MethodCallExpression" /> calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-115">이 노드를 열어 본 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-115">The result of visiting this node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-116">에 대 한이 기본 구현은 <xref:System.Linq.Expressions.ExpressionType.Extension> 노드 호출 <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-116">This default implementation for <xref:System.Linq.Expressions.ExpressionType.Extension> nodes calls <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>.</span></span> <span data-ttu-id="5ff2c-117">파생된 방문자 클래스에 더 구체적인 메서드를 호출 하려면이 메서드를 재정의 <xref:System.Linq.Expressions.ExpressionVisitor> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-117">Override this method to call into a more specific method on a derived visitor class of the <xref:System.Linq.Expressions.ExpressionVisitor> class.</span></span> <span data-ttu-id="5ff2c-118">하지만 호출 하 여 알 수 없는 방문자 계속 지원 해야 <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-118">However, it should still support unknown visitors by calling <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-119">오버플로를 검사하지 않는 산술 더하기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-119">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that does not have overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Add (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Add(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Add(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-120">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-120">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-121">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-121">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-122">오버플로를 검사하지 않는 산술 더하기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-122">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-123">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Add" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-123">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Add" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-124">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-124">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-125"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-125">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-126">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-126">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-127">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-127">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-128"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-128">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-129">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-129">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-130">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-130">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-131">다음 규칙 작업에 대해 선택 된 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-131">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-132">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 더하기 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-132">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the addition operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-133">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-133">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-134">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-134">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-135">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-135">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-136">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-136">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-137">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-137">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-138">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-138">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-139">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-139">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-140">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-140">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-141">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-141">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-142">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-142">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-143">노드 유형 미리 정의 된 더하기 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-143">The type of the node is the result type of the predefined addition operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-144">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-144">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-145">노드의 유형을 미리 정의 된 더하기 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-145">The type of the node is the nullable type that corresponds to the result type of the predefined addition operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-146">다음 코드 예제에서는 두 정수를 추가 하는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-146">The following code example shows how to create an expression that adds two integers.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#1)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-147">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-147">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-148">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 더하기 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-148">The addition operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Add (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Add(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Add(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-149">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-149">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-150">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-150">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-151">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-151">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-152">오버플로를 검사하지 않는 산술 더하기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-152">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that does not have overflow checking.</span>
          </span>
          <span data-ttu-id="5ff2c-153">구현 메서드를 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-153">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-154">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Add" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-154">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Add" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-155">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-155">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-156"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-156">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-157">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-157">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-158">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-158">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-159"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-159">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-160">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-160">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-161">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-161">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-162">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-162">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-163">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를 사용 하는 노드에 대 한 구현 메서드를은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-163">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="5ff2c-164">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 더하기 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-164">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the addition operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-165">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-165">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-166">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-166">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-167">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-167">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-168">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-168">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-169">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-169">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-170">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-170">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-171">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-171">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-172">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-172">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-173">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-173">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-174">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-174">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-175">노드 유형 미리 정의 된 더하기 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-175">The type of the node is the result type of the predefined addition operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-176">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-176">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-177">노드의 유형을 미리 정의 된 더하기 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-177">The type of the node is the nullable type that corresponds to the result type of the predefined addition operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-178">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-178">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-179">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-179">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-180">
            <paramref name="method" />가 <see langword="null" />이고 더하기 연산자가 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 대해 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-180">
              <paramref name="method" /> is <see langword="null" /> and the addition operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-181">오버플로를 검사하지 않는 더하기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-181">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-182">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-182">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-183">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-183">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-184">오버플로를 검사하지 않는 더하기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-184">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-185">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-185">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-186">다음 코드 예제에서는 정수 변수에 값을 추가 하 고 다음 작업의 결과를 변수에 할당 하는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-186">The following code example shows how to create an expression that adds a value to an integer variable and then assigns the result of the operation to the variable.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#18)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-187">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-187">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-188">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-188">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-189">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-189">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-190">오버플로를 검사하지 않는 더하기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-190">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-191">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-191">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-192">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-192">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-193">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-193">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-194">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-194">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="5ff2c-195">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-195">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-196">오버플로를 검사하지 않는 더하기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-196">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-197">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-197">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAssignChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-198">오버플로를 검사하는 더하기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-198">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that has overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssignChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-199">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-199">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-200">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-200">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-201">오버플로를 검사하는 더하기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-201">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-202">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-202">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssignChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-203">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-203">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-204">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-204">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-205">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-205">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-206">오버플로를 검사하는 더하기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-206">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-207">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-207">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssignChecked (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-208">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-208">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-209">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-209">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-210">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-210">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="5ff2c-211">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-211">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-212">오버플로를 검사하는 더하기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-212">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-213">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-213">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-214">오버플로를 검사하는 산술 더하기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-214">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that has overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-215">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-215">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-216">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-216">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-217">오버플로를 검사하는 산술 더하기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-217">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-218">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.AddChecked" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-218">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-219">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-219">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-220"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-220">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-221">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-221">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-222">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-222">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-223"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-223">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-224">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-224">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-225">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-225">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-226">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-226">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-227">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 더하기 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-227">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the addition operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-228">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-228">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-229">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-229">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-230">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-230">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-231">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-231">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-232">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-232">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-233">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-233">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-234">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-234">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-235">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-235">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-236">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-236">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-237">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-237">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-238">노드 유형 미리 정의 된 더하기 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-238">The type of the node is the result type of the predefined addition operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-239">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-239">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-240">노드의 유형을 미리 정의 된 더하기 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-240">The type of the node is the nullable type that corresponds to the result type of the predefined addition operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-241">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-241">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-242">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 더하기 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-242">The addition operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-243">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-243">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-244">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-244">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-245">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-245">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-246">오버플로를 검사하는 산술 더하기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-246">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that has overflow checking.</span>
          </span>
          <span data-ttu-id="5ff2c-247">구현 메서드를 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-247">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-248">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.AddChecked" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-248">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-249">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-249">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-250"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-250">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-251">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-251">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-252">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-252">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-253"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-253">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-254">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-254">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-255">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-255">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-256">작업에 대 한 구현 메서드는 다음 규칙에 따라 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-256">The implementing method for the operation is chosen based on the following rules:</span></span>  
  
-   <span data-ttu-id="5ff2c-257">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를 사용 하는 노드에 대 한 구현 메서드를은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-257">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="5ff2c-258">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 더하기 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-258">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the addition operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-259">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-259">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-260">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-260">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-261">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-261">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-262">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-262">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-263">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-263">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-264">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-264">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-265">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-265">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-266">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-266">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-267">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-267">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-268">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-268">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-269">노드 유형 미리 정의 된 더하기 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-269">The type of the node is the result type of the predefined addition operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-270">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-270">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-271">노드의 유형을 미리 정의 된 더하기 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-271">The type of the node is the nullable type that corresponds to the result type of the predefined addition operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-272">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-272">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-273">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-273">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-274">
            <paramref name="method" />가 <see langword="null" />이고 더하기 연산자가 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 대해 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-274">
              <paramref name="method" /> is <see langword="null" /> and the addition operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="And">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-275">비트 <see cref="T:System.Linq.Expressions.BinaryExpression" /> 연산을 나타내는 <see langword="AND" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-275">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="AND" /> operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression And (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression And(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function And (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ And(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-276">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-276">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-277">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-277">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-278">비트 <see cref="T:System.Linq.Expressions.BinaryExpression" /> 연산을 나타내는 <see langword="AND" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-278">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="AND" /> operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-279">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.And" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-279">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.And" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-280">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-280">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-281"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-281">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-282">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-282">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-283">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-283">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-284"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-284">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-285">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-285">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-286">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-286">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-287">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-287">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-288">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 비트 오버 로드 하는 사용자 정의 형식을 나타내는 `AND` 연산자는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-288">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `AND` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-289">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 정수 또는 부울 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-289">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-290">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-290">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-291">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-291">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-292">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-292">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-293">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-293">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-294">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-294">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-295">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-295">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-296">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-296">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-297">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-297">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-298">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-298">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-299">노드의 유형을 결과의 형식인 미리 정의 된 비트 `AND` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-299">The type of the node is the result type of the predefined bitwise `AND` operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-300">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-300">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-301">노드의 유형을 결과 형식을 미리 정의 된 비트에 해당 하는 nullable 형식 `AND` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-301">The type of the node is the nullable type that corresponds to the result type of the predefined bitwise `AND` operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-302">다음 코드 예제에서는 두 부울 값의 논리 AND 연산을 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-302">The following code example shows how to create an expression that represents a logical AND operation on two Boolean values.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#2)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-303">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-303">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-304">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 비트 <see langword="AND" /> 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-304">The bitwise <see langword="AND" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression And (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression And(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function And (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ And(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-305">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-305">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-306">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-306">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-307">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-307">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-308">비트 <see cref="T:System.Linq.Expressions.BinaryExpression" /> 연산을 나타내는 <see langword="AND" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-308">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="AND" /> operation.</span>
          </span>
          <span data-ttu-id="5ff2c-309">구현 메서드를 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-309">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-310">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.And" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-310">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.And" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-311">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-311">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-312"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-312">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-313">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-313">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-314">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-314">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-315"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-315">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-316">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-316">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-317">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-317">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-318">작업에 대 한 구현 메서드는 다음 규칙에 따라 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-318">The implementing method for the operation is chosen based on the following rules:</span></span>  
  
-   <span data-ttu-id="5ff2c-319">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를 사용 하는 노드에 대 한 구현 메서드를은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-319">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="5ff2c-320">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 비트 오버 로드 하는 사용자 정의 형식을 나타내는 `AND` 연산자는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-320">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `AND` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-321">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 정수 또는 부울 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-321">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-322">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-322">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-323">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-323">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-324">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-324">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-325">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-325">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-326">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-326">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-327">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-327">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-328">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-328">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-329">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-329">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-330">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-330">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-331">노드의 유형을 결과의 형식인 미리 정의 된 비트 `AND` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-331">The type of the node is the result type of the predefined bitwise `AND` operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-332">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-332">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-333">노드의 유형을 결과 형식을 미리 정의 된 비트에 해당 하는 nullable 형식 `AND` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-333">The type of the node is the nullable type that corresponds to the result type of the predefined bitwise `AND` operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-334">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-334">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-335">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-335">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-336">
            <paramref name="method" />가 <see langword="null" />이고 비트 <see langword="AND" /> 연산자가 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 대해 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-336">
              <paramref name="method" /> is <see langword="null" /> and the bitwise <see langword="AND" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AndAlso">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-337">첫 번째 피연산자가 <see cref="T:System.Linq.Expressions.BinaryExpression" />로 계산되는 경우에만 두 번째 피연산자를 계산하는 조건부 <see langword="AND" /> 연산을 나타내는 <see langword="true" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-337">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="AND" /> operation that evaluates the second operand only if the first operand evaluates to <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AndAlso">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AndAlso (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AndAlso(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAlso (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AndAlso(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-338">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-338">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-339">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-339">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-340">첫 번째 피연산자가 <see cref="T:System.Linq.Expressions.BinaryExpression" />로 계산되는 경우에만 두 번째 피연산자를 계산하는 조건부 <see langword="AND" /> 연산을 나타내는 <see langword="true" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-340">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="AND" /> operation that evaluates the second operand only if the first operand evaluates to <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-341">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.AndAlso" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-341">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AndAlso" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-342">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-342">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-343"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-343">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-344">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-344">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-345">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-345">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-346"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-346">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-347">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-347">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-348">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-348">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-349">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-349">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-350">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 비트 오버 로드 하는 사용자 정의 형식을 나타내는 `AND` 연산자는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-350">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `AND` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="5ff2c-351">조건부 `AND` C# 또는 Visual Basic 연산자를 오버 로드할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-351">The conditional `AND` operator cannot be overloaded in C# or Visual Basic.</span></span> <span data-ttu-id="5ff2c-352">그러나 조건부 `AND` 연산자는 비트를 사용 하 여 계산 됩니다 `AND` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-352">However, the conditional `AND` operator is evaluated by using the bitwise `AND` operator.</span></span> <span data-ttu-id="5ff2c-353">따라서 사용자 정의 오버 로드를 비트 `AND` 연산자에는이 노드 형식에 대 한 구현 메서드가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-353">Thus, a user-defined overload of the bitwise `AND` operator can be the implementing method for this node type.</span></span>  
  
-   <span data-ttu-id="5ff2c-354">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 부울 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-354">Otherwise, if `left`.Type and `right`.Type are Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-355">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-355">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-356">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-356">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-357">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-357">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-358">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-358">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-359">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-359">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-360">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상이 null을 허용 하 고 해당 nullable이 아닌 형식과 구현 메서드의 해당 인수 형식와 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-360">`left`.Type and `right`.Type are both value types of which at least one is nullable, and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-361">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-361">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-362">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-362">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-363">`left`. 형식 및 `right`합니다. 유형은 동일한 부울 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-363">`left`.Type and `right`.Type are the same Boolean type.</span></span>  
  
-   <span data-ttu-id="5ff2c-364">경우 `left`합니다. 형식 및 `right`합니다. Type이 nullable이 아닌, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-364">If `left`.Type and `right`.Type are non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-365">노드의 형식을 결과 대 한 유형의 미리 정의 된 조건 `AND` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-365">The type of the node is the result type of the predefined conditional `AND` operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-366">경우 `left`합니다. 형식 및 `right`합니다. 종류는 null을 허용, 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-366">If `left`.Type and `right`.Type are nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-367">노드의 유형을 결과 대 한 유형의 미리 정의 된 조건에 해당 하는 nullable 형식 `AND` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-367">The type of the node is the nullable type that corresponds to the result type of the predefined conditional `AND` operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-368">다음 코드 예제에서는 식을 만드는 수행 하는 논리 경우에만 해당 두 피연산자에 대 한 작업이 첫 번째 피연산자 평가 되는 방법과 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-368">The following code example shows how to create an expression that performs a logical AND operation on its two operands only if the first operand evaluates to `true`.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#19)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-369">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-369">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-370">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 비트 <see langword="AND" /> 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-370">The bitwise <see langword="AND" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
          <span data-ttu-id="5ff2c-371">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-371">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-372">
            <paramref name="left" />.Type과 <paramref name="right" />.Type이 동일한 부울 형식이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-372">
              <paramref name="left" />.Type and <paramref name="right" />.Type are not the same Boolean type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AndAlso">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AndAlso (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AndAlso(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAlso (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AndAlso(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-373">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-373">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-374">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-374">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-375">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-375">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-376">첫 번째 피연산자가 true로 확인되는 경우에만 두 번째 피연산자를 계산하는 조건부 <see cref="T:System.Linq.Expressions.BinaryExpression" /> 연산을 나타내는 <see langword="AND" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-376">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="AND" /> operation that evaluates the second operand only if the first operand is resolved to true.</span>
          </span>
          <span data-ttu-id="5ff2c-377">구현 메서드를 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-377">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-378">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.AndAlso" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-378">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AndAlso" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-379">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-379">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-380"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-380">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-381">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-381">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-382">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-382">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-383"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-383">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-384">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-384">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-385">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-385">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-386">작업에 대 한 구현 메서드는 다음 규칙에 따라 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-386">The implementing method for the operation is chosen based on the following rules:</span></span>  
  
-   <span data-ttu-id="5ff2c-387">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를 사용 하는 노드에 대 한 구현 메서드를은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-387">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="5ff2c-388">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 비트 오버 로드 하는 사용자 정의 형식을 나타내는 `AND` 연산자는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-388">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `AND` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="5ff2c-389">조건부 `AND` C# 또는 Visual Basic 연산자를 오버 로드할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-389">The conditional `AND` operator cannot be overloaded in C# or Visual Basic.</span></span> <span data-ttu-id="5ff2c-390">그러나 조건부 `AND` 연산자는 비트를 사용 하 여 계산 됩니다 `AND` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-390">However, the conditional `AND` operator is evaluated by using the bitwise `AND` operator.</span></span> <span data-ttu-id="5ff2c-391">따라서 사용자 정의 오버 로드를 비트 `AND` 연산자에는이 노드 형식에 대 한 구현 메서드가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-391">Thus, a user-defined overload of the bitwise `AND` operator can be the implementing method for this node type.</span></span>  
  
-   <span data-ttu-id="5ff2c-392">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 부울 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-392">Otherwise, if `left`.Type and `right`.Type are Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-393">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-393">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-394">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-394">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-395">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-395">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-396">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-396">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-397">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-397">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-398">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상이 null을 허용 하 고 해당 nullable이 아닌 형식과 구현 메서드의 해당 인수 형식와 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-398">`left`.Type and `right`.Type are both value types of which at least one is nullable, and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-399">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-399">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-400">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-400">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-401">`left`. 형식 및 `right`합니다. 유형은 동일한 부울 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-401">`left`.Type and `right`.Type are the same Boolean type.</span></span>  
  
-   <span data-ttu-id="5ff2c-402">경우 `left`합니다. 형식 및 `right`합니다. Type이 nullable이 아닌, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-402">If `left`.Type and `right`.Type are non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-403">노드의 형식을 결과 대 한 유형의 미리 정의 된 조건 `AND` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-403">The type of the node is the result type of the predefined conditional `AND` operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-404">경우 `left`합니다. 형식 및 `right`합니다. 종류는 null을 허용, 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-404">If `left`.Type and `right`.Type are nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-405">노드의 유형을 결과 대 한 유형의 미리 정의 된 조건에 해당 하는 nullable 형식 `AND` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-405">The type of the node is the nullable type that corresponds to the result type of the predefined conditional `AND` operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-406">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-406">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-407">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-407">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-408">
            <paramref name="method" />가 <see langword="null" />이고 비트 <see langword="AND" /> 연산자가 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 대해 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-408">
              <paramref name="method" /> is <see langword="null" /> and the bitwise <see langword="AND" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
          <span data-ttu-id="5ff2c-409">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-409">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-410">
            <paramref name="method" />가 <see langword="null" />이고 <paramref name="left" />.Type과 <paramref name="right" />.Type이 동일한 부울 형식이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-410">
              <paramref name="method" /> is <see langword="null" /> and <paramref name="left" />.Type and <paramref name="right" />.Type are not the same Boolean type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AndAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-411">비트 AND 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-411">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise AND assignment operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AndAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AndAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AndAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AndAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-412">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-412">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-413">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-413">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-414">비트 AND 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-414">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise AND assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-415">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-415">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AndAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AndAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AndAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AndAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-416">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-416">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-417">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-417">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-418">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-418">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-419">비트 AND 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-419">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise AND assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-420">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-420">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AndAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AndAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AndAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AndAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-421">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-421">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-422">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-422">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-423">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-423">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="5ff2c-424">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-424">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-425">비트 AND 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-425">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise AND assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-426">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-426">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ArrayAccess">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-427">배열에 액세스할 <see cref="T:System.Linq.Expressions.IndexExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-427">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> to access an array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ArrayAccess">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression ArrayAccess (System.Linq.Expressions.Expression array, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression ArrayAccess(class System.Linq.Expressions.Expression array, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayAccess (array As Expression, indexes As IEnumerable(Of Expression)) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ ArrayAccess(System::Linq::Expressions::Expression ^ array, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ indexes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="indexes" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="5ff2c-428">다차원 배열을 나타내는 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-428">An expression that represents the multidimensional array.</span>
          </span>
        </param>
        <param name="indexes">
          <span data-ttu-id="5ff2c-429">배열을 인덱싱하는 데 사용되는 식이 포함된 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-429">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> containing expressions used to index the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-430">다차원 배열에 액세스할 <see cref="T:System.Linq.Expressions.IndexExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-430">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> to access a multidimensional array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-431">만든 <see cref="T:System.Linq.Expressions.IndexExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-431">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-432">배열을 나타내는 식을 사용 하 여 얻을 수는 <xref:System.Linq.Expressions.Expression.MakeMemberAccess%2A> 메서드를 통해 또는 <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> 또는 <xref:System.Linq.Expressions.Expression.NewArrayInit%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-432">The expression that represents the array can be obtained by using the <xref:System.Linq.Expressions.Expression.MakeMemberAccess%2A> method, or through <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> or <xref:System.Linq.Expressions.Expression.NewArrayInit%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-433">다음 코드 예제를 사용 하 여 다차원 배열의 요소 값을 변경 하는 방법을 보여 줍니다는 `ArrayAccess` 메서드.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-433">The following code example shows how to change the value of an element in a multidimensional array by using the `ArrayAccess` method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#21)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayAccess">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression ArrayAccess (System.Linq.Expressions.Expression array, params System.Linq.Expressions.Expression[] indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression ArrayAccess(class System.Linq.Expressions.Expression array, class System.Linq.Expressions.Expression[] indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayAccess (array As Expression, ParamArray indexes As Expression()) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ ArrayAccess(System::Linq::Expressions::Expression ^ array, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ indexes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="indexes" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="5ff2c-434">인덱싱할 배열을 나타내는 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-434">An expression representing the array to index.</span>
          </span>
        </param>
        <param name="indexes">
          <span data-ttu-id="5ff2c-435">배열을 인덱싱하는 데 사용되는 식이 포함된 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-435">An array that contains expressions used to index the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-436">배열에 액세스할 <see cref="T:System.Linq.Expressions.IndexExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-436">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> to access an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-437">만든 <see cref="T:System.Linq.Expressions.IndexExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-437">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-438">배열을 나타내는 식을 사용 하 여 얻을 수는 <xref:System.Linq.Expressions.Expression.MakeMemberAccess%2A> 메서드를 통해 또는 <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> 또는 <xref:System.Linq.Expressions.Expression.NewArrayInit%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-438">The expression that represents the array can be obtained by using the <xref:System.Linq.Expressions.Expression.MakeMemberAccess%2A> method, or through <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> or <xref:System.Linq.Expressions.Expression.NewArrayInit%2A>.</span></span>  
  
 <span data-ttu-id="5ff2c-439">다차원 배열에 사용 된 <xref:System.Linq.Expressions.Expression.ArrayAccess%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-439">For multidimensional arrays, use the <xref:System.Linq.Expressions.Expression.ArrayAccess%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-440">다음 코드 예제를 사용 하 여 배열 요소 값을 변경 하는 방법을 보여 줍니다는 `ArrayAccess` 메서드.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-440">The following code example shows how to change a value of an array element by using the `ArrayAccess` method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#20)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ArrayIndex">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-441">배열 인덱스 연산자 적용을 나타내는 <see cref="T:System.Linq.Expressions.Expression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-441">Creates an <see cref="T:System.Linq.Expressions.Expression" /> that represents applying an array index operator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ArrayIndex">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression ArrayIndex (System.Linq.Expressions.Expression array, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression ArrayIndex(class System.Linq.Expressions.Expression array, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayIndex (array As Expression, indexes As IEnumerable(Of Expression)) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ ArrayIndex(System::Linq::Expressions::Expression ^ array, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ indexes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="indexes" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="5ff2c-442">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-442">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> property equal to.</span>
          </span>
        </param>
        <param name="indexes">
          <span data-ttu-id="5ff2c-443">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.Expression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-443">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-444">차수가 1보다 큰 배열에 대한 배열 인덱스 연산자 적용을 나타내는 <see cref="T:System.Linq.Expressions.MethodCallExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-444">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents applying an array index operator to an array of rank more than one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-445">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> 및 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-445">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-446">각 요소 `indexes` 있어야 <xref:System.Linq.Expressions.Expression.Type%2A> 같음 <xref:System.Int32>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-446">Each element of `indexes` must have <xref:System.Linq.Expressions.Expression.Type%2A> equal to <xref:System.Int32>.</span></span> <span data-ttu-id="5ff2c-447"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 `array` 차수가 있는 요소의 수와 일치 하는 배열 형식을 나타내야 `indexes`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-447">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `array` must represent an array type whose rank matches the number of elements in `indexes`.</span></span>  
  
 <span data-ttu-id="5ff2c-448">하는 경우의 순위 `array`합니다. 유형 1 이면이 메서드는 반환 된 <xref:System.Linq.Expressions.BinaryExpression>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-448">If the rank of `array`.Type is 1, this method returns a <xref:System.Linq.Expressions.BinaryExpression>.</span></span> <span data-ttu-id="5ff2c-449"><xref:System.Linq.Expressions.BinaryExpression.Left%2A> 속성이 `array` 및 <xref:System.Linq.Expressions.BinaryExpression.Right%2A> 의 단일 요소 속성이 `indexes`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-449">The <xref:System.Linq.Expressions.BinaryExpression.Left%2A> property is set to `array` and the <xref:System.Linq.Expressions.BinaryExpression.Right%2A> property is set to the single element of `indexes`.</span></span> <span data-ttu-id="5ff2c-450"><xref:System.Linq.Expressions.Expression.Type%2A> 의 속성은 <xref:System.Linq.Expressions.BinaryExpression> 의 요소 형식을 나타내는 `array`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-450">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the <xref:System.Linq.Expressions.BinaryExpression> represents the element type of `array`.Type.</span></span>  
  
 <span data-ttu-id="5ff2c-451">하는 경우의 순위 `array`합니다. 이 메서드는 반환 형식이 둘 이상의 경우는 <xref:System.Linq.Expressions.MethodCallExpression>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-451">If the rank of `array`.Type is more than one, this method returns a <xref:System.Linq.Expressions.MethodCallExpression>.</span></span> <span data-ttu-id="5ff2c-452"><xref:System.Linq.Expressions.MethodCallExpression.Method%2A> 속성이로 설정 되는 <xref:System.Reflection.MethodInfo> 공용 인스턴스 메서드를 설명 하는 `Get` 나타내는 형식에는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성 `array`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-452">The <xref:System.Linq.Expressions.MethodCallExpression.Method%2A> property is set to the <xref:System.Reflection.MethodInfo> that describes the public instance method `Get` on the type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-453">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Linq.Expressions.Expression.ArrayIndex%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> 만드는 메서드를 한 <xref:System.Linq.Expressions.MethodCallExpression> 2 차원 배열에 대 한 인덱싱을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-453">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ArrayIndex%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create a <xref:System.Linq.Expressions.MethodCallExpression> that represents indexing into a two-dimensional array.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#3)]
 [!code-vb[System.Linq.Expressions.Expression#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-454">
            <paramref name="array" /> 또는 <paramref name="indexes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-454">
              <paramref name="array" /> or <paramref name="indexes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-455">
            <paramref name="array" />.Type이 배열 형식을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-455">
              <paramref name="array" />.Type does not represent an array type.</span>
          </span>
          <span data-ttu-id="5ff2c-456">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-456">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-457">
            <paramref name="array" />.Type의 차수가 <paramref name="indexes" />의 요소 수와 일치하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-457">The rank of <paramref name="array" />.Type does not match the number of elements in <paramref name="indexes" />.</span>
          </span>
          <span data-ttu-id="5ff2c-458">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-458">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-459">
            <paramref name="indexes" />의 요소 중 하나 이상의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성이 <see cref="T:System.Int32" /> 형식을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-459">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="indexes" /> does not represent the <see cref="T:System.Int32" /> type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ArrayIndex">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ArrayIndex (System.Linq.Expressions.Expression array, System.Linq.Expressions.Expression index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ArrayIndex(class System.Linq.Expressions.Expression array, class System.Linq.Expressions.Expression index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayIndex (array As Expression, index As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ArrayIndex(System::Linq::Expressions::Expression ^ array, System::Linq::Expressions::Expression ^ index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="index" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="5ff2c-460">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-460">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="5ff2c-461">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-461">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-462">차수가 1인 배열에 대한 배열 인덱스 연산자 적용을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-462">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents applying an array index operator to an array of rank one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-463">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ArrayIndex" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-463">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ArrayIndex" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-464">`index` 형식의 인덱스 나타내야 <xref:System.Int32>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-464">`index` must represent an index of type <xref:System.Int32>.</span></span>  
  
 <span data-ttu-id="5ff2c-465"><xref:System.Linq.Expressions.BinaryExpression.Method%2A> 결과 속성 <xref:System.Linq.Expressions.BinaryExpression> 은 `null`, 둘 다 고 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-465">The <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.BinaryExpression> is `null`, and both <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> are set to `false`.</span></span> <span data-ttu-id="5ff2c-466"><xref:System.Linq.Expressions.Expression.Type%2A> 속성은의 요소 형식에 `array`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-466">The <xref:System.Linq.Expressions.Expression.Type%2A> property is equal to the element type of `array`.Type.</span></span> <span data-ttu-id="5ff2c-467"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-467">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-468">
            <paramref name="array" /> 또는 <paramref name="index" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-468">
              <paramref name="array" /> or <paramref name="index" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-469">
            <paramref name="array" />.Type이 배열 형식을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-469">
              <paramref name="array" />.Type does not represent an array type.</span>
          </span>
          <span data-ttu-id="5ff2c-470">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-470">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-471">
            <paramref name="array" />.Type이 나타내는 배열 형식의 차수가 1이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-471">
              <paramref name="array" />.Type represents an array type whose rank is not 1.</span>
          </span>
          <span data-ttu-id="5ff2c-472">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-472">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-473">
            <paramref name="index" />.Type이 <see cref="T:System.Int32" /> 형식을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-473">
              <paramref name="index" />.Type does not represent the <see cref="T:System.Int32" /> type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ArrayIndex">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression ArrayIndex (System.Linq.Expressions.Expression array, params System.Linq.Expressions.Expression[] indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression ArrayIndex(class System.Linq.Expressions.Expression array, class System.Linq.Expressions.Expression[] indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayIndex (array As Expression, ParamArray indexes As Expression()) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ ArrayIndex(System::Linq::Expressions::Expression ^ array, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ indexes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="indexes" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="5ff2c-474">배열 인덱스 작업에 대한 <see cref="T:System.Linq.Expressions.Expression" /> 인스턴스 - 인덱스의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-474">An array of <see cref="T:System.Linq.Expressions.Expression" /> instances - indexes for the array index operation.</span>
          </span>
        </param>
        <param name="indexes">
          <span data-ttu-id="5ff2c-475">
            <see cref="T:System.Linq.Expressions.Expression" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-475">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-476">다차원 배열에 대한 배열 인덱스 연산자를 적용하는 <see cref="T:System.Linq.Expressions.MethodCallExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-476">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents applying an array index operator to a multidimensional array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-477">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> 및 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-477">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-478">각 요소 `indexes` 있어야 <xref:System.Linq.Expressions.Expression.Type%2A> 같음 <xref:System.Int32>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-478">Each element of `indexes` must have <xref:System.Linq.Expressions.Expression.Type%2A> equal to <xref:System.Int32>.</span></span> <span data-ttu-id="5ff2c-479"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 `array` 차수가 있는 요소의 수와 일치 하는 배열 형식을 나타내야 `indexes`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-479">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `array` must represent an array type whose rank matches the number of elements in `indexes`.</span></span>  
  
 <span data-ttu-id="5ff2c-480">하는 경우의 순위 `array`합니다. 유형 1 이면이 메서드는 반환 된 <xref:System.Linq.Expressions.BinaryExpression>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-480">If the rank of `array`.Type is 1, this method returns a <xref:System.Linq.Expressions.BinaryExpression>.</span></span> <span data-ttu-id="5ff2c-481"><xref:System.Linq.Expressions.BinaryExpression.Left%2A> 속성이 `array` 및 <xref:System.Linq.Expressions.BinaryExpression.Right%2A> 의 단일 요소 속성이 `indexes`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-481">The <xref:System.Linq.Expressions.BinaryExpression.Left%2A> property is set to `array` and the <xref:System.Linq.Expressions.BinaryExpression.Right%2A> property is set to the single element of `indexes`.</span></span> <span data-ttu-id="5ff2c-482"><xref:System.Linq.Expressions.Expression.Type%2A> 의 속성은 <xref:System.Linq.Expressions.BinaryExpression> 의 요소 형식을 나타내는 `array`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-482">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the <xref:System.Linq.Expressions.BinaryExpression> represents the element type of `array`.Type.</span></span>  
  
 <span data-ttu-id="5ff2c-483">하는 경우의 순위 `array`합니다. 이 메서드는 반환 형식이 둘 이상의 경우는 <xref:System.Linq.Expressions.MethodCallExpression>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-483">If the rank of `array`.Type is more than one, this method returns a <xref:System.Linq.Expressions.MethodCallExpression>.</span></span> <span data-ttu-id="5ff2c-484"><xref:System.Linq.Expressions.MethodCallExpression.Method%2A> 속성이로 설정 되는 <xref:System.Reflection.MethodInfo> 공용 인스턴스 메서드를 설명 하는 `Get` 나타내는 형식에는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성 `array`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-484">The <xref:System.Linq.Expressions.MethodCallExpression.Method%2A> property is set to the <xref:System.Reflection.MethodInfo> that describes the public instance method `Get` on the type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-485">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Linq.Expressions.Expression.ArrayIndex%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> 만드는 메서드를 한 <xref:System.Linq.Expressions.MethodCallExpression> 2 차원 배열에 대 한 인덱싱을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-485">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ArrayIndex%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create a <xref:System.Linq.Expressions.MethodCallExpression> that represents indexing into a two-dimensional array.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#3)]
 [!code-vb[System.Linq.Expressions.Expression#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-486">
            <paramref name="array" /> 또는 <paramref name="indexes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-486">
              <paramref name="array" /> or <paramref name="indexes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-487">
            <paramref name="array" />.Type이 배열 형식을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-487">
              <paramref name="array" />.Type does not represent an array type.</span>
          </span>
          <span data-ttu-id="5ff2c-488">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-488">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-489">
            <paramref name="array" />.Type의 차수가 <paramref name="indexes" />의 요소 수와 일치하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-489">The rank of <paramref name="array" />.Type does not match the number of elements in <paramref name="indexes" />.</span>
          </span>
          <span data-ttu-id="5ff2c-490">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-490">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-491">
            <paramref name="indexes" />의 요소 중 하나 이상의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성이 <see cref="T:System.Int32" /> 형식을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-491">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="indexes" /> does not represent the <see cref="T:System.Int32" /> type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ArrayLength">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression ArrayLength (System.Linq.Expressions.Expression array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression ArrayLength(class System.Linq.Expressions.Expression array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayLength (array As Expression) As UnaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ ArrayLength(System::Linq::Expressions::Expression ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="5ff2c-492">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-492">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-493">1차원 배열 길이를 가져오는 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-493">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an expression for obtaining the length of a one-dimensional array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-494">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ArrayLength" /> 속성이 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />인 <paramref name="array" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-494">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ArrayLength" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-495"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 `array` 배열 형식을 나타내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-495">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `array` must represent an array type.</span></span>  
  
 <span data-ttu-id="5ff2c-496"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.UnaryExpression> 같으면 <xref:System.Int32>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-496">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is equal to <xref:System.Int32>.</span></span> <span data-ttu-id="5ff2c-497"><xref:System.Linq.Expressions.UnaryExpression.Method%2A> 속성은 `null`, 둘 다 고 <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> 로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-497">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property is `null`, and both <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> are set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-498">
            <paramref name="array" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-498">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-499">
            <paramref name="array" />.Type이 배열 형식을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-499">
              <paramref name="array" />.Type does not represent an array type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Assign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Assign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Assign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Assign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Assign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-500">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-500">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-501">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-501">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-502">할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-502">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-503">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Assign" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-503">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Assign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-504">`Assign` 식은 값 형식에 대 한 값을 복사 하 고 참조 형식에 대 한 참조를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-504">The `Assign` expression copies a value for value types, and it copies a reference for reference types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-505">다음 코드 예제에서는 할당 연산을 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-505">The following code example shows how to create an expression that represents an assignment operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#12)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Bind">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-506">멤버 초기화를 나타내는 <see cref="T:System.Linq.Expressions.MemberAssignment" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-506">Creates a <see cref="T:System.Linq.Expressions.MemberAssignment" /> that represents the initialization of a member.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberAssignment Bind (System.Reflection.MemberInfo member, System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberAssignment Bind(class System.Reflection.MemberInfo member, class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberAssignment ^ Bind(System::Reflection::MemberInfo ^ member, System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberAssignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="5ff2c-507">
            <see cref="T:System.Reflection.MemberInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MemberBinding.Member" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-507">A <see cref="T:System.Reflection.MemberInfo" /> to set the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property equal to.</span>
          </span>
        </param>
        <param name="expression">
          <span data-ttu-id="5ff2c-508">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-508">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-509">필드 또는 속성 초기화를 나타내는 <see cref="T:System.Linq.Expressions.MemberAssignment" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-509">Creates a <see cref="T:System.Linq.Expressions.MemberAssignment" /> that represents the initialization of a field or property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-510">
            <see cref="T:System.Linq.Expressions.MemberAssignment" />이 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />이고 <see cref="F:System.Linq.Expressions.MemberBindingType.Assignment" /> 및 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-510">A <see cref="T:System.Linq.Expressions.MemberAssignment" /> that has <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> equal to <see cref="F:System.Linq.Expressions.MemberBindingType.Assignment" /> and the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> and <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-511"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 `expression` 나타내는 형식에 할당할 수 있어야는 <xref:System.Reflection.FieldInfo.FieldType%2A> 또는 <xref:System.Reflection.PropertyInfo.PropertyType%2A> 속성 `member`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-511">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `expression` must be assignable to the type represented by the <xref:System.Reflection.FieldInfo.FieldType%2A> or <xref:System.Reflection.PropertyInfo.PropertyType%2A> property of `member`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-512">
            <paramref name="member" /> 또는 <paramref name="expression" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-512">
              <paramref name="member" /> or <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-513">
            <paramref name="member" />가 필드나 속성을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-513">
              <paramref name="member" /> does not represent a field or property.</span>
          </span>
          <span data-ttu-id="5ff2c-514">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-514">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-515">
            <paramref name="member" />가 나타내는 속성에 <see langword="set" /> 접근자가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-515">The property represented by <paramref name="member" /> does not have a <see langword="set" /> accessor.</span>
          </span>
          <span data-ttu-id="5ff2c-516">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-516">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-517">
            <paramref name="expression" />.Type을 <paramref name="member" />가 나타내는 필드 또는 속성의 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-517">
              <paramref name="expression" />.Type is not assignable to the type of the field or property that <paramref name="member" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberAssignment Bind (System.Reflection.MethodInfo propertyAccessor, System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberAssignment Bind(class System.Reflection.MethodInfo propertyAccessor, class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberAssignment ^ Bind(System::Reflection::MethodInfo ^ propertyAccessor, System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberAssignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="propertyAccessor">
          <span data-ttu-id="5ff2c-518">속성 접근자 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-518">A <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span>
          </span>
        </param>
        <param name="expression">
          <span data-ttu-id="5ff2c-519">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-519">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-520">속성 접근자 메서드를 사용한 멤버 초기화를 나타내는 <see cref="T:System.Linq.Expressions.MemberAssignment" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-520">Creates a <see cref="T:System.Linq.Expressions.MemberAssignment" /> that represents the initialization of a member by using a property accessor method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-521">
            <see cref="T:System.Linq.Expressions.MemberAssignment" /> 속성이 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />이고 <see cref="F:System.Linq.Expressions.MemberBindingType.Assignment" /> 속성이 <see cref="P:System.Linq.Expressions.MemberBinding.Member" />로 액세스되는 속성을 나타내는 <see cref="T:System.Reflection.PropertyInfo" />로 설정되고 <paramref name="propertyAccessor" /> 속성이 <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" />으로 설정된 <paramref name="expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-521">A <see cref="T:System.Linq.Expressions.MemberAssignment" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.Assignment" />, the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />, and the <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> property set to <paramref name="expression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-522"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 `expression` 나타내는 형식에 할당할 수 있어야는 <xref:System.Reflection.PropertyInfo.PropertyType%2A> 액세스 되는 속성의 속성 `propertyAccessor`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-522">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `expression` must be assignable to the type represented by the <xref:System.Reflection.PropertyInfo.PropertyType%2A> property of the property accessed in `propertyAccessor`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-523">
            <paramref name="propertyAccessor" /> 또는 <paramref name="expression" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-523">
              <paramref name="propertyAccessor" /> or <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-524">
            <paramref name="propertyAccessor" />가 속성 접근자 메서드를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-524">
              <paramref name="propertyAccessor" /> does not represent a property accessor method.</span>
          </span>
          <span data-ttu-id="5ff2c-525">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-525">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-526">
            <paramref name="propertyAccessor" />에서 액세스되는 속성에 <see langword="set" /> 접근자가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-526">The property accessed by <paramref name="propertyAccessor" /> does not have a <see langword="set" /> accessor.</span>
          </span>
          <span data-ttu-id="5ff2c-527">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-527">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-528">
            <paramref name="expression" />.Type을 <paramref name="member" />가 나타내는 필드 또는 속성의 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-528">
              <paramref name="expression" />.Type is not assignable to the type of the field or property that <paramref name="member" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Block">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-529">
            <see cref="T:System.Linq.Expressions.BlockExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-529">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (expressions As IEnumerable(Of Expression)) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="expressions">
          <span data-ttu-id="5ff2c-530">블록의 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-530">The expressions in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-531">지정된 식을 포함하고 변수가 없는 <see cref="T:System.Linq.Expressions.BlockExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-531">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given expressions and has no variables.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-532">만든 <see cref="T:System.Linq.Expressions.BlockExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-532">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-533">블록 식이 실행 되 면 블록의 마지막 식의 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-533">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (params System.Linq.Expressions.Expression[] expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Linq.Expressions.Expression[] expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (ParamArray expressions As Expression()) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressions" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="expressions">
          <span data-ttu-id="5ff2c-534">블록의 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-534">The expressions in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-535">지정된 식을 포함하고 변수가 없는 <see cref="T:System.Linq.Expressions.BlockExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-535">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given expressions and has no variables.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-536">만든 <see cref="T:System.Linq.Expressions.BlockExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-536">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-537">블록 식이 실행 되 면 블록의 마지막 식의 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-537">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-538">다음 코드 예제에서는 블록 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-538">The following code example shows how to create a block expression.</span></span> <span data-ttu-id="5ff2c-539">블록 식은 두 개의 <xref:System.Linq.Expressions.MethodCallExpression> 개체와 하나의 <xref:System.Linq.Expressions.ConstantExpression> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-539">The block expression consists of two <xref:System.Linq.Expressions.MethodCallExpression> objects and one <xref:System.Linq.Expressions.ConstantExpression> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#13)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; variables, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; variables, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (variables As IEnumerable(Of ParameterExpression), expressions As IEnumerable(Of Expression)) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="variables">
          <span data-ttu-id="5ff2c-540">블록의 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-540">The variables in the block.</span>
          </span>
        </param>
        <param name="expressions">
          <span data-ttu-id="5ff2c-541">블록의 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-541">The expressions in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-542">지정된 변수와 식이 포함된 <see cref="T:System.Linq.Expressions.BlockExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-542">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given variables and expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-543">만든 <see cref="T:System.Linq.Expressions.BlockExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-543">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-544">블록 식이 실행 되 면 블록의 마지막 식의 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-544">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-545">다음 코드 예제에서는 블록 식에 매개 변수를 전달 하 고 블록 내에서이 매개 변수를 처리 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-545">The following code example shows how to pass a parameter to a block expression and process this parameter within a block.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#14)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; variables, params System.Linq.Expressions.Expression[] expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; variables, class System.Linq.Expressions.Expression[] expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (variables As IEnumerable(Of ParameterExpression), ParamArray expressions As Expression()) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
        <Parameter Name="expressions" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="variables">
          <span data-ttu-id="5ff2c-546">블록의 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-546">The variables in the block.</span>
          </span>
        </param>
        <param name="expressions">
          <span data-ttu-id="5ff2c-547">블록의 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-547">The expressions in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-548">지정된 변수와 식이 포함된 <see cref="T:System.Linq.Expressions.BlockExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-548">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given variables and expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-549">만든 <see cref="T:System.Linq.Expressions.BlockExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-549">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-550">블록 식이 실행 되 면 블록의 마지막 식의 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-550">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (arg0 As Expression, arg1 As Expression) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="arg0">
          <span data-ttu-id="5ff2c-551">블록의 첫 번째 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-551">The first expression in the block.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5ff2c-552">블록의 두 번째 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-552">The second expression in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-553">2개 식을 포함하고 변수가 없는 <see cref="T:System.Linq.Expressions.BlockExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-553">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains two expressions and has no variables.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-554">만든 <see cref="T:System.Linq.Expressions.BlockExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-554">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-555">블록 식이 실행 되 면 블록의 마지막 식의 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-555">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (Type type, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(Type ^ type, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-556">블록의 결과 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-556">The result type of the block.</span>
          </span>
        </param>
        <param name="expressions">
          <span data-ttu-id="5ff2c-557">블록의 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-557">The expressions in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-558">지정된 식을 포함하고 변수가 없으며 특정 결과 형식이 있는 <see cref="T:System.Linq.Expressions.BlockExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-558">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given expressions, has no variables and has specific result type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-559">만든 <see cref="T:System.Linq.Expressions.BlockExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-559">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (Type type, params System.Linq.Expressions.Expression[] expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Type type, class System.Linq.Expressions.Expression[] expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(Type ^ type, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="expressions" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-560">블록의 결과 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-560">The result type of the block.</span>
          </span>
        </param>
        <param name="expressions">
          <span data-ttu-id="5ff2c-561">블록의 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-561">The expressions in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-562">지정된 식을 포함하고 변수가 없으며 특정 결과 형식이 있는 <see cref="T:System.Linq.Expressions.BlockExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-562">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given expressions, has no variables and has specific result type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-563">만든 <see cref="T:System.Linq.Expressions.BlockExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-563">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (arg0 As Expression, arg1 As Expression, arg2 As Expression) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="arg0">
          <span data-ttu-id="5ff2c-564">블록의 첫 번째 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-564">The first expression in the block.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5ff2c-565">블록의 두 번째 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-565">The second expression in the block.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="5ff2c-566">블록의 세 번째 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-566">The third expression in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-567">3개 식을 포함하고 변수가 없는 <see cref="T:System.Linq.Expressions.BlockExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-567">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains three expressions and has no variables.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-568">만든 <see cref="T:System.Linq.Expressions.BlockExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-568">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-569">블록 식이 실행 되 면 블록의 마지막 식의 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-569">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (Type type, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; variables, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; variables, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(Type ^ type, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-570">블록의 결과 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-570">The result type of the block.</span>
          </span>
        </param>
        <param name="variables">
          <span data-ttu-id="5ff2c-571">블록의 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-571">The variables in the block.</span>
          </span>
        </param>
        <param name="expressions">
          <span data-ttu-id="5ff2c-572">블록의 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-572">The expressions in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-573">지정된 변수와 식이 포함된 <see cref="T:System.Linq.Expressions.BlockExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-573">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given variables and expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-574">만든 <see cref="T:System.Linq.Expressions.BlockExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-574">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (Type type, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; variables, params System.Linq.Expressions.Expression[] expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; variables, class System.Linq.Expressions.Expression[] expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(Type ^ type, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
        <Parameter Name="expressions" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-575">블록의 결과 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-575">The result type of the block.</span>
          </span>
        </param>
        <param name="variables">
          <span data-ttu-id="5ff2c-576">블록의 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-576">The variables in the block.</span>
          </span>
        </param>
        <param name="expressions">
          <span data-ttu-id="5ff2c-577">블록의 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-577">The expressions in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-578">지정된 변수와 식이 포함된 <see cref="T:System.Linq.Expressions.BlockExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-578">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given variables and expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-579">만든 <see cref="T:System.Linq.Expressions.BlockExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-579">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="arg0">
          <span data-ttu-id="5ff2c-580">블록의 첫 번째 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-580">The first expression in the block.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5ff2c-581">블록의 두 번째 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-581">The second expression in the block.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="5ff2c-582">블록의 세 번째 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-582">The third expression in the block.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="5ff2c-583">블록의 네 번째 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-583">The fourth expression in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-584">4개 식을 포함하고 변수가 없는 <see cref="T:System.Linq.Expressions.BlockExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-584">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains four expressions and has no variables.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-585">만든 <see cref="T:System.Linq.Expressions.BlockExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-585">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-586">블록 식이 실행 되 면 블록의 마지막 식의 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-586">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3, System.Linq.Expressions.Expression arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3, class System.Linq.Expressions.Expression arg4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression, arg4 As Expression) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3, System::Linq::Expressions::Expression ^ arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg4" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="arg0">
          <span data-ttu-id="5ff2c-587">블록의 첫 번째 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-587">The first expression in the block.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5ff2c-588">블록의 두 번째 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-588">The second expression in the block.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="5ff2c-589">블록의 세 번째 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-589">The third expression in the block.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="5ff2c-590">블록의 네 번째 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-590">The fourth expression in the block.</span>
          </span>
        </param>
        <param name="arg4">
          <span data-ttu-id="5ff2c-591">블록의 다섯 번째 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-591">The fifth expression in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-592">5개 식을 포함하고 변수가 없는 <see cref="T:System.Linq.Expressions.BlockExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-592">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains five expressions and has no variables.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-593">만든 <see cref="T:System.Linq.Expressions.BlockExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-593">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-594">블록 식이 실행 되 면 블록의 마지막 식의 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-594">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Break">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-595">break 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-595">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a break statement.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Break(class System.Linq.Expressions.LabelTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Break (target As LabelTarget) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Break(System::Linq::Expressions::LabelTarget ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="5ff2c-596">
            <see cref="T:System.Linq.Expressions.LabelTarget" />이 이동할 <see cref="T:System.Linq.Expressions.GotoExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-596">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-597">break 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-597">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a break statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-598">
            <see cref="T:System.Linq.Expressions.GotoExpression" />가 Break이고, <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 속성이 <see cref="P:System.Linq.Expressions.GotoExpression.Target" />으로 설정되며, 이동 시 대상 레이블에 null 값이 전달되는 <paramref name="target" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-598">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Break, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and a null value to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-599">다음 예제에서는 포함 된 식을 만드는 <xref:System.Linq.Expressions.LoopExpression> 사용 하는 개체는 <xref:System.Linq.Expressions.Expression.Break%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-599">The following example demonstrates how to create an expression that contains a <xref:System.Linq.Expressions.LoopExpression> object that uses the <xref:System.Linq.Expressions.Expression.Break%2A> method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#44)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#44)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Break(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Break (target As LabelTarget, value As Expression) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Break(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="5ff2c-600">
            <see cref="T:System.Linq.Expressions.LabelTarget" />이 이동할 <see cref="T:System.Linq.Expressions.GotoExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-600">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5ff2c-601">이동 시 연결된 레이블에 전달될 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-601">The value that will be passed to the associated label upon jumping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-602">break 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-602">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a break statement.</span>
          </span>
          <span data-ttu-id="5ff2c-603">이동 시 레이블에 전달되는 값을 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-603">The value passed to the label upon jumping can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-604">
            <see cref="T:System.Linq.Expressions.GotoExpression" />가 Break이고, <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 속성이 <see cref="P:System.Linq.Expressions.GotoExpression.Target" />으로 설정되며, 이동 시 대상 레이블에 <paramref name="target" />가 전달되는 <paramref name="value" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-604">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Break, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Break(class System.Linq.Expressions.LabelTarget target, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Break(System::Linq::Expressions::LabelTarget ^ target, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="5ff2c-605">
            <see cref="T:System.Linq.Expressions.LabelTarget" />이 이동할 <see cref="T:System.Linq.Expressions.GotoExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-605">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-606">
            <see cref="T:System.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-606">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-607">지정된 형식을 사용하여 break 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-607">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a break statement with the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-608">
            <see cref="T:System.Linq.Expressions.GotoExpression" />가 Break이고, <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 속성이 <see cref="P:System.Linq.Expressions.GotoExpression.Target" />으로 설정되며, <paramref name="target" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.Type" />으로 설정된 <paramref name="type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-608">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Break, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Break(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Break(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="5ff2c-609">
            <see cref="T:System.Linq.Expressions.LabelTarget" />이 이동할 <see cref="T:System.Linq.Expressions.GotoExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-609">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5ff2c-610">이동 시 연결된 레이블에 전달될 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-610">The value that will be passed to the associated label upon jumping.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-611">
            <see cref="T:System.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-611">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-612">지정된 형식을 사용하여 break 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-612">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a break statement with the specified type.</span>
          </span>
          <span data-ttu-id="5ff2c-613">이동 시 레이블에 전달되는 값을 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-613">The value passed to the label upon jumping can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-614">
            <see cref="T:System.Linq.Expressions.GotoExpression" />가 Break이고, <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 속성이 <see cref="P:System.Linq.Expressions.GotoExpression.Target" />으로 설정되며, <paramref name="target" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.Type" />으로 설정되고, 이동 시 대상 레이블에 <paramref name="type" />가 전달되는 <paramref name="value" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-614">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Break, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Call">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-615">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-615">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, method As MethodInfo) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="5ff2c-616">인스턴스 메서드 호출에 대한 인스턴스를 지정하는 <see cref="T:System.Linq.Expressions.Expression" />이며 <see langword="null" /> (Visual Basic의 경우 <see langword="static" />) 메서드에 대해 <see langword="Shared" />를 전달합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-616">An <see cref="T:System.Linq.Expressions.Expression" /> that specifies the instance for an instance method call (pass <see langword="null" /> for a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method).</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-617">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-617">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-618">인수를 받지 않는 메서드에 대한 호출을 나타내는 <see cref="T:System.Linq.Expressions.MethodCallExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-618">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method that takes no arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-619">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> 및 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-619">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-620">에 대 한 호출을 나타내는 데는 `static` (`Shared` Visual basic에서) 메서드를 `null` 에 대 한는 `instance` 이 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-620">To represent a call to a `static` (`Shared` in Visual Basic) method, pass in `null` for the `instance` parameter when you call this method.</span></span>  
  
 <span data-ttu-id="5ff2c-621">경우 `method` 인스턴스 메서드를 나타내는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성 `instance` 가 나타내는 메서드의 선언 형식에 할당할 수 있어야 `method`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-621">If `method` represents an instance method, the <xref:System.Linq.Expressions.Expression.Type%2A> property of `instance` must be assignable to the declaring type of the method represented by `method`.</span></span>  
  
 <span data-ttu-id="5ff2c-622"><xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> 결과 속성 <xref:System.Linq.Expressions.MethodCallExpression> 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-622">The <xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is empty.</span></span> <span data-ttu-id="5ff2c-623"><xref:System.Linq.Expressions.Expression.Type%2A> 속성은가 나타내는 메서드의 반환 형식에 `method`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-623">The <xref:System.Linq.Expressions.Expression.Type%2A> property is equal to the return type of the method represented by `method`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-624">다음 코드 예제에는 인수 없이 메서드를 호출 하는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-624">The following code example shows how to create an expression that calls a method without arguments.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#15)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-625">
            <paramref name="method" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-625">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-626">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-626">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-627">
            <paramref name="instance" />가 <see langword="null" />이고 <paramref name="method" />가 인스턴스 메서드를 나타내는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-627">
              <paramref name="instance" /> is <see langword="null" /> and <paramref name="method" /> represents an instance method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-628">
            <paramref name="instance" />.Type을 <paramref name="method" />로 나타내는 메서드의 선언 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-628">
              <paramref name="instance" />.Type is not assignable to the declaring type of the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arguments As IEnumerable(Of Expression)) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="5ff2c-629">대상 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-629">The <see cref="T:System.Reflection.MethodInfo" /> that represents the target method.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-630">호출 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-630">A collection of <see cref="T:System.Linq.Expressions.Expression" /> that represents the call arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-631">static(Visual Basic에서는 Shared) 메서드에 대한 호출을 나타내는 <see cref="T:System.Linq.Expressions.MethodCallExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-631">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a static (Shared in Visual Basic) method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-632">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> 및 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-632">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arg0 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="5ff2c-633">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-633">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5ff2c-634">첫 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-634">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-635">1개 인수를 받는 <see cref="T:System.Linq.Expressions.MethodCallExpression" />(Visual Basic에서는 <see langword="static" />) 메서드에 대한 호출을 나타내는 <see langword="Shared" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-635">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method that takes one argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-636">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> 및 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-636">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-637">다음 예제를 호출 하는 식을 만드는 방법을 보여 줍니다는 `static` (`Shared` Visual basic에서) 하나의 인수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-637">The following example demonstrates how to create an expression that calls a `static` (`Shared` in Visual Basic) method that takes one argument.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#16)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-638">
            <paramref name="method" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-638">
              <paramref name="method" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, ParamArray arguments As Expression()) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="5ff2c-639">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see langword="static" />(Visual Basic에서는 <see langword="Shared" />) 메서드를 나타내는 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-639">A <see cref="T:System.Reflection.MethodInfo" /> that represents a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-640">
            <see cref="T:System.Linq.Expressions.Expression" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-640">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-641">인수가 있는 <see cref="T:System.Linq.Expressions.MethodCallExpression" />(Visual Basic에서는 <see langword="static" />) 메서드에 대한 호출을 나타내는 <see langword="Shared" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-641">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method that has arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-642">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> 및 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-642">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-643">경우 `arguments` 않습니다 `null`, 나타내는 메서드에 대 한 매개 변수 수가 같은 수의 요소가 있어야 `method`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-643">If `arguments` is not `null`, it must have the same number of elements as the number of parameters for the method represented by `method`.</span></span> <span data-ttu-id="5ff2c-644">각 요소에 `arguments` 않아야 `null` 의 해당 매개 변수를 할당할 수 있어야 하 고 `method`, 후 가능한 *인용 부호*합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-644">Each element in `arguments` must not be `null` and must be assignable to the corresponding parameter of `method`, possibly after *quoting*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5ff2c-645">해당 메서드 매개 변수의 형식이 있을 경우에 요소 인용 됩니다 <xref:System.Linq.Expressions.Expression>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-645">An element will be quoted only if the corresponding method parameter is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="5ff2c-646">요소에 래핑됩니다 인용는 <xref:System.Linq.Expressions.ExpressionType.Quote> 노드.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-646">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="5ff2c-647">결과 노드는 <xref:System.Linq.Expressions.UnaryExpression> 인 <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> 속성의 요소인 `arguments`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-647">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
 <span data-ttu-id="5ff2c-648"><xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> 결과의 속성 <xref:System.Linq.Expressions.MethodCallExpression> 비어 있으면 `arguments` 은 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-648">The <xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is empty if `arguments` is `null`.</span></span> <span data-ttu-id="5ff2c-649">동일한 요소를 포함 하지 않으면, `arguments`, 이중 일부는 따옴표로 묶을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-649">Otherwise, it contains the same elements as `arguments`, some of which may be quoted.</span></span>  
  
 <span data-ttu-id="5ff2c-650"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.MethodCallExpression> 가 나타내는 메서드의 반환 형식으로 같은지 `method`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-650">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is equal to the return type of the method represented by `method`.</span></span> <span data-ttu-id="5ff2c-651"><xref:System.Linq.Expressions.MethodCallExpression.Object%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-651">The <xref:System.Linq.Expressions.MethodCallExpression.Object%2A> property is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-652">
            <paramref name="method" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-652">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-653">
            <paramref name="arguments" />의 요소 수가 <paramref name="method" />로 나타내는 메서드의 매개 변수 수와 같지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-653">The number of elements in <paramref name="arguments" /> does not equal the number of parameters for the method represented by <paramref name="method" />.</span>
          </span>
          <span data-ttu-id="5ff2c-654">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-654">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-655">
            <paramref name="arguments" />의 요소 중 하나 이상을 <paramref name="method" />로 나타내는 메서드의 해당 매개 변수에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-655">One or more of the elements of <paramref name="arguments" /> is not assignable to the corresponding parameter for the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, class System.Reflection.MethodInfo method, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, method As MethodInfo, arguments As IEnumerable(Of Expression)) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::Reflection::MethodInfo ^ method, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="5ff2c-656">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />입니다. <see langword="null" />(Visual Basic에서는 <see langword="static" />) 메서드의 경우 <see langword="Shared" />을 전달합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-656">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> property equal to (pass <see langword="null" /> for a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method).</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-657">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-657">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-658">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.Expression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-658">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-659">인수를 받는 메서드에 대한 호출을 나타내는 <see cref="T:System.Linq.Expressions.MethodCallExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-659">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method that takes arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-660">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 및 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-660">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />, <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />, and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-661">에 대 한 호출을 나타내는 데는 `static` (`Shared` Visual basic에서) 메서드를 `null` 에 대 한는 `instance` 이 메서드를 호출할 때 호출 또는 <xref:System.Linq.Expressions.Expression.Call%2A> 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-661">To represent a call to a `static` (`Shared` in Visual Basic) method, pass in `null` for the `instance` parameter when you call this method, or call <xref:System.Linq.Expressions.Expression.Call%2A> instead.</span></span>  
  
 <span data-ttu-id="5ff2c-662">경우 `method` 인스턴스 메서드를 나타내는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성 `instance` 가 나타내는 메서드의 선언 형식에 할당할 수 있어야 `method`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-662">If `method` represents an instance method, the <xref:System.Linq.Expressions.Expression.Type%2A> property of `instance` must be assignable to the declaring type of the method represented by `method`.</span></span>  
  
 <span data-ttu-id="5ff2c-663">경우 `arguments` 않습니다 `null`, 나타내는 메서드에 대 한 매개 변수 수가 같은 수의 요소가 있어야 `method`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-663">If `arguments` is not `null`, it must have the same number of elements as the number of parameters for the method represented by `method`.</span></span> <span data-ttu-id="5ff2c-664">각 요소에 `arguments` 않아야 `null` 의 해당 매개 변수를 할당할 수 있어야 하 고 `method`, 후 가능한 *인용 부호*합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-664">Each element in `arguments` must not be `null` and must be assignable to the corresponding parameter of `method`, possibly after *quoting*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5ff2c-665">해당 메서드 매개 변수의 형식이 있을 경우에 요소 인용 됩니다 <xref:System.Linq.Expressions.Expression>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-665">An element will be quoted only if the corresponding method parameter is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="5ff2c-666">요소에 래핑됩니다 인용는 <xref:System.Linq.Expressions.ExpressionType.Quote> 노드.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-666">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="5ff2c-667">결과 노드는 <xref:System.Linq.Expressions.UnaryExpression> 인 <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> 속성의 요소인 `arguments`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-667">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
 <span data-ttu-id="5ff2c-668"><xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> 결과의 속성 <xref:System.Linq.Expressions.MethodCallExpression> 비어 있으면 `arguments` 은 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-668">The <xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is empty if `arguments` is `null`.</span></span> <span data-ttu-id="5ff2c-669">동일한 요소를 포함 하지 않으면, `arguments`, 이중 일부는 따옴표로 묶을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-669">Otherwise, it contains the same elements as `arguments`, some of which may be quoted.</span></span>  
  
 <span data-ttu-id="5ff2c-670"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.MethodCallExpression> 가 나타내는 메서드의 반환 형식으로 같은지 `method`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-670">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is equal to the return type of the method represented by `method`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-671">
            <paramref name="method" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-671">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-672">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-672">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-673">
            <paramref name="instance" />가 <see langword="null" />이고 <paramref name="method" />가 인스턴스 메서드를 나타내는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-673">
              <paramref name="instance" /> is <see langword="null" /> and <paramref name="method" /> represents an instance method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-674">
            <paramref name="instance" />.Type을 <paramref name="method" />로 나타내는 메서드의 선언 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-674">
              <paramref name="instance" />.Type is not assignable to the declaring type of the method represented by <paramref name="method" />.</span>
          </span>
          <span data-ttu-id="5ff2c-675">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-675">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-676">
            <paramref name="arguments" />의 요소 수가 <paramref name="method" />로 나타내는 메서드의 매개 변수 수와 같지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-676">The number of elements in <paramref name="arguments" /> does not equal the number of parameters for the method represented by <paramref name="method" />.</span>
          </span>
          <span data-ttu-id="5ff2c-677">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-677">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-678">
            <paramref name="arguments" />의 요소 중 하나 이상을 <paramref name="method" />로 나타내는 메서드의 해당 매개 변수에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-678">One or more of the elements of <paramref name="arguments" /> is not assignable to the corresponding parameter for the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, method As MethodInfo, ParamArray arguments As Expression()) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::Reflection::MethodInfo ^ method, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="5ff2c-679">인스턴스 메서드 호출에 대한 인스턴스를 지정하는 <see cref="T:System.Linq.Expressions.Expression" />이며 <see langword="null" /> (Visual Basic의 경우 <see langword="static" />) 메서드에 대해 <see langword="Shared" />를 전달합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-679">An <see cref="T:System.Linq.Expressions.Expression" /> that specifies the instance for an instance method call (pass <see langword="null" /> for a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method).</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-680">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-680">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-681">
            <see cref="T:System.Linq.Expressions.Expression" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-681">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-682">인수를 받는 메서드에 대한 호출을 나타내는 <see cref="T:System.Linq.Expressions.MethodCallExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-682">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method that takes arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-683">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 및 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-683">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />, <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />, and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-684">에 대 한 호출을 나타내는 데는 `static` (`Shared` Visual basic에서) 메서드를 `null` 에 대 한는 `instance` 이 메서드를 호출할 때 호출 또는 <xref:System.Linq.Expressions.Expression.Call%2A> 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-684">To represent a call to a `static` (`Shared` in Visual Basic) method, pass in `null` for the `instance` parameter when you call this method, or call <xref:System.Linq.Expressions.Expression.Call%2A> instead.</span></span>  
  
 <span data-ttu-id="5ff2c-685">경우 `method` 인스턴스 메서드를 나타내는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성 `instance` 가 나타내는 메서드의 선언 형식에 할당할 수 있어야 `method`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-685">If `method` represents an instance method, the <xref:System.Linq.Expressions.Expression.Type%2A> property of `instance` must be assignable to the declaring type of the method represented by `method`.</span></span>  
  
 <span data-ttu-id="5ff2c-686">경우 `arguments` 않습니다 `null`, 나타내는 메서드에 대 한 매개 변수 수가 같은 수의 요소가 있어야 `method`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-686">If `arguments` is not `null`, it must have the same number of elements as the number of parameters for the method represented by `method`.</span></span> <span data-ttu-id="5ff2c-687">각 요소에 `arguments` 않아야 `null` 의 해당 매개 변수를 할당할 수 있어야 하 고 `method`, 후 가능한 *인용 부호*합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-687">Each element in `arguments` must not be `null` and must be assignable to the corresponding parameter of `method`, possibly after *quoting*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5ff2c-688">해당 메서드 매개 변수의 형식이 있을 경우에 요소 인용 됩니다 <xref:System.Linq.Expressions.Expression>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-688">An element will be quoted only if the corresponding method parameter is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="5ff2c-689">요소에 래핑됩니다 인용는 <xref:System.Linq.Expressions.ExpressionType.Quote> 노드.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-689">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="5ff2c-690">결과 노드는 <xref:System.Linq.Expressions.UnaryExpression> 인 <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> 속성의 요소인 `arguments`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-690">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
 <span data-ttu-id="5ff2c-691"><xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> 결과의 속성 <xref:System.Linq.Expressions.MethodCallExpression> 비어 있으면 `arguments` 은 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-691">The <xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is empty if `arguments` is `null`.</span></span> <span data-ttu-id="5ff2c-692">동일한 요소를 포함 하지 않으면, `arguments`, 이중 일부는 따옴표로 묶을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-692">Otherwise, it contains the same elements as `arguments`, some of which may be quoted.</span></span>  
  
 <span data-ttu-id="5ff2c-693"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.MethodCallExpression> 가 나타내는 메서드의 반환 형식으로 같은지 `method`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-693">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is equal to the return type of the method represented by `method`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-694">
            <paramref name="method" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-694">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-695">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-695">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-696">
            <paramref name="instance" />가 <see langword="null" />이고 <paramref name="method" />가 인스턴스 메서드를 나타내는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-696">
              <paramref name="instance" /> is <see langword="null" /> and <paramref name="method" /> represents an instance method.</span>
          </span>
          <span data-ttu-id="5ff2c-697">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-697">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-698">
            <paramref name="arguments" />가 <see langword="null" />이 아니고 하나 이상의 해당 요소가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-698">
              <paramref name="arguments" /> is not <see langword="null" /> and one or more of its elements is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-699">
            <paramref name="instance" />.Type을 <paramref name="method" />로 나타내는 메서드의 선언 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-699">
              <paramref name="instance" />.Type is not assignable to the declaring type of the method represented by <paramref name="method" />.</span>
          </span>
          <span data-ttu-id="5ff2c-700">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-700">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-701">
            <paramref name="arguments" />의 요소 수가 <paramref name="method" />로 나타내는 메서드의 매개 변수 수와 같지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-701">The number of elements in <paramref name="arguments" /> does not equal the number of parameters for the method represented by <paramref name="method" />.</span>
          </span>
          <span data-ttu-id="5ff2c-702">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-702">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-703">
            <paramref name="arguments" />의 요소 중 하나 이상을 <paramref name="method" />로 나타내는 메서드의 해당 매개 변수에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-703">One or more of the elements of <paramref name="arguments" /> is not assignable to the corresponding parameter for the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arg0 As Expression, arg1 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="5ff2c-704">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-704">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5ff2c-705">첫 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-705">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5ff2c-706">두 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-706">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-707">2개 인수를 받는 static 메서드에 대한 호출을 나타내는 <see cref="T:System.Linq.Expressions.MethodCallExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-707">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a static method that takes two arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-708">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> 및 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-708">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-709">
            <paramref name="method" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-709">
              <paramref name="method" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, method As MethodInfo, arg0 As Expression, arg1 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="5ff2c-710">인스턴스 호출에 대한 인스턴스를 지정하는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-710">An <see cref="T:System.Linq.Expressions.Expression" /> that specifies the instance for an instance call.</span>
          </span>
          <span data-ttu-id="5ff2c-711">static(Visual Basic에서는 Shared) 메서드의 경우 null을 전달합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-711">(pass null for a static (Shared in Visual Basic) method).</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-712">대상 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-712">The <see cref="T:System.Reflection.MethodInfo" /> that represents the target method.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5ff2c-713">첫 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-713">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5ff2c-714">두 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-714">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-715">2개 인수를 받는 메서드에 대한 호출을 나타내는 <see cref="T:System.Linq.Expressions.MethodCallExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-715">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method that takes two arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-716">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> 및 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-716">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-717">다음 코드 예제에는 두 개의 인수를 가진 인스턴스 메서드를 호출 하는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-717">The following code example shows how to create an expression that calls an instance method that has two arguments.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#17)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, string methodName, Type[] typeArguments, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, string methodName, class System.Type[] typeArguments, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, methodName As String, typeArguments As Type(), ParamArray arguments As Expression()) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::String ^ methodName, cli::array &lt;Type ^&gt; ^ typeArguments, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Type[]" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="5ff2c-718">특정 메서드에 대해 <see cref="T:System.Linq.Expressions.Expression" /> 속성 값을 검색할 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-718">An <see cref="T:System.Linq.Expressions.Expression" /> whose <see cref="P:System.Linq.Expressions.Expression.Type" /> property value will be searched for a specific method.</span>
          </span>
        </param>
        <param name="methodName">
          <span data-ttu-id="5ff2c-719">메서드의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-719">The name of the method.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="5ff2c-720">제네릭 메서드의 형식 매개 변수를 지정하는 <see cref="T:System.Type" /> 개체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-720">An array of <see cref="T:System.Type" /> objects that specify the type parameters of the generic method.</span>
          </span>
          <span data-ttu-id="5ff2c-721">methodName에서 제네릭이 아닌 메서드를 지정하는 경우 이 인수는 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-721">This argument should be null when methodName specifies a non-generic method.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-722">메서드에 대한 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" /> 개체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-722">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects that represents the arguments to the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-723">적합한 팩터리 메서드를 호출하여 메서드를 호출하는 동작을 나타내는 <see cref="T:System.Linq.Expressions.MethodCallExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-723">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method by calling the appropriate factory method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-724">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고, <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> 속성이 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />이고, <paramref name="instance" />가 지정된 인스턴스 메서드를 나타내는 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />로 설정되고 <see cref="T:System.Reflection.MethodInfo" />가 지정된 인수로 설정된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-724">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> property equal to <paramref name="instance" />, <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> set to the <see cref="T:System.Reflection.MethodInfo" /> that represents the specified instance method, and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> set to the specified arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-725"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.MethodCallExpression> 로 표시 되는 메서드의 반환 형식으로 같은지 `methodName`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-725">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is equal to the return type of the method denoted by `methodName`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-726">
            <paramref name="instance" /> 또는 <paramref name="methodName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-726">
              <paramref name="instance" /> or <paramref name="methodName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-727">
            <paramref name="methodName" />.Type 또는 해당 기본 형식에 이름이 <paramref name="typeArguments" />이고 형식 매개 변수가 <paramref name="arguments" />와 일치하고 매개 변수 형식이 <paramref name="instance" />와 일치하는 메서드가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-727">No method whose name is <paramref name="methodName" />, whose type parameters match <paramref name="typeArguments" />, and whose parameter types match <paramref name="arguments" /> is found in <paramref name="instance" />.Type or its base types.</span>
          </span>
          <span data-ttu-id="5ff2c-728">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-728">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-729">
            <paramref name="methodName" />.Type 또는 해당 기본 형식에 이름이 <paramref name="typeArguments" />이고 형식 매개 변수가 <paramref name="arguments" />와 일치하고 매개 변수 형식이 <paramref name="instance" />와 일치하는 메서드가 둘 이상 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-729">More than one method whose name is <paramref name="methodName" />, whose type parameters match <paramref name="typeArguments" />, and whose parameter types match <paramref name="arguments" /> is found in <paramref name="instance" />.Type or its base types.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arg0 As Expression, arg1 As Expression, arg2 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="5ff2c-730">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-730">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5ff2c-731">첫 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-731">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5ff2c-732">두 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-732">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="5ff2c-733">세 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-733">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the third argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-734">3개 인수를 받는 static 메서드에 대한 호출을 나타내는 <see cref="T:System.Linq.Expressions.MethodCallExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-734">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a static method that takes three arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-735">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> 및 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-735">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-736">
            <paramref name="method" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-736">
              <paramref name="method" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (Type type, string methodName, Type[] typeArguments, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Type type, string methodName, class System.Type[] typeArguments, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(Type ^ type, System::String ^ methodName, cli::array &lt;Type ^&gt; ^ typeArguments, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Type[]" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-737">지정된 <see cref="T:System.Type" />(Visual Basic에서는 <see langword="static" />) 메서드가 포함된 형식을 지정하는 <see langword="Shared" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-737">The <see cref="T:System.Type" /> that specifies the type that contains the specified <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method.</span>
          </span>
        </param>
        <param name="methodName">
          <span data-ttu-id="5ff2c-738">메서드의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-738">The name of the method.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="5ff2c-739">제네릭 메서드의 형식 매개 변수를 지정하는 <see cref="T:System.Type" /> 개체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-739">An array of <see cref="T:System.Type" /> objects that specify the type parameters of the generic method.</span>
          </span>
          <span data-ttu-id="5ff2c-740">methodName에서 제네릭이 아닌 메서드를 지정하는 경우 이 인수는 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-740">This argument should be null when methodName specifies a non-generic method.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-741">메서드에 대한 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" /> 개체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-741">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects that represent the arguments to the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-742">적합한 팩터리 메서드를 호출하여 <see cref="T:System.Linq.Expressions.MethodCallExpression" />(Visual Basic에서는 <see langword="static" />) 메서드를 호출하는 동작을 나타내는 <see langword="Shared" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-742">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method by calling the appropriate factory method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-743">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> 속성이 지정된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />(Visual Basic에서는 <see cref="T:System.Reflection.MethodInfo" />) 메서드를 나타내는 <see langword="static" />로 설정되고 <see langword="Shared" /> 속성이 지정된 인수로 설정된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-743">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property set to the <see cref="T:System.Reflection.MethodInfo" /> that represents the specified <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method, and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> property set to the specified arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-744"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.MethodCallExpression> 로 표시 되는 메서드의 반환 형식으로 같은지 `methodName`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-744">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is equal to the return type of the method denoted by `methodName`.</span></span> <span data-ttu-id="5ff2c-745"><xref:System.Linq.Expressions.MethodCallExpression.Object%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-745">The <xref:System.Linq.Expressions.MethodCallExpression.Object%2A> property is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-746">
            <paramref name="type" /> 또는 <paramref name="methodName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-746">
              <paramref name="type" /> or <paramref name="methodName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-747">
            <paramref name="methodName" /> 또는 해당 기본 형식에 이름이 <paramref name="typeArguments" />이고 형식 매개 변수가 <paramref name="arguments" />와 일치하고 매개 변수 형식이 <paramref name="type" />와 일치하는 메서드가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-747">No method whose name is <paramref name="methodName" />, whose type parameters match <paramref name="typeArguments" />, and whose parameter types match <paramref name="arguments" /> is found in <paramref name="type" /> or its base types.</span>
          </span>
          <span data-ttu-id="5ff2c-748">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-748">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-749">
            <paramref name="methodName" /> 또는 해당 기본 형식에 이름이 <paramref name="typeArguments" />이고 형식 매개 변수가 <paramref name="arguments" />와 일치하고 매개 변수 형식이 <paramref name="type" />와 일치하는 메서드가 둘 이상 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-749">More than one method whose name is <paramref name="methodName" />, whose type parameters match <paramref name="typeArguments" />, and whose parameter types match <paramref name="arguments" /> is found in <paramref name="type" /> or its base types.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, method As MethodInfo, arg0 As Expression, arg1 As Expression, arg2 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="5ff2c-750">인스턴스 호출에 대한 인스턴스를 지정하는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-750">An <see cref="T:System.Linq.Expressions.Expression" /> that specifies the instance for an instance call.</span>
          </span>
          <span data-ttu-id="5ff2c-751">static(Visual Basic에서는 Shared) 메서드의 경우 null을 전달합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-751">(pass null for a static (Shared in Visual Basic) method).</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-752">대상 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-752">The <see cref="T:System.Reflection.MethodInfo" /> that represents the target method.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5ff2c-753">첫 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-753">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5ff2c-754">두 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-754">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="5ff2c-755">세 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-755">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the third argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-756">3개 인수를 받는 메서드에 대한 호출을 나타내는 <see cref="T:System.Linq.Expressions.MethodCallExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-756">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method that takes three arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-757">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> 및 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-757">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="5ff2c-758">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-758">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5ff2c-759">첫 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-759">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5ff2c-760">두 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-760">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="5ff2c-761">세 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-761">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the third argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="5ff2c-762">네 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-762">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the fourth argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-763">4개 인수를 받는 static 메서드에 대한 호출을 나타내는 <see cref="T:System.Linq.Expressions.MethodCallExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-763">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a static method that takes four arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-764">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> 및 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-764">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-765">
            <paramref name="method" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-765">
              <paramref name="method" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3, System.Linq.Expressions.Expression arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3, class System.Linq.Expressions.Expression arg4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression, arg4 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3, System::Linq::Expressions::Expression ^ arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg4" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="5ff2c-766">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-766">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5ff2c-767">첫 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-767">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5ff2c-768">두 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-768">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="5ff2c-769">세 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-769">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the third argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="5ff2c-770">네 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-770">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the fourth argument.</span>
          </span>
        </param>
        <param name="arg4">
          <span data-ttu-id="5ff2c-771">다섯 번째 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-771">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the fifth argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-772">5개 인수를 받는 static 메서드에 대한 호출을 나타내는 <see cref="T:System.Linq.Expressions.MethodCallExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-772">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a static method that takes five arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-773">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> 및 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-773">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-774">
            <paramref name="method" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-774">
              <paramref name="method" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReduce">
      <MemberSignature Language="C#" Value="public virtual bool CanReduce { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReduce" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.Expression.CanReduce" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReduce As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReduce { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-775">노드를 더 단순한 노드로 줄일 수 있는지 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-775">Indicates that the node can be reduced to a simpler node.</span>
          </span>
          <span data-ttu-id="5ff2c-776">true를 반환하면 Reduce()를 호출하여 축소된 형식을 만들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-776">If this returns true, Reduce() can be called to produce the reduced form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ff2c-777">노드를 줄일 수 있으면 true이고, 그렇지 않으면 false입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-777">True if the node can be reduced, otherwise false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Catch">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-778">catch 문을 나타내는 <see cref="T:System.Linq.Expressions.CatchBlock" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-778">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Catch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.CatchBlock Catch (System.Linq.Expressions.ParameterExpression variable, System.Linq.Expressions.Expression body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.CatchBlock Catch(class System.Linq.Expressions.ParameterExpression variable, class System.Linq.Expressions.Expression body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Catch (variable As ParameterExpression, body As Expression) As CatchBlock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::CatchBlock ^ Catch(System::Linq::Expressions::ParameterExpression ^ variable, System::Linq::Expressions::Expression ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.CatchBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Linq.Expressions.ParameterExpression" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="variable">
          <span data-ttu-id="5ff2c-779">이 처리기가 catch한 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 개체에 대한 참조를 나타내는 <see cref="T:System.Exception" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-779">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> representing a reference to the <see cref="T:System.Exception" /> object caught by this handler.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="5ff2c-780">catch 문의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-780">The body of the catch statement.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-781">처리기 본문에 사용하기 위해 catch된 <see cref="T:System.Linq.Expressions.CatchBlock" /> 개체에 대한 참조가 포함된 catch 문을 나타내는 <see cref="T:System.Exception" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-781">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement with a reference to the caught <see cref="T:System.Exception" /> object for use in the handler body.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-782">만든 <see cref="T:System.Linq.Expressions.CatchBlock" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-782">The created <see cref="T:System.Linq.Expressions.CatchBlock" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Catch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.CatchBlock Catch (Type type, System.Linq.Expressions.Expression body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.CatchBlock Catch(class System.Type type, class System.Linq.Expressions.Expression body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::CatchBlock ^ Catch(Type ^ type, System::Linq::Expressions::Expression ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.CatchBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-783">이 <see cref="P:System.Linq.Expressions.Expression.Type" />이 처리할 <see cref="T:System.Exception" />의 <see cref="T:System.Linq.Expressions.CatchBlock" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-783">The <see cref="P:System.Linq.Expressions.Expression.Type" /> of <see cref="T:System.Exception" /> this <see cref="T:System.Linq.Expressions.CatchBlock" /> will handle.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="5ff2c-784">catch 문의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-784">The body of the catch statement.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-785">catch 문을 나타내는 <see cref="T:System.Linq.Expressions.CatchBlock" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-785">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-786">만든 <see cref="T:System.Linq.Expressions.CatchBlock" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-786">The created <see cref="T:System.Linq.Expressions.CatchBlock" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-787"><xref:System.Linq.Expressions.Expression.Type%2A> 의 <xref:System.Exception> 를 찾아낼 수에 대 한 참조만 지정 될 수는 <xref:System.Exception> 개체에서 사용 하기 위해 사용할 수 있는지는 <xref:System.Linq.Expressions.CatchBlock>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-787">The <xref:System.Linq.Expressions.Expression.Type%2A> of <xref:System.Exception> to be caught can be specified but no reference to the <xref:System.Exception> object will be available for use in the <xref:System.Linq.Expressions.CatchBlock>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Catch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.CatchBlock Catch (System.Linq.Expressions.ParameterExpression variable, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.CatchBlock Catch(class System.Linq.Expressions.ParameterExpression variable, class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Catch (variable As ParameterExpression, body As Expression, filter As Expression) As CatchBlock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::CatchBlock ^ Catch(System::Linq::Expressions::ParameterExpression ^ variable, System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.CatchBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Linq.Expressions.ParameterExpression" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="variable">
          <span data-ttu-id="5ff2c-788">이 처리기가 catch한 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 개체에 대한 참조를 나타내는 <see cref="T:System.Exception" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-788">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> representing a reference to the <see cref="T:System.Exception" /> object caught by this handler.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="5ff2c-789">catch 문의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-789">The body of the catch statement.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="5ff2c-790">
            <see cref="T:System.Exception" /> 필터의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-790">The body of the <see cref="T:System.Exception" /> filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-791">
            <see cref="T:System.Linq.Expressions.CatchBlock" /> 필터와 catch된 <see cref="T:System.Exception" /> 개체에 대한 참조가 포함된 catch 문을 나타내는 <see cref="T:System.Exception" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-791">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement with an <see cref="T:System.Exception" /> filter and a reference to the caught <see cref="T:System.Exception" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-792">만든 <see cref="T:System.Linq.Expressions.CatchBlock" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-792">The created <see cref="T:System.Linq.Expressions.CatchBlock" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Catch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.CatchBlock Catch (Type type, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.CatchBlock Catch(class System.Type type, class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::CatchBlock ^ Catch(Type ^ type, System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.CatchBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-793">이 <see cref="P:System.Linq.Expressions.Expression.Type" />이 처리할 <see cref="T:System.Exception" />의 <see cref="T:System.Linq.Expressions.CatchBlock" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-793">The <see cref="P:System.Linq.Expressions.Expression.Type" /> of <see cref="T:System.Exception" /> this <see cref="T:System.Linq.Expressions.CatchBlock" /> will handle.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="5ff2c-794">catch 문의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-794">The body of the catch statement.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="5ff2c-795">
            <see cref="T:System.Exception" /> 필터의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-795">The body of the <see cref="T:System.Exception" /> filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-796">
            <see cref="T:System.Linq.Expressions.CatchBlock" /> 필터는 있지만 catch된 <see cref="T:System.Exception" /> 개체에 대한 참조는 없는 catch 문을 나타내는 <see cref="T:System.Exception" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-796">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement with an <see cref="T:System.Exception" /> filter but no reference to the caught <see cref="T:System.Exception" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-797">만든 <see cref="T:System.Linq.Expressions.CatchBlock" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-797">The created <see cref="T:System.Linq.Expressions.CatchBlock" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearDebugInfo">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DebugInfoExpression ClearDebugInfo (System.Linq.Expressions.SymbolDocumentInfo document);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DebugInfoExpression ClearDebugInfo(class System.Linq.Expressions.SymbolDocumentInfo document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClearDebugInfo (document As SymbolDocumentInfo) As DebugInfoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DebugInfoExpression ^ ClearDebugInfo(System::Linq::Expressions::SymbolDocumentInfo ^ document);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DebugInfoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Linq.Expressions.SymbolDocumentInfo" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="5ff2c-798">소스 파일을 나타내는 <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-798">The <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that represents the source file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-799">시퀀스 위치를 지우기 위한 <see cref="T:System.Linq.Expressions.DebugInfoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-799">Creates a <see cref="T:System.Linq.Expressions.DebugInfoExpression" /> for clearing a sequence point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-800">시퀀스 위치를 지우기 위한 <see cref="T:System.Linq.Expressions.DebugInfoExpression" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-800">An instance of <see cref="T:System.Linq.Expressions.DebugInfoExpression" /> for clearning a sequence point.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Coalesce">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-801">결합 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-801">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a coalescing operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Coalesce">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Coalesce (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Coalesce(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Coalesce (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Coalesce(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-802">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-802">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-803">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-803">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-804">결합 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-804">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a coalescing operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-805">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-805">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-806"><xref:System.Linq.Expressions.BinaryExpression.Method%2A> 결과 속성 <xref:System.Linq.Expressions.BinaryExpression> 은 `null` 및 둘 다 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-806">The <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.BinaryExpression> is `null` and both <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> are set to `false`.</span></span> <span data-ttu-id="5ff2c-807"><xref:System.Linq.Expressions.Expression.Type%2A> 속성은 결합 작업의 결과 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-807">The <xref:System.Linq.Expressions.Expression.Type%2A> property is equal to the result type of the coalescing operation.</span></span> <span data-ttu-id="5ff2c-808"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-808">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
#### <a name="result-type"></a><span data-ttu-id="5ff2c-809">결과 유형</span><span class="sxs-lookup"><span data-stu-id="5ff2c-809">Result Type</span></span>  
 <span data-ttu-id="5ff2c-810">다음 규칙 결과 유형을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-810">The following rules determine the result type:</span></span>  
  
-   <span data-ttu-id="5ff2c-811">경우 `left`합니다. 형식이 nullable 형식을 나타내는지 및 `right`합니다. 형식이 nullable이 아닌 해당 유형으로 암시적으로 변환 될 수, 결과 형식은 nullable이 아닌 해당 하는 `left`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-811">If `left`.Type represents a nullable type and `right`.Type is implicitly convertible to the corresponding non-nullable type, the result type is the non-nullable equivalent of `left`.Type.</span></span>  
  
-   <span data-ttu-id="5ff2c-812">그렇지 않은 경우, `right`합니다. 형식이 암시적으로 변환할 `left`합니다. 결과 형식이 형식이 `left`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-812">Otherwise, if `right`.Type is implicitly convertible to `left`.Type, the result type is `left`.Type.</span></span>  
  
-   <span data-ttu-id="5ff2c-813">그렇지 않은 경우, 해당 하는 null을 허용 하지 `left`합니다. 형식이 암시적으로 변환할 `right`합니다. 결과 형식이 형식이 `right`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-813">Otherwise, if the non-nullable equivalent of `left`.Type is implicitly convertible to `right`.Type, the result type is `right`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-814">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-814">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-815">
            <paramref name="left" />의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성이 참조 형식 또는 nullable 값 형식을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-815">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of <paramref name="left" /> does not represent a reference type or a nullable value type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-816">
            <paramref name="left" />.Type과 <paramref name="right" />.Type을 상호 변환할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-816">
              <paramref name="left" />.Type and <paramref name="right" />.Type are not convertible to each other.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Coalesce">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Coalesce (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Coalesce(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Coalesce (left As Expression, right As Expression, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Coalesce(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-817">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-817">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-818">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-818">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="5ff2c-819">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-819">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-820">지정된 변환 함수를 사용한 병합 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-820">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a coalescing operation, given a conversion function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-821">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-821">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-822"><xref:System.Linq.Expressions.BinaryExpression.Method%2A> 결과 속성 <xref:System.Linq.Expressions.BinaryExpression> 은 `null` 및 둘 다 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-822">The <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.BinaryExpression> is `null` and both <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> are set to `false`.</span></span>  
  
 <span data-ttu-id="5ff2c-823"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.BinaryExpression> 결합 작업의 결과 형식과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-823">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.BinaryExpression> is equal to the result type of the coalescing operation.</span></span>  
  
 <span data-ttu-id="5ff2c-824">다음 규칙 결과 유형을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-824">The following rules determine the result type:</span></span>  
  
-   <span data-ttu-id="5ff2c-825">경우 `left`합니다. 형식이 nullable 형식을 나타내는지 및 `right`합니다. 형식이 nullable이 아닌 해당 유형으로 암시적으로 변환 될 수, 결과 형식은 nullable이 아닌 해당 하는 `left`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-825">If `left`.Type represents a nullable type and `right`.Type is implicitly convertible to the corresponding non-nullable type, the result type is the non-nullable equivalent of `left`.Type.</span></span>  
  
-   <span data-ttu-id="5ff2c-826">그렇지 않은 경우, `right`합니다. 형식이 암시적으로 변환할 `left`합니다. 결과 형식이 형식이 `left`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-826">Otherwise, if `right`.Type is implicitly convertible to `left`.Type, the result type is `left`.Type.</span></span>  
  
-   <span data-ttu-id="5ff2c-827">그렇지 않은 경우, 해당 하는 null을 허용 하지 `left`합니다. 형식이 암시적으로 변환할 `right`합니다. 결과 형식이 형식이 `right`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-827">Otherwise, if the non-nullable equivalent of `left`.Type is implicitly convertible to `right`.Type, the result type is `right`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-828">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-828">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-829">
            <paramref name="left" />.Type과 <paramref name="right" />.Type을 상호 변환할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-829">
              <paramref name="left" />.Type and <paramref name="right" />.Type are not convertible to each other.</span>
          </span>
          <span data-ttu-id="5ff2c-830">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-830">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-831">
            <paramref name="conversion" />이 <see langword="null" />이 아니고 <paramref name="conversion" />.Type이 정확히 하나의 인수를 받지 않는 대리자 형식인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-831">
              <paramref name="conversion" /> is not <see langword="null" /> and <paramref name="conversion" />.Type is a delegate type that does not take exactly one argument.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-832">
            <paramref name="left" />의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성이 참조 형식 또는 nullable 값 형식을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-832">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of <paramref name="left" /> does not represent a reference type or a nullable value type.</span>
          </span>
          <span data-ttu-id="5ff2c-833">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-833">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-834">
            <paramref name="left" />의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성이 나타내는 형식을 대리자 형식 <paramref name="conversion" />.Type의 매개 변수 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-834">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of <paramref name="left" /> represents a type that is not assignable to the parameter type of the delegate type <paramref name="conversion" />.Type.</span>
          </span>
          <span data-ttu-id="5ff2c-835">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-835">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-836">
            <paramref name="right" />의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성이 대리자 형식 <paramref name="conversion" />.Type의 반환 형식과 다른 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-836">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of <paramref name="right" /> is not equal to the return type of the delegate type <paramref name="conversion" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Condition">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-837">조건문을 나타내는 <see cref="T:System.Linq.Expressions.ConditionalExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-837">Creates a <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that represents a conditional statement.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConditionalExpression Condition (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue, System.Linq.Expressions.Expression ifFalse);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConditionalExpression Condition(class System.Linq.Expressions.Expression test, class System.Linq.Expressions.Expression ifTrue, class System.Linq.Expressions.Expression ifFalse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Condition (test As Expression, ifTrue As Expression, ifFalse As Expression) As ConditionalExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConditionalExpression ^ Condition(System::Linq::Expressions::Expression ^ test, System::Linq::Expressions::Expression ^ ifTrue, System::Linq::Expressions::Expression ^ ifFalse);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConditionalExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="ifTrue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="ifFalse" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="test">
          <span data-ttu-id="5ff2c-838">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-838">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> property equal to.</span>
          </span>
        </param>
        <param name="ifTrue">
          <span data-ttu-id="5ff2c-839">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-839">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> property equal to.</span>
          </span>
        </param>
        <param name="ifFalse">
          <span data-ttu-id="5ff2c-840">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-840">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-841">조건문을 나타내는 <see cref="T:System.Linq.Expressions.ConditionalExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-841">Creates a <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that represents a conditional statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-842">
            <see cref="T:System.Linq.Expressions.ConditionalExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" />, <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> 및 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-842">A <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" /> and the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />, <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />, and <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-843"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.ConditionalExpression> 같은지는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성의 `ifTrue`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-843">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ConditionalExpression> is equal to the <xref:System.Linq.Expressions.Expression.Type%2A> property of `ifTrue`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-844">다음 코드 예제에서는 조건문을 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-844">The following code example shows how to create an expression that represents a conditional statement.</span></span> <span data-ttu-id="5ff2c-845">첫 번째 인수를 평가 하는 경우 `true`, 두 번째 인수는 실행 되 고, 그렇지 않으면, 세 번째 인수 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-845">If the first argument evaluates to `true`, the second argument is executed; otherwise, the third argument is executed.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#3)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-846">
            <paramref name="test" />, <paramref name="ifTrue" /> 또는 <paramref name="ifFalse" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-846">
              <paramref name="test" /> or <paramref name="ifTrue" /> or <paramref name="ifFalse" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-847">
            <paramref name="test" />.Type이 <see cref="T:System.Boolean" />이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-847">
              <paramref name="test" />.Type is not <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="5ff2c-848">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-848">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-849">
            <paramref name="ifTrue" />.Type이 <paramref name="ifFalse" />.Type과 다른 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-849">
              <paramref name="ifTrue" />.Type is not equal to <paramref name="ifFalse" />.Type.</span>
          </span>
        </exception>
        <altmember cref="M:System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <altmember cref="M:System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConditionalExpression Condition (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue, System.Linq.Expressions.Expression ifFalse, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConditionalExpression Condition(class System.Linq.Expressions.Expression test, class System.Linq.Expressions.Expression ifTrue, class System.Linq.Expressions.Expression ifFalse, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConditionalExpression ^ Condition(System::Linq::Expressions::Expression ^ test, System::Linq::Expressions::Expression ^ ifTrue, System::Linq::Expressions::Expression ^ ifFalse, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConditionalExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="ifTrue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="ifFalse" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="test">
          <span data-ttu-id="5ff2c-850">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-850">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> property equal to.</span>
          </span>
        </param>
        <param name="ifTrue">
          <span data-ttu-id="5ff2c-851">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-851">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> property equal to.</span>
          </span>
        </param>
        <param name="ifFalse">
          <span data-ttu-id="5ff2c-852">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-852">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-853">
            <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-853">A <see cref="P:System.Linq.Expressions.Expression.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-854">조건문을 나타내는 <see cref="T:System.Linq.Expressions.ConditionalExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-854">Creates a <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that represents a conditional statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-855">
            <see cref="T:System.Linq.Expressions.ConditionalExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" />, <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> 및 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-855">A <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" /> and the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />, <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />, and <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-856">이 메서드를 사용 하면 조건 식의 경우에서의 결과 형식을 명시적으로 통합 여기서는 유형의 `ifTrue` 및 `ifFalse` 식이 같지 않은지 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-856">This method allows explicitly unifying the result type of the conditional expression in cases where the types of `ifTrue` and `ifFalse` expressions are not equal.</span></span> <span data-ttu-id="5ff2c-857">두 유형의 `ifTrue` 및 `ifFalse` 암시적으로 참조 여야 결과 형식에 할당할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-857">Types of both `ifTrue` and `ifFalse` must be implicitly reference assignable to the result type.</span></span> <span data-ttu-id="5ff2c-858">`type` 속할 수 <xref:System.Void>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-858">The `type` is allowed to be <xref:System.Void>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Constant">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-859">
            <see cref="T:System.Linq.Expressions.ConstantExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-859">Creates a <see cref="T:System.Linq.Expressions.ConstantExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConstantExpression Constant (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConstantExpression Constant(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Constant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Constant (value As Object) As ConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConstantExpression ^ Constant(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5ff2c-860">
            <see cref="T:System.Object" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ConstantExpression.Value" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-860">An <see cref="T:System.Object" /> to set the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-861">
            <see cref="T:System.Linq.Expressions.ConstantExpression" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.ConstantExpression.Value" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-861">Creates a <see cref="T:System.Linq.Expressions.ConstantExpression" /> that has the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> property set to the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-862">
            <see cref="T:System.Linq.Expressions.ConstantExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Constant" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.ConstantExpression.Value" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-862">A <see cref="T:System.Linq.Expressions.ConstantExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Constant" /> and the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-863"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.ConstantExpression> 유형의 같으면 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-863">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ConstantExpression> is equal to the type of `value`.</span></span> <span data-ttu-id="5ff2c-864">경우 `value` 은 `null`, <xref:System.Linq.Expressions.Expression.Type%2A> 같으면 <xref:System.Object>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-864">If `value` is `null`, <xref:System.Linq.Expressions.Expression.Type%2A> is equal to <xref:System.Object>.</span></span>  
  
 <span data-ttu-id="5ff2c-865">나타내는 `null`를 사용할 수도 있습니다는 <xref:System.Linq.Expressions.Expression.Constant%28System.Object%2CSystem.Type%29> 를 명시적으로 형식을 지정할 수 있습니다는 메서드.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-865">To represent `null`, you can also use the <xref:System.Linq.Expressions.Expression.Constant%28System.Object%2CSystem.Type%29> method, with which you can explicitly specify the type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-866">다음 코드 예제에서는 상수 값을 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-866">The following code example shows how to create an expression that represents a constant value.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#4)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConstantExpression Constant (object value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConstantExpression Constant(object value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConstantExpression ^ Constant(System::Object ^ value, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5ff2c-867">
            <see cref="T:System.Object" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ConstantExpression.Value" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-867">An <see cref="T:System.Object" /> to set the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-868">
            <see cref="T:System.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-868">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-869">
            <see cref="T:System.Linq.Expressions.ConstantExpression" /> 및 <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.Expression.Type" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-869">Creates a <see cref="T:System.Linq.Expressions.ConstantExpression" /> that has the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> and <see cref="P:System.Linq.Expressions.Expression.Type" /> properties set to the specified values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-870">
            <see cref="T:System.Linq.Expressions.ConstantExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Constant" /> 및 <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-870">A <see cref="T:System.Linq.Expressions.ConstantExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Constant" /> and the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> and <see cref="P:System.Linq.Expressions.Expression.Type" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-871">이 메서드는 nullable 형식의 값을 나타내는 데 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-871">This method can be useful for representing values of nullable types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-872">다음 코드 예제에서는 nullable 형식의 상수를 나타내는 식을 만들고 해당 값을 설정 하는 방법을 보여 줍니다. `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-872">The following code example shows how to create an expression that represents a constant of the nullable type and set its value to `null`.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#22)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-873">
            <paramref name="type" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-873">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-874">
            <paramref name="value" />가 <see langword="null" />이 아니고 <paramref name="type" />의 동적 형식에서 <paramref name="value" />을 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-874">
              <paramref name="value" /> is not <see langword="null" /> and <paramref name="type" /> is not assignable from the dynamic type of <paramref name="value" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Continue">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-875">continue 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-875">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a continue statement.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Continue (System.Linq.Expressions.LabelTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Continue(class System.Linq.Expressions.LabelTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Continue (target As LabelTarget) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Continue(System::Linq::Expressions::LabelTarget ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="5ff2c-876">
            <see cref="T:System.Linq.Expressions.LabelTarget" />이 이동할 <see cref="T:System.Linq.Expressions.GotoExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-876">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-877">continue 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-877">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a continue statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-878">
            <see cref="T:System.Linq.Expressions.GotoExpression" />가 Continue이고, <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 속성이 <see cref="P:System.Linq.Expressions.GotoExpression.Target" />으로 설정되며, 이동 시 대상 레이블에 null 값이 전달되는 <paramref name="target" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-878">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Continue, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and a null value to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-879">다음 예제를 사용 하는 루프 식을 만드는 방법을 보여 줍니다.는 <xref:System.Linq.Expressions.Expression.Continue%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-879">The following example demonstrates how to create a loop expression that uses the <xref:System.Linq.Expressions.Expression.Continue%2A> method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#46](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#46)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#46](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#46)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Continue (System.Linq.Expressions.LabelTarget target, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Continue(class System.Linq.Expressions.LabelTarget target, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Continue(System::Linq::Expressions::LabelTarget ^ target, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="5ff2c-880">
            <see cref="T:System.Linq.Expressions.LabelTarget" />이 이동할 <see cref="T:System.Linq.Expressions.GotoExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-880">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-881">
            <see cref="T:System.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-881">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-882">지정된 형식을 사용하여 continue 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-882">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a continue statement with the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-883">
            <see cref="T:System.Linq.Expressions.GotoExpression" />가 Continue이고, <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 속성이 <see cref="P:System.Linq.Expressions.GotoExpression.Target" />으로 설정되며, <paramref name="target" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.Type" />으로 설정되고, 이동 시 대상 레이블에 null 값이 전달되는 <paramref name="type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-883">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Continue, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and a null value to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-884">형식 변환 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-884">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a type conversion operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Convert (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Convert(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Convert(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-885">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-885">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-886">
            <see cref="T:System.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-886">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-887">형식 변환 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-887">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a type conversion operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-888">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Convert" /> 및 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-888">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Convert" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.Expression.Type" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-889"><xref:System.Linq.Expressions.UnaryExpression.Method%2A> 결과 속성 <xref:System.Linq.Expressions.UnaryExpression> 구현 방법으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-889">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="5ff2c-890"><xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> 속성은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-890">The <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> property is `false`.</span></span> <span data-ttu-id="5ff2c-891">노드가 리프트 경우 <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> 은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-891">If the node is lifted, <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> is `true`.</span></span> <span data-ttu-id="5ff2c-892">그렇지 않으면 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-892">Otherwise, it is `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-893">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-893">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-894">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-894">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-895">어느 경우 `expression`합니다. 형식 또는 `type` 는 암시적 또는 명시적 변환 연산자를 정의 하는 사용자 정의 유형는 <xref:System.Reflection.MethodInfo> 나타내는 하는 연산자가 구현 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-895">If either `expression`.Type or `type` is a user-defined type that defines an implicit or explicit conversion operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-896">그렇지 않은 경우는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-896">Otherwise:</span></span>  
  
    -   <span data-ttu-id="5ff2c-897">두 `expression`합니다. 형식 및 `type` 나타낼 숫자 또는 부울 형식 또는 null을 허용 하거나 허용 하지 않는 열거형 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-897">If both `expression`.Type and `type` represent numeric or Boolean types, or nullable or non-nullable enumeration types, the implementing method is `null`.</span></span>  
  
    -   <span data-ttu-id="5ff2c-898">어느 경우 `expression`합니다. 형식 또는 `type` 참조 형식 및 명시적 boxing, unboxing 되었거나에서 참조 변환이 있는 `expression`합니다. 입력 `type`, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-898">If either `expression`.Type or `type` is a reference type and an explicit boxing, unboxing, or reference conversion exists from `expression`.Type to `type`, the implementing method is `null`.</span></span>  
  
#### <a name="lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-899">리프트 되지 않는와 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-899">Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-900">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-900">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-901">경우 `expression`합니다. 유형은 구현 메서드의 인수 형식에 할당할 수이 고 구현 메서드의 반환 형식에 할당할 수는 `type`, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-901">If `expression`.Type is assignable to the argument type of the implementing method and the return type of the implementing method is assignable to `type`, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="5ff2c-902">하나 또는 두 경우의 `expression`합니다. 형식 또는 `type` nullable 값 형식이 고 해당 nullable이 아닌 값 형식은 인수 형식과 구현 메서드의 반환 형식에 같음 각각 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-902">If one or both of `expression`.Type or `type` is a nullable value type and the corresponding non-nullable value types are equal to the argument type and the return type of the implementing method respectively, the node is lifted.</span></span>  
  
 <span data-ttu-id="5ff2c-903">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-903">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-904">두 `expression`합니다. 형식 및 `type` 은 nullable이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-904">If both `expression`.Type and `type` are non-nullable, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="5ff2c-905">그렇지 않으면 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-905">Otherwise the node is lifted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-906">다음 코드 예제에는 형식 변환 작업을 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-906">The following code example shows how to create an expression that represents a type convertion operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#23)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-907">
            <paramref name="expression" /> 또는 <paramref name="type" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-907">
              <paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-908">
            <paramref name="expression" />.Type과 <paramref name="type" /> 사이에 변환 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-908">No conversion operator is defined between <paramref name="expression" />.Type and <paramref name="type" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Convert (System.Linq.Expressions.Expression expression, Type type, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Convert(class System.Linq.Expressions.Expression expression, class System.Type type, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Convert(System::Linq::Expressions::Expression ^ expression, Type ^ type, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-909">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-909">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-910">
            <see cref="T:System.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-910">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-911">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-911">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-912">구현 메서드가 지정된 변환 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-912">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a conversion operation for which the implementing method is specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-913">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Convert" />, <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 및 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-913">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Convert" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, <see cref="P:System.Linq.Expressions.Expression.Type" />, and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-914"><xref:System.Linq.Expressions.UnaryExpression.Method%2A> 결과 속성 <xref:System.Linq.Expressions.UnaryExpression> 구현 방법으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-914">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="5ff2c-915"><xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> 속성은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-915">The <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> property is `false`.</span></span> <span data-ttu-id="5ff2c-916">노드가 리프트 경우 <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> 은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-916">If the node is lifted, <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> is `true`.</span></span> <span data-ttu-id="5ff2c-917">그렇지 않으면 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-917">Otherwise, it is `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-918">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-918">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-919">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-919">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-920">메서드가 없으면 `null`은 구현 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-920">If method is not `null`, it is the implementing method.</span></span> <span data-ttu-id="5ff2c-921">Void가 아닌를 나타내야 `static` (`Shared` Visual basic에서) 하나의 인수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-921">It must represent a non-void, `static` (`Shared` in Visual Basic) method that takes one argument.</span></span>  
  
-   <span data-ttu-id="5ff2c-922">그렇지 않은 경우 `expression`합니다. 형식 또는 `type` 는 암시적 또는 명시적 변환 연산자를 정의 하는 사용자 정의 유형는 <xref:System.Reflection.MethodInfo> 나타내는 하는 연산자가 구현 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-922">Otherwise, if either `expression`.Type or `type` is a user-defined type that defines an implicit or explicit conversion operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-923">그렇지 않은 경우는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-923">Otherwise:</span></span>  
  
    -   <span data-ttu-id="5ff2c-924">두 `expression`합니다. 형식 및 `type` 나타낼 숫자 또는 부울 형식 또는 null을 허용 하거나 허용 하지 않는 열거형 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-924">If both `expression`.Type and `type` represent numeric or Boolean types, or nullable or non-nullable enumeration types, the implementing method is `null`.</span></span>  
  
    -   <span data-ttu-id="5ff2c-925">어느 경우 `expression`합니다. 형식 또는 `type` 참조 형식 및 명시적 boxing, unboxing 되었거나에서 참조 변환이 있는 `expression`합니다. 입력 `type`, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-925">If either `expression`.Type or `type` is a reference type and an explicit boxing, unboxing, or reference conversion exists from `expression`.Type to `type`, the implementing method is `null`.</span></span>  
  
#### <a name="lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-926">리프트 되지 않는와 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-926">Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-927">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-927">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-928">경우 `expression`합니다. 유형은 구현 메서드의 인수 형식에 할당할 수이 고 구현 메서드의 반환 형식에 할당할 수는 `type`, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-928">If `expression`.Type is assignable to the argument type of the implementing method and the return type of the implementing method is assignable to `type`, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="5ff2c-929">중 하나 또는 두 경우의 `expression`합니다. 형식 또는 `type` nullable 값 형식 및 해당 nullable이 아닌 값 형식과 같은지 인수 형식과 구현 메서드의 반환 형식에 각각, 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-929">If either or both of `expression`.Type or `type` are a nullable value type and the corresponding non-nullable value types are equal to the argument type and the return type of the implementing method respectively, the node is lifted.</span></span>  
  
 <span data-ttu-id="5ff2c-930">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-930">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-931">두 `expression`합니다. 형식 및 `type` 은 nullable이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-931">If both `expression`.Type and `type` are non-nullable, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="5ff2c-932">그렇지 않으면 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-932">Otherwise the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-933">
            <paramref name="expression" /> 또는 <paramref name="type" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-933">
              <paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-934">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 경우 <see langword="Shared" />)이 아니거나, 정확하게 하나의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-934">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-935">
            <paramref name="expression" />.Type과 <paramref name="type" /> 사이에 변환 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-935">No conversion operator is defined between <paramref name="expression" />.Type and <paramref name="type" />.</span>
          </span>
          <span data-ttu-id="5ff2c-936">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-936">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-937">
            <paramref name="expression" />.Type을 <paramref name="method" />가 나타내는 메서드의 인수 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-937">
              <paramref name="expression" />.Type is not assignable to the argument type of the method represented by <paramref name="method" />.</span>
          </span>
          <span data-ttu-id="5ff2c-938">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-938">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-939">
            <paramref name="method" />가 나타내는 메서드의 반환 형식을 <paramref name="type" />에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-939">The return type of the method represented by <paramref name="method" /> is not assignable to <paramref name="type" />.</span>
          </span>
          <span data-ttu-id="5ff2c-940">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-940">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-941">
            <paramref name="expression" />.Type 또는 <paramref name="type" />이 nullable 값 형식이고 nullable이 아닌 해당 값 형식이 <paramref name="method" />가 나타내는 메서드의 인수 형식 또는 반환 형식과 각각 일치하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-941">
              <paramref name="expression" />.Type or <paramref name="type" /> is a nullable value type and the corresponding non-nullable value type does not equal the argument type or the return type, respectively, of the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="5ff2c-942">
            <paramref name="method" /> 설명과 일치하는 메서드가 둘 이상 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-942">More than one method that matches the <paramref name="method" /> description was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-943">대상 형식에서 오버플로가 발생할 때 예외가 throw되는 변환 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-943">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a conversion operation that throws an exception if the target type is overflowed.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression ConvertChecked (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression ConvertChecked(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ ConvertChecked(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-944">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-944">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-945">
            <see cref="T:System.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-945">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-946">대상 형식에서 오버플로가 발생할 때 예외가 throw되는 변환 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-946">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a conversion operation that throws an exception if the target type is overflowed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-947">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ConvertChecked" /> 및 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-947">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ConvertChecked" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.Expression.Type" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-948"><xref:System.Linq.Expressions.UnaryExpression.Method%2A> 결과 속성 <xref:System.Linq.Expressions.UnaryExpression> 구현 방법으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-948">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="5ff2c-949"><xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> 속성은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-949">The <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> property is `false`.</span></span> <span data-ttu-id="5ff2c-950">노드가 리프트 경우 <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> 은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-950">If the node is lifted, <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> is `true`.</span></span> <span data-ttu-id="5ff2c-951">그렇지 않으면 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-951">Otherwise, it is `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-952">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-952">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-953">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-953">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-954">어느 경우 `expression`합니다. 형식 또는 `type` 는 암시적 또는 명시적 변환 연산자를 정의 하는 사용자 정의 유형는 <xref:System.Reflection.MethodInfo> 나타내는 하는 연산자가 구현 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-954">If either `expression`.Type or `type` is a user-defined type that defines an implicit or explicit conversion operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-955">그렇지 않은 경우는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-955">Otherwise:</span></span>  
  
    -   <span data-ttu-id="5ff2c-956">두 `expression`합니다. 형식 및 `type` 나타낼 숫자 또는 부울 형식 또는 null을 허용 하거나 허용 하지 않는 열거형 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-956">If both `expression`.Type and `type` represent numeric or Boolean types, or nullable or non-nullable enumeration types, the implementing method is `null`.</span></span>  
  
    -   <span data-ttu-id="5ff2c-957">어느 경우 `expression`합니다. 형식 또는 `type` 참조 형식 및 명시적 boxing, unboxing 되었거나에서 참조 변환이 있는 `expression`합니다. 입력 `type`, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-957">If either `expression`.Type or `type` is a reference type and an explicit boxing, unboxing, or reference conversion exists from `expression`.Type to `type`, the implementing method is `null`.</span></span>  
  
#### <a name="lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-958">리프트 되지 않는와 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-958">Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-959">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-959">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-960">경우 `expression`합니다. 유형은 구현 메서드의 인수 형식에 할당할 수이 고 구현 메서드의 반환 형식에 할당할 수는 `type`, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-960">If `expression`.Type is assignable to the argument type of the implementing method and the return type of the implementing method is assignable to `type`, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="5ff2c-961">중 하나 또는 두 경우의 `expression`합니다. 형식 또는 `type` nullable 값 형식 및 해당 nullable이 아닌 값 형식과 같은지 인수 형식과 구현 메서드의 반환 형식에 각각, 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-961">If either or both of `expression`.Type or `type` are a nullable value type and the corresponding non-nullable value types are equal to the argument type and the return type of the implementing method respectively, the node is lifted.</span></span>  
  
 <span data-ttu-id="5ff2c-962">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-962">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-963">두 `expression`합니다. 형식 및 `type` 은 nullable이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-963">If both `expression`.Type and `type` are non-nullable, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="5ff2c-964">그렇지 않으면 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-964">Otherwise the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-965">
            <paramref name="expression" /> 또는 <paramref name="type" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-965">
              <paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-966">
            <paramref name="expression" />.Type과 <paramref name="type" /> 사이에 변환 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-966">No conversion operator is defined between <paramref name="expression" />.Type and <paramref name="type" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression ConvertChecked (System.Linq.Expressions.Expression expression, Type type, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression ConvertChecked(class System.Linq.Expressions.Expression expression, class System.Type type, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ ConvertChecked(System::Linq::Expressions::Expression ^ expression, Type ^ type, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-967">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-967">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-968">
            <see cref="T:System.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-968">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-969">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-969">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-970">구현 메서드가 지정된 대상 형식에서 오버플로가 발생할 때 예외가 throw되는 변환 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-970">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a conversion operation that throws an exception if the target type is overflowed and for which the implementing method is specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-971">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ConvertChecked" />, <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 및 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-971">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ConvertChecked" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, <see cref="P:System.Linq.Expressions.Expression.Type" />, and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-972"><xref:System.Linq.Expressions.UnaryExpression.Method%2A> 결과 속성 <xref:System.Linq.Expressions.UnaryExpression> 구현 방법으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-972">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="5ff2c-973"><xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> 속성은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-973">The <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> property is `false`.</span></span> <span data-ttu-id="5ff2c-974">노드가 리프트 경우 <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> 은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-974">If the node is lifted, <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> is `true`.</span></span> <span data-ttu-id="5ff2c-975">그렇지 않으면 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-975">Otherwise, it is `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-976">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-976">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-977">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-977">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-978">메서드가 없으면 `null`은 구현 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-978">If method is not `null`, it is the implementing method.</span></span> <span data-ttu-id="5ff2c-979">Void가 아닌를 나타내야 `static` (`Shared` Visual basic에서) 하나의 인수를 사용 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-979">It must represent a non-void, `static` (`Shared` in Visual Basic) method that takes one argument.</span></span>  
  
-   <span data-ttu-id="5ff2c-980">그렇지 않은 경우 `expression`합니다. 형식 또는 `type` 는 암시적 또는 명시적 변환 연산자를 정의 하는 사용자 정의 유형는 <xref:System.Reflection.MethodInfo> 나타내는 하는 연산자가 구현 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-980">Otherwise, if either `expression`.Type or `type` is a user-defined type that defines an implicit or explicit conversion operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-981">그렇지 않은 경우는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-981">Otherwise:</span></span>  
  
    -   <span data-ttu-id="5ff2c-982">두 `expression`합니다. 형식 및 `type` 나타낼 숫자 또는 부울 형식 또는 null을 허용 하거나 허용 하지 않는 열거형 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-982">If both `expression`.Type and `type` represent numeric or Boolean types, or nullable or non-nullable enumeration types, the implementing method is `null`.</span></span>  
  
    -   <span data-ttu-id="5ff2c-983">어느 경우 `expression`합니다. 형식 또는 `type` 참조 형식 및 명시적 boxing, unboxing 되었거나에서 참조 변환이 있는 `expression`합니다. 입력 `type`, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-983">If either `expression`.Type or `type` is a reference type and an explicit boxing, unboxing, or reference conversion exists from `expression`.Type to `type`, the implementing method is `null`.</span></span>  
  
#### <a name="lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-984">리프트 되지 않는와 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-984">Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-985">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-985">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-986">경우 `expression`합니다. 유형은 구현 메서드의 인수 형식에 할당할 수이 고 구현 메서드의 반환 형식에 할당할 수는 `type`, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-986">If `expression`.Type is assignable to the argument type of the implementing method and the return type of the implementing method is assignable to `type`, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="5ff2c-987">중 하나 또는 두 경우의 `expression`합니다. 형식 또는 `type` nullable 값 형식 및 해당 nullable이 아닌 값 형식과 같은지 인수 형식과 구현 메서드의 반환 형식에 각각, 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-987">If either or both of `expression`.Type or `type` are a nullable value type and the corresponding non-nullable value types are equal to the argument type and the return type of the implementing method respectively, the node is lifted.</span></span>  
  
 <span data-ttu-id="5ff2c-988">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-988">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-989">두 `expression`합니다. 형식 및 `type` 은 nullable이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-989">If both `expression`.Type and `type` are non-nullable, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="5ff2c-990">그렇지 않으면 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-990">Otherwise the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-991">
            <paramref name="expression" /> 또는 <paramref name="type" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-991">
              <paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-992">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 경우 <see langword="Shared" />)이 아니거나, 정확하게 하나의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-992">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-993">
            <paramref name="expression" />.Type과 <paramref name="type" /> 사이에 변환 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-993">No conversion operator is defined between <paramref name="expression" />.Type and <paramref name="type" />.</span>
          </span>
          <span data-ttu-id="5ff2c-994">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-994">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-995">
            <paramref name="expression" />.Type을 <paramref name="method" />가 나타내는 메서드의 인수 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-995">
              <paramref name="expression" />.Type is not assignable to the argument type of the method represented by <paramref name="method" />.</span>
          </span>
          <span data-ttu-id="5ff2c-996">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-996">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-997">
            <paramref name="method" />가 나타내는 메서드의 반환 형식을 <paramref name="type" />에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-997">The return type of the method represented by <paramref name="method" /> is not assignable to <paramref name="type" />.</span>
          </span>
          <span data-ttu-id="5ff2c-998">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-998">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-999">
            <paramref name="expression" />.Type 또는 <paramref name="type" />이 nullable 값 형식이고 nullable이 아닌 해당 값 형식이 <paramref name="method" />가 나타내는 메서드의 인수 형식 또는 반환 형식과 각각 일치하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-999">
              <paramref name="expression" />.Type or <paramref name="type" /> is a nullable value type and the corresponding non-nullable value type does not equal the argument type or the return type, respectively, of the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="5ff2c-1000">
            <paramref name="method" /> 설명과 일치하는 메서드가 둘 이상 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1000">More than one method that matches the <paramref name="method" /> description was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DebugInfo">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DebugInfoExpression DebugInfo (System.Linq.Expressions.SymbolDocumentInfo document, int startLine, int startColumn, int endLine, int endColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DebugInfoExpression DebugInfo(class System.Linq.Expressions.SymbolDocumentInfo document, int32 startLine, int32 startColumn, int32 endLine, int32 endColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DebugInfo (document As SymbolDocumentInfo, startLine As Integer, startColumn As Integer, endLine As Integer, endColumn As Integer) As DebugInfoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DebugInfoExpression ^ DebugInfo(System::Linq::Expressions::SymbolDocumentInfo ^ document, int startLine, int startColumn, int endLine, int endColumn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DebugInfoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Linq.Expressions.SymbolDocumentInfo" />
        <Parameter Name="startLine" Type="System.Int32" />
        <Parameter Name="startColumn" Type="System.Int32" />
        <Parameter Name="endLine" Type="System.Int32" />
        <Parameter Name="endColumn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="5ff2c-1001">소스 파일을 나타내는 <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1001">The <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that represents the source file.</span>
          </span>
        </param>
        <param name="startLine">
          <span data-ttu-id="5ff2c-1002">이 <see cref="T:System.Linq.Expressions.DebugInfoExpression" />의 시작 줄입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1002">The start line of this <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1003">0보다 커야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1003">Must be greater than 0.</span>
          </span>
        </param>
        <param name="startColumn">
          <span data-ttu-id="5ff2c-1004">이 <see cref="T:System.Linq.Expressions.DebugInfoExpression" />의 시작 열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1004">The start column of this <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1005">0보다 커야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1005">Must be greater than 0.</span>
          </span>
        </param>
        <param name="endLine">
          <span data-ttu-id="5ff2c-1006">이 <see cref="T:System.Linq.Expressions.DebugInfoExpression" />의 끝 줄입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1006">The end line of this <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1007">시작 줄보다 크거나 같아야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1007">Must be greater or equal than the start line.</span>
          </span>
        </param>
        <param name="endColumn">
          <span data-ttu-id="5ff2c-1008">이 <see cref="T:System.Linq.Expressions.DebugInfoExpression" />의 끝 열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1008">The end column of this <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1009">끝 줄이 시작 줄과 같을 경우 끝 열은 시작 열보다 크거나 같아야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1009">If the end line is the same as the start line, it must be greater or equal than the start column.</span>
          </span>
          <span data-ttu-id="5ff2c-1010">어떤 경우에도 0보다 커야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1010">In any case, must be greater than 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1011">지정된 범위를 사용하여 <see cref="T:System.Linq.Expressions.DebugInfoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1011">Creates a <see cref="T:System.Linq.Expressions.DebugInfoExpression" /> with the specified span.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1012">
            <see cref="T:System.Linq.Expressions.DebugInfoExpression" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1012">An instance of <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Decrement">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1013">1씩 감소하는 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1013">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the decrementing of the expression by 1.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Decrement">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Decrement (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Decrement(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Decrement(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-1014">감소시킬 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1014">An <see cref="T:System.Linq.Expressions.Expression" /> to decrement.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1015">1씩 감소하는 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1015">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the decrementing of the expression by 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1016">감소되는 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1016">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the decremented expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1017">이 식은 편리 하 고 전달 된 개체의 값이 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1017">This expression is functional and does not change the value of the object passed to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-1018">다음 코드 예제에서는 지정된 된 값에서 1을 빼는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1018">The following code example shows how to create an expression that substracts 1 from a given value.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#5)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrement">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Decrement (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Decrement(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Decrement(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-1019">감소시킬 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1019">An <see cref="T:System.Linq.Expressions.Expression" /> to decrement.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1020">구현 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1020">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1021">1씩 감소하는 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1021">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the decrementing of the expression by 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1022">감소되는 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1022">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the decremented expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1023">이 식은 편리 하 고 전달 된 개체의 값이 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1023">This expression is functional and does not change the value of the object passed to it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DefaultExpression Default (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DefaultExpression Default(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Default(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DefaultExpression ^ Default(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DefaultExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-1024">
            <see cref="T:System.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1024">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1025">
            <see cref="T:System.Linq.Expressions.DefaultExpression" /> 속성이 지정된 형식으로 설정된 <see cref="P:System.Linq.Expressions.Expression.Type" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1025">Creates a <see cref="T:System.Linq.Expressions.DefaultExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1026">
            <see cref="T:System.Linq.Expressions.DefaultExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Default" /> 속성이 지정된 형식으로 설정된 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1026">A <see cref="T:System.Linq.Expressions.DefaultExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Default" /> and the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-1027">다음 코드 예제에는 지정된 된 형식에 대 한 기본 값을 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1027">The following code example shows how to create an expression that represents a default vaule for a given type.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#6)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Divide">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1028">산술 나누기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1028">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic division operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Divide (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Divide(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Divide(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1029">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1029">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1030">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1030">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1031">산술 나누기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1031">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic division operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1032">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Divide" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1032">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Divide" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1033">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1033">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-1034"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1034">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-1035">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1035">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-1036">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1036">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-1037"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1037">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-1038">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1038">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-1039">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1039">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-1040">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1040">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-1041">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 나누기 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1041">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the division operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1042">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1042">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-1043">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1043">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-1044">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1044">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1045">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1045">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1046">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1046">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1047">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1047">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-1048">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1048">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-1049">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1049">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-1050">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1050">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1051">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1051">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1052">노드 유형 미리 정의 된 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1052">The type of the node is the result type of the predefined division operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-1053">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1053">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-1054">노드의 유형을 미리 정의 된 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1054">The type of the node is the nullable type that corresponds to the result type of the predefined division operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-1055">다음 코드 예제에서는 나누는 하는 식을 생성 하는 방법의 두 번째 인수에 의해 첫 번째 인수를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1055">The following code example shows how to create an expression that divides divides its first argument by its second argument.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#7)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1056">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1056">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-1057">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 나누기 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1057">The division operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Divide (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Divide(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Divide(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1058">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1058">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1059">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1059">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1060">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1060">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1061">산술 나누기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1061">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic division operation.</span>
          </span>
          <span data-ttu-id="5ff2c-1062">구현 메서드를 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1062">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1063">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Divide" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1063">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Divide" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1064">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1064">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-1065"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1065">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-1066">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1066">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-1067">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1067">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-1068"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1068">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-1069">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1069">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-1070">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1070">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-1071">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1071">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-1072">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를 사용 하는 노드에 대 한 구현 메서드를은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1072">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="5ff2c-1073">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 나누기 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1073">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the division operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1074">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1074">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-1075">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1075">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-1076">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1076">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1077">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1077">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1078">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1078">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1079">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1079">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-1080">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1080">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-1081">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1081">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-1082">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1082">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1083">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1083">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1084">노드 유형 미리 정의 된 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1084">The type of the node is the result type of the predefined division operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-1085">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1085">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-1086">노드의 유형을 미리 정의 된 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1086">The type of the node is the nullable type that corresponds to the result type of the predefined division operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1087">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1087">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1088">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1088">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-1089">
            <paramref name="method" />가 <see langword="null" />이고 나누기 연산자가 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 대해 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1089">
              <paramref name="method" /> is <see langword="null" /> and the division operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DivideAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1090">오버플로를 검사하지 않는 나누기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1090">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a division assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DivideAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression DivideAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression DivideAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ DivideAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1091">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1091">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1092">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1092">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1093">오버플로를 검사하지 않는 나누기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1093">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a division assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1094">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1094">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DivideAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression DivideAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression DivideAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ DivideAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1095">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1095">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1096">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1096">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1097">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1097">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1098">오버플로를 검사하지 않는 나누기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1098">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a division assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1099">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1099">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DivideAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression DivideAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression DivideAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ DivideAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1100">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1100">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1101">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1101">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1102">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1102">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="5ff2c-1103">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1103">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1104">오버플로를 검사하지 않는 나누기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1104">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a division assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1105">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1105">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dynamic">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1106">동적 연산을 나타내는 <see cref="T:System.Linq.Expressions.DynamicExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1106">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, arguments As IEnumerable(Of Expression)) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="5ff2c-1107">동적 작업의 런타임 바인더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1107">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="5ff2c-1108">동적 식의 결과 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1108">The result type of the dynamic expression.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-1109">동적 작업의 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1109">The arguments to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1110">제공된 <see cref="T:System.Linq.Expressions.DynamicExpression" />에 의해 바인딩된 동적 작업을 나타내는 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1110">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1111">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> 및 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />가 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1111">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1112"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> 결과의 속성 인수의 형식에서 유추 됩니다 하 고 지정 된 형식을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1112">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Linq.Expressions.Expression arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, arg0 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, System::Linq::Expressions::Expression ^ arg0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="5ff2c-1113">동적 작업의 런타임 바인더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1113">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="5ff2c-1114">동적 식의 결과 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1114">The result type of the dynamic expression.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5ff2c-1115">동적 작업의 첫 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1115">The first argument to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1116">제공된 <see cref="T:System.Linq.Expressions.DynamicExpression" />에 의해 바인딩된 동적 작업을 나타내는 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1116">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1117">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> 및 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />가 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1117">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1118"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> 결과의 속성 인수의 형식에서 유추 됩니다 하 고 지정 된 형식을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1118">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, ParamArray arguments As Expression()) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="5ff2c-1119">동적 작업의 런타임 바인더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1119">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="5ff2c-1120">동적 식의 결과 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1120">The result type of the dynamic expression.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-1121">동적 작업의 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1121">The arguments to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1122">제공된 <see cref="T:System.Linq.Expressions.DynamicExpression" />에 의해 바인딩된 동적 작업을 나타내는 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1122">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1123">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> 및 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />가 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1123">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1124"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> 결과의 속성 인수의 형식에서 유추 됩니다 하 고 지정 된 형식을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1124">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, arg0 As Expression, arg1 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="5ff2c-1125">동적 작업의 런타임 바인더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1125">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="5ff2c-1126">동적 식의 결과 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1126">The result type of the dynamic expression.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5ff2c-1127">동적 작업의 첫 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1127">The first argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5ff2c-1128">동적 작업의 두 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1128">The second argument to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1129">제공된 <see cref="T:System.Linq.Expressions.DynamicExpression" />에 의해 바인딩된 동적 작업을 나타내는 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1129">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1130">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> 및 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />가 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1130">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1131"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> 결과의 속성 인수의 형식에서 유추 됩니다 하 고 지정 된 형식을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1131">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, arg0 As Expression, arg1 As Expression, arg2 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="5ff2c-1132">동적 작업의 런타임 바인더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1132">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="5ff2c-1133">동적 식의 결과 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1133">The result type of the dynamic expression.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5ff2c-1134">동적 작업의 첫 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1134">The first argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5ff2c-1135">동적 작업의 두 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1135">The second argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="5ff2c-1136">동적 작업의 세 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1136">The third argument to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1137">제공된 <see cref="T:System.Linq.Expressions.DynamicExpression" />에 의해 바인딩된 동적 작업을 나타내는 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1137">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1138">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> 및 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />가 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1138">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1139"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> 결과의 속성 인수의 형식에서 유추 됩니다 하 고 지정 된 형식을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1139">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="5ff2c-1140">동적 작업의 런타임 바인더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1140">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="5ff2c-1141">동적 식의 결과 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1141">The result type of the dynamic expression.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5ff2c-1142">동적 작업의 첫 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1142">The first argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5ff2c-1143">동적 작업의 두 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1143">The second argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="5ff2c-1144">동적 작업의 세 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1144">The third argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="5ff2c-1145">동적 작업의 네 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1145">The fourth argument to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1146">제공된 <see cref="T:System.Linq.Expressions.DynamicExpression" />에 의해 바인딩된 동적 작업을 나타내는 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1146">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1147">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> 및 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />가 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1147">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1148"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> 결과의 속성 인수의 형식에서 유추 됩니다 하 고 지정 된 형식을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1148">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ElementInit">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1149">
            <see cref="T:System.Linq.Expressions.ElementInit" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1149">Creates an <see cref="T:System.Linq.Expressions.ElementInit" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ElementInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ElementInit ElementInit (System.Reflection.MethodInfo addMethod, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ElementInit ElementInit(class System.Reflection.MethodInfo addMethod, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ElementInit (addMethod As MethodInfo, arguments As IEnumerable(Of Expression)) As ElementInit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ElementInit ^ ElementInit(System::Reflection::MethodInfo ^ addMethod, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ElementInit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="addMethod">
          <span data-ttu-id="5ff2c-1150">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1150">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-1151">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 속성에 설정할 <see cref="T:System.Linq.Expressions.Expression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.ElementInit.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1151">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to set the <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1152">지정된 <see cref="T:System.Linq.Expressions.ElementInit" />을 두 번째 인수로 사용하여 <see cref="T:System.Collections.Generic.IEnumerable`1" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1152">Creates an <see cref="T:System.Linq.Expressions.ElementInit" />, given an <see cref="T:System.Collections.Generic.IEnumerable`1" /> as the second argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1153">
            <see cref="T:System.Linq.Expressions.ElementInit" /> 및 <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.ElementInit.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1153">An <see cref="T:System.Linq.Expressions.ElementInit" /> that has the <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> and <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1154">`addMethod` 매개 변수는 "Add" (대/소문자 구분) 라는 인스턴스 메서드를 나타내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1154">The `addMethod` parameter must represent an instance method named "Add" (case insensitive).</span></span> <span data-ttu-id="5ff2c-1155">Add 메서드의 요소 수로 매개 변수 수가 같은 있어야 `arguments`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1155">The add method must have the same number of parameters as the number of elements in `arguments`.</span></span> <span data-ttu-id="5ff2c-1156"><xref:System.Linq.Expressions.Expression.Type%2A> 속성에 있는 각 요소의 `arguments` add 메서드의 해당 매개 변수의 형식에 할당할 수 있어야 가능 후 *인용 부호*합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1156">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element in `arguments` must be assignable to the type of the corresponding parameter of the add method, possibly after *quoting*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5ff2c-1157">해당 메서드 매개 변수의 형식이 있을 경우에 요소 인용 됩니다 <xref:System.Linq.Expressions.Expression>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1157">An element will be quoted only if the corresponding method parameter is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="5ff2c-1158">요소에 래핑됩니다 인용는 <xref:System.Linq.Expressions.ExpressionType.Quote> 노드.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1158">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="5ff2c-1159">결과 노드는 <xref:System.Linq.Expressions.UnaryExpression> 인 <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> 속성의 요소인 `arguments`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1159">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-1160">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Linq.Expressions.Expression.ElementInit%28System.Reflection.MethodInfo%2CSystem.Linq.Expressions.Expression%5B%5D%29> 만드는 메서드를 한 <xref:System.Linq.Expressions.ElementInit> 호출을 나타내는 <xref:System.Collections.Generic.Dictionary%602.Add%2A> 메서드 사전 컬렉션의 요소를 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1160">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ElementInit%28System.Reflection.MethodInfo%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create an <xref:System.Linq.Expressions.ElementInit> that represents calling the <xref:System.Collections.Generic.Dictionary%602.Add%2A> method to initialize an element of a dictionary collection.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#4)]
 [!code-vb[System.Linq.Expressions.Expression#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1161">
            <paramref name="addMethod" /> 또는 <paramref name="arguments" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1161">
              <paramref name="addMethod" /> or <paramref name="arguments" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1162">
            <paramref name="addMethod" />를 나타내는 메서드 이름이 "Add"(대/소문자 구분 안 함)가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1162">The method that <paramref name="addMethod" /> represents is not named "Add" (case insensitive).</span>
          </span>
          <span data-ttu-id="5ff2c-1163">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1163">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1164">
            <paramref name="addMethod" />를 나타내는 메서드가 인스턴스 메서드가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1164">The method that <paramref name="addMethod" /> represents is not an instance method.</span>
          </span>
          <span data-ttu-id="5ff2c-1165">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1165">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1166">
            <paramref name="arguments" />의 요소 수가 <paramref name="addMethod" />로 나타내는 메서드의 매개 변수 수와 같지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1166">
              <paramref name="arguments" /> does not contain the same number of elements as the number of parameters for the method that <paramref name="addMethod" /> represents.</span>
          </span>
          <span data-ttu-id="5ff2c-1167">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1167">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1168">
            <paramref name="arguments" />의 하나 이상의 요소에 대한 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성을 <paramref name="addMethod" />가 나타내는 메서드의 해당 매개 변수 형식에 적용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1168">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the method that <paramref name="addMethod" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ElementInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ElementInit ElementInit (System.Reflection.MethodInfo addMethod, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ElementInit ElementInit(class System.Reflection.MethodInfo addMethod, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ElementInit (addMethod As MethodInfo, ParamArray arguments As Expression()) As ElementInit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ElementInit ^ ElementInit(System::Reflection::MethodInfo ^ addMethod, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ElementInit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="addMethod">
          <span data-ttu-id="5ff2c-1169">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1169">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-1170">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1170">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to set the <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1171">지정된 값 배열을 두 번째 인수로 사용하여 <see cref="T:System.Linq.Expressions.ElementInit" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1171">Creates an <see cref="T:System.Linq.Expressions.ElementInit" />, given an array of values as the second argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1172">
            <see cref="T:System.Linq.Expressions.ElementInit" /> 및 <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.ElementInit.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1172">An <see cref="T:System.Linq.Expressions.ElementInit" /> that has the <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> and <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1173">`addMethod` 매개 변수는 "Add" (대/소문자 구분) 라는 인스턴스 메서드를 나타내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1173">The `addMethod` parameter must represent an instance method named "Add" (case insensitive).</span></span> <span data-ttu-id="5ff2c-1174">Add 메서드의 요소 수로 매개 변수 수가 같은 있어야 `arguments`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1174">The add method must have the same number of parameters as the number of elements in `arguments`.</span></span> <span data-ttu-id="5ff2c-1175"><xref:System.Linq.Expressions.Expression.Type%2A> 속성에 있는 각 요소의 `arguments` add 메서드의 해당 매개 변수의 형식에 할당할 수 있어야 가능 후 *인용 부호*합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1175">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element in `arguments` must be assignable to the type of the corresponding parameter of the add method, possibly after *quoting*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5ff2c-1176">해당 메서드 매개 변수의 형식이 있을 경우에 요소 인용 됩니다 <xref:System.Linq.Expressions.Expression>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1176">An element will be quoted only if the corresponding method parameter is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="5ff2c-1177">요소에 래핑됩니다 인용는 <xref:System.Linq.Expressions.ExpressionType.Quote> 노드.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1177">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="5ff2c-1178">결과 노드는 <xref:System.Linq.Expressions.UnaryExpression> 인 <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> 속성의 요소인 `arguments`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1178">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-1179">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Linq.Expressions.Expression.ElementInit%28System.Reflection.MethodInfo%2CSystem.Linq.Expressions.Expression%5B%5D%29> 만드는 메서드를 한 <xref:System.Linq.Expressions.ElementInit> 호출을 나타내는 <xref:System.Collections.Generic.Dictionary%602.Add%2A> 메서드 사전 컬렉션의 요소를 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1179">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ElementInit%28System.Reflection.MethodInfo%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create an <xref:System.Linq.Expressions.ElementInit> that represents calling the <xref:System.Collections.Generic.Dictionary%602.Add%2A> method to initialize an element of a dictionary collection.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#4)]
 [!code-vb[System.Linq.Expressions.Expression#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1180">
            <paramref name="addMethod" /> 또는 <paramref name="arguments" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1180">
              <paramref name="addMethod" /> or <paramref name="arguments" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1181">addMethod가 나타내는 메서드의 이름이 "Add"(대/소문자 구분 안 함)가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1181">The method that addMethod represents is not named "Add" (case insensitive).</span>
          </span>
          <span data-ttu-id="5ff2c-1182">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1182">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1183">addMethod가 나타내는 메서드가 인스턴스 메서드가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1183">The method that addMethod represents is not an instance method.</span>
          </span>
          <span data-ttu-id="5ff2c-1184">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1184">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1185">인수에 들어 있는 요소 수가 addMethod가 나타내는 메서드의 매개 변수 개수와 다른 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1185">arguments does not contain the same number of elements as the number of parameters for the method that addMethod represents.</span>
          </span>
          <span data-ttu-id="5ff2c-1186">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1186">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1187">
            <paramref name="arguments" />의 하나 이상의 요소에 대한 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성을 <paramref name="addMethod" />가 나타내는 메서드의 해당 매개 변수 형식에 적용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1187">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the method that <paramref name="addMethod" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DefaultExpression Empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DefaultExpression Empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Empty () As DefaultExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DefaultExpression ^ Empty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DefaultExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1188">
            <see cref="T:System.Void" /> 형식을 가진 빈 식을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1188">Creates an empty expression that has <see cref="T:System.Void" /> type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1189">
            <see cref="T:System.Linq.Expressions.DefaultExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Default" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.Type" />로 설정된 <see cref="T:System.Void" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1189">A <see cref="T:System.Linq.Expressions.DefaultExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Default" /> and the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <see cref="T:System.Void" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1190">여기서는 식이 필요 하지만 없는 작업도 필요 하지 않은 빈 식을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1190">An empty expression can be used where an expression is expected but no action is desired.</span></span> <span data-ttu-id="5ff2c-1191">예를 들어 빈 식 블록 식의 마지막 식으로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1191">For example, you can use an empty expression as the last expression in a block expression.</span></span> <span data-ttu-id="5ff2c-1192">이 경우 블록 식의 반환 값은 void입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1192">In this case, the block expression's return value is void.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-1193">다음 코드 예제에서는 빈 식을 만들고 블록 식에 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1193">The following code example shows how to create an empty expression and add it to a block expression.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#31)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equal">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1194">같음 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1194">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an equality comparison.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Equal (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Equal(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equal (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Equal(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1195">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1195">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1196">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1196">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1197">같음 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1197">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an equality comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1198">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Equal" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1198">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Equal" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1199">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1199">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-1200"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1200">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-1201">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 속성은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1201">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="5ff2c-1202">그렇지 않으면 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1202">Otherwise, it is `false`.</span></span> <span data-ttu-id="5ff2c-1203"><xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 항상 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1203">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="5ff2c-1204">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1204">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-1205">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1205">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-1206">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1206">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-1207">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 같음 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1207">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the equality operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1208">구현 메서드는 그렇지 않은 경우 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1208">Otherwise, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-1209">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1209">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-1210">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1210">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1211">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1211">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1212">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1212">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1213">다음 두 조건을 충족 하는 노드가 리프트 된 및 노드 형식이 <xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1213">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="5ff2c-1214">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1214">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-1215">구현 메서드의 반환 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1215">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="5ff2c-1216">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1216">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1217">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1217">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1218">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1218">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="5ff2c-1219">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1219">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-1220">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1220">The type of the node is <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-1221">다음 코드 예제에서는 두 인수 값이 같은지를 확인 하는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1221">The following code example shows how to create an expression that checks whether the values of its two arguments are equal.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#8)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1222">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1222">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-1223">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 같음 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1223">The equality operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Equal (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Equal(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equal (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Equal(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1224">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1224">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1225">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1225">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="liftToNull">
          <span data-ttu-id="5ff2c-1226">
            <see langword="true" />를 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />로 설정하려면 <see langword="true" />이고, <see langword="false" />를 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />로 설정하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1226">
              <see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1227">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1227">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1228">같음 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1228">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an equality comparison.</span>
          </span>
          <span data-ttu-id="5ff2c-1229">구현 메서드를 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1229">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1230">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Equal" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1230">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Equal" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1231">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1231">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-1232"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1232">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-1233">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 속성은 `true` 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성이 `liftToNull`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1233">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="5ff2c-1234">그렇지 않은 경우는 모두 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1234">Otherwise, they are both `false`.</span></span> <span data-ttu-id="5ff2c-1235">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1235">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-1236">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1236">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-1237">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1237">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-1238">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를은 구현 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1238">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1239">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 같음 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1239">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the equality operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1240">구현 메서드는 그렇지 않은 경우 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1240">Otherwise, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-1241">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1241">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-1242">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1242">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1243">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1243">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1244">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1244">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1245">다음 두 가지 조건을 충족 하는 경우 노드 적용 되지 않습니다. 또한 노드의 형식이 nullable <xref:System.Boolean> 경우 `liftToNull` 은 `true` 또는 <xref:System.Boolean> 경우 `liftToNull` 은 `false`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1245">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="5ff2c-1246">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1246">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-1247">구현 메서드의 반환 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1247">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="5ff2c-1248">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1248">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1249">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1249">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1250">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1250">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="5ff2c-1251">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1251">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-1252">노드 형식이 nullable <xref:System.Boolean> 경우 `liftToNull` 은 `true` 또는 <xref:System.Boolean> 경우 `liftToNull` 은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1252">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1253">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1253">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1254">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1254">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-1255">
            <paramref name="method" />가 <see langword="null" />이고 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 같음 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1255">
              <paramref name="method" /> is <see langword="null" /> and the equality operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExclusiveOr">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1256">비트 <see cref="T:System.Linq.Expressions.BinaryExpression" /> 연산을 나타내는 <see langword="XOR" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1256">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="XOR" /> operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ExclusiveOr (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ExclusiveOr(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExclusiveOr (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ExclusiveOr(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1257">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1257">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1258">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1258">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1259">사용자 정의 형식에 대해 <c>op_ExclusiveOr</c>을 사용하여 비트 <see langword="XOR" /> 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1259">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="XOR" /> operation, using <c>op_ExclusiveOr</c> for user-defined types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1260">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOr" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1260">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOr" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1261">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1261">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-1262"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1262">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-1263">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1263">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-1264">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1264">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-1265"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1265">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-1266">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1266">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-1267">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1267">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-1268">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1268">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-1269">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 오버 로드 하는 사용자 정의 형식을 나타냅니다는 `XOR` 연산자는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1269">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the `XOR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1270">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 정수 또는 부울 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1270">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-1271">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1271">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-1272">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1272">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1273">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1273">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1274">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1274">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1275">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1275">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-1276">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1276">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-1277">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1277">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-1278">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1278">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1279">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1279">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1280">노드 형식은 미리 정의 된 결과 형식이 `XOR` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1280">The type of the node is the result type of the predefined `XOR` operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-1281">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1281">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-1282">노드의 유형을 미리 정의 된 결과 형식에 해당 하는 nullable 형식 `XOR` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1282">The type of the node is the nullable type that corresponds to the result type of the predefined `XOR` operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-1283">다음 코드 예제에서는 논리적 XOR 연산을 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1283">The following code example shows how to create an expression that represents the logical XOR operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#9)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1284">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1284">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-1285">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 <see langword="XOR" /> 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1285">The <see langword="XOR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ExclusiveOr (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ExclusiveOr(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExclusiveOr (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ExclusiveOr(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1286">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1286">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1287">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1287">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1288">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1288">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1289">사용자 정의 형식에 대해 <c>op_ExclusiveOr</c>을 사용하여 비트 <see langword="XOR" /> 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1289">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="XOR" /> operation, using <c>op_ExclusiveOr</c> for user-defined types.</span>
          </span>
          <span data-ttu-id="5ff2c-1290">구현 메서드를 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1290">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1291">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOr" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1291">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOr" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1292">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1292">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-1293"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1293">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-1294">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1294">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-1295">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1295">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-1296"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1296">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-1297">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1297">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-1298">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1298">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-1299">다음 규칙 작업에 대 한 메서드를 구현 하는 선택한을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1299">The following rules determine the chosen implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-1300">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를은 구현 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1300">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1301">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 오버 로드 하는 사용자 정의 형식을 나타냅니다는 `XOR` 연산자는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1301">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the `XOR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1302">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 정수 또는 부울 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1302">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-1303">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1303">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-1304">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1304">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1305">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1305">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1306">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1306">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1307">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1307">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-1308">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1308">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-1309">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1309">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-1310">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1310">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1311">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1311">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1312">노드 형식은 미리 정의 된 결과 형식이 `XOR` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1312">The type of the node is the result type of the predefined `XOR` operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-1313">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1313">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-1314">노드의 유형을 미리 정의 된 결과 형식에 해당 하는 nullable 형식 `XOR` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1314">The type of the node is the nullable type that corresponds to the result type of the predefined `XOR` operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1315">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1315">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1316">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1316">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-1317">
            <paramref name="method" />가 <see langword="null" />이고 <see langword="XOR" /> 연산자가 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 대해 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1317">
              <paramref name="method" /> is <see langword="null" /> and the <see langword="XOR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExclusiveOrAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1318">비트 XOR 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1318">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise XOR assignment operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExclusiveOrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ExclusiveOrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ExclusiveOrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExclusiveOrAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ExclusiveOrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1319">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1319">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1320">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1320">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1321">사용자 정의 형식에 대해 <c>op_ExclusiveOr</c>을 사용하여 비트 XOR 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1321">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise XOR assignment operation, using <c>op_ExclusiveOr</c> for user-defined types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1322">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1322">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveOrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ExclusiveOrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ExclusiveOrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExclusiveOrAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ExclusiveOrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1323">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1323">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1324">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1324">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1325">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1325">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1326">사용자 정의 형식에 대해 <c>op_ExclusiveOr</c>을 사용하여 비트 XOR 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1326">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise XOR assignment operation, using <c>op_ExclusiveOr</c> for user-defined types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1327">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1327">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveOrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ExclusiveOrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ExclusiveOrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExclusiveOrAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ExclusiveOrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1328">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1328">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1329">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1329">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1330">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1330">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="5ff2c-1331">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1331">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1332">사용자 정의 형식에 대해 <c>op_ExclusiveOr</c>을 사용하여 비트 XOR 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1332">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise XOR assignment operation, using <c>op_ExclusiveOr</c> for user-defined types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1333">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1333">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Field">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1334">필드 액세스를 나타내는 <see cref="T:System.Linq.Expressions.MemberExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1334">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a field.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Field">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Field (System.Linq.Expressions.Expression expression, System.Reflection.FieldInfo field);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Field(class System.Linq.Expressions.Expression expression, class System.Reflection.FieldInfo field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Field(System::Linq::Expressions::Expression ^ expression, System::Reflection::FieldInfo ^ field);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="field" Type="System.Reflection.FieldInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-1335">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MemberExpression.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1335">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property equal to.</span>
          </span>
          <span data-ttu-id="5ff2c-1336">
            <see langword="static" />(Visual Basic에서는 <see langword="Shared" />)의 경우 <c>식</c>이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1336">For <see langword="static" /> (<see langword="Shared" /> in Visual Basic), <c>expression</c> must be <see langword="null" />.</span>
          </span>
        </param>
        <param name="field">
          <span data-ttu-id="5ff2c-1337">
            <see cref="T:System.Reflection.FieldInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MemberExpression.Member" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1337">The <see cref="T:System.Reflection.FieldInfo" /> to set the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1338">필드 액세스를 나타내는 <see cref="T:System.Linq.Expressions.MemberExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1338">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a field.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1339">
            <see cref="T:System.Linq.Expressions.MemberExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" /> 및 <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MemberExpression.Member" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1339">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" /> and the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> and <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1340"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.MemberExpression> 같은지는 <xref:System.Reflection.FieldInfo.FieldType%2A> 속성의 `field`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1340">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.FieldInfo.FieldType%2A> property of `field`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1341">
            <paramref name="field" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1341">
              <paramref name="field" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1342">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1342">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1343">
            <paramref name="field" />가 나타내는 필드가 <see langword="static" />(Visual Basic의 경우 <see langword="Shared" />)이 아니고 <paramref name="expression" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1343">The field represented by <paramref name="field" /> is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic) and <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1344">
            <paramref name="expression" />.Type을 <paramref name="field" />가 나타내는 필드의 선언 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1344">
              <paramref name="expression" />.Type is not assignable to the declaring type of the field represented by <paramref name="field" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Field">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Field (System.Linq.Expressions.Expression expression, string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Field(class System.Linq.Expressions.Expression expression, string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Field(System::Linq::Expressions::Expression ^ expression, System::String ^ fieldName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-1345">
            <see cref="P:System.Linq.Expressions.Expression.Type" />에 이름이 <c>fieldName</c>인 필드가 포함된 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1345">An <see cref="T:System.Linq.Expressions.Expression" /> whose <see cref="P:System.Linq.Expressions.Expression.Type" /> contains a field named <c>fieldName</c>.</span>
          </span>
          <span data-ttu-id="5ff2c-1346">이 값은 정적 필드의 경우 null일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1346">This can be null for static fields.</span>
          </span>
        </param>
        <param name="fieldName">
          <span data-ttu-id="5ff2c-1347">액세스할 필드의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1347">The name of a field to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1348">필드 이름을 통한 필드 액세스를 나타내는 <see cref="T:System.Linq.Expressions.MemberExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1348">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a field given the name of the field.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1349">
            <see cref="T:System.Linq.Expressions.MemberExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" /> 속성이 <see cref="P:System.Linq.Expressions.MemberExpression.Expression" />으로 설정되고 <paramref name="expression" /> 속성이 <see cref="P:System.Linq.Expressions.MemberExpression.Member" />이 가리키는 필드를 나타내는 <see cref="T:System.Reflection.FieldInfo" />로 설정된 <paramref name="fieldName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1349">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property set to <paramref name="expression" />, and the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property set to the <see cref="T:System.Reflection.FieldInfo" /> that represents the field denoted by <paramref name="fieldName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1350"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.MemberExpression> 같은지는 <xref:System.Reflection.FieldInfo.FieldType%2A> 속성의는 <xref:System.Reflection.FieldInfo> 가리키는 필드를 나타내는 `fieldName`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1350">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.FieldInfo.FieldType%2A> property of the <xref:System.Reflection.FieldInfo> that represents the field denoted by `fieldName`.</span></span>  
  
 <span data-ttu-id="5ff2c-1351">이 메서드 검색 `expression`합니다. 형식과 그 기본 형식의 이름이 있는 필드에 대 한 `fieldName`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1351">This method searches `expression`.Type and its base types for a field that has the name `fieldName`.</span></span> <span data-ttu-id="5ff2c-1352">공용 필드는 public이 아닌 필드 보다 우선을 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1352">Public fields are given preference over non-public fields.</span></span> <span data-ttu-id="5ff2c-1353">이 메서드를 전달 하는 경우 일치 하는 필드를 찾으면 `expression` 및 <xref:System.Reflection.FieldInfo> 해당 필드를 나타내는 <xref:System.Linq.Expressions.Expression.Field%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1353">If a matching field is found, this method passes `expression` and the <xref:System.Reflection.FieldInfo> that represents that field to <xref:System.Linq.Expressions.Expression.Field%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-1354">다음 코드 예제에서는 필드 액세스를 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1354">The following code example shows how to create an expression that represents accessing a field.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#37](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#37)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#37](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#37)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1355">
            <paramref name="expression" /> 또는 <paramref name="fieldName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1355">
              <paramref name="expression" /> or <paramref name="fieldName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1356">
            <paramref name="fieldName" />.Type 또는 해당 기본 형식에 이름이 <paramref name="expression" />인 필드가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1356">No field named <paramref name="fieldName" /> is defined in <paramref name="expression" />.Type or its base types.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Field">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Field (System.Linq.Expressions.Expression expression, Type type, string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Field(class System.Linq.Expressions.Expression expression, class System.Type type, string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Field(System::Linq::Expressions::Expression ^ expression, Type ^ type, System::String ^ fieldName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-1357">필드의 포함 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1357">The containing object of the field.</span>
          </span>
          <span data-ttu-id="5ff2c-1358">이 값은 정적 필드의 경우 null일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1358">This can be null for static fields.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-1359">필드를 포함하는 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1359">The <see cref="P:System.Linq.Expressions.Expression.Type" /> that contains the field.</span>
          </span>
        </param>
        <param name="fieldName">
          <span data-ttu-id="5ff2c-1360">액세스할 필드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1360">The field to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1361">필드 액세스를 나타내는 <see cref="T:System.Linq.Expressions.MemberExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1361">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a field.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1362">만든 <see cref="T:System.Linq.Expressions.MemberExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1362">The created <see cref="T:System.Linq.Expressions.MemberExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionType">
      <MemberSignature Language="C#" Value="public static Type GetActionType (params Type[] typeArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetActionType(class System.Type[] typeArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GetActionType(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActionType (ParamArray typeArgs As Type()) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetActionType(... cli::array &lt;Type ^&gt; ^ typeArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArgs" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeArgs">
          <span data-ttu-id="5ff2c-1363">
            <see cref="T:System.Type" /> 대리자 형식의 형식 인수를 지정하는 1개에서 16개의 <see langword="System.Action" /> 개체가 들어있는 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1363">An array of up to sixteen <see cref="T:System.Type" /> objects that specify the type arguments for the <see langword="System.Action" /> delegate type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1364">특정 형식 인수가 있는 제네릭 <c>System.Action</c> 대리자 형식을 나타내는 <see cref="T:System.Type" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1364">Creates a <see cref="T:System.Type" /> object that represents a generic <c>System.Action</c> delegate type that has specific type arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1365">지정된 형식 인수가 있는 <c>System.Action</c> 대리자의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1365">The type of a <c>System.Action</c> delegate that has the specified type arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1366">예를 들어 경우 요소의 `typeArgs` 형식을 나타냅니다 `T1…Tn`, 결과 <xref:System.Type> 개체가 생성 된 대리자 형식을 나타내는 `System.Action<T1,…,Tn>` C# 또는 `System.Action(Of T1,…,Tn)` Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1366">As an example, if the elements of `typeArgs` represent the types `T1…Tn`, the resulting <xref:System.Type> object represents the constructed delegate type `System.Action<T1,…,Tn>` in C# or `System.Action(Of T1,…,Tn)` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1367">
            <paramref name="typeArgs" />에 17개 이상의 요소가 포함된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1367">
              <paramref name="typeArgs" /> contains more than sixteen elements.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1368">
            <paramref name="typeArgs" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1368">
              <paramref name="typeArgs" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDelegateType">
      <MemberSignature Language="C#" Value="public static Type GetDelegateType (params Type[] typeArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetDelegateType(class System.Type[] typeArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GetDelegateType(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDelegateType (ParamArray typeArgs As Type()) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetDelegateType(... cli::array &lt;Type ^&gt; ^ typeArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArgs" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeArgs">
          <span data-ttu-id="5ff2c-1369">대리자의 형식 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1369">The type arguments of the delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1370">특정 형식 인수가 있는 제네릭 <c>System.Func</c> 또는 <c>System.Action</c> 대리자 형식을 나타내는 <see cref="P:System.Linq.Expressions.Expression.Type" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1370">Gets a <see cref="P:System.Linq.Expressions.Expression.Type" /> object that represents a generic <c>System.Func</c> or <c>System.Action</c> delegate type that has specific type arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1371">대리자 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1371">The delegate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1372">마지막 형식 인수는 대리자의 반환 형식을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1372">The last type argument determines the return type of the delegate.</span></span> <span data-ttu-id="5ff2c-1373">작업이 없거나 Func 충분히 클 경우 사용자 지정 대리자 형식을 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1373">If no Func or Action is large enough, it will generate a custom delegate type.</span></span>  
  
 <span data-ttu-id="5ff2c-1374">Func와 마찬가지로 마지막 인수는 반환 형식.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1374">As with Func, the last argument is the return type.</span></span> <span data-ttu-id="5ff2c-1375">작업을 생성 하려면 System.Void를 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1375">It can be set to System.Void to produce an Action.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFuncType">
      <MemberSignature Language="C#" Value="public static Type GetFuncType (params Type[] typeArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetFuncType(class System.Type[] typeArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GetFuncType(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFuncType (ParamArray typeArgs As Type()) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetFuncType(... cli::array &lt;Type ^&gt; ^ typeArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArgs" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeArgs">
          <span data-ttu-id="5ff2c-1376">
            <see cref="T:System.Type" /> 대리자 형식의 형식 인수를 지정하는 1개에서 17개의 <see langword="System.Func" /> 개체가 포함된 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1376">An array of one to seventeen <see cref="T:System.Type" /> objects that specify the type arguments for the <see langword="System.Func" /> delegate type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1377">특정 형식 인수가 있는 제네릭 <c>System.Func</c> 대리자 형식을 나타내는 <see cref="P:System.Linq.Expressions.Expression.Type" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1377">Creates a <see cref="P:System.Linq.Expressions.Expression.Type" /> object that represents a generic <c>System.Func</c> delegate type that has specific type arguments.</span>
          </span>
          <span data-ttu-id="5ff2c-1378">마지막 형식 인수는 생성된 대리자의 반환 형식을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1378">The last type argument specifies the return type of the created delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1379">지정된 형식 인수가 있는 <c>System.Func</c> 대리자의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1379">The type of a <c>System.Func</c> delegate that has the specified type arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1380">`typeArgs` 하나 이상의 및 최대 17 요소를 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1380">`typeArgs` must contain at least one and at most seventeen elements.</span></span>  
  
 <span data-ttu-id="5ff2c-1381">예를 들어 경우 요소의 `typeArgs` 형식을 나타냅니다 `T1…Tn`, 결과 <xref:System.Type> 개체가 생성 된 대리자 형식을 나타내는 `System.Func<T1,…,Tn>` C# 또는 `System.Func(Of T1,…,Tn)` Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1381">As an example, if the elements of `typeArgs` represent the types `T1…Tn`, the resulting <xref:System.Type> object represents the constructed delegate type `System.Func<T1,…,Tn>` in C# or `System.Func(Of T1,…,Tn)` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1382">
            <paramref name="typeArgs" />에 1개 미만 또는 17개보다 많은 요소가 들어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1382">
              <paramref name="typeArgs" /> contains fewer than one or more than seventeen elements.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1383">
            <paramref name="typeArgs" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1383">
              <paramref name="typeArgs" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Goto">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1384">"go to" 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1384">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a "go to" statement.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Goto(class System.Linq.Expressions.LabelTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Goto (target As LabelTarget) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Goto(System::Linq::Expressions::LabelTarget ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="5ff2c-1385">
            <see cref="T:System.Linq.Expressions.LabelTarget" />이 이동할 <see cref="T:System.Linq.Expressions.GotoExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1385">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1386">"go to" 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1386">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a "go to" statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1387">
            <see cref="T:System.Linq.Expressions.GotoExpression" />가 Goto이고, <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 속성이 지정된 값으로 설정되며, 이동 시 대상 레이블에 null 값이 전달되는 <see cref="P:System.Linq.Expressions.GotoExpression.Target" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1387">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Goto, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to the specified value, and a null value to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-1388">다음 예제에서는 포함 된 식을 만드는 <xref:System.Linq.Expressions.GotoExpression> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1388">The following example demonstrates how to create an expression that contains a <xref:System.Linq.Expressions.GotoExpression> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#45](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#45)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#45](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#45)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Goto(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Goto (target As LabelTarget, value As Expression) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Goto(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="5ff2c-1389">
            <see cref="T:System.Linq.Expressions.LabelTarget" />이 이동할 <see cref="T:System.Linq.Expressions.GotoExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1389">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5ff2c-1390">이동 시 연결된 레이블에 전달될 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1390">The value that will be passed to the associated label upon jumping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1391">"go to" 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1391">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a "go to" statement.</span>
          </span>
          <span data-ttu-id="5ff2c-1392">이동 시 레이블에 전달되는 값을 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1392">The value passed to the label upon jumping can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1393">
            <see cref="T:System.Linq.Expressions.GotoExpression" />가 Goto이고, <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 속성이 <see cref="P:System.Linq.Expressions.GotoExpression.Target" />으로 설정되며, 이동 시 대상 레이블에 <paramref name="target" />가 전달되는 <paramref name="value" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1393">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Goto, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Goto(class System.Linq.Expressions.LabelTarget target, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Goto(System::Linq::Expressions::LabelTarget ^ target, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="5ff2c-1394">
            <see cref="T:System.Linq.Expressions.LabelTarget" />이 이동할 <see cref="T:System.Linq.Expressions.GotoExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1394">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-1395">
            <see cref="T:System.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1395">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1396">지정된 형식을 사용하여 "go to" 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1396">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a "go to" statement with the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1397">
            <see cref="T:System.Linq.Expressions.GotoExpression" />가 Goto이고, <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 속성이 지정된 값으로 설정되며, <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.Type" />으로 설정되고, 이동 시 대상 레이블에 null 값이 전달되는 <paramref name="type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1397">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Goto, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to the specified value, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and a null value to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Goto(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Goto(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="5ff2c-1398">
            <see cref="T:System.Linq.Expressions.LabelTarget" />이 이동할 <see cref="T:System.Linq.Expressions.GotoExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1398">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5ff2c-1399">이동 시 연결된 레이블에 전달될 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1399">The value that will be passed to the associated label upon jumping.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-1400">
            <see cref="T:System.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1400">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1401">지정된 형식을 사용하여 "go to" 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1401">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a "go to" statement with the specified type.</span>
          </span>
          <span data-ttu-id="5ff2c-1402">이동 시 레이블에 전달되는 값을 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1402">The value passed to the label upon jumping can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1403">
            <see cref="T:System.Linq.Expressions.GotoExpression" />가 Goto이고, <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 속성이 <see cref="P:System.Linq.Expressions.GotoExpression.Target" />으로 설정되며, <paramref name="target" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.Type" />으로 설정되고, 이동 시 대상 레이블에 <paramref name="type" />가 전달되는 <paramref name="value" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1403">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Goto, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GreaterThan">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1404">"보다 큼" 숫자 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1404">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than" numeric comparison.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression GreaterThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression GreaterThan(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThan (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ GreaterThan(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1405">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1405">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1406">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1406">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1407">"보다 큼" 숫자 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1407">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than" numeric comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1408">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThan" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1408">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThan" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1409">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1409">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-1410"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1410">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-1411">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 속성은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1411">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="5ff2c-1412">그렇지 않으면 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1412">Otherwise, it is `false`.</span></span> <span data-ttu-id="5ff2c-1413"><xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 항상 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1413">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="5ff2c-1414"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1414">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-1415">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1415">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-1416">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1416">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-1417">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1417">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-1418">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` "보다 큼" 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1418">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "greater than" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1419">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1419">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-1420">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1420">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-1421">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1421">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1422">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1422">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1423">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1423">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1424">다음 두 조건을 충족 하는 노드가 리프트 된 및 노드 형식이 <xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1424">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="5ff2c-1425">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1425">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-1426">구현 메서드의 반환 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1426">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="5ff2c-1427">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1427">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1428">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1428">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1429">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1429">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="5ff2c-1430">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1430">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-1431">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1431">The type of the node is <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-1432">다음 코드 예제에서는 두 정수를 비교 하는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1432">The following code example shows how to create an expression that compares two integers.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#10)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1433">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1433">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-1434">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 "보다 큼" 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1434">The "greater than" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression GreaterThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression GreaterThan(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThan (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ GreaterThan(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1435">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1435">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1436">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1436">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="liftToNull">
          <span data-ttu-id="5ff2c-1437">
            <see langword="true" />를 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />로 설정하려면 <see langword="true" />이고, <see langword="false" />를 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />로 설정하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1437">
              <see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1438">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1438">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1439">"보다 큼" 숫자 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1439">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than" numeric comparison.</span>
          </span>
          <span data-ttu-id="5ff2c-1440">구현 메서드를 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1440">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1441">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThan" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1441">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThan" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1442">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1442">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-1443"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1443">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-1444">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 속성은 `true` 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성이 `liftToNull`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1444">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="5ff2c-1445">그렇지 않은 경우는 모두 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1445">Otherwise, they are both `false`.</span></span> <span data-ttu-id="5ff2c-1446"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1446">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-1447">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1447">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-1448">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1448">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-1449">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1449">The following rules determine the implementing method for the operation :</span></span>  
  
-   <span data-ttu-id="5ff2c-1450">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를은 구현 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1450">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1451">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` "보다 큼" 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1451">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "greater than" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1452">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1452">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-1453">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1453">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-1454">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1454">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1455">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1455">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1456">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1456">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1457">다음 두 가지 조건을 충족 하는 경우 노드 적용 되지 않습니다. 또한 노드의 형식이 nullable <xref:System.Boolean> 경우 `liftToNull` 은 `true` 또는 <xref:System.Boolean> 경우 `liftToNull` 은 `false`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1457">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="5ff2c-1458">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1458">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-1459">구현 메서드의 반환 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1459">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="5ff2c-1460">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1460">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1461">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1461">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1462">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1462">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="5ff2c-1463">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1463">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-1464">노드 형식이 nullable <xref:System.Boolean> 경우 `liftToNull` 은 `true` 또는 <xref:System.Boolean> 경우 `liftToNull` 은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1464">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1465">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1465">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1466">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1466">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-1467">
            <paramref name="method" />가 <see langword="null" />이고 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 "보다 큼" 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1467">
              <paramref name="method" /> is <see langword="null" /> and the "greater than" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GreaterThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1468">"보다 크거나 같음" 숫자 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1468">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than or equal" numeric comparison.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression GreaterThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression GreaterThanOrEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThanOrEqual (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ GreaterThanOrEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1469">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1469">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1470">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1470">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1471">"보다 크거나 같음" 숫자 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1471">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than or equal" numeric comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1472">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1472">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1473">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1473">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-1474"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1474">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-1475">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 속성은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1475">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="5ff2c-1476">그렇지 않으면 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1476">Otherwise, it is `false`.</span></span> <span data-ttu-id="5ff2c-1477"><xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 항상 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1477">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="5ff2c-1478"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1478">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-1479">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1479">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-1480">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1480">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-1481">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1481">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-1482">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` "보다 크거나" 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1482">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "greater than or equal" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1483">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1483">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-1484">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1484">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-1485">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1485">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1486">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1486">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1487">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1487">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1488">다음 두 조건을 충족 하는 노드가 리프트 된 및 노드 형식이 <xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1488">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="5ff2c-1489">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1489">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-1490">구현 메서드의 반환 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1490">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="5ff2c-1491">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1491">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1492">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1492">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1493">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1493">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="5ff2c-1494">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1494">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-1495">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1495">The type of the node is <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-1496">다음 코드 예제에서는 두 정수를 비교 하는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1496">The following code example shows how to create an expression that compares two integers.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#11)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1497">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1497">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-1498">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 "보다 크거나 같음" 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1498">The "greater than or equal" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression GreaterThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression GreaterThanOrEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThanOrEqual (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ GreaterThanOrEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1499">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1499">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1500">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1500">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="liftToNull">
          <span data-ttu-id="5ff2c-1501">
            <see langword="true" />를 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />로 설정하려면 <see langword="true" />이고, <see langword="false" />를 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />로 설정하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1501">
              <see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1502">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1502">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1503">"보다 크거나 같음" 숫자 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1503">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than or equal" numeric comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1504">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1504">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1505">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1505">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-1506"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1506">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-1507">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 속성은 `true` 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성이 `liftToNull`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1507">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="5ff2c-1508">그렇지 않은 경우는 모두 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1508">Otherwise, they are both `false`.</span></span> <span data-ttu-id="5ff2c-1509"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1509">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-1510">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1510">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-1511">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1511">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-1512">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1512">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-1513">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를은 구현 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1513">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1514">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` "보다 크거나" 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1514">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "greater than or equal" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1515">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1515">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-1516">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1516">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-1517">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1517">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1518">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1518">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1519">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1519">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1520">다음 두 가지 조건을 충족 하는 경우 노드 적용 되지 않습니다. 또한 노드의 형식이 nullable <xref:System.Boolean> 경우 `liftToNull` 은 `true` 또는 <xref:System.Boolean> 경우 `liftToNull` 은 `false`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1520">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="5ff2c-1521">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1521">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-1522">구현 메서드의 반환 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1522">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="5ff2c-1523">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1523">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1524">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1524">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1525">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1525">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="5ff2c-1526">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1526">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-1527">노드 형식이 nullable <xref:System.Boolean> 경우 `liftToNull` 은 `true` 또는 <xref:System.Boolean> 경우 `liftToNull` 은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1527">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1528">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1528">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1529">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1529">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-1530">
            <paramref name="method" />가 <see langword="null" />이고 “크거나 같음" 연산자가 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 대해 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1530">
              <paramref name="method" /> is <see langword="null" /> and the "greater than or equal" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IfThen">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConditionalExpression IfThen (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConditionalExpression IfThen(class System.Linq.Expressions.Expression test, class System.Linq.Expressions.Expression ifTrue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IfThen (test As Expression, ifTrue As Expression) As ConditionalExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConditionalExpression ^ IfThen(System::Linq::Expressions::Expression ^ test, System::Linq::Expressions::Expression ^ ifTrue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConditionalExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="ifTrue" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="test">
          <span data-ttu-id="5ff2c-1531">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1531">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> property equal to.</span>
          </span>
        </param>
        <param name="ifTrue">
          <span data-ttu-id="5ff2c-1532">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1532">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1533">
            <see cref="T:System.Linq.Expressions.ConditionalExpression" /> 문을 사용하여 조건부 블록을 나타내는 <see langword="if" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1533">Creates a <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that represents a conditional block with an <see langword="if" /> statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1534">
            <see cref="T:System.Linq.Expressions.ConditionalExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" /> 및 <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1534">A <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" /> and the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />, <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />, properties set to the specified values.</span>
          </span>
          <span data-ttu-id="5ff2c-1535">
            <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> 속성은 기본 식으로 설정되고 이 메서드에서 반환되는 결과 <see cref="T:System.Linq.Expressions.ConditionalExpression" />의 형식은 <see cref="T:System.Void" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1535">The <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> property is set to default expression and the type of the resulting <see cref="T:System.Linq.Expressions.ConditionalExpression" /> returned by this method is <see cref="T:System.Void" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-1536">다음 코드 예제에서는 조건부 블록을 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1536">The following code example shows how to create an expression that represents a conditional block.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#32](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#32)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IfThenElse">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConditionalExpression IfThenElse (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue, System.Linq.Expressions.Expression ifFalse);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConditionalExpression IfThenElse(class System.Linq.Expressions.Expression test, class System.Linq.Expressions.Expression ifTrue, class System.Linq.Expressions.Expression ifFalse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IfThenElse (test As Expression, ifTrue As Expression, ifFalse As Expression) As ConditionalExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConditionalExpression ^ IfThenElse(System::Linq::Expressions::Expression ^ test, System::Linq::Expressions::Expression ^ ifTrue, System::Linq::Expressions::Expression ^ ifFalse);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConditionalExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="ifTrue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="ifFalse" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="test">
          <span data-ttu-id="5ff2c-1537">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1537">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> property equal to.</span>
          </span>
        </param>
        <param name="ifTrue">
          <span data-ttu-id="5ff2c-1538">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1538">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> property equal to.</span>
          </span>
        </param>
        <param name="ifFalse">
          <span data-ttu-id="5ff2c-1539">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1539">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1540">
            <see cref="T:System.Linq.Expressions.ConditionalExpression" /> 및 <see langword="if" /> 문을 사용하여 조건부 블록을 나타내는 <see langword="else" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1540">Creates a <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that represents a conditional block with <see langword="if" /> and <see langword="else" /> statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1541">
            <see cref="T:System.Linq.Expressions.ConditionalExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" />, <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> 및 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1541">A <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" /> and the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />, <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />, and <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> properties set to the specified values.</span>
          </span>
          <span data-ttu-id="5ff2c-1542">이 메서드에서 반환되는 결과 <see cref="T:System.Linq.Expressions.ConditionalExpression" />의 형식은 <see cref="T:System.Void" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1542">The type of the resulting <see cref="T:System.Linq.Expressions.ConditionalExpression" /> returned by this method is <see cref="T:System.Void" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-1543">다음 코드 예제에서는 조건부 블록을 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1543">The following code example shows how to create an expression that represents a conditional block.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#33)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Increment">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1544">값이 1씩 증가하는 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1544">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the incrementing of the expression value by 1.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Increment (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Increment(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Increment(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-1545">증가시킬 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1545">An <see cref="T:System.Linq.Expressions.Expression" /> to increment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1546">값이 1씩 증가하는 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1546">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the incrementing of the expression value by 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1547">증가되는 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1547">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the incremented expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1548">이 식은 편리 하 고 전달 되는 개체의 값이 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1548">This expression is functional and does not change the value of the object that is passed to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-1549">다음 코드 예제에는 증분 작업을 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1549">The following code example shows how to create an expression that represents an increment operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#24)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Increment (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Increment(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Increment(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-1550">증가시킬 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1550">An <see cref="T:System.Linq.Expressions.Expression" /> to increment.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1551">구현 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1551">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1552">1씩 증가하는 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1552">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the incrementing of the expression by 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1553">증가되는 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1553">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the incremented expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1554">이 식은 편리 하 고 전달 되는 개체의 값이 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1554">This expression is functional and does not change the value of the object that is passed to it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1555">
            <see cref="T:System.Linq.Expressions.InvocationExpression" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1555">Creates an <see cref="T:System.Linq.Expressions.InvocationExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.InvocationExpression Invoke (System.Linq.Expressions.Expression expression, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.InvocationExpression Invoke(class System.Linq.Expressions.Expression expression, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::InvocationExpression ^ Invoke(System::Linq::Expressions::Expression ^ expression, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.InvocationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-1556">적용되는 대리자 또는 람다 식을 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1556">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the delegate or lambda expression to be applied to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-1557">대리자 또는 람다 식이 적용되는 인수를 나타내는 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체가 포함된 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1557">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects that represent the arguments that the delegate or lambda expression is applied to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1558">인수 식 목록에 대리자 또는 람다 식을 적용하는 <see cref="T:System.Linq.Expressions.InvocationExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1558">Creates an <see cref="T:System.Linq.Expressions.InvocationExpression" /> that applies a delegate or lambda expression to a list of argument expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1559">지정된 대리자 또는 람다 식을 제공된 인수에 적용하는 <see cref="T:System.Linq.Expressions.InvocationExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1559">An <see cref="T:System.Linq.Expressions.InvocationExpression" /> that applies the specified delegate or lambda expression to the provided arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1560"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.InvocationExpression> 나타내는 대리자의 반환 형식을 나타내는 `expression`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1560">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.InvocationExpression> represents the return type of the delegate that is represented by `expression`.Type.</span></span>  
  
 <span data-ttu-id="5ff2c-1561"><xref:System.Linq.Expressions.InvocationExpression.Arguments%2A> 결과의 속성 <xref:System.Linq.Expressions.InvocationExpression> 비어 있으면 `arguments` 은 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1561">The <xref:System.Linq.Expressions.InvocationExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.InvocationExpression> is empty if `arguments` is `null`.</span></span> <span data-ttu-id="5ff2c-1562">동일한 요소를 포함 하지 않으면, `arguments` 이 중 일부는 <xref:System.Linq.Expressions.Expression> 개체 수 *따옴표 붙은*합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1562">Otherwise, it contains the same elements as `arguments` except that some of these <xref:System.Linq.Expressions.Expression> objects may be *quoted*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5ff2c-1563">대리자의 해당 매개 변수로 표현 하는 경우에 요소 인용 됩니다 `expression` 유형의 <xref:System.Linq.Expressions.Expression>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1563">An element will be quoted only if the corresponding parameter of the delegate represented by `expression` is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="5ff2c-1564">요소에 래핑됩니다 인용는 <xref:System.Linq.Expressions.ExpressionType.Quote> 노드.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1564">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="5ff2c-1565">결과 노드는 <xref:System.Linq.Expressions.UnaryExpression> 인 <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> 속성의 요소인 `arguments`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1565">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-1566">다음 예제에서는 사용 하는 방법을 <xref:System.Linq.Expressions.Expression.Invoke%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> 만드는 메서드를 한 <xref:System.Linq.Expressions.InvocationExpression> 지정 된 인수를 람다 식의 호출을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1566">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.Invoke%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create an <xref:System.Linq.Expressions.InvocationExpression> that represents the invocation of a lambda expression with specified arguments.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#6)]
 [!code-vb[System.Linq.Expressions.Expression#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1567">
            <paramref name="expression" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1567">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1568">
            <paramref name="expression" />.Type이 대리자 형식이나 <see cref="T:System.Linq.Expressions.Expression`1" />을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1568">
              <paramref name="expression" />.Type does not represent a delegate type or an <see cref="T:System.Linq.Expressions.Expression`1" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1569">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1569">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1570">
            <paramref name="arguments" />에 있는 요소의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성을 <paramref name="expression" />이 나타내는 대리자의 해당 매개 변수 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1570">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the delegate represented by <paramref name="expression" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-1571">
            <paramref name="arguments" />에 들어 있는 요소 수가 <paramref name="expression" />이 나타내는 대리자의 매개 변수 목록과 다른 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1571">
              <paramref name="arguments" /> does not contain the same number of elements as the list of parameters for the delegate represented by <paramref name="expression" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.InvocationExpression Invoke (System.Linq.Expressions.Expression expression, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.InvocationExpression Invoke(class System.Linq.Expressions.Expression expression, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::InvocationExpression ^ Invoke(System::Linq::Expressions::Expression ^ expression, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.InvocationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-1572">적용되는 대리자 또는 람다 식을 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1572">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the delegate or lambda expression to be applied.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-1573">대리자 또는 람다 식이 적용되는 인수를 나타내는 <see cref="T:System.Linq.Expressions.Expression" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1573">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects that represent the arguments that the delegate or lambda expression is applied to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1574">인수 식 목록에 대리자 또는 람다 식을 적용하는 <see cref="T:System.Linq.Expressions.InvocationExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1574">Creates an <see cref="T:System.Linq.Expressions.InvocationExpression" /> that applies a delegate or lambda expression to a list of argument expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1575">지정된 대리자 또는 람다 식을 제공된 인수에 적용하는 <see cref="T:System.Linq.Expressions.InvocationExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1575">An <see cref="T:System.Linq.Expressions.InvocationExpression" /> that applies the specified delegate or lambda expression to the provided arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1576"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.InvocationExpression> 나타내는 대리자의 반환 형식을 나타내는 `expression`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1576">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.InvocationExpression> represents the return type of the delegate that is represented by `expression`.Type.</span></span>  
  
 <span data-ttu-id="5ff2c-1577"><xref:System.Linq.Expressions.InvocationExpression.Arguments%2A> 결과의 속성 <xref:System.Linq.Expressions.InvocationExpression> 비어 있으면 `arguments` 은 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1577">The <xref:System.Linq.Expressions.InvocationExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.InvocationExpression> is empty if `arguments` is `null`.</span></span> <span data-ttu-id="5ff2c-1578">동일한 요소를 포함 하지 않으면, `arguments` 이 중 일부는 <xref:System.Linq.Expressions.Expression> 개체 수 *따옴표 붙은*합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1578">Otherwise, it contains the same elements as `arguments` except that some of these <xref:System.Linq.Expressions.Expression> objects may be *quoted*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5ff2c-1579">대리자의 해당 매개 변수로 표현 하는 경우에 요소 인용 됩니다 `expression` 유형의 <xref:System.Linq.Expressions.Expression>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1579">An element will be quoted only if the corresponding parameter of the delegate represented by `expression` is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="5ff2c-1580">요소에 래핑됩니다 인용는 <xref:System.Linq.Expressions.ExpressionType.Quote> 노드.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1580">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="5ff2c-1581">결과 노드는 <xref:System.Linq.Expressions.UnaryExpression> 인 <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> 속성의 요소인 `arguments`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1581">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-1582">다음 예제에서는 사용 하는 방법을 <xref:System.Linq.Expressions.Expression.Invoke%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> 만드는 메서드를 한 <xref:System.Linq.Expressions.InvocationExpression> 지정 된 인수를 람다 식의 호출을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1582">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.Invoke%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create an <xref:System.Linq.Expressions.InvocationExpression> that represents the invocation of a lambda expression with specified arguments.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#6)]
 [!code-vb[System.Linq.Expressions.Expression#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1583">
            <paramref name="expression" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1583">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1584">
            <paramref name="expression" />.Type이 대리자 형식이나 <see cref="T:System.Linq.Expressions.Expression`1" />을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1584">
              <paramref name="expression" />.Type does not represent a delegate type or an <see cref="T:System.Linq.Expressions.Expression`1" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1585">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1585">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1586">
            <paramref name="arguments" />에 있는 요소의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성을 <paramref name="expression" />이 나타내는 대리자의 해당 매개 변수 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1586">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the delegate represented by <paramref name="expression" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-1587">
            <paramref name="arguments" />에 들어 있는 요소 수가 <paramref name="expression" />이 나타내는 대리자의 매개 변수 목록과 다른 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1587">
              <paramref name="arguments" /> does not contain the same number of elements as the list of parameters for the delegate represented by <paramref name="expression" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsFalse">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1588">식이 false로 계산되는지 여부를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1588">Returns whether the expression evaluates to false.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsFalse">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression IsFalse (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression IsFalse(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ IsFalse(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-1589">계산할 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1589">An <see cref="T:System.Linq.Expressions.Expression" /> to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1590">식이 false로 계산되는지 여부를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1590">Returns whether the expression evaluates to false.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1591">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1591">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFalse">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression IsFalse (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression IsFalse(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ IsFalse(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-1592">계산할 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1592">An <see cref="T:System.Linq.Expressions.Expression" /> to evaluate.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1593">구현 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1593">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1594">식이 false로 계산되는지 여부를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1594">Returns whether the expression evaluates to false.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1595">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1595">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsTrue">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1596">식이 true로 계산되는지 여부를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1596">Returns whether the expression evaluates to true.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsTrue">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression IsTrue (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression IsTrue(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ IsTrue(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-1597">계산할 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1597">An <see cref="T:System.Linq.Expressions.Expression" /> to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1598">식이 true로 계산되는지 여부를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1598">Returns whether the expression evaluates to true.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1599">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1599">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTrue">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression IsTrue (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression IsTrue(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ IsTrue(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-1600">계산할 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1600">An <see cref="T:System.Linq.Expressions.Expression" /> to evaluate.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1601">구현 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1601">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1602">식이 true로 계산되는지 여부를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1602">Returns whether the expression evaluates to true.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1603">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1603">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Label">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1604">레이블을 나타내는 <see cref="T:System.Linq.Expressions.LabelTarget" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1604">Creates a <see cref="T:System.Linq.Expressions.LabelTarget" /> representing a label.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelTarget Label ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelTarget Label() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Label () As LabelTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelTarget ^ Label();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1605">이름이 없는 void 형식의 레이블을 나타내는 <see cref="T:System.Linq.Expressions.LabelTarget" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1605">Creates a <see cref="T:System.Linq.Expressions.LabelTarget" /> representing a label with void type and no name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1606">새 <see cref="T:System.Linq.Expressions.LabelTarget" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1606">The new <see cref="T:System.Linq.Expressions.LabelTarget" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-1607">다음 예제에서는 포함 된 식을 만드는 <xref:System.Linq.Expressions.LabelTarget> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1607">The following example demonstrates how to create an expression that contains a <xref:System.Linq.Expressions.LabelTarget> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#43](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#43)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#43](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#43)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelExpression Label (System.Linq.Expressions.LabelTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelExpression Label(class System.Linq.Expressions.LabelTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Label (target As LabelTarget) As LabelExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelExpression ^ Label(System::Linq::Expressions::LabelTarget ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="5ff2c-1608">이 <see cref="T:System.Linq.Expressions.LabelTarget" />과 연결될 <see cref="T:System.Linq.Expressions.LabelExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1608">The <see cref="T:System.Linq.Expressions.LabelTarget" /> which this <see cref="T:System.Linq.Expressions.LabelExpression" /> will be associated with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1609">기본값이 없는 레이블을 나타내는 <see cref="T:System.Linq.Expressions.LabelExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1609">Creates a <see cref="T:System.Linq.Expressions.LabelExpression" /> representing a label without a default value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1610">기본값이 없는 <see cref="T:System.Linq.Expressions.LabelExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1610">A <see cref="T:System.Linq.Expressions.LabelExpression" /> without a default value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelTarget Label (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelTarget Label(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Label (name As String) As LabelTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelTarget ^ Label(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelTarget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5ff2c-1611">레이블의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1611">The name of the label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1612">void 형식과 지정된 이름을 사용하여 레이블을 나타내는 <see cref="T:System.Linq.Expressions.LabelTarget" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1612">Creates a <see cref="T:System.Linq.Expressions.LabelTarget" /> representing a label with void type and the given name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1613">새 <see cref="T:System.Linq.Expressions.LabelTarget" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1613">The new <see cref="T:System.Linq.Expressions.LabelTarget" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelTarget Label (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelTarget Label(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelTarget ^ Label(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelTarget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-1614">레이블로 이동할 때 전달되는 값의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1614">The type of value that is passed when jumping to the label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1615">지정된 유형을 사용하여 레이블을 나타내는 <see cref="T:System.Linq.Expressions.LabelTarget" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1615">Creates a <see cref="T:System.Linq.Expressions.LabelTarget" /> representing a label with the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1616">새 <see cref="T:System.Linq.Expressions.LabelTarget" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1616">The new <see cref="T:System.Linq.Expressions.LabelTarget" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-1617">다음 예제에서는 사용 하는 <xref:System.Linq.Expressions.LabelTarget> 루프 식에서 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1617">The following example demonstrates how to use a <xref:System.Linq.Expressions.LabelTarget> object in a loop expression.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#44)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#44)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelExpression Label (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelExpression Label(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Label (target As LabelTarget, defaultValue As Expression) As LabelExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelExpression ^ Label(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ defaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="defaultValue" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="5ff2c-1618">이 <see cref="T:System.Linq.Expressions.LabelTarget" />과 연결될 <see cref="T:System.Linq.Expressions.LabelExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1618">The <see cref="T:System.Linq.Expressions.LabelTarget" /> which this <see cref="T:System.Linq.Expressions.LabelExpression" /> will be associated with.</span>
          </span>
        </param>
        <param name="defaultValue">
          <span data-ttu-id="5ff2c-1619">일반 제어 흐름을 통해 레이블에 접근하는 경우 이 <see cref="T:System.Linq.Expressions.LabelExpression" />의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1619">The value of this <see cref="T:System.Linq.Expressions.LabelExpression" /> when the label is reached through regular control flow.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1620">지정된 기본값을 사용하여 레이블을 나타내는 <see cref="T:System.Linq.Expressions.LabelExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1620">Creates a <see cref="T:System.Linq.Expressions.LabelExpression" /> representing a label with the given default value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1621">지정된 기본값이 있는 <see cref="T:System.Linq.Expressions.LabelExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1621">A <see cref="T:System.Linq.Expressions.LabelExpression" /> with the given default value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelTarget Label (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelTarget Label(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelTarget ^ Label(Type ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelTarget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-1622">레이블로 이동할 때 전달되는 값의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1622">The type of value that is passed when jumping to the label.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="5ff2c-1623">레이블의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1623">The name of the label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1624">지정된 형식과 이름을 사용하여 레이블을 나타내는 <see cref="T:System.Linq.Expressions.LabelTarget" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1624">Creates a <see cref="T:System.Linq.Expressions.LabelTarget" /> representing a label with the given type and name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1625">새 <see cref="T:System.Linq.Expressions.LabelTarget" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1625">The new <see cref="T:System.Linq.Expressions.LabelTarget" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Lambda">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1626">람다 식을 나타내는 식 트리를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1626">Creates an expression tree that represents a lambda expression.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="5ff2c-1627">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1627">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1628">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1628">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1629">먼저 대리자 형식을 생성하여 LambdaExpression을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1629">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1630">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성이 Lambda이고 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1630">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, ParamArray parameters As ParameterExpression()) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="5ff2c-1631">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1631">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1632">
            <see cref="T:System.Linq.Expressions.ParameterExpression" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1632">An array of <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1633">우선 대리자 형식을 생성하여 <see cref="T:System.Linq.Expressions.LambdaExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1633">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1634">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1634">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1635">`parameters` 매개 변수 16 개 이상의 요소가 없어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1635">The `parameters` parameter must not have more than sixteen elements.</span></span>  
  
 <span data-ttu-id="5ff2c-1636">요소 `parameters` 참조 매개 변수 식에서와 동일 해야 `body`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1636">The elements of `parameters` must be reference equal to the parameter expressions in `body`.</span></span>  
  
 <span data-ttu-id="5ff2c-1637">이 메서드 중 하나를 사용 하 여 적절 한 대리자 형식을 생성 된 `System.Func` 제네릭 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1637">This method constructs an appropriate delegate type from one of the `System.Func` generic delegates.</span></span> <span data-ttu-id="5ff2c-1638">그런 다음 중 하나에 대리자 형식이 전달 된 <xref:System.Linq.Expressions.ExpressionType.Lambda> 를 만드는 팩터리 메서드가 <xref:System.Linq.Expressions.LambdaExpression>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1638">It then passes the delegate type to one of the <xref:System.Linq.Expressions.ExpressionType.Lambda> factory methods to create a <xref:System.Linq.Expressions.LambdaExpression>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1639">
            <paramref name="body" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1639">
              <paramref name="body" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1640">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1640">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1641">
            <paramref name="parameters" />의 하나 이상의 요소가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1641">One or more elements of <paramref name="parameters" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1642">
            <paramref name="parameters" />에 17개 이상의 요소가 포함된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1642">
              <paramref name="parameters" /> contains more than sixteen elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="5ff2c-1643">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1643">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="5ff2c-1644">만들어진 식을 컴파일할 때 마무리 호출 최적화가 적용될지를 나타내는 <see cref="T:System.Boolean" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1644">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1645">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1645">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1646">먼저 대리자 형식을 생성하여 LambdaExpression을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1646">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1647">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성이 Lambda이고 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1647">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, bool tailCall, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, bool tailCall, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, tailCall As Boolean, ParamArray parameters As ParameterExpression()) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, bool tailCall, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="5ff2c-1648">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1648">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="5ff2c-1649">만들어진 식을 컴파일할 때 마무리 호출 최적화가 적용될지를 나타내는 <see cref="T:System.Boolean" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1649">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1650">
            <see cref="T:System.Linq.Expressions.ParameterExpression" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 개체가 포함된 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1650">An array that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1651">먼저 대리자 형식을 생성하여 LambdaExpression을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1651">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1652">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성이 Lambda이고 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1652">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, string name, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, name As String, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, System::String ^ name, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="5ff2c-1653">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1653">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="5ff2c-1654">람다의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1654">The name for the lambda.</span>
          </span>
          <span data-ttu-id="5ff2c-1655">디버그 정보를 내보내는 데 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1655">Used for emitting debug information.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1656">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1656">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1657">먼저 대리자 형식을 생성하여 LambdaExpression을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1657">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1658">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성이 Lambda이고 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1658">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="5ff2c-1659">람다에 대한 대리자 시그니처를 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1659">A <see cref="T:System.Type" /> that represents a delegate signature for the lambda.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="5ff2c-1660">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1660">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1661">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1661">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1662">우선 대리자 형식을 생성하여 <see cref="T:System.Linq.Expressions.LambdaExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1662">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> by first constructing a delegate type.</span>
          </span>
          <span data-ttu-id="5ff2c-1663">컴파일 시간에 대리자 형식을 알 수 없을 때 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1663">It can be used when the delegate type is not known at compile time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1664">
            <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 속성이 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" />이고 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 속성이 지정된 값으로 설정된 람다 식을 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1664">An object that represents a lambda expression which has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1665">이 함수에서 반환 되는 개체 유형의 <xref:System.Linq.Expressions.Expression%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1665">The object that is returned from this function is of type <xref:System.Linq.Expressions.Expression%601>.</span></span> <span data-ttu-id="5ff2c-1666"><xref:System.Linq.Expressions.LambdaExpression> 형식 람다 식의 구체적인 형식을 컴파일 타임에 알려지지 않은 때문에 반환된 된 개체를 나타내는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1666">The <xref:System.Linq.Expressions.LambdaExpression> type is used to represent the returned object because the concrete type of the lambda expression is not known at compile time.</span></span>  
  
 <span data-ttu-id="5ff2c-1667">가 나타내는 대리자 형식에 대 한 매개 변수 개수`delegateType` 의 길이 동일 해야 `parameters`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1667">The number of parameters for the delegate type represented by`delegateType` must equal the length of `parameters`.</span></span>  
  
 <span data-ttu-id="5ff2c-1668">요소 `parameters` 참조 매개 변수 식에서와 동일 해야 `body`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1668">The elements of `parameters` must be reference equal to the parameter expressions in `body`.</span></span>  
  
 <span data-ttu-id="5ff2c-1669"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 개체의 속성은에 `delegateType`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1669">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting object is equal to `delegateType`.</span></span> <span data-ttu-id="5ff2c-1670">경우 `parameters` 은 `null`, <xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> 결과 개체의 속성은 빈 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1670">If `parameters` is `null`, the <xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> property of the resulting object is an empty collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-1671">다음 예에서는 전달 된 인수에 1을 추가 하는 람다 식을 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1671">The following example demonstrates how to create an expression that represents a lambda expression that adds 1 to the passed argument.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#42)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1672">
            <paramref name="delegateType" /> 또는 <paramref name="body" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1672">
              <paramref name="delegateType" /> or <paramref name="body" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1673">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1673">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1674">
            <paramref name="parameters" />에서 하나 이상의 요소가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1674">One or more elements in <paramref name="parameters" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1675">
            <paramref name="delegateType" />이 대리자 형식을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1675">
              <paramref name="delegateType" /> does not represent a delegate type.</span>
          </span>
          <span data-ttu-id="5ff2c-1676">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1676">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1677">
            <paramref name="body" />.Type이 나타내는 형식을 <paramref name="delegateType" />이 나타내는 대리자 형식의 반환 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1677">
              <paramref name="body" />.Type represents a type that is not assignable to the return type of the delegate type represented by <paramref name="delegateType" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1678">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1678">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1679">
            <paramref name="parameters" />에 들어 있는 요소 수가 <paramref name="delegateType" />이 나타내는 대리자 형식의 매개 변수 목록과 다른 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1679">
              <paramref name="parameters" /> does not contain the same number of elements as the list of parameters for the delegate type represented by <paramref name="delegateType" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1680">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1680">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1681">
            <paramref name="parameters" />에 있는 요소의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성을 <paramref name="delegateType" />이 나타내는 대리자 형식의 해당 매개 변수 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1681">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="parameters" /> is not assignable from the type of the corresponding parameter type of the delegate type represented by <paramref name="delegateType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, ParamArray parameters As ParameterExpression()) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="5ff2c-1682">람다에 대한 대리자 시그니처를 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1682">A <see cref="T:System.Type" /> that represents a delegate signature for the lambda.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="5ff2c-1683">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1683">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1684">
            <see cref="T:System.Linq.Expressions.ParameterExpression" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1684">An array of <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1685">우선 대리자 형식을 생성하여 <see cref="T:System.Linq.Expressions.LambdaExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1685">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> by first constructing a delegate type.</span>
          </span>
          <span data-ttu-id="5ff2c-1686">컴파일 시간에 대리자 형식을 알 수 없을 때 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1686">It can be used when the delegate type is not known at compile time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1687">
            <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 속성이 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" />이고 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 속성이 지정된 값으로 설정된 람다 식을 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1687">An object that represents a lambda expression which has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1688">이 함수에서 반환 되는 개체 유형의 <xref:System.Linq.Expressions.Expression%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1688">The object that is returned from this function is of type <xref:System.Linq.Expressions.Expression%601>.</span></span> <span data-ttu-id="5ff2c-1689"><xref:System.Linq.Expressions.LambdaExpression> 형식 람다 식의 구체적인 형식을 컴파일 타임에 알려지지 않은 때문에 반환된 된 개체를 나타내는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1689">The <xref:System.Linq.Expressions.LambdaExpression> type is used to represent the returned object because the concrete type of the lambda expression is not known at compile time.</span></span>  
  
 <span data-ttu-id="5ff2c-1690">가 나타내는 대리자 형식에 대 한 매개 변수 개수 `delegateType` 의 길이 동일 해야 `parameters`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1690">The number of parameters for the delegate type represented by `delegateType` must equal the length of `parameters`.</span></span>  
  
 <span data-ttu-id="5ff2c-1691">요소 `parameters` 참조 매개 변수 식에서와 동일 해야 `body`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1691">The elements of `parameters` must be reference equal to the parameter expressions in `body`.</span></span>  
  
 <span data-ttu-id="5ff2c-1692"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 개체의 속성은에 `delegateType`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1692">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting object is equal to `delegateType`.</span></span> <span data-ttu-id="5ff2c-1693">경우 `parameters` 은 `null`, <xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> 결과 개체의 속성은 빈 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1693">If `parameters` is `null`, the <xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> property of the resulting object is an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1694">
            <paramref name="delegateType" /> 또는 <paramref name="body" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1694">
              <paramref name="delegateType" /> or <paramref name="body" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1695">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1695">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1696">
            <paramref name="parameters" />에서 하나 이상의 요소가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1696">One or more elements in <paramref name="parameters" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1697">
            <paramref name="delegateType" />이 대리자 형식을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1697">
              <paramref name="delegateType" /> does not represent a delegate type.</span>
          </span>
          <span data-ttu-id="5ff2c-1698">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1698">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1699">
            <paramref name="body" />.Type이 나타내는 형식을 <paramref name="delegateType" />이 나타내는 대리자 형식의 반환 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1699">
              <paramref name="body" />.Type represents a type that is not assignable to the return type of the delegate type represented by <paramref name="delegateType" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1700">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1700">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1701">
            <paramref name="parameters" />에 들어 있는 요소 수가 <paramref name="delegateType" />이 나타내는 대리자 형식의 매개 변수 목록과 다른 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1701">
              <paramref name="parameters" /> does not contain the same number of elements as the list of parameters for the delegate type represented by <paramref name="delegateType" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1702">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1702">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1703">
            <paramref name="parameters" />에 있는 요소의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성을 <paramref name="delegateType" />이 나타내는 대리자 형식의 해당 매개 변수 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1703">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="parameters" /> is not assignable from the type of the corresponding parameter type of the delegate type represented by <paramref name="delegateType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, string name, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, string name, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, name As String, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, System::String ^ name, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="5ff2c-1704">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1704">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="5ff2c-1705">람다의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1705">The name for the lambda.</span>
          </span>
          <span data-ttu-id="5ff2c-1706">디버그 정보를 내보내는 데 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1706">Used for emitting debug information.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="5ff2c-1707">만들어진 식을 컴파일할 때 마무리 호출 최적화가 적용될지를 나타내는 <see cref="T:System.Boolean" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1707">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1708">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1708">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1709">먼저 대리자 형식을 생성하여 LambdaExpression을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1709">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1710">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성이 Lambda이고 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1710">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="5ff2c-1711">람다에 대한 대리자 시그니처를 나타내는 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1711">A <see cref="P:System.Linq.Expressions.Expression.Type" /> representing the delegate signature for the lambda.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="5ff2c-1712">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1712">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="5ff2c-1713">만들어진 식을 컴파일할 때 마무리 호출 최적화가 적용될지를 나타내는 <see cref="T:System.Boolean" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1713">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1714">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1714">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1715">먼저 대리자 형식을 생성하여 LambdaExpression을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1715">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1716">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성이 Lambda이고 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1716">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, bool tailCall, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, bool tailCall, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, tailCall As Boolean, ParamArray parameters As ParameterExpression()) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, bool tailCall, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="5ff2c-1717">람다에 대한 대리자 시그니처를 나타내는 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1717">A <see cref="P:System.Linq.Expressions.Expression.Type" /> representing the delegate signature for the lambda.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="5ff2c-1718">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1718">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="5ff2c-1719">만들어진 식을 컴파일할 때 마무리 호출 최적화가 적용될지를 나타내는 <see cref="T:System.Boolean" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1719">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1720">
            <see cref="T:System.Linq.Expressions.ParameterExpression" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 개체가 포함된 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1720">An array that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1721">먼저 대리자 형식을 생성하여 LambdaExpression을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1721">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1722">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성이 Lambda이고 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1722">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, string name, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, name As String, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, System::String ^ name, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="5ff2c-1723">람다에 대한 대리자 시그니처를 나타내는 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1723">A <see cref="P:System.Linq.Expressions.Expression.Type" /> representing the delegate signature for the lambda.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="5ff2c-1724">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1724">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="5ff2c-1725">람다의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1725">The name for the lambda.</span>
          </span>
          <span data-ttu-id="5ff2c-1726">디버그 정보를 내보내는 데 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1726">Used for emitting debug information.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1727">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1727">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1728">먼저 대리자 형식을 생성하여 LambdaExpression을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1728">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1729">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성이 Lambda이고 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1729">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, string name, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, string name, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, name As String, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, System::String ^ name, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="5ff2c-1730">람다에 대한 대리자 시그니처를 나타내는 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1730">A <see cref="P:System.Linq.Expressions.Expression.Type" /> representing the delegate signature for the lambda.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="5ff2c-1731">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1731">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="5ff2c-1732">람다의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1732">The name for the lambda.</span>
          </span>
          <span data-ttu-id="5ff2c-1733">디버그 정보를 내보내는 데 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1733">Used for emitting debug information.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="5ff2c-1734">만들어진 식을 컴파일할 때 마무리 호출 최적화가 적용될지를 나타내는 <see cref="T:System.Boolean" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1734">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1735">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1735">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1736">먼저 대리자 형식을 생성하여 LambdaExpression을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1736">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1737">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성이 Lambda이고 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1737">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, parameters As IEnumerable(Of ParameterExpression)) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="5ff2c-1738">대리자 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1738">A delegate type.</span>
          </span>
        </typeparam>
        <param name="body">
          <span data-ttu-id="5ff2c-1739">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1739">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1740">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1740">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1741">컴파일 타임에 대리자 형식이 알려진 <see cref="T:System.Linq.Expressions.Expression`1" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1741">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1742">
            <see cref="T:System.Linq.Expressions.Expression`1" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1742">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1743">대리자 형식에 대 한 매개 변수 개수 `TDelegate` 에 있는 요소의 수와 같아야 `parameters`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1743">The number of parameters for the delegate type `TDelegate` must equal the number of elements in `parameters`.</span></span>  
  
 <span data-ttu-id="5ff2c-1744">요소 `parameters` 참조 매개 변수 식에서와 동일 해야 `body`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1744">The elements of `parameters` must be reference equal to the parameter expressions in `body`.</span></span>  
  
 <span data-ttu-id="5ff2c-1745"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 개체의 속성 형식을 나타내는 `TDelegate`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1745">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting object represents the type `TDelegate`.</span></span> <span data-ttu-id="5ff2c-1746">경우 `parameters` 은 `null`, <xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> 결과 개체의 속성은 빈 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1746">If `parameters` is `null`, the <xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> property of the resulting object is an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1747">
            <paramref name="body" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1747">
              <paramref name="body" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1748">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1748">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1749">
            <paramref name="parameters" />에서 하나 이상의 요소가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1749">One or more elements in <paramref name="parameters" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1750">
            <paramref name="TDelegate" />가 대리자 형식이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1750">
              <paramref name="TDelegate" /> is not a delegate type.</span>
          </span>
          <span data-ttu-id="5ff2c-1751">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1751">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1752">
            <paramref name="body" />.Type이 나타내는 형식을 <paramref name="TDelegate" />의 반환 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1752">
              <paramref name="body" />.Type represents a type that is not assignable to the return type of <paramref name="TDelegate" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1753">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1753">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1754">
            <paramref name="parameters" />에 들어 있는 요소 수가 <paramref name="TDelegate" />의 매개 변수 목록과 다른 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1754">
              <paramref name="parameters" /> does not contain the same number of elements as the list of parameters for <paramref name="TDelegate" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1755">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1755">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1756">
            <paramref name="parameters" />의 해당 매개 변수 형식에서 <paramref name="TDelegate" />에 있는 요소의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성을 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1756">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="parameters" /> is not assignable from the type of the corresponding parameter type of <paramref name="TDelegate" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, ParamArray parameters As ParameterExpression()) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="5ff2c-1757">대리자 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1757">A delegate type.</span>
          </span>
        </typeparam>
        <param name="body">
          <span data-ttu-id="5ff2c-1758">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1758">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1759">
            <see cref="T:System.Linq.Expressions.ParameterExpression" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1759">An array of <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1760">컴파일 타임에 대리자 형식이 알려진 <see cref="T:System.Linq.Expressions.Expression`1" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1760">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1761">
            <see cref="T:System.Linq.Expressions.Expression`1" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1761">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1762">대리자 형식에 대 한 매개 변수 개수 `TDelegate` 에 있는 요소의 수와 같아야 `parameters`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1762">The number of parameters for the delegate type `TDelegate` must equal the number of elements in `parameters`.</span></span>  
  
 <span data-ttu-id="5ff2c-1763">요소 `parameters` 참조 매개 변수 식에서와 동일 해야`body`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1763">The elements of `parameters` must be reference equal to the parameter expressions in`body`.</span></span>  
  
 <span data-ttu-id="5ff2c-1764"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 개체의 속성 형식을 나타내는 `TDelegate`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1764">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting object represents the type `TDelegate`.</span></span> <span data-ttu-id="5ff2c-1765">경우 `parameters` 은 `null`, <xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> 결과 개체의 속성은 빈 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1765">If `parameters` is `null`, the <xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> property of the resulting object is an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1766">
            <paramref name="body" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1766">
              <paramref name="body" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1767">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1767">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1768">
            <paramref name="parameters" />에서 하나 이상의 요소가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1768">One or more elements in <paramref name="parameters" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1769">
            <paramref name="TDelegate" />가 대리자 형식이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1769">
              <paramref name="TDelegate" /> is not a delegate type.</span>
          </span>
          <span data-ttu-id="5ff2c-1770">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1770">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1771">
            <paramref name="body" />.Type이 나타내는 형식을 <paramref name="TDelegate" />의 반환 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1771">
              <paramref name="body" />.Type represents a type that is not assignable to the return type of <paramref name="TDelegate" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1772">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1772">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1773">
            <paramref name="parameters" />에 들어 있는 요소 수가 <paramref name="TDelegate" />의 매개 변수 목록과 다른 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1773">
              <paramref name="parameters" /> does not contain the same number of elements as the list of parameters for <paramref name="TDelegate" />.</span>
          </span>
          <span data-ttu-id="5ff2c-1774">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1774">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-1775">
            <paramref name="parameters" />의 해당 매개 변수 형식에서 <paramref name="TDelegate" />에 있는 요소의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성을 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1775">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="parameters" /> is not assignable from the type of the corresponding parameter type of <paramref name="TDelegate" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="5ff2c-1776">대리자 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1776">The delegate type.</span>
          </span>
        </typeparam>
        <param name="body">
          <span data-ttu-id="5ff2c-1777">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1777">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="5ff2c-1778">만들어진 식을 컴파일할 때 마무리 호출 최적화가 적용될지를 나타내는 <see cref="T:System.Boolean" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1778">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1779">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1779">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1780">컴파일 타임에 대리자 형식이 알려진 <see cref="T:System.Linq.Expressions.Expression`1" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1780">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1781">
            <see cref="T:System.Linq.Expressions.Expression`1" /> 속성이 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1781">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, bool tailCall, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, bool tailCall, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, tailCall As Boolean, ParamArray parameters As ParameterExpression()) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, bool tailCall, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="5ff2c-1782">대리자 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1782">The delegate type.</span>
          </span>
        </typeparam>
        <param name="body">
          <span data-ttu-id="5ff2c-1783">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1783">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="5ff2c-1784">만들어진 식을 컴파일할 때 마무리 호출 최적화가 적용될지를 나타내는 <see cref="T:System.Boolean" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1784">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1785">
            <see cref="T:System.Linq.Expressions.ParameterExpression" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 개체가 포함된 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1785">An array that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1786">컴파일 타임에 대리자 형식이 알려진 <see cref="T:System.Linq.Expressions.Expression`1" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1786">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1787">
            <see cref="T:System.Linq.Expressions.Expression`1" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1787">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, string name, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, name As String, parameters As IEnumerable(Of ParameterExpression)) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, System::String ^ name, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="5ff2c-1788">대리자 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1788">The delegate type.</span>
          </span>
        </typeparam>
        <param name="body">
          <span data-ttu-id="5ff2c-1789">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1789">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="5ff2c-1790">람다의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1790">The name of the lambda.</span>
          </span>
          <span data-ttu-id="5ff2c-1791">디버깅 정보를 생성하는 데 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1791">Used for generating debugging information.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1792">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1792">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1793">컴파일 타임에 대리자 형식이 알려진 <see cref="T:System.Linq.Expressions.Expression`1" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1793">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1794">
            <see cref="T:System.Linq.Expressions.Expression`1" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1794">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, string name, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, string name, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, name As String, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, System::String ^ name, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="5ff2c-1795">대리자 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1795">The delegate type.</span>
          </span>
        </typeparam>
        <param name="body">
          <span data-ttu-id="5ff2c-1796">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1796">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="5ff2c-1797">람다의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1797">The name of the lambda.</span>
          </span>
          <span data-ttu-id="5ff2c-1798">디버깅 정보를 생성하는 데 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1798">Used for generating debugging info.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="5ff2c-1799">만들어진 식을 컴파일할 때 마무리 호출 최적화가 적용될지를 나타내는 <see cref="T:System.Boolean" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1799">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5ff2c-1800">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1800">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1801">컴파일 타임에 대리자 형식이 알려진 <see cref="T:System.Linq.Expressions.Expression`1" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1801">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1802">
            <see cref="T:System.Linq.Expressions.Expression`1" /> 속성이 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> 및 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1802">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LeftShift">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1803">비트 왼쪽 시프트 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1803">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LeftShift">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LeftShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LeftShift(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShift (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LeftShift(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1804">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1804">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1805">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1805">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1806">비트 왼쪽 시프트 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1806">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1807">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.LeftShift" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1807">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LeftShift" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1808">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1808">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-1809"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1809">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-1810">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1810">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-1811">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1811">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-1812"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1812">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-1813">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1813">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-1814">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1814">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-1815">다음 규칙 작업에 대해 선택 된 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1815">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-1816">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 왼쪽 시프트 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1816">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the left-shift operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1817">그렇지 않은 경우, `left`합니다. 형식이 정수 계열 형식 (중 하나 <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, 또는 해당 nullable 형식) 및 `right`합니다. 형식이 <xref:System.Int32>, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1817">Otherwise, if `left`.Type is an integral type (one of <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, or the corresponding nullable types) and `right`.Type is <xref:System.Int32>, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-1818">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1818">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-1819">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1819">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1820">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1820">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1821">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1821">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1822">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1822">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-1823">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1823">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-1824">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1824">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-1825">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1825">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1826">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1826">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1827">노드 유형 미리 정의 된 왼쪽 시프트 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1827">The type of the node is the result type of the predefined left-shift operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-1828">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1828">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-1829">노드의 유형을 미리 정의 된 왼쪽 시프트 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1829">The type of the node is the nullable type that corresponds to the result type of the predefined left-shift operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1830">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1830">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-1831">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 왼쪽 시프트 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1831">The left-shift operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LeftShift">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LeftShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LeftShift(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShift (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LeftShift(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1832">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1832">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1833">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1833">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1834">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1834">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1835">비트 왼쪽 시프트 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1835">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1836">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.LeftShift" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1836">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LeftShift" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1837">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1837">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-1838"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1838">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-1839">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1839">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-1840">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1840">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-1841"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1841">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-1842">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1842">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-1843">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1843">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-1844">다음 규칙 작업에 대해 선택 된 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1844">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-1845">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를 사용 하는 노드에 대 한 구현 메서드를은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1845">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="5ff2c-1846">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 왼쪽 시프트 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1846">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the left-shift operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1847">그렇지 않은 경우, `left`합니다. 형식이 정수 계열 형식 (중 하나 <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, 또는 해당 nullable 형식) 및 `right`합니다. 형식이 <xref:System.Int32>, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1847">Otherwise, if `left`.Type is an integral type (one of <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, or the corresponding nullable types) and `right`.Type is <xref:System.Int32>, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-1848">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1848">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-1849">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1849">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1850">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1850">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1851">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1851">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1852">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1852">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-1853">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1853">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-1854">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1854">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-1855">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1855">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1856">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1856">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1857">노드 유형 미리 정의 된 왼쪽 시프트 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1857">The type of the node is the result type of the predefined left-shift operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-1858">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1858">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-1859">노드의 유형을 미리 정의 된 왼쪽 시프트 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1859">The type of the node is the nullable type that corresponds to the result type of the predefined left-shift operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1860">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1860">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1861">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1861">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-1862">
            <paramref name="method" />가 <see langword="null" />이고 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 왼쪽 시프트 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1862">
              <paramref name="method" /> is <see langword="null" /> and the left-shift operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LeftShiftAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1863">비트 왼쪽 시프트 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1863">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift assignment operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LeftShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LeftShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LeftShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LeftShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1864">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1864">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1865">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1865">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1866">비트 왼쪽 시프트 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1866">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1867">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1867">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LeftShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LeftShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LeftShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1868">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1868">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1869">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1869">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1870">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1870">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1871">비트 왼쪽 시프트 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1871">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1872">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1872">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LeftShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LeftShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LeftShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1873">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1873">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1874">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1874">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1875">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1875">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="5ff2c-1876">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1876">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1877">비트 왼쪽 시프트 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1877">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1878">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1878">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LessThan">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1879">"보다 작음" 숫자 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1879">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "less than" numeric comparison.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LessThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LessThan(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThan (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LessThan(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1880">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1880">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1881">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1881">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1882">"보다 작음" 숫자 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1882">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "less than" numeric comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1883">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.LessThan" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1883">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LessThan" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1884">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1884">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-1885"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1885">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-1886">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 속성은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1886">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="5ff2c-1887">그렇지 않으면 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1887">Otherwise, it is `false`.</span></span> <span data-ttu-id="5ff2c-1888"><xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 항상 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1888">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="5ff2c-1889"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1889">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-1890">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1890">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-1891">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1891">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-1892">작업에 대 한 구현 메서드는 다음 규칙에 따라 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1892">The implementing method for the operation is chosen based on the following rules:</span></span>  
  
-   <span data-ttu-id="5ff2c-1893">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` "보다 작음" 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1893">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "less than" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1894">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1894">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-1895">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1895">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-1896">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1896">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1897">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1897">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1898">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1898">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1899">다음 두 조건을 충족 하는 노드가 리프트 된 및 노드 형식이 <xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1899">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="5ff2c-1900">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1900">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-1901">구현 메서드의 반환 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1901">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="5ff2c-1902">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1902">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1903">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1903">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1904">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1904">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="5ff2c-1905">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1905">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-1906">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1906">The type of the node is <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-1907">다음 코드 예제에서는 두 정수를 비교 하는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1907">The following code example shows how to create an expression that compares two integers.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#25)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1908">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1908">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-1909">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 "보다 작음" 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1909">The "less than" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LessThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LessThan(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThan (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LessThan(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1910">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1910">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1911">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1911">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="liftToNull">
          <span data-ttu-id="5ff2c-1912">
            <see langword="true" />를 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />로 설정하려면 <see langword="true" />이고, <see langword="false" />를 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />로 설정하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1912">
              <see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1913">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1913">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1914">"보다 작음" 숫자 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1914">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "less than" numeric comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1915">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.LessThan" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1915">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LessThan" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1916">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1916">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-1917"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1917">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-1918">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 속성은 `true` 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성이 `liftToNull`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1918">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="5ff2c-1919">그렇지 않은 경우는 모두 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1919">Otherwise, they are both `false`.</span></span> <span data-ttu-id="5ff2c-1920"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1920">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-1921">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1921">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-1922">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1922">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-1923">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1923">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-1924">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를은 구현 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1924">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1925">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` "보다 작음" 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1925">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "less than" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1926">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1926">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-1927">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1927">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-1928">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1928">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1929">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1929">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1930">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1930">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1931">다음 두 가지 조건을 충족 하는 경우 노드 적용 되지 않습니다. 또한 노드의 형식이 nullable <xref:System.Boolean> 경우 `liftToNull` 은 `true` 또는 <xref:System.Boolean> 경우 `liftToNull` 은 `false`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1931">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="5ff2c-1932">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1932">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-1933">구현 메서드의 반환 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1933">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="5ff2c-1934">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1934">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1935">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1935">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1936">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1936">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="5ff2c-1937">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1937">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-1938">노드 형식이 nullable <xref:System.Boolean> 경우 `liftToNull` 은 `true` 또는 <xref:System.Boolean> 경우 `liftToNull` 은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1938">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1939">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1939">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-1940">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1940">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-1941">
            <paramref name="method" />가 <see langword="null" />이고 "보다 작음" 연산자가 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 대해 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1941">
              <paramref name="method" /> is <see langword="null" /> and the "less than" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LessThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-1942">"보다 작거나 같음" 숫자 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1942">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a " less than or equal" numeric comparison.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LessThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LessThanOrEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThanOrEqual (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LessThanOrEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1943">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1943">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1944">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1944">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1945">"보다 작거나 같음" 숫자 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1945">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a " less than or equal" numeric comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1946">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1946">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1947">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1947">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-1948"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1948">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-1949">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 속성은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1949">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="5ff2c-1950">그렇지 않으면 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1950">Otherwise, it is `false`.</span></span> <span data-ttu-id="5ff2c-1951"><xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 항상 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1951">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="5ff2c-1952"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1952">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-1953">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1953">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-1954">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1954">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-1955">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1955">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-1956">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` "보다 작거나 같음" 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1956">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "less than or equal" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1957">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1957">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-1958">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1958">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-1959">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1959">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1960">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1960">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1961">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1961">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1962">다음 두 조건을 충족 하는 노드가 리프트 된 및 노드 형식이 <xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1962">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="5ff2c-1963">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1963">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-1964">구현 메서드의 반환 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1964">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="5ff2c-1965">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1965">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1966">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1966">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1967">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1967">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="5ff2c-1968">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1968">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-1969">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1969">The type of the node is <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-1970">다음 코드 예제에서는 두 정수를 비교 하는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1970">The following code example shows how to create an expression that compares two integers.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#26)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-1971">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1971">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-1972">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 "보다 작거나 같음" 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1972">The "less than or equal" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LessThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LessThanOrEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThanOrEqual (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LessThanOrEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-1973">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1973">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-1974">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1974">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="liftToNull">
          <span data-ttu-id="5ff2c-1975">
            <see langword="true" />를 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />로 설정하려면 <see langword="true" />이고, <see langword="false" />를 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />로 설정하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1975">
              <see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-1976">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1976">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-1977">"보다 작거나 같음" 숫자 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1977">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "less than or equal" numeric comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-1978">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-1978">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-1979">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1979">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-1980"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1980">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-1981">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 속성은 `true` 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성이 `liftToNull`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1981">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="5ff2c-1982">그렇지 않은 경우는 모두 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1982">Otherwise, they are both `false`.</span></span> <span data-ttu-id="5ff2c-1983"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1983">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-1984">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1984">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-1985">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1985">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-1986">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1986">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-1987">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를은 구현 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1987">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1988">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` "보다 작거나 같음" 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1988">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "less than or equal" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1989">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1989">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-1990">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1990">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-1991">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1991">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1992">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1992">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1993">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1993">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-1994">다음 두 가지 조건을 충족 하는 경우 노드 적용 되지 않습니다. 또한 노드의 형식이 nullable <xref:System.Boolean> 경우 `liftToNull` 은 `true` 또는 <xref:System.Boolean> 경우 `liftToNull` 은 `false`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1994">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="5ff2c-1995">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1995">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-1996">구현 메서드의 반환 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1996">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="5ff2c-1997">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1997">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-1998">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1998">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-1999">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-1999">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="5ff2c-2000">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2000">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-2001">노드 형식이 nullable <xref:System.Boolean> 경우 `liftToNull` 은 `true` 또는 <xref:System.Boolean> 경우 `liftToNull` 은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2001">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2002">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2002">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2003">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2003">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2004">
            <paramref name="method" />가 <see langword="null" />이고 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 "보다 작거나 같음" 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2004">
              <paramref name="method" /> is <see langword="null" /> and the "less than or equal" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ListBind">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2005">
            <see cref="T:System.Linq.Expressions.MemberListBinding" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2005">Creates a <see cref="T:System.Linq.Expressions.MemberListBinding" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ListBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberListBinding ListBind(class System.Reflection.MemberInfo member, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ElementInit&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ListBind (member As MemberInfo, initializers As IEnumerable(Of ElementInit)) As MemberListBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberListBinding ^ ListBind(System::Reflection::MemberInfo ^ member, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberListBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="5ff2c-2006">
            <see cref="T:System.Reflection.MemberInfo" /> 속성에 설정할 필드 또는 속성을 나타내는 <see cref="P:System.Linq.Expressions.MemberBinding.Member" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2006">A <see cref="T:System.Reflection.MemberInfo" /> that represents a field or property to set the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property equal to.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="5ff2c-2007">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.ElementInit" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2007">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2008">멤버가 필드 또는 속성인 <see cref="T:System.Linq.Expressions.MemberListBinding" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2008">Creates a <see cref="T:System.Linq.Expressions.MemberListBinding" /> where the member is a field or property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2009">
            <see cref="T:System.Linq.Expressions.MemberListBinding" /> 속성이 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />이고 <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" /> 및 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2009">A <see cref="T:System.Linq.Expressions.MemberListBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" /> and the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> and <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2010">
            <paramref name="member" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2010">
              <paramref name="member" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2011">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2011">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2012">
            <paramref name="initializers" />의 하나 이상의 요소가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2012">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2013">
            <paramref name="member" />가 필드나 속성을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2013">
              <paramref name="member" /> does not represent a field or property.</span>
          </span>
          <span data-ttu-id="5ff2c-2014">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2014">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2015">
            <paramref name="member" />가 나타내는 필드 또는 속성의 <see cref="P:System.Reflection.FieldInfo.FieldType" /> 또는 <see cref="P:System.Reflection.PropertyInfo.PropertyType" />이 <see cref="T:System.Collections.IEnumerable" />을 구현하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2015">The <see cref="P:System.Reflection.FieldInfo.FieldType" /> or <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> of the field or property that <paramref name="member" /> represents does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ListBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MemberInfo member, params System.Linq.Expressions.ElementInit[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberListBinding ListBind(class System.Reflection.MemberInfo member, class System.Linq.Expressions.ElementInit[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ListBind (member As MemberInfo, ParamArray initializers As ElementInit()) As MemberListBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberListBinding ^ ListBind(System::Reflection::MemberInfo ^ member, ... cli::array &lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberListBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.ElementInit[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="5ff2c-2016">
            <see cref="T:System.Reflection.MemberInfo" /> 속성에 설정할 필드 또는 속성을 나타내는 <see cref="P:System.Linq.Expressions.MemberBinding.Member" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2016">A <see cref="T:System.Reflection.MemberInfo" /> that represents a field or property to set the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property equal to.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="5ff2c-2017">
            <see cref="T:System.Linq.Expressions.ElementInit" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2017">An array of <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2018">멤버가 필드 또는 속성인 <see cref="T:System.Linq.Expressions.MemberListBinding" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2018">Creates a <see cref="T:System.Linq.Expressions.MemberListBinding" /> where the member is a field or property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2019">
            <see cref="T:System.Linq.Expressions.MemberListBinding" /> 속성이 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />이고 <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" /> 및 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2019">A <see cref="T:System.Linq.Expressions.MemberListBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" /> and the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> and <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2020">
            <paramref name="member" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2020">
              <paramref name="member" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2021">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2021">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2022">
            <paramref name="initializers" />의 하나 이상의 요소가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2022">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2023">
            <paramref name="member" />가 필드나 속성을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2023">
              <paramref name="member" /> does not represent a field or property.</span>
          </span>
          <span data-ttu-id="5ff2c-2024">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2024">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2025">
            <paramref name="member" />가 나타내는 필드 또는 속성의 <see cref="P:System.Reflection.FieldInfo.FieldType" /> 또는 <see cref="P:System.Reflection.PropertyInfo.PropertyType" />이 <see cref="T:System.Collections.IEnumerable" />을 구현하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2025">The <see cref="P:System.Reflection.FieldInfo.FieldType" /> or <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> of the field or property that <paramref name="member" /> represents does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ListBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MethodInfo propertyAccessor, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberListBinding ListBind(class System.Reflection.MethodInfo propertyAccessor, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ElementInit&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ListBind (propertyAccessor As MethodInfo, initializers As IEnumerable(Of ElementInit)) As MemberListBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberListBinding ^ ListBind(System::Reflection::MethodInfo ^ propertyAccessor, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberListBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyAccessor">
          <span data-ttu-id="5ff2c-2026">속성 접근자 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2026">A <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="5ff2c-2027">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.ElementInit" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2027">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2028">지정된 속성 접근자 메서드에 따라 <see cref="T:System.Linq.Expressions.MemberListBinding" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2028">Creates a <see cref="T:System.Linq.Expressions.MemberListBinding" /> based on a specified property accessor method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2029">
            <see cref="T:System.Linq.Expressions.MemberListBinding" /> 속성이 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />이고 <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" /> 속성이 <see cref="P:System.Linq.Expressions.MemberBinding.Member" />로 액세스되는 속성을 나타내는 <see cref="T:System.Reflection.MemberInfo" />로 설정되고 <paramref name="propertyAccessor" />가 <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" />의 요소로 채워진 <paramref name="initializers" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2029">A <see cref="T:System.Linq.Expressions.MemberListBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" />, the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property set to the <see cref="T:System.Reflection.MemberInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />, and <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> populated with the elements of <paramref name="initializers" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2030">
            <paramref name="propertyAccessor" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2030">
              <paramref name="propertyAccessor" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2031">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2031">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2032">
            <paramref name="initializers" />의 하나 이상의 요소가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2032">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2033">
            <paramref name="propertyAccessor" />가 속성 접근자 메서드를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2033">
              <paramref name="propertyAccessor" /> does not represent a property accessor method.</span>
          </span>
          <span data-ttu-id="5ff2c-2034">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2034">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2035">
            <paramref name="propertyAccessor" />가 나타내는 메서드가 액세스하는 속성의 <see cref="P:System.Reflection.PropertyInfo.PropertyType" />에서 <see cref="T:System.Collections.IEnumerable" />을 구현하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2035">The <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> of the property that the method represented by <paramref name="propertyAccessor" /> accesses does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ListBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MethodInfo propertyAccessor, params System.Linq.Expressions.ElementInit[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberListBinding ListBind(class System.Reflection.MethodInfo propertyAccessor, class System.Linq.Expressions.ElementInit[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ListBind (propertyAccessor As MethodInfo, ParamArray initializers As ElementInit()) As MemberListBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberListBinding ^ ListBind(System::Reflection::MethodInfo ^ propertyAccessor, ... cli::array &lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberListBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.ElementInit[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyAccessor">
          <span data-ttu-id="5ff2c-2036">속성 접근자 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2036">A <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="5ff2c-2037">
            <see cref="T:System.Linq.Expressions.ElementInit" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2037">An array of <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2038">지정된 속성 접근자 메서드에 따라 <see cref="T:System.Linq.Expressions.MemberListBinding" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2038">Creates a <see cref="T:System.Linq.Expressions.MemberListBinding" /> object based on a specified property accessor method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2039">
            <see cref="T:System.Linq.Expressions.MemberListBinding" /> 속성이 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />이고 <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" /> 속성이 <see cref="P:System.Linq.Expressions.MemberBinding.Member" />로 액세스되는 속성을 나타내는 <see cref="T:System.Reflection.MemberInfo" />로 설정되고 <paramref name="propertyAccessor" />가 <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" />의 요소로 채워진 <paramref name="initializers" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2039">A <see cref="T:System.Linq.Expressions.MemberListBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" />, the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property set to the <see cref="T:System.Reflection.MemberInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />, and <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> populated with the elements of <paramref name="initializers" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2040">
            <paramref name="propertyAccessor" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2040">
              <paramref name="propertyAccessor" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2041">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2041">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2042">
            <paramref name="initializers" />의 하나 이상의 요소가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2042">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2043">
            <paramref name="propertyAccessor" />가 속성 접근자 메서드를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2043">
              <paramref name="propertyAccessor" /> does not represent a property accessor method.</span>
          </span>
          <span data-ttu-id="5ff2c-2044">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2044">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2045">
            <paramref name="propertyAccessor" />가 나타내는 메서드가 액세스하는 속성의 <see cref="P:System.Reflection.PropertyInfo.PropertyType" />에서 <see cref="T:System.Collections.IEnumerable" />을 구현하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2045">The <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> of the property that the method represented by <paramref name="propertyAccessor" /> accesses does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ListInit">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2046">
            <see cref="T:System.Linq.Expressions.ListInitExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2046">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ElementInit&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;" />
      </Parameters>
      <Docs>
        <param name="newExpression">
          <span data-ttu-id="5ff2c-2047">
            <see cref="T:System.Linq.Expressions.NewExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2047">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="5ff2c-2048">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.ElementInit" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2048">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2049">지정된 <see cref="T:System.Linq.Expressions.ListInitExpression" /> 개체를 사용하여 컬렉션을 초기화하는 <see cref="T:System.Linq.Expressions.ElementInit" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2049">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses specified <see cref="T:System.Linq.Expressions.ElementInit" /> objects to initialize a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2050">
            <see cref="T:System.Linq.Expressions.ListInitExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> 및 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2050">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> and <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2051"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 `newExpression` 구현 하는 형식을 나타내야 <xref:System.Collections.IEnumerable>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2051">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="5ff2c-2052"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.ListInitExpression> 같으면 `newExpression`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2052">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-2053">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.ElementInit%5B%5D%29> 만드는 메서드를 한 <xref:System.Linq.Expressions.ListInitExpression> 두 가지 키-값 쌍이 있는 새 사전 인스턴스 초기화를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2053">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.ElementInit%5B%5D%29> method to create a <xref:System.Linq.Expressions.ListInitExpression> that represents the initialization of a new dictionary instance with two key-value pairs.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#7)]
 [!code-vb[System.Linq.Expressions.Expression#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2054">
            <paramref name="newExpression" /> 또는 <paramref name="initializers" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2054">
              <paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2055">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2055">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2056">
            <paramref name="initializers" />의 하나 이상의 요소가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2056">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2057">
            <paramref name="newExpression" />.Type이 <see cref="T:System.Collections.IEnumerable" />을 구현하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2057">
              <paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="newExpression">
          <span data-ttu-id="5ff2c-2058">
            <see cref="T:System.Linq.Expressions.NewExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2058">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="5ff2c-2059">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.Expression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2059">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2060">이름이 "Add"인 메서드를 사용하여 컬렉션에 요소를 추가하는 <see cref="T:System.Linq.Expressions.ListInitExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2060">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses a method named "Add" to add elements to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2061">
            <see cref="T:System.Linq.Expressions.ListInitExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2061">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2062"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 `newExpression` 구현 하는 형식을 나타내야 <xref:System.Collections.IEnumerable>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2062">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="5ff2c-2063">이 오버 로드를 사용 하기 위해 <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Collections.Generic.IEnumerable%7BSystem.Linq.Expressions.Expression%7D%29>, `newExpression`합니다. 형식 또는 해당 기본 형식과 정확히 하나의 인수를 사용 하는 "Add" (대/소문자 구분) 라는 단일 메서드가 선언 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2063">In order to use this overload of <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Collections.Generic.IEnumerable%7BSystem.Linq.Expressions.Expression%7D%29>, `newExpression`.Type or its base type must declare a single method named "Add" (case insensitive) that takes exactly one argument.</span></span> <span data-ttu-id="5ff2c-2064">인수의 형식을 나타내는 형식에서 할당할 수 있어야는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성의 첫 번째 요소의 `initializers`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2064">The type of the argument must be assignable from the type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of the first element of `initializers`.</span></span>  
  
 <span data-ttu-id="5ff2c-2065"><xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> 반환 된 속성 <xref:System.Linq.Expressions.ListInitExpression> 형식의 요소가 하나씩 포함 <xref:System.Linq.Expressions.ElementInit> 의 각 요소에 대 한 `initializers`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2065">The <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> property of the returned <xref:System.Linq.Expressions.ListInitExpression> contains one element of type <xref:System.Linq.Expressions.ElementInit> for each element of `initializers`.</span></span> <span data-ttu-id="5ff2c-2066"><xref:System.Linq.Expressions.ElementInit.Arguments%2A> 속성의 각 요소로 <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> 의 해당 요소를 포함 하는 단일 항목 컬렉션은 `initializers`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2066">The <xref:System.Linq.Expressions.ElementInit.Arguments%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is a singleton collection that contains the corresponding element of `initializers`.</span></span> <span data-ttu-id="5ff2c-2067"><xref:System.Linq.Expressions.ElementInit.AddMethod%2A> 속성의 각 요소로 <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> 에서 발견 된 add 메서드를 나타내는 `newExpression`합니다. 유형 또는 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2067">The <xref:System.Linq.Expressions.ElementInit.AddMethod%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> represents the add method that was discovered on `newExpression`.Type or its base type.</span></span>  
  
 <span data-ttu-id="5ff2c-2068"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.ListInitExpression> 같으면 `newExpression`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2068">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2069">
            <paramref name="newExpression" /> 또는 <paramref name="initializers" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2069">
              <paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2070">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2070">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2071">
            <paramref name="initializers" />의 하나 이상의 요소가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2071">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2072">
            <paramref name="newExpression" />.Type이 <see cref="T:System.Collections.IEnumerable" />을 구현하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2072">
              <paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2073">
            <paramref name="newExpression" />.Type 또는 해당 기본 형식에 선언된 "Add"(대/소문자 구분 안 함)라는 인스턴스 메서드가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2073">There is no instance method named "Add" (case insensitive) declared in <paramref name="newExpression" />.Type or its base type.</span>
          </span>
          <span data-ttu-id="5ff2c-2074">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2074">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2075">
            <paramref name="newExpression" />.Type 또는 해당 기본 형식의 add 메서드가 정확히 하나의 인수만 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2075">The add method on <paramref name="newExpression" />.Type or its base type does not take exactly one argument.</span>
          </span>
          <span data-ttu-id="5ff2c-2076">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2076">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2077">
            <paramref name="initializers" />의 첫 번째 요소에 대한 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성으로 표시되는 형식을 <paramref name="newExpression" />.Type 또는 해당 기본 형식의 add 메서드에 대한 인수 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2077">The type represented by the <see cref="P:System.Linq.Expressions.Expression.Type" /> property of the first element of <paramref name="initializers" /> is not assignable to the argument type of the add method on <paramref name="newExpression" />.Type or its base type.</span>
          </span>
          <span data-ttu-id="5ff2c-2078">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2078">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2079">"Add"(대/소문자 구분 안 함)라는 둘 이상의 인수 호환 메서드가 <paramref name="newExpression" />.Type 및/또는 해당 기본 형식에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2079">More than one argument-compatible method named "Add" (case-insensitive) exists on <paramref name="newExpression" />.Type and/or its base type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, params System.Linq.Expressions.ElementInit[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Linq.Expressions.ElementInit[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, ... cli::array &lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.ElementInit[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="newExpression">
          <span data-ttu-id="5ff2c-2080">
            <see cref="T:System.Linq.Expressions.NewExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2080">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="5ff2c-2081">
            <see cref="T:System.Linq.Expressions.ElementInit" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2081">An array of <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2082">지정된 <see cref="T:System.Linq.Expressions.ListInitExpression" /> 개체를 사용하여 컬렉션을 초기화하는 <see cref="T:System.Linq.Expressions.ElementInit" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2082">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses specified <see cref="T:System.Linq.Expressions.ElementInit" /> objects to initialize a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2083">
            <see cref="T:System.Linq.Expressions.ListInitExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> 및 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2083">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> and <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2084"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 `newExpression` 구현 하는 형식을 나타내야 <xref:System.Collections.IEnumerable>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2084">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="5ff2c-2085"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.ListInitExpression> 같으면 `newExpression`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2085">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-2086">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.ElementInit%5B%5D%29> 만드는 메서드를 한 <xref:System.Linq.Expressions.ListInitExpression> 두 가지 키-값 쌍이 있는 새 사전 인스턴스 초기화를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2086">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.ElementInit%5B%5D%29> method to create a <xref:System.Linq.Expressions.ListInitExpression> that represents the initialization of a new dictionary instance with two key-value pairs.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#7)]
 [!code-vb[System.Linq.Expressions.Expression#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2087">
            <paramref name="newExpression" /> 또는 <paramref name="initializers" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2087">
              <paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2088">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2088">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2089">
            <paramref name="initializers" />의 하나 이상의 요소가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2089">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2090">
            <paramref name="newExpression" />.Type이 <see cref="T:System.Collections.IEnumerable" />을 구현하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2090">
              <paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, params System.Linq.Expressions.Expression[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Linq.Expressions.Expression[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="newExpression">
          <span data-ttu-id="5ff2c-2091">
            <see cref="T:System.Linq.Expressions.NewExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2091">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="5ff2c-2092">
            <see cref="T:System.Linq.Expressions.Expression" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2092">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2093">이름이 "Add"인 메서드를 사용하여 컬렉션에 요소를 추가하는 <see cref="T:System.Linq.Expressions.ListInitExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2093">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses a method named "Add" to add elements to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2094">
            <see cref="T:System.Linq.Expressions.ListInitExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2094">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2095"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 `newExpression` 구현 하는 형식을 나타내야 <xref:System.Collections.IEnumerable>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2095">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="5ff2c-2096">이 오버 로드를 사용 하기 위해 <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.Expression%5B%5D%29>, `newExpression`합니다. 형식 또는 해당 기본 형식과 정확히 하나의 인수를 사용 하는 "Add" (대/소문자 구분) 라는 단일 메서드가 선언 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2096">In order to use this overload of <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.Expression%5B%5D%29>, `newExpression`.Type or its base type must declare a single method named "Add" (case insensitive) that takes exactly one argument.</span></span> <span data-ttu-id="5ff2c-2097">인수의 형식을 나타내는 형식에서 할당할 수 있어야는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성의 첫 번째 요소의 `initializers`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2097">The type of the argument must be assignable from the type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of the first element of `initializers`.</span></span>  
  
 <span data-ttu-id="5ff2c-2098"><xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> 반환 된 속성 <xref:System.Linq.Expressions.ListInitExpression> 형식의 요소가 하나씩 포함 <xref:System.Linq.Expressions.ElementInit> 의 각 요소에 대 한 `initializers`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2098">The <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> property of the returned <xref:System.Linq.Expressions.ListInitExpression> contains one element of type <xref:System.Linq.Expressions.ElementInit> for each element of `initializers`.</span></span> <span data-ttu-id="5ff2c-2099"><xref:System.Linq.Expressions.ElementInit.Arguments%2A> 속성의 각 요소로 <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> 의 해당 요소를 포함 하는 단일 항목 컬렉션은 `initializers`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2099">The <xref:System.Linq.Expressions.ElementInit.Arguments%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is a singleton collection that contains the corresponding element of `initializers`.</span></span> <span data-ttu-id="5ff2c-2100"><xref:System.Linq.Expressions.ElementInit.AddMethod%2A> 속성의 각 요소로 <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> 에서 발견 된 add 메서드를 나타내는 `newExpression`합니다. 유형 또는 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2100">The <xref:System.Linq.Expressions.ElementInit.AddMethod%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> represents the add method that was discovered on `newExpression`.Type or its base type.</span></span>  
  
 <span data-ttu-id="5ff2c-2101"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.ListInitExpression> 같으면 `newExpression`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2101">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2102">
            <paramref name="newExpression" /> 또는 <paramref name="initializers" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2102">
              <paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2103">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2103">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2104">
            <paramref name="initializers" />의 하나 이상의 요소가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2104">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2105">
            <paramref name="newExpression" />.Type이 <see cref="T:System.Collections.IEnumerable" />을 구현하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2105">
              <paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2106">
            <paramref name="newExpression" />.Type 또는 해당 기본 형식에 선언된 "Add"(대/소문자 구분 안 함)라는 인스턴스 메서드가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2106">There is no instance method named "Add" (case insensitive) declared in <paramref name="newExpression" />.Type or its base type.</span>
          </span>
          <span data-ttu-id="5ff2c-2107">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2107">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2108">
            <paramref name="newExpression" />.Type 또는 해당 기본 형식의 add 메서드가 정확히 하나의 인수만 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2108">The add method on <paramref name="newExpression" />.Type or its base type does not take exactly one argument.</span>
          </span>
          <span data-ttu-id="5ff2c-2109">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2109">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2110">
            <paramref name="initializers" />의 첫 번째 요소에 대한 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성으로 표시되는 형식을 <paramref name="newExpression" />.Type 또는 해당 기본 형식의 add 메서드에 대한 인수 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2110">The type represented by the <see cref="P:System.Linq.Expressions.Expression.Type" /> property of the first element of <paramref name="initializers" /> is not assignable to the argument type of the add method on <paramref name="newExpression" />.Type or its base type.</span>
          </span>
          <span data-ttu-id="5ff2c-2111">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2111">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2112">"Add"(대/소문자 구분 안 함)라는 둘 이상의 인수 호환 메서드가 <paramref name="newExpression" />.Type 및/또는 해당 기본 형식에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2112">More than one argument-compatible method named "Add" (case-insensitive) exists on <paramref name="newExpression" />.Type and/or its base type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Reflection.MethodInfo addMethod, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Reflection.MethodInfo addMethod, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, System::Reflection::MethodInfo ^ addMethod, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="addMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="newExpression">
          <span data-ttu-id="5ff2c-2113">
            <see cref="T:System.Linq.Expressions.NewExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2113">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span>
          </span>
        </param>
        <param name="addMethod">
          <span data-ttu-id="5ff2c-2114">컬렉션에 요소를 추가하는 "Add"(대/소문자 구분 안 함)라는 인스턴스 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2114">A <see cref="T:System.Reflection.MethodInfo" /> that represents an instance method named "Add" (case insensitive), that adds an element to a collection.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="5ff2c-2115">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.Expression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2115">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2116">지정된 메서드를 사용하여 컬렉션에 요소를 추가하는 <see cref="T:System.Linq.Expressions.ListInitExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2116">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses a specified method to add elements to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2117">
            <see cref="T:System.Linq.Expressions.ListInitExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2117">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2118"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 `newExpression` 구현 하는 형식을 나타내야 <xref:System.Collections.IEnumerable>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2118">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="5ff2c-2119">경우 `addMethod` 은 `null`, `newExpression`합니다. 형식 또는 해당 기본 형식과 정확히 하나의 인수를 사용 하는 "Add" (대/소문자 구분) 라는 단일 메서드가 선언 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2119">If `addMethod` is `null`, `newExpression`.Type or its base type must declare a single method named "Add" (case insensitive) that takes exactly one argument.</span></span> <span data-ttu-id="5ff2c-2120">경우 `addMethod` 않습니다 `null`, 정확히 한 개의 매개 변수가 있는 "Add" (대/소문자 구분) 라는 인스턴스 메서드를 나타내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2120">If `addMethod` is not `null`, it must represent an instance method named "Add" (case insensitive) that has exactly one parameter.</span></span> <span data-ttu-id="5ff2c-2121">가 나타내는 형식이 <xref:System.Linq.Expressions.Expression.Type%2A> 속성의 각 요소로 `initializers` add 메서드의 인수 형식에 할당할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2121">The type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `initializers` must be assignable to the argument type of the add method.</span></span>  
  
 <span data-ttu-id="5ff2c-2122"><xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> 반환 된 속성 <xref:System.Linq.Expressions.ListInitExpression> 형식의 요소가 하나씩 포함 <xref:System.Linq.Expressions.ElementInit> 의 각 요소에 대 한 `initializers`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2122">The <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> property of the returned <xref:System.Linq.Expressions.ListInitExpression> contains one element of type <xref:System.Linq.Expressions.ElementInit> for each element of `initializers`.</span></span> <span data-ttu-id="5ff2c-2123"><xref:System.Linq.Expressions.ElementInit.Arguments%2A> 속성의 각 요소로 <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> 의 해당 요소를 포함 하는 단일 항목 컬렉션은 `initializers`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2123">The <xref:System.Linq.Expressions.ElementInit.Arguments%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is a singleton collection that contains the corresponding element of `initializers`.</span></span> <span data-ttu-id="5ff2c-2124"><xref:System.Linq.Expressions.ElementInit.AddMethod%2A> 속성의 각 요소로 <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> 같으면 `addMethod`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2124">The <xref:System.Linq.Expressions.ElementInit.AddMethod%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is equal to `addMethod`.</span></span>  
  
 <span data-ttu-id="5ff2c-2125"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.ListInitExpression> 같으면 `newExpression`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2125">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2126">
            <paramref name="newExpression" /> 또는 <paramref name="initializers" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2126">
              <paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2127">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2127">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2128">
            <paramref name="initializers" />의 하나 이상의 요소가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2128">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2129">
            <paramref name="newExpression" />.Type이 <see cref="T:System.Collections.IEnumerable" />을 구현하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2129">
              <paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2130">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2130">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2131">
            <paramref name="addMethod" />가 <see langword="null" />이 아니고 정확히 하나의 인수를 받는 "Add"(대/소문자 구분 안 함)라는 인스턴스 메서드를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2131">
              <paramref name="addMethod" /> is not <see langword="null" /> and it does not represent an instance method named "Add" (case insensitive) that takes exactly one argument.</span>
          </span>
          <span data-ttu-id="5ff2c-2132">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2132">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2133">
            <paramref name="addMethod" />가 <see langword="null" />이 아니고 <paramref name="initializers" />에 있는 요소 중 하나 이상의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성이 나타내는 형식을 <paramref name="addMethod" />가 나타내는 메서드의 인수 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2133">
              <paramref name="addMethod" /> is not <see langword="null" /> and the type represented by the <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="initializers" /> is not assignable to the argument type of the method that <paramref name="addMethod" /> represents.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2134">
            <paramref name="addMethod" />가 <see langword="null" />이고 <paramref name="newExpression" />.Type 또는 해당 기본 형식에 하나의 형식 호환 인수를 받는 "Add"라는 인스턴스 메서드가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2134">
              <paramref name="addMethod" /> is <see langword="null" /> and no instance method named "Add" that takes one type-compatible argument exists on <paramref name="newExpression" />.Type or its base type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Reflection.MethodInfo addMethod, params System.Linq.Expressions.Expression[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Reflection.MethodInfo addMethod, class System.Linq.Expressions.Expression[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, System::Reflection::MethodInfo ^ addMethod, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="addMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="newExpression">
          <span data-ttu-id="5ff2c-2135">
            <see cref="T:System.Linq.Expressions.NewExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2135">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span>
          </span>
        </param>
        <param name="addMethod">
          <span data-ttu-id="5ff2c-2136">하나의 인수를 받으며 컬렉션에 요소를 추가하는 인스턴스 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2136">A <see cref="T:System.Reflection.MethodInfo" /> that represents an instance method that takes one argument, that adds an element to a collection.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="5ff2c-2137">
            <see cref="T:System.Linq.Expressions.Expression" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2137">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2138">지정된 메서드를 사용하여 컬렉션에 요소를 추가하는 <see cref="T:System.Linq.Expressions.ListInitExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2138">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses a specified method to add elements to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2139">
            <see cref="T:System.Linq.Expressions.ListInitExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2139">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2140"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 `newExpression` 구현 하는 형식을 나타내야 <xref:System.Collections.IEnumerable>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2140">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="5ff2c-2141">경우 `addMethod` 은 `null`, `newExpression`합니다. 형식 또는 해당 기본 형식과 정확히 하나의 인수를 사용 하는 "Add" (대/소문자 구분) 라는 단일 메서드가 선언 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2141">If `addMethod` is `null`, `newExpression`.Type or its base type must declare a single method named "Add" (case insensitive) that takes exactly one argument.</span></span> <span data-ttu-id="5ff2c-2142">경우 `addMethod` 않습니다 `null`, 정확히 한 개의 매개 변수가 있는 "Add" (대/소문자 구분) 라는 인스턴스 메서드를 나타내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2142">If `addMethod` is not `null`, it must represent an instance method named "Add" (case insensitive) that has exactly one parameter.</span></span> <span data-ttu-id="5ff2c-2143">가 나타내는 형식이 <xref:System.Linq.Expressions.Expression.Type%2A> 속성의 각 요소로 `initializers` add 메서드의 인수 형식에 할당할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2143">The type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `initializers` must be assignable to the argument type of the add method.</span></span>  
  
 <span data-ttu-id="5ff2c-2144"><xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> 반환 된 속성 <xref:System.Linq.Expressions.ListInitExpression> 형식의 요소가 하나씩 포함 <xref:System.Linq.Expressions.ElementInit> 의 각 요소에 대 한 `initializers`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2144">The <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> property of the returned <xref:System.Linq.Expressions.ListInitExpression> contains one element of type <xref:System.Linq.Expressions.ElementInit> for each element of `initializers`.</span></span> <span data-ttu-id="5ff2c-2145"><xref:System.Linq.Expressions.ElementInit.Arguments%2A> 속성의 각 요소로 <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> 의 해당 요소를 포함 하는 단일 항목 컬렉션은 `initializers`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2145">The <xref:System.Linq.Expressions.ElementInit.Arguments%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is a singleton collection that contains the corresponding element of `initializers`.</span></span> <span data-ttu-id="5ff2c-2146"><xref:System.Linq.Expressions.ElementInit.AddMethod%2A> 속성의 각 요소로 <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> 같으면 `addMethod`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2146">The <xref:System.Linq.Expressions.ElementInit.AddMethod%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is equal to `addMethod`.</span></span>  
  
 <span data-ttu-id="5ff2c-2147"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.ListInitExpression> 같으면 `newExpression`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2147">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2148">
            <paramref name="newExpression" /> 또는 <paramref name="initializers" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2148">
              <paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2149">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2149">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2150">
            <paramref name="initializers" />의 하나 이상의 요소가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2150">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2151">
            <paramref name="newExpression" />.Type이 <see cref="T:System.Collections.IEnumerable" />을 구현하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2151">
              <paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2152">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2152">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2153">
            <paramref name="addMethod" />가 <see langword="null" />이 아니고 정확히 하나의 인수를 받는 "Add"(대/소문자 구분 안 함)라는 인스턴스 메서드를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2153">
              <paramref name="addMethod" /> is not <see langword="null" /> and it does not represent an instance method named "Add" (case insensitive) that takes exactly one argument.</span>
          </span>
          <span data-ttu-id="5ff2c-2154">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2154">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2155">
            <paramref name="addMethod" />가 <see langword="null" />이 아니고 <paramref name="initializers" />에 있는 요소 중 하나 이상의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성이 나타내는 형식을 <paramref name="addMethod" />가 나타내는 메서드의 인수 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2155">
              <paramref name="addMethod" /> is not <see langword="null" /> and the type represented by the <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="initializers" /> is not assignable to the argument type of the method that <paramref name="addMethod" /> represents.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2156">
            <paramref name="addMethod" />가 <see langword="null" />이고 <paramref name="newExpression" />.Type 또는 해당 기본 형식에 하나의 형식 호환 인수를 받는 "Add"라는 인스턴스 메서드가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2156">
              <paramref name="addMethod" /> is <see langword="null" /> and no instance method named "Add" that takes one type-compatible argument exists on <paramref name="newExpression" />.Type or its base type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Loop">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2157">
            <see cref="T:System.Linq.Expressions.LoopExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2157">Creates a <see cref="T:System.Linq.Expressions.LoopExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Loop">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LoopExpression Loop (System.Linq.Expressions.Expression body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LoopExpression Loop(class System.Linq.Expressions.Expression body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Loop (body As Expression) As LoopExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LoopExpression ^ Loop(System::Linq::Expressions::Expression ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LoopExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="5ff2c-2158">루프의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2158">The body of the loop.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2159">지정된 본문을 사용하여 <see cref="T:System.Linq.Expressions.LoopExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2159">Creates a <see cref="T:System.Linq.Expressions.LoopExpression" /> with the given body.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2160">만든 <see cref="T:System.Linq.Expressions.LoopExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2160">The created <see cref="T:System.Linq.Expressions.LoopExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loop">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LoopExpression Loop (System.Linq.Expressions.Expression body, System.Linq.Expressions.LabelTarget break);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LoopExpression Loop(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.LabelTarget break) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Loop (body As Expression, break As LabelTarget) As LoopExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LoopExpression ^ Loop(System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::LabelTarget ^ break);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LoopExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="break" Type="System.Linq.Expressions.LabelTarget" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="5ff2c-2161">루프의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2161">The body of the loop.</span>
          </span>
        </param>
        <param name="break">
          <span data-ttu-id="5ff2c-2162">루프 본문에서 사용하는 break 대상입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2162">The break target used by the loop body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2163">지정된 본문과 break 대상을 사용하여 <see cref="T:System.Linq.Expressions.LoopExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2163">Creates a <see cref="T:System.Linq.Expressions.LoopExpression" /> with the given body and break target.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2164">만든 <see cref="T:System.Linq.Expressions.LoopExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2164">The created <see cref="T:System.Linq.Expressions.LoopExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-2165">다음 예제에서는 포함 된 블록 식을 만드는 방법을 보여 줍니다.는 <xref:System.Linq.Expressions.LoopExpression> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2165">The following example demonstrates how to create a block expression that contains a <xref:System.Linq.Expressions.LoopExpression> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#44)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#44)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Loop">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LoopExpression Loop (System.Linq.Expressions.Expression body, System.Linq.Expressions.LabelTarget break, System.Linq.Expressions.LabelTarget continue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LoopExpression Loop(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.LabelTarget break, class System.Linq.Expressions.LabelTarget continue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Loop (body As Expression, break As LabelTarget, continue As LabelTarget) As LoopExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LoopExpression ^ Loop(System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::LabelTarget ^ break, System::Linq::Expressions::LabelTarget ^ continue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LoopExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="break" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="continue" Type="System.Linq.Expressions.LabelTarget" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="5ff2c-2166">루프의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2166">The body of the loop.</span>
          </span>
        </param>
        <param name="break">
          <span data-ttu-id="5ff2c-2167">루프 본문에서 사용하는 break 대상입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2167">The break target used by the loop body.</span>
          </span>
        </param>
        <param name="continue">
          <span data-ttu-id="5ff2c-2168">루프 본문에서 사용하는 continue 대상입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2168">The continue target used by the loop body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2169">지정된 본문을 사용하여 <see cref="T:System.Linq.Expressions.LoopExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2169">Creates a <see cref="T:System.Linq.Expressions.LoopExpression" /> with the given body.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2170">만든 <see cref="T:System.Linq.Expressions.LoopExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2170">The created <see cref="T:System.Linq.Expressions.LoopExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeBinary">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2171">적절한 팩터리 메서드를 호출하여 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2171">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> by calling the appropriate factory method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeBinary">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MakeBinary (System.Linq.Expressions.ExpressionType binaryType, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MakeBinary(valuetype System.Linq.Expressions.ExpressionType binaryType, class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeBinary (binaryType As ExpressionType, left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MakeBinary(System::Linq::Expressions::ExpressionType binaryType, System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryType" Type="System.Linq.Expressions.ExpressionType" />
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="binaryType">
          <span data-ttu-id="5ff2c-2172">이진 연산의 형식을 지정하는 <see cref="T:System.Linq.Expressions.ExpressionType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2172">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that specifies the type of binary operation.</span>
          </span>
        </param>
        <param name="left">
          <span data-ttu-id="5ff2c-2173">왼쪽 피연산자를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2173">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the left operand.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2174">오른쪽 피연산자를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2174">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the right operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2175">지정된 왼쪽 및 오른쪽 피연산자를 사용하고 적합한 팩터리 메서드를 호출하여 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2175">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" />, given the left and right operands, by calling an appropriate factory method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2176">적절한 팩터리 메서드를 호출한 결과인 <see cref="T:System.Linq.Expressions.BinaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2176">The <see cref="T:System.Linq.Expressions.BinaryExpression" /> that results from calling the appropriate factory method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2177">`binaryType` 매개 변수를 결정 하는 <xref:System.Linq.Expressions.BinaryExpression> 이 메서드를 호출 하는 팩터리 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2177">The `binaryType` parameter determines which <xref:System.Linq.Expressions.BinaryExpression> factory method this method calls.</span></span> <span data-ttu-id="5ff2c-2178">예를 들어 경우 `binaryType` 은 <xref:System.Linq.Expressions.ExpressionType.Subtract>,이 메서드를 호출 <xref:System.Linq.Expressions.Expression.Subtract%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2178">For example, if `binaryType` is <xref:System.Linq.Expressions.ExpressionType.Subtract>, this method invokes <xref:System.Linq.Expressions.Expression.Subtract%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-2179">다음 예제에서는 사용 하는 방법을 <xref:System.Linq.Expressions.Expression.MakeBinary%28System.Linq.Expressions.ExpressionType%2CSystem.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%29> 만드는 메서드를 한 <xref:System.Linq.Expressions.BinaryExpression> 에서 다른 빼기 한 숫자를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2179">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.MakeBinary%28System.Linq.Expressions.ExpressionType%2CSystem.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%29> method to create a <xref:System.Linq.Expressions.BinaryExpression> that represents the subtraction of one number from another.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#8)]
 [!code-vb[System.Linq.Expressions.Expression#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2180">
            <paramref name="binaryType" />이 이항 식 노드에 해당하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2180">
              <paramref name="binaryType" /> does not correspond to a binary expression node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2181">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2181">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MakeBinary">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MakeBinary (System.Linq.Expressions.ExpressionType binaryType, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MakeBinary(valuetype System.Linq.Expressions.ExpressionType binaryType, class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeBinary (binaryType As ExpressionType, left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MakeBinary(System::Linq::Expressions::ExpressionType binaryType, System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryType" Type="System.Linq.Expressions.ExpressionType" />
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="binaryType">
          <span data-ttu-id="5ff2c-2182">이진 연산의 형식을 지정하는 <see cref="T:System.Linq.Expressions.ExpressionType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2182">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that specifies the type of binary operation.</span>
          </span>
        </param>
        <param name="left">
          <span data-ttu-id="5ff2c-2183">왼쪽 피연산자를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2183">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the left operand.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2184">오른쪽 피연산자를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2184">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the right operand.</span>
          </span>
        </param>
        <param name="liftToNull">
          <span data-ttu-id="5ff2c-2185">
            <see langword="true" />를 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />로 설정하려면 <see langword="true" />이고, <see langword="false" />를 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />로 설정하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2185">
              <see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-2186">구현 메서드를 지정하는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2186">A <see cref="T:System.Reflection.MethodInfo" /> that specifies the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2187">지정된 왼쪽 피연산자, 오른쪽 피연산자 및 구현 메서드를 사용하고 적합한 팩터리 메서드를 호출하여 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2187">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" />, given the left operand, right operand and implementing method, by calling the appropriate factory method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2188">적절한 팩터리 메서드를 호출한 결과인 <see cref="T:System.Linq.Expressions.BinaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2188">The <see cref="T:System.Linq.Expressions.BinaryExpression" /> that results from calling the appropriate factory method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2189">`binaryType` 매개 변수를 결정 하는 <xref:System.Linq.Expressions.BinaryExpression> 팩터리 메서드가이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2189">The `binaryType` parameter determines which <xref:System.Linq.Expressions.BinaryExpression> factory method this method will call.</span></span> <span data-ttu-id="5ff2c-2190">예를 들어 경우 `binaryType` 은 <xref:System.Linq.Expressions.ExpressionType.Subtract>,이 메서드를 호출 <xref:System.Linq.Expressions.Expression.Subtract%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2190">For example, if `binaryType` is <xref:System.Linq.Expressions.ExpressionType.Subtract>, this method invokes <xref:System.Linq.Expressions.Expression.Subtract%2A>.</span></span> <span data-ttu-id="5ff2c-2191">`liftToNull` 및 `method` 적절 한 팩터리 메서드는 해당 매개 변수가 없는 경우 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2191">The `liftToNull` and `method` parameters are ignored if the appropriate factory method does not have a corresponding parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2192">
            <paramref name="binaryType" />이 이항 식 노드에 해당하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2192">
              <paramref name="binaryType" /> does not correspond to a binary expression node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2193">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2193">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MakeBinary">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MakeBinary (System.Linq.Expressions.ExpressionType binaryType, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MakeBinary(valuetype System.Linq.Expressions.ExpressionType binaryType, class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeBinary (binaryType As ExpressionType, left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MakeBinary(System::Linq::Expressions::ExpressionType binaryType, System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryType" Type="System.Linq.Expressions.ExpressionType" />
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="binaryType">
          <span data-ttu-id="5ff2c-2194">이진 연산의 형식을 지정하는 <see cref="T:System.Linq.Expressions.ExpressionType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2194">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that specifies the type of binary operation.</span>
          </span>
        </param>
        <param name="left">
          <span data-ttu-id="5ff2c-2195">왼쪽 피연산자를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2195">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the left operand.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2196">오른쪽 피연산자를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2196">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the right operand.</span>
          </span>
        </param>
        <param name="liftToNull">
          <span data-ttu-id="5ff2c-2197">
            <see langword="true" />를 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />로 설정하려면 <see langword="true" />이고, <see langword="false" />를 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />로 설정하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2197">
              <see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-2198">구현 메서드를 지정하는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2198">A <see cref="T:System.Reflection.MethodInfo" /> that specifies the implementing method.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="5ff2c-2199">형식 변환 함수를 나타내는 <see cref="T:System.Linq.Expressions.LambdaExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2199">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that represents a type conversion function.</span>
          </span>
          <span data-ttu-id="5ff2c-2200">이 매개 변수는 <c>binaryType</c>이 <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" /> 또는 복합 할당으로 설정되어 있는 경우에만 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2200">This parameter is used only if <c>binaryType</c> is <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" /> or compound assignment..</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2201">지정된 왼쪽 피연산자, 오른쪽 피연산자, 구현 메서드 및 형식 변환 함수를 사용하고 적합한 팩터리 메서드를 호출하여 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2201">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" />, given the left operand, right operand, implementing method and type conversion function, by calling the appropriate factory method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2202">적절한 팩터리 메서드를 호출한 결과인 <see cref="T:System.Linq.Expressions.BinaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2202">The <see cref="T:System.Linq.Expressions.BinaryExpression" /> that results from calling the appropriate factory method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2203">`binaryType` 매개 변수를 결정 하는 <xref:System.Linq.Expressions.BinaryExpression> 팩터리 메서드가이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2203">The `binaryType` parameter determines which <xref:System.Linq.Expressions.BinaryExpression> factory method this method will call.</span></span> <span data-ttu-id="5ff2c-2204">예를 들어 경우 `binaryType` 은 <xref:System.Linq.Expressions.ExpressionType.Subtract>,이 메서드를 호출 <xref:System.Linq.Expressions.Expression.Subtract%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2204">For example, if `binaryType` is <xref:System.Linq.Expressions.ExpressionType.Subtract>, this method invokes <xref:System.Linq.Expressions.Expression.Subtract%2A>.</span></span> <span data-ttu-id="5ff2c-2205">`liftToNull`, `method` 및 `conversion` 적절 한 팩터리 메서드는 해당 매개 변수가 없는 경우 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2205">The `liftToNull`, `method` and `conversion` parameters are ignored if the appropriate factory method does not have a corresponding parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2206">
            <paramref name="binaryType" />이 이항 식 노드에 해당하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2206">
              <paramref name="binaryType" /> does not correspond to a binary expression node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2207">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2207">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MakeCatchBlock">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.CatchBlock MakeCatchBlock (Type type, System.Linq.Expressions.ParameterExpression variable, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.CatchBlock MakeCatchBlock(class System.Type type, class System.Linq.Expressions.ParameterExpression variable, class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::CatchBlock ^ MakeCatchBlock(Type ^ type, System::Linq::Expressions::ParameterExpression ^ variable, System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.CatchBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="variable" Type="System.Linq.Expressions.ParameterExpression" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-2208">이 <see cref="P:System.Linq.Expressions.Expression.Type" />이 처리할 <see cref="T:System.Exception" />의 <see cref="T:System.Linq.Expressions.CatchBlock" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2208">The <see cref="P:System.Linq.Expressions.Expression.Type" /> of <see cref="T:System.Exception" /> this <see cref="T:System.Linq.Expressions.CatchBlock" /> will handle.</span>
          </span>
        </param>
        <param name="variable">
          <span data-ttu-id="5ff2c-2209">이 처리기가 catch한 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 개체에 대한 참조를 나타내는 <see cref="T:System.Exception" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2209">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> representing a reference to the <see cref="T:System.Exception" /> object caught by this handler.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="5ff2c-2210">catch 문의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2210">The body of the catch statement.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="5ff2c-2211">
            <see cref="T:System.Exception" /> 필터의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2211">The body of the <see cref="T:System.Exception" /> filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2212">지정된 요소를 사용하여 catch 문을 나타내는 <see cref="T:System.Linq.Expressions.CatchBlock" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2212">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement with the specified elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2213">만든 <see cref="T:System.Linq.Expressions.CatchBlock" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2213">The created <see cref="T:System.Linq.Expressions.CatchBlock" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2214">`type` null이 아니어야 하 고의 형식과 일치 해야 `variable` (제공 된 경우).</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2214">`type` must be non-null and match the type of `variable` (if it is supplied).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeDynamic">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2215">동적 연산을 나타내는 <see cref="T:System.Linq.Expressions.DynamicExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2215">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, arguments As IEnumerable(Of Expression)) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="5ff2c-2216">
            <see cref="T:System.Runtime.CompilerServices.CallSite" />에서 사용되는 대리자의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2216">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="5ff2c-2217">동적 작업의 런타임 바인더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2217">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-2218">동적 작업의 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2218">The arguments to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2219">제공된 <see cref="T:System.Linq.Expressions.DynamicExpression" />에 의해 바인딩된 동적 작업을 나타내는 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2219">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2220">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />, <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" /> 및 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />가 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2220">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Linq.Expressions.Expression arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, arg0 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, System::Linq::Expressions::Expression ^ arg0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="5ff2c-2221">
            <see cref="T:System.Runtime.CompilerServices.CallSite" />에서 사용되는 대리자의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2221">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="5ff2c-2222">동적 작업의 런타임 바인더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2222">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5ff2c-2223">동적 작업의 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2223">The argument to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2224">제공된 <see cref="T:System.Linq.Expressions.DynamicExpression" /> 및 1개 인수에 의해 바인딩된 동적 작업을 나타내는 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2224">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> and one argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2225">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />, <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" /> 및 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />가 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2225">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, ParamArray arguments As Expression()) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="5ff2c-2226">
            <see cref="T:System.Runtime.CompilerServices.CallSite" />에서 사용되는 대리자의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2226">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="5ff2c-2227">동적 작업의 런타임 바인더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2227">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-2228">동적 작업의 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2228">The arguments to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2229">제공된 <see cref="T:System.Linq.Expressions.DynamicExpression" />에 의해 바인딩된 동적 작업을 나타내는 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2229">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2230">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />, <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" /> 및 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />가 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2230">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, arg0 As Expression, arg1 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="5ff2c-2231">
            <see cref="T:System.Runtime.CompilerServices.CallSite" />에서 사용되는 대리자의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2231">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="5ff2c-2232">동적 작업의 런타임 바인더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2232">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5ff2c-2233">동적 작업의 첫 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2233">The first argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5ff2c-2234">동적 작업의 두 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2234">The second argument to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2235">제공된 <see cref="T:System.Linq.Expressions.DynamicExpression" /> 및 2개 인수에 의해 바인딩된 동적 작업을 나타내는 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2235">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> and two arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2236">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />, <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" /> 및 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />가 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2236">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, arg0 As Expression, arg1 As Expression, arg2 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="5ff2c-2237">
            <see cref="T:System.Runtime.CompilerServices.CallSite" />에서 사용되는 대리자의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2237">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="5ff2c-2238">동적 작업의 런타임 바인더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2238">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5ff2c-2239">동적 작업의 첫 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2239">The first argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5ff2c-2240">동적 작업의 두 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2240">The second argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="5ff2c-2241">동적 작업의 세 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2241">The third argument to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2242">제공된 <see cref="T:System.Linq.Expressions.DynamicExpression" /> 및 3개 인수에 의해 바인딩된 동적 작업을 나타내는 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2242">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> and three arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2243">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />, <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" /> 및 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />가 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2243">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="5ff2c-2244">
            <see cref="T:System.Runtime.CompilerServices.CallSite" />에서 사용되는 대리자의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2244">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="5ff2c-2245">동적 작업의 런타임 바인더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2245">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="5ff2c-2246">동적 작업의 첫 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2246">The first argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="5ff2c-2247">동적 작업의 두 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2247">The second argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="5ff2c-2248">동적 작업의 세 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2248">The third argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="5ff2c-2249">동적 작업의 네 번째 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2249">The fourth argument to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2250">제공된 <see cref="T:System.Linq.Expressions.DynamicExpression" /> 및 4개 인수에 의해 바인딩된 동적 작업을 나타내는 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2250">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> and four arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2251">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />, <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" /> 및 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />가 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2251">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeGoto">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression MakeGoto (System.Linq.Expressions.GotoExpressionKind kind, System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression MakeGoto(valuetype System.Linq.Expressions.GotoExpressionKind kind, class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ MakeGoto(System::Linq::Expressions::GotoExpressionKind kind, System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.Linq.Expressions.GotoExpressionKind" />
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="kind">
          <span data-ttu-id="5ff2c-2252">
            <see cref="T:System.Linq.Expressions.GotoExpressionKind" />의 <see cref="T:System.Linq.Expressions.GotoExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2252">The <see cref="T:System.Linq.Expressions.GotoExpressionKind" /> of the <see cref="T:System.Linq.Expressions.GotoExpression" />.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="5ff2c-2253">
            <see cref="T:System.Linq.Expressions.LabelTarget" />이 이동할 <see cref="T:System.Linq.Expressions.GotoExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2253">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5ff2c-2254">이동 시 연결된 레이블에 전달될 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2254">The value that will be passed to the associated label upon jumping.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-2255">
            <see cref="T:System.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2255">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2256">지정된 <see cref="T:System.Linq.Expressions.GotoExpression" />의 이동을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpressionKind" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2256">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a jump of the specified <see cref="T:System.Linq.Expressions.GotoExpressionKind" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2257">이동 시 레이블에 전달되는 값도 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2257">The value passed to the label upon jumping can also be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2258">
            <see cref="T:System.Linq.Expressions.GotoExpression" />가 <see cref="P:System.Linq.Expressions.GotoExpression.Kind" />이고, <paramref name="kind" /> 속성이 <see cref="P:System.Linq.Expressions.GotoExpression.Target" />으로 설정되며, <paramref name="target" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.Type" />으로 설정되고, 이동 시 대상 레이블에 <paramref name="type" />가 전달되는 <paramref name="value" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2258">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to <paramref name="kind" />, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeIndex">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression MakeIndex (System.Linq.Expressions.Expression instance, System.Reflection.PropertyInfo indexer, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression MakeIndex(class System.Linq.Expressions.Expression instance, class System.Reflection.PropertyInfo indexer, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeIndex (instance As Expression, indexer As PropertyInfo, arguments As IEnumerable(Of Expression)) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ MakeIndex(System::Linq::Expressions::Expression ^ instance, System::Reflection::PropertyInfo ^ indexer, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="indexer" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="5ff2c-2259">속성이 속해 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2259">The object to which the property belongs.</span>
          </span>
          <span data-ttu-id="5ff2c-2260">속성이 <see langword="static" />(Visual Basic에서는 <see langword="shared" />)인 경우 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2260">It should be null if the property is <see langword="static" /> (<see langword="shared" /> in Visual Basic).</span>
          </span>
        </param>
        <param name="indexer">
          <span data-ttu-id="5ff2c-2261">인덱싱할 속성을 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2261">An <see cref="T:System.Linq.Expressions.Expression" /> representing the property to index.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-2262">속성을 인덱싱하는 데 사용할 인수가 포함된 <c>IEnumerable&lt;Expression&gt;</c>(Visual Basic에서는 <c>IEnumerable (Of Expression)</c>)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2262">An <c>IEnumerable&lt;Expression&gt;</c> (<c>IEnumerable (Of Expression)</c> in Visual Basic) that contains the arguments that will be used to index the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2263">개체의 인덱싱된 속성에 액세스하는 <see cref="T:System.Linq.Expressions.IndexExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2263">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> that represents accessing an indexed property in an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2264">만든 <see cref="T:System.Linq.Expressions.IndexExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2264">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeMemberAccess">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression MakeMemberAccess (System.Linq.Expressions.Expression expression, System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression MakeMemberAccess(class System.Linq.Expressions.Expression expression, class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ MakeMemberAccess(System::Linq::Expressions::Expression ^ expression, System::Reflection::MemberInfo ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-2265">멤버가 속하는 개체를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2265">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the object that the member belongs to.</span>
          </span>
          <span data-ttu-id="5ff2c-2266">이 값은 정적 멤버의 경우 null일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2266">This can be null for static members.</span>
          </span>
        </param>
        <param name="member">
          <span data-ttu-id="5ff2c-2267">액세스할 필드 또는 속성을 설명하는 <see cref="T:System.Reflection.MemberInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2267">The <see cref="T:System.Reflection.MemberInfo" /> that describes the field or property to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2268">필드 또는 속성 액세스를 나타내는 <see cref="T:System.Linq.Expressions.MemberExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2268">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing either a field or a property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2269">적절한 팩터리 메서드를 호출한 결과인 <see cref="T:System.Linq.Expressions.MemberExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2269">The <see cref="T:System.Linq.Expressions.MemberExpression" /> that results from calling the appropriate factory method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2270">이 메서드는 만드는 데 사용할 수는 <xref:System.Linq.Expressions.MemberExpression> 필드 또는 속성의 형식에 따라 액세스를 나타내는 `member`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2270">This method can be used to create a <xref:System.Linq.Expressions.MemberExpression> that represents accessing either a field or a property, depending on the type of `member`.</span></span> <span data-ttu-id="5ff2c-2271">경우 `member` 유형의 <xref:System.Reflection.FieldInfo>,이 메서드를 호출 <xref:System.Linq.Expressions.Expression.Field%2A> 만들려는 <xref:System.Linq.Expressions.MemberExpression>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2271">If `member` is of type <xref:System.Reflection.FieldInfo>, this method calls <xref:System.Linq.Expressions.Expression.Field%2A> to create the <xref:System.Linq.Expressions.MemberExpression>.</span></span> <span data-ttu-id="5ff2c-2272">경우 `member` 유형의 <xref:System.Reflection.PropertyInfo>,이 메서드를 호출 <xref:System.Linq.Expressions.Expression.Property%2A> 만들려는 <xref:System.Linq.Expressions.MemberExpression>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2272">If `member` is of type <xref:System.Reflection.PropertyInfo>, this method calls <xref:System.Linq.Expressions.Expression.Property%2A> to create the <xref:System.Linq.Expressions.MemberExpression>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2273">
            <paramref name="member" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2273">
              <paramref name="member" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2274">
            <paramref name="member" />가 필드나 속성을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2274">
              <paramref name="member" /> does not represent a field or property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MakeTry">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TryExpression MakeTry (Type type, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression finally, System.Linq.Expressions.Expression fault, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.CatchBlock&gt; handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TryExpression MakeTry(class System.Type type, class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression finally, class System.Linq.Expressions.Expression fault, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.CatchBlock&gt; handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TryExpression ^ MakeTry(Type ^ type, System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ finally, System::Linq::Expressions::Expression ^ fault, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::CatchBlock ^&gt; ^ handlers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="finally" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="fault" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="handlers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.CatchBlock&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-2275">try 식의 결과 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2275">The result type of the try expression.</span>
          </span>
          <span data-ttu-id="5ff2c-2276">null일 경우 본문 및 모든 처리기에 같은 형식이 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2276">If null, bodh and all handlers must have identical type.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="5ff2c-2277">try 블록의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2277">The body of the try block.</span>
          </span>
        </param>
        <param name="finally">
          <span data-ttu-id="5ff2c-2278">finally 블록의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2278">The body of the finally block.</span>
          </span>
          <span data-ttu-id="5ff2c-2279">try 블록에 연결된 finally 블록이 없을 경우 null을 전달합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2279">Pass null if the try block has no finally block associated with it.</span>
          </span>
        </param>
        <param name="fault">
          <span data-ttu-id="5ff2c-2280">fault 블록의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2280">The body of the fault block.</span>
          </span>
          <span data-ttu-id="5ff2c-2281">try 블록에 연결된 fault 블록이 없을 경우 null을 전달합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2281">Pass null if the try block has no fault block associated with it.</span>
          </span>
        </param>
        <param name="handlers">
          <span data-ttu-id="5ff2c-2282">try 블록과 연결되는 catch 문을 나타내는 <see cref="T:System.Linq.Expressions.CatchBlock" />의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2282">A collection of <see cref="T:System.Linq.Expressions.CatchBlock" />s representing the catch statements to be associated with the try block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2283">지정된 요소를 사용하여 try 블록을 나타내는 <see cref="T:System.Linq.Expressions.TryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2283">Creates a <see cref="T:System.Linq.Expressions.TryExpression" /> representing a try block with the specified elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2284">만든 <see cref="T:System.Linq.Expressions.TryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2284">The created <see cref="T:System.Linq.Expressions.TryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeUnary">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2285">적절한 팩터리 메서드를 호출하여 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2285">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> by calling the appropriate factory method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeUnary">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression MakeUnary (System.Linq.Expressions.ExpressionType unaryType, System.Linq.Expressions.Expression operand, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression MakeUnary(valuetype System.Linq.Expressions.ExpressionType unaryType, class System.Linq.Expressions.Expression operand, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ MakeUnary(System::Linq::Expressions::ExpressionType unaryType, System::Linq::Expressions::Expression ^ operand, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unaryType" Type="System.Linq.Expressions.ExpressionType" />
        <Parameter Name="operand" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="unaryType">
          <span data-ttu-id="5ff2c-2286">단항 연산의 형식을 지정하는 <see cref="T:System.Linq.Expressions.ExpressionType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2286">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that specifies the type of unary operation.</span>
          </span>
        </param>
        <param name="operand">
          <span data-ttu-id="5ff2c-2287">피연산자를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2287">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the operand.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-2288">변환할 형식을 지정하는 <see cref="T:System.Type" />입니다. 해당 사항이 없는 경우 <see langword="null" />을 전달합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2288">The <see cref="T:System.Type" /> that specifies the type to be converted to (pass <see langword="null" /> if not applicable).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2289">지정된 피연산자를 사용하고 적합한 팩터리 메서드를 호출하여 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2289">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" />, given an operand, by calling the appropriate factory method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2290">적절한 팩터리 메서드를 호출한 결과인 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2290">The <see cref="T:System.Linq.Expressions.UnaryExpression" /> that results from calling the appropriate factory method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2291">`unaryType` 매개 변수를 결정 하는 <xref:System.Linq.Expressions.UnaryExpression> 이 메서드를 호출 하는 팩터리 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2291">The `unaryType` parameter determines which <xref:System.Linq.Expressions.UnaryExpression> factory method this method calls.</span></span> <span data-ttu-id="5ff2c-2292">예를 들어 경우 `unaryType` 같으면 <xref:System.Linq.Expressions.ExpressionType.Convert>,이 메서드를 호출 <xref:System.Linq.Expressions.Expression.Convert%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2292">For example, if `unaryType` is equal to <xref:System.Linq.Expressions.ExpressionType.Convert>, this method invokes <xref:System.Linq.Expressions.Expression.Convert%2A>.</span></span> <span data-ttu-id="5ff2c-2293">`type`이라고 하는 팩터리 메서드에 적용 되지 않는 경우 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2293">The `type`parameter is ignored if it does not apply to the factory method that is called.</span></span>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2294">
            <paramref name="operand" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2294">
              <paramref name="operand" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2295">
            <paramref name="unaryType" />이 단항 식 노드에 해당하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2295">
              <paramref name="unaryType" /> does not correspond to a unary expression node.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MakeUnary">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression MakeUnary (System.Linq.Expressions.ExpressionType unaryType, System.Linq.Expressions.Expression operand, Type type, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression MakeUnary(valuetype System.Linq.Expressions.ExpressionType unaryType, class System.Linq.Expressions.Expression operand, class System.Type type, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ MakeUnary(System::Linq::Expressions::ExpressionType unaryType, System::Linq::Expressions::Expression ^ operand, Type ^ type, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unaryType" Type="System.Linq.Expressions.ExpressionType" />
        <Parameter Name="operand" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="unaryType">
          <span data-ttu-id="5ff2c-2296">단항 연산의 형식을 지정하는 <see cref="T:System.Linq.Expressions.ExpressionType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2296">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that specifies the type of unary operation.</span>
          </span>
        </param>
        <param name="operand">
          <span data-ttu-id="5ff2c-2297">피연산자를 나타내는 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2297">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the operand.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-2298">변환할 형식을 지정하는 <see cref="T:System.Type" />입니다. 해당 사항이 없는 경우 <see langword="null" />을 전달합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2298">The <see cref="T:System.Type" /> that specifies the type to be converted to (pass <see langword="null" /> if not applicable).</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-2299">구현 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2299">The <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2300">지정된 피연산자 및 구현 메서드를 사용하고 적합한 팩터리 메서드를 호출하여 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2300">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" />, given an operand and implementing method, by calling the appropriate factory method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2301">적절한 팩터리 메서드를 호출한 결과인 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2301">The <see cref="T:System.Linq.Expressions.UnaryExpression" /> that results from calling the appropriate factory method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2302">`unaryType` 매개 변수를 결정 하는 <xref:System.Linq.Expressions.UnaryExpression> 이 메서드를 호출 하는 팩터리 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2302">The `unaryType` parameter determines which <xref:System.Linq.Expressions.UnaryExpression> factory method this method calls.</span></span> <span data-ttu-id="5ff2c-2303">예를 들어 경우 `unaryType` 같으면 <xref:System.Linq.Expressions.ExpressionType.Convert>,이 메서드를 호출 <xref:System.Linq.Expressions.Expression.Convert%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2303">For example, if `unaryType` is equal to <xref:System.Linq.Expressions.ExpressionType.Convert>, this method invokes <xref:System.Linq.Expressions.Expression.Convert%2A>.</span></span> <span data-ttu-id="5ff2c-2304">`type` 및 `method` 이라고 하는 팩터리 메서드에 적용 되지 않은 경우 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2304">The `type` and `method` parameters are ignored if they do not apply to the factory method that is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2305">
            <paramref name="operand" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2305">
              <paramref name="operand" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2306">
            <paramref name="unaryType" />이 단항 식 노드에 해당하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2306">
              <paramref name="unaryType" /> does not correspond to a unary expression node.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MemberBind">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2307">멤버의 재귀적 멤버 초기화를 나타내는 <see cref="T:System.Linq.Expressions.MemberMemberBinding" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2307">Creates a <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that represents the recursive initialization of members of a member.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MemberBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt; bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberMemberBinding MemberBind(class System.Reflection.MemberInfo member, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.MemberBinding&gt; bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MemberBind (member As MemberInfo, bindings As IEnumerable(Of MemberBinding)) As MemberMemberBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberMemberBinding ^ MemberBind(System::Reflection::MemberInfo ^ member, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberMemberBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="bindings" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="5ff2c-2308">
            <see cref="T:System.Reflection.MemberInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MemberBinding.Member" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2308">The <see cref="T:System.Reflection.MemberInfo" /> to set the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property equal to.</span>
          </span>
        </param>
        <param name="bindings">
          <span data-ttu-id="5ff2c-2309">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.MemberBinding" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2309">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2310">필드 또는 속성의 재귀적 멤버 초기화를 나타내는 <see cref="T:System.Linq.Expressions.MemberMemberBinding" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2310">Creates a <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that represents the recursive initialization of members of a field or property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2311">
            <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> 속성이 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />이고 <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" /> 및 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2311">A <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" /> and the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> and <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2312">`member` 필드 또는 속성 매개 변수를 나타내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2312">The `member` parameter must represent a field or property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2313">
            <paramref name="member" /> 또는 <paramref name="bindings" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2313">
              <paramref name="member" /> or <paramref name="bindings" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2314">
            <paramref name="member" />가 필드나 속성을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2314">
              <paramref name="member" /> does not represent a field or property.</span>
          </span>
          <span data-ttu-id="5ff2c-2315">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2315">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2316">
            <paramref name="bindings" />에 있는 요소의 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 속성이 <paramref name="member" />가 나타내는 필드 또는 속성의 형식에 속하는 멤버를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2316">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type of the field or property that <paramref name="member" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MemberBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MemberInfo member, params System.Linq.Expressions.MemberBinding[] bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberMemberBinding MemberBind(class System.Reflection.MemberInfo member, class System.Linq.Expressions.MemberBinding[] bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MemberBind (member As MemberInfo, ParamArray bindings As MemberBinding()) As MemberMemberBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberMemberBinding ^ MemberBind(System::Reflection::MemberInfo ^ member, ... cli::array &lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberMemberBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="bindings" Type="System.Linq.Expressions.MemberBinding[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="5ff2c-2317">
            <see cref="T:System.Reflection.MemberInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MemberBinding.Member" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2317">The <see cref="T:System.Reflection.MemberInfo" /> to set the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property equal to.</span>
          </span>
        </param>
        <param name="bindings">
          <span data-ttu-id="5ff2c-2318">
            <see cref="T:System.Linq.Expressions.MemberBinding" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2318">An array of <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2319">필드 또는 속성의 재귀적 멤버 초기화를 나타내는 <see cref="T:System.Linq.Expressions.MemberMemberBinding" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2319">Creates a <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that represents the recursive initialization of members of a field or property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2320">
            <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> 속성이 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />이고 <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" /> 및 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2320">A <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" /> and the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> and <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2321">`member` 필드 또는 속성 매개 변수를 나타내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2321">The `member` parameter must represent a field or property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2322">
            <paramref name="member" /> 또는 <paramref name="bindings" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2322">
              <paramref name="member" /> or <paramref name="bindings" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2323">
            <paramref name="member" />가 필드나 속성을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2323">
              <paramref name="member" /> does not represent a field or property.</span>
          </span>
          <span data-ttu-id="5ff2c-2324">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2324">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2325">
            <paramref name="bindings" />에 있는 요소의 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 속성이 <paramref name="member" />가 나타내는 필드 또는 속성의 형식에 속하는 멤버를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2325">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type of the field or property that <paramref name="member" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MemberBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MethodInfo propertyAccessor, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt; bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberMemberBinding MemberBind(class System.Reflection.MethodInfo propertyAccessor, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.MemberBinding&gt; bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MemberBind (propertyAccessor As MethodInfo, bindings As IEnumerable(Of MemberBinding)) As MemberMemberBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberMemberBinding ^ MemberBind(System::Reflection::MethodInfo ^ propertyAccessor, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberMemberBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
        <Parameter Name="bindings" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyAccessor">
          <span data-ttu-id="5ff2c-2326">속성 접근자 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2326">The <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span>
          </span>
        </param>
        <param name="bindings">
          <span data-ttu-id="5ff2c-2327">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.MemberBinding" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2327">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2328">속성 접근자 메서드를 사용한 멤버의 재귀적 멤버 초기화를 나타내는 <see cref="T:System.Linq.Expressions.MemberMemberBinding" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2328">Creates a <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that represents the recursive initialization of members of a member that is accessed by using a property accessor method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2329">
            <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> 속성이 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />이고 <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" /> 속성이 <see cref="P:System.Linq.Expressions.MemberBinding.Member" />로 액세스되는 속성을 나타내는 <see cref="T:System.Reflection.PropertyInfo" />로 설정되고 <paramref name="propertyAccessor" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2329">A <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />, the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />, and <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2330">
            <paramref name="propertyAccessor" /> 또는 <paramref name="bindings" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2330">
              <paramref name="propertyAccessor" /> or <paramref name="bindings" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2331">
            <paramref name="propertyAccessor" />가 속성 접근자 메서드를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2331">
              <paramref name="propertyAccessor" /> does not represent a property accessor method.</span>
          </span>
          <span data-ttu-id="5ff2c-2332">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2332">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2333">
            <paramref name="bindings" />에 있는 요소의 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 속성이 <paramref name="propertyAccessor" />가 나타내는 메서드로 액세스되는 속성의 형식에 속하는 멤버를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2333">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type of the property accessed by the method that <paramref name="propertyAccessor" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MemberBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MethodInfo propertyAccessor, params System.Linq.Expressions.MemberBinding[] bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberMemberBinding MemberBind(class System.Reflection.MethodInfo propertyAccessor, class System.Linq.Expressions.MemberBinding[] bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MemberBind (propertyAccessor As MethodInfo, ParamArray bindings As MemberBinding()) As MemberMemberBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberMemberBinding ^ MemberBind(System::Reflection::MethodInfo ^ propertyAccessor, ... cli::array &lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberMemberBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
        <Parameter Name="bindings" Type="System.Linq.Expressions.MemberBinding[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyAccessor">
          <span data-ttu-id="5ff2c-2334">속성 접근자 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2334">The <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span>
          </span>
        </param>
        <param name="bindings">
          <span data-ttu-id="5ff2c-2335">
            <see cref="T:System.Linq.Expressions.MemberBinding" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2335">An array of <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2336">속성 접근자 메서드를 사용한 멤버의 재귀적 멤버 초기화를 나타내는 <see cref="T:System.Linq.Expressions.MemberMemberBinding" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2336">Creates a <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that represents the recursive initialization of members of a member that is accessed by using a property accessor method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2337">
            <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> 속성이 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />이고 <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" /> 속성이 <see cref="P:System.Linq.Expressions.MemberBinding.Member" />로 액세스되는 속성을 나타내는 <see cref="T:System.Reflection.PropertyInfo" />로 설정되고 <paramref name="propertyAccessor" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2337">A <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />, the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />, and <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2338">
            <paramref name="propertyAccessor" /> 또는 <paramref name="bindings" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2338">
              <paramref name="propertyAccessor" /> or <paramref name="bindings" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2339">
            <paramref name="propertyAccessor" />가 속성 접근자 메서드를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2339">
              <paramref name="propertyAccessor" /> does not represent a property accessor method.</span>
          </span>
          <span data-ttu-id="5ff2c-2340">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2340">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2341">
            <paramref name="bindings" />에 있는 요소의 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 속성이 <paramref name="propertyAccessor" />가 나타내는 메서드로 액세스되는 속성의 형식에 속하는 멤버를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2341">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type of the property accessed by the method that <paramref name="propertyAccessor" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MemberInit">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2342">새 개체를 만들고 개체의 속성을 초기화하는 식을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2342">Represents an expression that creates a new object and initializes a property of the object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MemberInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberInitExpression MemberInit (System.Linq.Expressions.NewExpression newExpression, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt; bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberInitExpression MemberInit(class System.Linq.Expressions.NewExpression newExpression, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.MemberBinding&gt; bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberInitExpression ^ MemberInit(System::Linq::Expressions::NewExpression ^ newExpression, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="bindings" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="newExpression">
          <span data-ttu-id="5ff2c-2343">
            <see cref="T:System.Linq.Expressions.NewExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2343">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> property equal to.</span>
          </span>
        </param>
        <param name="bindings">
          <span data-ttu-id="5ff2c-2344">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.MemberBinding" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2344">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2345">새 개체를 만들고 개체의 속성을 초기화하는 식을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2345">Represents an expression that creates a new object and initializes a property of the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2346">
            <see cref="T:System.Linq.Expressions.MemberInitExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.MemberInit" /> 및 <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2346">A <see cref="T:System.Linq.Expressions.MemberInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberInit" /> and the <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> and <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2347"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.MemberInitExpression> 같은지는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성의 `newExpression`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2347">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberInitExpression> is equal to the <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-2348">다음 예제에서는 새 개체를 만들고 개체의 속성을 초기화 하는 식을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2348">The following example demonstrates an expression that creates a new object and initializes a property of the object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#40](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#40)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#40](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2349">
            <paramref name="newExpression" /> 또는 <paramref name="bindings" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2349">
              <paramref name="newExpression" /> or <paramref name="bindings" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2350">
            <paramref name="bindings" />에 있는 요소의 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 속성이 <paramref name="newExpression" />.Type이 나타내는 형식의 멤버를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2350">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type that <paramref name="newExpression" />.Type represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MemberInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberInitExpression MemberInit (System.Linq.Expressions.NewExpression newExpression, params System.Linq.Expressions.MemberBinding[] bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberInitExpression MemberInit(class System.Linq.Expressions.NewExpression newExpression, class System.Linq.Expressions.MemberBinding[] bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberInitExpression ^ MemberInit(System::Linq::Expressions::NewExpression ^ newExpression, ... cli::array &lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="bindings" Type="System.Linq.Expressions.MemberBinding[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="newExpression">
          <span data-ttu-id="5ff2c-2351">
            <see cref="T:System.Linq.Expressions.NewExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2351">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> property equal to.</span>
          </span>
        </param>
        <param name="bindings">
          <span data-ttu-id="5ff2c-2352">
            <see cref="T:System.Linq.Expressions.MemberBinding" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2352">An array of <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2353">
            <see cref="T:System.Linq.Expressions.MemberInitExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2353">Creates a <see cref="T:System.Linq.Expressions.MemberInitExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2354">
            <see cref="T:System.Linq.Expressions.MemberInitExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.MemberInit" /> 및 <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2354">A <see cref="T:System.Linq.Expressions.MemberInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberInit" /> and the <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> and <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2355"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.MemberInitExpression> 같은지는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성의 `newExpression`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2355">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberInitExpression> is equal to the <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-2356">다음 예제에서는 사용 하는 방법을 <xref:System.Linq.Expressions.Expression.MemberInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.MemberBinding%5B%5D%29> 만드는 메서드를 한 <xref:System.Linq.Expressions.MemberInitExpression> 새 개체의 두 멤버의 초기화를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2356">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.MemberInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.MemberBinding%5B%5D%29> method to create a <xref:System.Linq.Expressions.MemberInitExpression> that represents the initialization of two members of a new object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#9)]
 [!code-vb[System.Linq.Expressions.Expression#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2357">
            <paramref name="newExpression" /> 또는 <paramref name="bindings" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2357">
              <paramref name="newExpression" /> or <paramref name="bindings" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2358">
            <paramref name="bindings" />에 있는 요소의 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 속성이 <paramref name="newExpression" />.Type이 나타내는 형식의 멤버를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2358">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type that <paramref name="newExpression" />.Type represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Modulo">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2359">산술 나머지 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2359">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic remainder operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Modulo">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Modulo (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Modulo(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Modulo (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Modulo(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2360">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2360">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2361">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2361">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2362">산술 나머지 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2362">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic remainder operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2363">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Modulo" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2363">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Modulo" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2364">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2364">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-2365"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2365">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-2366">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2366">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-2367">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2367">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-2368"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2368">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-2369">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2369">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-2370">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2370">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-2371">다음 규칙 작업에 대해 선택 된 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2371">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-2372">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 모듈러스 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2372">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the modulus operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2373">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2373">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-2374">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2374">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-2375">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2375">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2376">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2376">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2377">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2377">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2378">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2378">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-2379">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2379">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-2380">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2380">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-2381">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2381">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2382">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2382">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2383">노드 유형 미리 정의 된 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2383">The type of the node is the result type of the predefined modulus operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-2384">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2384">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-2385">노드의 유형을 미리 정의 된 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2385">The type of the node is the nullable type that corresponds to the result type of the predefined modulus operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2386">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2386">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2387">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 나머지 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2387">The modulus operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Modulo">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Modulo (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Modulo(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Modulo (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Modulo(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2388">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2388">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2389">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2389">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-2390">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2390">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2391">산술 나머지 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2391">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic remainder operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2392">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Modulo" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2392">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Modulo" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2393">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2393">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-2394"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2394">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-2395">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2395">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-2396">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2396">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-2397"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2397">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-2398">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2398">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-2399">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2399">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-2400">작업에 대 한 구현 메서드는 다음 규칙에 따라 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2400">The implementing method for the operation is chosen based on the following rules:</span></span>  
  
-   <span data-ttu-id="5ff2c-2401">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를 사용 하는 노드에 대 한 구현 메서드를은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2401">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="5ff2c-2402">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 모듈러스 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2402">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the modulus operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2403">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2403">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-2404">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2404">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-2405">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2405">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2406">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2406">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2407">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2407">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2408">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2408">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-2409">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2409">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-2410">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2410">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-2411">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2411">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2412">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2412">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2413">노드 유형 미리 정의 된 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2413">The type of the node is the result type of the predefined modulus operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-2414">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2414">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-2415">노드의 유형을 미리 정의 된 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2415">The type of the node is the nullable type that corresponds to the result type of the predefined modulus operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2416">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2416">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2417">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2417">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2418">
            <paramref name="method" />가 <see langword="null" />이고 나머지 연산자가 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 대해 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2418">
              <paramref name="method" /> is <see langword="null" /> and the modulus operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ModuloAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2419">나머지 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2419">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a remainder assignment operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ModuloAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ModuloAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ModuloAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModuloAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ModuloAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2420">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2420">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2421">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2421">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2422">나머지 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2422">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a remainder assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2423">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2423">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuloAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ModuloAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ModuloAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModuloAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ModuloAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2424">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2424">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2425">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2425">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-2426">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2426">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2427">나머지 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2427">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a remainder assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2428">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2428">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuloAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ModuloAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ModuloAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModuloAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ModuloAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2429">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2429">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2430">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2430">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-2431">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2431">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="5ff2c-2432">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2432">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2433">나머지 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2433">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a remainder assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2434">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2434">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Multiply">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2435">오버플로를 검사하지 않는 산술 곱하기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2435">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that does not have overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Multiply (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Multiply(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Multiply(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2436">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2436">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2437">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2437">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2438">오버플로를 검사하지 않는 산술 곱하기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2438">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2439">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Multiply" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2439">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Multiply" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2440">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2440">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-2441"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2441">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-2442">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2442">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-2443">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2443">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-2444"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2444">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-2445">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2445">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-2446">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2446">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-2447">다음 규칙 작업에 대해 선택 된 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2447">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-2448">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 곱셈 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2448">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the multiplication operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2449">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2449">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-2450">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2450">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-2451">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2451">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2452">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2452">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2453">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2453">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2454">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2454">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-2455">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2455">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-2456">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2456">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-2457">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2457">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2458">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2458">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2459">노드 유형 미리 정의 된 곱하기 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2459">The type of the node is the result type of the predefined multiplication operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-2460">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2460">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-2461">노드의 유형을 미리 정의 된 곱하기 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2461">The type of the node is the nullable type that corresponds to the result type of the predefined multiplication operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-2462">다음 코드 예제에서는 두 값을 곱합니다 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2462">The following code example shows how to create an expression that multiplies two values.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#27)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2463">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2463">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2464">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 곱하기 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2464">The multiplication operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Multiply (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Multiply(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Multiply(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2465">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2465">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2466">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2466">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-2467">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2467">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2468">오버플로를 검사하지 않는 산술 곱하기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2468">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2469">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Multiply" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2469">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Multiply" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2470">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2470">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-2471"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2471">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-2472">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2472">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-2473">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2473">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-2474"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2474">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-2475">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2475">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-2476">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2476">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-2477">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2477">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-2478">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를 사용 하는 노드에 대 한 구현 메서드를은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2478">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="5ff2c-2479">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 곱셈 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2479">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the multiplication operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2480">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2480">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-2481">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2481">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-2482">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2482">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2483">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2483">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2484">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2484">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2485">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2485">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-2486">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2486">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-2487">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2487">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-2488">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2488">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2489">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2489">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2490">노드 유형 미리 정의 된 곱하기 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2490">The type of the node is the result type of the predefined multiplication operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-2491">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2491">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-2492">노드의 유형을 미리 정의 된 곱하기 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2492">The type of the node is the nullable type that corresponds to the result type of the predefined multiplication operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2493">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2493">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2494">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2494">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2495">
            <paramref name="method" />가 <see langword="null" />이고 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 곱하기 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2495">
              <paramref name="method" /> is <see langword="null" /> and the multiplication operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2496">오버플로를 검사하지 않는 곱하기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2496">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2497">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2497">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2498">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2498">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2499">오버플로를 검사하지 않는 곱하기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2499">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2500">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2500">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2501">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2501">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2502">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2502">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-2503">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2503">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2504">오버플로를 검사하지 않는 곱하기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2504">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2505">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2505">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2506">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2506">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2507">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2507">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-2508">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2508">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="5ff2c-2509">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2509">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2510">오버플로를 검사하지 않는 곱하기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2510">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2511">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2511">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyAssignChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2512">오버플로를 검사하는 곱하기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2512">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that has overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssignChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2513">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2513">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2514">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2514">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2515">오버플로를 검사하는 곱하기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2515">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2516">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2516">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssignChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2517">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2517">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2518">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2518">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-2519">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2519">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2520">오버플로를 검사하는 곱하기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2520">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2521">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2521">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssignChecked (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2522">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2522">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2523">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2523">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-2524">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2524">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="5ff2c-2525">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2525">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2526">오버플로를 검사하는 곱하기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2526">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2527">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2527">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2528">오버플로를 검사하는 산술 곱하기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2528">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that has overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2529">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2529">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2530">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2530">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2531">오버플로를 검사하는 산술 곱하기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2531">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2532">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyChecked" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2532">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2533">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2533">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-2534"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2534">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-2535">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2535">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-2536">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2536">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-2537"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2537">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-2538">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2538">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-2539">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2539">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-2540">다음 규칙 작업에 대해 선택 된 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2540">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-2541">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 곱셈 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2541">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the multiplication operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2542">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2542">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-2543">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2543">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-2544">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2544">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2545">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2545">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2546">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2546">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2547">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2547">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-2548">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2548">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-2549">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2549">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-2550">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2550">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2551">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2551">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2552">노드 유형 미리 정의 된 곱하기 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2552">The type of the node is the result type of the predefined multiplication operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-2553">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2553">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-2554">노드의 유형을 미리 정의 된 곱하기 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2554">The type of the node is the nullable type that corresponds to the result type of the predefined multiplication operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2555">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2555">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2556">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 곱하기 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2556">The multiplication operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MultiplyChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2557">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2557">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2558">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2558">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-2559">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2559">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2560">오버플로를 검사하는 산술 곱하기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2560">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2561">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyChecked" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2561">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2562">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2562">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-2563"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2563">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-2564">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2564">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-2565">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2565">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-2566"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2566">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-2567">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2567">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-2568">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2568">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-2569">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2569">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-2570">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를 사용 하는 노드에 대 한 구현 메서드를은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2570">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="5ff2c-2571">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 곱셈 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2571">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the multiplication operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2572">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2572">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-2573">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2573">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-2574">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2574">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2575">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2575">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2576">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2576">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2577">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2577">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-2578">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2578">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-2579">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2579">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-2580">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2580">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2581">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2581">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2582">노드 유형 미리 정의 된 곱하기 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2582">The type of the node is the result type of the predefined multiplication operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-2583">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2583">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-2584">노드의 유형을 미리 정의 된 곱하기 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2584">The type of the node is the nullable type that corresponds to the result type of the predefined multiplication operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2585">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2585">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2586">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2586">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2587">
            <paramref name="method" />가 <see langword="null" />이고 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 곱하기 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2587">
              <paramref name="method" /> is <see langword="null" /> and the multiplication operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Negate">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2588">산술 부정 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2588">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Negate (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Negate(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Negate(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-2589">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2589">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2590">산술 부정 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2590">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2591">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Negate" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2591">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Negate" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2592"><xref:System.Linq.Expressions.UnaryExpression.Method%2A> 결과 속성 <xref:System.Linq.Expressions.UnaryExpression> 구현 방법으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2592">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="5ff2c-2593"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2593">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-2594">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2594">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-2595">그렇지 않으면 서로 false입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2595">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-2596">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2596">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-2597">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2597">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-2598">경우 `expression`합니다. 형식이 단항 빼기 연산자를 정의 하는 사용자 정의 형식이 <xref:System.Reflection.MethodInfo> 나타내는 하는 연산자가 구현 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2598">If `expression`.Type is a user-defined type that defines the unary minus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2599">그렇지 않은 경우, `expression`합니다. 구현 메서드는, 형식이 숫자 형식이 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2599">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-2600">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2600">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-2601">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2601">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2602">경우 `expression`합니다. 형식이 구현 메서드의 인수 형식에 할당할 수, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2602">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2603">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2603">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2604">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2604">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-2605">`expression`. 형식이 nullable 값 형식이 이며 해당 nullable이 아닌 값 형식만 구현 메서드의 인수 형식과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2605">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-2606">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2606">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-2607">구현 메서드가 `null`는 노드 유형이 `expression`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2607">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="5ff2c-2608">경우 `expression`합니다. 형식이 nullable이 아닌, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2608">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2609">그렇지 않으면 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2609">Otherwise, the node is lifted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-2610">다음 예제에서는 산술 부정 연산을 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2610">The following example demonstrates how to create an expression that represents an arithmetic negation operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#50](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#50)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#50](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2611">
            <paramref name="expression" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2611">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2612">
            <paramref name="expression" />.Type에 단항 빼기 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2612">The unary minus operator is not defined for <paramref name="expression" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Negate (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Negate(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Negate(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-2613">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2613">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-2614">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2614">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2615">산술 부정 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2615">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2616">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Negate" /> 및 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2616">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Negate" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2617"><xref:System.Linq.Expressions.UnaryExpression.Method%2A> 결과 속성 <xref:System.Linq.Expressions.UnaryExpression> 구현 방법으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2617">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="5ff2c-2618"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2618">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-2619">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2619">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-2620">그렇지 않으면 서로 false입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2620">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-2621">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2621">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-2622">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2622">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-2623">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드 인수 하나를 사용 하는 노드에 대 한 구현 메서드를은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2623">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes one argument, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="5ff2c-2624">경우 `expression`합니다. 형식이 단항 빼기 연산자를 정의 하는 사용자 정의 형식이 <xref:System.Reflection.MethodInfo> 나타내는 하는 연산자가 구현 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2624">If `expression`.Type is a user-defined type that defines the unary minus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2625">그렇지 않은 경우, `expression`합니다. 구현 메서드는, 형식이 숫자 형식이 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2625">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-2626">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2626">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-2627">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2627">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2628">경우 `expression`합니다. 형식이 구현 메서드의 인수 형식에 할당할 수, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2628">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2629">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2629">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2630">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2630">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-2631">`expression`. 형식이 nullable 값 형식이 이며 해당 nullable이 아닌 값 형식만 구현 메서드의 인수 형식과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2631">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-2632">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2632">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-2633">구현 메서드가 `null`는 노드 유형이 `expression`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2633">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="5ff2c-2634">경우 `expression`합니다. 형식이 nullable이 아닌, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2634">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2635">그렇지 않으면 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2635">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2636">
            <paramref name="expression" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2636">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2637">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 경우 <see langword="Shared" />)이 아니거나, 정확하게 하나의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2637">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2638">
            <paramref name="method" />가 <see langword="null" />이고 <paramref name="expression" />.Type에 단항 빼기 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2638">
              <paramref name="method" /> is <see langword="null" /> and the unary minus operator is not defined for <paramref name="expression" />.Type.</span>
          </span>
          <span data-ttu-id="5ff2c-2639">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2639">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2640">
            <paramref name="expression" />.Type 또는 이 형식이 nullable 값 형식인 경우 nullable이 아닌 해당 형식을 <paramref name="method" />가 나타내는 메서드의 인수 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2640">
              <paramref name="expression" />.Type (or its corresponding non-nullable type if it is a nullable value type) is not assignable to the argument type of the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NegateChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2641">오버플로를 검사하는 산술 부정 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2641">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation that has overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NegateChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression NegateChecked (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression NegateChecked(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ NegateChecked(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-2642">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2642">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2643">오버플로를 검사하는 산술 부정 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2643">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2644">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.NegateChecked" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2644">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NegateChecked" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2645"><xref:System.Linq.Expressions.UnaryExpression.Method%2A> 결과 속성 <xref:System.Linq.Expressions.UnaryExpression> 구현 방법으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2645">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="5ff2c-2646"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2646">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-2647">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2647">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-2648">그렇지 않으면 서로 false입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2648">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-2649">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2649">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-2650">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2650">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-2651">경우 `expression`합니다. 형식이 단항 빼기 연산자를 정의 하는 사용자 정의 형식이 <xref:System.Reflection.MethodInfo> 나타내는 하는 연산자가 구현 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2651">If `expression`.Type is a user-defined type that defines the unary minus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2652">그렇지 않은 경우, `expression`합니다. 구현 메서드는, 형식이 숫자 형식이 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2652">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-2653">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2653">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-2654">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2654">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2655">경우 `expression`합니다. 형식이 구현 메서드의 인수 형식에 할당할 수, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2655">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2656">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2656">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2657">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2657">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-2658">`expression`. 형식이 nullable 값 형식이 이며 해당 nullable이 아닌 값 형식만 구현 메서드의 인수 형식과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2658">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-2659">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2659">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-2660">구현 메서드가 `null`는 노드 유형이 `expression`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2660">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="5ff2c-2661">경우 `expression`합니다. 형식이 nullable이 아닌, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2661">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2662">그렇지 않으면 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2662">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2663">
            <paramref name="expression" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2663">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2664">
            <paramref name="expression" />.Type에 단항 빼기 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2664">The unary minus operator is not defined for <paramref name="expression" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NegateChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression NegateChecked (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression NegateChecked(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ NegateChecked(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-2665">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2665">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-2666">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2666">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2667">오버플로를 검사하는 산술 부정 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2667">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation that has overflow checking.</span>
          </span>
          <span data-ttu-id="5ff2c-2668">구현 메서드를 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2668">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2669">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.NegateChecked" /> 및 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2669">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NegateChecked" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2670"><xref:System.Linq.Expressions.UnaryExpression.Method%2A> 결과 속성 <xref:System.Linq.Expressions.UnaryExpression> 구현 방법으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2670">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="5ff2c-2671"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2671">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-2672">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2672">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-2673">그렇지 않으면 서로 false입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2673">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-2674">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2674">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-2675">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2675">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-2676">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드 인수 하나를 사용 하는 노드에 대 한 구현 메서드를은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2676">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes one argument, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="5ff2c-2677">경우 `expression`합니다. 형식이 단항 빼기 연산자를 정의 하는 사용자 정의 형식이 <xref:System.Reflection.MethodInfo> 나타내는 하는 연산자가 구현 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2677">If `expression`.Type is a user-defined type that defines the unary minus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2678">그렇지 않은 경우, `expression`합니다. 구현 메서드는, 형식이 숫자 형식이 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2678">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-2679">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2679">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-2680">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2680">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2681">경우 `expression`합니다. 형식이 구현 메서드의 인수 형식에 할당할 수, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2681">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2682">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2682">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2683">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2683">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-2684">`expression`. 형식이 nullable 값 형식이 이며 해당 nullable이 아닌 값 형식만 구현 메서드의 인수 형식과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2684">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-2685">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2685">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-2686">구현 메서드가 `null`는 노드 유형이 `expression`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2686">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="5ff2c-2687">경우 `expression`합니다. 형식이 nullable이 아닌, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2687">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2688">그렇지 않으면 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2688">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2689">
            <paramref name="expression" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2689">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2690">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 경우 <see langword="Shared" />)이 아니거나, 정확하게 하나의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2690">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2691">
            <paramref name="method" />가 <see langword="null" />이고 <paramref name="expression" />.Type에 단항 빼기 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2691">
              <paramref name="method" /> is <see langword="null" /> and the unary minus operator is not defined for <paramref name="expression" />.Type.</span>
          </span>
          <span data-ttu-id="5ff2c-2692">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2692">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2693">
            <paramref name="expression" />.Type 또는 이 형식이 nullable 값 형식인 경우 nullable이 아닌 해당 형식을 <paramref name="method" />가 나타내는 메서드의 인수 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2693">
              <paramref name="expression" />.Type (or its corresponding non-nullable type if it is a nullable value type) is not assignable to the argument type of the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="New">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2694">
            <see cref="T:System.Linq.Expressions.NewExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2694">Creates a <see cref="T:System.Linq.Expressions.NewExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Reflection.ConstructorInfo constructor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function New (constructor As ConstructorInfo) As NewExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(System::Reflection::ConstructorInfo ^ constructor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="constructor">
          <span data-ttu-id="5ff2c-2695">
            <see cref="T:System.Reflection.ConstructorInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2695">The <see cref="T:System.Reflection.ConstructorInfo" /> to set the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2696">인수를 받지 않는 지정된 생성자를 호출하는 동작을 나타내는 <see cref="T:System.Linq.Expressions.NewExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2696">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the specified constructor that takes no arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2697">
            <see cref="T:System.Linq.Expressions.NewExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.New" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2697">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2698"><xref:System.Linq.Expressions.NewExpression.Arguments%2A> 및 <xref:System.Linq.Expressions.NewExpression.Members%2A> 결과 속성 <xref:System.Linq.Expressions.NewExpression> 은 빈 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2698">The <xref:System.Linq.Expressions.NewExpression.Arguments%2A> and <xref:System.Linq.Expressions.NewExpression.Members%2A> properties of the resulting <xref:System.Linq.Expressions.NewExpression> are empty collections.</span></span> <span data-ttu-id="5ff2c-2699"><xref:System.Linq.Expressions.Expression.Type%2A> 속성을 나타내는 생성자의 선언 형식이 나타냅니다 `constructor`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2699">The <xref:System.Linq.Expressions.Expression.Type%2A> property represents the declaring type of the constructor represented by `constructor`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2700">
            <paramref name="constructor" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2700">
              <paramref name="constructor" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2701">
            <paramref name="constructor" />가 나타내는 생성자에 매개 변수가 하나 이상 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2701">The constructor that <paramref name="constructor" /> represents has at least one parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-2702">인수를 받지 않는 생성자가 있는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2702">A <see cref="T:System.Type" /> that has a constructor that takes no arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2703">지정된 형식의 매개 변수가 없는 생성자를 호출하는 동작을 나타내는 <see cref="T:System.Linq.Expressions.NewExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2703">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the parameterless constructor of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2704">
            <see cref="T:System.Linq.Expressions.NewExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.New" /> 속성이 지정된 형식에 대한 매개 변수 없이 생성자를 나타내는 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />로 설정된 <see cref="T:System.Reflection.ConstructorInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2704">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property set to the <see cref="T:System.Reflection.ConstructorInfo" /> that represents the constructor without parameters for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2705">`type` 매개 변수를 매개 변수가 없는 생성자를 가진 형식을 나타내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2705">The `type` parameter must represent a type that has a constructor without parameters.</span></span>  
  
 <span data-ttu-id="5ff2c-2706"><xref:System.Linq.Expressions.NewExpression.Arguments%2A> 및 <xref:System.Linq.Expressions.NewExpression.Members%2A> 결과 속성 <xref:System.Linq.Expressions.NewExpression> 은 빈 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2706">The <xref:System.Linq.Expressions.NewExpression.Arguments%2A> and <xref:System.Linq.Expressions.NewExpression.Members%2A> properties of the resulting <xref:System.Linq.Expressions.NewExpression> are empty collections.</span></span> <span data-ttu-id="5ff2c-2707"><xref:System.Linq.Expressions.Expression.Type%2A> 속성이 `type`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2707">The <xref:System.Linq.Expressions.Expression.Type%2A> property is equal to `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-2708">다음 예제에서는 사용 하는 방법을 <xref:System.Linq.Expressions.Expression.New%28System.Type%29> 만드는 메서드를 한 <xref:System.Linq.Expressions.NewExpression> 매개 변수가 없는 생성자를 호출 하 여 사전 개체의 새 인스턴스를 생성을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2708">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.New%28System.Type%29> method to create a <xref:System.Linq.Expressions.NewExpression> that represents constructing a new instance of a dictionary object by calling the constructor without parameters.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#10)]
 [!code-vb[System.Linq.Expressions.Expression#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2709">
            <paramref name="type" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2709">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2710">
            <paramref name="type" />이 나타내는 형식에 매개 변수가 없는 생성자가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2710">The type that <paramref name="type" /> represents does not have a constructor without parameters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Reflection.ConstructorInfo constructor, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function New (constructor As ConstructorInfo, arguments As IEnumerable(Of Expression)) As NewExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(System::Reflection::ConstructorInfo ^ constructor, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="constructor">
          <span data-ttu-id="5ff2c-2711">
            <see cref="T:System.Reflection.ConstructorInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2711">The <see cref="T:System.Reflection.ConstructorInfo" /> to set the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-2712">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.Expression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.NewExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2712">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2713">지정된 인수를 사용하여 지정된 생성자를 호출하는 동작을 나타내는 <see cref="T:System.Linq.Expressions.NewExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2713">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the specified constructor with the specified arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2714">
            <see cref="T:System.Linq.Expressions.NewExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.New" /> 및 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.NewExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2714">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> and <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2715">`arguments` 매개 변수에 나타내는 생성자에 대 한 매개 변수 수가 같은 수의 요소가 포함 되어야 `constructor`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2715">The `arguments` parameter must contain the same number of elements as the number of parameters for the constructor represented by `constructor`.</span></span> <span data-ttu-id="5ff2c-2716">경우 `arguments` 은 `null`는 것이 비어 있는 경우 및 <xref:System.Linq.Expressions.NewExpression.Arguments%2A> 결과 속성 <xref:System.Linq.Expressions.NewExpression> 은 빈 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2716">If `arguments` is `null`, it is considered empty, and the <xref:System.Linq.Expressions.NewExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span>  
  
 <span data-ttu-id="5ff2c-2717"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.NewExpression> 나타내는 생성자의 선언 형식이 나타냅니다 `constructor`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2717">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> represents the declaring type of the constructor represented by `constructor`.</span></span> <span data-ttu-id="5ff2c-2718"><xref:System.Linq.Expressions.NewExpression.Members%2A> 속성은 빈 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2718">The <xref:System.Linq.Expressions.NewExpression.Members%2A> property is an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2719">
            <paramref name="constructor" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2719">
              <paramref name="constructor" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2720">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2720">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2721">
            <paramref name="arguments" />의 요소가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2721">An element of <paramref name="arguments" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2722">
            <paramref name="arguments" /> 매개 변수에 들어 있는 요소 수가 <paramref name="constructor" />가 나타내는 생성자의 매개 변수 수와 다른 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2722">The <paramref name="arguments" /> parameter does not contain the same number of elements as the number of parameters for the constructor that <paramref name="constructor" /> represents.</span>
          </span>
          <span data-ttu-id="5ff2c-2723">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2723">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2724">
            <paramref name="arguments" />의 요소에 대한 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성을 <paramref name="constructor" />가 나타내는 생성자의 해당 매개 변수 형식에 적용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2724">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the constructor that <paramref name="constructor" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Reflection.ConstructorInfo constructor, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function New (constructor As ConstructorInfo, ParamArray arguments As Expression()) As NewExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(System::Reflection::ConstructorInfo ^ constructor, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="constructor">
          <span data-ttu-id="5ff2c-2725">
            <see cref="T:System.Reflection.ConstructorInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2725">The <see cref="T:System.Reflection.ConstructorInfo" /> to set the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-2726">
            <see cref="T:System.Linq.Expressions.Expression" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2726">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2727">지정된 인수를 사용하여 지정된 생성자를 호출하는 동작을 나타내는 <see cref="T:System.Linq.Expressions.NewExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2727">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the specified constructor with the specified arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2728">
            <see cref="T:System.Linq.Expressions.NewExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.New" /> 및 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.NewExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2728">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> and <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2729">`arguments` 매개 변수에 나타내는 생성자에 대 한 매개 변수 수가 같은 수의 요소가 포함 되어야 `constructor`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2729">The `arguments` parameter must contain the same number of elements as the number of parameters for the constructor represented by `constructor`.</span></span> <span data-ttu-id="5ff2c-2730">경우 `arguments` 은 `null`는 것이 비어 있는 경우 및 <xref:System.Linq.Expressions.NewExpression.Arguments%2A> 결과 속성 <xref:System.Linq.Expressions.NewExpression> 은 빈 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2730">If `arguments` is `null`, it is considered empty, and the <xref:System.Linq.Expressions.NewExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span>  
  
 <span data-ttu-id="5ff2c-2731"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.NewExpression> 나타내는 생성자의 선언 형식이 나타냅니다 `constructor`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2731">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> represents the declaring type of the constructor represented by `constructor`.</span></span> <span data-ttu-id="5ff2c-2732"><xref:System.Linq.Expressions.NewExpression.Members%2A> 속성은 빈 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2732">The <xref:System.Linq.Expressions.NewExpression.Members%2A> property is an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2733">
            <paramref name="constructor" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2733">
              <paramref name="constructor" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2734">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2734">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2735">
            <paramref name="arguments" />의 요소가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2735">An element of <paramref name="arguments" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2736">
            <paramref name="arguments" />의 길이가 <paramref name="constructor" />가 나타내는 생성자의 매개 변수 수와 일치하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2736">The length of <paramref name="arguments" /> does match the number of parameters for the constructor that <paramref name="constructor" /> represents.</span>
          </span>
          <span data-ttu-id="5ff2c-2737">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2737">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2738">
            <paramref name="arguments" />의 요소에 대한 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성을 <paramref name="constructor" />가 나타내는 생성자의 해당 매개 변수 형식에 적용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2738">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the constructor that <paramref name="constructor" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments, System.Collections.Generic.IEnumerable&lt;System.Reflection.MemberInfo&gt; members);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Reflection.ConstructorInfo constructor, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.MemberInfo&gt; members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function New (constructor As ConstructorInfo, arguments As IEnumerable(Of Expression), members As IEnumerable(Of MemberInfo)) As NewExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(System::Reflection::ConstructorInfo ^ constructor, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments, System::Collections::Generic::IEnumerable&lt;System::Reflection::MemberInfo ^&gt; ^ members);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
        <Parameter Name="members" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.MemberInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="constructor">
          <span data-ttu-id="5ff2c-2739">
            <see cref="T:System.Reflection.ConstructorInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2739">The <see cref="T:System.Reflection.ConstructorInfo" /> to set the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-2740">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.Expression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.NewExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2740">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="5ff2c-2741">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Reflection.MemberInfo" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.NewExpression.Members" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2741">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Reflection.MemberInfo" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Members" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2742">지정된 인수를 사용하여 지정된 생성자를 호출하는 동작을 나타내는 <see cref="T:System.Linq.Expressions.NewExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2742">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the specified constructor with the specified arguments.</span>
          </span>
          <span data-ttu-id="5ff2c-2743">생성자에서 초기화되는 필드에 액세스하는 멤버가 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2743">The members that access the constructor initialized fields are specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2744">
            <see cref="T:System.Linq.Expressions.NewExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.New" />, <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> 및 <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.NewExpression.Members" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2744">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />, <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> and <see cref="P:System.Linq.Expressions.NewExpression.Members" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2745">`arguments` 매개 변수에 나타내는 생성자에 대 한 매개 변수 수가 같은 수의 요소가 포함 되어야 `constructor`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2745">The `arguments` parameter must contain the same number of elements as the number of parameters for the constructor represented by `constructor`.</span></span> <span data-ttu-id="5ff2c-2746">경우 `arguments` 은 `null`는 것이 비어 있는 경우 및 <xref:System.Linq.Expressions.NewExpression.Arguments%2A> 결과 속성 <xref:System.Linq.Expressions.NewExpression> 은 빈 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2746">If `arguments` is `null`, it is considered empty, and the <xref:System.Linq.Expressions.NewExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span>  
  
 <span data-ttu-id="5ff2c-2747">경우 `members` 은 `null`, <xref:System.Linq.Expressions.NewExpression.Members%2A> 결과 속성 <xref:System.Linq.Expressions.NewExpression> 은 빈 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2747">If `members` is `null`, the <xref:System.Linq.Expressions.NewExpression.Members%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span> <span data-ttu-id="5ff2c-2748">경우 `members` 않습니다 `null`, 요소를 동일한 수 있어야 `arguments` 각 요소 아니어야 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2748">If `members` is not `null`, it must have the same number of elements as `arguments` and each element must not be `null`.</span></span> <span data-ttu-id="5ff2c-2749">각 요소 `members` 이어야 합니다는 <xref:System.Reflection.PropertyInfo>, <xref:System.Reflection.FieldInfo> 또는 <xref:System.Reflection.MethodInfo> 나타내는 생성자의 선언 형식이에 인스턴스 멤버를 나타내는 `constructor`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2749">Each element of `members` must be a <xref:System.Reflection.PropertyInfo>, <xref:System.Reflection.FieldInfo> or <xref:System.Reflection.MethodInfo> that represents an instance member on the declaring type of the constructor represented by `constructor`.</span></span> <span data-ttu-id="5ff2c-2750">속성을 나타내는 경우 속성 있어야는 `get` 접근자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2750">If it represents a property, the property must have a `get` accessor.</span></span> <span data-ttu-id="5ff2c-2751">해당 요소 `arguments` 의 각 요소에 대 한 `members` 있어야는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성 멤버의 형식에 할당할 수 있는 형식을 나타내는 하는 `members` 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2751">The corresponding element of `arguments` for each element of `members` must have a <xref:System.Linq.Expressions.Expression.Type%2A> property that represents a type that is assignable to the type of the member that the `members` element represents.</span></span>  
  
 <span data-ttu-id="5ff2c-2752"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.NewExpression> 생성자의 선언 형식을 나타냅니다는 `constructor` 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2752">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> represents the declaring type of the constructor that `constructor` represents.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2753">
            <paramref name="constructor" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2753">
              <paramref name="constructor" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2754">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2754">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2755">
            <paramref name="arguments" />의 요소가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2755">An element of <paramref name="arguments" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2756">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2756">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2757">
            <paramref name="members" />의 요소가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2757">An element of <paramref name="members" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2758">
            <paramref name="arguments" /> 매개 변수에 들어 있는 요소 수가 <paramref name="constructor" />가 나타내는 생성자의 매개 변수 수와 다른 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2758">The <paramref name="arguments" /> parameter does not contain the same number of elements as the number of parameters for the constructor that <paramref name="constructor" /> represents.</span>
          </span>
          <span data-ttu-id="5ff2c-2759">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2759">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2760">
            <paramref name="arguments" />의 요소에 대한 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성을 <paramref name="constructor" />가 나타내는 생성자의 해당 매개 변수 형식에 적용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2760">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the constructor that <paramref name="constructor" /> represents.</span>
          </span>
          <span data-ttu-id="5ff2c-2761">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2761">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2762">
            <paramref name="members" /> 매개 변수의 요소 수가 <paramref name="arguments" />와 다른 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2762">The <paramref name="members" /> parameter does not have the same number of elements as <paramref name="arguments" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2763">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2763">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2764">
            <paramref name="arguments" />에 있는 요소의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성이 나타내는 형식을 <paramref name="members" />의 해당 속성이 나타내는 멤버 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2764">An element of <paramref name="arguments" /> has a <see cref="P:System.Linq.Expressions.Expression.Type" /> property that represents a type that is not assignable to the type of the member that is represented by the corresponding element of <paramref name="members" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments, params System.Reflection.MemberInfo[] members);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Reflection.ConstructorInfo constructor, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments, class System.Reflection.MemberInfo[] members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function New (constructor As ConstructorInfo, arguments As IEnumerable(Of Expression), ParamArray members As MemberInfo()) As NewExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(System::Reflection::ConstructorInfo ^ constructor, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments, ... cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ members);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
        <Parameter Name="members" Type="System.Reflection.MemberInfo[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="constructor">
          <span data-ttu-id="5ff2c-2765">
            <see cref="T:System.Reflection.ConstructorInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2765">The <see cref="T:System.Reflection.ConstructorInfo" /> to set the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-2766">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.Expression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.NewExpression.Arguments" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2766">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="5ff2c-2767">
            <see cref="T:System.Reflection.MemberInfo" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.NewExpression.Members" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2767">An array of <see cref="T:System.Reflection.MemberInfo" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Members" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2768">지정된 인수를 사용하여 지정된 생성자를 호출하는 동작을 나타내는 <see cref="T:System.Linq.Expressions.NewExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2768">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the specified constructor with the specified arguments.</span>
          </span>
          <span data-ttu-id="5ff2c-2769">생성자에서 초기화되는 필드에 액세스하는 멤버가 배열로 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2769">The members that access the constructor initialized fields are specified as an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2770">
            <see cref="T:System.Linq.Expressions.NewExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.New" />, <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> 및 <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.NewExpression.Members" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2770">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />, <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> and <see cref="P:System.Linq.Expressions.NewExpression.Members" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2771">`arguments` 매개 변수에 나타내는 생성자에 대 한 매개 변수 수가 같은 수의 요소가 포함 되어야 `constructor`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2771">The `arguments` parameter must contain the same number of elements as the number of parameters for the constructor represented by `constructor`.</span></span> <span data-ttu-id="5ff2c-2772">경우 `arguments` 은 `null`는 것이 비어 있는 경우 및 <xref:System.Linq.Expressions.NewExpression.Arguments%2A> 결과 속성 <xref:System.Linq.Expressions.NewExpression> 은 빈 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2772">If `arguments` is `null`, it is considered empty, and the <xref:System.Linq.Expressions.NewExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span>  
  
 <span data-ttu-id="5ff2c-2773">경우 `members` 은 `null`, <xref:System.Linq.Expressions.NewExpression.Members%2A> 결과 속성 <xref:System.Linq.Expressions.NewExpression> 은 빈 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2773">If `members` is `null`, the <xref:System.Linq.Expressions.NewExpression.Members%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span> <span data-ttu-id="5ff2c-2774">경우 `members` 않습니다 `null`, 요소를 동일한 수 있어야 `arguments` 각 요소 아니어야 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2774">If `members` is not `null`, it must have the same number of elements as `arguments` and each element must not be `null`.</span></span> <span data-ttu-id="5ff2c-2775">각 요소 `members` 이어야 합니다는 <xref:System.Reflection.PropertyInfo>, <xref:System.Reflection.FieldInfo> 또는 <xref:System.Reflection.MethodInfo> 나타내는 생성자의 선언 형식이에 인스턴스 멤버를 나타내는 `constructor`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2775">Each element of `members` must be a <xref:System.Reflection.PropertyInfo>, <xref:System.Reflection.FieldInfo> or <xref:System.Reflection.MethodInfo> that represents an instance member on the declaring type of the constructor represented by `constructor`.</span></span> <span data-ttu-id="5ff2c-2776">속성을 나타내는 경우 속성 연결 된 필드의 값을 검색할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2776">If it represents a property, the property must be able to retrieve the value of the associated field.</span></span> <span data-ttu-id="5ff2c-2777">해당 요소 `arguments` 의 각 요소에 대 한 `members` 있어야는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성 멤버의 형식에 할당할 수 있는 형식을 나타내는 하는 `members` 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2777">The corresponding element of `arguments` for each element of `members` must have a <xref:System.Linq.Expressions.Expression.Type%2A> property that represents a type that is assignable to the type of the member that the `members` element represents.</span></span>  
  
 <span data-ttu-id="5ff2c-2778"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.NewExpression> 생성자의 선언 형식을 나타냅니다는 `constructor` 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2778">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> represents the declaring type of the constructor that `constructor` represents.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2779">
            <paramref name="constructor" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2779">
              <paramref name="constructor" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2780">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2780">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2781">
            <paramref name="arguments" />의 요소가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2781">An element of <paramref name="arguments" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2782">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2782">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2783">
            <paramref name="members" />의 요소가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2783">An element of <paramref name="members" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2784">
            <paramref name="arguments" /> 매개 변수에 들어 있는 요소 수가 <paramref name="constructor" />가 나타내는 생성자의 매개 변수 수와 다른 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2784">The <paramref name="arguments" /> parameter does not contain the same number of elements as the number of parameters for the constructor that <paramref name="constructor" /> represents.</span>
          </span>
          <span data-ttu-id="5ff2c-2785">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2785">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2786">
            <paramref name="arguments" />의 요소에 대한 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성을 <paramref name="constructor" />가 나타내는 생성자의 해당 매개 변수 형식에 적용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2786">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the constructor that <paramref name="constructor" /> represents.</span>
          </span>
          <span data-ttu-id="5ff2c-2787">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2787">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2788">
            <paramref name="members" /> 매개 변수의 요소 수가 <paramref name="arguments" />와 다른 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2788">The <paramref name="members" /> parameter does not have the same number of elements as <paramref name="arguments" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2789">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2789">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2790">
            <paramref name="arguments" />에 있는 요소의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성이 나타내는 형식을 <paramref name="members" />의 해당 속성이 나타내는 멤버 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2790">An element of <paramref name="arguments" /> has a <see cref="P:System.Linq.Expressions.Expression.Type" /> property that represents a type that is not assignable to the type of the member that is represented by the corresponding element of <paramref name="members" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NewArrayBounds">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2791">지정된 차수의 배열을 만드는 동작을 나타내는 <see cref="T:System.Linq.Expressions.NewArrayExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2791">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating an array that has a specified rank.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NewArrayBounds">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewArrayExpression NewArrayBounds (Type type, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewArrayExpression NewArrayBounds(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewArrayExpression ^ NewArrayBounds(Type ^ type, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ bounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewArrayExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bounds" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-2792">배열의 요소 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2792">A <see cref="T:System.Type" /> that represents the element type of the array.</span>
          </span>
        </param>
        <param name="bounds">
          <span data-ttu-id="5ff2c-2793">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.Expression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2793">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2794">지정된 차수의 배열을 만드는 동작을 나타내는 <see cref="T:System.Linq.Expressions.NewArrayExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2794">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating an array that has a specified rank.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2795">
            <see cref="T:System.Linq.Expressions.NewArrayExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2795">A <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" /> and the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2796"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.NewArrayExpression> 차수가의 길이 같으면 배열 형식을 나타냅니다 `bounds` 가지 며 요소 형식이 고 `type`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2796">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewArrayExpression> represents an array type whose rank is equal to the length of `bounds` and whose element type is `type`.</span></span>  
  
 <span data-ttu-id="5ff2c-2797"><xref:System.Linq.Expressions.Expression.Type%2A> 속성의 각 요소로 `bounds` 는 정수 계열 형식을 나타내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2797">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `bounds` must represent an integral type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-2798">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> 2 순위가 방법을 사용 하는 문자열 배열을 만드는 동작을 나타내는 식 트리를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2798">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> method to create an expression tree that represents creating a string array that has a rank of 2.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#2)]
 [!code-vb[System.Linq.Expressions.Expression#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2799">
            <paramref name="type" /> 또는 <paramref name="bounds" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2799">
              <paramref name="type" /> or <paramref name="bounds" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2800">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2800">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2801">
            <paramref name="bounds" />의 요소가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2801">An element of <paramref name="bounds" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2802">
            <paramref name="bounds" />에 있는 요소의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성이 정수 계열 형식을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2802">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="bounds" /> does not represent an integral type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewArrayBounds">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewArrayExpression NewArrayBounds (Type type, params System.Linq.Expressions.Expression[] bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewArrayExpression NewArrayBounds(class System.Type type, class System.Linq.Expressions.Expression[] bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewArrayExpression ^ NewArrayBounds(Type ^ type, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ bounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewArrayExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bounds" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-2803">배열의 요소 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2803">A <see cref="T:System.Type" /> that represents the element type of the array.</span>
          </span>
        </param>
        <param name="bounds">
          <span data-ttu-id="5ff2c-2804">
            <see cref="T:System.Linq.Expressions.Expression" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2804">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2805">지정된 차수의 배열을 만드는 동작을 나타내는 <see cref="T:System.Linq.Expressions.NewArrayExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2805">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating an array that has a specified rank.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2806">
            <see cref="T:System.Linq.Expressions.NewArrayExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2806">A <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" /> and the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2807"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.NewArrayExpression> 차수가의 길이 같으면 배열 형식을 나타냅니다 `bounds` 가지 며 요소 형식이 고 `type`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2807">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewArrayExpression> represents an array type whose rank is equal to the length of `bounds` and whose element type is `type`.</span></span>  
  
 <span data-ttu-id="5ff2c-2808"><xref:System.Linq.Expressions.Expression.Type%2A> 속성의 각 요소로 `bounds` 는 정수 계열 형식을 나타내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2808">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `bounds` must represent an integral type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-2809">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> 2 순위가 방법을 사용 하는 문자열 배열을 만드는 동작을 나타내는 식 트리를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2809">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> method to create an expression tree that represents creating a string array that has a rank of 2.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#2)]
 [!code-vb[System.Linq.Expressions.Expression#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2810">
            <paramref name="type" /> 또는 <paramref name="bounds" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2810">
              <paramref name="type" /> or <paramref name="bounds" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2811">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2811">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2812">
            <paramref name="bounds" />의 요소가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2812">An element of <paramref name="bounds" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2813">
            <paramref name="bounds" />에 있는 요소의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성이 정수 계열 형식을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2813">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="bounds" /> does not represent an integral type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NewArrayInit">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2814">1차원 배열을 만들고 요소 목록으로 초기화하는 동작을 나타내는 <see cref="T:System.Linq.Expressions.NewArrayExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2814">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating a one-dimensional array and initializing it from a list of elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NewArrayInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewArrayExpression NewArrayInit (Type type, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewArrayExpression NewArrayInit(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewArrayExpression ^ NewArrayInit(Type ^ type, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewArrayExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-2815">배열의 요소 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2815">A <see cref="T:System.Type" /> that represents the element type of the array.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="5ff2c-2816">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 컬렉션을 채우는 데 사용할 <see cref="T:System.Linq.Expressions.Expression" /> 개체가 포함된 <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2816">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2817">1차원 배열을 만들고 요소 목록으로 초기화하는 동작을 나타내는 <see cref="T:System.Linq.Expressions.NewArrayExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2817">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating a one-dimensional array and initializing it from a list of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2818">
            <see cref="T:System.Linq.Expressions.NewArrayExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2818">A <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" /> and the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2819"><xref:System.Linq.Expressions.Expression.Type%2A> 속성의 각 요소로 `initializers` 나타내는 형식에 할당할 수 있는 형식을 나타내야 `type`도 않아 *따옴표 붙은*합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2819">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `initializers` must represent a type that is assignable to the type represented by `type`, possibly after it is *quoted*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5ff2c-2820">경우에 요소 인용 됩니다 `type` 은 <xref:System.Linq.Expressions.Expression>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2820">An element will be quoted only if `type` is <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="5ff2c-2821">요소에 래핑됩니다 인용는 <xref:System.Linq.Expressions.ExpressionType.Quote> 노드.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2821">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="5ff2c-2822">결과 노드는 <xref:System.Linq.Expressions.UnaryExpression> 인 <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> 속성의 요소인 `initializers`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2822">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `initializers`.</span></span>  
  
 <span data-ttu-id="5ff2c-2823"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.NewArrayExpression> 배열 형식을 나타내는 차수가 1이 고 요소 형식이 `type`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2823">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewArrayExpression> represents an array type whose rank is 1 and whose element type is `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-2824">다음 예제에서는 사용 하는 방법을 <xref:System.Linq.Expressions.Expression.NewArrayInit%2A> 방법을 사용 하는 1 차원 문자열 배열을 만드는 동작을 나타내는 식 트리를 만들 수는 문자열 식의 목록으로 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2824">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.NewArrayInit%2A> method to create an expression tree that represents creating a one-dimensional string array that is initialized with a list of string expressions.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#1)]
 [!code-vb[System.Linq.Expressions.Expression#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2825">
            <paramref name="type" /> 또는 <paramref name="initializers" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2825">
              <paramref name="type" /> or <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2826">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2826">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2827">
            <paramref name="initializers" />의 요소가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2827">An element of <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2828">
            <paramref name="initializers" />에 있는 요소의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성이 나타내는 형식을 <paramref name="type" />이 나타내는 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2828">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="initializers" /> represents a type that is not assignable to the type that <paramref name="type" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewArrayInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewArrayExpression NewArrayInit (Type type, params System.Linq.Expressions.Expression[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewArrayExpression NewArrayInit(class System.Type type, class System.Linq.Expressions.Expression[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewArrayExpression ^ NewArrayInit(Type ^ type, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewArrayExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-2829">배열의 요소 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2829">A <see cref="T:System.Type" /> that represents the element type of the array.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="5ff2c-2830">
            <see cref="T:System.Linq.Expressions.Expression" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2830">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2831">1차원 배열을 만들고 요소 목록으로 초기화하는 동작을 나타내는 <see cref="T:System.Linq.Expressions.NewArrayExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2831">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating a one-dimensional array and initializing it from a list of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2832">
            <see cref="T:System.Linq.Expressions.NewArrayExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2832">A <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" /> and the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2833"><xref:System.Linq.Expressions.Expression.Type%2A> 속성의 각 요소로 `initializers` 나타내는 형식에 할당할 수 있는 형식을 나타내야 `type`도 않아 *따옴표 붙은*합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2833">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `initializers` must represent a type that is assignable to the type represented by `type`, possibly after it is *quoted*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5ff2c-2834">경우에 요소 인용 됩니다 `type` 은 <xref:System.Linq.Expressions.Expression>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2834">An element will be quoted only if `type` is <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="5ff2c-2835">요소에 래핑됩니다 인용는 <xref:System.Linq.Expressions.ExpressionType.Quote> 노드.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2835">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="5ff2c-2836">결과 노드는 <xref:System.Linq.Expressions.UnaryExpression> 인 <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> 속성의 요소인 `initializers`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2836">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `initializers`.</span></span>  
  
 <span data-ttu-id="5ff2c-2837"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.NewArrayExpression> 배열 형식을 나타내는 차수가 1이 고 요소 형식이 `type`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2837">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewArrayExpression> represents an array type whose rank is 1 and whose element type is `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-2838">다음 예제에서는 사용 하는 방법을 <xref:System.Linq.Expressions.Expression.NewArrayInit%2A> 방법을 사용 하는 1 차원 문자열 배열을 만드는 동작을 나타내는 식 트리를 만들 수는 문자열 식의 목록으로 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2838">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.NewArrayInit%2A> method to create an expression tree that represents creating a one-dimensional string array that is initialized with a list of string expressions.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#1)]
 [!code-vb[System.Linq.Expressions.Expression#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2839">
            <paramref name="type" /> 또는 <paramref name="initializers" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2839">
              <paramref name="type" /> or <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-2840">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2840">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2841">
            <paramref name="initializers" />의 요소가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2841">An element of <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2842">
            <paramref name="initializers" />에 있는 요소의 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성이 나타내는 형식을 <paramref name="type" /> 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2842">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="initializers" /> represents a type that is not assignable to the type <paramref name="type" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.ExpressionType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Linq.Expressions.ExpressionType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.Expression.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NodeType As ExpressionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::Expressions::ExpressionType NodeType { System::Linq::Expressions::ExpressionType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ExpressionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2843">이 <see cref="T:System.Linq.Expressions.Expression" />의 노드 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2843">Gets the node type of this <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ff2c-2844">
            <see cref="T:System.Linq.Expressions.ExpressionType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2844">One of the <see cref="T:System.Linq.Expressions.ExpressionType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2845"><xref:System.Linq.Expressions.Expression.NodeType%2A> 속성에 대 한 더 특수 한 설명을 제공는 <xref:System.Linq.Expressions.Expression> 방금에서 파생 된 형식 보다 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2845">The <xref:System.Linq.Expressions.Expression.NodeType%2A> property provides a more specialized description of an <xref:System.Linq.Expressions.Expression> than just its derived type.</span></span> <span data-ttu-id="5ff2c-2846">예를 들어 한 <xref:System.Linq.Expressions.BinaryExpression> 나누기 연산을 또는 "보다 큼" 작업과 같이 이진 식의 다양 한 종류를 나타내는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2846">For example, a <xref:System.Linq.Expressions.BinaryExpression> can be used to represent many different kinds of binary expressions, such as a division operation or a "greater than" operation.</span></span> <span data-ttu-id="5ff2c-2847"><xref:System.Linq.Expressions.Expression.NodeType%2A> 속성으로 이러한 이진 식 설명 <xref:System.Linq.Expressions.ExpressionType.Divide> 및 <xref:System.Linq.Expressions.ExpressionType.GreaterThan>각각.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2847">The <xref:System.Linq.Expressions.Expression.NodeType%2A> property would describe these binary expressions as <xref:System.Linq.Expressions.ExpressionType.Divide> and <xref:System.Linq.Expressions.ExpressionType.GreaterThan>, respectively.</span></span>  
  
 <span data-ttu-id="5ff2c-2848">식의 정적 CLR 형식을 하는 <xref:System.Linq.Expressions.Expression> 개체에서 나타내는로 표시 됩니다는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2848">The static CLR type of the expression that the <xref:System.Linq.Expressions.Expression> object represents is represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Not">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2849">비트 보수 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2849">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a bitwise complement operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Not (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Not(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Not(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-2850">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2850">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2851">비트 보수 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2851">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a bitwise complement operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2852">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Not" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2852">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Not" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2853"><xref:System.Linq.Expressions.UnaryExpression.Method%2A> 결과 속성 <xref:System.Linq.Expressions.UnaryExpression> 구현 방법으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2853">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="5ff2c-2854"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2854">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-2855">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2855">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-2856">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2856">Otherwise, they are `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-2857">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2857">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-2858">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2858">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-2859">경우 `expression`합니다. 형식이 단항 부정 연산자를 정의 하는 사용자 정의 형식이 <xref:System.Reflection.MethodInfo> 나타내는 하는 연산자가 구현 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2859">If `expression`.Type is a user-defined type that defines the unary not operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2860">그렇지 않은 경우, `expression`합니다. 형식은 숫자 또는 부울 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2860">Otherwise, if `expression`.Type is a numeric or Boolean type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-2861">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2861">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-2862">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2862">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2863">경우 `expression`합니다. 형식이 구현 메서드의 인수 형식에 할당할 수, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2863">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2864">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2864">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2865">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2865">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-2866">`expression`. 형식이 nullable 값 형식이 이며 해당 형식이 nullable이 아닌 구현 메서드의 인수 형식과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2866">`expression`.Type is a nullable value type and the corresponding non-nullable type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-2867">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2867">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-2868">구현 메서드가 `null`는 노드 유형이 `expression`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2868">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="5ff2c-2869">경우 `expression`합니다. 형식이 nullable이 아닌, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2869">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2870">그렇지 않으면 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2870">Otherwise, the node is lifted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-2871">다음 예제에는 논리를 나타내는 식을 만드는 방법을 보여 줍니다 작업 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2871">The following example demonstrates how to create an expression that represents a logical NOT operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#51](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#51)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#51](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2872">
            <paramref name="expression" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2872">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2873">
            <paramref name="expression" />.Type에 단항 Not 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2873">The unary not operator is not defined for <paramref name="expression" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Not (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Not(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Not(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-2874">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2874">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-2875">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2875">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2876">비트 보수 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2876">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a bitwise complement operation.</span>
          </span>
          <span data-ttu-id="5ff2c-2877">구현 메서드를 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2877">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2878">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Not" /> 및 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2878">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Not" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2879"><xref:System.Linq.Expressions.UnaryExpression.Method%2A> 결과 속성 <xref:System.Linq.Expressions.UnaryExpression> 구현 방법으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2879">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="5ff2c-2880"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2880">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-2881">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2881">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-2882">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2882">Otherwise, they are `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-2883">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2883">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-2884">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2884">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-2885">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드 인수 하나를 사용 하는 노드에 대 한 구현 메서드를은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2885">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes one argument, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="5ff2c-2886">경우 `expression`합니다. 형식이 단항 부정 연산자를 정의 하는 사용자 정의 형식이 <xref:System.Reflection.MethodInfo> 나타내는 하는 연산자가 구현 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2886">If `expression`.Type is a user-defined type that defines the unary not operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2887">그렇지 않은 경우, `expression`합니다. 구현 메서드는, 형식이 숫자 형식이 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2887">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-2888">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2888">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-2889">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2889">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2890">경우 `expression`합니다. 형식이 구현 메서드의 인수 형식에 할당할 수, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2890">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2891">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2891">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2892">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2892">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-2893">`expression`. 형식이 nullable 값 형식이 이며 해당 nullable이 아닌 값 형식만 구현 메서드의 인수 형식과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2893">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-2894">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2894">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-2895">구현 메서드가 `null`는 노드 유형이 `expression`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2895">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="5ff2c-2896">경우 `expression`합니다. 형식이 nullable이 아닌, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2896">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2897">그렇지 않으면 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2897">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2898">
            <paramref name="expression" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2898">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2899">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 경우 <see langword="Shared" />)이 아니거나, 정확하게 하나의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2899">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2900">
            <paramref name="method" />가 <see langword="null" />이고 <paramref name="expression" />.Type에 단항 Not 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2900">
              <paramref name="method" /> is <see langword="null" /> and the unary not operator is not defined for <paramref name="expression" />.Type.</span>
          </span>
          <span data-ttu-id="5ff2c-2901">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2901">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-2902">
            <paramref name="expression" />.Type 또는 이 형식이 nullable 값 형식인 경우 nullable이 아닌 해당 형식을 <paramref name="method" />가 나타내는 메서드의 인수 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2902">
              <paramref name="expression" />.Type (or its corresponding non-nullable type if it is a nullable value type) is not assignable to the argument type of the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NotEqual">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2903">다름 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2903">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an inequality comparison.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression NotEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression NotEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotEqual (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ NotEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2904">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2904">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2905">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2905">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2906">다름 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2906">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an inequality comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2907">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2907">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2908">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2908">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-2909"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2909">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-2910">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 속성은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2910">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="5ff2c-2911">그렇지 않으면 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2911">Otherwise, it is `false`.</span></span> <span data-ttu-id="5ff2c-2912"><xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 항상 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2912">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="5ff2c-2913"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2913">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-2914">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2914">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-2915">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2915">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-2916">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2916">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-2917">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 같지 않음 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2917">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the inequality operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2918">구현 메서드는 그렇지 않은 경우 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2918">Otherwise, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-2919">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2919">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-2920">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2920">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2921">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2921">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2922">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2922">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2923">다음 두 조건을 충족 하는 노드가 리프트 된 및 노드 형식이 <xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2923">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="5ff2c-2924">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2924">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-2925">구현 메서드의 반환 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2925">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="5ff2c-2926">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2926">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2927">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2927">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2928">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2928">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="5ff2c-2929">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2929">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-2930">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2930">The type of the node is <xref:System.Boolean>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2931">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2931">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2932">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 다름 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2932">The inequality operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression NotEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression NotEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotEqual (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ NotEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2933">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2933">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2934">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2934">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="liftToNull">
          <span data-ttu-id="5ff2c-2935">
            <see langword="true" />를 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />로 설정하려면 <see langword="true" />이고, <see langword="false" />를 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />로 설정하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2935">
              <see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-2936">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2936">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2937">다름 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2937">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an inequality comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2938">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2938">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2939">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2939">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-2940"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2940">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-2941">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 속성은 `true` 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성이 `liftToNull`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2941">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="5ff2c-2942">그렇지 않은 경우는 모두 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2942">Otherwise, they are both `false`.</span></span> <span data-ttu-id="5ff2c-2943"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2943">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-2944">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2944">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-2945">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2945">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-2946">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2946">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-2947">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를은 구현 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2947">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2948">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 같지 않음 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2948">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the inequality operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2949">구현 메서드는 그렇지 않은 경우 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2949">Otherwise, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-2950">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2950">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-2951">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2951">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2952">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2952">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2953">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2953">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2954">다음 두 가지 조건을 충족 하는 경우 노드 적용 되지 않습니다. 또한 노드의 형식이 nullable <xref:System.Boolean> 경우 `liftToNull` 은 `true` 또는 <xref:System.Boolean> 경우 `liftToNull` 은 `false`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2954">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="5ff2c-2955">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2955">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-2956">구현 메서드의 반환 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2956">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="5ff2c-2957">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2957">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2958">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2958">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2959">노드 형식이 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2959">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="5ff2c-2960">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2960">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-2961">노드 형식이 nullable <xref:System.Boolean> 경우 `liftToNull` 은 `true` 또는 <xref:System.Boolean> 경우 `liftToNull` 은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2961">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-2962">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2962">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-2963">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2963">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-2964">
            <paramref name="method" />가 <see langword="null" />이고 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 다름 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2964">
              <paramref name="method" /> is <see langword="null" /> and the inequality operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OnesComplement">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2965">1의 보수를 나타내는 식을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2965">Returns the expression representing the ones complement.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression OnesComplement (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression OnesComplement(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ OnesComplement(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-2966">
            <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2966">An <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2967">1의 보수를 나타내는 식을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2967">Returns the expression representing the ones complement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2968">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2968">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression OnesComplement (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression OnesComplement(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ OnesComplement(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-2969">
            <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2969">An <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-2970">구현 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2970">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2971">1의 보수를 나타내는 식을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2971">Returns the expression representing the ones complement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2972">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2972">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Or">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-2973">비트 <see cref="T:System.Linq.Expressions.BinaryExpression" /> 연산을 나타내는 <see langword="OR" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2973">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="OR" /> operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Or (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Or(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Or (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Or(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-2974">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2974">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-2975">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2975">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-2976">비트 <see cref="T:System.Linq.Expressions.BinaryExpression" /> 연산을 나타내는 <see langword="OR" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2976">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="OR" /> operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-2977">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Or" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-2977">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Or" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-2978">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2978">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-2979"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2979">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-2980">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2980">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-2981">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2981">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-2982"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2982">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-2983">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2983">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-2984">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2984">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-2985">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2985">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-2986">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 비트 오버 로드 하는 사용자 정의 형식을 나타내는 `OR` 연산자는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2986">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `OR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2987">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 정수 또는 부울 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2987">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-2988">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2988">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-2989">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2989">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2990">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2990">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2991">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2991">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-2992">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2992">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-2993">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2993">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-2994">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2994">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-2995">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2995">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-2996">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2996">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-2997">노드의 유형을 결과의 형식인 미리 정의 된 비트 `OR` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2997">The type of the node is the result type of the predefined bitwise `OR` operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-2998">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2998">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-2999">노드의 유형을 결과 형식을 미리 정의 된 비트에 해당 하는 nullable 형식 `OR` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-2999">The type of the node is the nullable type that corresponds to the result type of the predefined bitwise `OR` operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-3000">다음 코드 예제에는 논리적 OR 연산을 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3000">The following code example shows how to create an expression that represents a logical OR operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#28)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3001">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3001">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-3002">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 비트 <see langword="OR" /> 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3002">The bitwise <see langword="OR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Or (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Or(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Or (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Or(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3003">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3003">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3004">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3004">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3005">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3005">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3006">비트 <see cref="T:System.Linq.Expressions.BinaryExpression" /> 연산을 나타내는 <see langword="OR" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3006">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="OR" /> operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3007">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Or" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3007">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Or" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3008">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3008">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-3009"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3009">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-3010">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3010">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-3011">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3011">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-3012"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3012">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-3013">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3013">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-3014">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3014">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-3015">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3015">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-3016">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를은 구현 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3016">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3017">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 비트 오버 로드 하는 사용자 정의 형식을 나타내는 `OR` 연산자는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3017">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `OR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3018">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 정수 또는 부울 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3018">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-3019">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3019">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-3020">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3020">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3021">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3021">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3022">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3022">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3023">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3023">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-3024">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3024">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-3025">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3025">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-3026">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3026">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3027">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3027">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3028">노드의 유형을 결과의 형식인 미리 정의 된 비트 `OR` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3028">The type of the node is the result type of the predefined bitwise `OR` operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-3029">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3029">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-3030">노드의 유형을 결과 형식을 미리 정의 된 비트에 해당 하는 nullable 형식 `OR` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3030">The type of the node is the nullable type that corresponds to the result type of the predefined bitwise `OR` operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3031">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3031">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-3032">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3032">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-3033">
            <paramref name="method" />가 <see langword="null" />이고 비트 <see langword="OR" /> 연산자가 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 대해 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3033">
              <paramref name="method" /> is <see langword="null" /> and the bitwise <see langword="OR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3034">비트 OR 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3034">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise OR assignment operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression OrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression OrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ OrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3035">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3035">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3036">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3036">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3037">비트 OR 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3037">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise OR assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3038">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3038">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression OrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression OrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ OrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3039">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3039">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3040">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3040">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3041">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3041">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3042">비트 OR 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3042">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise OR assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3043">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3043">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression OrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression OrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ OrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3044">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3044">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3045">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3045">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3046">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3046">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="5ff2c-3047">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3047">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3048">비트 OR 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3048">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise OR assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3049">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3049">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrElse">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3050">첫 번째 연산자가 <see cref="T:System.Linq.Expressions.BinaryExpression" />로 계산되는 경우에만 두 번째 피연산자를 계산하는 조건부 <see langword="OR" /> 연산을 나타내는 <see langword="false" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3050">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="OR" /> operation that evaluates the second operand only if the first operator evaluates to <see langword="false" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrElse">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression OrElse (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression OrElse(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrElse (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ OrElse(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3051">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3051">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3052">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3052">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3053">첫 번째 피연산자가 <see cref="T:System.Linq.Expressions.BinaryExpression" />로 계산되는 경우에만 두 번째 피연산자를 계산하는 조건부 <see langword="OR" /> 연산을 나타내는 <see langword="false" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3053">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="OR" /> operation that evaluates the second operand only if the first operand evaluates to <see langword="false" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3054">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.OrElse" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3054">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.OrElse" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3055">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3055">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-3056"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3056">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-3057">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3057">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-3058">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3058">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-3059"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3059">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-3060">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3060">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-3061">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3061">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-3062">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3062">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-3063">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 비트 오버 로드 하는 사용자 정의 형식을 나타내는 `OR` 연산자는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3063">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `OR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="5ff2c-3064">조건부 `OR` C# 또는 Visual Basic 연산자를 오버 로드할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3064">The conditional `OR` operator cannot be overloaded in C# or Visual Basic.</span></span> <span data-ttu-id="5ff2c-3065">그러나 조건부 `OR` 연산자는 비트를 사용 하 여 계산 됩니다 `OR` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3065">However, the conditional `OR` operator is evaluated by using the bitwise `OR` operator.</span></span> <span data-ttu-id="5ff2c-3066">따라서 사용자 정의 오버 로드를 비트 `OR` 연산자에는이 노드 형식에 대 한 구현 메서드가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3066">Thus, a user-defined overload of the bitwise `OR` operator can be the implementing method for this node type.</span></span>  
  
-   <span data-ttu-id="5ff2c-3067">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 부울 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3067">Otherwise, if `left`.Type and `right`.Type are Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-3068">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3068">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-3069">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3069">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3070">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3070">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3071">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3071">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3072">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3072">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-3073">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상이 null을 허용 하 고 해당 nullable이 아닌 형식과 구현 메서드의 해당 인수 형식와 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3073">`left`.Type and `right`.Type are both value types of which at least one is nullable, and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-3074">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3074">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-3075">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3075">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3076">`left`. 형식 및 `right`합니다. 유형은 동일한 부울 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3076">`left`.Type and `right`.Type are the same Boolean type.</span></span>  
  
-   <span data-ttu-id="5ff2c-3077">경우 `left`합니다. 형식 및 `right`합니다. Type이 nullable이 아닌, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3077">If `left`.Type and `right`.Type are non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3078">노드의 형식을 결과 대 한 유형의 미리 정의 된 조건 `OR` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3078">The type of the node is the result type of the predefined conditional `OR` operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-3079">경우 `left`합니다. 형식 및 `right`합니다. 종류는 null을 허용, 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3079">If `left`.Type and `right`.Type are nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-3080">노드의 유형을 결과 대 한 유형의 미리 정의 된 조건에 해당 하는 nullable 형식 `OR` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3080">The type of the node is the nullable type that corresponds to the result type of the predefined conditional `OR` operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-3081">다음 코드 예제에는 논리를 나타내는 식을 만드는 방법을 보여 줍니다 `OR` 첫 번째 피연산자는 계산 하는 경우에 두 번째 피연산자를 계산 하는 작업 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3081">The following code example shows how to create an expression that represents a logical `OR` operation that evaluates the second operand only if the first operand evaluates to `false`.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#29)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3082">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3082">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-3083">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 비트 <see langword="OR" /> 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3083">The bitwise <see langword="OR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
          <span data-ttu-id="5ff2c-3084">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3084">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-3085">
            <paramref name="left" />.Type과 <paramref name="right" />.Type이 동일한 부울 형식이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3085">
              <paramref name="left" />.Type and <paramref name="right" />.Type are not the same Boolean type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OrElse">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression OrElse (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression OrElse(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrElse (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ OrElse(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3086">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3086">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3087">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3087">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3088">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3088">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3089">첫 번째 피연산자가 <see cref="T:System.Linq.Expressions.BinaryExpression" />로 계산되는 경우에만 두 번째 피연산자를 계산하는 조건부 <see langword="OR" /> 연산을 나타내는 <see langword="false" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3089">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="OR" /> operation that evaluates the second operand only if the first operand evaluates to <see langword="false" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3090">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.OrElse" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3090">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.OrElse" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3091">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3091">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-3092"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3092">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-3093">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3093">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-3094">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3094">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-3095"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3095">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-3096">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3096">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-3097">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3097">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-3098">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3098">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-3099">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를 사용 하는 노드에 대 한 구현 메서드를은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3099">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="5ff2c-3100">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 비트 오버 로드 하는 사용자 정의 형식을 나타내는 `OR` 연산자는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3100">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `OR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="5ff2c-3101">조건부 `OR` C# 또는 Visual Basic 연산자를 오버 로드할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3101">The conditional `OR` operator cannot be overloaded in C# or Visual Basic.</span></span> <span data-ttu-id="5ff2c-3102">그러나 조건부 `OR` 연산자는 비트를 사용 하 여 계산 됩니다 `OR` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3102">However, the conditional `OR` operator is evaluated by using the bitwise `OR` operator.</span></span> <span data-ttu-id="5ff2c-3103">따라서 사용자 정의 오버 로드를 비트 `OR` 연산자에는이 노드 형식에 대 한 구현 메서드가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3103">Thus, a user-defined overload of the bitwise `OR` operator can be the implementing method for this node type.</span></span>  
  
-   <span data-ttu-id="5ff2c-3104">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 부울 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3104">Otherwise, if `left`.Type and `right`.Type are Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-3105">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3105">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-3106">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3106">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3107">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3107">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3108">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3108">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3109">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3109">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-3110">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상이 null을 허용 하 고 해당 nullable이 아닌 형식과 구현 메서드의 해당 인수 형식와 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3110">`left`.Type and `right`.Type are both value types of which at least one is nullable, and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-3111">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3111">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-3112">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3112">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3113">`left`. 형식 및 `right`합니다. 유형은 동일한 부울 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3113">`left`.Type and `right`.Type are the same Boolean type.</span></span>  
  
-   <span data-ttu-id="5ff2c-3114">경우 `left`합니다. 형식 및 `right`합니다. Type이 nullable이 아닌, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3114">If `left`.Type and `right`.Type are non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3115">노드의 형식을 결과 대 한 유형의 미리 정의 된 조건 `OR` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3115">The type of the node is the result type of the predefined conditional `OR` operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-3116">경우 `left`합니다. 형식 및 `right`합니다. 종류는 null을 허용, 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3116">If `left`.Type and `right`.Type are nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-3117">노드의 유형을 결과 대 한 유형의 미리 정의 된 조건에 해당 하는 nullable 형식 `OR` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3117">The type of the node is the nullable type that corresponds to the result type of the predefined conditional `OR` operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3118">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3118">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-3119">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3119">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-3120">
            <paramref name="method" />가 <see langword="null" />이고 비트 <see langword="OR" /> 연산자가 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 대해 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3120">
              <paramref name="method" /> is <see langword="null" /> and the bitwise <see langword="OR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
          <span data-ttu-id="5ff2c-3121">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3121">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-3122">
            <paramref name="method" />가 <see langword="null" />이고 <paramref name="left" />.Type과 <paramref name="right" />.Type이 동일한 부울 형식이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3122">
              <paramref name="method" /> is <see langword="null" /> and <paramref name="left" />.Type and <paramref name="right" />.Type are not the same Boolean type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parameter">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3123">식 트리에서 매개 변수나 변수를 식별하는 데 사용할 수 있는 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 노드를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3123">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ParameterExpression Parameter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ParameterExpression Parameter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Parameter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ParameterExpression ^ Parameter(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ParameterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-3124">매개 변수 또는 변수의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3124">The type of the parameter or variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3125">식 트리에서 매개 변수나 변수를 식별하는 데 사용할 수 있는 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 노드를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3125">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3126">지정된 이름과 형식의 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3126">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> node with the specified name and type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-3127">다음 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Linq.Expressions.MethodCallExpression> 개체의 값을 인쇄 하는 <xref:System.Linq.Expressions.ParameterExpression> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3127">The following example demonstrates how to create a <xref:System.Linq.Expressions.MethodCallExpression> object that prints the value of a <xref:System.Linq.Expressions.ParameterExpression> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#49](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#49)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#49](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#49)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ParameterExpression Parameter (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ParameterExpression Parameter(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ParameterExpression ^ Parameter(Type ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ParameterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-3128">매개 변수 또는 변수의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3128">The type of the parameter or variable.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="5ff2c-3129">디버깅 또는 인쇄용으로만 사용되는 매개 변수 또는 변수의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3129">The name of the parameter or variable, used for debugging or printing purpose only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3130">식 트리에서 매개 변수나 변수를 식별하는 데 사용할 수 있는 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 노드를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3130">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3131">
            <see cref="T:System.Linq.Expressions.ParameterExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Parameter" /> 및 <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.ParameterExpression.Name" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3131">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Parameter" /> and the <see cref="P:System.Linq.Expressions.Expression.Type" /> and <see cref="P:System.Linq.Expressions.ParameterExpression.Name" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3132">
            <paramref name="type" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3132">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="PostDecrementAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3133">원래 식에서 뒤이어 1씩 감소하는 식의 할당을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3133">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent decrement by 1 of the original expression.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PostDecrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PostDecrementAssign (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PostDecrementAssign(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PostDecrementAssign(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3134">작업을 적용할 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3134">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3135">원래 식에서 뒤이어 1씩 감소하는 식의 할당을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3135">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent decrement by 1 of the original expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3136">결과 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3136">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostDecrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PostDecrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PostDecrementAssign(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PostDecrementAssign(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3137">작업을 적용할 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3137">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3138">구현 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3138">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3139">원래 식에서 뒤이어 1씩 감소하는 식의 할당을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3139">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent decrement by 1 of the original expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3140">결과 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3140">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PostIncrementAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3141">원래 식에서 뒤이어 1씩 증가하는 식의 할당을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3141">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent increment by 1 of the original expression.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PostIncrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PostIncrementAssign (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PostIncrementAssign(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PostIncrementAssign(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3142">작업을 적용할 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3142">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3143">원래 식에서 뒤이어 1씩 증가하는 식의 할당을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3143">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent increment by 1 of the original expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3144">결과 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3144">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostIncrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PostIncrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PostIncrementAssign(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PostIncrementAssign(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3145">작업을 적용할 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3145">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3146">구현 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3146">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3147">원래 식에서 뒤이어 1씩 증가하는 식의 할당을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3147">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent increment by 1 of the original expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3148">결과 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3148">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Power">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3149">숫자의 제곱을 구하는 동작을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3149">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising a number to a power.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Power (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Power(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Power (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Power(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3150">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3150">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3151">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3151">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3152">숫자의 제곱을 구하는 동작을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3152">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising a number to a power.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3153">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Power" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3153">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Power" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3154">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3154">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-3155"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3155">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-3156">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3156">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-3157">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3157">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-3158"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3158">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-3159">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3159">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-3160">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3160">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-3161">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3161">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-3162">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 지 수 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3162">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the exponentiation operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3163">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. Type이 모두 <xref:System.Double>, 구현 메서드는 <xref:System.Math.Pow%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3163">Otherwise, if `left`.Type and `right`.Type are both <xref:System.Double>, the implementing method is <xref:System.Math.Pow%2A>.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-3164">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3164">Node Type and Lifted versus Non-Lifted</span></span>  
  
-   <span data-ttu-id="5ff2c-3165">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3165">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3166">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3166">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3167">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3167">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-3168">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3168">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-3169">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3169">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3170">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3170">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-3171">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 지수 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3171">The exponentiation operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
          <span data-ttu-id="5ff2c-3172">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3172">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-3173">
            <paramref name="left" />.Type 및/또는 <paramref name="right" />.Type이 <see cref="T:System.Double" />이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3173">
              <paramref name="left" />.Type and/or <paramref name="right" />.Type are not <see cref="T:System.Double" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Power (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Power(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Power (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Power(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3174">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3174">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3175">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3175">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3176">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3176">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3177">숫자의 제곱을 구하는 동작을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3177">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising a number to a power.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3178">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Power" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3178">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Power" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3179">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3179">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-3180"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3180">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-3181">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3181">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-3182">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3182">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-3183"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3183">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-3184">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3184">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-3185">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3185">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-3186">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3186">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-3187">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를은 구현 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3187">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3188">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 지 수 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3188">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the exponentiation operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3189">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. Type이 모두 <xref:System.Double>, 구현 메서드는 <xref:System.Math.Pow%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3189">Otherwise, if `left`.Type and `right`.Type are both <xref:System.Double>, the implementing method is <xref:System.Math.Pow%2A>.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-3190">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3190">Node Type and Lifted versus Non-Lifted</span></span>  
  
-   <span data-ttu-id="5ff2c-3191">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3191">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3192">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3192">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3193">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3193">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-3194">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3194">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-3195">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3195">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3196">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3196">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-3197">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3197">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-3198">
            <paramref name="method" />가 <see langword="null" />이고 지수 연산자가 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 대해 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3198">
              <paramref name="method" /> is <see langword="null" /> and the exponentiation operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
          <span data-ttu-id="5ff2c-3199">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3199">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-3200">
            <paramref name="method" />가 <see langword="null" />이고 <paramref name="left" />.Type 및/또는 <paramref name="right" />.Type이 <see cref="T:System.Double" />이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3200">
              <paramref name="method" /> is <see langword="null" /> and <paramref name="left" />.Type and/or <paramref name="right" />.Type are not <see cref="T:System.Double" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="PowerAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3201">식을 거듭제곱하고 결과를 다시 식에 할당하는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3201">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising an expression to a power and assigning the result back to the expression.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PowerAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression PowerAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression PowerAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowerAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ PowerAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3202">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3202">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3203">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3203">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3204">식을 거듭제곱하고 결과를 다시 식에 할당하는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3204">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising an expression to a power and assigning the result back to the expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3205">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3205">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression PowerAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression PowerAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowerAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ PowerAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3206">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3206">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3207">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3207">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3208">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3208">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3209">식을 거듭제곱하고 결과를 다시 식에 할당하는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3209">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising an expression to a power and assigning the result back to the expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3210">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3210">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression PowerAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression PowerAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowerAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ PowerAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3211">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3211">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3212">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3212">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3213">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3213">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="5ff2c-3214">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3214">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3215">식을 거듭제곱하고 결과를 다시 식에 할당하는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3215">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising an expression to a power and assigning the result back to the expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3216">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3216">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PreDecrementAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3217">식을 1씩 감소시키고 결과를 다시 식에 할당하는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3217">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that decrements the expression by 1 and assigns the result back to the expression.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PreDecrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PreDecrementAssign (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PreDecrementAssign(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PreDecrementAssign(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3218">작업을 적용할 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3218">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3219">식을 1씩 감소시키고 결과를 다시 식에 할당하는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3219">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that decrements the expression by 1 and assigns the result back to the expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3220">결과 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3220">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreDecrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PreDecrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PreDecrementAssign(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PreDecrementAssign(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3221">작업을 적용할 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3221">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3222">구현 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3222">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3223">식을 1씩 감소시키고 결과를 다시 식에 할당하는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3223">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that decrements the expression by 1 and assigns the result back to the expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3224">결과 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3224">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PreIncrementAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3225">식을 1씩 증가시키고 결과를 다시 식에 할당하는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3225">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that increments the expression by 1 and assigns the result back to the expression.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PreIncrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PreIncrementAssign (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PreIncrementAssign(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PreIncrementAssign(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3226">작업을 적용할 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3226">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3227">식을 1씩 증가시키고 결과를 다시 식에 할당하는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3227">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that increments the expression by 1 and assigns the result back to the expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3228">결과 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3228">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreIncrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PreIncrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PreIncrementAssign(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PreIncrementAssign(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3229">작업을 적용할 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3229">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3230">구현 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3230">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3231">식을 1씩 증가시키고 결과를 다시 식에 할당하는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3231">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that increments the expression by 1 and assigns the result back to the expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3232">결과 식을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3232">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Property">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3233">속성에 대한 액세스를 나타내는 <see cref="T:System.Linq.Expressions.MemberExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3233">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo propertyAccessor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Property(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo propertyAccessor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Property(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ propertyAccessor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3234">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MemberExpression.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3234">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property equal to.</span>
          </span>
          <span data-ttu-id="5ff2c-3235">이 값은 정적 속성의 경우 null일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3235">This can be null for static properties.</span>
          </span>
        </param>
        <param name="propertyAccessor">
          <span data-ttu-id="5ff2c-3236">속성 접근자 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3236">The <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3237">속성 접근자 메서드를 통한 속성 액세스를 나타내는 <see cref="T:System.Linq.Expressions.MemberExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3237">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a property by using a property accessor method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3238">
            <see cref="T:System.Linq.Expressions.MemberExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" /> 속성이 <see cref="P:System.Linq.Expressions.MemberExpression.Expression" />으로 설정되고 <paramref name="expression" /> 속성이 <see cref="P:System.Linq.Expressions.MemberExpression.Member" />로 액세스되는 속성을 나타내는 <see cref="T:System.Reflection.PropertyInfo" />로 설정된 <paramref name="propertyAccessor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3238">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property set to <paramref name="expression" /> and the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3239"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.MemberExpression> 같은지는 <xref:System.Reflection.PropertyInfo.PropertyType%2A> 속성의 <xref:System.Linq.Expressions.MemberExpression.Member%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3239">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.PropertyInfo.PropertyType%2A> property of <xref:System.Linq.Expressions.MemberExpression.Member%2A>.</span></span>  
  
 <span data-ttu-id="5ff2c-3240">으로 표시 되는 메서드가 `propertyAccessor` 은 `static` (`Shared` Visual Basic의), `expression` 수 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3240">If the method represented by `propertyAccessor` is `static` (`Shared` in Visual Basic), `expression` can be `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3241">
            <paramref name="propertyAccessor" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3241">
              <paramref name="propertyAccessor" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-3242">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3242">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-3243">
            <paramref name="propertyAccessor" />가 나타내는 메서드가 <see langword="static" />(Visual Basic의 경우 <see langword="Shared" />)이 아니고 <paramref name="expression" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3243">The method that <paramref name="propertyAccessor" /> represents is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic) and <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-3244">
            <paramref name="expression" />.Type을 <paramref name="propertyAccessor" />로 나타내는 메서드의 선언 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3244">
              <paramref name="expression" />.Type is not assignable to the declaring type of the method represented by <paramref name="propertyAccessor" />.</span>
          </span>
          <span data-ttu-id="5ff2c-3245">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3245">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-3246">
            <paramref name="propertyAccessor" />가 나타내는 메서드가 속성 접근자 메서드가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3246">The method that <paramref name="propertyAccessor" /> represents is not a property accessor method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, System.Reflection.PropertyInfo property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Property(class System.Linq.Expressions.Expression expression, class System.Reflection.PropertyInfo property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Property(System::Linq::Expressions::Expression ^ expression, System::Reflection::PropertyInfo ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="property" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3247">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MemberExpression.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3247">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property equal to.</span>
          </span>
          <span data-ttu-id="5ff2c-3248">이 값은 정적 속성의 경우 null일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3248">This can be null for static properties.</span>
          </span>
        </param>
        <param name="property">
          <span data-ttu-id="5ff2c-3249">
            <see cref="T:System.Reflection.PropertyInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.MemberExpression.Member" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3249">The <see cref="T:System.Reflection.PropertyInfo" /> to set the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3250">속성에 대한 액세스를 나타내는 <see cref="T:System.Linq.Expressions.MemberExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3250">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3251">
            <see cref="T:System.Linq.Expressions.MemberExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" /> 및 <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.MemberExpression.Member" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3251">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" /> and the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> and <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3252"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.MemberExpression> 같은지는 <xref:System.Reflection.PropertyInfo.PropertyType%2A> 속성의 <xref:System.Linq.Expressions.MemberExpression.Member%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3252">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.PropertyInfo.PropertyType%2A> property of <xref:System.Linq.Expressions.MemberExpression.Member%2A>.</span></span>  
  
 <span data-ttu-id="5ff2c-3253">속성으로 표시 되는 `property` 은 `static` (`Shared` Visual basic에서), `expression` 수 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3253">If the property represented by `property` is `static` (`Shared` in Visual Basic), `expression` can be `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3254">
            <paramref name="property" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3254">
              <paramref name="property" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5ff2c-3255">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3255">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-3256">
            <paramref name="property" />가 나타내는 속성이 <see langword="static" />(Visual Basic의 경우 <see langword="Shared" />)이 아니고 <paramref name="expression" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3256">The property that <paramref name="property" /> represents is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic) and <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-3257">
            <paramref name="expression" />.Type을 <paramref name="property" />가 나타내는 속성의 선언 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3257">
              <paramref name="expression" />.Type is not assignable to the declaring type of the property that <paramref name="property" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Property(class System.Linq.Expressions.Expression expression, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Property(System::Linq::Expressions::Expression ^ expression, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3258">
            <see cref="P:System.Linq.Expressions.Expression.Type" />에 이름이 <c>propertyName</c>인 속성이 포함된 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3258">An <see cref="T:System.Linq.Expressions.Expression" /> whose <see cref="P:System.Linq.Expressions.Expression.Type" /> contains a property named <c>propertyName</c>.</span>
          </span>
          <span data-ttu-id="5ff2c-3259">정적 속성의 경우 이 값은 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3259">This can be <see langword="null" /> for static properties.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="5ff2c-3260">액세스할 속성의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3260">The name of a property to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3261">속성에 대한 액세스를 나타내는 <see cref="T:System.Linq.Expressions.MemberExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3261">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3262">
            <see cref="T:System.Linq.Expressions.MemberExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" /> 속성이 <see cref="P:System.Linq.Expressions.MemberExpression.Expression" />으로 설정되고 <paramref name="expression" /> 속성이 <see cref="P:System.Linq.Expressions.MemberExpression.Member" />이 가리키는 속성을 나타내는 <see cref="T:System.Reflection.PropertyInfo" />로 설정된 <paramref name="propertyName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3262">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property set to <paramref name="expression" />, and the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> that represents the property denoted by <paramref name="propertyName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3263"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.MemberExpression> 같은지는 <xref:System.Reflection.PropertyInfo.PropertyType%2A> 속성의는 <xref:System.Reflection.PropertyInfo> 가리키는 속성을 나타내는 `propertyName`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3263">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.PropertyInfo.PropertyType%2A> property of the <xref:System.Reflection.PropertyInfo> that represents the property denoted by `propertyName`.</span></span>  
  
 <span data-ttu-id="5ff2c-3264">이 메서드 검색 `expression`합니다. 형식과 그 기본 형식의 이름을 가진 속성에 대 한 `propertyName`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3264">This method searches `expression`.Type and its base types for a property that has the name `propertyName`.</span></span> <span data-ttu-id="5ff2c-3265">공용 속성에는 public이 아닌 속성 보다 우선을 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3265">Public properties are given preference over non-public properties.</span></span> <span data-ttu-id="5ff2c-3266">이 메서드를 전달 하는 일치 하는 속성이 있으면 `expression` 및 <xref:System.Reflection.PropertyInfo> 해당 속성을 나타내는 <xref:System.Linq.Expressions.Expression.Property%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3266">If a matching property is found, this method passes `expression` and the <xref:System.Reflection.PropertyInfo> that represents that property to <xref:System.Linq.Expressions.Expression.Property%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-3267">다음 예제에서는 속성 액세스를 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3267">The following example shows how to create an expression that represents accessing a property.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#38](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#38)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#38](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3268">
            <paramref name="expression" /> 또는 <paramref name="propertyName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3268">
              <paramref name="expression" /> or <paramref name="propertyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-3269">
            <paramref name="propertyName" />.Type 또는 해당 기본 형식에 이름이 <paramref name="expression" />인 속성이 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3269">No property named <paramref name="propertyName" /> is defined in <paramref name="expression" />.Type or its base types.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression Property (System.Linq.Expressions.Expression instance, System.Reflection.PropertyInfo indexer, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression Property(class System.Linq.Expressions.Expression instance, class System.Reflection.PropertyInfo indexer, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Property (instance As Expression, indexer As PropertyInfo, arguments As IEnumerable(Of Expression)) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ Property(System::Linq::Expressions::Expression ^ instance, System::Reflection::PropertyInfo ^ indexer, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="indexer" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="5ff2c-3270">속성이 속해 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3270">The object to which the property belongs.</span>
          </span>
          <span data-ttu-id="5ff2c-3271">이 속성이 정적/공유 속성이면 null이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3271">If the property is static/shared, it must be null.</span>
          </span>
        </param>
        <param name="indexer">
          <span data-ttu-id="5ff2c-3272">인덱싱할 속성을 나타내는 <see cref="T:System.Reflection.PropertyInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3272">The <see cref="T:System.Reflection.PropertyInfo" /> that represents the property to index.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-3273">속성을 인덱싱하는 데 사용되는 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체의 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3273">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Linq.Expressions.Expression" /> objects that are used to index the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3274">인덱싱된 속성에 대한 액세스를 나타내는 <see cref="T:System.Linq.Expressions.IndexExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3274">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> representing the access to an indexed property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3275">만든 <see cref="T:System.Linq.Expressions.IndexExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3275">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression Property (System.Linq.Expressions.Expression instance, System.Reflection.PropertyInfo indexer, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression Property(class System.Linq.Expressions.Expression instance, class System.Reflection.PropertyInfo indexer, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Property (instance As Expression, indexer As PropertyInfo, ParamArray arguments As Expression()) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ Property(System::Linq::Expressions::Expression ^ instance, System::Reflection::PropertyInfo ^ indexer, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="indexer" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="5ff2c-3276">속성이 속해 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3276">The object to which the property belongs.</span>
          </span>
          <span data-ttu-id="5ff2c-3277">이 속성이 정적/공유 속성이면 null이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3277">If the property is static/shared, it must be null.</span>
          </span>
        </param>
        <param name="indexer">
          <span data-ttu-id="5ff2c-3278">인덱싱할 속성을 나타내는 <see cref="T:System.Reflection.PropertyInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3278">The <see cref="T:System.Reflection.PropertyInfo" /> that represents the property to index.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-3279">속성을 인덱싱하는 데 사용되는 <see cref="T:System.Linq.Expressions.Expression" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3279">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects that are used to index the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3280">인덱싱된 속성에 대한 액세스를 나타내는 <see cref="T:System.Linq.Expressions.IndexExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3280">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> representing the access to an indexed property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3281">만든 <see cref="T:System.Linq.Expressions.IndexExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3281">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression Property (System.Linq.Expressions.Expression instance, string propertyName, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression Property(class System.Linq.Expressions.Expression instance, string propertyName, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Property (instance As Expression, propertyName As String, ParamArray arguments As Expression()) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ Property(System::Linq::Expressions::Expression ^ instance, System::String ^ propertyName, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="5ff2c-3282">속성이 속해 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3282">The object to which the property belongs.</span>
          </span>
          <span data-ttu-id="5ff2c-3283">이 속성이 정적/공유 속성이면 null이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3283">If the property is static/shared, it must be null.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="5ff2c-3284">인덱서의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3284">The name of the indexer.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="5ff2c-3285">속성을 인덱싱하는 데 사용되는 <see cref="T:System.Linq.Expressions.Expression" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3285">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects that are used to index the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3286">인덱싱된 속성에 대한 액세스를 나타내는 <see cref="T:System.Linq.Expressions.IndexExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3286">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> representing the access to an indexed property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3287">만든 <see cref="T:System.Linq.Expressions.IndexExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3287">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, Type type, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Property(class System.Linq.Expressions.Expression expression, class System.Type type, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Property(System::Linq::Expressions::Expression ^ expression, Type ^ type, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3288">속성의 포함 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3288">The containing object of the property.</span>
          </span>
          <span data-ttu-id="5ff2c-3289">이 값은 정적 속성의 경우 null일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3289">This can be null for static properties.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-3290">속성이 포함된 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3290">The <see cref="P:System.Linq.Expressions.Expression.Type" /> that contains the property.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="5ff2c-3291">액세스할 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3291">The property to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3292">속성에 액세스하는 <see cref="T:System.Linq.Expressions.MemberExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3292">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> accessing a property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3293">만든 <see cref="T:System.Linq.Expressions.MemberExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3293">The created <see cref="T:System.Linq.Expressions.MemberExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyOrField">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression PropertyOrField (System.Linq.Expressions.Expression expression, string propertyOrFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression PropertyOrField(class System.Linq.Expressions.Expression expression, string propertyOrFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ PropertyOrField(System::Linq::Expressions::Expression ^ expression, System::String ^ propertyOrFieldName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="propertyOrFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3294">
            <see cref="P:System.Linq.Expressions.Expression.Type" />에 이름이 <c>propertyOrFieldName</c>인 속성 또는 필드가 포함된 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3294">An <see cref="T:System.Linq.Expressions.Expression" /> whose <see cref="P:System.Linq.Expressions.Expression.Type" /> contains a property or field named <c>propertyOrFieldName</c>.</span>
          </span>
          <span data-ttu-id="5ff2c-3295">이 값은 정적 멤버의 경우 null일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3295">This can be null for static members.</span>
          </span>
        </param>
        <param name="propertyOrFieldName">
          <span data-ttu-id="5ff2c-3296">액세스할 속성 또는 필드의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3296">The name of a property or field to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3297">속성 또는 필드에 대한 액세스를 나타내는 <see cref="T:System.Linq.Expressions.MemberExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3297">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a property or field.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3298">
            <see cref="T:System.Linq.Expressions.MemberExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" /> 속성이 <see cref="P:System.Linq.Expressions.MemberExpression.Expression" />으로 설정되고 <paramref name="expression" /> 속성이 <see cref="P:System.Linq.Expressions.MemberExpression.Member" />이 가리키는 속성 또는 필드를 나타내는 <see cref="T:System.Reflection.PropertyInfo" /> 또는 <see cref="T:System.Reflection.FieldInfo" />로 설정된 <paramref name="propertyOrFieldName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3298">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property set to <paramref name="expression" />, and the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> or <see cref="T:System.Reflection.FieldInfo" /> that represents the property or field denoted by <paramref name="propertyOrFieldName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3299"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.MemberExpression> 같은지를 <xref:System.Reflection.PropertyInfo.PropertyType%2A> 또는 <xref:System.Reflection.FieldInfo.FieldType%2A> 속성의는 <xref:System.Reflection.PropertyInfo> 또는 <xref:System.Reflection.FieldInfo>각각 가리키는 필드나 속성을 나타내는 `propertyOrFieldName`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3299">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.PropertyInfo.PropertyType%2A> or <xref:System.Reflection.FieldInfo.FieldType%2A> properties of the <xref:System.Reflection.PropertyInfo> or <xref:System.Reflection.FieldInfo>, respectively, that represents the property or field denoted by `propertyOrFieldName`.</span></span>  
  
 <span data-ttu-id="5ff2c-3300">이 메서드 검색 `expression`합니다. 형식과 그 기본 형식의 이름이 있는 필드나 속성에 대 한 `propertyOrFieldName`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3300">This method searches `expression`.Type and its base types for a property or field that has the name `propertyOrFieldName`.</span></span> <span data-ttu-id="5ff2c-3301">Public 속성 및 필드는 필드 및 public이 아닌 속성 보다 우선을 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3301">Public properties and fields are given preference over non-public properties and fields.</span></span> <span data-ttu-id="5ff2c-3302">또한 속성 필드 보다 우선을 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3302">Also, properties are given preference over fields.</span></span> <span data-ttu-id="5ff2c-3303">일치 하는 속성 또는 필드를 찾을 경우이 메서드는 전달 `expression` 및 <xref:System.Reflection.PropertyInfo> 또는 <xref:System.Reflection.FieldInfo> 해당 속성 또는 필드를 나타내는 <xref:System.Linq.Expressions.Expression.Property%2A> 또는 <xref:System.Linq.Expressions.Expression.Field%2A>각각.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3303">If a matching property or field is found, this method passes `expression` and the <xref:System.Reflection.PropertyInfo> or <xref:System.Reflection.FieldInfo> that represents that property or field to <xref:System.Linq.Expressions.Expression.Property%2A> or <xref:System.Linq.Expressions.Expression.Field%2A>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-3304">다음 예제에서는 속성 또는 필드 액세스를 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3304">The following example shows how to create an expression that represents accessing a property or field.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#39](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#39)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#39](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#39)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3305">
            <paramref name="expression" /> 또는 <paramref name="propertyOrFieldName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3305">
              <paramref name="expression" /> or <paramref name="propertyOrFieldName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-3306">
            <paramref name="propertyOrFieldName" />.Type 또는 해당 기본 형식에 이름이 <paramref name="expression" />인 속성 또는 필드가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3306">No property or field named <paramref name="propertyOrFieldName" /> is defined in <paramref name="expression" />.Type or its base types.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Quote">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Quote (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Quote(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Quote(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3307">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3307">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3308">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 형식의 상수 값이 있는 식을 나타내는 <see cref="T:System.Linq.Expressions.Expression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3308">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an expression that has a constant value of type <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3309">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Quote" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3309">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Quote" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3310"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.UnaryExpression> 생성 된 형식을 나타내는 <xref:System.Linq.Expressions.Expression%601>형식 인수가 나타내는 형식, `expression`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3310">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> represents the constructed type <xref:System.Linq.Expressions.Expression%601>, where the type argument is the type represented by `expression`.Type.</span></span> <span data-ttu-id="5ff2c-3311"><xref:System.Linq.Expressions.UnaryExpression.Method%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3311">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property is `null`.</span></span> <span data-ttu-id="5ff2c-3312">둘 다 <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> 는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3312">Both <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> are `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3313">
            <paramref name="expression" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3313">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reduce">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression Reduce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression Reduce() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Reduce" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Reduce () As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::Expressions::Expression ^ Reduce();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3314">이 노드를 더 단순한 식으로 줄입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3314">Reduces this node to a simpler expression.</span>
          </span>
          <span data-ttu-id="5ff2c-3315">CanReduce가 true를 반환하면 유효한 식을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3315">If CanReduce returns true, this should return a valid expression.</span>
          </span>
          <span data-ttu-id="5ff2c-3316">이 메서드는 자체를 줄여야 하는 다른 노드를 반환할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3316">This method can return another node which itself must be reduced.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3317">축소된 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3317">The reduced expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceAndCheck">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression ReduceAndCheck ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Linq.Expressions.Expression ReduceAndCheck() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
      <MemberSignature Language="VB.NET" Value="Public Function ReduceAndCheck () As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ ReduceAndCheck();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3318">이 노드를 더 단순한 식으로 줄입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3318">Reduces this node to a simpler expression.</span>
          </span>
          <span data-ttu-id="5ff2c-3319">CanReduce가 true를 반환하면 유효한 식을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3319">If CanReduce returns true, this should return a valid expression.</span>
          </span>
          <span data-ttu-id="5ff2c-3320">이 메서드는 자체를 줄여야 하는 다른 노드를 반환할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3320">This method can return another node which itself must be reduced.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3321">축소된 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3321">The reduced expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3322">Reduce와 달리이 메서드는 축소 된 노드는 해당 특정 고정 충족 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3322">Unlike Reduce, this method checks that the reduced node satisfies certain invariants.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceExtensions">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression ReduceExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Linq.Expressions.Expression ReduceExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ReduceExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Function ReduceExtensions () As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ ReduceExtensions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3323">알려진 노드 형식(확장명 노드가 아님)으로 식을 줄이거나 이미 알려진 형식인 경우 식을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3323">Reduces the expression to a known node type (that is not an Extension node) or just returns the expression if it is already a known type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3324">축소된 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3324">The reduced expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ReferenceEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ReferenceEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceEqual (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ReferenceEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3325">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3325">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3326">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3326">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3327">참조 같음 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3327">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a reference equality comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3328">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Equal" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3328">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Equal" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceNotEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ReferenceNotEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ReferenceNotEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceNotEqual (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ReferenceNotEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3329">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3329">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3330">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3330">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3331">참조 다름 비교를 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3331">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a reference inequality comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3332">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3332">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rethrow">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3333">예외를 다시 throw하는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3333">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a rethrowing of an exception.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rethrow">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Rethrow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Rethrow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Rethrow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Rethrow () As UnaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Rethrow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3334">예외를 다시 throw하는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3334">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a rethrowing of an exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3335">예외를 다시 throw하는 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3335">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a rethrowing of an exception.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rethrow">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Rethrow (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Rethrow(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Rethrow(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Rethrow(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-3336">식의 새 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3336">The new <see cref="T:System.Type" /> of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3337">지정된 형식을 사용하여 예외를 다시 throw하는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3337">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a rethrowing of an exception with a given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3338">예외를 다시 throw하는 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3338">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a rethrowing of an exception.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Return">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3339">return 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3339">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a return statement.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Return(class System.Linq.Expressions.LabelTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Return (target As LabelTarget) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Return(System::Linq::Expressions::LabelTarget ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="5ff2c-3340">
            <see cref="T:System.Linq.Expressions.LabelTarget" />이 이동할 <see cref="T:System.Linq.Expressions.GotoExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3340">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3341">return 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3341">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a return statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3342">
            <see cref="T:System.Linq.Expressions.GotoExpression" />가 Return이고, <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 속성이 <see cref="P:System.Linq.Expressions.GotoExpression.Target" />으로 설정되며, 이동 시 대상 레이블에 null 값이 전달되는 <paramref name="target" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3342">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Return, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and a null value to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Return(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Return (target As LabelTarget, value As Expression) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Return(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="5ff2c-3343">
            <see cref="T:System.Linq.Expressions.LabelTarget" />이 이동할 <see cref="T:System.Linq.Expressions.GotoExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3343">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5ff2c-3344">이동 시 연결된 레이블에 전달될 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3344">The value that will be passed to the associated label upon jumping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3345">return 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3345">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a return statement.</span>
          </span>
          <span data-ttu-id="5ff2c-3346">이동 시 레이블에 전달되는 값을 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3346">The value passed to the label upon jumping can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3347">
            <see cref="T:System.Linq.Expressions.GotoExpression" />가 Continue이고, <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 속성이 <see cref="P:System.Linq.Expressions.GotoExpression.Target" />으로 설정되며, 이동 시 대상 레이블에 <paramref name="target" />가 전달되는 <paramref name="value" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3347">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Continue, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-3348">다음 예제에서는 포함 된 식을 만드는 <xref:System.Linq.Expressions.Expression.Return%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3348">The following example demonstrates how to create an expression that contains the <xref:System.Linq.Expressions.Expression.Return%2A> method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#43](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#43)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#43](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#43)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Return(class System.Linq.Expressions.LabelTarget target, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Return(System::Linq::Expressions::LabelTarget ^ target, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="5ff2c-3349">
            <see cref="T:System.Linq.Expressions.LabelTarget" />이 이동할 <see cref="T:System.Linq.Expressions.GotoExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3349">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-3350">
            <see cref="T:System.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3350">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3351">지정된 형식을 사용하여 return 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3351">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a return statement with the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3352">
            <see cref="T:System.Linq.Expressions.GotoExpression" />가 Return이고, <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 속성이 <see cref="P:System.Linq.Expressions.GotoExpression.Target" />으로 설정되며, <paramref name="target" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.Type" />으로 설정되고, 이동 시 대상 레이블에 null 값이 전달되는 <paramref name="type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3352">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Return, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and a null value to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Return(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Return(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="5ff2c-3353">
            <see cref="T:System.Linq.Expressions.LabelTarget" />이 이동할 <see cref="T:System.Linq.Expressions.GotoExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3353">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5ff2c-3354">이동 시 연결된 레이블에 전달될 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3354">The value that will be passed to the associated label upon jumping.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-3355">
            <see cref="T:System.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3355">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3356">지정된 형식을 사용하여 return 문을 나타내는 <see cref="T:System.Linq.Expressions.GotoExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3356">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a return statement with the specified type.</span>
          </span>
          <span data-ttu-id="5ff2c-3357">이동 시 레이블에 전달되는 값을 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3357">The value passed to the label upon jumping can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3358">
            <see cref="T:System.Linq.Expressions.GotoExpression" />가 Continue이고, <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 속성이 <see cref="P:System.Linq.Expressions.GotoExpression.Target" />으로 설정되며, <paramref name="target" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.Type" />으로 설정되고, 이동 시 대상 레이블에 <paramref name="type" />가 전달되는 <paramref name="value" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3358">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Continue, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RightShift">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3359">비트 오른쪽 시프트 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3359">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RightShift">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression RightShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression RightShift(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShift (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ RightShift(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3360">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3360">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3361">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3361">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3362">비트 오른쪽 시프트 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3362">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3363">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.RightShift" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3363">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RightShift" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3364">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3364">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-3365"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3365">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-3366">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3366">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-3367">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3367">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-3368"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3368">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-3369">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3369">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-3370">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3370">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-3371">다음 규칙 작업에 대해 선택 된 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3371">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-3372">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 오른쪽 시프트 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3372">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the right-shift operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3373">그렇지 않은 경우, `left`합니다. 형식이 정수 계열 형식 (중 하나 <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, 또는 해당 nullable 형식) 및 `right`합니다. 형식이 <xref:System.Int32>, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3373">Otherwise, if `left`.Type is an integral type (one of <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, or the corresponding nullable types) and `right`.Type is <xref:System.Int32>, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-3374">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3374">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-3375">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3375">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3376">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3376">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3377">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3377">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3378">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3378">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-3379">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3379">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-3380">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3380">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-3381">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3381">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3382">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3382">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3383">노드 유형 미리 정의 된 오른쪽 시프트 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3383">The type of the node is the result type of the predefined right-shift operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-3384">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3384">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-3385">노드의 유형을 미리 정의 된 오른쪽 시프트 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3385">The type of the node is the nullable type that corresponds to the result type of the predefined right-shift operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3386">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3386">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-3387">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 오른쪽 시프트 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3387">The right-shift operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RightShift">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression RightShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression RightShift(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShift (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ RightShift(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3388">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3388">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3389">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3389">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3390">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3390">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3391">비트 오른쪽 시프트 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3391">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3392">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.RightShift" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3392">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RightShift" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3393">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3393">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-3394"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3394">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-3395">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3395">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-3396">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3396">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-3397"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3397">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-3398">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3398">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-3399">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3399">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-3400">다음 규칙 작업에 대해 선택 된 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3400">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-3401">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를 사용 하는 노드에 대 한 구현 메서드를은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3401">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="5ff2c-3402">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 오른쪽 시프트 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3402">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the right-shift operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3403">그렇지 않은 경우, `left`합니다. 형식이 정수 계열 형식 (중 하나 <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, 또는 해당 nullable 형식) 및 `right`합니다. 형식이 <xref:System.Int32>, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3403">Otherwise, if `left`.Type is an integral type (one of <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, or the corresponding nullable types) and `right`.Type is <xref:System.Int32>, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-3404">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3404">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-3405">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3405">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3406">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3406">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3407">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3407">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3408">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3408">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-3409">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3409">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-3410">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3410">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-3411">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3411">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3412">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3412">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3413">노드 유형 미리 정의 된 오른쪽 시프트 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3413">The type of the node is the result type of the predefined right-shift operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-3414">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3414">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-3415">노드의 유형을 미리 정의 된 오른쪽 시프트 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3415">The type of the node is the nullable type that corresponds to the result type of the predefined right-shift operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3416">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3416">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-3417">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3417">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-3418">
            <paramref name="method" />가 <see langword="null" />이고 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 오른쪽 시프트 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3418">
              <paramref name="method" /> is <see langword="null" /> and the right-shift operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RightShiftAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3419">비트 오른쪽 시프트 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3419">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift assignment operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RightShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression RightShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression RightShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ RightShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3420">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3420">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3421">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3421">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3422">비트 오른쪽 시프트 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3422">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3423">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3423">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression RightShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression RightShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ RightShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3424">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3424">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3425">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3425">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3426">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3426">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3427">비트 오른쪽 시프트 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3427">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3428">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3428">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression RightShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression RightShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ RightShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3429">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3429">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3430">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3430">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3431">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3431">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="5ff2c-3432">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3432">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3433">비트 오른쪽 시프트 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3433">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3434">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3434">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RuntimeVariables">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3435">
            <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" />의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3435">Creates an instance of <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RuntimeVariables">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.RuntimeVariablesExpression RuntimeVariables (System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.RuntimeVariablesExpression RuntimeVariables(class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RuntimeVariables (variables As IEnumerable(Of ParameterExpression)) As RuntimeVariablesExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::RuntimeVariablesExpression ^ RuntimeVariables(System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.RuntimeVariablesExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="variables">
          <span data-ttu-id="5ff2c-3436">
            <see cref="T:System.Linq.Expressions.ParameterExpression" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> 개체의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3436">A collection of <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3437">
            <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" />의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3437">Creates an instance of <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3438">
            <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.RuntimeVariables" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3438">An instance of <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RuntimeVariables" /> and the <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeVariables">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.RuntimeVariablesExpression RuntimeVariables (params System.Linq.Expressions.ParameterExpression[] variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.RuntimeVariablesExpression RuntimeVariables(class System.Linq.Expressions.ParameterExpression[] variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RuntimeVariables (ParamArray variables As ParameterExpression()) As RuntimeVariablesExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::RuntimeVariablesExpression ^ RuntimeVariables(... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.RuntimeVariablesExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variables" Type="System.Linq.Expressions.ParameterExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="variables">
          <span data-ttu-id="5ff2c-3439">
            <see cref="T:System.Linq.Expressions.ParameterExpression" /> 컬렉션을 채우는 데 사용할 <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3439">An array of <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3440">
            <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" />의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3440">Creates an instance of <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3441">
            <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.RuntimeVariables" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3441">An instance of <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RuntimeVariables" /> and the <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3442">오버플로를 검사하지 않는 산술 빼기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3442">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that does not have overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Subtract (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Subtract(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Subtract(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3443">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3443">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3444">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3444">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3445">오버플로를 검사하지 않는 산술 빼기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3445">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3446">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Subtract" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3446">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Subtract" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3447">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3447">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-3448"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3448">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-3449">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3449">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-3450">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3450">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-3451"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3451">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-3452">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3452">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-3453">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3453">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-3454">다음 규칙 작업에 대해 선택 된 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3454">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-3455">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 빼기 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3455">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the subtraction operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3456">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3456">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-3457">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3457">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-3458">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3458">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3459">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3459">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3460">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3460">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3461">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3461">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-3462">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3462">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-3463">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3463">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-3464">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3464">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3465">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3465">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3466">노드 유형 미리 정의 된 빼기 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3466">The type of the node is the result type of the predefined subtraction operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-3467">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3467">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-3468">노드의 유형을 미리 정의 된 빼기 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3468">The type of the node is the nullable type that corresponds to the result type of the predefined subtraction operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-3469">다음 코드 예제에는 첫 번째 인수에 있는 인수를 빼는 식에 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3469">The following code example shows how to create an expression that subtracts the argument from the first argument.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#30)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3470">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3470">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-3471">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 빼기 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3471">The subtraction operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Subtract (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Subtract(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Subtract(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3472">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3472">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3473">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3473">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3474">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3474">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3475">오버플로를 검사하지 않는 산술 빼기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3475">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3476">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.Subtract" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3476">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Subtract" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3477">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3477">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-3478"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3478">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-3479">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3479">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-3480">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3480">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-3481"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3481">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-3482">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3482">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-3483">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3483">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-3484">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3484">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-3485">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를 사용 하는 노드에 대 한 구현 메서드를은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3485">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="5ff2c-3486">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 빼기 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3486">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the subtraction operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3487">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3487">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-3488">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3488">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-3489">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3489">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3490">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3490">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3491">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3491">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3492">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3492">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-3493">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3493">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-3494">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3494">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-3495">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3495">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3496">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3496">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3497">노드 유형 미리 정의 된 빼기 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3497">The type of the node is the result type of the predefined subtraction operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-3498">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3498">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-3499">노드의 유형을 미리 정의 된 빼기 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3499">The type of the node is the nullable type that corresponds to the result type of the predefined subtraction operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3500">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3500">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-3501">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3501">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-3502">
            <paramref name="method" />가 <see langword="null" />이고 빼기 연산자가 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 대해 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3502">
              <paramref name="method" /> is <see langword="null" /> and the subtraction operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubtractAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3503">오버플로를 검사하지 않는 빼기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3503">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubtractAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3504">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3504">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3505">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3505">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3506">오버플로를 검사하지 않는 빼기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3506">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3507">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3507">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3508">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3508">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3509">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3509">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3510">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3510">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3511">오버플로를 검사하지 않는 빼기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3511">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3512">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3512">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3513">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3513">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3514">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3514">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3515">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3515">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="5ff2c-3516">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3516">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3517">오버플로를 검사하지 않는 빼기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3517">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3518">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3518">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubtractAssignChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3519">오버플로를 검사하는 빼기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3519">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that has overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubtractAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssignChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3520">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3520">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3521">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3521">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3522">오버플로를 검사하는 빼기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3522">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3523">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3523">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssignChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3524">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3524">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3525">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3525">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3526">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3526">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3527">오버플로를 검사하는 빼기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3527">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3528">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3528">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssignChecked (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3529">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3529">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3530">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3530">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3531">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3531">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="5ff2c-3532">
            <see cref="T:System.Linq.Expressions.LambdaExpression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3532">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3533">오버플로를 검사하는 빼기 할당 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3533">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3534">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3534">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubtractChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3535">오버플로를 검사하는 산술 빼기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3535">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that has overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubtractChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3536">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3536">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3537">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3537">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3538">오버플로를 검사하는 산술 빼기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3538">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3539">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.SubtractChecked" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3539">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3540">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3540">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-3541"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3541">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-3542">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3542">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-3543">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3543">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-3544"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3544">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-3545">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3545">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-3546">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3546">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-3547">다음 규칙 작업에 대해 선택 된 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3547">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-3548">경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 빼기 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3548">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the subtraction operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3549">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3549">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-3550">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3550">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-3551">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3551">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3552">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3552">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3553">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3553">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3554">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3554">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-3555">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3555">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-3556">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3556">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-3557">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3557">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3558">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3558">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3559">노드 유형 미리 정의 된 빼기 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3559">The type of the node is the result type of the predefined subtraction operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-3560">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3560">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-3561">노드의 유형을 미리 정의 된 빼기 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3561">The type of the node is the nullable type that corresponds to the result type of the predefined subtraction operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3562">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3562">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-3563">
            <paramref name="left" />.Type 및 <paramref name="right" />.Type에 빼기 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3563">The subtraction operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SubtractChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5ff2c-3564">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3564">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5ff2c-3565">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3565">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3566">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3566">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3567">오버플로를 검사하는 산술 빼기 연산을 나타내는 <see cref="T:System.Linq.Expressions.BinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3567">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3568">
            <see cref="T:System.Linq.Expressions.BinaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.SubtractChecked" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 및 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3568">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3569">그 결과 <xref:System.Linq.Expressions.BinaryExpression> 에 <xref:System.Linq.Expressions.BinaryExpression.Method%2A> 속성이 구현 메서드가로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3569">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="5ff2c-3570"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3570">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-3571">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3571">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-3572">그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3572">Otherwise, they are `false`.</span></span> <span data-ttu-id="5ff2c-3573"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 속성은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3573">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="5ff2c-3574">다음 정보는 노드 형식, 구현 메서드를 설명 및 노드 리프트 여부.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3574">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-3575">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3575">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-3576">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3576">The following rules determine the implementing method for the operation :</span></span>  
  
-   <span data-ttu-id="5ff2c-3577">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드는 두 개의 인수를 사용 하는 노드에 대 한 구현 메서드를은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3577">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="5ff2c-3578">그렇지 않은 경우는 <xref:System.Linq.Expressions.Expression.Type%2A> 속성에 대 `left` 또는 `right` 빼기 연산자를 오버 로드 하는 사용자 정의 유형을 나타냅니다는 <xref:System.Reflection.MethodInfo> 메서드가 구현 메서드가 임을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3578">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the subtraction operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3579">그렇지 않은 경우, `left`합니다. 형식 및 `right`합니다. 숫자 형식, 구현 메서드는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3579">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-3580">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3580">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-3581">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3581">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3582">경우 `left`합니다. 형식 및 `right`합니다. 구현 메서드가 해당 인수 형식에 할당할 수는, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3582">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3583">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3583">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3584">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3584">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-3585">`left`. 형식 및 `right`합니다. 두 값 형식 그 중 하나 이상에서 null을 허용 하 고 해당 형식이 nullable이 아닌 해당 인수 형식과 구현 메서드의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3585">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-3586">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3586">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-3587">구현 메서드가 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3587">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3588">경우 `left`합니다. 형식 및 `right`합니다. 유형은 모두 null이 아닌, 노드 리프트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3588">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3589">노드 유형 미리 정의 된 빼기 연산자의 결과 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3589">The type of the node is the result type of the predefined subtraction operator.</span></span>  
  
-   <span data-ttu-id="5ff2c-3590">경우 `left`합니다. 형식 및 `right`합니다. 형식이 둘 다 null을 허용 하는 노드의 리프트 집니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3590">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="5ff2c-3591">노드의 유형을 미리 정의 된 빼기 연산자의 결과 형식에 해당 하는 nullable 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3591">The type of the node is the nullable type that corresponds to the result type of the predefined subtraction operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3592">
            <paramref name="left" /> 또는 <paramref name="right" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3592">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-3593">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 <see langword="Shared" />)이 아니거나, 정확히 두 개의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3593">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-3594">
            <paramref name="method" />가 <see langword="null" />이고 빼기 연산자가 <paramref name="left" />.Type 및 <paramref name="right" />.Type에 대해 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3594">
              <paramref name="method" /> is <see langword="null" /> and the subtraction operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Switch">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3595">
            <see cref="T:System.Linq.Expressions.SwitchExpression" /> 문을 나타내는 <see langword="switch" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3595">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, params System.Linq.Expressions.SwitchCase[] cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.SwitchCase[] cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Switch (switchValue As Expression, ParamArray cases As SwitchCase()) As SwitchExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(System::Linq::Expressions::Expression ^ switchValue, ... cli::array &lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="cases" Type="System.Linq.Expressions.SwitchCase[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="switchValue">
          <span data-ttu-id="5ff2c-3596">각 사례에 대해 테스트할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3596">The value to be tested against each case.</span>
          </span>
        </param>
        <param name="cases">
          <span data-ttu-id="5ff2c-3597">이 switch 식의 사례 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3597">The set of cases for this switch expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3598">기본 사례가 없는 <see cref="T:System.Linq.Expressions.SwitchExpression" /> 문을 나타내는 <see langword="switch" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3598">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement without a default case.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3599">만든 <see cref="T:System.Linq.Expressions.SwitchExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3599">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3600">모든 <xref:System.Linq.Expressions.SwitchCase> 개체에 <xref:System.Linq.Expressions.SwitchExpression> 경우가 아니면 개체에는 동일한 형식에 있어야는 <xref:System.Linq.Expressions.SwitchExpression> 형식이 `void`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3600">All <xref:System.Linq.Expressions.SwitchCase> objects in a <xref:System.Linq.Expressions.SwitchExpression> object must have the same type, unless the <xref:System.Linq.Expressions.SwitchExpression> has the type `void`.</span></span>  
  
 <span data-ttu-id="5ff2c-3601">각 <xref:System.Linq.Expressions.SwitchCase> 개체에는 암시적 `break` 문에서 암시적 이동 금지 한 case 레이블에서 다른 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3601">Each <xref:System.Linq.Expressions.SwitchCase> object has an implicit `break` statement, which means that there is no implicit fall through from one case label to another.</span></span>  
  
 <span data-ttu-id="5ff2c-3602">경우 `switchValue` 와 일치 하지 않는 경우, 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3602">If `switchValue` does not match any of the cases, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-3603">다음 예제에서는 기본 사례가 없는 스위치 문을 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3603">The following example demonstrates how to create an expression that represents a swtich statement without a default case.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#34](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#34)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, params System.Linq.Expressions.SwitchCase[] cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.Expression defaultBody, class System.Linq.Expressions.SwitchCase[] cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Switch (switchValue As Expression, defaultBody As Expression, ParamArray cases As SwitchCase()) As SwitchExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(System::Linq::Expressions::Expression ^ switchValue, System::Linq::Expressions::Expression ^ defaultBody, ... cli::array &lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="cases" Type="System.Linq.Expressions.SwitchCase[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="switchValue">
          <span data-ttu-id="5ff2c-3604">각 사례에 대해 테스트할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3604">The value to be tested against each case.</span>
          </span>
        </param>
        <param name="defaultBody">
          <span data-ttu-id="5ff2c-3605">
            <c>switchValue</c>에 일치하는 사례가 없는 경우 전환의 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3605">The result of the switch if <c>switchValue</c> does not match any of the cases.</span>
          </span>
        </param>
        <param name="cases">
          <span data-ttu-id="5ff2c-3606">이 switch 식의 사례 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3606">The set of cases for this switch expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3607">기본 사례가 있는 <see cref="T:System.Linq.Expressions.SwitchExpression" /> 문을 나타내는 <see langword="switch" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3607">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement that has a default case.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3608">만든 <see cref="T:System.Linq.Expressions.SwitchExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3608">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3609">모든 <xref:System.Linq.Expressions.SwitchCase> 개체에 <xref:System.Linq.Expressions.SwitchExpression> 경우가 아니면 개체에는 동일한 형식에 있어야는 <xref:System.Linq.Expressions.SwitchExpression> 형식이 `void`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3609">All <xref:System.Linq.Expressions.SwitchCase> objects in a <xref:System.Linq.Expressions.SwitchExpression> object must have the same type, unless the <xref:System.Linq.Expressions.SwitchExpression> has the type `void`.</span></span>  
  
 <span data-ttu-id="5ff2c-3610">각 <xref:System.Linq.Expressions.SwitchCase> 개체에는 암시적 `break` 문에서 암시적 이동 금지 한 case 레이블에서 다른 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3610">Each <xref:System.Linq.Expressions.SwitchCase> object has an implicit `break` statement, which means that there is no implicit fall through from one case label to another.</span></span>  
  
 <span data-ttu-id="5ff2c-3611">경우 `switchValue` 기본 대/소문자가 나타내는 사례와 일치 하지 않으므로 `defaultBody` 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3611">If `switchValue` does not match any of the cases, the default case represented by `defaultBody` is run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-3612">다음 예제에서는 기본 사례가 있는 스위치 문을 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3612">The following example demonstrates how to create an expression that represents a swtich statement that has a default case.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#35)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt; cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.Expression defaultBody, class System.Reflection.MethodInfo comparison, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.SwitchCase&gt; cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Switch (switchValue As Expression, defaultBody As Expression, comparison As MethodInfo, cases As IEnumerable(Of SwitchCase)) As SwitchExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(System::Linq::Expressions::Expression ^ switchValue, System::Linq::Expressions::Expression ^ defaultBody, System::Reflection::MethodInfo ^ comparison, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="comparison" Type="System.Reflection.MethodInfo" />
        <Parameter Name="cases" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt;" />
      </Parameters>
      <Docs>
        <param name="switchValue">
          <span data-ttu-id="5ff2c-3613">각 사례에 대해 테스트할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3613">The value to be tested against each case.</span>
          </span>
        </param>
        <param name="defaultBody">
          <span data-ttu-id="5ff2c-3614">
            <c>switchValue</c>에 일치하는 사례가 없는 경우 전환의 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3614">The result of the switch if <c>switchValue</c> does not match any of the cases.</span>
          </span>
        </param>
        <param name="comparison">
          <span data-ttu-id="5ff2c-3615">사용할 같음 비교 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3615">The equality comparison method to use.</span>
          </span>
        </param>
        <param name="cases">
          <span data-ttu-id="5ff2c-3616">이 switch 식의 사례 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3616">The set of cases for this switch expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3617">기본 사례가 있는 <see cref="T:System.Linq.Expressions.SwitchExpression" /> 문을 나타내는 <see langword="switch" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3617">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement that has a default case.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3618">만든 <see cref="T:System.Linq.Expressions.SwitchExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3618">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, params System.Linq.Expressions.SwitchCase[] cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.Expression defaultBody, class System.Reflection.MethodInfo comparison, class System.Linq.Expressions.SwitchCase[] cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Switch (switchValue As Expression, defaultBody As Expression, comparison As MethodInfo, ParamArray cases As SwitchCase()) As SwitchExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(System::Linq::Expressions::Expression ^ switchValue, System::Linq::Expressions::Expression ^ defaultBody, System::Reflection::MethodInfo ^ comparison, ... cli::array &lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="comparison" Type="System.Reflection.MethodInfo" />
        <Parameter Name="cases" Type="System.Linq.Expressions.SwitchCase[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="switchValue">
          <span data-ttu-id="5ff2c-3619">각 사례에 대해 테스트할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3619">The value to be tested against each case.</span>
          </span>
        </param>
        <param name="defaultBody">
          <span data-ttu-id="5ff2c-3620">
            <c>switchValue</c>에 일치하는 사례가 없는 경우 전환의 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3620">The result of the switch if <c>switchValue</c> does not match any of the cases.</span>
          </span>
        </param>
        <param name="comparison">
          <span data-ttu-id="5ff2c-3621">사용할 같음 비교 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3621">The equality comparison method to use.</span>
          </span>
        </param>
        <param name="cases">
          <span data-ttu-id="5ff2c-3622">이 switch 식의 사례 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3622">The set of cases for this switch expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3623">기본 사례가 있는 <see cref="T:System.Linq.Expressions.SwitchExpression" /> 문을 나타내는 <see langword="switch" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3623">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement that has a default case.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3624">만든 <see cref="T:System.Linq.Expressions.SwitchExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3624">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (Type type, System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt; cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Type type, class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.Expression defaultBody, class System.Reflection.MethodInfo comparison, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.SwitchCase&gt; cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(Type ^ type, System::Linq::Expressions::Expression ^ switchValue, System::Linq::Expressions::Expression ^ defaultBody, System::Reflection::MethodInfo ^ comparison, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="comparison" Type="System.Reflection.MethodInfo" />
        <Parameter Name="cases" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-3625">switch의 결과 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3625">The result type of the switch.</span>
          </span>
        </param>
        <param name="switchValue">
          <span data-ttu-id="5ff2c-3626">각 사례에 대해 테스트할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3626">The value to be tested against each case.</span>
          </span>
        </param>
        <param name="defaultBody">
          <span data-ttu-id="5ff2c-3627">
            <c>switchValue</c>에 일치하는 사례가 없는 경우 전환의 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3627">The result of the switch if <c>switchValue</c> does not match any of the cases.</span>
          </span>
        </param>
        <param name="comparison">
          <span data-ttu-id="5ff2c-3628">사용할 같음 비교 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3628">The equality comparison method to use.</span>
          </span>
        </param>
        <param name="cases">
          <span data-ttu-id="5ff2c-3629">이 switch 식의 사례 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3629">The set of cases for this switch expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3630">기본 사례가 있는 <see cref="T:System.Linq.Expressions.SwitchExpression" /> 문을 나타내는 <see langword="switch" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3630">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement that has a default case.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3631">만든 <see cref="T:System.Linq.Expressions.SwitchExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3631">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (Type type, System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, params System.Linq.Expressions.SwitchCase[] cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Type type, class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.Expression defaultBody, class System.Reflection.MethodInfo comparison, class System.Linq.Expressions.SwitchCase[] cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(Type ^ type, System::Linq::Expressions::Expression ^ switchValue, System::Linq::Expressions::Expression ^ defaultBody, System::Reflection::MethodInfo ^ comparison, ... cli::array &lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="comparison" Type="System.Reflection.MethodInfo" />
        <Parameter Name="cases" Type="System.Linq.Expressions.SwitchCase[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-3632">switch의 결과 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3632">The result type of the switch.</span>
          </span>
        </param>
        <param name="switchValue">
          <span data-ttu-id="5ff2c-3633">각 사례에 대해 테스트할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3633">The value to be tested against each case.</span>
          </span>
        </param>
        <param name="defaultBody">
          <span data-ttu-id="5ff2c-3634">
            <c>switchValue</c>에 일치하는 사례가 없는 경우 전환의 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3634">The result of the switch if <c>switchValue</c> does not match any of the cases.</span>
          </span>
        </param>
        <param name="comparison">
          <span data-ttu-id="5ff2c-3635">사용할 같음 비교 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3635">The equality comparison method to use.</span>
          </span>
        </param>
        <param name="cases">
          <span data-ttu-id="5ff2c-3636">이 switch 식의 사례 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3636">The set of cases for this switch expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3637">기본 사례가 있는 <see cref="T:System.Linq.Expressions.SwitchExpression" /> 문을 나타내는 <see langword="switch" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3637">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement that has a default case..</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3638">만든 <see cref="T:System.Linq.Expressions.SwitchExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3638">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SwitchCase">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3639">
            <see cref="T:System.Linq.Expressions.SwitchCase" /> 개체에 사용할 <see cref="T:System.Linq.Expressions.SwitchExpression" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3639">Creates a <see cref="T:System.Linq.Expressions.SwitchCase" /> object to be used in a <see cref="T:System.Linq.Expressions.SwitchExpression" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SwitchCase">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchCase SwitchCase (System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; testValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchCase SwitchCase(class System.Linq.Expressions.Expression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; testValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SwitchCase (body As Expression, testValues As IEnumerable(Of Expression)) As SwitchCase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchCase ^ SwitchCase(System::Linq::Expressions::Expression ^ body, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ testValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchCase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="testValues" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="5ff2c-3640">case의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3640">The body of the case.</span>
          </span>
        </param>
        <param name="testValues">
          <span data-ttu-id="5ff2c-3641">case의 테스트 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3641">The test values of the case.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3642">
            <see cref="T:System.Linq.Expressions.SwitchCase" /> 개체에 사용할 <see cref="T:System.Linq.Expressions.SwitchExpression" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3642">Creates a <see cref="T:System.Linq.Expressions.SwitchCase" /> object to be used in a <see cref="T:System.Linq.Expressions.SwitchExpression" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3643">만든 <see cref="T:System.Linq.Expressions.SwitchCase" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3643">The created <see cref="T:System.Linq.Expressions.SwitchCase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3644">모든 <xref:System.Linq.Expressions.SwitchCase> 개체에 <xref:System.Linq.Expressions.SwitchExpression> 경우가 아니면 개체에는 동일한 형식에 있어야는 <xref:System.Linq.Expressions.SwitchExpression> 형식이 `void`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3644">All <xref:System.Linq.Expressions.SwitchCase> objects in a <xref:System.Linq.Expressions.SwitchExpression> object must have the same type, unless the <xref:System.Linq.Expressions.SwitchExpression> has the type `void`.</span></span>  
  
 <span data-ttu-id="5ff2c-3645">각 <xref:System.Linq.Expressions.SwitchCase> 개체에는 암시적 `break` 문에서 암시적 이동 금지 한 case 레이블에서 다른 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3645">Each <xref:System.Linq.Expressions.SwitchCase> object has an implicit `break` statement, which means that there is no implicit fall through from one case label to another.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-3646">다음 예제에서는 기본 사례가 있는 스위치 문을 나타내는 식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3646">The following example demonstrates how to create an expression that represents a swtich statement that has a default case.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#35)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SwitchCase">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchCase SwitchCase (System.Linq.Expressions.Expression body, params System.Linq.Expressions.Expression[] testValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchCase SwitchCase(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression[] testValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SwitchCase (body As Expression, ParamArray testValues As Expression()) As SwitchCase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchCase ^ SwitchCase(System::Linq::Expressions::Expression ^ body, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ testValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchCase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="testValues" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="5ff2c-3647">case의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3647">The body of the case.</span>
          </span>
        </param>
        <param name="testValues">
          <span data-ttu-id="5ff2c-3648">case의 테스트 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3648">The test values of the case.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3649">
            <see cref="T:System.Linq.Expressions.SwitchCase" />에 사용할 <see cref="T:System.Linq.Expressions.SwitchExpression" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3649">Creates a <see cref="T:System.Linq.Expressions.SwitchCase" /> for use in a <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3650">만든 <see cref="T:System.Linq.Expressions.SwitchCase" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3650">The created <see cref="T:System.Linq.Expressions.SwitchCase" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SymbolDocument">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3651">
            <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3651">Creates an instance of <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SymbolDocument">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SymbolDocumentInfo SymbolDocument(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SymbolDocument(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SymbolDocument (fileName As String) As SymbolDocumentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SymbolDocumentInfo ^ SymbolDocument(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SymbolDocumentInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="5ff2c-3652">
            <see cref="T:System.String" />에 설정할 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3652">A <see cref="T:System.String" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3653">
            <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3653">Creates an instance of <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3654">
            <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3654">A <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that has the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolDocument">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName, Guid language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SymbolDocumentInfo SymbolDocument(string fileName, valuetype System.Guid language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SymbolDocument (fileName As String, language As Guid) As SymbolDocumentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SymbolDocumentInfo ^ SymbolDocument(System::String ^ fileName, Guid language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SymbolDocumentInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="language" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="5ff2c-3655">
            <see cref="T:System.String" />에 설정할 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3655">A <see cref="T:System.String" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> equal to.</span>
          </span>
        </param>
        <param name="language">
          <span data-ttu-id="5ff2c-3656">
            <see cref="T:System.Guid" />에 설정할 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3656">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3657">
            <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3657">Creates an instance of <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3658">
            <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> 및 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3658">A <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that has the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> properties set to the specified value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolDocument">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName, Guid language, Guid languageVendor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SymbolDocumentInfo SymbolDocument(string fileName, valuetype System.Guid language, valuetype System.Guid languageVendor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SymbolDocument (fileName As String, language As Guid, languageVendor As Guid) As SymbolDocumentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SymbolDocumentInfo ^ SymbolDocument(System::String ^ fileName, Guid language, Guid languageVendor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SymbolDocumentInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="language" Type="System.Guid" />
        <Parameter Name="languageVendor" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="5ff2c-3659">
            <see cref="T:System.String" />에 설정할 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3659">A <see cref="T:System.String" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> equal to.</span>
          </span>
        </param>
        <param name="language">
          <span data-ttu-id="5ff2c-3660">
            <see cref="T:System.Guid" />에 설정할 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3660">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> equal to.</span>
          </span>
        </param>
        <param name="languageVendor">
          <span data-ttu-id="5ff2c-3661">
            <see cref="T:System.Guid" />에 설정할 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3661">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3662">
            <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3662">Creates an instance of <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3663">
            <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />, <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> 및 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3663">A <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that has the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> properties set to the specified value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolDocument">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SymbolDocumentInfo SymbolDocument(string fileName, valuetype System.Guid language, valuetype System.Guid languageVendor, valuetype System.Guid documentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SymbolDocument (fileName As String, language As Guid, languageVendor As Guid, documentType As Guid) As SymbolDocumentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SymbolDocumentInfo ^ SymbolDocument(System::String ^ fileName, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SymbolDocumentInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="language" Type="System.Guid" />
        <Parameter Name="languageVendor" Type="System.Guid" />
        <Parameter Name="documentType" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="5ff2c-3664">
            <see cref="T:System.String" />에 설정할 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3664">A <see cref="T:System.String" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> equal to.</span>
          </span>
        </param>
        <param name="language">
          <span data-ttu-id="5ff2c-3665">
            <see cref="T:System.Guid" />에 설정할 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3665">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> equal to.</span>
          </span>
        </param>
        <param name="languageVendor">
          <span data-ttu-id="5ff2c-3666">
            <see cref="T:System.Guid" />에 설정할 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3666">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> equal to.</span>
          </span>
        </param>
        <param name="documentType">
          <span data-ttu-id="5ff2c-3667">
            <see cref="T:System.Guid" />에 설정할 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.DocumentType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3667">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.DocumentType" /> equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3668">
            <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3668">Creates an instance of <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3669">
            <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />, <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" />, <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> 및 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.DocumentType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3669">A <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that has the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.DocumentType" /> properties set to the specified value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Throw">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3670">예외의 throw를 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3670">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a throwing of an exception.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Throw">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Throw (System.Linq.Expressions.Expression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Throw(class System.Linq.Expressions.Expression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Throw (value As Expression) As UnaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Throw(System::Linq::Expressions::Expression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5ff2c-3671">
            <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3671">An <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3672">예외의 throw를 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3672">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a throwing of an exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3673">예외를 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3673">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-3674">다음 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Linq.Expressions.TryExpression> 사용 하는 개체는 <xref:System.Linq.Expressions.Expression.Throw%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3674">The following example demonstrates how to create a <xref:System.Linq.Expressions.TryExpression> object that uses the <xref:System.Linq.Expressions.Expression.Throw%2A> method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#47)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Throw">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Throw (System.Linq.Expressions.Expression value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Throw(class System.Linq.Expressions.Expression value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Throw(System::Linq::Expressions::Expression ^ value, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5ff2c-3675">
            <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3675">An <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-3676">식의 새 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3676">The new <see cref="T:System.Type" /> of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3677">지정된 형식을 사용하여 예외를 throw하는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3677">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a throwing of an exception with a given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3678">예외를 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3678">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the exception.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3679">
            <see cref="T:System.Linq.Expressions.Expression" />의 텍스트 표현을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3679">Returns a textual representation of the <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3680">
            <see cref="T:System.Linq.Expressions.Expression" />의 텍스트 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3680">A textual representation of the <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCatch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TryExpression TryCatch (System.Linq.Expressions.Expression body, params System.Linq.Expressions.CatchBlock[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TryExpression TryCatch(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.CatchBlock[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCatch (body As Expression, ParamArray handlers As CatchBlock()) As TryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TryExpression ^ TryCatch(System::Linq::Expressions::Expression ^ body, ... cli::array &lt;System::Linq::Expressions::CatchBlock ^&gt; ^ handlers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="handlers" Type="System.Linq.Expressions.CatchBlock[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="5ff2c-3681">try 블록의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3681">The body of the try block.</span>
          </span>
        </param>
        <param name="handlers">
          <span data-ttu-id="5ff2c-3682">try 블록과 연결되는 catch 문을 나타내는 <see cref="T:System.Linq.Expressions.CatchBlock" /> 식을 0개 이상 포함하는 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3682">The array of zero or more <see cref="T:System.Linq.Expressions.CatchBlock" /> expressions representing the catch statements to be associated with the try block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3683">원하는 수의 catch 문을 사용하고 fault 또는 finally 블록은 사용하지 않고 try 블록을 나타내는 <see cref="T:System.Linq.Expressions.TryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3683">Creates a <see cref="T:System.Linq.Expressions.TryExpression" /> representing a try block with any number of catch statements and neither a fault nor finally block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3684">만든 <see cref="T:System.Linq.Expressions.TryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3684">The created <see cref="T:System.Linq.Expressions.TryExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-3685">다음 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Linq.Expressions.TryExpression> catch 문이 포함 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3685">The following example demonstrates how to create a <xref:System.Linq.Expressions.TryExpression> object that contains a catch statement.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#47)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCatchFinally">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TryExpression TryCatchFinally (System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression finally, params System.Linq.Expressions.CatchBlock[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TryExpression TryCatchFinally(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression finally, class System.Linq.Expressions.CatchBlock[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCatchFinally (body As Expression, finally As Expression, ParamArray handlers As CatchBlock()) As TryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TryExpression ^ TryCatchFinally(System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ finally, ... cli::array &lt;System::Linq::Expressions::CatchBlock ^&gt; ^ handlers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="finally" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="handlers" Type="System.Linq.Expressions.CatchBlock[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="5ff2c-3686">try 블록의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3686">The body of the try block.</span>
          </span>
        </param>
        <param name="finally">
          <span data-ttu-id="5ff2c-3687">finally 블록의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3687">The body of the finally block.</span>
          </span>
        </param>
        <param name="handlers">
          <span data-ttu-id="5ff2c-3688">try 블록과 연결되는 catch 문을 나타내는 <see cref="T:System.Linq.Expressions.CatchBlock" /> 식을 0개 이상 포함하는 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3688">The array of zero or more <see cref="T:System.Linq.Expressions.CatchBlock" /> expressions representing the catch statements to be associated with the try block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3689">원하는 수의 catch 문과 finally 블록 하나를 사용하여 try 블록을 나타내는 <see cref="T:System.Linq.Expressions.TryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3689">Creates a <see cref="T:System.Linq.Expressions.TryExpression" /> representing a try block with any number of catch statements and a finally block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3690">만든 <see cref="T:System.Linq.Expressions.TryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3690">The created <see cref="T:System.Linq.Expressions.TryExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ff2c-3691">다음 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Linq.Expressions.TryExpression> catch 문이 포함 된 개체 및 finally 문을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3691">The following example demonstrates how to create a <xref:System.Linq.Expressions.TryExpression> object that contains a catch statement and a finally statement.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#48](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#48)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#48](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFault">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TryExpression TryFault (System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression fault);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TryExpression TryFault(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression fault) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFault (body As Expression, fault As Expression) As TryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TryExpression ^ TryFault(System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ fault);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="fault" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="5ff2c-3692">try 블록의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3692">The body of the try block.</span>
          </span>
        </param>
        <param name="fault">
          <span data-ttu-id="5ff2c-3693">fault 블록의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3693">The body of the fault block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3694">catch 문은 사용하지 않고 fault 블록을 하나 사용하여 try 블록을 나타내는 <see cref="T:System.Linq.Expressions.TryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3694">Creates a <see cref="T:System.Linq.Expressions.TryExpression" /> representing a try block with a fault block and no catch statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3695">만든 <see cref="T:System.Linq.Expressions.TryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3695">The created <see cref="T:System.Linq.Expressions.TryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFinally">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TryExpression TryFinally (System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression finally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TryExpression TryFinally(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression finally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFinally (body As Expression, finally As Expression) As TryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TryExpression ^ TryFinally(System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ finally);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="finally" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="5ff2c-3696">try 블록의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3696">The body of the try block.</span>
          </span>
        </param>
        <param name="finally">
          <span data-ttu-id="5ff2c-3697">finally 블록의 본문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3697">The body of the finally block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3698">catch 문은 사용하지 않고 finally 블록을 하나 사용하여 try 블록을 나타내는 <see cref="T:System.Linq.Expressions.TryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3698">Creates a <see cref="T:System.Linq.Expressions.TryExpression" /> representing a try block with a finally block and no catch statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3699">만든 <see cref="T:System.Linq.Expressions.TryExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3699">The created <see cref="T:System.Linq.Expressions.TryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetActionType">
      <MemberSignature Language="C#" Value="public static bool TryGetActionType (Type[] typeArgs, out Type actionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetActionType(class System.Type[] typeArgs, [out] class System.Type&amp; actionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetActionType (typeArgs As Type(), ByRef actionType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetActionType(cli::array &lt;Type ^&gt; ^ typeArgs, [Runtime::InteropServices::Out] Type ^ % actionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArgs" Type="System.Type[]" />
        <Parameter Name="actionType" Type="System.Type&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="typeArgs">
          <span data-ttu-id="5ff2c-3700">System.Action 대리자 형식의 형식 인수를 지정하는 Type 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3700">An array of Type objects that specify the type arguments for the System.Action delegate type.</span>
          </span>
        </param>
        <param name="actionType">
          <span data-ttu-id="5ff2c-3701">이 메서드가 반환될 경우 특정 형식 인수가 있는 제네릭 System.Action 대리자 형식이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3701">When this method returns, contains the generic System.Action delegate type that has specific type arguments.</span>
          </span>
          <span data-ttu-id="5ff2c-3702">
            <c>typeArgs</c>와 일치하는 제네릭 System.Action 대리자가 없을 경우 null이 포함됩니다. 이 매개 변수는 초기화되지 않고 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3702">Contains null if there is no generic System.Action delegate that matches the <c>typeArgs</c>.This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3703">특정 형식 인수가 있는 제네릭 System.Action 대리자 형식을 나타내는 <see cref="P:System.Linq.Expressions.Expression.Type" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3703">Creates a <see cref="P:System.Linq.Expressions.Expression.Type" /> object that represents a generic System.Action delegate type that has specific type arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3704">제네릭 System.Action 대리자 형식이 특정 <paramref name="typeArgs" />에 대해 만들어졌을 경우 true이고, 그렇지 않으면 false입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3704">true if generic System.Action delegate type was created for specific <paramref name="typeArgs" />; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetFuncType">
      <MemberSignature Language="C#" Value="public static bool TryGetFuncType (Type[] typeArgs, out Type funcType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetFuncType(class System.Type[] typeArgs, [out] class System.Type&amp; funcType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetFuncType (typeArgs As Type(), ByRef funcType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetFuncType(cli::array &lt;Type ^&gt; ^ typeArgs, [Runtime::InteropServices::Out] Type ^ % funcType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArgs" Type="System.Type[]" />
        <Parameter Name="funcType" Type="System.Type&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="typeArgs">
          <span data-ttu-id="5ff2c-3705">System.Func 대리자 형식의 형식 인수를 지정하는 Type 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3705">An array of Type objects that specify the type arguments for the System.Func delegate type.</span>
          </span>
        </param>
        <param name="funcType">
          <span data-ttu-id="5ff2c-3706">이 메서드가 반환될 경우 특정 형식 인수가 있는 제네릭 System.Func 대리자 형식이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3706">When this method returns, contains the generic System.Func delegate type that has specific type arguments.</span>
          </span>
          <span data-ttu-id="5ff2c-3707">
            <c>typeArgs</c>와 일치하는 제네릭 System.Func 대리자가 없을 경우 null이 포함됩니다. 이 매개 변수는 초기화되지 않고 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3707">Contains null if there is no generic System.Func delegate that matches the <c>typeArgs</c>.This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3708">특정 형식 인수가 있는 제네릭 System.Func 대리자 형식을 나타내는 <see cref="P:System.Linq.Expressions.Expression.Type" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3708">Creates a <see cref="P:System.Linq.Expressions.Expression.Type" /> object that represents a generic System.Func delegate type that has specific type arguments.</span>
          </span>
          <span data-ttu-id="5ff2c-3709">마지막 형식 인수는 생성된 대리자의 반환 형식을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3709">The last type argument specifies the return type of the created delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3710">제네릭 System.Func 대리자 형식이 특정 <paramref name="typeArgs" />에 대해 만들어졌을 경우 true이고, 그렇지 않으면 false입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3710">true if generic System.Func delegate type was created for specific <paramref name="typeArgs" />; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public virtual Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.Expression.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ Type { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3711">이 <see cref="T:System.Linq.Expressions.Expression" />이 나타내는 식의 정적 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3711">Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ff2c-3712">식의 정적 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3712">The <see cref="T:System.Type" /> that represents the static type of the expression.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3713"><xref:System.Linq.Expressions.Expression.NodeType%2A> 식 트리 노드 유형에 반면는 <xref:System.Linq.Expressions.Expression.Type%2A> 노드에서 나타내는 식의 정적 공용 언어 런타임 (CLR) 형식을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3713">The <xref:System.Linq.Expressions.Expression.NodeType%2A> is the type of the expression tree node, whereas the <xref:System.Linq.Expressions.Expression.Type%2A> represents the static common language runtime (CLR) type of the expression that the node represents.</span></span> <span data-ttu-id="5ff2c-3714">예를 들어, 다양 한 노드 형식 다른 두 노드가 동일한 가질 수 있습니다 <xref:System.Linq.Expressions.Expression.Type%2A>다음 코드 예제에 나온 것 처럼 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3714">For example, two nodes with different node types can have the same <xref:System.Linq.Expressions.Expression.Type%2A>, as shown in the following code example.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#36](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#36)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#36](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeAs">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression TypeAs (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression TypeAs(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ TypeAs(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3715">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3715">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-3716">
            <see cref="T:System.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3716">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3717">변환에 실패하면 <see cref="T:System.Linq.Expressions.UnaryExpression" />이 제공되는 boxing 변환이나 명시적 참조를 나타내는 <see langword="null" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3717">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an explicit reference or boxing conversion where <see langword="null" /> is supplied if the conversion fails.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3718">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.TypeAs" /> 및 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.Expression.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3718">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.TypeAs" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.Expression.Type" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3719"><xref:System.Linq.Expressions.UnaryExpression.Method%2A> 결과 속성 <xref:System.Linq.Expressions.UnaryExpression> 은 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3719">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is `null`.</span></span> <span data-ttu-id="5ff2c-3720"><xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> 속성은 모두 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3720">The <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> properties are both `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-3721">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Linq.Expressions.Expression.TypeAs%28System.Linq.Expressions.Expression%2CSystem.Type%29> 만드는 메서드를 한 <xref:System.Linq.Expressions.UnaryExpression> 나타내는 nullable 정수 형식으로 허용 하지 않는 정수 식의 참조 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3721">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.TypeAs%28System.Linq.Expressions.Expression%2CSystem.Type%29> method to create a <xref:System.Linq.Expressions.UnaryExpression> that represents the reference conversion of a non-nullable integer expression to the nullable integer type.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#11)]
 [!code-vb[System.Linq.Expressions.Expression#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3722">
            <paramref name="expression" /> 또는 <paramref name="type" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3722">
              <paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TypeEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TypeBinaryExpression TypeEqual (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TypeBinaryExpression TypeEqual(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TypeBinaryExpression ^ TypeEqual(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TypeBinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3723">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3723">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="T:System.Linq.Expressions.Expression" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-3724">
            <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3724">A <see cref="P:System.Linq.Expressions.Expression.Type" /> to set the <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3725">런타임 형식 ID를 비교하는 <see cref="T:System.Linq.Expressions.TypeBinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3725">Creates a <see cref="T:System.Linq.Expressions.TypeBinaryExpression" /> that compares run-time type identity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3726">
            <see cref="T:System.Linq.Expressions.TypeBinaryExpression" /> 속성은 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)" /> 및 <see cref="T:System.Linq.Expressions.Expression" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3726">A <see cref="T:System.Linq.Expressions.TypeBinaryExpression" /> for which the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property is equal to <see cref="M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)" /> and for which the <see cref="T:System.Linq.Expressions.Expression" /> and <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> properties are set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeIs">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TypeBinaryExpression TypeIs (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TypeBinaryExpression TypeIs(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TypeBinaryExpression ^ TypeIs(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TypeBinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3727">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.TypeBinaryExpression.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3727">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.TypeBinaryExpression.Expression" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-3728">
            <see cref="P:System.Linq.Expressions.Expression.Type" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3728">A <see cref="P:System.Linq.Expressions.Expression.Type" /> to set the <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3729">
            <see cref="T:System.Linq.Expressions.TypeBinaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3729">Creates a <see cref="T:System.Linq.Expressions.TypeBinaryExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3730">
            <see cref="T:System.Linq.Expressions.TypeBinaryExpression" /> 속성은 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.TypeIs" /> 및 <see cref="P:System.Linq.Expressions.TypeBinaryExpression.Expression" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3730">A <see cref="T:System.Linq.Expressions.TypeBinaryExpression" /> for which the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property is equal to <see cref="F:System.Linq.Expressions.ExpressionType.TypeIs" /> and for which the <see cref="P:System.Linq.Expressions.TypeBinaryExpression.Expression" /> and <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> properties are set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3731"><xref:System.Linq.Expressions.Expression.Type%2A> 결과 속성 <xref:System.Linq.Expressions.UnaryExpression> 나타냅니다 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3731">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> represents <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ff2c-3732">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Linq.Expressions.Expression.TypeIs%28System.Linq.Expressions.Expression%2CSystem.Type%29> 만드는 메서드를 한 <xref:System.Linq.Expressions.TypeBinaryExpression> 에 대 한 문자열 값의 형식 테스트를 나타내는 <xref:System.Int32> 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3732">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.TypeIs%28System.Linq.Expressions.Expression%2CSystem.Type%29> method to create a <xref:System.Linq.Expressions.TypeBinaryExpression> that represents a type test of a string value against the <xref:System.Int32> type.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#12)]
 [!code-vb[System.Linq.Expressions.Expression#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3733">
            <paramref name="expression" /> 또는 <paramref name="type" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3733">
              <paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UnaryPlus">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3734">단항 더하기 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3734">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a unary plus operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UnaryPlus">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression UnaryPlus (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression UnaryPlus(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ UnaryPlus(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3735">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3735">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3736">단항 더하기 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3736">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a unary plus operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3737">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.UnaryPlus" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3737">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.UnaryPlus" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3738"><xref:System.Linq.Expressions.UnaryExpression.Method%2A> 결과 속성 <xref:System.Linq.Expressions.UnaryExpression> 구현 방법으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3738">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="5ff2c-3739"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3739">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-3740">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3740">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-3741">그렇지 않으면 서로 false입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3741">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-3742">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3742">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-3743">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3743">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-3744">경우 `expression`합니다. 형식이 단항 더하기 연산자를 정의 하는 사용자 정의 형식이 <xref:System.Reflection.MethodInfo> 나타내는 하는 연산자가 구현 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3744">If `expression`.Type is a user-defined type that defines the unary plus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3745">그렇지 않은 경우, `expression`합니다. 구현 메서드는, 형식이 숫자 형식이 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3745">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-3746">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3746">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-3747">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3747">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3748">경우 `expression`합니다. 형식이 구현 메서드의 인수 형식에 할당할 수, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3748">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3749">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3749">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3750">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3750">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-3751">`expression`. 형식이 nullable 값 형식이 이며 해당 nullable이 아닌 값 형식만 구현 메서드의 인수 형식과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3751">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-3752">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3752">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-3753">구현 메서드가 `null`는 노드 유형이 `expression`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3753">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="5ff2c-3754">경우 `expression`합니다. 형식이 nullable이 아닌, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3754">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3755">그렇지 않으면 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3755">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3756">
            <paramref name="expression" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3756">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-3757">
            <paramref name="expression" />.Type에 단항 더하기 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3757">The unary plus operator is not defined for <paramref name="expression" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnaryPlus">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression UnaryPlus (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression UnaryPlus(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ UnaryPlus(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3758">
            <see cref="T:System.Linq.Expressions.Expression" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3758">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="5ff2c-3759">
            <see cref="T:System.Reflection.MethodInfo" /> 속성에 설정할 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3759">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3760">단항 더하기 연산을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3760">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a unary plus operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3761">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 속성이 <see cref="P:System.Linq.Expressions.Expression.NodeType" />이고 <see cref="F:System.Linq.Expressions.ExpressionType.UnaryPlus" /> 및 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 속성이 지정된 값으로 설정된 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3761">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.UnaryPlus" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3762"><xref:System.Linq.Expressions.UnaryExpression.Method%2A> 결과 속성 <xref:System.Linq.Expressions.UnaryExpression> 구현 방법으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3762">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="5ff2c-3763"><xref:System.Linq.Expressions.Expression.Type%2A> 속성 노드의 유형으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3763">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="5ff2c-3764">노드가 리프트 하는 경우는 <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> 및 <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 속성은 모두 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3764">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="5ff2c-3765">그렇지 않으면 서로 false입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3765">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="5ff2c-3766">메서드 구현</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3766">Implementing Method</span></span>  
 <span data-ttu-id="5ff2c-3767">다음 규칙 작업에 대 한 구현 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3767">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="5ff2c-3768">경우 `method` 않습니다 `null` void가 아닌 나타내고 `static` (`Shared` Visual Basic의) 메서드 인수 하나를 사용 하는 노드에 대 한 구현 메서드를은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3768">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes one argument, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="5ff2c-3769">경우 `expression`합니다. 형식이 단항 더하기 연산자를 정의 하는 사용자 정의 형식이 <xref:System.Reflection.MethodInfo> 나타내는 하는 연산자가 구현 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3769">If `expression`.Type is a user-defined type that defines the unary plus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3770">그렇지 않은 경우, `expression`합니다. 구현 메서드는, 형식이 숫자 형식이 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3770">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="5ff2c-3771">노드 형식 및 비 리프트와 리프트</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3771">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="5ff2c-3772">구현 메서드가 없으면 `null`:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3772">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="5ff2c-3773">경우 `expression`합니다. 형식이 구현 메서드의 인수 형식에 할당할 수, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3773">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3774">노드 유형 구현 메서드의 반환 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3774">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="5ff2c-3775">다음 두 가지 조건을 충족 하는 경우 노드는 적용 되지 않습니다. 그리고 노드의 유형을 구현 메서드의 반환 형식에 해당 하는 nullable 형식:</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3775">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="5ff2c-3776">`expression`. 형식이 nullable 값 형식이 이며 해당 nullable이 아닌 값 형식만 구현 메서드의 인수 형식과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3776">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="5ff2c-3777">구현 메서드의 반환 형식이 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3777">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="5ff2c-3778">구현 메서드가 `null`는 노드 유형이 `expression`합니다. 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3778">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="5ff2c-3779">경우 `expression`합니다. 형식이 nullable이 아닌, 노드가 리프트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3779">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="5ff2c-3780">그렇지 않으면 노드에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3780">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ff2c-3781">
            <paramref name="expression" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3781">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ff2c-3782">
            <paramref name="method" />가 <see langword="null" />이 아니고 이것이 나타내는 메서드가 <see langword="void" />를 반환하거나, <see langword="static" />(Visual Basic의 경우 <see langword="Shared" />)이 아니거나, 정확하게 하나의 인수를 사용하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3782">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5ff2c-3783">
            <paramref name="method" />가 <see langword="null" />이고 <paramref name="expression" />.Type에 단항 더하기 연산자가 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3783">
              <paramref name="method" /> is <see langword="null" /> and the unary plus operator is not defined for <paramref name="expression" />.Type.</span>
          </span>
          <span data-ttu-id="5ff2c-3784">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3784">-or-</span>
          </span>
          <span data-ttu-id="5ff2c-3785">
            <paramref name="expression" />.Type 또는 이 형식이 nullable 값 형식인 경우 nullable이 아닌 해당 형식을 <paramref name="method" />가 나타내는 메서드의 인수 형식에 할당할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3785">
              <paramref name="expression" />.Type (or its corresponding non-nullable type if it is a nullable value type) is not assignable to the argument type of the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unbox">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Unbox (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Unbox(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Unbox(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5ff2c-3786">unboxing할 <see cref="T:System.Linq.Expressions.Expression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3786">An <see cref="T:System.Linq.Expressions.Expression" /> to unbox.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5ff2c-3787">식의 새 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3787">The new <see cref="T:System.Type" /> of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3788">명시적 unboxing을 나타내는 <see cref="T:System.Linq.Expressions.UnaryExpression" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3788">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an explicit unboxing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3789">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3789">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Variable">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ff2c-3790">식 트리에서 매개 변수나 변수를 식별하는 데 사용할 수 있는 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 노드를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3790">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ParameterExpression Variable (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ParameterExpression Variable(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Variable(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ParameterExpression ^ Variable(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ParameterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-3791">매개 변수 또는 변수의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3791">The type of the parameter or variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3792">식 트리에서 매개 변수나 변수를 식별하는 데 사용할 수 있는 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 노드를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3792">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3793">지정된 이름과 형식의 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3793">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> node with the specified name and type</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ParameterExpression Variable (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ParameterExpression Variable(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Variable(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ParameterExpression ^ Variable(Type ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ParameterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="5ff2c-3794">매개 변수 또는 변수의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3794">The type of the parameter or variable.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="5ff2c-3795">매개 변수나 변수의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3795">The name of the parameter or variable.</span>
          </span>
          <span data-ttu-id="5ff2c-3796">이 이름은 디버깅 또는 인쇄용으로만 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3796">This name is used for debugging or printing purpose only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3797">식 트리에서 매개 변수나 변수를 식별하는 데 사용할 수 있는 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 노드를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3797">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3798">지정된 이름과 형식의 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3798">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> node with the specified name and type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitChildren">
      <MemberSignature Language="C#" Value="protected internal virtual System.Linq.Expressions.Expression VisitChildren (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitChildren(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function VisitChildren (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Linq::Expressions::Expression ^ VisitChildren(System::Linq::Expressions::ExpressionVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">
          <span data-ttu-id="5ff2c-3799">
            <see cref="T:System.Func`2" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3799">An instance of <see cref="T:System.Func`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ff2c-3800">노드를 줄인 다음 줄인 식에서 방문자 대리자를 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3800">Reduces the node and then calls the visitor delegate on the reduced expression.</span>
          </span>
          <span data-ttu-id="5ff2c-3801">이 메서드는 노드를 줄일 수 없으면 예외를 throw합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3801">The method throws an exception if the node is not reducible.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ff2c-3802">방문하는 식 또는 트리에서 해당 식을 바꿀 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ff2c-3802">The expression being visited, or an expression which should replace it in the tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ff2c-3803">노드의 자식 항목을 안내 하는 논리를 제공 하려면이 메서드를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3803">Override this method to provide logic to walk the node's children.</span></span> <span data-ttu-id="5ff2c-3804">일반적인 구현에서는 방문자를 호출 합니다. 각 자식에 방문 하 고 중으로 변경, 수정 된 자식이 있는 자체의 새 복사본을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ff2c-3804">A typical implementation will call visitor.Visit on each of its children, and if any of them change, should return a new copy of itself with the modified children.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>