<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SwitchCase.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d9c43f5241f5f71668ae5377ba9ced426aa07e7a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d9c43f5241f5f71668ae5377ba9ced426aa07e7a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Linq.Expressions.SwitchCase">
          <source>Represents one case of a <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.SwitchExpression" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.Expressions.SwitchExpression" /&gt;</ph>의 case 하나를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.SwitchCase">
          <source>The following example demonstrates how to create an expression that represents a switch statement without a default case by using the <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.SwitchCase%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 기본 사례가 없는 switch 문을 사용 하 여 나타내는 식을 만드는 <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.SwitchCase%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.SwitchCase.Body">
          <source>Gets the body of this case.</source>
          <target state="translated">이 case의 본문을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.SwitchCase.Body">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> object that represents the body of the case block.</source>
          <target state="translated">case 블록의 본문을 나타내는 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.SwitchCase.TestValues">
          <source>Gets the values of this case.</source>
          <target state="translated">이 case의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.SwitchCase.TestValues">
          <source>This case is selected for execution when the <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.SwitchExpression.SwitchValue" /&gt;</ph> matches any of these values.</source>
          <target state="translated">이 case는 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.SwitchExpression.SwitchValue" /&gt;</ph>가 이러한 값과 일치할 때 실행되도록 선택됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.SwitchCase.TestValues">
          <source>The read-only collection of the values for this case block.</source>
          <target state="translated">이 case 블록에 대한 값의 읽기 전용 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.SwitchCase.ToString">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the current <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>을 나타내는 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.SwitchCase.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the current <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>를 나타내는 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.SwitchCase.TestValues" /&gt;</ph> property of the result.</source>
          <target state="translated">결과의 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.SwitchCase.TestValues" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.SwitchCase.Body" /&gt;</ph> property of the result.</source>
          <target state="translated">결과의 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.SwitchCase.Body" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)">
          <source>Creates a new expression that is like this one, but using the supplied children.</source>
          <target state="translated">제공된 자식을 사용하여 이 식과 같은 새 식을 만듭니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)">
          <source>If all of the children are the same, it will return this expression.</source>
          <target state="translated">모든 자식이 같으면 이 식을 반환합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)">
          <source>This expression if no children are changed or an expression with the updated children.</source>
          <target state="translated">자식이 변경되지 않은 경우 이 식이고, 그러지 않은 경우 자식이 업데이트된 식입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>