<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MemberInitExpression.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d21f55702afbed80e2d08e96625689931934f89c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d21f55702afbed80e2d08e96625689931934f89c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Linq.Expressions.MemberInitExpression">
          <source>Represents calling a constructor and initializing one or more members of the new object.</source>
          <target state="translated">생성자 호출 및 하나 이상의 새 개체 멤버에 대한 초기화를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.MemberInitExpression">
          <source>Use the <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.MemberInit%2A&gt;</ph> factory methods to create a <ph id="ph2">&lt;xref:System.Linq.Expressions.MemberInitExpression&gt;</ph>.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.MemberInit%2A&gt;</ph> 를 만드는 팩터리 메서드가 <ph id="ph2">&lt;xref:System.Linq.Expressions.MemberInitExpression&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.MemberInitExpression">
          <source>The value of the <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.NodeType%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Linq.Expressions.MemberInitExpression&gt;</ph> is <ph id="ph3">&lt;xref:System.Linq.Expressions.ExpressionType.MemberInit&gt;</ph>.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.NodeType%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Linq.Expressions.MemberInitExpression&gt;</ph> 은 <ph id="ph3">&lt;xref:System.Linq.Expressions.ExpressionType.MemberInit&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.MemberInitExpression">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Linq.Expressions.MemberInitExpression&gt;</ph> that represents the initialization of two members of a new object.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Linq.Expressions.MemberInitExpression&gt;</ph> 새 개체의 두 멤버의 초기화를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.MemberInitExpression.Bindings">
          <source>Gets the bindings that describe how to initialize the members of the newly created object.</source>
          <target state="translated">새로 만든 개체의 멤버를 초기화하는 방법을 설명하는 바인딩을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.MemberInitExpression.Bindings">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.MemberBinding" /&gt;</ph> objects which describe how to initialize the members.</source>
          <target state="translated">멤버를 초기화하는 방법을 설명하는 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 개체의 <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.MemberBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.MemberInitExpression.CanReduce">
          <source>Gets a value that indicates whether the expression tree node can be reduced.</source>
          <target state="translated">식 트리 노드를 줄일 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.MemberInitExpression.CanReduce">
          <source>True if the node can be reduced, otherwise false.</source>
          <target state="translated">노드를 줄일 수 있으면 true이고, 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.MemberInitExpression.NewExpression">
          <source>Gets the expression that represents the constructor call.</source>
          <target state="translated">생성자 호출을 나타내는 식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.MemberInitExpression.NewExpression">
          <source>A <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.NewExpression" /&gt;</ph> that represents the constructor call.</source>
          <target state="translated">생성자 호출을 나타내는 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.NewExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.MemberInitExpression.NodeType">
          <source>Returns the node type of this Expression.</source>
          <target state="translated">이 식의 노드 형식을 반환합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.MemberInitExpression.NodeType">
          <source>Extension nodes should return <ph id="ph1">&lt;see cref="F:System.Linq.Expressions.ExpressionType.Extension" /&gt;</ph> when overriding this method.</source>
          <target state="translated">확장 노드는 이 메서드를 재정의할 때 <ph id="ph1">&lt;see cref="F:System.Linq.Expressions.ExpressionType.Extension" /&gt;</ph>을 반환해야 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.MemberInitExpression.NodeType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.ExpressionType" /&gt;</ph> of the expression.</source>
          <target state="translated">식의 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.ExpressionType" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MemberInitExpression.Reduce">
          <source>Reduces the <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.MemberInitExpression" /&gt;</ph> to a simpler expression.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.Expressions.MemberInitExpression" /&gt;</ph>을 더 단순한 식으로 줄입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MemberInitExpression.Reduce">
          <source>The reduced expression.</source>
          <target state="translated">축소된 식입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Expressions.MemberInitExpression.Reduce">
          <source>If the <ph id="ph1">`CanReduce`</ph> method returns true, this method should return a valid expression.</source>
          <target state="translated">경우는 <ph id="ph1">`CanReduce`</ph> 메서드가 true를 반환 하면이 메서드는 유효한 식을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Expressions.MemberInitExpression.Reduce">
          <source>This method is allowed to return another node which itself must be reduced.</source>
          <target state="translated">이 메서드는 자체를 줄여야 다른 노드를 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.MemberInitExpression.Type">
          <source>Gets the static type of the expression that this <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> represents.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph>이 나타내는 식의 정적 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.MemberInitExpression.Type">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.MemberInitExpression.Type" /&gt;</ph> that represents the static type of the expression.</source>
          <target state="translated">식의 정적 형식을 나타내는 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.MemberInitExpression.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MemberInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /&gt;</ph> property of the result.</source>
          <target state="translated">결과의 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MemberInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /&gt;</ph> property of the result.</source>
          <target state="translated">결과의 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MemberInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
          <source>Creates a new expression that is like this one, but using the supplied children.</source>
          <target state="translated">제공된 자식을 사용하여 이 식과 같은 새 식을 만듭니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MemberInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
          <source>If all of the children are the same, it will return this expression.</source>
          <target state="translated">모든 자식이 같으면 이 식을 반환합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MemberInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
          <source>This expression if no children are changed or an expression with the updated children.</source>
          <target state="translated">자식이 변경되지 않은 경우 이 식이고, 그러지 않은 경우 자식이 업데이트된 식입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>