<Type Name="HasActivatableWorkflowEvent" FullName="System.Activities.DurableInstancing.HasActivatableWorkflowEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ffeadee2b98803676112409762252de088d2749" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36723252" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HasActivatableWorkflowEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasActivatableWorkflowEvent&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HasActivatableWorkflowEvent extends System.Runtime.DurableInstancing.InstancePersistenceEvent`1&lt;class System.Activities.DurableInstancing.HasActivatableWorkflowEvent&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DurableInstancing.HasActivatableWorkflowEvent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HasActivatableWorkflowEvent&#xA;Inherits InstancePersistenceEvent(Of HasActivatableWorkflowEvent)" />
  <TypeSignature Language="C++ CLI" Value="public ref class HasActivatableWorkflowEvent sealed : System::Runtime::DurableInstancing::InstancePersistenceEvent&lt;System::Activities::DurableInstancing::HasActivatableWorkflowEvent ^&gt;" />
  <TypeSignature Language="F#" Value="type HasActivatableWorkflowEvent = class&#xA;    inherit InstancePersistenceEvent&lt;HasActivatableWorkflowEvent&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasActivatableWorkflowEvent&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Activities.DurableInstancing.HasActivatableWorkflowEvent</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bbc62-101">Represents an event that an instance store raises to notify generic hosts about the existence of activatable instances in the persistence database.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bbc62-101">Represents an event that an instance store raises to notify generic hosts about the existence of activatable instances in the persistence database.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbc62-102">인스턴스는 *활성화할 수 있는*일시 중단 된 상태나 완료 된 상태가 아니며 다음 조건을 충족 하는 경우:</span><span class="sxs-lookup"><span data-stu-id="bbc62-102">An instance is *activatable*, if it is not in the suspended state or the completed state and satisfies the following conditions:</span></span>  
  
-   <span data-ttu-id="bbc62-103">인스턴스가 *실행 가능한*합니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-103">The instance is *runnable*.</span></span> <span data-ttu-id="bbc62-104">지속성 데이터베이스의 인스턴스는 다음 조건을 충족하는 경우 실행 가능으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-104">An instance in the persistence database is considered as runnable if it satisfies the following conditions:</span></span>  
  
    -   <span data-ttu-id="bbc62-105">인스턴스가 잠금 해제되었으며 만료된 보류 중인 타이머가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-105">The instance is unlocked and has a pending timer that has expired.</span></span>  
  
    -   <span data-ttu-id="bbc62-106">인스턴스가 잠금 해제 되어 하 고 해당 상태는 **Executing**합니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-106">The instance is unlocked and its status is **Executing**.</span></span>  
  
    -   <span data-ttu-id="bbc62-107">인스턴스에 잘못된 잠금이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-107">The instance has an invalid lock on it.</span></span>  
  
-   <span data-ttu-id="bbc62-108">컴퓨터에서 실행 중인 인스턴스를 로드할 수 있는 워크플로 호스트가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-108">There is no workflow host capable of loading the instance is running on the computer.</span></span>  
  
 <span data-ttu-id="bbc62-109">인스턴스 저장소는 해당 저장소를 사용하는 워크플로 호스트에 속하는 활성화 가능한 워크플로 인스턴스를 정기적으로 검색해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-109">An instance store should periodically search for activatable workflow instances that belong to a workflow host that uses the store.</span></span> <span data-ttu-id="bbc62-110">지속성 저장소에서 활성화 가능한 인스턴스를 찾으면 <xref:System.Activities.DurableInstancing.HasActivatableWorkflowEvent>를 발생시켜야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-110">It should raise the <xref:System.Activities.DurableInstancing.HasActivatableWorkflowEvent> when it finds an activatable instance in the persistence store.</span></span> <span data-ttu-id="bbc62-111">인스턴스 저장소가 지속성 저장소에서 활성화 가능한 인스턴스를 찾지 못하면 지속성 저장소에서 활성화 가능한 인스턴스를 계속 모니터링해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-111">If the instance store does not find an activatable instance in the persistence store, it should continue to monitor the persistence store for any activatable instances.</span></span>  
  
 <span data-ttu-id="bbc62-112">HasActivatableWorkflowEvent를 발생시킨 후 인스턴스 저장소는 <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand>를 받고 실행할 때까지 지속성 저장소에서 활성화 가능한 인스턴스를 모니터링하는 작업을 중지해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-112">After raising the HasActivatableWorkflowEvent, the instance store should stop monitoring the persistence store for activatable instances until it receives and executes the <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand>.</span></span> <span data-ttu-id="bbc62-113">명령 실행에서 활성화 가능한 워크플로 인스턴스를 반환하지 않는 경우에만 모니터링이 계속됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-113">The monitoring continues only if the command execution does not return any activatable workflow instances.</span></span>  
  
 <span data-ttu-id="bbc62-114">일반 호스트는 이 이벤트를 받을 경우 인스턴스 저장소에 대해 <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand>를 실행하여 워크플로 호스트를 만드는 데 필요한 활성화 매개 변수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-114">When a generic host receives this event, it executes the <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand> against the instance store to obtain activation parameters required to create a workflow host.</span></span> <span data-ttu-id="bbc62-115">일반 호스트는 이러한 활성화 매개 변수를 사용하여 워크플로 호스트를 만들고, 워크플로 호스트가 서비스 인스턴스를 로드 및 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-115">The generic host uses these activation parameters to create a workflow host, which in turn loads and runs the service instance.</span></span> <span data-ttu-id="bbc62-116">WAS 활성화 형식의 활성화 매개 변수는 사이트 이름, 응용 프로그램 경로(사이트 기준) 및 서비스 경로(응용 프로그램 기준)입니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-116">The activation parameters for the WAS activation type are: Site Name, Application Path (relative to the site), and Service Path (relative to the application).</span></span> <span data-ttu-id="bbc62-117">인스턴스 저장소는 이러한 세 활성화 매개 변수의 여러 집합을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-117">An instance store could return multiple sets of these three activation parameters.</span></span>  
  
 <span data-ttu-id="bbc62-118">일반 호스트는 이라는 XName 매개 변수가 있는 호스트 **ActivationType**, 인스턴스 저장소에서 지 원하는 값으로 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-118">A generic host is a host that has an XName parameter named **ActivationType**, which should be set to a value supported by the instance store.</span></span> <span data-ttu-id="bbc62-119">현재 SQL 워크플로 인스턴스 저장소는 ActivationType 매개 변수 값으로 설정 된 일반 호스트를 지원: **WAS**합니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-119">Currently, the SQL Workflow Instance Store supports generic hosts with ActivationType parameter set to value: **WAS**.</span></span> <span data-ttu-id="bbc62-120">ActivationType이 설정되어 있지 않으면 SQL 워크플로 인스턴스 저장소는 호스트를 일반 호스트로 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-120">If the ActivationType is not set at all, the SQL Workflow Instance Store treats the host as a generic host.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bbc62-121">코드와 "dublin" (Application Server Extensions for.NET 4.0) 워크플로 관리 서비스 정품 인증 유형으로 설정 된 일반 호스트는 **WAS**합니다.</span><span class="sxs-lookup"><span data-stu-id="bbc62-121">The Workflow Management Service that ships with the code named "Dublin" (Application Server Extensions for .NET 4.0) is a generic host that has the activation type set to **WAS**.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HasActivatableWorkflowEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.HasActivatableWorkflowEvent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HasActivatableWorkflowEvent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bbc62-122">Initializes a new instance of the <see cref="T:System.Activities.DurableInstancing.HasActivatableWorkflowEvent" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbc62-122">Initializes a new instance of the <see cref="T:System.Activities.DurableInstancing.HasActivatableWorkflowEvent" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>