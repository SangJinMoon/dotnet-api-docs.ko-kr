<Type Name="HasRunnableWorkflowEvent" FullName="System.Activities.DurableInstancing.HasRunnableWorkflowEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1cfd646d1e20d071ee8c664f99f0d0a8ba1ebead" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36655565" /></Metadata><TypeSignature Language="C#" Value="public sealed class HasRunnableWorkflowEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HasRunnableWorkflowEvent extends System.Runtime.DurableInstancing.InstancePersistenceEvent`1&lt;class System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HasRunnableWorkflowEvent&#xA;Inherits InstancePersistenceEvent(Of HasRunnableWorkflowEvent)" />
  <TypeSignature Language="C++ CLI" Value="public ref class HasRunnableWorkflowEvent sealed : System::Runtime::DurableInstancing::InstancePersistenceEvent&lt;System::Activities::DurableInstancing::HasRunnableWorkflowEvent ^&gt;" />
  <TypeSignature Language="F#" Value="type HasRunnableWorkflowEvent = class&#xA;    inherit InstancePersistenceEvent&lt;HasRunnableWorkflowEvent&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Activities.DurableInstancing.HasRunnableWorkflowEvent</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="300a0-101">지속성 데이터베이스에 실행 가능한 인스턴스가 있음을 워크플로 호스트에 알리기 위해 SQL 워크플로 인스턴스 저장소에서 발생시키는 이벤트를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="300a0-101">Represents an event that the SQL Workflow Instance Store raises to notify workflow hosts about the existence of runnable instances in the persistence database.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="300a0-102">인스턴스가 *runnable*일시 중단 된 상태나 완료 된 상태가 아니며 다음 조건을 충족 하는 경우:</span><span class="sxs-lookup"><span data-stu-id="300a0-102">An instance is *runnable*, if it is not in the suspended state or the completed state and satisfies the following conditions:</span></span>  
  
-   <span data-ttu-id="300a0-103">인스턴스가 잠금 해제되었으며 만료된 보류 중인 타이머가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="300a0-103">The instance is unlocked and has a pending timer that has expired.</span></span>  
  
-   <span data-ttu-id="300a0-104">인스턴스를 잠금 해제 하 고 해당 상태가 **Executing**합니다.</span><span class="sxs-lookup"><span data-stu-id="300a0-104">The instance is unlocked and its status is **Executing**.</span></span>  
  
-   <span data-ttu-id="300a0-105">인스턴스에 잘못된 잠금이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="300a0-105">The instance has an invalid lock on it.</span></span>  
  
 <span data-ttu-id="300a0-106">인스턴스 저장소는 해당 저장소를 사용하는 워크플로 호스트에 속하는 실행 가능한 인스턴스를 정기적으로 검색해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="300a0-106">An instance store should periodically search for runnable instances that belong to a workflow host that uses the store.</span></span> <span data-ttu-id="300a0-107">지속성 저장소에서 워크플로 호스트 형식과 일치하는 실행 가능한 인스턴스를 찾으면 <xref:System.Activities.DurableInstancing.HasRunnableWorkflowEvent>를 발생시켜야 합니다.</span><span class="sxs-lookup"><span data-stu-id="300a0-107">It should raise the <xref:System.Activities.DurableInstancing.HasRunnableWorkflowEvent> when it finds a runnable instance in the persistence store that matches its workflow host type.</span></span> <span data-ttu-id="300a0-108">인스턴스 저장소가 지속성 저장소에서 실행 가능한 인스턴스를 찾지 못하면 지속성 저장소에서 실행 가능한 인스턴스를 계속 모니터링해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="300a0-108">If the instance store does not find a runnable instance in the persistence store, it should continue to monitor the persistence store for any runnable instances.</span></span>  
  
 <span data-ttu-id="300a0-109">HasRunnableWorkflowEvent를 발생시킨 후 인스턴스 저장소는 <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>를 받고 실행할 때까지 지속성 저장소에서 실행 가능한 인스턴스를 모니터링하는 작업을 중지해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="300a0-109">After raising the HasRunnableWorkflowEvent, the instance store should stop monitoring the persistence store for runnable instances until it receives and executes the <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>.</span></span> <span data-ttu-id="300a0-110">TryLoadRunnableWorkflowCommand 실행에서 실행 가능한 인스턴스를 반환하지 않는 경우에만 모니터링이 계속됩니다.</span><span class="sxs-lookup"><span data-stu-id="300a0-110">The monitoring continues only if the TryLoadRunnableWorkflowCommand execution does not return any runnable instances.</span></span>  
  
 <span data-ttu-id="300a0-111">워크플로 호스트는 HasRunnableWorkflowEvent를 받을 경우 인스턴스 저장소에 대해 <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>를 실행하여 인스턴스를 메모리로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="300a0-111">When a workflow host receives the HasRunnableWorkflowEvent, it executes the <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand> against the instance store to load the instance into the memory.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HasRunnableWorkflowEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HasRunnableWorkflowEvent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="300a0-112"><see cref="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" /> 클래스의 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="300a0-112">Initializes an instance of the <see cref="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>