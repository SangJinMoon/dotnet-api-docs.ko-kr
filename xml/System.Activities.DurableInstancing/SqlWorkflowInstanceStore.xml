<Type Name="SqlWorkflowInstanceStore" FullName="System.Activities.DurableInstancing.SqlWorkflowInstanceStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2db8fb9381544484addb4a07acd8fd4f21ad3d5e" /><Meta Name="ms.sourcegitcommit" Value="d8bd5d494445ce3fcad1321267cb87548d23a45b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/15/2018" /><Meta Name="ms.locfileid" Value="53449517" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlWorkflowInstanceStore : System.Runtime.DurableInstancing.InstanceStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlWorkflowInstanceStore extends System.Runtime.DurableInstancing.InstanceStore" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DurableInstancing.SqlWorkflowInstanceStore" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlWorkflowInstanceStore&#xA;Inherits InstanceStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlWorkflowInstanceStore sealed : System::Runtime::DurableInstancing::InstanceStore" />
  <TypeSignature Language="F#" Value="type SqlWorkflowInstanceStore = class&#xA;    inherit InstanceStore" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.DurableInstancing.InstanceStore</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4fdfa-101">지속성 기능의 추상 <see cref="T:System.Runtime.DurableInstancing.InstanceStore" /> 클래스에서 파생되며 SQL Server 2005 또는 SQL Server 2008 데이터베이스에 인스턴스 상태 정보를 저장하고 해당 데이터베이스에서 인스턴스 상태 정보를 로드할 수 있는 구현을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-101">Derives from the abstract <see cref="T:System.Runtime.DurableInstancing.InstanceStore" /> class of the persistence functionality and provides implementation to allow saving instance state information to and loading instance state information from an SQL Server 2005 or SQL Server 2008 database.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fdfa-102"><xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>에서 <xref:System.Runtime.Serialization.NetDataContractSerializer>를 사용하여 복합 형식을 serialize하고, 이 인스턴스 저장소에 유지될 워크플로에서 사용되는 모든 형식은 <xref:System.Runtime.Serialization.NetDataContractSerializer>를 사용하여 serialize할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-102"><xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore> uses the <xref:System.Runtime.Serialization.NetDataContractSerializer> to serialize complex types; all types used in workflows to be persisted with this instance store must be serializable using <xref:System.Runtime.Serialization.NetDataContractSerializer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fdfa-103">다음 코드 샘플에서는 <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-103">The following code sample demonstrates creating a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="4fdfa-104">이 예제에서는 합니다 [지 속성 참석자](~/docs/framework/windows-workflow-foundation/persistence-participants.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-104">This example is from the [Persistence Participants](~/docs/framework/windows-workflow-foundation/persistence-participants.md) sample.</span></span>  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4fdfa-105"><see cref="T:System.Activities.DurableInstancing.SqlWorkflowInstanceStore" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-105">Initializes a new instance of the <see cref="T:System.Activities.DurableInstancing.SqlWorkflowInstanceStore" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlWorkflowInstanceStore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlWorkflowInstanceStore();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4fdfa-106"><see cref="T:System.Activities.DurableInstancing.SqlWorkflowInstanceStore" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-106">Initializes a new instance of the <see cref="T:System.Activities.DurableInstancing.SqlWorkflowInstanceStore" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlWorkflowInstanceStore (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlWorkflowInstanceStore(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Activities.DurableInstancing.SqlWorkflowInstanceStore : string -&gt; System.Activities.DurableInstancing.SqlWorkflowInstanceStore" Usage="new System.Activities.DurableInstancing.SqlWorkflowInstanceStore connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="4fdfa-107">지속성 데이터베이스에 대한 연결 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-107">The connection string to a persistence database.</span></span></param>
        <summary><span data-ttu-id="4fdfa-108"><see cref="T:System.Activities.DurableInstancing.SqlWorkflowInstanceStore" /> 매개 변수를 사용하여 <paramref name="connectionString" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-108">Initializes a new instance of the <see cref="T:System.Activities.DurableInstancing.SqlWorkflowInstanceStore" /> class by using the <paramref name="connectionString" /> parameter.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTryCommand">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult BeginTryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult BeginTryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function BeginTryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ BeginTryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginTryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlWorkflowInstanceStore.BeginTryCommand (context, command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="command">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Activities.DurableInstancing.SqlWorkflowInstanceStore.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fdfa-109">기본 지속성 데이터베이스에 연결하는 데 사용되는 매개 변수를 통해 연결 문자열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-109">Gets or sets a connection string with parameters that are used to connect to an underlying persistence database.</span></span></summary>
        <value><span data-ttu-id="4fdfa-110">연결 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-110">The connection string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTryCommand">
      <MemberSignature Language="C#" Value="protected internal override bool EndTryCommand (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool EndTryCommand(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.EndTryCommand(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function EndTryCommand (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool EndTryCommand(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.EndTryCommand : IAsyncResult -&gt; bool" Usage="sqlWorkflowInstanceStore.EndTryCommand result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnqueueRunCommands">
      <MemberSignature Language="C#" Value="public bool EnqueueRunCommands { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnqueueRunCommands" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.EnqueueRunCommands" />
      <MemberSignature Language="VB.NET" Value="Public Property EnqueueRunCommands As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnqueueRunCommands { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnqueueRunCommands : bool with get, set" Usage="System.Activities.DurableInstancing.SqlWorkflowInstanceStore.EnqueueRunCommands" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fdfa-111">실행 명령이 큐에 삽입되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-111">Gets or sets a value that indicates whether Run commands are enqueued.</span></span> <span data-ttu-id="4fdfa-112">이 속성은 SQL 워크플로 인스턴스 저장소에서 내부적으로 사용되며 사용자 애플리케이션에서 사용하면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-112">This property is used internally by the SQL Workflow Instance Store and it should not be used in your applications.</span></span></summary>
        <value><span data-ttu-id="4fdfa-113"><see langword="true" /> 실행 명령이 큐에 넣은; 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-113"><see langword="true" /> if the Run commands are enqueued; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostLockRenewalPeriod">
      <MemberSignature Language="C#" Value="public TimeSpan HostLockRenewalPeriod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan HostLockRenewalPeriod" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.HostLockRenewalPeriod" />
      <MemberSignature Language="VB.NET" Value="Public Property HostLockRenewalPeriod As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan HostLockRenewalPeriod { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.HostLockRenewalPeriod : TimeSpan with get, set" Usage="System.Activities.DurableInstancing.SqlWorkflowInstanceStore.HostLockRenewalPeriod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fdfa-114">호스트가 워크플로 서비스 인스턴스의 잠금을 갱신하는 기간을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-114">Specifies the time period within which the host renews its lock on a workflow service instance.</span></span></summary>
        <value><span data-ttu-id="4fdfa-115">기간입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-115">The time period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fdfa-116">호스트가 이 기간 내에 잠금을 갱신(즉, 대여를 연장)하지 않으면 지속성 공급자가 인스턴스 잠금을 해제하며 다른 호스트가 인스턴스를 잠글 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-116">If the host does not renew the lock (in other words, extend the lease) with this in this time period, the persistence provider unlocks the instance and another host may lock the instance.</span></span> <span data-ttu-id="4fdfa-117">값이는 <xref:System.TimeSpan> "hh: mm:" 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-117">The value is a <xref:System.TimeSpan> of the form "hh:mm:ss".</span></span> <span data-ttu-id="4fdfa-118">허용 되는 최소값은 "00: 00:01" (1 초)입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-118">The minimum permitted value is "00:00:01" (1 sec).</span></span> <span data-ttu-id="4fdfa-119">이 속성의 기본값은 "00: 00:30" (30 초)입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-119">The default value of this property is "00:00:30" (30 seconds).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fdfa-120">다음 코드 샘플에서는 <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>에 HostLockRenewalPeriod를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-120">The following code sample demonstrates using HostLockRenewalPeriod in a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="4fdfa-121">이 예제에서는 합니다 [기본 제공 구성](~/docs/framework/windows-workflow-foundation/samples/built-in-configuration.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-121">This example is from the [Built-in Configuration](~/docs/framework/windows-workflow-foundation/samples/built-in-configuration.md) sample.</span></span>  
  
 [!code-csharp[wfs_BuiltInConfiguration#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_builtinconfiguration/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceCompletionAction">
      <MemberSignature Language="C#" Value="public System.Activities.DurableInstancing.InstanceCompletionAction InstanceCompletionAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Activities.DurableInstancing.InstanceCompletionAction InstanceCompletionAction" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.InstanceCompletionAction" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceCompletionAction As InstanceCompletionAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::DurableInstancing::InstanceCompletionAction InstanceCompletionAction { System::Activities::DurableInstancing::InstanceCompletionAction get(); void set(System::Activities::DurableInstancing::InstanceCompletionAction value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceCompletionAction : System.Activities.DurableInstancing.InstanceCompletionAction with get, set" Usage="System.Activities.DurableInstancing.SqlWorkflowInstanceStore.InstanceCompletionAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.DurableInstancing.InstanceCompletionAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fdfa-122">워크플로 인스턴스가 완료된 후 수행할 작업을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-122">Specifies the action to be taken after a workflow instance completes.</span></span> <span data-ttu-id="4fdfa-123">가능한 값은 "DeleteNothing" 및 "DeleteAll"입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-123">Possible values are "DeleteNothing" and "DeleteAll".</span></span> <span data-ttu-id="4fdfa-124">기본값은 "DeleteAll"입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-124">The default value is "DeleteAll".</span></span> <span data-ttu-id="4fdfa-125">속성이 "DeleteNothing"으로 설정된 경우에는 지속성 공급자는 워크플로 인스턴스가 완료된 후 지속성 데이터베이스에 모든 인스턴스 데이터 및 메타데이터를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-125">If the property is set to "DeleteNothing", the persistence provider keeps all the instance data and metadata in the persistence database after the workflow instance completes.</span></span> <span data-ttu-id="4fdfa-126">속성이 "DeleteAll"로 설정된 경우에는 워크플로 인스턴스가 완료된 후 지속성 공급자가 모든 인스턴스 데이터와 메타데이터를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-126">If the property is set to "DeleteAll", the persistence provider deletes all the instance data and metadata after the workflow instance completes.</span></span></summary>
        <value><span data-ttu-id="4fdfa-127">워크플로 인스턴스가 완료된 후 수행할 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-127">The action to be taken after a workflow completes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fdfa-128">가능한 값은 "DeleteNothing" 및 "DeleteAll"입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-128">Possible values are "DeleteNothing" and "DeleteAll".</span></span> <span data-ttu-id="4fdfa-129">기본값은 "DeleteAll"입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-129">The default value is "DeleteAll".</span></span> <span data-ttu-id="4fdfa-130">속성이 "DeleteNothing"으로 설정된 경우에는 지속성 공급자는 워크플로 인스턴스가 완료된 후 지속성 데이터베이스에 모든 인스턴스 데이터 및 메타데이터를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-130">If the property is set to "DeleteNothing", the persistence provider keeps all the instance data and metadata in the persistence database after the workflow instance completes.</span></span> <span data-ttu-id="4fdfa-131">속성이 "DeleteAll"로 설정된 경우에는 워크플로 인스턴스가 완료된 후 지속성 공급자가 모든 인스턴스 데이터와 메타데이터를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-131">If the property is set to "DeleteAll", the persistence provider deletes all the instance data and metadata after the workflow instance completes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fdfa-132">다음 코드 샘플에서는 <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>에 InstanceCompletionAction을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-132">The following code sample demonstrates using InstanceCompletionAction in a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="4fdfa-133">이 예제에서는 합니다 [기본 제공 구성](~/docs/framework/windows-workflow-foundation/samples/built-in-configuration.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-133">This example is from the [Built-in Configuration](~/docs/framework/windows-workflow-foundation/samples/built-in-configuration.md) sample.</span></span>  
  
 [!code-csharp[wfs_BuiltInConfiguration#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_builtinconfiguration/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceEncodingOption">
      <MemberSignature Language="C#" Value="public System.Activities.DurableInstancing.InstanceEncodingOption InstanceEncodingOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Activities.DurableInstancing.InstanceEncodingOption InstanceEncodingOption" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.InstanceEncodingOption" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceEncodingOption As InstanceEncodingOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::DurableInstancing::InstanceEncodingOption InstanceEncodingOption { System::Activities::DurableInstancing::InstanceEncodingOption get(); void set(System::Activities::DurableInstancing::InstanceEncodingOption value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceEncodingOption : System.Activities.DurableInstancing.InstanceEncodingOption with get, set" Usage="System.Activities.DurableInstancing.SqlWorkflowInstanceStore.InstanceEncodingOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.DurableInstancing.InstanceEncodingOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fdfa-134">인스턴스 데이터를 압축해야 하는지 여부를 나타내는 값을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-134">Specifies a value that indicates whether the instance data must be compressed.</span></span></summary>
        <value><span data-ttu-id="4fdfa-135">가능한 값은 "None"과 "GZip"입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-135">The possible values are "None" and "GZip".</span></span> <span data-ttu-id="4fdfa-136">기본값은 "None"입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-136">The default is "None".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fdfa-137">값은 "GZip"으로 설정 하는 경우 인스턴스 데이터가 GZip 알고리즘을 사용 하 여 압축 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-137">If the value is set to "GZip", the instance data is compressed using the GZip algorithm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fdfa-138">다음 코드 샘플에서는 <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>에 InstanceEncodingOption을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-138">The following code sample demonstrates using InstanceEncodingOption in a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="4fdfa-139">이 예제에서는 합니다 [기본 제공 구성](~/docs/framework/windows-workflow-foundation/samples/built-in-configuration.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-139">This example is from the [Built-in Configuration](~/docs/framework/windows-workflow-foundation/samples/built-in-configuration.md) sample.</span></span>  
  
 [!code-csharp[wfs_BuiltInConfiguration#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_builtinconfiguration/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceLockedExceptionAction">
      <MemberSignature Language="C#" Value="public System.Activities.DurableInstancing.InstanceLockedExceptionAction InstanceLockedExceptionAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Activities.DurableInstancing.InstanceLockedExceptionAction InstanceLockedExceptionAction" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.InstanceLockedExceptionAction" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceLockedExceptionAction As InstanceLockedExceptionAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::DurableInstancing::InstanceLockedExceptionAction InstanceLockedExceptionAction { System::Activities::DurableInstancing::InstanceLockedExceptionAction get(); void set(System::Activities::DurableInstancing::InstanceLockedExceptionAction value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceLockedExceptionAction : System.Activities.DurableInstancing.InstanceLockedExceptionAction with get, set" Usage="System.Activities.DurableInstancing.SqlWorkflowInstanceStore.InstanceLockedExceptionAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.DurableInstancing.InstanceLockedExceptionAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fdfa-140">지속성 공급자가 <see cref="T:System.Runtime.DurableInstancing.InstanceLockedException" />을 catch할 때 수행할 동작을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-140">Specifies the action to be taken when the persistence provider catches an <see cref="T:System.Runtime.DurableInstancing.InstanceLockedException" />.</span></span></summary>
        <value><span data-ttu-id="4fdfa-141">지속성 공급자가 <see cref="T:System.Runtime.DurableInstancing.InstanceLockedException" />을 catch할 때 수행할 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-141">The action to be taken when the persistence provider catches an <see cref="T:System.Runtime.DurableInstancing.InstanceLockedException" /></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fdfa-142">워크플로 서비스 인스턴스에서 <xref:System.Runtime.DurableInstancing.InstanceLockedException>이 발생할 때 서비스 호스트가 수행할 동작을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-142">Specify what action a service host should take when a workflow service instance experiences an <xref:System.Runtime.DurableInstancing.InstanceLockedException>.</span></span> <span data-ttu-id="4fdfa-143">서비스 호스트가 다른 소유자에 의해 이미 잠긴 인스턴스를 잠그려고 하면 <xref:System.Runtime.DurableInstancing.InstanceLockedException>이 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-143">The service host receives an <xref:System.Runtime.DurableInstancing.InstanceLockedException> when it tries to lock an instance that is already locked by another owner.</span></span> <span data-ttu-id="4fdfa-144">가능한 값은 다음 목록에 나와 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-144">The possible values are in the following list:</span></span>  
  
-   <span data-ttu-id="4fdfa-145">**None**합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-145">**None**.</span></span> <span data-ttu-id="4fdfa-146">서비스 호스트가 인스턴스 잠금을 시도하지 않고 <xref:System.Runtime.DurableInstancing.InstanceLockedException>을 호출자에게 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-146">The service host does not attempt to lock the instance and passes the <xref:System.Runtime.DurableInstancing.InstanceLockedException> to the caller.</span></span>  
  
-   <span data-ttu-id="4fdfa-147">**BasicRetry**합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-147">**BasicRetry**.</span></span> <span data-ttu-id="4fdfa-148">서비스 호스트가 선형 다시 시도 간격을 사용하여 인스턴스 잠금을 다시 시도하고 시퀀스의 끝에 예외를 호출자에게 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-148">The service host reattempts to lock the instance with a linear retry interval and passes the exception to the caller at the end of the sequence.</span></span>  
  
-   <span data-ttu-id="4fdfa-149">**Aggressiveretry로**합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-149">**AggressiveRetry**.</span></span> <span data-ttu-id="4fdfa-150">서비스 호스트에서 지연 간격을 기하급수적으로 증가시켜 인스턴스 잠금을 다시 시도하고 시퀀스 마지막에 <xref:System.Runtime.DurableInstancing.InstanceLockedException>을 호출자에게 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-150">The service host reattempts to lock the instance with an exponentially increasing delay and passes the <xref:System.Runtime.DurableInstancing.InstanceLockedException> to the caller at the end of the sequence.</span></span> <span data-ttu-id="4fdfa-151">가능한 한 빨리 잠금을 얻기 위해 처음에는 간격이 짧지만 시도가 실패할수록 간격이 더 커집니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-151">The intervals are short in the beginning in an attempt to acquire the lock as quickly as possible and the intervals gets bigger with every unsuccessful attempt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fdfa-152">다음 코드 샘플에서는 <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>에 InstanceLockedExceptionAction을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-152">The following code sample demonstrates using InstanceLockedExceptionAction in a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="4fdfa-153">이 예제에서는 합니다 [기본 제공 구성](~/docs/framework/windows-workflow-foundation/samples/built-in-configuration.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-153">This example is from the [Built-in Configuration](~/docs/framework/windows-workflow-foundation/samples/built-in-configuration.md) sample.</span></span>  
  
 [!code-csharp[wfs_BuiltInConfiguration#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_builtinconfiguration/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConnectionRetries">
      <MemberSignature Language="C#" Value="public int MaxConnectionRetries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConnectionRetries" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.MaxConnectionRetries" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnectionRetries As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConnectionRetries { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConnectionRetries : int with get, set" Usage="System.Activities.DurableInstancing.SqlWorkflowInstanceStore.MaxConnectionRetries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fdfa-154">SQL 연결 다시 시도의 최대 횟수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-154">Gets or sets the maximum number of SQL connection retries.</span></span>  <span data-ttu-id="4fdfa-155">기본값은 4입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-155">The default value is 4.</span></span></summary>
        <value><span data-ttu-id="4fdfa-156">SQL 연결 다시 시도의 최대 횟수를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-156">An integer representing the maximum number of SQL connection retries.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFreeInstanceHandle">
      <MemberSignature Language="C#" Value="protected override void OnFreeInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFreeInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFreeInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle, System::Object ^ userContext);" />
      <MemberSignature Language="F#" Value="override this.OnFreeInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle * obj -&gt; unit" Usage="sqlWorkflowInstanceStore.OnFreeInstanceHandle (instanceHandle, userContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="userContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceHandle">To be added.</param>
        <param name="userContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNewInstanceHandle">
      <MemberSignature Language="C#" Value="protected override object OnNewInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object OnNewInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ OnNewInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle);" />
      <MemberSignature Language="F#" Value="override this.OnNewInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle -&gt; obj" Usage="sqlWorkflowInstanceStore.OnNewInstanceHandle instanceHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
      </Parameters>
      <Docs>
        <param name="instanceHandle">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Promote">
      <MemberSignature Language="C#" Value="public void Promote (string name, System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XName&gt; promoteAsVariant, System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XName&gt; promoteAsBinary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Promote(string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XName&gt; promoteAsVariant, class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XName&gt; promoteAsBinary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.Promote(System.String,System.Collections.Generic.IEnumerable{System.Xml.Linq.XName},System.Collections.Generic.IEnumerable{System.Xml.Linq.XName})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Promote (name As String, promoteAsVariant As IEnumerable(Of XName), promoteAsBinary As IEnumerable(Of XName))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Promote(System::String ^ name, System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XName ^&gt; ^ promoteAsVariant, System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XName ^&gt; ^ promoteAsBinary);" />
      <MemberSignature Language="F#" Value="member this.Promote : string * seq&lt;System.Xml.Linq.XName&gt; * seq&lt;System.Xml.Linq.XName&gt; -&gt; unit" Usage="sqlWorkflowInstanceStore.Promote (name, promoteAsVariant, promoteAsBinary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="promoteAsVariant" Type="System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XName&gt;" />
        <Parameter Name="promoteAsBinary" Type="System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XName&gt;" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4fdfa-157">승격 자체의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-157">The name of the promotion itself.</span></span></param>
        <param name="promoteAsVariant"><span data-ttu-id="4fdfa-158">variant로 승격해야 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-158">The properties that must be promoted as variants.</span></span></param>
        <param name="promoteAsBinary"><span data-ttu-id="4fdfa-159">이진 스트림으로 승격해야 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-159">The properties that must be promoted as a binary stream.</span></span></param>
        <summary><span data-ttu-id="4fdfa-160">지정한 속성을 워크플로 인스턴스와 연결하여 해당 속성의 특정 값을 기준으로 인스턴스를 쿼리할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-160">Associates the specified properties with a workflow instance so that you can query for instances based on specific values for these properties.</span></span> <span data-ttu-id="4fdfa-161">외부 쿼리에 사용할 수 있는 이러한 속성은 기본 형식(예: Int64, 문자열 등)이거나 직렬화된 이진 형식(byte[])일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-161">These properties that can be used in external queries can be of simple types (for example: Int64, String, and so on) or of a serialized binary type (byte[]).</span></span> <span data-ttu-id="4fdfa-162">일반적으로 이진 속성은 추적 데이터를 저장하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-162">Binary properties are typically used to store tracking data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4fdfa-163">다음 코드 샘플에서는 <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>에 Promote를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-163">The following code sample demonstrates using Promote in a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="4fdfa-164">이 예제에서는 합니다 [SQLStoreExtensibility](~/docs/framework/windows-workflow-foundation/samples/sqlstoreextensibility.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-164">This example is from the [SQLStoreExtensibility](~/docs/framework/windows-workflow-foundation/samples/sqlstoreextensibility.md) sample.</span></span>  
  
 [!code-csharp[wfs_SQLStoreExtensibility#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_sqlstoreextensibility/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunnableInstancesDetectionPeriod">
      <MemberSignature Language="C#" Value="public TimeSpan RunnableInstancesDetectionPeriod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RunnableInstancesDetectionPeriod" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.RunnableInstancesDetectionPeriod" />
      <MemberSignature Language="VB.NET" Value="Public Property RunnableInstancesDetectionPeriod As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RunnableInstancesDetectionPeriod { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RunnableInstancesDetectionPeriod : TimeSpan with get, set" Usage="System.Activities.DurableInstancing.SqlWorkflowInstanceStore.RunnableInstancesDetectionPeriod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fdfa-165">SQL 워크플로 인스턴스 저장소가 이전 검색 주기 후에 지속성 데이터베이스에서 실행 또는 활성화 가능한 워크플로 인스턴스를 검색하는 검색 작업을 실행하는 간격을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-165">Specifies the time period after which the SQL Workflow Instance Store runs a detection task to detect any runnable or activatable workflow instances in the persistence database after the previous detection cycle.</span></span></summary>
        <value><span data-ttu-id="4fdfa-166"><see cref="T:System.TimeSpan" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-166">Returns <see cref="T:System.TimeSpan" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fdfa-167"><xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>는 정기적으로 다시 시작되는 내부 작업을 실행하여 지속성 데이터베이스에 실행 가능한 인스턴스가 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-167">The <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore> runs an internal task that periodically wakes up and checks if any runnable instances exist in the persistence database.</span></span> <span data-ttu-id="4fdfa-168">인스턴스가 *runnable*일시 중단 된 상태나 완료 된 상태가 아니며 다음 조건을 충족 하는 경우:</span><span class="sxs-lookup"><span data-stu-id="4fdfa-168">An instance is *runnable*, if it is not in the suspended state or the completed state and satisfies the following conditions:</span></span>  
  
-   <span data-ttu-id="4fdfa-169">인스턴스가 잠금 해제되었으며 만료된 보류 중인 타이머가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-169">The instance is unlocked and has a pending timer that has expired.</span></span>  
  
-   <span data-ttu-id="4fdfa-170">인스턴스를 잠금 해제 하 고 해당 상태가 **Executing**합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-170">The instance is unlocked and its status is **Executing**.</span></span>  
  
-   <span data-ttu-id="4fdfa-171">인스턴스에 만료된 잠금이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-171">The instance has an expired lock on it.</span></span>  
  
 <span data-ttu-id="4fdfa-172">SQL 워크플로 인스턴스 저장소는 데이터베이스에서 실행 가능한 인스턴스를 찾았으며 컴퓨터에서 실행 중인 인스턴스를 로드할 수 있는 워크플로 호스트도 찾은 경우 <xref:System.Activities.DurableInstancing.HasRunnableWorkflowEvent>를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-172">The SQL Workflow Instance Store raises the <xref:System.Activities.DurableInstancing.HasRunnableWorkflowEvent> when it finds a runnable instance in the database and also finds a workflow host capable of loading the instance running on the computer.</span></span>  
  
 <span data-ttu-id="4fdfa-173">워크플로 호스트는 이 이벤트를 받을 경우 인스턴스 저장소에 대해 <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>를 실행하여 인스턴스를 메모리로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-173">When a workflow host receives this event, it executes the <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand> against the instance store to load the instance into the memory.</span></span>  
  
 <span data-ttu-id="4fdfa-174">형식의 속성 형식은 TimeSpan이 고 값은 "mm: ss" 형식의.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-174">The type of the property is TimeSpan and the value is of the form "hh:mm:ss".</span></span> <span data-ttu-id="4fdfa-175">최소값은 "00: 00:01" (1 초)입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-175">The minimum value is "00:00:01" (1 sec).</span></span> <span data-ttu-id="4fdfa-176">생략 하면 기본값은 "00: 00:05" (5 초)입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-176">If omitted, defaults to "00:00:05" (5 secs).</span></span> <span data-ttu-id="4fdfa-177">이 매개 변수는 선택적 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-177">This parameter is an optional parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fdfa-178">다음 코드 샘플에서는 <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>에 RunnableInstancesDetectionPeriod를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-178">The following code sample demonstrates using RunnableInstancesDetectionPeriod in a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="4fdfa-179">이 예제에서는 합니다 [기본 제공 구성](~/docs/framework/windows-workflow-foundation/samples/built-in-configuration.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-179">This example is from the [Built-in Configuration](~/docs/framework/windows-workflow-foundation/samples/built-in-configuration.md) sample.</span></span>  
  
 [!code-csharp[wfs_BuiltInConfiguration#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_builtinconfiguration/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>