<Type Name="VectorEnumerator&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.VectorEnumerator&lt;TValue&gt;">
  <TypeSignature Language="C#" Value="public class VectorEnumerator&lt;TValue&gt; : Microsoft.VisualC.StlClr.VectorEnumeratorBase&lt;TValue&gt;, System.Collections.Generic.IEnumerator&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VectorEnumerator`1&lt;TValue&gt; extends Microsoft.VisualC.StlClr.VectorEnumeratorBase`1&lt;!TValue&gt; implements class System.Collections.Generic.IEnumerator`1&lt;!TValue&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
  <TypeSignature Language="VB.NET" Value="Public Class VectorEnumerator(Of TValue)&#xA;Inherits VectorEnumeratorBase(Of TValue)&#xA;Implements IEnumerator(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public ref class VectorEnumerator : Microsoft::VisualC::StlClr::VectorEnumeratorBase&lt;TValue&gt;, System::Collections::Generic::IEnumerator&lt;TValue&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.VisualC.StlClr.VectorEnumeratorBase&lt;TValue&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TValue">TValue</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;TValue&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TValue"><span data-ttu-id="aa204-101">제어되는 시퀀스의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="aa204-101">The type of an element in the controlled sequence.</span></span></typeparam>
    <summary><span data-ttu-id="aa204-102"><see cref="T:Microsoft.VisualC.StlClr.IVector`1" /> 인터페이스를 구현하는 STL/CLR 개체에 대한 단순 반복을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="aa204-102">Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IVector`1" /> interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VectorEnumerator (Microsoft.VisualC.StlClr.IVector&lt;TValue&gt; _Cont, int _First);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.VisualC.StlClr.IVector`1&lt;!TValue&gt; _Cont, int32 _First) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.#ctor(Microsoft.VisualC.StlClr.IVector{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (_Cont As IVector(Of TValue), _First As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VectorEnumerator(Microsoft::VisualC::StlClr::IVector&lt;TValue&gt; ^ _Cont, int _First);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="_Cont" Type="Microsoft.VisualC.StlClr.IVector&lt;TValue&gt;" />
        <Parameter Name="_First" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Cont"><span data-ttu-id="aa204-103">반복할 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="aa204-103">The container over which to iterate.</span></span></param>
        <param name="_First"><span data-ttu-id="aa204-104">컨테이너에서 현재 첫 번째 요소의 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="aa204-104">The offset of the current first element in the container.</span></span></param>
        <summary><span data-ttu-id="aa204-105">새 <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> 개체를 할당하고 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="aa204-105">Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public virtual TValue Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Current" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.VectorEnumerator`1.Current" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Current As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TValue Current { TValue get(); void set(TValue value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa204-106">컬렉션의 현재 요소를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="aa204-106">Gets or sets the current element in the collection.</span></span></summary>
        <value><span data-ttu-id="aa204-107">컬렉션의 현재 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="aa204-107">The current element in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aa204-108"><see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> 개체에 사용되는 관리되지 않는 리소스를 사용 가능하게 하거나, 해제하거나, 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="aa204-108">Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa204-109"><see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> 개체에 사용되는 관리되지 않는 리소스를 사용 가능하게 하거나, 해제하거나, 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="aa204-109">Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">
          <span data-ttu-id="aa204-110">관리되는 개체를 삭제하려면 <see langword="true" />이고, 관리되지 않는 개체를 삭제하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="aa204-110"><see langword="true" /> to dispose of managed objects; <see langword="false" /> to dispose of unmanaged objects.</span></span></param>
        <summary><span data-ttu-id="aa204-111"><see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> 개체에 사용되는 관리되지 않는 리소스를 사용 가능하게 하거나, 해제하거나, 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="aa204-111">Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public override bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa204-112">열거자를 컬렉션의 다음 요소로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="aa204-112">Advances the enumerator to the next element in the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="aa204-113">열거자가 다음 요소로 이동한 경우 <see langword="true" />이(가) 반환되고, 컬렉션의 끝을 지난 경우 <see langword="false" />이(가) 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="aa204-113"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa204-114">컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="aa204-114">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>