<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IPriorityQueue`2.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cc5bfc6d68c03a0b4e7d286c3ca517fadf98bae5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc5bfc6d68c03a0b4e7d286c3ca517fadf98bae5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualC.StlClr.IPriorityQueue`2">
          <source>The type of an element in the controlled sequence.</source>
          <target state="translated">제어되는 시퀀스의 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualC.StlClr.IPriorityQueue`2">
          <source>The type of the underlying container.</source>
          <target state="translated">기본 컨테이너의 형식입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualC.StlClr.IPriorityQueue`2">
          <source>Defines the interface for an STL/CLR <bpt id="p1">[</bpt>priority_queue<ept id="p1">](/cpp/dotnet/priority-queue-stl-clr)</ept> object.</source>
          <target state="translated">STL/CLR <bpt id="p1">[</bpt>priority_queue<ept id="p1">](/cpp/dotnet/priority-queue-stl-clr)</ept> 개체에 대한 인터페이스를 정의합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue{`0,`1})">
          <source>The container adapter to insert into the container.</source>
          <target state="translated">컨테이너에 삽입할 컨테이너 어댑터입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue{`0,`1})">
          <source>Replaces all elements of the container.</source>
          <target state="translated">컨테이너의 모든 요소를 바꿉니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue{`0,`1})">
          <source>For more information, see <bpt id="p1">[</bpt>priority_queue::assign (STL/CLR)<ept id="p1">](/cpp/dotnet/priority-queue-assign-stl-clr)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>priority_queue:: assign (STL/CLR)<ept id="p1">](/cpp/dotnet/priority-queue-assign-stl-clr)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.empty">
          <source>Determines whether the container contains no elements.</source>
          <target state="translated">컨테이너에 요소가 들어 있지 않은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.empty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the container contains no elements; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">컨테이너에 요소가 포함되어 있지 않으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.empty">
          <source>For more information, see <bpt id="p1">[</bpt>priority_queue::empty (STL/CLR)<ept id="p1">](/cpp/dotnet/priority-queue-empty-stl-clr)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>priority_queue:: empty (STL/CLR)<ept id="p1">](/cpp/dotnet/priority-queue-empty-stl-clr)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.pop">
          <source>Removes the highest-priority element of the container.</source>
          <target state="translated">컨테이너에서 우선 순위가 가장 높은 요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.pop">
          <source>For more information, see <bpt id="p1">[</bpt>priority_queue::pop (STL/CLR)<ept id="p1">](/cpp/dotnet/priority-queue-pop-stl-clr)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>priority_queue:: pop (STL/CLR)<ept id="p1">](/cpp/dotnet/priority-queue-pop-stl-clr)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)">
          <source>An element to insert into the controlled sequence.</source>
          <target state="translated">제어되는 시퀀스에 삽입할 요소입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)">
          <source>The controlled sequence is then reordered to maintain the heap discipline.</source>
          <target state="translated">그런 다음 힙 분야을 유지하기 위해 제어되는 시퀀스를 다시 정렬합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)">
          <source>Adds a new element to the container.</source>
          <target state="translated">컨테이너에 새 요소를 추가합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>priority_queue::push (STL/CLR)<ept id="p1">](/cpp/dotnet/priority-queue-push-stl-clr)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>priority_queue:: push (STL/CLR)<ept id="p1">](/cpp/dotnet/priority-queue-push-stl-clr)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.size">
          <source>Counts the number of elements in the container.</source>
          <target state="translated">컨테이너의 요소 수를 셉니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.size">
          <source>The length of the controlled sequence.</source>
          <target state="translated">제어되는 시퀀스의 길이입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.size">
          <source>For more information, see <bpt id="p1">[</bpt>priority_queue::size (STL/CLR)<ept id="p1">](/cpp/dotnet/priority-queue-size-stl-clr)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>priority_queue:: size (STL/CLR)<ept id="p1">](/cpp/dotnet/priority-queue-size-stl-clr)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.top">
          <source>Accesses the highest-priority element of the container.</source>
          <target state="translated">컨테이너에서 우선 순위가 가장 높은 요소에 액세스합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.top">
          <source>The top (highest-priority) element of the controlled sequence, which must be non-empty.</source>
          <target state="translated">제어되는 시퀀스의 맨 위(우선 순위가 가장 높은) 요소로, 비어 있지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.top">
          <source>For more information, see <bpt id="p1">[</bpt>priority_queue::top (STL/CLR)<ept id="p1">](/cpp/dotnet/priority-queue-top-stl-clr)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>priority_queue:: top (STL/CLR)<ept id="p1">](/cpp/dotnet/priority-queue-top-stl-clr)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item">
          <source>Accesses the highest-priority element of the container.</source>
          <target state="translated">컨테이너에서 우선 순위가 가장 높은 요소에 액세스합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item">
          <source>The top (highest-priority) element of the controlled sequence, which must be non-empty.</source>
          <target state="translated">제어되는 시퀀스의 맨 위(우선 순위가 가장 높은) 요소로, 비어 있지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item">
          <source>For more information, see <bpt id="p1">[</bpt>priority_queue::top_item (STL/CLR)<ept id="p1">](/cpp/dotnet/priority-queue-top-item-stl-clr)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>priority_queue:: top_item (STL/CLR)<ept id="p1">](/cpp/dotnet/priority-queue-top-item-stl-clr)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp">
          <source>Copies the ordering delegate for two elements.</source>
          <target state="translated">두 요소의 순서 지정 대리자를 복사합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp">
          <source>The ordering delegate used to order the controlled sequence.</source>
          <target state="translated">제어되는 시퀀스를 정렬하는 데 사용되는 순서 지정 대리자입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp">
          <source>You use it to compare two values.</source>
          <target state="translated">이를 통해 두 값을 비교할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp">
          <source>For more information, see <bpt id="p1">[</bpt>priority_queue::value_comp (STL/CLR)<ept id="p1">](/cpp/dotnet/priority-queue-value-comp-stl-clr)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>priority_queue:: value_comp (STL/CLR)<ept id="p1">](/cpp/dotnet/priority-queue-value-comp-stl-clr)</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>