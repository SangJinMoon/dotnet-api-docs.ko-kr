<Type Name="WebThreadInformation" FullName="System.Web.Management.WebThreadInformation">
  <TypeSignature Language="C#" Value="public sealed class WebThreadInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebThreadInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebThreadInformation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebThreadInformation" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebThreadInformation sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="309be-101">ASP.NET 프로세스에서 스레드의 상태 정보를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="309be-101">Provides information about the state of a thread in an ASP.NET process.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="309be-102">ASP.NET 상태 모니터링 생산 및 운영 담당자를 웹 응용 프로그램 배포를 관리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="309be-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="309be-103"><xref:System.Web.Management> 네임 스페이스 응용 프로그램 상태 데이터와이 데이터를 처리 하는 공급자 유형을 패키지 하는 상태 이벤트 형식을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="309be-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="309be-104">또한 상태 이벤트를 관리 하는 동안 유용한 지 원하는 형식을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="309be-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="309be-105">인스턴스는 <xref:System.Web.Management.WebThreadInformation> 클래스 중 하나를 사용 하 여 얻은 정보를 포함 된 <xref:System.Web.Management.WebErrorEvent> 형식 또는 <xref:System.Web.Management.WebRequestErrorEvent> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="309be-105">Instances of the <xref:System.Web.Management.WebThreadInformation> class contain information that is obtained using either the <xref:System.Web.Management.WebErrorEvent> type or the <xref:System.Web.Management.WebRequestErrorEvent> type.</span></span>  
  
 <span data-ttu-id="309be-106">응용 프로그램에이 형식에서 제공 하는 보호 된 정보에 액세스 하려면 적절 한 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="309be-106">Your application needs the appropriate permissions to access protected information provided by this type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="309be-107">대부분의 경우에서 있습니다 수 구현 된 대로 ASP.NET 상태 모니터링 형식을 사용할 수 있으며 값을 지정 하 여 상태 모니터링 시스템을 제어 합니다는 `healthMonitoring` 구성 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="309be-107">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="309be-108">사용자 고유의 사용자 지정 이벤트와 공급자를 만들 상태 모니터링 유형에 서 파생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="309be-108">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="309be-109">사용자 지정 이벤트 클래스를 만드는 예를 들어이 항목에서 제공 하는 예제를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="309be-109">For an example of creating a custom event class, see the example provided in this topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="309be-110">다음 코드 예제는 두 가지 부분이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="309be-110">The following code example has two parts.</span></span> <span data-ttu-id="309be-111">첫 번째는 ASP.NET을 사용 하는 사용자 지정 이벤트를 사용할 수 있도록 하는 구성 파일의 일부는 <xref:System.Web.Management.WebThreadInformation> 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="309be-111">The first is an excerpt of a configuration file that enables ASP.NET to use a custom event that uses the <xref:System.Web.Management.WebThreadInformation> type.</span></span> <span data-ttu-id="309be-112">두 번째를 사용 하 여 사용자 지정 이벤트를 구현 하는 방법을 표시는 <xref:System.Web.Management.WebThreadInformation> 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="309be-112">The second shows how to implement the custom event that uses the <xref:System.Web.Management.WebThreadInformation> type.</span></span>  
  
 <span data-ttu-id="309be-113">사용자 지정 이벤트 적절 한 시기, 즉 때 발생 대체 시스템 상태 이벤트가 발생할 것을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="309be-113">Ensure that your custom event is raised at the proper time, that is, when the equivalent system health event it replaces would be raised.</span></span>  
  
```  
<healthMonitoring  
    heartBeatInterval="0" enabled="true">  
  
  <profiles>  
    <add name="Custom"   
      minInstances="1"   
      maxLimit="Infinite"   
      minInterval="00:00:00" />  
  </profiles>  
  
  <eventMappings>  
  
    <add   
      name="SampleWebThreadInformation"   
type="SamplesAspNet.SampleWebThreadInformation,webthreadinformation, Version=1.0.1782.29648, Culture=neutral, PublicKeyToken=b3283a2de7dd3f27, processorArchitecture=MSIL" />  
  
  </eventMappings>  
  
  <rules>  
  
    <add name="Custom Web Thread Info Event"   
      eventName="SampleWebThreadInformation"   
      provider="EventLogProvider"  
      profile="Custom" />  
  
  </rules>  
  
</healthMonitoring>  
```  
  
 [!code-csharp[System.Web.Management.WebThreadInformation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#1)]
 [!code-vb[System.Web.Management.WebThreadInformation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebErrorEvent" />
    <altmember cref="T:System.Web.Management.WebRequestErrorEvent" />
    <altmember cref="T:System.Web.Management.WebManagementEvent" />
  </Docs>
  <Members>
    <Member MemberName="FormatToString">
      <MemberSignature Language="C#" Value="public void FormatToString (System.Web.Management.WebEventFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FormatToString(class System.Web.Management.WebEventFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebThreadInformation.FormatToString(System.Web.Management.WebEventFormatter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FormatToString (formatter As WebEventFormatter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FormatToString(System::Web::Management::WebEventFormatter ^ formatter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatter" Type="System.Web.Management.WebEventFormatter" />
      </Parameters>
      <Docs>
        <param name="formatter"><span data-ttu-id="309be-114">웹 상태 이벤트 정보의 서식을 지정하는 데 사용되는 탭 및 들여쓰기 설정을 포함하는 <see cref="T:System.Web.Management.WebEventFormatter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="309be-114">The <see cref="T:System.Web.Management.WebEventFormatter" /> that contains the tab and indentation settings used to format the Web health event information.</span></span></param>
        <summary><span data-ttu-id="309be-115">스레드 관련 정보의 서식을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="309be-115">Formats thread-related information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="309be-116"><xref:System.Web.Management.WebThreadInformation.FormatToString%2A> 메서드는 이벤트 데이터를 기록 하 고 나중에 사용자에 게 표시 해야 하는 경우에 유용 하는 이벤트 정보에 대 한 일관 된 형식 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="309be-116">The <xref:System.Web.Management.WebThreadInformation.FormatToString%2A> method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user.</span></span> <span data-ttu-id="309be-117">공급자 중 하나를 호출 하는 경우 내부적으로 호출 됩니다는 <xref:System.Web.Management.WebBaseEvent.ToString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="309be-117">It is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="309be-118">다음 코드 예제에서는 사용자 지정 정보를 포맷 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="309be-118">The following code example shows how to format custom information.</span></span>  
  
 [!code-csharp[System.Web.Management.WebThreadInformation#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#8)]
 [!code-vb[System.Web.Management.WebThreadInformation#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImpersonating">
      <MemberSignature Language="C#" Value="public bool IsImpersonating { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImpersonating" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebThreadInformation.IsImpersonating" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImpersonating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImpersonating { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="309be-119">현재 스레드 가장 모드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="309be-119">Gets the current thread-impersonation mode.</span></span></summary>
        <value>
          <span data-ttu-id="309be-120">스레드가 가장 모드로 실행 중이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="309be-120"><see langword="true" /> if the thread is executing in impersonation mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="309be-121">다음 코드 예제에는 스레드 가장 모드를 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="309be-121">The following code example shows how to get the thread-impersonation mode.</span></span>  
  
 [!code-csharp[System.Web.Management.WebThreadInformation#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#4)]
 [!code-vb[System.Web.Management.WebThreadInformation#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebThreadInformation.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="309be-122">현재 스레드 관리 스택 추적을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="309be-122">Gets the current thread-managed stack trace.</span></span></summary>
        <value><span data-ttu-id="309be-123">스레드 관리 스택 추적입니다.</span><span class="sxs-lookup"><span data-stu-id="309be-123">The thread-managed stack trace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="309be-124">다음 코드 예제에는 스레드 스택 추적을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="309be-124">The following code example shows how to get the thread stack trace.</span></span>  
  
 [!code-csharp[System.Web.Management.WebThreadInformation#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#5)]
 [!code-vb[System.Web.Management.WebThreadInformation#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadAccountName">
      <MemberSignature Language="C#" Value="public string ThreadAccountName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreadAccountName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebThreadInformation.ThreadAccountName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadAccountName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreadAccountName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="309be-125">스레드 계정 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="309be-125">Gets the thread account name.</span></span></summary>
        <value><span data-ttu-id="309be-126">스레드 계정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="309be-126">The thread account name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="309be-127">이 속성에서 반환 되는 계정 스레드가 가장 모드에서 실행 되는 경우에 임의의 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="309be-127">The account returned by this property might be arbitrary if the thread is executing in impersonation mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="309be-128">다음 코드 예제에는 스레드 계정 이름을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="309be-128">The following code example shows how to get the thread account name.</span></span>  
  
 [!code-csharp[System.Web.Management.WebThreadInformation#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#6)]
 [!code-vb[System.Web.Management.WebThreadInformation#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadID">
      <MemberSignature Language="C#" Value="public int ThreadID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ThreadID" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebThreadInformation.ThreadID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ThreadID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="309be-129">현재 스레드 식별자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="309be-129">Gets the current thread identifier.</span></span></summary>
        <value><span data-ttu-id="309be-130">현재 스레드 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="309be-130">The current thread identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="309be-131">관리 되는 스레드 디버깅을 위해 운영 체제 스레드를으로 직접 매핑하기에 없을 수도 있는 경우에 항상 이므로 문제가 발생할 수 있는 특정 스레드를 격리 하는 데 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="309be-131">Even if managed threads might not have direct mapping to the OS threads, for debugging purposes, it is always useful to isolate a specific thread where problems might exist.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="309be-132">다음 코드 예제에는 스레드 식별자를 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="309be-132">The following code example shows how to get the thread identifier.</span></span>  
  
 [!code-csharp[System.Web.Management.WebThreadInformation#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#7)]
 [!code-vb[System.Web.Management.WebThreadInformation#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>