<Type Name="WebRequestInformation" FullName="System.Web.Management.WebRequestInformation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d5f3bb9ca980f1ddc3ed2902e3d18e058ee921c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30538737" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebRequestInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebRequestInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebRequestInformation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebRequestInformation" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebRequestInformation sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>현재 웹 요청에 대한 정보를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 상태 모니터링 생산 및 운영 담당자를 웹 응용 프로그램 배포를 관리할 수 있습니다. <xref:System.Web.Management> 네임 스페이스 응용 프로그램 상태 데이터와이 데이터를 처리 하는 공급자 유형을 패키지 하는 상태 이벤트 형식을 포함 합니다. 또한 상태 이벤트를 관리 하는 동안 유용한 지 원하는 형식을 포함 합니다.  
  
 인스턴스는 <xref:System.Web.Management.WebRequestInformation> 클래스를 사용 하 여 얻은 정보를 포함 된 <xref:System.Web.Management.WebRequestEvent>, <xref:System.Web.Management.WebAuditEvent>, <xref:System.Web.Management.WebErrorEvent>, 또는 <xref:System.Web.Management.WebRequestErrorEvent> 형식입니다.  
  
 응용 프로그램에이 형식에서 제공 하는 보호 된 정보에 액세스 하려면 적절 한 권한이 있어야 합니다.  
  
> [!NOTE]
>  대부분의 경우에서 있습니다 수 구현 된 대로 ASP.NET 상태 모니터링 형식을 사용할 수 있으며 값을 지정 하 여 상태 모니터링 시스템을 제어 합니다는 `healthMonitoring` 구성 섹션입니다. 사용자 고유의 사용자 지정 이벤트와 공급자를 만들 상태 모니터링 유형에 서 파생할 수 있습니다. 사용자 지정 이벤트 클래스를 만드는 예를 들어이 항목에서 제공 하는 예제를 참조 하십시오.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 사용자 지정 이벤트를 구현 하는 방법을 보여 줍니다는 <xref:System.Web.Management.WebRequestInformation> 유형입니다.  
  
 이 사용자 지정 이벤트를 사용 하는 ASP.NET 수 있도록 하는 구성 파일의은 표시 됩니다.  
  
 사용자 지정 이벤트 적절 한 시기, 즉 때 발생 대체 시스템 상태 이벤트가 발생할 것을 확인 합니다.  
  
```  
<healthMonitoring  
  heartBeatInterval="0" enabled="true">  
  
  <profiles>  
    <add name="Custom"   
      minInstances="1"   
      maxLimit="Infinite"   
      minInterval="00:00:00" />  
  </profiles>  
  
  <eventMappings>  
  
    <add   
      name="SampleWebRequestInformation"   
      type="SamplesAspNet.SampleWebRequestInformation,webrequestinformation,Version=1.0.1782.28745, Culture=neutral, PublicKeyToken=79955d9b8521c250,processorArchitecture=MSIL" />  
  
  </eventMappings>  
  
  <rules>  
  
    <add name="Custom Web Request Info Event"   
      eventName="SampleWebRequestInformation"   
      provider="EventLogProvider"  
      profile="Custom" />  
  
  </rules>  
  
</healthMonitoring>  
```  
  
 [!code-csharp[System.Web.Management.WebRequestInformation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/CS/webrequestinformation.cs#1)]
 [!code-vb[System.Web.Management.WebRequestInformation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/VB/webrequestinformation.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebRequestEvent" />
  </Docs>
  <Members>
    <Member MemberName="FormatToString">
      <MemberSignature Language="C#" Value="public void FormatToString (System.Web.Management.WebEventFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FormatToString(class System.Web.Management.WebEventFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebRequestInformation.FormatToString(System.Web.Management.WebEventFormatter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FormatToString (formatter As WebEventFormatter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FormatToString(System::Web::Management::WebEventFormatter ^ formatter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatter" Type="System.Web.Management.WebEventFormatter" />
      </Parameters>
      <Docs>
        <param name="formatter">웹 상태 이벤트 정보의 서식을 지정하는 데 사용되는 탭 및 들여쓰기 설정을 포함하는 <see cref="T:System.Web.Management.WebEventFormatter" />입니다.</param>
        <summary>웹 요청 정보의 서식을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Management.WebRequestInformation.FormatToString%2A> 메서드는 이벤트 데이터를 기록 하 고 나중에 사용자에 게 표시 해야 하는 경우에 유용 하는 이벤트 정보에 대 한 일관 된 형식 제공 합니다. 공급자 중 하나를 호출 하는 경우 내부적으로 호출 됩니다는 <xref:System.Web.Management.WebBaseEvent.ToString%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자 지정 정보를 포맷 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Management.WebRequestInformation#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/CS/webrequestinformation.cs#9)]
 [!code-vb[System.Web.Management.WebRequestInformation#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/VB/webrequestinformation.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Principal">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal Principal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal Principal" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebRequestInformation.Principal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Principal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ Principal { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>웹 요청과 관련된 관리되는 코드 보안 주체의 인스턴스를 가져옵니다.</summary>
        <value>요청 이벤트와 관련된 <see cref="T:System.Security.Principal.IPrincipal" /> 인스턴스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 주 서버를 웹 요청을 발급 한 인증 된 엔터티를 나타냅니다.  
  
   
  
## Examples  
 다음 코드 예제에는 웹 요청과 관련 된 보안 주체를 사용 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Management.WebRequestInformation#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/CS/webrequestinformation.cs#8)]
 [!code-vb[System.Web.Management.WebRequestInformation#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/VB/webrequestinformation.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPath">
      <MemberSignature Language="C#" Value="public string RequestPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebRequestInformation.RequestPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>웹 요청의 실제 경로를 가져옵니다.</summary>
        <value>요청의 실제 경로입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 웹 요청 경로를 가져오는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Management.WebRequestInformation#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/CS/webrequestinformation.cs#5)]
 [!code-vb[System.Web.Management.WebRequestInformation#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/VB/webrequestinformation.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestUrl">
      <MemberSignature Language="C#" Value="public string RequestUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebRequestInformation.RequestUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestUrl { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요청의 논리 경로를 가져옵니다.</summary>
        <value>요청의 논리 경로입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 코드 예제에서는 웹 요청 논리 경로를 가져오는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Management.WebRequestInformation#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/CS/webrequestinformation.cs#6)]
 [!code-vb[System.Web.Management.WebRequestInformation#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/VB/webrequestinformation.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadAccountName">
      <MemberSignature Language="C#" Value="public string ThreadAccountName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreadAccountName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebRequestInformation.ThreadAccountName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadAccountName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreadAccountName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>코드를 실행하고 있는 사용자의 Windows 로그온 이름을 나타내는 문자열을 가져옵니다.</summary>
        <value>코드를 실행하고 있는 사용자의 Windows 로그온 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재이 속성의 값이 결정 <xref:System.Security.Principal.WindowsIdentity> 개체의 <xref:System.Security.Principal.WindowsIdentity.Name%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebRequestInformation.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자의 호스트 주소를 가져옵니다.</summary>
        <value>사용자의 호스트 주소입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 코드 예제에는 사용자 호스트 주소를 가져오는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Management.WebRequestInformation#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/CS/webrequestinformation.cs#7)]
 [!code-vb[System.Web.Management.WebRequestInformation#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/VB/webrequestinformation.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>