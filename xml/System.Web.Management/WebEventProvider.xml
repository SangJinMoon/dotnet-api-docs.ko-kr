<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WebEventProvider.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5552d2ee41fd9d4b1639131e902f83c17fac20224.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">552d2ee41fd9d4b1639131e902f83c17fac20224</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Management.WebEventProvider">
          <source>Provides the base class for non buffered event providers.</source>
          <target state="translated">버퍼링되지 않은 이벤트 공급자에 대한 기본 클래스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</source>
          <target state="translated">ASP.NET 상태 모니터링 생산 및 운영 담당자를 웹 응용 프로그램 배포를 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>The <ph id="ph1">&lt;xref:System.Web.Management&gt;</ph> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Management&gt;</ph> 네임 스페이스에는 응용 프로그램 상태 데이터와이 데이터를 처리 하는 공급자 유형을 패키지 하는 상태 이벤트 유형을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>It also contains supporting types that help during the management of health events.</source>
          <target state="translated">또한 상태 이벤트를 관리 하는 동안 유용한 지 원하는 형식을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>If you want to customize the health-event processing, you can derive from the <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider&gt;</ph> class to create your own custom provider.</source>
          <target state="translated">파생 될 수 있습니다 상태 이벤트 처리를 사용자 지정 하려는 경우는 <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider&gt;</ph> 클래스 사용자 지정 공급자를 만들려고 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the <ph id="ph1">`healthMonitoring`</ph> configuration section.</source>
          <target state="translated">대부분의 경우에서 있습니다 수 구현 된 대로 ASP.NET 상태 모니터링 형식을 사용할 수 있으며 값을 지정 하 여 상태 모니터링 시스템을 제어 합니다는 <ph id="ph1">`healthMonitoring`</ph> 구성 섹션입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>You can also derive from the health-monitoring types to create your own custom events and providers.</source>
          <target state="translated">사용자 고유의 사용자 지정 이벤트와 공급자를 만들 상태 모니터링 유형에 서 파생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>For an example of deriving from the <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider&gt;</ph> class, see the example provided in this topic.</source>
          <target state="translated">파생의 예는 <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider&gt;</ph> 이 항목에서 제공 되는 예제를 참조 하세요.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>The following code example shows how to derive from the <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider&gt;</ph> class to create a custom provider that writes the configured events to a local file for which appropriate access rights must be granted.</source>
          <target state="translated">다음 코드 예제에서 파생 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider&gt;</ph> 를 적절 한 액세스 권한을 부여 해야 하는 로컬 파일에 구성 된 이벤트를 기록 하는 사용자 지정 공급자를 만드는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>This custom provider example is simple and its main intent is to give you as developer full control of its basic mechanisms.</source>
          <target state="translated">이 사용자 지정 공급자 예는 간단 하 고 목적으로 기본 메커니즘의 개발자 모든 권한을 제공 하는 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>In a real-world scenario, you could use this provider and especially the example buffered provider available at <ph id="ph1">&lt;xref:System.Web.Management.BufferedWebEventProvider&gt;</ph>, as a preliminary probe into the behavior of an application.</source>
          <target state="translated">실제 시나리오에서이 공급자와 특히 버퍼링 하는 예제 공급자에서 사용할 수 있는 사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Web.Management.BufferedWebEventProvider&gt;</ph>, 응용 프로그램의 동작을 예비 검색으로 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>This can help you during the design stage to gain an understanding of the information available; then later you can direct this information to a more complex provider.</source>
          <target state="translated">그러면; 제공 되는 정보를 파악 하는 디자인 단계 수 있습니다. 그런 다음 나중에이 정보를 더 복잡 한 공급자를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>The following configuration file excerpt shows a <ph id="ph1">`healthMonitoring`</ph> section configuration that enables ASP.NET to use the custom provider defined above to process all health-monitoring events.</source>
          <target state="translated">다음 구성 파일 인용한는 <ph id="ph1">`healthMonitoring`</ph> 모든 상태 모니터링 이벤트를 처리 하도록 앞에서 정의한 사용자 지정 공급자를 사용 하는 ASP.NET 수 있도록 하는 섹션 구성 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WebEventProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Management.WebEventProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Management.WebEventProvider" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.%23ctor%2A&gt;</ph> constructor is not intended to be used directly from your code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.%23ctor%2A&gt;</ph> 생성자는 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.#ctor">
          <source>It is called by ASP.NET.</source>
          <target state="translated">ASP.NET에서 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.#ctor">
          <source>You can call the <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.%23ctor%2A&gt;</ph> constructor when deriving from the <ph id="ph2">&lt;xref:System.Web.Management.WebEventProvider&gt;</ph> class.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.%23ctor%2A&gt;</ph> 생성자에서 파생 된 경우는 <ph id="ph2">&lt;xref:System.Web.Management.WebEventProvider&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.#ctor">
          <source>The following code example shows how to use this constructor in a custom event provider.</source>
          <target state="translated">다음 코드 예제에서는 사용자 지정 이벤트 공급자에이 생성자를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WebEventProvider.Flush">
          <source>Moves the events from the provider's buffer into the event log.</source>
          <target state="translated">공급자의 버퍼에서 이벤트 로그로 이벤트를 옮깁니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.Flush">
          <source>When this method is called, all the events in the buffer are immediately moved from the buffer to the event log, regardless of how much time has elapsed since last write or how many events are in the buffer.</source>
          <target state="translated">이 메서드가 호출 되 면 마지막 쓰기 또는 버퍼에 있는 이벤트 수부터 경과 된 모든 시간에 관계 없이 이벤트 로그에 버퍼에서 버퍼에 이벤트는 즉시 이동 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.Flush">
          <source>The time of the last write is reset to the time of the flushing action.</source>
          <target state="translated">마지막 기록 시간 플러시 작업의 시간으로 다시 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.Flush">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.Flush%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.Flush%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.Management.WebBaseEvent" /&gt;</ph> object to process.</source>
          <target state="translated">처리할 <ph id="ph1">&lt;see cref="T:System.Web.Management.WebBaseEvent" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
          <source>Processes the event passed to the provider.</source>
          <target state="translated">공급자에 전달된 이벤트를 처리합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
          <source>This is the method that ASP.NET health monitoring calls to start processing the event.</source>
          <target state="translated">이 이벤트 처리를 시작 하기 위해 호출 ASP.NET 상태 모니터링 하는 방법.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
          <source>The following code example shows how to implement the <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.ProcessEvent%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.ProcessEvent%2A&gt;</ph> 메서드를 구현하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
          <source>This method appends the customized string representation of the event to a specific log file.</source>
          <target state="translated">이 메서드는 이벤트의 사용자 지정 된 문자열 표현을 특정 로그 파일에 추가합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WebEventProvider.Shutdown">
          <source>Performs tasks associated with shutting down the provider.</source>
          <target state="translated">공급자 종료와 관련된 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.Shutdown">
          <source>ASP.NET calls the <ph id="ph1">&lt;xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A&gt;</ph> method when the application domain hosting the Web application terminates.</source>
          <target state="translated">ASP.NET 호출은 <ph id="ph1">&lt;xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A&gt;</ph> 웹 응용 프로그램을 호스팅하는 응용 프로그램 도메인에서 종료 될 때 메서드.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.Shutdown">
          <source>The method is called to perform tasks that will allow the application to end gracefully, such as closing resources.</source>
          <target state="translated">리소스 닫기 등, 정상적으로 종료 하는 응용 프로그램이 작업을 수행 하는 메서드 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.Shutdown">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.Shutdown%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.Shutdown%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>