<Type Name="EventLogWebEventProvider" FullName="System.Web.Management.EventLogWebEventProvider">
  <TypeSignature Language="C#" Value="public sealed class EventLogWebEventProvider : System.Web.Management.WebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventLogWebEventProvider extends System.Web.Management.WebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.EventLogWebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventLogWebEventProvider&#xA;Inherits WebEventProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogWebEventProvider sealed : System::Web::Management::WebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="02071-101">ASP.NET 상태 모니터링 이벤트를 Windows 응용 프로그램 이벤트 로그에 기록하는 이벤트 공급자를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="02071-101">Implements an event provider that logs ASP.NET health-monitoring events into the Windows Application Event Log.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02071-102">ASP.NET 상태 모니터링 생산 및 운영 담당자를 웹 응용 프로그램 배포를 관리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="02071-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="02071-103"><xref:System.Web.Management> 네임 스페이스 응용 프로그램 상태 데이터와이 데이터를 처리 하는 공급자 유형을 패키지 하는 상태 이벤트 형식을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="02071-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="02071-104">또한 상태 이벤트를 관리 하는 동안 유용한 지 원하는 형식을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="02071-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="02071-105"><xref:System.Web.Management.EventLogWebEventProvider>, 실패 감사와 기본적으로 (활성화) 오류 상태 모니터링 이벤트 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="02071-105">The <xref:System.Web.Management.EventLogWebEventProvider>, the failure audit, and the error health-monitoring events are configured (enabled) by default.</span></span> <span data-ttu-id="02071-106">즉, 상태 모니터링 이벤트는 기본적으로 Windows 응용 프로그램 이벤트 로그에 기록 된 오류 및 실패 감사 합니다.</span><span class="sxs-lookup"><span data-stu-id="02071-106">This means that the failure audit and the error health-monitoring events are logged in the Windows Application Event Log by default.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02071-107">대부분의 경우에서 있습니다 수 구현 된 대로 ASP.NET 상태 모니터링 형식을 사용할 수 있으며 값을 지정 하 여 상태 모니터링 시스템을 제어 합니다는 `healthMonitoring` 구성 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="02071-107">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="02071-108">사용자 고유의 사용자 지정 이벤트와 공급자를 만들 상태 모니터링 유형에 서 파생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="02071-108">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="02071-109">사용자 지정 공급자를 만드는 예제를 보려면 [하는 방법: 상태 모니터링 사용자 지정 공급자 예제 구현](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c)합니다.</span><span class="sxs-lookup"><span data-stu-id="02071-109">For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02071-110">다음 구성 파일에서는 유형의 공급자를 지정 하는 방법을 보여 줍니다 <xref:System.Web.Management.EventLogWebEventProvider> 성공 감사 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="02071-110">The following configuration file excerpt shows how to specify a provider of type <xref:System.Web.Management.EventLogWebEventProvider> to handle success audit events.</span></span> <span data-ttu-id="02071-111"><xref:System.Web.Management.EventLogWebEventProvider> 실패 감사 이벤트 상태 유형을 모니터링 하는 기본적으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="02071-111">The <xref:System.Web.Management.EventLogWebEventProvider> and the failure audit health-event types to monitor are configured by default.</span></span> <span data-ttu-id="02071-112">감사 성공 여부를 모니터링 하려면 예제 코드에 표시 된 대로 구성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="02071-112">To monitor the success audits, you need to configure them, as shown in the example code.</span></span>  
  
```  
<healthMonitoring   
  enabled="true" heartbeatInterval="10">  
  
  <rule>  
    <add name="Success Audits Default"  
      eventName="Success Audits"  
      provider="EventLogProvider"  
      profile="Default"  
      minInterval="00:01:00" />  
  </rule>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02071-113">공급자의 버퍼에서 이벤트 로그로 이벤트를 옮깁니다.</span><span class="sxs-lookup"><span data-stu-id="02071-113">Moves events from the provider's buffer into the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02071-114">이 메서드가 호출 되 면 마지막 쓰기 또는 버퍼에 있는 이벤트 수부터 경과 된 모든 공급자의 버퍼에 있는 이벤트에는 Windows 응용 프로그램 이벤트 로그에 걸리는 시간에 관계 없이 즉시 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="02071-114">When this method is called, all the events in the provider's buffer are immediately written to the Windows Application Event Log, regardless of how much time has elapsed since last write or how many events are in the buffer.</span></span> <span data-ttu-id="02071-115">마지막 기록 시간 플러시 작업의 시간으로 다시 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="02071-115">The time of the last write is reset to the time of the flushing action.</span></span> <span data-ttu-id="02071-116">버퍼링 메커니즘을 사용 하지 않는 경우이 메서드를 호출 하지 아무 영향이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="02071-116">If the buffering mechanism is not enabled, calling this method does not have any effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="02071-117">구성 파일에서 이 공급자를 식별하는 데 사용되는 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="02071-117">The name used in the configuration file to identify this provider.</span></span></param>
        <param name="config"><span data-ttu-id="02071-118">구성 파일에서 이 공급자에 할당된 특성을 지정하는 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="02071-118">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that specifies the attributes assigned for this provider in the configuration file.</span></span></param>
        <summary><span data-ttu-id="02071-119">이 개체의 초기 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="02071-119">Sets the initial values for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02071-120">이 메서드를 호출 하 여 초기화 하는 <xref:System.Web.Management.EventLogWebEventProvider> 구성 설정 및 구성 파일에서 지정 된 이름을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="02071-120">This method is called to initialize the <xref:System.Web.Management.EventLogWebEventProvider> with the configuration settings and name as specified in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEvent (eventRaised As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEvent(System::Web::Management::WebBaseEvent ^ eventRaised);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised"><span data-ttu-id="02071-121">처리할 <see cref="T:System.Web.Management.WebBaseEvent" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="02071-121">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</span></span></param>
        <summary><span data-ttu-id="02071-122">공급자에 전달된 이벤트를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="02071-122">Processes the event passed to the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02071-123">이것이 이벤트의 처리를 시작 하기 위해 호출 ASP.NET 상태 모니터링 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="02071-123">This is the method that ASP.NET health monitoring calls to start the processing of the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02071-124">공급자 종료와 관련된 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="02071-124">Performs tasks associated with shutting down the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02071-125">ASP.NET 호출은 <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> 웹 응용 프로그램을 호스팅하는 응용 프로그램 도메인에서 종료 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="02071-125">ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates.</span></span> <span data-ttu-id="02071-126">응용 프로그램을 정상적으로 종료할 수 있는 작업을 수행 하는 메서드 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="02071-126">The method is called to perform tasks that will allow the application to end gracefully.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>