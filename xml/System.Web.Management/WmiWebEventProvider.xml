<Type Name="WmiWebEventProvider" FullName="System.Web.Management.WmiWebEventProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b323b69301d8e6976b22274fac3677b2f57abfce" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51894144" /></Metadata><TypeSignature Language="C#" Value="public class WmiWebEventProvider : System.Web.Management.WebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WmiWebEventProvider extends System.Web.Management.WebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WmiWebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class WmiWebEventProvider&#xA;Inherits WebEventProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiWebEventProvider : System::Web::Management::WebEventProvider" />
  <TypeSignature Language="F#" Value="type WmiWebEventProvider = class&#xA;    inherit WebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5f883-101">ASP.NET 상태 모니터링 이벤트를 WMI(Windows Management Instrumentation) 이벤트에 매핑하는 이벤트 공급자를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-101">Implements an event provider that maps ASP.NET health-monitoring events to Windows Management Instrumentation (WMI) events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f883-102">ASP.NET 상태 모니터링 프로덕션와 운영 스태프를 배포 된 웹 애플리케이션을 관리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="5f883-103"><xref:System.Web.Management> 네임 스페이스 응용 프로그램 상태 데이터 및이 데이터 처리를 담당 하는 공급자 형식이 패키징 담당 상태 이벤트 형식을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="5f883-104">또한 상태 이벤트를 관리 하는 동안 유용한 지 원하는 형식을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="5f883-105">ASP.NET 상태 모니터링 이벤트 WMI 이벤트를 매핑할이 클래스를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-105">ASP.NET uses this class to map health-monitoring events to WMI events.</span></span> <span data-ttu-id="5f883-106">WMI 하위 시스템에 ASP.NET 상태 모니터링 이벤트에 전달할 수 있도록, 하려면 구성 해야 합니다 <xref:System.Web.Management.WmiWebEventProvider> 에서 적절 한 설정을 추가 하 여 클래스를 `<healthMonitoring>` 구성 파일의 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-106">To enable the delivery of ASP.NET health-monitoring events to the WMI subsystem, you must configure the <xref:System.Web.Management.WmiWebEventProvider> class by adding the appropriate settings in the `<healthMonitoring>` section of the configuration file.</span></span>  
  
 <span data-ttu-id="5f883-107">ASP.NET 상태 모니터링 이벤트 라우팅될 때 발생 하는 WMI 이벤트의 매개 변수를 설명 하는 Aspnet.mof 파일에 포함 된 정보는 <xref:System.Web.Management.WmiWebEventProvider> 클래스 및 WMI 이벤트에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-107">The information contained in the Aspnet.mof file describes the parameters of the WMI events raised when ASP.NET health-monitoring events are routed to the <xref:System.Web.Management.WmiWebEventProvider> class and mapped into WMI events.</span></span> <span data-ttu-id="5f883-108">Aspnet.mof 파일 %windir%\Microsoft.NET\Framework 예를 들어.NET Framework 빌드 디렉터리에 저장 됩니다\\*BuildNumber*합니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-108">The Aspnet.mof file is stored in the .NET Framework build directory, for example %windir%\Microsoft.NET\Framework\\*BuildNumber*.</span></span> <span data-ttu-id="5f883-109">WMI 이벤트로 상태 모니터링 이벤트를 보고 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: ASP.NET 상태 모니터링 이벤트 배달에 사용 하 여 WMI](https://msdn.microsoft.com/library/e57fea2f-610f-4432-9dd6-dd10a6c5bd10)합니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-109">For more information about reporting health-monitoring events as WMI events, see [NIB: Using WMI to Deliver ASP.NET Health Monitoring Events](https://msdn.microsoft.com/library/e57fea2f-610f-4432-9dd6-dd10a6c5bd10).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5f883-110">대부분의 경우에 구현 된 대로 ASP.NET 상태 모니터링 유형을 사용할 수 없게 됩니다 및에서 값을 지정 하 여 상태 모니터링 시스템을 제어 하는 `<healthMonitoring>` 구성 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-110">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `<healthMonitoring>` configuration section.</span></span> <span data-ttu-id="5f883-111">사용자 고유의 사용자 지정 이벤트 및 공급자 상태 모니터링 형식에서 파생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-111">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="5f883-112">사용자 지정 공급자를 만드는 예제를 보려면 [방법: 상태 모니터링 사용자 지정 공급자 예제 구현](https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c)합니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-112">For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f883-113">다음 예제에서는 WMI 이벤트 ASP.NET 상태 모니터링 웹 응용 프로그램 상태 이벤트의 결과로 발급 한 소비자를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-113">The following example shows how to create a consumer of WMI events issued by ASP.NET health monitoring as a result of Web-application health events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5f883-114"><xref:System.Web.Management.WmiWebEventProvider> 클래스 및 모니터링 상태 이벤트 형식을 기본적으로 이미 구성 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-114">The <xref:System.Web.Management.WmiWebEventProvider> class and the health event types to monitor are already configured by default.</span></span> <span data-ttu-id="5f883-115">하기만 하면 모든 상태 이벤트에 대 한 규칙을 정의 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-115">The only thing you need to do is to define the rule for all the health events.</span></span> <span data-ttu-id="5f883-116">상태 이벤트를 하지 디스패치되는 기억 합니다 <xref:System.Web.Management.WmiWebEventProvider> 기본적으로 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-116">Remember that the health events are not dispatched to the <xref:System.Web.Management.WmiWebEventProvider> provider by default.</span></span>  
  
 [!code-csharp[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/CS/WmiWebEventListener.cs#1)]
 [!code-vb[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/VB/WmiWebEventListener.vb#1)]  
  
 <span data-ttu-id="5f883-117">다음 예제를 보여 주는 구성 파일의 일부는를 `<healthMonitoring>` ASP.NET을 사용할 수 있도록 하는 구성 섹션을 <xref:System.Web.Management.WmiWebEventProvider> 모든 상태 모니터링 이벤트를 처리 하는 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-117">The following example is a configuration file excerpt that shows a `<healthMonitoring>` configuration section that enables ASP.NET to use the <xref:System.Web.Management.WmiWebEventProvider> provider to process all health-monitoring events.</span></span>  
  
```  
<healthMonitoring>  
  <rules>  
    <add   
      name="Using Wmi"  
      eventName="All Events"   
      provider="WmiWebEventProvider"   
      profile="Critical"/>  
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="5f883-118">ASP.NET 상태 모니터링 개요</span><span class="sxs-lookup"><span data-stu-id="5f883-118">ASP.NET Health Monitoring Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c"><span data-ttu-id="5f883-119">ASP.NET 상태 모니터링 사용자 지정 공급자 샘플</span><span class="sxs-lookup"><span data-stu-id="5f883-119">ASP.NET Health-Monitoring Custom Provider Sample</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab894e83-7e2f-4af8-a116-b1bff8f815b2"><span data-ttu-id="5f883-120">설치 하 고 ASP.NET 공급자를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-120">Installing and Configuring ASP.NET Providers</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiWebEventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiWebEventProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f883-121"><see cref="T:System.Web.Management.WmiWebEventProvider" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-121">Initializes a new instance of the <see cref="T:System.Web.Management.WmiWebEventProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f883-122">이 생성자는 ASP.NET 상태 모니터링 시스템에서 내부적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-122">This constructor is used internally by the ASP.NET health-monitoring system.</span></span> <span data-ttu-id="5f883-123">인스턴스를 만드는 사용 하지 것입니다는 <xref:System.Web.Management.TraceWebEventProvider> 클래스 있지만이 클래스에서 상속 되는 공급자 형식을 구현 하는 경우이 생성자를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-123">You will never use it to create an instance of the <xref:System.Web.Management.TraceWebEventProvider> class, but you can call this constructor when you implement your own provider type that inherits from this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="wmiWebEventProvider.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f883-124">공급자의 버퍼에서 이벤트를 모두 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-124">Removes all events from the provider's buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f883-125">이 메서드가 호출 되 면, 모든 공급자의 버퍼에서 이벤트를 즉시 제거, 얼마나 많은 시간이 마지막에 관계 없이 쓰기 또는 이벤트 개수에 버퍼.</span><span class="sxs-lookup"><span data-stu-id="5f883-125">When this method is called, all the events in the provider's buffer are immediately removed, regardless of how much time has elapsed since the last write or how many events are in the buffer.</span></span> <span data-ttu-id="5f883-126">마지막으로 쓴 시간 플러시 작업의 시간으로 다시 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-126">The time of the last write is reset to the time of the flushing action.</span></span> <span data-ttu-id="5f883-127">버퍼링 메커니즘을 설정 하지 않은 경우이 메서드를 호출 해도 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-127">Calling this method when the buffering mechanism is not enabled has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="wmiWebEventProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5f883-128">구성 파일에서 이 공급자를 식별하는 데 사용되는 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-128">The name used in the configuration file to identify this provider.</span></span></param>
        <param name="config"><span data-ttu-id="5f883-129">구성 파일에서 이 공급자에 할당된 특성을 지정하는 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-129">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that specifies the attributes assigned for this provider in the configuration file.</span></span></param>
        <summary><span data-ttu-id="5f883-130">이 개체의 초기 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-130">Sets the initial values for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f883-131">ASP.NET 호출을 <xref:System.Web.Management.WmiWebEventProvider.Initialize%2A> 메서드를 호출한 후의 <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-131">ASP.NET calls the <xref:System.Web.Management.WmiWebEventProvider.Initialize%2A> method after calling the <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> constructor.</span></span> <span data-ttu-id="5f883-132">이 메서드가 호출 되어 초기화는 <xref:System.Web.Management.WmiWebEventProvider> 구성 설정 및 구성 파일에 지정 된 이름을 사용 하 여 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-132">This method is called to initialize the <xref:System.Web.Management.WmiWebEventProvider> class with the configuration settings and name specified in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEvent (eventRaised As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEvent(System::Web::Management::WebBaseEvent ^ eventRaised);" />
      <MemberSignature Language="F#" Value="override this.ProcessEvent : System.Web.Management.WebBaseEvent -&gt; unit" Usage="wmiWebEventProvider.ProcessEvent eventRaised" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised"><span data-ttu-id="5f883-133">처리할 <see cref="T:System.Web.Management.WebBaseEvent" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-133">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</span></span></param>
        <summary><span data-ttu-id="5f883-134">공급자에 전달된 이벤트를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-134">Processes the event passed to the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f883-135">이 방법은 ASP.NET 상태 모니터링 호출 하는 이벤트의 처리를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-135">This is the method that ASP.NET health monitoring calls to start the processing of the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="5f883-136">이벤트를 발생시킬 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="5f883-136">The event could not be raised.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberSignature Language="F#" Value="override this.Shutdown : unit -&gt; unit" Usage="wmiWebEventProvider.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f883-137">공급자 종료와 관련된 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-137">Performs tasks associated with shutting down the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f883-138">ASP.NET 호출의 <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> 웹 애플리케이션을 호스트 하는 애플리케이션 도메인 종료 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="5f883-138">ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain that hosts the Web application terminates.</span></span> <span data-ttu-id="5f883-139">애플리케이션을 정상적으로 종료 될 수 있는 작업을 수행 하는 메서드 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5f883-139">The method is called to perform tasks that will allow the application to end gracefully.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>