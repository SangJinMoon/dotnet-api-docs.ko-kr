<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WmiWebEventProvider.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac532fcfb5c7ee0b43cdcb1a48fd67343e52ba51a08.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32fcfb5c7ee0b43cdcb1a48fd67343e52ba51a08</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Management.WmiWebEventProvider">
          <source>Implements an event provider that maps ASP.NET health-monitoring events to Windows Management Instrumentation (WMI) events.</source>
          <target state="translated">ASP.NET 상태 모니터링 이벤트를 WMI(Windows Management Instrumentation) 이벤트에 매핑하는 이벤트 공급자를 구현합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WmiWebEventProvider">
          <source>ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</source>
          <target state="translated">ASP.NET 상태 모니터링 생산 및 운영 담당자를 웹 응용 프로그램 배포를 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WmiWebEventProvider">
          <source>The <ph id="ph1">&lt;xref:System.Web.Management&gt;</ph> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Management&gt;</ph> 네임 스페이스 응용 프로그램 상태 데이터와이 데이터를 처리 하는 공급자 유형을 패키지 하는 상태 이벤트 형식을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WmiWebEventProvider">
          <source>It also contains supporting types that help during the management of health events.</source>
          <target state="translated">또한 상태 이벤트를 관리 하는 동안 유용한 지 원하는 형식을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WmiWebEventProvider">
          <source>ASP.NET uses this class to map health-monitoring events to WMI events.</source>
          <target state="translated">ASP.NET이이 클래스를 사용 하 여 WMI 이벤트를 상태 모니터링 이벤트를 매핑합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WmiWebEventProvider">
          <source>To enable the delivery of ASP.NET health-monitoring events to the WMI subsystem, you must configure the <ph id="ph1">&lt;xref:System.Web.Management.WmiWebEventProvider&gt;</ph> class by adding the appropriate settings in the <ph id="ph2">`&lt;healthMonitoring&gt;`</ph> section of the configuration file.</source>
          <target state="translated">WMI 하위 시스템에 대 한 ASP.NET 상태 모니터링 이벤트 제공을 사용 하도록 설정 하려면 구성 해야 합니다는 <ph id="ph1">&lt;xref:System.Web.Management.WmiWebEventProvider&gt;</ph> 에 적절 한 설정을 추가 하 여 클래스의 <ph id="ph2">`&lt;healthMonitoring&gt;`</ph> 구성 파일의 섹션입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WmiWebEventProvider">
          <source>The information contained in the Aspnet.mof file describes the parameters of the WMI events raised when ASP.NET health-monitoring events are routed to the <ph id="ph1">&lt;xref:System.Web.Management.WmiWebEventProvider&gt;</ph> class and mapped into WMI events.</source>
          <target state="translated">ASP.NET 상태 모니터링 이벤트 라우팅될 때 발생 하는 WMI 이벤트의 매개 변수를 설명 하는 Aspnet.mof 파일에 포함 된 정보는 <ph id="ph1">&lt;xref:System.Web.Management.WmiWebEventProvider&gt;</ph> 클래스 및 WMI 이벤트에 매핑됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WmiWebEventProvider">
          <source>The Aspnet.mof file is stored in the .NET Framework build directory, for example %windir%\Microsoft.NET\Framework<ph id="ph1">\\</ph><bpt id="p1">*</bpt>BuildNumber<ept id="p1">*</ept>.</source>
          <target state="translated">예를 들어 %windir%\Microsoft.NET\Framework.NET Framework 빌드 디렉터리에 Aspnet.mof 파일은 저장<ph id="ph1">\\</ph><bpt id="p1">*</bpt>BuildNumber<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WmiWebEventProvider">
          <source>For more information about reporting health-monitoring events as WMI events, see <bpt id="p1">[</bpt>NIB: Using WMI to Deliver ASP.NET Health Monitoring Events<ept id="p1">](http://msdn.microsoft.com/library/e57fea2f-610f-4432-9dd6-dd10a6c5bd10)</ept>.</source>
          <target state="translated">WMI 이벤트로 상태 모니터링 이벤트를 보고 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: ASP.NET 상태 모니터링 이벤트 전달에 사용 하 여 WMI<ept id="p1">](http://msdn.microsoft.com/library/e57fea2f-610f-4432-9dd6-dd10a6c5bd10)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WmiWebEventProvider">
          <source>In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the <ph id="ph1">`&lt;healthMonitoring&gt;`</ph> configuration section.</source>
          <target state="translated">대부분의 경우에서 있습니다 수 구현 된 대로 ASP.NET 상태 모니터링 형식을 사용할 수 있으며 값을 지정 하 여 상태 모니터링 시스템을 제어 합니다는 <ph id="ph1">`&lt;healthMonitoring&gt;`</ph> 구성 섹션입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WmiWebEventProvider">
          <source>You can also derive from the health-monitoring types to create your own custom events and providers.</source>
          <target state="translated">사용자 고유의 사용자 지정 이벤트와 공급자를 만들 상태 모니터링 유형에 서 파생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WmiWebEventProvider">
          <source>For an example of creating a custom provider, see <bpt id="p1">[</bpt>How to: Implement the Health Monitoring Custom Provider Example<ept id="p1">](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c)</ept>.</source>
          <target state="translated">사용자 지정 공급자를 만드는 예제를 보려면 <bpt id="p1">[</bpt>하는 방법: 상태 모니터링 사용자 지정 공급자 예제 구현<ept id="p1">](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WmiWebEventProvider">
          <source>The following example shows how to create a consumer of WMI events issued by ASP.NET health monitoring as a result of Web-application health events.</source>
          <target state="translated">다음 예제에서는 ASP.NET 상태 모니터링 웹 응용 프로그램 상태 이벤트의 결과로 발생 한 WMI 이벤트의 소비자를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WmiWebEventProvider">
          <source>The <ph id="ph1">&lt;xref:System.Web.Management.WmiWebEventProvider&gt;</ph> class and the health event types to monitor are already configured by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Management.WmiWebEventProvider&gt;</ph> 클래스 및 모니터링 하는 상태 이벤트 유형을 기본적으로 이미 구성 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WmiWebEventProvider">
          <source>The only thing you need to do is to define the rule for all the health events.</source>
          <target state="translated">하기만 하면 모든 상태 이벤트에 대 한 규칙을 정의 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WmiWebEventProvider">
          <source>Remember that the health events are not dispatched to the <ph id="ph1">&lt;xref:System.Web.Management.WmiWebEventProvider&gt;</ph> provider by default.</source>
          <target state="translated">상태 이벤트를 발송 하지 됩니다 기억는 <ph id="ph1">&lt;xref:System.Web.Management.WmiWebEventProvider&gt;</ph> 기본적으로 공급자입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WmiWebEventProvider">
          <source>The following example is a configuration file excerpt that shows a <ph id="ph1">`&lt;healthMonitoring&gt;`</ph> configuration section that enables ASP.NET to use the <ph id="ph2">&lt;xref:System.Web.Management.WmiWebEventProvider&gt;</ph> provider to process all health-monitoring events.</source>
          <target state="translated">다음 예제를 보여 주는 구성 파일의 일부는는 <ph id="ph1">`&lt;healthMonitoring&gt;`</ph> ASP.NET을 사용할 수 있도록 하는 구성 섹션은 <ph id="ph2">&lt;xref:System.Web.Management.WmiWebEventProvider&gt;</ph> 모든 상태 모니터링 이벤트를 처리 하는 공급자입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WmiWebEventProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Management.WmiWebEventProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Management.WmiWebEventProvider" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WmiWebEventProvider.#ctor">
          <source>This constructor is used internally by the ASP.NET health-monitoring system.</source>
          <target state="translated">이 생성자는 ASP.NET 상태 모니터링 시스템에서 내부적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WmiWebEventProvider.#ctor">
          <source>You will never use it to create an instance of the <ph id="ph1">&lt;xref:System.Web.Management.TraceWebEventProvider&gt;</ph> class, but you can call this constructor when you implement your own provider type that inherits from this class.</source>
          <target state="translated">인스턴스를 만드는 사용 하지 것입니다는 <ph id="ph1">&lt;xref:System.Web.Management.TraceWebEventProvider&gt;</ph> 클래스 있지만이 클래스에서 상속 되는 공급자 형식을 구현 하는 경우이 생성자를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WmiWebEventProvider.Flush">
          <source>Removes all events from the provider's buffer.</source>
          <target state="translated">공급자의 버퍼에서 이벤트를 모두 제거합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WmiWebEventProvider.Flush">
          <source>When this method is called, all the events in the provider's buffer are immediately removed, regardless of how much time has elapsed since the last write or how many events are in the buffer.</source>
          <target state="translated">모든 이벤트 공급자의 버퍼를 즉시 제거,이 메서드를 호출할 때 마지막 이후 경과 시간에 관계 없이 쓰기 또는 이벤트 개수 버퍼에 있는 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WmiWebEventProvider.Flush">
          <source>The time of the last write is reset to the time of the flushing action.</source>
          <target state="translated">마지막 기록 시간 플러시 작업의 시간으로 다시 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WmiWebEventProvider.Flush">
          <source>Calling this method when the buffering mechanism is not enabled has no effect.</source>
          <target state="translated">버퍼링 메커니즘을 사용 하지 않는 경우이 메서드를 호출 해도 아무 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The name used in the configuration file to identify this provider.</source>
          <target state="translated">구성 파일에서 이 공급자를 식별하는 데 사용되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> object that specifies the attributes assigned for this provider in the configuration file.</source>
          <target state="translated">구성 파일에서 이 공급자에 할당된 특성을 지정하는 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
          <source>Sets the initial values for this object.</source>
          <target state="translated">이 개체의 초기 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
          <source>ASP.NET calls the <ph id="ph1">&lt;xref:System.Web.Management.WmiWebEventProvider.Initialize%2A&gt;</ph> method after calling the <ph id="ph2">&lt;xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">ASP.NET 호출은 <ph id="ph1">&lt;xref:System.Web.Management.WmiWebEventProvider.Initialize%2A&gt;</ph> 메서드를 호출한 후의 <ph id="ph2">&lt;xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
          <source>This method is called to initialize the <ph id="ph1">&lt;xref:System.Web.Management.WmiWebEventProvider&gt;</ph> class with the configuration settings and name specified in the configuration file.</source>
          <target state="translated">이 메서드를 호출 하 여 초기화 하는 <ph id="ph1">&lt;xref:System.Web.Management.WmiWebEventProvider&gt;</ph> 구성 설정 및 구성 파일에 지정 된 이름을 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.Management.WebBaseEvent" /&gt;</ph> object to process.</source>
          <target state="translated">처리할 <ph id="ph1">&lt;see cref="T:System.Web.Management.WebBaseEvent" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
          <source>Processes the event passed to the provider.</source>
          <target state="translated">공급자에 전달된 이벤트를 처리합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
          <source>This is the method that ASP.NET health monitoring calls to start the processing of the event.</source>
          <target state="translated">이것이 이벤트의 처리를 시작 하기 위해 호출 ASP.NET 상태 모니터링 하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
          <source>The event could not be raised.</source>
          <target state="translated">이벤트를 발생시킬 수 없는 경우</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WmiWebEventProvider.Shutdown">
          <source>Performs tasks associated with shutting down the provider.</source>
          <target state="translated">공급자 종료와 관련된 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WmiWebEventProvider.Shutdown">
          <source>ASP.NET calls the <ph id="ph1">&lt;xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A&gt;</ph> method when the application domain that hosts the Web application terminates.</source>
          <target state="translated">ASP.NET 호출은 <ph id="ph1">&lt;xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A&gt;</ph> 웹 응용 프로그램을 호스트 하는 응용 프로그램 도메인에서 종료 될 때 메서드.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WmiWebEventProvider.Shutdown">
          <source>The method is called to perform tasks that will allow the application to end gracefully.</source>
          <target state="translated">응용 프로그램을 정상적으로 종료할 수 있는 작업을 수행 하는 메서드 호출 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>