<Type Name="SecurityElement" FullName="System.Security.SecurityElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec7af69e8387feb777d27fd236565f8d063b8341" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36527511" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecurityElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SecurityElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityElement sealed" />
  <TypeSignature Language="F#" Value="type SecurityElement = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="24fe4-101">Represents the XML object model for encoding security objects.</span>
      <span class="sxs-lookup">
        <span data-stu-id="24fe4-101">Represents the XML object model for encoding security objects.</span>
      </span>
      <span data-ttu-id="24fe4-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="24fe4-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-103">이 클래스는 단순 XML 개체 모델 보안 시스템 내에서 사용 하기 위해 일반 XML 개체 모델으로 사용할 수 있도록 하지의 간단한 구현이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-103">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span> <span data-ttu-id="24fe4-104">이 문서에는 XML에 대 한 기본적인 지식이 있다고 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-104">This documentation assumes a basic knowledge of XML.</span></span>  
  
 <span data-ttu-id="24fe4-105">단순 XML 개체 모델 요소에 대 한 다음과 같은 부분으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-105">The simple XML object model for an element consists of the following parts:</span></span>  
  
-   <span data-ttu-id="24fe4-106">태그에는 요소 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-106">The tag is the element name.</span></span>  
  
-   <span data-ttu-id="24fe4-107">특성은 요소에 0 개 이상의 이름/값 특성 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-107">The attributes are zero or more name/value attribute pairs on the element.</span></span>  
  
-   <span data-ttu-id="24fe4-108">자식은 0 이나 더 많은 요소가 중첩 `<tag>` 및 `</tag>`합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-108">The children are zero or more elements nested within `<tag>` and `</tag>`.</span></span>  
  
 <span data-ttu-id="24fe4-109">특성 기반 XML 표현을 보안 요소 및 해당 값을 표현 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-109">It is strongly suggested that attribute based XML representation is used to express security elements and their values.</span></span> <span data-ttu-id="24fe4-110">즉, 있는 요소의 속성을 특성으로 표시 되는 속성 값을 특성 값으로 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-110">This means properties of an element are expressed as attributes and property values are expressed as attribute values.</span></span> <span data-ttu-id="24fe4-111">태그 내의 텍스트를 중첩 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="24fe4-111">Avoid nesting text within tags.</span></span> <span data-ttu-id="24fe4-112">에 대 한 `<tag>text</tag>` 형식의 표현을 표현 `<tag value="text"/>` 일반적으로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-112">For any `<tag>text</tag>` representation a representation of type `<tag value="text"/>` is usually available.</span></span> <span data-ttu-id="24fe4-113">이 특성에 기반한 XML 표현을 사용 하 여 가독성이 향상 되 고 결과 XML serialization의 쉬운 WMI 이식성을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-113">Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</span></span>  
  
 <span data-ttu-id="24fe4-114">특성 이름은 1 자 이상 이어야 하며 안 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-114">An attribute name must be one character or longer, and cannot be `null`.</span></span> <span data-ttu-id="24fe4-115">요소 기반 값 표현을 사용 하는 경우 텍스트를 사용 하 여 요소 문자열 `null` 에서 표현 되는 `<tag/>` 형성;로 텍스트 구분 그렇지 않은 경우는 `<tag>` 및 `</tag>` 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-115">If element-based value representation is used, elements with a text string that is `null` are represented in the `<tag/>` form; otherwise, text is delimited by the `<tag>` and `</tag>` tokens.</span></span> <span data-ttu-id="24fe4-116">두 형태를 모두 표시 되는 특성을 함께 사용할 수 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="24fe4-116">Both forms can be combined with attributes, which are shown if present.</span></span>  
  
 <span data-ttu-id="24fe4-117">태그, 특성 및 요소의 텍스트는 존재 하면 항상 대/소문자 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-117">The tags, attributes, and text of elements, if present, are always case-sensitive.</span></span> <span data-ttu-id="24fe4-118">XML 형식에는 인용 부호를 포함 하 고 필요한 경우를 이스케이프 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-118">The XML form contains quotations and escapes where necessary.</span></span> <span data-ttu-id="24fe4-119">문자열 값이 XML에 사용 하기 위해 잘못 된 문자를 포함 하는 <xref:System.ArgumentException>합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-119">String values that include characters invalid for use in XML result in an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="24fe4-120">이러한 규칙은 모든 속성 및 메서드에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-120">These rules apply to all properties and methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24fe4-121">성능상의 이유로 문자의 유효성은 때만 확인 요소는 XML 텍스트 형식으로 및 속성이 나 메서드의 모든 집합에 없는 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-121">For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</span></span> <span data-ttu-id="24fe4-122">정적 메서드를 명시적으로 필요한 부분을 검사할 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-122">Static methods allow explicit checking where needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24fe4-123">다음 예제에서는의 멤버를 사용 하 여 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-123">The following example shows the use of members of the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#1)]
 [!code-csharp[SecurityElementMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#1)]
 [!code-vb[SecurityElementMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24fe4-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="24fe4-125">The tag name of an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-125">The tag name of an XML element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24fe4-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-127">`tag` 매개 변수는 유효한 XML 태그 이름으로 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-127">The `tag` parameter must consist of a valid XML tag name.</span></span> <span data-ttu-id="24fe4-128">사용 하 여 <xref:System.Security.SecurityElement.Escape%2A> 문자열에서 잘못 된 문자를 제거 하려면.</span><span class="sxs-lookup"><span data-stu-id="24fe4-128">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24fe4-129">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.%23ctor%2A> 생성자를 만들려면 새 <xref:System.Security.SecurityElement> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-129">The following code shows the use of  the <xref:System.Security.SecurityElement.%23ctor%2A> constructor to create a new <xref:System.Security.SecurityElement> object.</span></span>  <span data-ttu-id="24fe4-130">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-130">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#2)]
 [!code-csharp[SecurityElementMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#2)]
 [!code-vb[SecurityElementMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24fe4-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24fe4-132">The <paramref name="tag" /> parameter is invalid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-132">The <paramref name="tag" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag, System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string * string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement (tag, text)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="24fe4-133">The tag name of the XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-133">The tag name of the XML element.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="24fe4-134">The text content within the element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-134">The text content within the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24fe4-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-136">경우는 `text` 매개 변수는 `null` 이 생성자는 기본 생성자와 동일한 요소를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-136">If the `text` parameter is `null` this constructor produces an element identical to the default constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24fe4-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24fe4-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : string * string -&gt; unit" Usage="securityElement.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="24fe4-139">The name of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-139">The name of the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="24fe4-140">The value of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-140">The value of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24fe4-141">Adds a name/value attribute to an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-141">Adds a name/value attribute to an XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-142">Name 및 value 특성에 유효한 XML 특성 문자만 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-142">Names and values in attributes should only contain valid XML attribute characters.</span></span> <span data-ttu-id="24fe4-143">XML 특성 이름은 고유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-143">XML attribute names must be unique.</span></span> <span data-ttu-id="24fe4-144">사용 하 여 <xref:System.Security.SecurityElement.Escape%2A> 문자열에서 잘못 된 문자를 제거 하려면.</span><span class="sxs-lookup"><span data-stu-id="24fe4-144">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="24fe4-145">지원은 없습니다 따옴표 붙은 문자열에 대 한 이름/값 쌍에 대 한 문자열에서 따옴표를 포함 하면 안 되므로 또는 따옴표가 필요한 기타 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-145">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24fe4-146">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.AddAttribute%2A> 메서드는 XML 요소를 이름/값 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-146">The following code shows the use of the <xref:System.Security.SecurityElement.AddAttribute%2A> method to add a name/value attribute to an XML element.</span></span> <span data-ttu-id="24fe4-147">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-147">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#4)]
 [!code-csharp[SecurityElementMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#4)]
 [!code-vb[SecurityElementMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24fe4-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24fe4-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span>
          </span>
          <span data-ttu-id="24fe4-150">-or-  An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-150">-or-  An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Security.SecurityElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Security.SecurityElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Security::SecurityElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddChild : System.Security.SecurityElement -&gt; unit" Usage="securityElement.AddChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="24fe4-151">The child element to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-151">The child element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24fe4-152">Adds a child element to the XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-152">Adds a child element to the XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-153">자식 요소는 다음과 같은 모든 기존 자식 요소가 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-153">The child element is added following any previously existing child elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24fe4-154">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.AddChild%2A> 메서드를 XML 요소에 자식 요소를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-154">The following code shows the use of the <xref:System.Security.SecurityElement.AddChild%2A> method to add a child element to the XML element.</span></span>  <span data-ttu-id="24fe4-155">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-155">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#5](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#5)]
 [!code-csharp[SecurityElementMembers#5](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#5)]
 [!code-vb[SecurityElementMembers#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24fe4-156">The <paramref name="child" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-156">The <paramref name="child" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public string Attribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Attribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Attribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Attribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Attribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Attribute : string -&gt; string" Usage="securityElement.Attribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="24fe4-157">The name of the attribute for which to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-157">The name of the attribute for which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24fe4-158">Finds an attribute by name in an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-158">Finds an attribute by name in an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24fe4-159">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-159">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-160">다음과 같이 XML로 `Attribute("B")` "456"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-160">With XML as follows, `Attribute("B")` would return "456".</span></span>  
  
```  
<thetag A="123" B="456" C="789">text</thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="24fe4-161">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.Attribute%2A> 메서드 이름으로 특성을 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-161">The following code shows the use of the <xref:System.Security.SecurityElement.Attribute%2A> method to find an attribute by name.</span></span> <span data-ttu-id="24fe4-162">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-162">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#13)]
 [!code-csharp[SecurityElementMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#13)]
 [!code-vb[SecurityElementMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24fe4-163">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-163">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Property Attributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ Attributes { System::Collections::Hashtable ^ get(); void set(System::Collections::Hashtable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Hashtable with get, set" Usage="System.Security.SecurityElement.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24fe4-164">Gets or sets the attributes of an XML element as name/value pairs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-164">Gets or sets the attributes of an XML element as name/value pairs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24fe4-165">
            <see cref="T:System.Collections.Hashtable" /> XML 요소 특성 값에 대 한 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-165">The <see cref="T:System.Collections.Hashtable" /> object for the attribute values of the XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-166">각 특성에 저장 됩니다는 <xref:System.Collections.Hashtable> 이름/값 쌍으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-166">Each attribute is stored in the <xref:System.Collections.Hashtable> as a name/value pair.</span></span>  
  
 <span data-ttu-id="24fe4-167">Name 및 value 특성에 유효한 XML 특성 문자만 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-167">Names and values in attributes should contain only valid XML attribute characters.</span></span> <span data-ttu-id="24fe4-168">사용 하 여 <xref:System.Security.SecurityElement.Escape%2A> 문자열에서 잘못 된 문자를 제거 하려면.</span><span class="sxs-lookup"><span data-stu-id="24fe4-168">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="24fe4-169">지원은 없습니다 따옴표 붙은 문자열에 대 한 이름/값 쌍에 대 한 문자열에서 따옴표를 포함 하면 안 되므로 또는 따옴표가 필요한 기타 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-169">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24fe4-170">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.Attributes%2A> XML 요소의 특성을 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-170">The following code shows the use of the <xref:System.Security.SecurityElement.Attributes%2A> property to get an attribute of an XML element.</span></span> <span data-ttu-id="24fe4-171">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-171">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#15)]
 [!code-csharp[SecurityElementMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#15)]
 [!code-vb[SecurityElementMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="24fe4-172">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-172">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24fe4-173">The name is not a valid XML attribute name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-173">The name is not a valid XML attribute name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Children { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Children" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Children" />
      <MemberSignature Language="VB.NET" Value="Public Property Children As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Children { System::Collections::ArrayList ^ get(); void set(System::Collections::ArrayList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.ArrayList with get, set" Usage="System.Security.SecurityElement.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24fe4-174">Gets or sets the array of child elements of the XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-174">Gets or sets the array of child elements of the XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24fe4-175">보안 요소로 XML 요소의 순서가 지정 된 자식 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-175">The ordered child elements of the XML element as security elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-176">경우는 <xref:System.Security.SecurityElement> 둘 다 포함 되어 <xref:System.Security.SecurityElement.Text%2A> 및 <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> 맨 먼저 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-176">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24fe4-177">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.Children%2A> XML 요소의 자식 요소의 배열을 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-177">The following code shows the use of the <xref:System.Security.SecurityElement.Children%2A> property to get the array of child elements of the XML element.</span></span> <span data-ttu-id="24fe4-178">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-178">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#14)]
 [!code-csharp[SecurityElementMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#14)]
 [!code-vb[SecurityElementMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24fe4-179">A child of the XML parent node is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-179">A child of the XML parent node is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecurityElement" Usage="securityElement.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="24fe4-180">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-180">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24fe4-181">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-181">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-182">복사본 둘 다 포함 된 <xref:System.Security.SecurityElement.Children%2A> 및 <xref:System.Security.SecurityElement.Attributes%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-182">The copy includes both the <xref:System.Security.SecurityElement.Children%2A> and <xref:System.Security.SecurityElement.Attributes%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public bool Equal (System.Security.SecurityElement other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equal(class System.Security.SecurityElement other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equal (other As SecurityElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equal(System::Security::SecurityElement ^ other);" />
      <MemberSignature Language="F#" Value="member this.Equal : System.Security.SecurityElement -&gt; bool" Usage="securityElement.Equal other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="24fe4-183">An XML element object to which to compare the current XML element object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-183">An XML element object to which to compare the current XML element object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24fe4-184">Compares two XML element objects for equality.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-184">Compares two XML element objects for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24fe4-185">
            <see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-185">
              <see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-186">자식 요소가 비교를 재귀적으로 확장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-186">If there are child elements, comparison extends recursively to them.</span></span>  
  
 <span data-ttu-id="24fe4-187">같은 문자의 다른 XML 표현 비교에 대 한 지원은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-187">There is no support for comparing different XML representations of the same characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24fe4-188">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.Equal%2A> 메서드 두 개의 XML 요소를 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-188">The following code shows the use of the <xref:System.Security.SecurityElement.Equal%2A> method to compare two XML elements.</span></span> <span data-ttu-id="24fe4-189">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-189">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#22](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#22)]
 [!code-csharp[SecurityElementMembers#22](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#22)]
 [!code-vb[SecurityElementMembers#22](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Escape : string -&gt; string" Usage="System.Security.SecurityElement.Escape str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="24fe4-190">The string within which to escape invalid characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-190">The string within which to escape invalid characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24fe4-191">Replaces invalid XML characters in a string with their valid XML equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-191">Replaces invalid XML characters in a string with their valid XML equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24fe4-192">The input string with invalid characters replaced.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-192">The input string with invalid characters replaced.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-193">이 메서드를 사용 하는 문자열에 잘못 된 문자가 문자열에 사용 하기 전에 교체는 <xref:System.Security.SecurityElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-193">Use this method to replace invalid characters in a string before using the string in a <xref:System.Security.SecurityElement>.</span></span> <span data-ttu-id="24fe4-194">잘못 된 문자에 사용 되는 경우는 <xref:System.Security.SecurityElement> 이스케이프 하지 않고는 <xref:System.ArgumentException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-194">If invalid characters are used in a <xref:System.Security.SecurityElement> without being escaped, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="24fe4-195">다음 표에서 잘못 된 XML 문자 및 상응 하는 이스케이프를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-195">The following table shows the invalid XML characters and their escaped equivalents.</span></span>  

| <span data-ttu-id="24fe4-196">잘못 된 XML 문자</span><span class="sxs-lookup"><span data-stu-id="24fe4-196">Invalid XML character</span></span> | <span data-ttu-id="24fe4-197">으로 대체</span><span class="sxs-lookup"><span data-stu-id="24fe4-197">Replaced with</span></span> |
|-----------------------|---------------|
| `<`                   | `&lt;`        |
| `>`                   | `&gt;`        |
| `"`                   | `&quot;`      |
| `'`                   | `&apos;`      |
| `&`                   | `&amp;`       |   

## Examples  
 <span data-ttu-id="24fe4-198">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.Escape%2A> 잘못 된 XML을 대체할 메서드를을 유효한 XML 동등한 문자열에 문자를 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-198">The following code shows the use of the <xref:System.Security.SecurityElement.Escape%2A> method to replace invalid XML characters in a string with their valid XML equivalent.</span></span> <span data-ttu-id="24fe4-199">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-199">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#19](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#19)]
 [!code-csharp[SecurityElementMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#19)]
 [!code-vb[SecurityElementMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityElement FromString (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityElement FromString(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.FromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromString (xml As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityElement ^ FromString(System::String ^ xml);" />
      <MemberSignature Language="F#" Value="static member FromString : string -&gt; System.Security.SecurityElement" Usage="System.Security.SecurityElement.FromString xml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="24fe4-200">The XML-encoded string from which to create the security element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-200">The XML-encoded string from which to create the security element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24fe4-201">Creates a security element from an XML-encoded string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-201">Creates a security element from an XML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24fe4-202">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-202">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-203">XML 문자열에서 작은따옴표를 사용 하지 마십시오 이스케이프 된 큰따옴표를 대신 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-203">Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</span></span> <span data-ttu-id="24fe4-204">예를 들어 대신의 "`<value name='Company'>Microsoft</value>"` 사용"`<value name=\"Company\">Microsoft</value>"`합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-204">For example, instead of "`<value name='Company'>Microsoft</value>"` use "`<value name=\"Company\">Microsoft</value>"`.</span></span>  
  
 <span data-ttu-id="24fe4-205">작은따옴표를 사용 하 여 예외가 발생 하거나 또는 문자열에 텍스트로 간주 되는 작은따옴표 어떤 경우 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-205">Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.XmlSyntaxException">
          <span data-ttu-id="24fe4-206">
            <paramref name="xml" /> contains one or more single quotation mark characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-206">
              <paramref name="xml" /> contains one or more single quotation mark characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24fe4-207">
            <paramref name="xml" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-207">
              <paramref name="xml" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeName">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeName : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="24fe4-208">The attribute name to test for validity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-208">The attribute name to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24fe4-209">Determines whether a string is a valid attribute name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-209">Determines whether a string is a valid attribute name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24fe4-210">
            <see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-210">
              <see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-211">보안 요소를 추가 하기 전에 특성을 테스트 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-211">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24fe4-212">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.IsValidAttributeName%2A> 메서드는 문자열에 잘못 된 특성 이름 인지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-212">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeName%2A> method to determine whether a string is a valid attribute name.</span></span> <span data-ttu-id="24fe4-213">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-213">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#6)]
 [!code-csharp[SecurityElementMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#6)]
 [!code-vb[SecurityElementMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeValue">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeValue (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeValue : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="24fe4-214">The attribute value to test for validity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-214">The attribute value to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24fe4-215">Determines whether a string is a valid attribute value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-215">Determines whether a string is a valid attribute value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24fe4-216">
            <see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-216">
              <see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-217">보안 요소를 추가 하기 전에 특성을 테스트 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-217">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24fe4-218">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> 메서드는 문자열에 유효한 특성 값을 인지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-218">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> method to determine whether a string is a valid attribute value.</span></span> <span data-ttu-id="24fe4-219">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-219">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#7)]
 [!code-csharp[SecurityElementMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#7)]
 [!code-vb[SecurityElementMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidTag">
      <MemberSignature Language="C#" Value="public static bool IsValidTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidTag (tag As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="static member IsValidTag : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="24fe4-220">The tag to test for validity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-220">The tag to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24fe4-221">Determines whether a string is a valid tag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-221">Determines whether a string is a valid tag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24fe4-222">
            <see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-222">
              <see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-223">이 테스트에 사용할 수 있습니다는 <xref:System.Security.SecurityElement.Tag%2A> 설정 하기 전에.</span><span class="sxs-lookup"><span data-stu-id="24fe4-223">This can be used to test a <xref:System.Security.SecurityElement.Tag%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24fe4-224">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.IsValidTag%2A> 메서드를 문자열로 유효한 특성 태그 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-224">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidTag%2A> method to determine whether a string is a valid attribute tag.</span></span> <span data-ttu-id="24fe4-225">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-225">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#10](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#10)]
 [!code-csharp[SecurityElementMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#10)]
 [!code-vb[SecurityElementMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidText">
      <MemberSignature Language="C#" Value="public static bool IsValidText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidText (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsValidText : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="24fe4-226">The text to test for validity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-226">The text to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24fe4-227">Determines whether a string is valid as text within an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-227">Determines whether a string is valid as text within an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24fe4-228">
            <see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-228">
              <see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-229">이 메서드는 테스트를 사용할 수 <xref:System.Security.SecurityElement.Text%2A> 설정 하기 전에.</span><span class="sxs-lookup"><span data-stu-id="24fe4-229">This method can be used to test <xref:System.Security.SecurityElement.Text%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24fe4-230">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.IsValidText%2A> 메서드를 문자열로 XML 요소의 텍스트로 올바른지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-230">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidText%2A> method to determine whether a string is valid as XML element text.</span></span> <span data-ttu-id="24fe4-231">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-231">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#9)]
 [!code-csharp[SecurityElementMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#9)]
 [!code-vb[SecurityElementMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForChildByTag">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement SearchForChildByTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement SearchForChildByTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForChildByTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForChildByTag (tag As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ SearchForChildByTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForChildByTag : string -&gt; System.Security.SecurityElement" Usage="securityElement.SearchForChildByTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="24fe4-232">The tag for which to search in child elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-232">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24fe4-233">Finds a child by its tag name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-233">Finds a child by its tag name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24fe4-234">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-234">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-235">다음과 같이 XML로 `SearchForChildByTag("second")` 자식 요소를 반환 합니다 `<second>`합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-235">With XML as follows, `SearchForChildByTag("second")` would return the child element `<second>`.</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
       <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="24fe4-236">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.SearchForChildByTag%2A> 메서드 자식 태그 이름을 사용 하 여 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-236">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForChildByTag%2A> method to find a child by its tag name.</span></span> <span data-ttu-id="24fe4-237">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-237">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#17)]
 [!code-csharp[SecurityElementMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#17)]
 [!code-vb[SecurityElementMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24fe4-238">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-238">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SearchForTextOfTag">
      <MemberSignature Language="C#" Value="public string SearchForTextOfTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SearchForTextOfTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForTextOfTag (tag As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SearchForTextOfTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForTextOfTag : string -&gt; string" Usage="securityElement.SearchForTextOfTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="24fe4-239">The tag for which to search in child elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-239">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24fe4-240">Finds a child by its tag name and returns the contained text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-240">Finds a child by its tag name and returns the contained text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24fe4-241">The text contents of the first child element with the specified tag value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-241">The text contents of the first child element with the specified tag value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-242">이 메서드는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-242">This method is equivalent to the following:</span></span>  
  
 [!code-cpp[System.Security.SecurityElement#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securityelement/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.SecurityElement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securityelement/cs/remarks.cs#1)]
 [!code-vb[System.Security.SecurityElement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.securityelement/vb/remarks.vb#1)]  
  
 <span data-ttu-id="24fe4-243">다음과 같이 XML로 `SearchForTextOfTag("second")` "텍스트 2"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-243">With XML as follows, `SearchForTextOfTag("second")` would return "text2".</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
    <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="24fe4-244">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> 메서드 태그 이름을 사용 하 여 자식을 찾아 포함 된 텍스트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-244">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> method to find a child by its tag name and return the contained text.</span></span> <span data-ttu-id="24fe4-245">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-245">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#18](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#18)]
 [!code-csharp[SecurityElementMembers#18](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#18)]
 [!code-vb[SecurityElementMembers#18](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24fe4-246">
            <paramref name="tag" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-246">
              <paramref name="tag" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : string with get, set" Usage="System.Security.SecurityElement.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24fe4-247">Gets or sets the tag name of an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-247">Gets or sets the tag name of an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24fe4-248">XML 요소의 태그 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-248">The tag name of an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-249">Xml에서는 태그 아래에 표시 되는 스크립트에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-249">In XML, the tag appears in the script as appears below:</span></span>  
  
```  
<tag attributes>text</tag>  
```  
  
 <span data-ttu-id="24fe4-250">이 요소에 자식 요소가 있으면 자식 바뀝니다 `text`합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-250">If this element has child elements, the children will replace `text`.</span></span>  
  
 <span data-ttu-id="24fe4-251">이 속성에만 유효한 XML 태그 문자열을 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-251">Assign only valid XML tag strings to this property.</span></span> <span data-ttu-id="24fe4-252">사용 하 여 <xref:System.Security.SecurityElement.Escape%2A> 문자열에서 잘못 된 문자를 제거 하려면.</span><span class="sxs-lookup"><span data-stu-id="24fe4-252">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24fe4-253">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.Tag%2A> XML 요소 태그 이름을 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-253">The following code shows the use of the <xref:System.Security.SecurityElement.Tag%2A> property to get the tag name of an XML element.</span></span> <span data-ttu-id="24fe4-254">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-254">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#11)]
 [!code-csharp[SecurityElementMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#11)]
 [!code-vb[SecurityElementMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="24fe4-255">The tag is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-255">The tag is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24fe4-256">The tag is not valid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-256">The tag is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Security.SecurityElement.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24fe4-257">Gets or sets the text within an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-257">Gets or sets the text within an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24fe4-258">XML 요소 내에서 텍스트의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-258">The value of the text within an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-259">텍스트는 XML 특수 문자를 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-259">The text should not contain XML special characters.</span></span> <span data-ttu-id="24fe4-260">사용 하 여 <xref:System.Security.SecurityElement.Escape%2A> 문자열에서 잘못 된 문자를 제거 하려면.</span><span class="sxs-lookup"><span data-stu-id="24fe4-260">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="24fe4-261">경우는 <xref:System.Security.SecurityElement> 둘 다 포함 되어 <xref:System.Security.SecurityElement.Text%2A> 및 <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> 맨 먼저 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-261">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24fe4-262">다음 코드의 사용을 보여 줍니다.는 <xref:System.Security.SecurityElement.Text%2A> XML 요소의 텍스트를 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-262">The following code shows the use of the <xref:System.Security.SecurityElement.Text%2A> property to get the text of an XML element.</span></span> <span data-ttu-id="24fe4-263">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.SecurityElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-263">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#12)]
 [!code-csharp[SecurityElementMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#12)]
 [!code-vb[SecurityElementMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="24fe4-264">The text is not valid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-264">The text is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="securityElement.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="24fe4-265">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-265">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24fe4-266">The XML element and its contents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24fe4-266">The XML element and its contents.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fe4-267">이 메서드는 요소의 XML 표현을 확인 하는 디버깅에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="24fe4-267">This method is useful in debugging to see the XML representation of the element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>