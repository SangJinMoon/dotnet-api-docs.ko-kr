<Type Name="IStackWalk" FullName="System.Security.IStackWalk">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b37ff083eff27618aa07c0a744562f3f8a613708" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30499167" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.IStackWalk" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStackWalk" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>호출 스택의 모든 호출자가 보호된 리소스에 액세스하는 데 필요한 권한이 있는지 여부를 결정하는 스택 워크를 관리합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 부분적으로 신뢰할 수 있는 코드는 항상 보안 위험을 표시합니다. 리소스에 액세스 권한이 있는 악의적인 코드를 대신 하 여 작업을 수행할 조작할 경우도 있습니다. 이러한 방식으로 악성 코드가 허용 되는 것 보다 더 높은 보안 액세스를 달성할 수 있습니다.  
  
 공용 언어 런타임에 대 한 모든 호출에서 스택 워크를 실행 하 여 이러한 공격 으로부터 관리 되는 코드를 보호할 수 있습니다. 스택 워크는 모든 코드가 호출 스택에 있는 보호 된 리소스에 액세스할 수 있는 권한이 필요 합니다. 공격을 시도 하는 코드에 호출 스택을 항상 있이 됩니다, 때문에 되지 것입니다는 자체 보안 권한을 초과할 수 있습니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Assert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>스택의 상위 호출자에게 리소스에 액세스할 수 있는 권한이 부여되지 않더라도 호출 코드에서 현재 사용 권한 개체로 식별되는 리소스에 액세스할 수 있음을 어설션합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 <xref:System.Security.IStackWalk.Assert%2A> 호출 스택의 상위 호출자 사용 권한 검사를 중지 합니다. 따라서 이러한 호출자가 필수 사용 권한을 없는 경우에 리소스 여전히 액세스할 수 있습니다. 어설션을 코드를 호출 하는 경우에 유효 <xref:System.Security.IStackWalk.Assert%2A> 어설션하는 사용 권한에 대해 보안 검사를 통과 합니다.  
  
 에 대 한 호출 <xref:System.Security.IStackWalk.Assert%2A> 호출 코드에 대 한 이후의 호출 될 때까지 또는 해당 호출자에 게 반환 될 때까지 유효 <xref:System.Security.IStackWalk.Assert%2A> 이전 어설션이 비효율적인 렌더링 합니다. 또한 <xref:System.Security.CodeAccessPermission.RevertAssert%2A> 또는 <xref:System.Security.CodeAccessPermission.RevertAll%2A> 제거는 보류 중인 <xref:System.Security.IStackWalk.Assert%2A>합니다.  
  
 <xref:System.Security.IStackWalk.Assert%2A> 권한에 대 한 요청이 실패 합니다 부여 되지 않은 사용 권한을 무시 됩니다. 그러나 코드가 호출 스택에 낮은 호출 <xref:System.Security.IStackWalk.Demand%2A> 권한에 대해는 <xref:System.Security.SecurityException> 스택 워크를 호출 하려고 하는 코드에 도달 하면 throw 되 <xref:System.Security.IStackWalk.Assert%2A>합니다. 코드를 호출 하기 때문에 이런 <xref:System.Security.IStackWalk.Assert%2A> 가 부여 되지 권한, 하 려 했지만 <xref:System.Security.IStackWalk.Assert%2A> 것입니다.  
  
> [!CAUTION]
>  호출 하기 때문에 <xref:System.Security.IStackWalk.Assert%2A> 호출 체인에 모든 코드가 요구 해야 권한이 제거 지정 된 리소스에 액세스할 수, 메서드를 잘못 사용할 경우 보안 취약점이 발생할 수 있습니다. 따라서 매우 주의 해 서 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 코드에 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />이 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Demand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>호출 스택의 모든 호출자에게 현재 사용 권한 개체가 지정한 사용 권한이 부여되어 있는지를 런타임에 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 일반적으로 호출자에 게 리소스에 액세스할 수 있는 권한이 있는지 확인 하려면 보안 라이브러리에서 사용 됩니다. 예를 들어 보안 클래스 라이브러리의 파일 클래스 호출 <xref:System.Security.IStackWalk.Demand%2A> 필요한 <xref:System.Security.Permissions.FileIOPermission> 는 호출자가 요청한 파일 작업을 수행 합니다.  
  
 이 메서드를 호출 하는 코드의 사용 권한은 검사 하지 않습니다. 검사 해당 코드의 직접 실행 호출자에서 시작 되 고 스택 위로 진행 됩니다. <xref:System.Security.IStackWalk.Demand%2A> 없는 경우에 성공 <xref:System.Security.SecurityException> 발생 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위에 있는 호출자에게 현재 사용 권한 개체가 지정한 사용 권한이 없습니다.  
  
 또는  
  
 호출 스택의 호출자가 현재 사용 권한 개체에 대해 <see cref="M:System.Security.IStackWalk.Deny" />를 호출했습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Deny();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>호출 코드를 통과하는 현재 개체에 대한 모든 <see cref="M:System.Security.IStackWalk.Demand" />가 실패합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 호출 스택의 상위 호출자가 해당 호출자가 액세스할 수 있는 권한이 부여 되어 있는 경우에이 메서드를 호출 하는 코드를 통해 보호 된 리소스에 액세스 하지 못하도록 방지 합니다. 호출 스택의 호출 스택의 상위 메서드를 호출할 낮은 호출 스택에 있도록 하향식으로 일반적으로 표현 됩니다.  
  
 <xref:System.Security.IStackWalk.Deny%2A> 프로그래머의 책임을 제한 하거나 호출 하는 메서드를 방지할 수 있으므로 실수로 인 한 보안 취약점을 방지할 수 있습니다 <xref:System.Security.IStackWalk.Deny%2A> 에서 거부 된 권한으로 보호 되는 리소스에 액세스 하는 데 사용 되 고 있습니다. 메서드를 호출 하는 경우 <xref:System.Security.IStackWalk.Deny%2A> 권한, 경우에 <xref:System.Security.IStackWalk.Demand%2A> 에 도달 하면 해당 보안 검사에서 실패에 해당 권한이 하위 호출 스택의 호출자가 호출 되는 <xref:System.Security.IStackWalk.Deny%2A>합니다.  
  
 <xref:System.Security.IStackWalk.Deny%2A> 권한에 대 한 요청이 실패 합니다 부여 되지 않은 사용 권한을 무시 됩니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>이 메서드를 재정의할 수 없습니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PermitOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>호출 스택의 상위 코드에 다른 리소스에 액세스할 수 있는 권한이 부여되어도 호출 코드에 전달되는 현재 개체를 제외한 모든 개체에 대한 <see cref="M:System.Security.IStackWalk.Demand" />는 모두 실패합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.IStackWalk.PermitOnly%2A> 유사한 <xref:System.Security.IStackWalk.Deny%2A>그렇지 않은 경우는 성공 시 작동이 실패 하도록 스택 워크 있는 상황에서, 합니다. 차이점은 <xref:System.Security.IStackWalk.Deny%2A> 실패 하는 스택 워크를 발생 시키는 사용 권한을 지정 하지만 <xref:System.Security.IStackWalk.PermitOnly%2A> 스택 워크 실패 하지 않게 되는 유일한 권한을 지정 합니다. 코드 지정 된 리소스에만 액세스할 수 사용 될 수 있도록 하려면이 메서드를 호출 합니다.  
  
 <xref:System.Security.IStackWalk.PermitOnly%2A> 권한에 대 한 요청이 실패 합니다 부여 되지 않은 사용 권한을 무시 됩니다. 그러나 코드에 대 한 호출에 낮은 나중 스택 하는 경우 호출 <xref:System.Security.IStackWalk.Demand%2A> 권한에 대해는 <xref:System.Security.SecurityException> 스택 워크를 호출 하려고 하는 코드에 도달 하면 throw 되 <xref:System.Security.IStackWalk.PermitOnly%2A>합니다. 호출한 코드 때문에 이것이 <xref:System.Security.IStackWalk.PermitOnly%2A> 에 권한이 부여 되지는 호출 했지만 <xref:System.Security.IStackWalk.PermitOnly%2A> 권한에 합니다. 호출 스택의 호출 스택의 상위 메서드를 호출할 낮은 호출 스택에 있도록 하향식으로 일반적으로 표현 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>