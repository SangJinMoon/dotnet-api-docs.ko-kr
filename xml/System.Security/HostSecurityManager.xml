<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HostSecurityManager.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ff48fa5df967caba5aed9ae2ba2fef1a119992f4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff48fa5df967caba5aed9ae2ba2fef1a119992f4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.HostSecurityManager">
          <source>Allows the control and customization of security behavior for application domains.</source>
          <target state="translated">응용 프로그램 도메인에 대한 보안 동작을 제어하고 사용자 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>When you create a new <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>, the common language runtime queries the <ph id="ph2">&lt;xref:System.AppDomainManager&gt;</ph> for the presence of a <ph id="ph3">&lt;xref:System.Security.HostSecurityManager&gt;</ph>, which participates in making security decisions for the <ph id="ph4">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">만들 새 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>, 공용 언어 런타임 쿼리는 <ph id="ph2">&lt;xref:System.AppDomainManager&gt;</ph> 있는지는 <ph id="ph3">&lt;xref:System.Security.HostSecurityManager&gt;</ph>에 대 한 보안 결정에 참여 하는 <ph id="ph4">&lt;xref:System.AppDomain&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>Host providers should implement a host security manager that inherits from the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class.</source>
          <target state="translated">호스트 공급자에서 상속 되는 호스트 보안 관리자를 구현 해야는 <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>The following example shows a very simple implementation of a <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 매우 간단한 구현을 <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>This class cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 클래스는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>for full trust for inheritors.</source>
          <target state="translated">상속자에 대 한 완전 신뢰 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">부분적으로 신뢰할 수 있는 코드에서이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>Some members of a <ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph> are called whenever an assembly is loaded, either implicitly or explicitly.</source>
          <target state="translated">일부 멤버는 <ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph> 암시적 또는 명시적으로 어셈블리가 로드 될 때마다 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>The <ph id="ph1">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" /&gt;</ph> methods must not load any assemblies, because doing so will result in the members of the <ph id="ph3">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph> being recursively called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" /&gt;</ph> 메서드 해야 로드할 모든 어셈블리의 멤버에 그렇게 하면는 <ph id="ph3">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph> 재귀적으로 호출 되 고 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>To avoid circular references, you should create new instances of classes that can cause assemblies to be loaded, either implicitly or explicitly, in the constructor of a class that derives from <ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph>.</source>
          <target state="translated">순환 참조를 방지 로드할된 어셈블리에, 암시적 또는 명시적으로에서 파생 되는 클래스의 생성자에서 발생할 수 있는 클래스의 새 인스턴스를 만들고 해야 <ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>for full trust for inheritors.</source>
          <target state="translated">상속자에 대 한 완전 신뢰 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 상속할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>Create instances of classes that can cause assemblies to be loaded, either explicitly or implicitly, in this constructor.</source>
          <target state="translated">이 생성자에 어셈블리를 명시적으로 또는 암시적으로 로드할 수 있는 클래스의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>The get accessor for the <ph id="ph1">&lt;see cref="P:System.Security.HostSecurityManager.DomainPolicy" /&gt;</ph> property and the <ph id="ph2">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" /&gt;</ph> and <ph id="ph3">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" /&gt;</ph> methods are called whenever an assembly is loaded, and their subsequent loading of assemblies will cause circular references.</source>
          <target state="translated">에 대 한 get 접근자는 <ph id="ph1">&lt;see cref="P:System.Security.HostSecurityManager.DomainPolicy" /&gt;</ph> 속성 및 <ph id="ph2">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" /&gt;</ph> 어셈블리를 로드 및 어셈블리의 계속 해 서 로드 순환 참조가 발생 합니다 때마다 호출 되어 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The evidence for the application to be activated.</source>
          <target state="translated">활성화할 응용 프로그램의 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>Optionally, the evidence for the activating application domain.</source>
          <target state="translated">선택적 매개 변수로서 활성 응용 프로그램 도메인의 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The trust context.</source>
          <target state="translated">신뢰 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>Determines whether an application should be executed.</source>
          <target state="translated">응용 프로그램을 실행해야 하는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>An object that contains trust information about the application.</source>
          <target state="translated">응용 프로그램에 대한 신뢰 정보가 들어 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The base implementation calls the application security manager to determine if the application should be executed.</source>
          <target state="translated">기본 구현은 응용 프로그램을 실행 해야 하는 경우를 확인 하려면 응용 프로그램 보안 관리자를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The base implementation does not use the activator evidence.</source>
          <target state="translated">기본 구현은 활성기 증거를 사용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>However, an overridden implementation could use the activator evidence to determine the security evidence for the application domain attempting to activate the application.</source>
          <target state="translated">하지만 재정의 된 구현 응용 프로그램을 활성화 하는 응용 프로그램 도메인에 대 한 보안 증명 정보를 확인 하려면 활성기 증거를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A&gt;</ph> method for a custom host security manager.</source>
          <target state="translated">재정의 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A&gt;</ph> 메서드는 사용자 지정 호스트 보안 관리자에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class.</source>
          <target state="translated">이 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source><ph id="ph1">&lt;paramref name="applicationEvidence" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="applicationEvidence" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Runtime.Hosting.ActivationArguments" /&gt;</ph> object could not be found in the application evidence.</source>
          <target state="translated">응용 프로그램 증명 정보에서 찾을 수 없는 <ph id="ph1">&lt;see cref="T:System.Runtime.Hosting.ActivationArguments" /&gt;</ph> 개체인 경우</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" /&gt;</ph> property in the activation arguments is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">활성화 인수의 <ph id="ph1">&lt;see cref="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" /&gt;</ph> 속성이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrust" /&gt;</ph> grant set does not contain the minimum request set specified by the <ph id="ph2">&lt;see cref="T:System.ActivationContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrust" /&gt;</ph> 권한 부여 집합에는 <ph id="ph2">&lt;see cref="T:System.ActivationContext" /&gt;</ph>에서 지정한 최소 요청 집합이 들어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>When overridden in a derived class, gets the security policy for the current application domain.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 현재 응용 프로그램 도메인에 대한 보안 정책을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>The security policy for the current application domain.</source>
          <target state="translated">현재 응용 프로그램 도메인에 대한 보안 정책입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>This property can be overridden in a derived class.</source>
          <target state="translated">이 속성은 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>The base implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본 구현은 항상 <ph id="ph1">`null`</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>This property is called at <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> creation time.</source>
          <target state="translated">이 속성에 호출 되 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> 만든 시간입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>It allows a host to supply a policy for the current <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">호스트에 대 한 현재 정책을 지정 하는 데 허용 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>A policy level consists of the following:</source>
          <target state="translated">정책 수준에서 다음과 같이 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>A set of code groups organized into a single rooted tree.</source>
          <target state="translated">단일 루트 트리로 구성 되는 코드 그룹의 집합입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>A set of named permission sets that are referenced by the code groups to specify permissions to be granted to code belonging to the code group.</source>
          <target state="translated">집합 코드 그룹에 속한 코드에 부여할 사용 권한을 지정 하기 위해 코드 그룹에서 참조 되는 명명 된 권한 집합입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>A list of fully trusted assemblies.</source>
          <target state="translated">완전 신뢰 어셈블리의 목록입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>See the Notes to Inheritors for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class for critical implementation information.</source>
          <target state="translated">상속자에 대 한 참조는 <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> 중요 한 구현 정보에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>This method uses code access security (CAS) policy, which is obsolete in the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>에서 더 이상 사용되지 않는 CAS(코드 액세스 보안) 정책을 사용합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>legacyCasPolicy<ph id="ph2">&amp;gt;</ph> element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.</source>
          <target state="translated">이전 버전의 .NET Framework와의 호환성에 대한 CAS 정책을 사용하도록 설정하려면 <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>legacyCasPolicy<ph id="ph2">&amp;gt;</ph> 요소<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>를 사용합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Security.HostSecurityManager.Flags">
          <source>Gets the flag representing the security policy components of concern to the host.</source>
          <target state="translated">호스트와 관련된 보안 정책 구성 요소를 나타내는 플래그를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>One of the enumeration values that specifies security policy components.</source>
          <target state="translated">보안 정책 구성 요소를 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Security.HostSecurityManagerOptions.AllFlags" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Security.HostSecurityManagerOptions.AllFlags" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>This property can be overridden in a derived class.</source>
          <target state="translated">이 속성은 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>The base implementation always returns <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.AllFlags&gt;</ph>.</source>
          <target state="translated">기본 구현은 항상 <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.AllFlags&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>The derived host can change the value of this property when only a subset of the <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions&gt;</ph> is of interest.</source>
          <target state="translated">파생 된 호스트의 하위 집합만이 속성의 값을 변경할 수는 <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions&gt;</ph> 의 경우 중요 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>The possible subsets include none, the refused set, the policy level, and assembly evidence.</source>
          <target state="translated">이러한 하위 집합 없음, 거부 된 집합, 정책 수준 및 포함 어셈블리 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> property for a custom host security manager.</source>
          <target state="translated">재정의 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> 사용자 지정 호스트 보안 관리자에 대 한 속성.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class.</source>
          <target state="translated">이 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The evidence type.</source>
          <target state="translated">증명 정보 형식입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>Requests a specific evidence type for the application domain.</source>
          <target state="translated">응용 프로그램 도메인에 대한 특정 증명 정보 형식을 요청합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The requested application domain evidence.</source>
          <target state="translated">요청된 응용 프로그램 도메인 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본 구현은 반환 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The common language runtime calls this method when evidence of the specified type is needed for the current <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">공용 언어 런타임에서 지정 된 형식의 증거 현재에 필요할 때이 메서드를 호출 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The returned value is used as host-supplied evidence, and is stored in the <ph id="ph1">&lt;xref:System.AppDomain.Evidence%2A&gt;</ph> collection of the <ph id="ph2">&lt;xref:System.AppDomain.CurrentDomain%2A&gt;</ph> property.</source>
          <target state="translated">반환 된 값은 호스트에서 제공한 증거로 사용 되며에 저장 됩니다는 <ph id="ph1">&lt;xref:System.AppDomain.Evidence%2A&gt;</ph> 의 컬렉션은 <ph id="ph2">&lt;xref:System.AppDomain.CurrentDomain%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType&gt;</ph> method to obtain the generated evidence from the collection.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType&gt;</ph> 컬렉션에서 생성 된 증명 정보를 얻는 메서드를 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>To get a callback to this method, hosts must specify the <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> property.</source>
          <target state="translated">이 메서드는 콜백을 가져오려면 호스트 지정 해야 합니다는 <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence&gt;</ph> 플래그는 <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>This method of generating evidence allows hosts to delay evidence generation for an <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> until the evidence is needed.</source>
          <target state="translated">증명 정보를 생성 합니다.이 방법은 통해 호스트에 대 한 증거 생성을 지연 하는 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> 증거 필요할 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>In the .NET Framework version 3.5 and earlier versions, it was necessary to provide <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> evidence at load time by overriding the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> method.</source>
          <target state="translated">.NET Framework 버전 3.5 및 이전 버전에서 제공 하는 데 필요한 했습니다 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> 재정의 하 여 로드할 때 증거는 <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>We recommend that you use <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> to provide evidence instead of overriding <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph>.</source>
          <target state="translated">사용 하는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> 재정의 하는 대신 증거를 제공 하려면 <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> method is called back into only for types of evidence that the host has specified in the override of the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> 메서드는 다시로 재정의에 지정 된 증명 정보 형식에 대해서만 <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>A return value of <ph id="ph1">`null`</ph> indicates that the host cannot generate evidence of this specific type.</source>
          <target state="translated">반환 값이 <ph id="ph1">`null`</ph> 호스트가 특정 유형의 증명 정보를 생성할 수 없음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> method for a custom host security manager.</source>
          <target state="translated">재정의 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> 메서드는 사용자 지정 호스트 보안 관리자에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class.</source>
          <target state="translated">이 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The evidence type.</source>
          <target state="translated">증명 정보 형식입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The target assembly.</source>
          <target state="translated">대상 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>Requests a specific evidence type for the assembly.</source>
          <target state="translated">어셈블리에 대한 특정 증명 정보 형식을 요청합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The requested assembly evidence.</source>
          <target state="translated">요청된 어셈블리 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본 구현은 반환 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The common language runtime calls this method when evidence of the specified type is needed for the current assembly.</source>
          <target state="translated">공용 언어 런타임에서 지정 된 형식의 증거는 현재 어셈블리에 필요할 때이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The returned value is used as host-supplied evidence, and is stored in the <ph id="ph1">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph> property.</source>
          <target state="translated">반환 된 값은 호스트에서 제공한 증거로 사용 되며에 저장 되는 <ph id="ph1">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType&gt;</ph> method to obtain the generated evidence from the <ph id="ph2">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph> property.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType&gt;</ph> 에서 생성 된 증명 정보를 얻는 메서드를는 <ph id="ph2">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>To get a callback to this method, hosts must specify the <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> property.</source>
          <target state="translated">이 메서드는 콜백을 가져오려면 호스트 지정 해야 합니다는 <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence&gt;</ph> 플래그는 <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>This method of generating evidence allows hosts to delay evidence generation for an <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> until the evidence is needed.</source>
          <target state="translated">증명 정보를 생성 합니다.이 방법은 통해 호스트에 대 한 증거 생성을 지연 하는 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> 증거 필요할 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>In the .NET Framework 3.5 and earlier versions, it was necessary to provide <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> evidence at load time by overriding the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> method.</source>
          <target state="translated">.NET Framework 3.5 및 이전 버전에서 제공 하는 데 필요한 했습니다 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> 재정의 하 여 로드할 때 증거는 <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>We recommend that you use <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> to provide evidence instead of overriding <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A&gt;</ph>.</source>
          <target state="translated">사용 하는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> 재정의 하는 대신 증거를 제공 하려면 <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> method is called back into only for types of evidence that the host has specified in the override of the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> 메서드는 다시로 재정의에 지정 된 증명 정보 형식에 대해서만 <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>A return value of <ph id="ph1">`null`</ph> indicates that the host cannot generate evidence of this specific type.</source>
          <target state="translated">반환 값이 <ph id="ph1">`null`</ph> 호스트가 특정 유형의 증명 정보를 생성할 수 없음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>Determines which evidence types the host can supply for the application domain, if requested.</source>
          <target state="translated">요청 시 호스트가 응용 프로그램 도메인에 제공할 수 있는 증명 정보 형식을 결정합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>An array of evidence types.</source>
          <target state="translated">증명 정보 형식으로 이루어진 배열입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본 구현은 반환 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>The types returned by this method determine whether the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> method is called back into.</source>
          <target state="translated">이 메서드에서 반환 된 형식이 결정 여부는 <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> 메서드를 다시 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to.</source>
          <target state="translated">호스트는이 증거 유형을 생성할 수 있어야 하지만 할 수 있습니다이 목록에 있는 형식의 존재를 의미 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>For that reason, it is best to over-specify rather than under-specify the types in this list.</source>
          <target state="translated">이 이유로, 아래에서-지정이 목록의 유형 보다는 과도 하 게 지정 하 가장 좋습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>The target assembly.</source>
          <target state="translated">대상 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>Determines which evidence types the host can supply for the assembly, if requested.</source>
          <target state="translated">요청 시 호스트가 어셈블리에 제공할 수 있는 증명 정보 형식을 결정합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>An array of evidence types.</source>
          <target state="translated">증명 정보 형식으로 이루어진 배열입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본 구현은 반환 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>The types returned by this method determine whether the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> method is called back into.</source>
          <target state="translated">이 메서드에서 반환 된 형식이 결정 여부는 <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> 메서드를 다시 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to.</source>
          <target state="translated">호스트는이 증거 유형을 생성할 수 있어야 하지만 할 수 있습니다이 목록에 있는 형식의 존재를 의미 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>For that reason, it is best to over-specify rather than under-specify the types in this list.</source>
          <target state="translated">이 이유로, 아래에서-지정이 목록의 유형 보다는 과도 하 게 지정 하 가장 좋습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>Additional evidence to add to the <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph> evidence.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph> 증명 정보에 추가할 추가 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>Provides the application domain evidence for an assembly being loaded.</source>
          <target state="translated">로드되는 어셈블리에 대한 응용 프로그램 도메인 증명 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>The evidence to be used for the <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>에 사용할 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>This method can be overridden in a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>This method is called whenever an <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> object is created.</source>
          <target state="translated">이 메서드는 호출 될 때마다는 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>The <ph id="ph1">`inputEvidence`</ph> parameter is the computed evidence from the common language runtime.</source>
          <target state="translated"><ph id="ph1">`inputEvidence`</ph> 매개 변수는 공용 언어 런타임에서 계산된 된 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>The host implementation can choose to extend or reduce the evidence.</source>
          <target state="translated">호스트 구현 확장 또는 축소 증거를 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>The return value is the evidence to be used for the application domain.</source>
          <target state="translated">반환 값은 응용 프로그램 도메인에 사용 되는 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>The base implementation always returns the evidence object passed in as the <ph id="ph1">`inputEvidence`</ph> parameter.</source>
          <target state="translated">로 전달 된 증명 정보 개체를 반환 하는 기본 구현에서는 항상는 <ph id="ph1">`inputEvidence`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>See the Notes to Inheritors for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class for critical implementation information.</source>
          <target state="translated">상속자에 대 한 참조는 <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> 중요 한 구현 정보에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The loaded assembly.</source>
          <target state="translated">로드된 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>Additional evidence to add to the assembly evidence.</source>
          <target state="translated">어셈블리 증명 정보에 추가할 추가 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>Provides the assembly evidence for an assembly being loaded.</source>
          <target state="translated">로드되는 어셈블리에 대한 어셈블리 증명 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The evidence to be used for the assembly.</source>
          <target state="translated">어셈블리에 사용할 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>This method can be overridden in a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>This method is called whenever an assembly is loaded, either implicitly or explicitly.</source>
          <target state="translated">이 메서드는 암시적 또는 명시적으로 어셈블리가 로드 될 때마다 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The passed in parameters are the assembly being loaded, and the computed evidence from the common language runtime.</source>
          <target state="translated">전달 된 매개 변수는 로드 되는 어셈블리와 공용 언어 런타임에서 계산된 된 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The host implementation can choose to extend or reduce the evidence.</source>
          <target state="translated">호스트 구현 확장 또는 축소 증거를 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The return value is the evidence to be used for the assembly.</source>
          <target state="translated">반환 값은 어셈블리에 사용할 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The base implementation always returns the evidence object passed in as the <ph id="ph1">`inputEvidence`</ph> parameter.</source>
          <target state="translated">로 전달 된 증명 정보 개체를 반환 하는 기본 구현에서는 항상는 <ph id="ph1">`inputEvidence`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>See the Notes to Inheritors for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class for critical implementation information.</source>
          <target state="translated">상속자에 대 한 참조는 <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> 중요 한 구현 정보에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A&gt;</ph> method for a custom host security manager.</source>
          <target state="translated">재정의 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A&gt;</ph> 메서드는 사용자 지정 호스트 보안 관리자에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class.</source>
          <target state="translated">이 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source>The evidence set used to evaluate policy.</source>
          <target state="translated">정책을 평가하는 데 사용되는 증명 정보 집합입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source>Determines what permissions to grant to code based on the specified evidence.</source>
          <target state="translated">지정한 증명 정보에 따라 코드에 부여할 권한을 결정합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source>The permission set that can be granted by the security system.</source>
          <target state="translated">보안 시스템에서 부여할 수 있는 권한 집합입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source>This method invokes the security policy engine, providing it with the specified evidence.</source>
          <target state="translated">이 메서드는 지정 된 증명 정보를 제공 하는 보안 정책 엔진을 호출 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source>The result is determined by the security policy.</source>
          <target state="translated">결과 보안 정책에 의해 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="evidence" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="evidence" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>