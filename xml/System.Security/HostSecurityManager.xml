<Type Name="HostSecurityManager" FullName="System.Security.HostSecurityManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ff48fa5df967caba5aed9ae2ba2fef1a119992f4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30500647" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HostSecurityManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit HostSecurityManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.HostSecurityManager" />
  <TypeSignature Language="VB.NET" Value="Public Class HostSecurityManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostSecurityManager" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>응용 프로그램 도메인에 대한 보안 동작을 제어하고 사용자 지정할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 만들 새 <xref:System.AppDomain>, 공용 언어 런타임 쿼리는 <xref:System.AppDomainManager> 있는지는 <xref:System.Security.HostSecurityManager>에 대 한 보안 결정에 참여 하는 <xref:System.AppDomain>합니다.  호스트 공급자에서 상속 되는 호스트 보안 관리자를 구현 해야는 <xref:System.Security.HostSecurityManager> 클래스입니다.  
  
   
  
## Examples  
 다음 예제에서는 매우 간단한 구현을 <xref:System.Security.HostSecurityManager>합니다.  
  
 [!code-csharp[System.Security.HostSecurityManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.HostSecurityManager/CS/customsecuritymanager.cs#1)]
 [!code-vb[System.Security.HostSecurityManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.HostSecurityManager/VB/customsecuritymanager.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 클래스는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">상속자에 대 한 완전 신뢰 합니다. 부분적으로 신뢰할 수 있는 코드에서이 클래스는 상속 될 수 없습니다.</permission>
    <block subset="none" type="overrides">
      <para>일부 멤버는 <see cref="T:System.Security.HostSecurityManager" /> 암시적 또는 명시적으로 어셈블리가 로드 될 때마다 호출 됩니다. <see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" /> 및 <see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" /> 메서드 해야 로드할 모든 어셈블리의 멤버에 그렇게 하면는 <see cref="T:System.Security.HostSecurityManager" /> 재귀적으로 호출 되 고 있습니다. 순환 참조를 방지 로드할된 어셈블리에, 암시적 또는 명시적으로에서 파생 되는 클래스의 생성자에서 발생할 수 있는 클래스의 새 인스턴스를 만들고 해야 <see cref="T:System.Security.HostSecurityManager" />합니다.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostSecurityManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostSecurityManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Security.HostSecurityManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">상속자에 대 한 완전 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 상속할 수 없습니다.</permission>
        <block subset="none" type="overrides">
          <para>이 생성자에 어셈블리를 명시적으로 또는 암시적으로 로드할 수 있는 클래스의 인스턴스를 만듭니다.  에 대 한 get 접근자는 <see cref="P:System.Security.HostSecurityManager.DomainPolicy" /> 속성 및 <see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" /> 및 <see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" /> 어셈블리를 로드 및 어셈블리의 계속 해 서 로드 순환 참조가 발생 합니다 때마다 호출 되어 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DetermineApplicationTrust">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.ApplicationTrust DetermineApplicationTrust (System.Security.Policy.Evidence applicationEvidence, System.Security.Policy.Evidence activatorEvidence, System.Security.Policy.TrustManagerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Policy.ApplicationTrust DetermineApplicationTrust(class System.Security.Policy.Evidence applicationEvidence, class System.Security.Policy.Evidence activatorEvidence, class System.Security.Policy.TrustManagerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DetermineApplicationTrust (applicationEvidence As Evidence, activatorEvidence As Evidence, context As TrustManagerContext) As ApplicationTrust" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Policy::ApplicationTrust ^ DetermineApplicationTrust(System::Security::Policy::Evidence ^ applicationEvidence, System::Security::Policy::Evidence ^ activatorEvidence, System::Security::Policy::TrustManagerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.ApplicationTrust</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationEvidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="activatorEvidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="context" Type="System.Security.Policy.TrustManagerContext" />
      </Parameters>
      <Docs>
        <param name="applicationEvidence">활성화할 응용 프로그램의 증명 정보입니다.</param>
        <param name="activatorEvidence">선택적 매개 변수로서 활성 응용 프로그램 도메인의 증명 정보입니다.</param>
        <param name="context">신뢰 컨텍스트입니다.</param>
        <summary>응용 프로그램을 실행해야 하는지 여부를 결정합니다.</summary>
        <returns>응용 프로그램에 대한 신뢰 정보가 들어 있는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 파생된 클래스에서 재정의할 수 있습니다. 기본 구현은 응용 프로그램을 실행 해야 하는 경우를 확인 하려면 응용 프로그램 보안 관리자를 호출 합니다.  
  
 기본 구현은 활성기 증거를 사용 하지 않습니다. 하지만 재정의 된 구현 응용 프로그램을 활성화 하는 응용 프로그램 도메인에 대 한 보안 증명 정보를 확인 하려면 활성기 증거를 사용할 수 있습니다.  
  
   
  
## Examples  
 재정의 하는 방법을 보여 주는 다음 예제는 <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A> 메서드는 사용자 지정 호스트 보안 관리자에 대 한 합니다. 이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.HostSecurityManager> 클래스입니다.  
  
 [!code-csharp[System.Security.HostSecurityManager#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.HostSecurityManager/CS/customsecuritymanager.cs#3)]
 [!code-vb[System.Security.HostSecurityManager#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.HostSecurityManager/VB/customsecuritymanager.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationEvidence" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException">응용 프로그램 증명 정보에서 찾을 수 없는 <see cref="T:System.Runtime.Hosting.ActivationArguments" /> 개체인 경우  
  
 또는  
  
 활성화 인수의 <see cref="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" /> 속성이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Security.Policy.ApplicationTrust" /> 권한 부여 집합에는 <see cref="T:System.ActivationContext" />에서 지정한 최소 요청 집합이 들어 있지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="DomainPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.PolicyLevel DomainPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.PolicyLevel DomainPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Security.HostSecurityManager.DomainPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DomainPolicy As PolicyLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Policy::PolicyLevel ^ DomainPolicy { System::Security::Policy::PolicyLevel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 현재 응용 프로그램 도메인에 대한 보안 정책을 가져옵니다.</summary>
        <value>현재 응용 프로그램 도메인에 대한 보안 정책입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 파생된 클래스에서 재정의할 수 있습니다. 기본 구현은 항상 `null`를 반환합니다.  
  
 이 속성에 호출 되 <xref:System.AppDomain> 만든 시간입니다. 호스트에 대 한 현재 정책을 지정 하는 데 허용 <xref:System.AppDomain>합니다.  정책 수준에서 다음과 같이 구성 됩니다.  
  
-   단일 루트 트리로 구성 되는 코드 그룹의 집합입니다.  
  
-   집합 코드 그룹에 속한 코드에 부여할 사용 권한을 지정 하기 위해 코드 그룹에서 참조 되는 명명 된 권한 집합입니다.  
  
-   완전 신뢰 어셈블리의 목록입니다.  
  
> [!IMPORTANT]
>  상속자에 대 한 참조는 <xref:System.Security.HostSecurityManager> 중요 한 구현 정보에 대 한 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">이 메서드는 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]에서 더 이상 사용되지 않는 CAS(코드 액세스 보안) 정책을 사용합니다. 이전 버전의 .NET Framework와의 호환성에 대한 CAS 정책을 사용하도록 설정하려면 [&lt;legacyCasPolicy&gt; 요소](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)를 사용합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public virtual System.Security.HostSecurityManagerOptions Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.HostSecurityManagerOptions Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.HostSecurityManager.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Flags As HostSecurityManagerOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::HostSecurityManagerOptions Flags { System::Security::HostSecurityManagerOptions get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.HostSecurityManagerOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>호스트와 관련된 보안 정책 구성 요소를 나타내는 플래그를 가져옵니다.</summary>
        <value>보안 정책 구성 요소를 지정하는 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.Security.HostSecurityManagerOptions.AllFlags" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 파생된 클래스에서 재정의할 수 있습니다. 기본 구현은 항상 <xref:System.Security.HostSecurityManagerOptions.AllFlags>를 반환합니다.  
  
 파생 된 호스트의 하위 집합만이 속성의 값을 변경할 수는 <xref:System.Security.HostSecurityManagerOptions> 의 경우 중요 합니다.  이러한 하위 집합 없음, 거부 된 집합, 정책 수준 및 포함 어셈블리 증명 정보입니다.  
  
   
  
## Examples  
 재정의 하는 방법을 보여 주는 다음 예제는 <xref:System.Security.HostSecurityManager.Flags%2A> 사용자 지정 호스트 보안 관리자에 대 한 속성. 이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.HostSecurityManager> 클래스입니다.  
  
 [!code-csharp[System.Security.HostSecurityManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.HostSecurityManager/CS/customsecuritymanager.cs#2)]
 [!code-vb[System.Security.HostSecurityManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.HostSecurityManager/VB/customsecuritymanager.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateAppDomainEvidence">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.EvidenceBase GenerateAppDomainEvidence (Type evidenceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Policy.EvidenceBase GenerateAppDomainEvidence(class System.Type evidenceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateAppDomainEvidence (evidenceType As Type) As EvidenceBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Policy::EvidenceBase ^ GenerateAppDomainEvidence(Type ^ evidenceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.EvidenceBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidenceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="evidenceType">증명 정보 형식입니다.</param>
        <summary>응용 프로그램 도메인에 대한 특정 증명 정보 형식을 요청합니다.</summary>
        <returns>요청된 응용 프로그램 도메인 증명 정보입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 파생된 클래스에서 재정의할 수 있습니다. 기본 구현은 반환 `null`합니다.  
  
 공용 언어 런타임에서 지정 된 형식의 증거 현재에 필요할 때이 메서드를 호출 <xref:System.AppDomain>합니다. 반환 된 값은 호스트에서 제공한 증거로 사용 되며에 저장 됩니다는 <xref:System.AppDomain.Evidence%2A> 의 컬렉션은 <xref:System.AppDomain.CurrentDomain%2A> 속성입니다. 사용할 수는 <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType> 컬렉션에서 생성 된 증명 정보를 얻는 메서드를 합니다.  
  
 이 메서드는 콜백을 가져오려면 호스트 지정 해야 합니다는 <xref:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence> 플래그는 <xref:System.Security.HostSecurityManager.Flags%2A> 속성입니다.  
  
 증명 정보를 생성 합니다.이 방법은 통해 호스트에 대 한 증거 생성을 지연 하는 <xref:System.AppDomain> 증거 필요할 때까지 합니다. .NET Framework 버전 3.5 및 이전 버전에서 제공 하는 데 필요한 했습니다 <xref:System.AppDomain> 재정의 하 여 로드할 때 증거는 <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> 메서드. 사용 하는 것이 좋습니다 <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> 재정의 하는 대신 증거를 제공 하려면 <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>합니다.  
  
 <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> 메서드는 다시로 재정의에 지정 된 증명 정보 형식에 대해서만 <xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A> 메서드.  
  
 반환 값이 `null` 호스트가 특정 유형의 증명 정보를 생성할 수 없음을 나타냅니다.  
  
   
  
## Examples  
 재정의 하는 방법을 보여 주는 다음 예제는 <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> 메서드는 사용자 지정 호스트 보안 관리자에 대 한 합니다. 이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.HostSecurityManager> 클래스입니다.  
  
 [!code-csharp[System.Security.HostSecurityManager#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.HostSecurityManager/CS/customsecuritymanager.cs#6)]
 [!code-vb[System.Security.HostSecurityManager#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.HostSecurityManager/VB/customsecuritymanager.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateAssemblyEvidence">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.EvidenceBase GenerateAssemblyEvidence (Type evidenceType, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Policy.EvidenceBase GenerateAssemblyEvidence(class System.Type evidenceType, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Policy::EvidenceBase ^ GenerateAssemblyEvidence(Type ^ evidenceType, System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.EvidenceBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidenceType" Type="System.Type" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="evidenceType">증명 정보 형식입니다.</param>
        <param name="assembly">대상 어셈블리입니다.</param>
        <summary>어셈블리에 대한 특정 증명 정보 형식을 요청합니다.</summary>
        <returns>요청된 어셈블리 증명 정보입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 파생된 클래스에서 재정의할 수 있습니다. 기본 구현은 반환 `null`합니다.  
  
 공용 언어 런타임에서 지정 된 형식의 증거는 현재 어셈블리에 필요할 때이 메서드를 호출 합니다. 반환 된 값은 호스트에서 제공한 증거로 사용 되며에 저장 되는 <xref:System.Reflection.Assembly.Evidence%2A> 속성입니다. 사용할 수는 <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType> 에서 생성 된 증명 정보를 얻는 메서드를는 <xref:System.Reflection.Assembly.Evidence%2A> 속성입니다.  
  
 이 메서드는 콜백을 가져오려면 호스트 지정 해야 합니다는 <xref:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence> 플래그는 <xref:System.Security.HostSecurityManager.Flags%2A> 속성입니다.  
  
 증명 정보를 생성 합니다.이 방법은 통해 호스트에 대 한 증거 생성을 지연 하는 <xref:System.AppDomain> 증거 필요할 때까지 합니다. .NET Framework 3.5 및 이전 버전에서 제공 하는 데 필요한 했습니다 <xref:System.AppDomain> 재정의 하 여 로드할 때 증거는 <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> 메서드. 사용 하는 것이 좋습니다 <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> 재정의 하는 대신 증거를 제공 하려면 <xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>합니다.  
  
 <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> 메서드는 다시로 재정의에 지정 된 증명 정보 형식에 대해서만 <xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A> 메서드.  
  
 반환 값이 `null` 호스트가 특정 유형의 증명 정보를 생성할 수 없음을 나타냅니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostSuppliedAppDomainEvidenceTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetHostSuppliedAppDomainEvidenceTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetHostSuppliedAppDomainEvidenceTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHostSuppliedAppDomainEvidenceTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetHostSuppliedAppDomainEvidenceTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>요청 시 호스트가 응용 프로그램 도메인에 제공할 수 있는 증명 정보 형식을 결정합니다.</summary>
        <returns>증명 정보 형식으로 이루어진 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 파생된 클래스에서 재정의할 수 있습니다. 기본 구현은 반환 `null`합니다.  
  
 이 메서드에서 반환 된 형식이 결정 여부는 <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> 메서드를 다시 호출 됩니다. 호스트는이 증거 유형을 생성할 수 있어야 하지만 할 수 있습니다이 목록에 있는 형식의 존재를 의미 하지 않습니다. 이 이유로, 아래에서-지정이 목록의 유형 보다는 과도 하 게 지정 하 가장 좋습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostSuppliedAssemblyEvidenceTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetHostSuppliedAssemblyEvidenceTypes (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetHostSuppliedAssemblyEvidenceTypes(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetHostSuppliedAssemblyEvidenceTypes(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">대상 어셈블리입니다.</param>
        <summary>요청 시 호스트가 어셈블리에 제공할 수 있는 증명 정보 형식을 결정합니다.</summary>
        <returns>증명 정보 형식으로 이루어진 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 파생된 클래스에서 재정의할 수 있습니다. 기본 구현은 반환 `null`합니다.  
  
 이 메서드에서 반환 된 형식이 결정 여부는 <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> 메서드를 다시 호출 됩니다. 호스트는이 증거 유형을 생성할 수 있어야 하지만 할 수 있습니다이 목록에 있는 형식의 존재를 의미 하지 않습니다. 이 이유로, 아래에서-지정이 목록의 유형 보다는 과도 하 게 지정 하 가장 좋습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideAppDomainEvidence">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.Evidence ProvideAppDomainEvidence (System.Security.Policy.Evidence inputEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Policy.Evidence ProvideAppDomainEvidence(class System.Security.Policy.Evidence inputEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProvideAppDomainEvidence (inputEvidence As Evidence) As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Policy::Evidence ^ ProvideAppDomainEvidence(System::Security::Policy::Evidence ^ inputEvidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="inputEvidence">
          <see cref="T:System.AppDomain" /> 증명 정보에 추가할 추가 증명 정보입니다.</param>
        <summary>로드되는 어셈블리에 대한 응용 프로그램 도메인 증명 정보를 제공합니다.</summary>
        <returns>
          <see cref="T:System.AppDomain" />에 사용할 증명 정보입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 파생된 클래스에서 재정의할 수 있습니다.  
  
 이 메서드는 호출 될 때마다는 <xref:System.AppDomain> 개체가 만들어집니다. `inputEvidence` 매개 변수는 공용 언어 런타임에서 계산된 된 증명 정보입니다. 호스트 구현 확장 또는 축소 증거를 선택할 수 있습니다. 반환 값은 응용 프로그램 도메인에 사용 되는 증명 정보입니다.  로 전달 된 증명 정보 개체를 반환 하는 기본 구현에서는 항상는 `inputEvidence` 매개 변수입니다.  
  
> [!IMPORTANT]
>  상속자에 대 한 참조는 <xref:System.Security.HostSecurityManager> 중요 한 구현 정보에 대 한 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideAssemblyEvidence">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.Evidence ProvideAssemblyEvidence (System.Reflection.Assembly loadedAssembly, System.Security.Policy.Evidence inputEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Policy.Evidence ProvideAssemblyEvidence(class System.Reflection.Assembly loadedAssembly, class System.Security.Policy.Evidence inputEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProvideAssemblyEvidence (loadedAssembly As Assembly, inputEvidence As Evidence) As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Policy::Evidence ^ ProvideAssemblyEvidence(System::Reflection::Assembly ^ loadedAssembly, System::Security::Policy::Evidence ^ inputEvidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loadedAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="inputEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="loadedAssembly">로드된 어셈블리입니다.</param>
        <param name="inputEvidence">어셈블리 증명 정보에 추가할 추가 증명 정보입니다.</param>
        <summary>로드되는 어셈블리에 대한 어셈블리 증명 정보를 제공합니다.</summary>
        <returns>어셈블리에 사용할 증명 정보입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 파생된 클래스에서 재정의할 수 있습니다.  
  
 이 메서드는 암시적 또는 명시적으로 어셈블리가 로드 될 때마다 호출 됩니다. 전달 된 매개 변수는 로드 되는 어셈블리와 공용 언어 런타임에서 계산된 된 증명 정보입니다. 호스트 구현 확장 또는 축소 증거를 선택할 수 있습니다. 반환 값은 어셈블리에 사용할 증명 정보입니다.  로 전달 된 증명 정보 개체를 반환 하는 기본 구현에서는 항상는 `inputEvidence` 매개 변수입니다.  
  
> [!IMPORTANT]
>  상속자에 대 한 참조는 <xref:System.Security.HostSecurityManager> 중요 한 구현 정보에 대 한 클래스입니다.  
  
   
  
## Examples  
 재정의 하는 방법을 보여 주는 다음 예제는 <xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A> 메서드는 사용자 지정 호스트 보안 관리자에 대 한 합니다. 이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.HostSecurityManager> 클래스입니다.  
  
 [!code-csharp[System.Security.HostSecurityManager#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.HostSecurityManager/CS/customsecuritymanager.cs#5)]
 [!code-vb[System.Security.HostSecurityManager#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.HostSecurityManager/VB/customsecuritymanager.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvePolicy">
      <MemberSignature Language="C#" Value="public virtual System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.PermissionSet ResolvePolicy(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::PermissionSet ^ ResolvePolicy(System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">정책을 평가하는 데 사용되는 증명 정보 집합입니다.</param>
        <summary>지정한 증명 정보에 따라 코드에 부여할 권한을 결정합니다.</summary>
        <returns>보안 시스템에서 부여할 수 있는 권한 집합입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 지정 된 증명 정보를 제공 하는 보안 정책 엔진을 호출 합니다. 결과 보안 정책에 의해 결정 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="evidence" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>