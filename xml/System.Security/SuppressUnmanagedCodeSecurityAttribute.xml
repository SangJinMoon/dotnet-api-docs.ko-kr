<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SuppressUnmanagedCodeSecurityAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56be1e0dbf1cc6bf9f376bd89fb4676055a18a294.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6be1e0dbf1cc6bf9f376bd89fb4676055a18a294</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>Allows managed code to call into unmanaged code without a stack walk.</source>
          <target state="translated">스택 워크 없이 관리되지 않는 코드에 관리되는 코드를 호출할 수 있도록 허용합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>Use this attribute with extreme care.</source>
          <target state="translated">이 특성을 사용 하 여 키를 복원할 때는 주의 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>Incorrect use can create security weaknesses.</source>
          <target state="translated">잘못 사용 했습니다. 보안 허점이 생길 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>This attribute can be applied to methods that want to call into native code without incurring the performance loss of a run-time security check when doing so.</source>
          <target state="translated">이 특성은 이렇게 할 때 런타임 보안 검사의 성능 저하를 초래 하지 않고 네이티브 코드를 호출 하려는 메서드에 적용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>The stack walk performed when calling unmanaged code is omitted at run time, resulting in substantial performance savings.</source>
          <target state="translated">비관리 코드를 호출할 때 수행 하는 스택 워크를 생략 하면 런타임 시 성능이 대폭 절약 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>Using this attribute in a class applies it to all contained methods.</source>
          <target state="translated">클래스에서이 특성을 사용 하 여 포함 된 모든 메서드에 적용 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>Generally, whenever managed code calls into unmanaged code (by PInvoke or COM interop into native code), there is a demand for the <ph id="ph1">`UnmanagedCode`</ph> permission to ensure all callers have the necessary permission to allow this.</source>
          <target state="translated">일반적으로 관리 코드가 비관리 코드 (PInvoke 또는 COM interop를 네이티브 코드로) 하 여를 호출할 때마다는 대 한 요구는 <ph id="ph1">`UnmanagedCode`</ph> 모든 호출자에 게 사용 권한을 허용 하는 데 필요한 권한이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>By applying this explicit attribute, developers can suppress the demand at run time.</source>
          <target state="translated">명시적이 특성을 적용 하 여 개발자가 런타임 시 요청을 표시 하지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>The developer must take responsibility for assuring that the transition into unmanaged code is sufficiently protected by other means.</source>
          <target state="translated">개발자는 비관리 코드로 전환 충분히 다른 방법으로 보호 되어 있는지 확인 하기 위해 책임을 져야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>The demand for the <ph id="ph1">`UnmanagedCode`</ph> permission will still occur at link time.</source>
          <target state="translated">에 대 한 요구는 <ph id="ph1">`UnmanagedCode`</ph> 권한 링크 타임에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>For example, if function A calls function B and function B is marked with <ph id="ph1">&lt;xref:System.Security.SuppressUnmanagedCodeSecurityAttribute&gt;</ph>, function A will be checked for unmanaged code permission during just-in-time compilation, but not subsequently during run time.</source>
          <target state="translated">예를 들어 함수 B가 있고 함수 B 함수 호출 하는 경우로 <ph id="ph1">&lt;xref:System.Security.SuppressUnmanagedCodeSecurityAttribute&gt;</ph>, A를 확인 하는 함수에 비관리 코드 권한 적시에 컴파일하는 동안 하지만 런타임 시 이후에 없습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>This attribute is only effective when applied to PInvoke methods (or classes that contain PInvoke methods) or the definition of an interface through which interop calls will be made.</source>
          <target state="translated">이 특성은 효력이 PInvoke 메서드 (또는 PInvoke 메서드를 포함 하는 클래스)에 적용 될 때 또는 있는 interop 호출 걸 수 인터페이스의 정의 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>It will be ignored in all other contexts.</source>
          <target state="translated">다른 모든 컨텍스트에서 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>This attribute is useful for implementing a class that provides access to system resources through unmanaged code.</source>
          <target state="translated">이 특성은 관리 되지 않는 코드를 통해 시스템 리소스에 대 한 액세스를 제공 하는 클래스를 구현 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>Code that does not have permission to access unmanaged code can call a class with this attribute to access unmanaged code.</source>
          <target state="translated">관리 되지 않는 코드에 액세스할 수 있는 권한이 없는 코드는 비관리 코드에 액세스 하려면이 특성이 있는 클래스를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>This is only safe if the writer of the class with this attribute has programmed the class to be secure.</source>
          <target state="translated">이이 특성을 사용 하 여 클래스의 작성자가 보안 되도록 클래스를 프로그래밍 하는 경우 안전 하 게 보호만.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>If not, this attribute is dangerous and can allow the code that uses it to be misused.</source>
          <target state="translated">그렇지 않은 경우이 특성은 위험 하며 악용할 수를 사용 하는 코드를 허용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SuppressUnmanagedCodeSecurityAttribute">
          <source>This is not a declarative security attribute, but a regular attribute (it derives from <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, not <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityAttribute&gt;</ph>).</source>
          <target state="translated">이것은 아니며 선언적 보안 특성은 일반 특성 (에서 파생 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>이 아니라 <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityAttribute&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SuppressUnmanagedCodeSecurityAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.SuppressUnmanagedCodeSecurityAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor">
          <source>The default constructor initializes any fields to their default values.</source>
          <target state="translated">기본 생성자는 모든 필드를 기본값으로 초기화합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>