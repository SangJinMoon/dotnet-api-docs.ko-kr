<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ISecurityEncodable.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55cfb5999b32a91be9f92a2ac1390b32d73f6a804.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5cfb5999b32a91be9f92a2ac1390b32d73f6a804</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.ISecurityEncodable">
          <source>Defines the methods that convert permission object state to and from XML element representation.</source>
          <target state="translated">권한 개체와 XLM 요소 간의 표현을 변환하는 메서드를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.ISecurityEncodable">
          <source>The XML representation of permissions is used to describe instances of permissions for code requests, declarative security permission sets, and security policy configuration.</source>
          <target state="translated">코드 요청, 선언적 보안 권한 집합 및 보안 정책 구성에 대 한 권한 인스턴스를 설명 하는 권한의 XML 표현 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.ISecurityEncodable">
          <source>You must implement this interface for any new permission object.</source>
          <target state="translated">모든 새 사용 권한 개체에 대 한이 인터페이스를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.ISecurityEncodable">
          <source>This example shows how to define a permission class for use with code access security.</source>
          <target state="translated">이 예제에서는 코드 액세스 보안으로 사용 하기 위해 권한 클래스를 정의 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.ISecurityEncodable">
          <source>All of the necessary permission interfaces are implemented.</source>
          <target state="translated">필요한 권한 인터페이스를 모두 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)">
          <source>The XML encoding to use to reconstruct the security object.</source>
          <target state="translated">보안 개체를 다시 생성하는 데 사용할 XML 인코딩입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)">
          <source>Reconstructs a security object with a specified state from an XML encoding.</source>
          <target state="translated">XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)">
          <source>Custom code that extends security objects needs to implement the <ph id="ph1">&lt;xref:System.Security.ISecurityEncodable.ToXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.ISecurityEncodable.FromXml%2A&gt;</ph> methods to make the objects security-encodable.</source>
          <target state="translated">보안 개체를 확장 하는 사용자 지정 코드를 구현 해야는 <ph id="ph1">&lt;xref:System.Security.ISecurityEncodable.ToXml%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Security.ISecurityEncodable.FromXml%2A&gt;</ph> 보안 인코딩할 수 있는 개체를 만드는 메서드.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)">
          <source>The following code example demonstrates implementing the <ph id="ph1">&lt;xref:System.Security.ISecurityEncodable.FromXml%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 구현 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Security.ISecurityEncodable.FromXml%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.ISecurityEncodable&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Security.ISecurityEncodable&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.ISecurityEncodable.ToXml">
          <source>Creates an XML encoding of the security object and its current state.</source>
          <target state="translated">보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.ISecurityEncodable.ToXml">
          <source>An XML encoding of the security object, including any state information.</source>
          <target state="translated">모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.ISecurityEncodable.ToXml">
          <source>Custom code that extends security objects needs to implement the <ph id="ph1">&lt;xref:System.Security.ISecurityEncodable.ToXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.ISecurityEncodable.FromXml%2A&gt;</ph> methods to make the objects security-encodable.</source>
          <target state="translated">보안 개체를 확장 하는 사용자 지정 코드를 구현 해야는 <ph id="ph1">&lt;xref:System.Security.ISecurityEncodable.ToXml%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Security.ISecurityEncodable.FromXml%2A&gt;</ph> 보안 인코딩할 수 있는 개체를 만드는 메서드.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.ISecurityEncodable.ToXml">
          <source>The following code example demonstrates implementing the <ph id="ph1">&lt;xref:System.Security.ISecurityEncodable.FromXml%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 구현 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Security.ISecurityEncodable.FromXml%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.ISecurityEncodable.ToXml">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.ISecurityEncodable&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Security.ISecurityEncodable&gt;</ph> 클래스입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>