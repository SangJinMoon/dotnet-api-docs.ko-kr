<Type Name="PermissionSet" FullName="System.Security.PermissionSet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef50fe48167ee95c6b53105e01d8ef0b244f9361" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PermissionSet : System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Security.ISecurityEncodable, System.Security.IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PermissionSet extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Runtime.Serialization.IDeserializationCallback, class System.Security.ISecurityEncodable, class System.Security.IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.PermissionSet" />
  <TypeSignature Language="VB.NET" Value="Public Class PermissionSet&#xA;Implements ICollection, IDeserializationCallback, ISecurityEncodable, IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public ref class PermissionSet : System::Collections::ICollection, System::Runtime::Serialization::IDeserializationCallback, System::Security::ISecurityEncodable, System::Security::IStackWalk" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IStackWalk</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8fd13-101">다양한 유형의 사용 권한을 포함할 수 있는 컬렉션을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8fd13-101">Represents a collection that can contain many different types of permissions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-102">사용할 수 있습니다 <xref:System.Security.PermissionSet> 그룹으로 여러 사용 권한 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-102">You can use <xref:System.Security.PermissionSet> to perform operations on several different permissions as a group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fd13-103">다음 코드 예제에서는 <xref:System.Security.PermissionSet> 클래스 및 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-103">The following code example demonstrates the use of the <xref:System.Security.PermissionSet> class and members.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#1)]
 [!code-csharp[System.Security.PermissionSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#1)]
 [!code-vb[System.Security.PermissionSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="8fd13-104">완전히 신뢰 된 코드로 상속자에 대 한 또는 Microsoft 서명 된 어셈블리에 <see cref="T:System.Security.Policy.StrongName" />합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8fd13-104">for inheritors to be fully trusted, or in an assembly that is signed with the Microsoft <see cref="T:System.Security.Policy.StrongName" />.</span>
      </span>
    </permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-105">
            <see cref="T:System.Security.PermissionSet" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-105">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PermissionSet (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PermissionSet(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="8fd13-106">권한 집합의 액세스를 리소스에 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-106">One of the enumeration values that specifies the permission set's access to resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-107">지정된 <see cref="T:System.Security.PermissionSet" />를 사용하여 <see cref="T:System.Security.Permissions.PermissionState" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-107">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-108">`Unrestricted` 상태를 구현 하는 모든 사용 권한을 허용는 <xref:System.Security.Permissions.IUnrestrictedPermission> 인터페이스 동안 `None` 어떠한 사용 권한도 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-108">The `Unrestricted` state allows all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface, while `None` allows no permissions.</span></span>  
  
 <span data-ttu-id="8fd13-109">사용 하 여 <xref:System.Security.PermissionSet.AddPermission%2A> 빈 <xref:System.Security.PermissionSet> 보다 자세히 설명에서 집합을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-109">Use <xref:System.Security.PermissionSet.AddPermission%2A> on an empty <xref:System.Security.PermissionSet> to define the set in greater detail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fd13-110">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Security.PermissionSet.%23ctor%2A> 권한을 만드는 생성자의 사용 권한 상태를 사용 하 여 설정 <xref:System.Security.Permissions.PermissionState.None>합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-110">The following code example shows the use of the <xref:System.Security.PermissionSet.%23ctor%2A> constructor to create a permission set with a permission state of <xref:System.Security.Permissions.PermissionState.None>.</span></span> <span data-ttu-id="8fd13-111">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-111">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#2)]
 [!code-csharp[System.Security.PermissionSet#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#2)]
 [!code-vb[System.Security.PermissionSet#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fd13-112">
            <paramref name="state" /> 매개 변수가 유효한 <see cref="T:System.Security.Permissions.PermissionState" />이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-112">The <paramref name="state" /> parameter is not a valid <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PermissionSet (System.Security.PermissionSet permSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.PermissionSet permSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (permSet As PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PermissionSet(System::Security::PermissionSet ^ permSet);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="permSet" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="permSet">
          <span data-ttu-id="8fd13-113">새 <see cref="T:System.Security.PermissionSet" />의 값을 가져올 집합이거나 빈 <see cref="T:System.Security.PermissionSet" />를 만들 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-113">The set from which to take the value of the new <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> to create an empty <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-114">
            <paramref name="permSet" /> 매개 변수에서 가져온 초기값을 사용하여 <see cref="T:System.Security.PermissionSet" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-114">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class with initial values taken from the <paramref name="permSet" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-115">새 <xref:System.Security.PermissionSet> 지정 된 포함 된 사용 권한에의 복사본이 포함 된 <xref:System.Security.PermissionSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-115">The new <xref:System.Security.PermissionSet> contains copies of the permissions contained in the specified <xref:System.Security.PermissionSet>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8fd13-116">이에 해당 하는 <xref:System.Security.PermissionSet.Copy%2A> 때는 `permSet` 매개 변수가 않습니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-116">This is equivalent to <xref:System.Security.PermissionSet.Copy%2A> when the `permSet` parameter is not `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission AddPermission (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission AddPermission(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPermission (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ AddPermission(System::Security::IPermission ^ perm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm">
          <span data-ttu-id="8fd13-117">추가할 사용 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-117">The permission to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-118">지정된 사용 권한을 <see cref="T:System.Security.PermissionSet" />에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-118">Adds a specified permission to the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-119">추가된 사용 권한과 <see cref="T:System.Security.PermissionSet" />에 이미 있는 동일한 형식의 사용 권한의 합한 것입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-119">The union of the permission added and any permission of the same type that already exists in the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-120">이미 추가 된 사용 권한과 동일한 유형의 사용 권한을에 있는 경우는 <xref:System.Security.PermissionSet>, 새 사용 권한을 기존 권한 개체와 지정된 된 권한 개체의 union을입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-120">If a permission of the same type as the added permission already exists in the <xref:System.Security.PermissionSet>, the new permission is the union of the existing permission object and the specified permission object.</span></span> <span data-ttu-id="8fd13-121">예를 들어 구현 하는 사용 권한 <xref:System.Security.Permissions.IUnrestrictedPermission> 에 추가 되는 <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Security.PermissionSet>, 결과 union은 원래 `Unrestricted` <xref:System.Security.PermissionSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-121">For example, if a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is added to an <xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Security.PermissionSet>, the resulting union is the original `Unrestricted`<xref:System.Security.PermissionSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fd13-122">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Security.PermissionSet.AddPermission%2A> 메서드를 사용 권한 집합에 권한을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-122">The following code example shows the use of the <xref:System.Security.PermissionSet.AddPermission%2A> method to add a permission to a permission set.</span></span> <span data-ttu-id="8fd13-123">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-123">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#3)]
 [!code-csharp[System.Security.PermissionSet#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#3)]
 [!code-vb[System.Security.PermissionSet#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fd13-124">
            <see cref="T:System.Security.ReadOnlyPermissionSet" />에서 메서드가 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-124">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8fd13-125">상속 하는 경우 <see cref="T:System.Security.PermissionSet" />의 동작을 변경할 수는 <see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /> 메서드를 재정의 <see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /> 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8fd13-125">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /> method by overriding the <see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AddPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission AddPermissionImpl (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission AddPermissionImpl(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddPermissionImpl (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ AddPermissionImpl(System::Security::IPermission ^ perm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm">
          <span data-ttu-id="8fd13-126">추가할 사용 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-126">The permission to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-127">지정된 사용 권한을 <see cref="T:System.Security.PermissionSet" />에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-127">Adds a specified permission to the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-128">추가된 사용 권한과 <see cref="T:System.Security.PermissionSet" />에 이미 있는 동일한 형식의 사용 권한의 합집합이거나, 아니면 <paramref name="perm" />이 <see langword="null" />인 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-128">The union of the permission added and any permission of the same type that already exists in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if <paramref name="perm" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-129"><xref:System.Security.PermissionSet.AddPermissionImpl%2A> 메서드는에 대 한 구현에서 <xref:System.Security.PermissionSet.AddPermission%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8fd13-129">The <xref:System.Security.PermissionSet.AddPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.AddPermission%2A> method.</span></span>  
  
 <span data-ttu-id="8fd13-130">이미 추가 된 사용 권한과 동일한 유형의 사용 권한을에 있는 경우는 <xref:System.Security.PermissionSet>, 새 사용 권한을 기존 권한 개체와 지정된 된 권한 개체의 union을입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-130">If a permission of the same type as the added permission already exists in the <xref:System.Security.PermissionSet>, the new permission is the union of the existing permission object and the specified permission object.</span></span> <span data-ttu-id="8fd13-131">예를 들어 구현 하는 사용 권한 <xref:System.Security.Permissions.IUnrestrictedPermission> 에 추가 되는 <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Security.PermissionSet>, 결과 union은 원래 `Unrestricted` <xref:System.Security.PermissionSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-131">For example, if a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is added to an <xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Security.PermissionSet>, the resulting union is the original `Unrestricted`<xref:System.Security.PermissionSet>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fd13-132">
            <see cref="T:System.Security.ReadOnlyPermissionSet" />에서 메서드가 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-132">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Assert();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Assert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-133">스택의 상위 호출자에게 리소스에 액세스할 수 있는 권한이 부여되지 않더라도 호출 코드가 이 메서드를 호출하는 코드를 통해 사용 권한 요구로 보호되는 리소스에 액세스할 수 있음을 선언합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-133">Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</span>
          </span>
          <span data-ttu-id="8fd13-134">
            <see cref="M:System.Security.PermissionSet.Assert" />를 사용하면 보안 취약점이 발생할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-134">Using <see cref="M:System.Security.PermissionSet.Assert" /> can create security vulnerabilities.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-135">이 때문에 프레임 내에서 동시에 여러 권한을 어설션할 수 있는 유일한 방법은 하나만 <xref:System.Security.PermissionSet.Assert%2A> 프레임에서 활성화 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-135">This is the only way to assert multiple permissions at the same time within a frame because only one <xref:System.Security.PermissionSet.Assert%2A> can be active on a frame.</span></span> <span data-ttu-id="8fd13-136"><xref:System.Security.PermissionSet.Assert%2A> 효력이 부여 된 사용 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-136"><xref:System.Security.PermissionSet.Assert%2A> is only effective for granted permissions.</span></span> <span data-ttu-id="8fd13-137">호출 된 <xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType> 또는 <xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType> 활성을 취소 하는 메서드 <xref:System.Security.PermissionSet.Assert%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-137">Call the <xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType> or <xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType> method to cancel an active <xref:System.Security.PermissionSet.Assert%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8fd13-138">호출 하기 때문에 <xref:System.Security.PermissionSet.Assert%2A> 메서드 호출 체인에 모든 코드가 요구 해야 권한이 제거 지정 된 리소스에 액세스할 수, 메서드를 잘못 사용할 경우 보안 취약점이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-138">Because calling the <xref:System.Security.PermissionSet.Assert%2A> method removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</span></span> <span data-ttu-id="8fd13-139">따라서 매우 주의 해 서 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-139">Therefore, it should be used with great caution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8fd13-140">어설션된 <see cref="T:System.Security.PermissionSet" /> 인스턴스에 어설션 코드가 부여되지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-140">The <see cref="T:System.Security.PermissionSet" /> instance asserted has not been granted to the asserting code.</span>
          </span>
          <span data-ttu-id="8fd13-141">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-141">-or-</span>
          </span>
          <span data-ttu-id="8fd13-142">현재 프레임에 대해 활성 <see cref="M:System.Security.PermissionSet.Assert" />가 이미 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-142">There is already an active <see cref="M:System.Security.PermissionSet.Assert" /> for the current frame.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsNonCodeAccessPermissions">
      <MemberSignature Language="C#" Value="public bool ContainsNonCodeAccessPermissions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsNonCodeAccessPermissions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsNonCodeAccessPermissions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsNonCodeAccessPermissions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-143">
            <see cref="T:System.Security.PermissionSet" />에 <see cref="T:System.Security.CodeAccessPermission" />에서 파생되지 않은 사용 권한이 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-143">Gets a value indicating whether the <see cref="T:System.Security.PermissionSet" /> contains permissions that are not derived from <see cref="T:System.Security.CodeAccessPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-144">
            <see cref="T:System.Security.PermissionSet" />에 <see cref="T:System.Security.CodeAccessPermission" />에서 파생되지 않은 사용 권한이 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-144">
              <see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> contains permissions that are not derived from <see cref="T:System.Security.CodeAccessPermission" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fd13-145">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8fd13-145">The following code example shows the use of the <xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A> method.</span></span> <span data-ttu-id="8fd13-146">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-146">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#9)]
 [!code-csharp[System.Security.PermissionSet#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#9)]
 [!code-vb[System.Security.PermissionSet#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertPermissionSet">
      <MemberSignature Language="C#" Value="public static byte[] ConvertPermissionSet (string inFormat, byte[] inData, string outFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] ConvertPermissionSet(string inFormat, unsigned int8[] inData, string outFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertPermissionSet (inFormat As String, inData As Byte(), outFormat As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ ConvertPermissionSet(System::String ^ inFormat, cli::array &lt;System::Byte&gt; ^ inData, System::String ^ outFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inFormat" Type="System.String" />
        <Parameter Name="inData" Type="System.Byte[]" />
        <Parameter Name="outFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inFormat">
          <span data-ttu-id="8fd13-147">ASCII, 유니코드 또는 이진 파일의 인코딩 형식 중 하나를 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-147">A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</span>
          </span>
          <span data-ttu-id="8fd13-148">가능한 값은 "XMLASCII" 또는 "XML", "XMLUNICODE" 및 "BINARY"입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-148">Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</span>
          </span>
        </param>
        <param name="inData">
          <span data-ttu-id="8fd13-149">XML로 인코딩된 사용 권한 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-149">An XML-encoded permission set.</span>
          </span>
        </param>
        <param name="outFormat">
          <span data-ttu-id="8fd13-150">ASCII, 유니코드 또는 이진 파일의 인코딩 형식 중 하나를 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-150">A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</span>
          </span>
          <span data-ttu-id="8fd13-151">가능한 값은 "XMLASCII" 또는 "XML", "XMLUNICODE" 및 "BINARY"입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-151">Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-152">인코딩된 <see cref="T:System.Security.PermissionSet" />을 한 XML 인코딩 형식에서 다른 XML 인코딩 형식으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-152">Converts an encoded <see cref="T:System.Security.PermissionSet" /> from one XML encoding format to another XML encoding format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-153">지정된 출력 형식을 갖는 암호화된 사용 권한 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-153">An encrypted permission set with the specified output format.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-154">이 메서드를 사용하지 마세요.</span><span class="sxs-lookup"><span data-stu-id="8fd13-154">Do not use this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="8fd13-155">모든 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-155">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual System.Security.PermissionSet Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.PermissionSet Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Copy () As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::PermissionSet ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-156">
            <see cref="T:System.Security.PermissionSet" />의 복사본을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-156">Creates a copy of the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-157">
            <see cref="T:System.Security.PermissionSet" />의 복사본입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-157">A copy of the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-158">복사본 한 <xref:System.Security.PermissionSet> 원래 개체와 리소스에 동일한 액세스 권한을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-158">A copy of a <xref:System.Security.PermissionSet> represents the same access to resources as the original object.</span></span> <span data-ttu-id="8fd13-159">변경 내용이 복사본에 대해 원래 권한 집합 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-159">Changes made to the copy do not affect the original permission set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fd13-160">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Security.PermissionSet.Copy%2A> 메서드 사용 권한 집합의 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-160">The following code example shows the use of the <xref:System.Security.PermissionSet.Copy%2A> method to create a copy of a permission set.</span></span> <span data-ttu-id="8fd13-161">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-161">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#20)]
 [!code-csharp[System.Security.PermissionSet#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#20)]
 [!code-vb[System.Security.PermissionSet#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="8fd13-162">복사할 대상 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-162">The target array to which to copy.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8fd13-163">복사를 시작할 배열의 시작 위치(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-163">The starting position in the array to begin copying (zero based).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-164">집합의 사용 권한 개체를 <see cref="T:System.Array" />의 지정된 위치에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-164">Copies the permission objects of the set to the indicated location in an <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fd13-165">
            <paramref name="array" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-165">The <paramref name="array" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fd13-166">
            <paramref name="array" /> 매개 변수가 둘 이상의 차원을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-166">The <paramref name="array" /> parameter has more than one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="8fd13-167">
            <paramref name="index" /> 매개 변수가 <paramref name="array" /> 매개 변수의 범위를 벗어납니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-167">The <paramref name="index" /> parameter is out of the range of the <paramref name="array" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-168">사용 권한 집합에 포함된 사용 권한 개체의 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-168">Gets the number of permission objects contained in the permission set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fd13-169">
            <see cref="T:System.Security.PermissionSet" />에 포함된 사용 권한 개체의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-169">The number of permission objects contained in the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-170">에 `None` 또는 `Unrestricted` 실제 사용 권한은 개체 인스턴스가 사용 되 고 0이 반환 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-170">In the `None` or `Unrestricted` state this returns zero, because no actual permission object instances are used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fd13-171">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Security.PermissionSet.Count%2A> 사용 권한 집합에 사용 권한 개체의 수를 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-171">The following code example shows the use of the <xref:System.Security.PermissionSet.Count%2A> property to get the number of permission objects in a permission set.</span></span> <span data-ttu-id="8fd13-172">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-172">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#5)]
 [!code-csharp[System.Security.PermissionSet#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#5)]
 [!code-vb[System.Security.PermissionSet#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-173">호출 스택의 상위 호출자에게 현재 인스턴스로 지정된 권한이 없는 경우 런타임에 <see cref="T:System.Security.SecurityException" />을 강제 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-173">Forces a <see cref="T:System.Security.SecurityException" /> at run time if all callers higher in the call stack have not been granted the permissions specified by the current instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-174">사용 하 여 <xref:System.Security.PermissionSet.Demand%2A> 에 <xref:System.Security.PermissionSet> 를 하나의 작업이 있는 집합의 모든 호출자가 있는 모든 권한이 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-174">Use <xref:System.Security.PermissionSet.Demand%2A> on a <xref:System.Security.PermissionSet> to ensure that all callers have all permissions in the set with one operation.</span></span>  
  
 <span data-ttu-id="8fd13-175">이 메서드를 호출 하는 코드의 사용 권한은 검사 하지 않습니다. 검사 해당 코드의 직접 실행 호출자에서 시작 되 고 스택 위로 진행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-175">The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="8fd13-176">호출 스택의 호출 스택의 상위 메서드를 호출할 낮은 호출 스택에 있도록 하향식으로 일반적으로 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-176">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="8fd13-177"><xref:System.Security.PermissionSet.Demand%2A> 없는 경우에 성공 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-177"><xref:System.Security.PermissionSet.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is thrown.</span></span>  
  
 <span data-ttu-id="8fd13-178">경우는 <xref:System.Security.PermissionSet> 에서 상속 되지 않는 권한을 포함 <xref:System.Security.CodeAccessPermission>, `Demand` 이러한 사용 권한은의 메서드도 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-178">If the <xref:System.Security.PermissionSet> contains permissions that do not inherit from <xref:System.Security.CodeAccessPermission>, the `Demand` methods of those permissions are called as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fd13-179">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Security.PermissionSet.Demand%2A> 메서드를 사용 권한 집합에 모든 권한을 요구 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-179">The following code example shows the use of the <xref:System.Security.PermissionSet.Demand%2A> method to demand all the permissions in a permission set.</span></span> <span data-ttu-id="8fd13-180">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-180">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#4)]
 [!code-csharp[System.Security.PermissionSet#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#4)]
 [!code-vb[System.Security.PermissionSet#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8fd13-181">호출 체인의 호출자에게 요구된 사용 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-181">A caller in the call chain does not have the permission demanded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Deny();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Deny</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-182">현재 <see cref="M:System.Security.PermissionSet.Demand" />에 포함된 형식의 권한과 공통된 권한에 대한 호출 코드를 통해 전달되는 모든 <see cref="T:System.Security.PermissionSet" />이 실패합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-182">Causes any <see cref="M:System.Security.PermissionSet.Demand" /> that passes through the calling code for a permission that has an intersection with a permission of a type contained in the current <see cref="T:System.Security.PermissionSet" /> to fail.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-183">이 메서드는 호출 스택의 상위 호출자가 해당 호출자가 액세스할 수 있는 권한이 부여 되어 있는 경우에이 메서드를 호출 하는 코드를 통해 보호 된 리소스에 액세스 하지 못하도록 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-183">This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</span></span> <span data-ttu-id="8fd13-184">호출 스택의 호출 스택의 상위 메서드를 호출할 낮은 호출 스택에 있도록 하향식으로 일반적으로 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-184">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="8fd13-185"><xref:System.Security.PermissionSet.Deny%2A> 프로그래머의 책임을 제한 하거나 호출 하는 메서드를 방지할 수 있으므로 실수로 인 한 보안 취약점을 방지할 수 있습니다 <xref:System.Security.PermissionSet.Deny%2A> 에서 거부 된 권한으로 보호 되는 리소스에 액세스 하는 데 사용 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-185"><xref:System.Security.PermissionSet.Deny%2A> can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls <xref:System.Security.PermissionSet.Deny%2A> from being used to access the resource protected by the denied permission.</span></span> <span data-ttu-id="8fd13-186">메서드를 호출 하는 경우 <xref:System.Security.PermissionSet.Deny%2A> 권한, 경우에 <xref:System.Security.PermissionSet.Demand%2A> 에 도달 하면 보안 검사를 수행할 권한은 하위 호출 스택의 호출자가 호출에 대 한는 <xref:System.Security.PermissionSet.Deny%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-186">If a method calls <xref:System.Security.PermissionSet.Deny%2A> on a permission, and if a <xref:System.Security.PermissionSet.Demand%2A> for that permission is invoked by a caller lower in the call stack, that security check fails when it reaches the <xref:System.Security.PermissionSet.Deny%2A>.</span></span>  
  
 <span data-ttu-id="8fd13-187"><xref:System.Security.PermissionSet.Deny%2A> 에 대 한 해당 권한 요청할 수 없으므로 부여 되지 않은 있는 사용 권한을 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-187"><xref:System.Security.PermissionSet.Deny%2A> is ignored for a permission that is not granted because a demand for that permission cannot succeed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8fd13-188">
            <see cref="M:System.Security.PermissionSet.Deny" />에 대한 이전 호출에서 현재 스택 프레임에 대한 권한을 이미 제한했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-188">A previous call to <see cref="M:System.Security.PermissionSet.Deny" /> has already restricted the permissions for the current stack frame.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Equals(System.Object)" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="8fd13-189">현재 <see cref="T:System.Security.PermissionSet" />와 비교할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-189">The object to compare with the current <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-190">지정된 <see cref="T:System.Security.PermissionSet" /> 또는 <see cref="T:System.Security.NamedPermissionSet" /> 개체가 현재 <see cref="T:System.Security.PermissionSet" />와 같은지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-190">Determines whether the specified <see cref="T:System.Security.PermissionSet" /> or <see cref="T:System.Security.NamedPermissionSet" /> object is equal to the current <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-191">지정한 개체가 현재 <see langword="true" /> 개체와 같으면 <see cref="T:System.Security.PermissionSet" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-191">
              <see langword="true" /> if the specified object is equal to the current <see cref="T:System.Security.PermissionSet" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-192">일치 여부는 권한 집합에 지정 된 내용에 포함 된 사용 권한에 의해 결정 됩니다 `obj`합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-192">Equality is determined by the permissions contained in the permission set specified by `obj`.</span></span> <span data-ttu-id="8fd13-193">`obj` 일 수 있습니다는 <xref:System.Security.PermissionSet> 개체 또는 <xref:System.Security.NamedPermissionSet> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-193">`obj` can be either a <xref:System.Security.PermissionSet> object or a <xref:System.Security.NamedPermissionSet> object.</span></span> <span data-ttu-id="8fd13-194">경우 `obj` 는 <xref:System.Security.NamedPermissionSet>, 이름 및 설명을 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-194">If `obj` is a <xref:System.Security.NamedPermissionSet>, the name and description are ignored.</span></span>  
  
 <span data-ttu-id="8fd13-195">자세한 내용은 <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8fd13-195">For more information, see <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public virtual void FromXml (System.Security.SecurityElement et);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement et) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FromXml (et As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXml(System::Security::SecurityElement ^ et);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="et" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="et">
          <span data-ttu-id="8fd13-196">보안 개체를 다시 생성하는 데 사용할 XML 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-196">The XML encoding to use to reconstruct the security object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-197">XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-197">Reconstructs a security object with a specified state from an XML encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fd13-198">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Security.PermissionSet.FromXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8fd13-198">The following code example shows the use of the <xref:System.Security.PermissionSet.FromXml%2A> method.</span></span> <span data-ttu-id="8fd13-199">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-199">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#17)]
 [!code-csharp[System.Security.PermissionSet#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#17)]
 [!code-vb[System.Security.PermissionSet#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fd13-200">
            <paramref name="et" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-200">The <paramref name="et" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fd13-201">
            <paramref name="et" /> 매개 변수가 올바른 사용 권한 요소가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-201">The <paramref name="et" /> parameter is not a valid permission element.</span>
          </span>
          <span data-ttu-id="8fd13-202">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-202">-or-</span>
          </span>
          <span data-ttu-id="8fd13-203">
            <paramref name="et" /> 매개 변수의 버전 번호가 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-203">The <paramref name="et" /> parameter's version number is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-204">집합의 사용 권한에 대한 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-204">Returns an enumerator for the permissions of the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-205">집합의 사용 권한에 대한 열거자 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-205">An enumerator object for the permissions of the set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-206">인덱스 열거자를 사용 하 여 집합에서 각각의 사용 권한 개체에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-206">Use the enumerator as an index to access individual permission objects in the set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fd13-207">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Security.PermissionSet.GetEnumerator%2A> 메서드를 사용 권한 집합에 모든 권한을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-207">The following code example shows the use of the <xref:System.Security.PermissionSet.GetEnumerator%2A> method to list all the permissions in a permission set.</span></span> <span data-ttu-id="8fd13-208">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-208">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#18)]
 [!code-csharp[System.Security.PermissionSet#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#18)]
 [!code-vb[System.Security.PermissionSet#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#18)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8fd13-209">상속 하는 경우 <see cref="T:System.Security.PermissionSet" />의 동작을 변경할 수는 <see cref="M:System.Security.PermissionSet.GetEnumerator" /> 메서드를 재정의 <see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /> 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8fd13-209">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.GetEnumerator" /> method by overriding the <see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IEnumerator GetEnumeratorImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumeratorImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetEnumeratorImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetEnumeratorImpl () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IEnumerator ^ GetEnumeratorImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-210">집합의 사용 권한에 대한 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-210">Returns an enumerator for the permissions of the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-211">집합의 사용 권한에 대한 열거자 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-211">An enumerator object for the permissions of the set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-212"><xref:System.Security.PermissionSet.GetEnumeratorImpl%2A> 메서드는에 대 한 구현에서 <xref:System.Security.PermissionSet.GetEnumerator%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8fd13-212">The <xref:System.Security.PermissionSet.GetEnumeratorImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-213">해시 알고리즘과 해시 테이블 같은 데이터 구조에 사용하기 적합한 <see cref="T:System.Security.PermissionSet" /> 개체에 대한 해시 코드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-213">Gets a hash code for the <see cref="T:System.Security.PermissionSet" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-214">현재 <see cref="T:System.Security.PermissionSet" /> 개체의 해시 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-214">A hash code for the current <see cref="T:System.Security.PermissionSet" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-215">두 개를 비교 하 여 해시 코드를 사용 해야 하므로 동일한 사용 권한 집합의 두 인스턴스에 대 한 해시 코드 서로 다를 수 <xref:System.Security.PermissionSet> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-215">The hash code for two instances of the same permission set might be different, so a hash code should not be used to compare two <xref:System.Security.PermissionSet> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission GetPermission (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission GetPermission(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetPermission(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPermission (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ GetPermission(Type ^ permClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass">
          <span data-ttu-id="8fd13-216">원하는 사용 권한 개체의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-216">The type of the desired permission object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-217">집합에 있는 경우 지정된 형식의 사용 권한 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-217">Gets a permission object of the specified type, if it exists in the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-218">
            <see cref="T:System.Security.PermissionSet" />에 포함된 <paramref name="permClass" /> 매개 변수로 지정한 형식의 사용 권한 개체 복사본이거나, 해당 복사본이 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-218">A copy of the permission object of the type specified by the <paramref name="permClass" /> parameter contained in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if none exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-219">메서드가 반환 `null` 에 대 한 프로그램 `Unrestricted` <xref:System.Security.PermissionSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-219">The method returns `null` for an `Unrestricted`<xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="8fd13-220">하지만 `Unrestricted` <xref:System.Security.PermissionSet> 효과적으로 모든 권한이 포함 된 실제 인스턴스 반환할가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-220">Although an `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions, it does not have any actual instances to return.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8fd13-221">상속 하는 경우 <see cref="T:System.Security.PermissionSet" />의 동작을 변경할 수는 <see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /> 메서드를 재정의 <see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /> 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8fd13-221">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /> method by overriding the <see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission GetPermissionImpl (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission GetPermissionImpl(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPermissionImpl (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ GetPermissionImpl(Type ^ permClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass">
          <span data-ttu-id="8fd13-222">사용 권한 개체의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-222">The type of the permission object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-223">집합에 있는 경우 지정된 형식의 사용 권한 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-223">Gets a permission object of the specified type, if it exists in the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-224">
            <see cref="T:System.Security.PermissionSet" />에 포함된 <paramref name="permClass" /> 매개 변수로 지정한 형식의 사용 권한 개체 복사본이거나, 해당 복사본이 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-224">A copy of the permission object, of the type specified by the <paramref name="permClass" /> parameter, contained in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if none exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-225"><xref:System.Security.PermissionSet.GetPermissionImpl%2A> 메서드는에 대 한 구현에서 <xref:System.Security.PermissionSet.GetPermission%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8fd13-225">The <xref:System.Security.PermissionSet.GetPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.GetPermission%2A> method.</span></span>  
  
 <span data-ttu-id="8fd13-226">메서드가 반환 `null` 에 대 한 프로그램 `Unrestricted` <xref:System.Security.PermissionSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-226">The method returns `null` for an `Unrestricted`<xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="8fd13-227">하지만 `Unrestricted` <xref:System.Security.PermissionSet> 효과적으로 모든 권한이 포함 된 실제 인스턴스 반환할가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-227">Although an `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions, it does not have any actual instances to return.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.PermissionSet Intersect (System.Security.PermissionSet other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.PermissionSet Intersect(class System.Security.PermissionSet other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (other As PermissionSet) As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::PermissionSet ^ Intersect(System::Security::PermissionSet ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="8fd13-228">현재 <see cref="T:System.Security.PermissionSet" />와 공통되는 사용 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-228">A permission set to intersect with the current <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-229">현재 <see cref="T:System.Security.PermissionSet" />과 지정된 <see cref="T:System.Security.PermissionSet" />의 교집합에 해당하는 사용 권한 집합을 만들어 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-229">Creates and returns a permission set that is the intersection of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-230">현재 <see cref="T:System.Security.PermissionSet" />와 지정된 대상의 교집합을 나타내는 새 사용 권한 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-230">A new permission set that represents the intersection of the current <see cref="T:System.Security.PermissionSet" /> and the specified target.</span>
          </span>
          <span data-ttu-id="8fd13-231">교집합이 비어 있으면 이 개체는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-231">This object is <see langword="null" /> if the intersection is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-232">두 사용 권한 집합의 교집합에는 모두 공통으로 설명 하는 작업 집합을 설명 하는 권한 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-232">The intersection of two permission sets is a permission set that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="8fd13-233">특히,이 권한을 모두 전달 하는 모든 요청 설정도 전달 교차점 최소 사용 권한을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-233">Specifically, it represents the minimum permissions such that any demand that passes both permission sets also passes their intersection.</span></span>  
  
 <span data-ttu-id="8fd13-234">각 두 집합 모두에 존재 하는 사용 권한 유형에 대 한 사용 권한만의 두 인스턴스가 교차는 권한을 사용 하 여 `Intersect` 메서드가 결과 결과 권한이 포함 되어 <xref:System.Security.PermissionSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-234">For each type of permission that is present in both sets, the two instances of those permissions are intersected using the permission's `Intersect` method; the resulting permission is included in the resulting <xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="8fd13-235">에 두 집합 중 하나에만 존재 하는 사용 권한 유형 결과 집합에서 제외 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-235">Permission types that exist in only one of the two sets are excluded from the resulting set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fd13-236">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Security.PermissionSet.Intersect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8fd13-236">The following code example shows the use of the <xref:System.Security.PermissionSet.Intersect%2A> method.</span></span> <span data-ttu-id="8fd13-237">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-237">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#12)]
 [!code-csharp[System.Security.PermissionSet#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#12)]
 [!code-vb[System.Security.PermissionSet#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEmpty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-238">
            <see cref="T:System.Security.PermissionSet" />가 비어 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-238">Gets a value indicating whether the <see cref="T:System.Security.PermissionSet" /> is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-239">
            <see langword="true" />이 비어 있으면 <see cref="T:System.Security.PermissionSet" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-239">
              <see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> is empty; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-240">A <xref:System.Security.PermissionSet> 비워 둘 수 있고 아직 완전 제한 상태에 해당 권한이 있는 사용 권한의 인스턴스를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-240">A <xref:System.Security.PermissionSet> can be empty and yet contain instances of permissions if those permissions are in the fully-restricted state.</span></span> <span data-ttu-id="8fd13-241">사용 권한을 완벽 하 게 제한 된 상태에 있으며 하는 경우 해당 `IsSubsetOf` 메서드 반환 `true` 때 `null` 매개 변수로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-241">Permissions are in a fully restricted state if their `IsSubsetOf` methods return `true` when `null` is passed as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-242">컬렉션이 읽기 전용인지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-242">Gets a value indicating whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fd13-243">항상 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-243">Always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-244">A <xref:System.Security.PermissionSet> 이 속성은 항상 읽기 전용 수 없으므로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-244">A <xref:System.Security.PermissionSet> cannot be read-only, so this property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fd13-245">다음 코드 예제에서 반환 된 값을 보여 줍니다.는 <xref:System.Security.PermissionSet.IsReadOnly%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-245">The following code example shows the value returned by the <xref:System.Security.PermissionSet.IsReadOnly%2A> property.</span></span> <span data-ttu-id="8fd13-246">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-246">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#7)]
 [!code-csharp[System.Security.PermissionSet#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#7)]
 [!code-vb[System.Security.PermissionSet#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.PermissionSet target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubsetOf(class System.Security.PermissionSet target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As PermissionSet) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Security::PermissionSet ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="8fd13-247">하위 집합 관계를 테스트할 사용 권한 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-247">The permission set to test for the subset relationship.</span>
          </span>
          <span data-ttu-id="8fd13-248">
            <see cref="T:System.Security.PermissionSet" /> 또는 <see cref="T:System.Security.NamedPermissionSet" /> 중 하나이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-248">This must be either a <see cref="T:System.Security.PermissionSet" /> or a <see cref="T:System.Security.NamedPermissionSet" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-249">현재 <see cref="T:System.Security.PermissionSet" />가 지정된 <see cref="T:System.Security.PermissionSet" />의 하위 집합인지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-249">Determines whether the current <see cref="T:System.Security.PermissionSet" /> is a subset of the specified <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-250">현재 <see cref="T:System.Security.PermissionSet" />이 <paramref name="target" /> 매개 변수의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-250">
              <see langword="true" /> if the current <see cref="T:System.Security.PermissionSet" /> is a subset of the <paramref name="target" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-251">A <xref:System.Security.PermissionSet> 대상의 하위 집합인 <xref:System.Security.PermissionSet> 경우 모든 요청이 있는 성공에 대 한는 <xref:System.Security.PermissionSet> 대상에도 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-251">A <xref:System.Security.PermissionSet> is a subset of the target <xref:System.Security.PermissionSet> if all demands that succeed for the <xref:System.Security.PermissionSet> also succeed for the target.</span></span> <span data-ttu-id="8fd13-252">즉, 대상 적어도 하위 집합에 포함 된 사용 권한을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-252">That is, the target contains at least the permissions contained in the subset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fd13-253">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Security.PermissionSet.IsSubsetOf%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8fd13-253">The following code example shows the use of the <xref:System.Security.PermissionSet.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="8fd13-254">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-254">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#11)]
 [!code-csharp[System.Security.PermissionSet#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#11)]
 [!code-vb[System.Security.PermissionSet#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-255">컬렉션이 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-255">Gets a value indicating whether the collection is guaranteed to be thread safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fd13-256">항상 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-256">Always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-257"><xref:System.Security.PermissionSet> 처리 하지 않는 자동으로 스레드로부터 안전 하므로이 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-257"><xref:System.Security.PermissionSet> does not automatically handle thread safety, so this property is always `false`.</span></span>  
  
 <span data-ttu-id="8fd13-258">이 메서드는 지 원하는 데 필요 <xref:System.Collections.ICollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-258">This method is required to support <xref:System.Collections.ICollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fd13-259">다음 코드 예제에서 반환 된 값을 보여 줍니다.는 <xref:System.Security.PermissionSet.IsSynchronized%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-259">The following code example shows the value returned by the <xref:System.Security.PermissionSet.IsSynchronized%2A> property.</span></span> <span data-ttu-id="8fd13-260">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-260">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#6)]
 [!code-csharp[System.Security.PermissionSet#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#6)]
 [!code-vb[System.Security.PermissionSet#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUnrestricted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-261">
            <see cref="T:System.Security.PermissionSet" />가 <see langword="Unrestricted" />인지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-261">Determines whether the <see cref="T:System.Security.PermissionSet" /> is <see langword="Unrestricted" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-262">
            <see cref="T:System.Security.PermissionSet" />이 <see langword="true" />이면 <see langword="Unrestricted" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-262">
              <see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> is <see langword="Unrestricted" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-263">`Unrestricted` <xref:System.Security.PermissionSet> 효과적으로 구현 하는 모든 권한이 포함 된는 <xref:System.Security.Permissions.IUnrestrictedPermission> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-263">An `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fd13-264">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Security.PermissionSet.IsUnrestricted%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8fd13-264">The following code example shows the use of the <xref:System.Security.PermissionSet.IsUnrestricted%2A> method.</span></span> <span data-ttu-id="8fd13-265">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-265">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#19)]
 [!code-csharp[System.Security.PermissionSet#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#19)]
 [!code-vb[System.Security.PermissionSet#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PermitOnly();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.PermitOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-266">현재 <see cref="M:System.Security.PermissionSet.Demand" />의 하위 집합이 아닌 모든 <see cref="T:System.Security.PermissionSet" />에 대한 호출 코드를 통해 전달하는 모든 <see cref="T:System.Security.PermissionSet" />는 성공적으로 수행되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-266">Causes any <see cref="M:System.Security.PermissionSet.Demand" /> that passes through the calling code for any <see cref="T:System.Security.PermissionSet" /> that is not a subset of the current <see cref="T:System.Security.PermissionSet" /> to fail.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-267"><xref:System.Security.PermissionSet.PermitOnly%2A> 유사한 <xref:System.Security.PermissionSet.Deny%2A>그렇지 않은 경우는 성공 시 작동이 실패 하도록 스택 워크 있는 상황에서, 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-267"><xref:System.Security.PermissionSet.PermitOnly%2A> is similar to <xref:System.Security.PermissionSet.Deny%2A>, in that both cause stack walks to fail when they would otherwise succeed.</span></span> <span data-ttu-id="8fd13-268">차이점은 <xref:System.Security.PermissionSet.Deny%2A> 실패 하는 스택 워크를 발생 시키는 사용 권한을 지정 하지만 <xref:System.Security.PermissionSet.PermitOnly%2A> 스택 워크 실패 하지 않게 되는 유일한 권한을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-268">The difference is that <xref:System.Security.PermissionSet.Deny%2A> specifies permissions that will cause the stack walk to fail, but <xref:System.Security.PermissionSet.PermitOnly%2A> specifies the only permissions that do not cause the stack walk to fail.</span></span> <span data-ttu-id="8fd13-269">코드 지정 된 리소스에만 액세스할 수 사용 될 수 있도록 하려면이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-269">Call this method to ensure that your code can be used to access only the specified resources.</span></span>  
  
 <span data-ttu-id="8fd13-270"><xref:System.Security.PermissionSet.PermitOnly%2A> 에 대 한 해당 권한 요청할 수 없으므로 부여 되지 않은 사용 권한을 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-270"><xref:System.Security.PermissionSet.PermitOnly%2A> is ignored for a permission not granted because a demand for that permission cannot succeed.</span></span> <span data-ttu-id="8fd13-271">그러나 코드에 대 한 호출에 낮은 나중 스택 하는 경우 호출 <xref:System.Security.PermissionSet.Demand%2A> 권한에 대해는 <xref:System.Security.SecurityException> 스택 워크를 호출 하려고 하는 코드에 도달 하면 throw 되 <xref:System.Security.PermissionSet.PermitOnly%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-271">However, if code lower on the call stack later calls <xref:System.Security.PermissionSet.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.PermissionSet.PermitOnly%2A>.</span></span> <span data-ttu-id="8fd13-272">호출한 코드 때문에 이것이 <xref:System.Security.PermissionSet.PermitOnly%2A> 에 권한이 부여 되지는 호출 했지만 <xref:System.Security.PermissionSet.PermitOnly%2A> 권한에 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-272">This is because the code that called <xref:System.Security.PermissionSet.PermitOnly%2A> has not been granted the permission, even though it called <xref:System.Security.PermissionSet.PermitOnly%2A> for that permission.</span></span> <span data-ttu-id="8fd13-273">호출 스택의 호출 스택의 상위 메서드를 호출할 낮은 호출 스택에 있도록 하향식으로 일반적으로 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-273">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission RemovePermission (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission RemovePermission(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RemovePermission(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemovePermission (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ RemovePermission(Type ^ permClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass">
          <span data-ttu-id="8fd13-274">삭제할 사용 권한의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-274">The type of permission to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-275">집합에서 특정 형식의 사용 권한을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-275">Removes a permission of a certain type from the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-276">집합에서 제거된 사용 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-276">The permission removed from the set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fd13-277">제한 없음된 권한 집합에서 사용 권한을 제거할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-277">You cannot remove permissions from an unrestricted permission set.</span></span> <span data-ttu-id="8fd13-278">사용 권한 집합은 사용 권한이 제거 하려고 하면 예외가 throw 되지 않습니다 후 무제한 상태로 남아 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-278">The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</span></span>  
  
 <span data-ttu-id="8fd13-279">다음 C# 코드를 제거 하려고 시도 <xref:System.Security.Permissions.FileIOPermission> 에서 `FullTrust` 사용 권한이 설정 되지만 사용 권한을 제거 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-279">The following C# code attempts to remove the <xref:System.Security.Permissions.FileIOPermission> from the `FullTrust` permission set, but the permission is not removed.</span></span>  
  
```  
PolicyLevel myPol = PolicyLevel.CreateAppDomainLevel();  
PermissionSet myPermSet = myPol.GetNamedPermissionSet("FullTrust");  
myPermSet.RemovePermission(typeof(FileIOPermission));  
```  
  
   
  
## Examples  
 <span data-ttu-id="8fd13-280">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Security.PermissionSet.RemovePermission%2A> 제거 하는 메서드는 <xref:System.Security.Permissions.FileIOPermission> 권한 집합에서.</span><span class="sxs-lookup"><span data-stu-id="8fd13-280">The following code example shows the use of the <xref:System.Security.PermissionSet.RemovePermission%2A> method to remove a <xref:System.Security.Permissions.FileIOPermission> from a permission set.</span></span> <span data-ttu-id="8fd13-281">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-281">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#15)]
 [!code-csharp[System.Security.PermissionSet#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#15)]
 [!code-vb[System.Security.PermissionSet#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fd13-282">
            <see cref="T:System.Security.ReadOnlyPermissionSet" />에서 메서드가 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-282">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8fd13-283">상속 하는 경우 <see cref="T:System.Security.PermissionSet" />의 동작을 변경할 수는 <see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /> 메서드를 재정의 <see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /> 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8fd13-283">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /> method by overriding the <see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemovePermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission RemovePermissionImpl (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission RemovePermissionImpl(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RemovePermissionImpl (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ RemovePermissionImpl(Type ^ permClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass">
          <span data-ttu-id="8fd13-284">제거할 사용 권한의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-284">The type of the permission to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-285">집합에서 특정 형식의 사용 권한을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-285">Removes a permission of a certain type from the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-286">집합에서 제거된 사용 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-286">The permission removed from the set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-287"><xref:System.Security.PermissionSet.RemovePermissionImpl%2A> 메서드는에 대 한 구현에서 <xref:System.Security.PermissionSet.RemovePermission%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8fd13-287">The <xref:System.Security.PermissionSet.RemovePermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.RemovePermission%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fd13-288">제한 없음된 권한 집합에서 사용 권한을 제거할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-288">You cannot remove permissions from an unrestricted permission set.</span></span> <span data-ttu-id="8fd13-289">사용 권한 집합은 사용 권한이 제거 하려고 하면 예외가 throw 되지 않습니다 후 무제한 상태로 남아 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-289">The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fd13-290">
            <see cref="T:System.Security.ReadOnlyPermissionSet" />에서 메서드가 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-290">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RevertAssert">
      <MemberSignature Language="C#" Value="public static void RevertAssert ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertAssert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RevertAssert" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertAssert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertAssert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-291">현재 프레임에 대한 이전의 모든 <see cref="M:System.Security.CodeAccessPermission.Assert" />를 제거하여 더 이상 적용되지 않도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-291">Causes any previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame to be removed and no longer be in effect.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-292">없는 경우 없는 <xref:System.Security.CodeAccessPermission.Assert%2A> 현재 프레임에 대 한는 <xref:System.ExecutionEngineException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-292">If there is no <xref:System.Security.CodeAccessPermission.Assert%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fd13-293">현재 프레임에 대한 이전 <see cref="M:System.Security.CodeAccessPermission.Assert" />가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-293">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission SetPermission (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission SetPermission(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPermission (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ SetPermission(System::Security::IPermission ^ perm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm">
          <span data-ttu-id="8fd13-294">설정할 사용 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-294">The permission to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-295">사용 권한을 <see cref="T:System.Security.PermissionSet" />로 설정하고 동일한 형식의 기존 사용 권한을 바꿉니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-295">Sets a permission to the <see cref="T:System.Security.PermissionSet" />, replacing any existing permission of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-296">설정된 사용 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-296">The set permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-297">이 메서드는 기존 권한에서 동일한 유형의 개체를 제거는 <xref:System.Security.PermissionSet> 바꿉니다는 `perm` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-297">This method removes any existing permission object of the same type from the <xref:System.Security.PermissionSet> and replaces it with the `perm` parameter.</span></span> <span data-ttu-id="8fd13-298">사용 권한을 구현 하는 경우 <xref:System.Security.Permissions.IUnrestrictedPermission> 에 설정 되어는 <xref:System.Security.PermissionSet> 즉 <xref:System.Security.Permissions.PermissionState.Unrestricted>, 결과 <xref:System.Security.PermissionSet> 더 이상 `Unrestricted`합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-298">If a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is set on a <xref:System.Security.PermissionSet> that is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the resulting <xref:System.Security.PermissionSet> is no longer `Unrestricted`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fd13-299">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Security.PermissionSet.SetPermission%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8fd13-299">The following code example shows the use of the <xref:System.Security.PermissionSet.SetPermission%2A> method.</span></span> <span data-ttu-id="8fd13-300">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-300">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#16)]
 [!code-csharp[System.Security.PermissionSet#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#16)]
 [!code-vb[System.Security.PermissionSet#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fd13-301">
            <see cref="T:System.Security.ReadOnlyPermissionSet" />에서 메서드가 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-301">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8fd13-302">상속 하는 경우 <see cref="T:System.Security.PermissionSet" />의 동작을 변경할 수는 <see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /> 메서드를 재정의 <see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /> 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8fd13-302">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /> method by overriding the <see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission SetPermissionImpl (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission SetPermissionImpl(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetPermissionImpl (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ SetPermissionImpl(System::Security::IPermission ^ perm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm">
          <span data-ttu-id="8fd13-303">설정할 사용 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-303">The permission to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-304">사용 권한을 <see cref="T:System.Security.PermissionSet" />로 설정하고 동일한 형식의 기존 사용 권한을 바꿉니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-304">Sets a permission to the <see cref="T:System.Security.PermissionSet" />, replacing any existing permission of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-305">설정된 사용 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-305">The set permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-306"><xref:System.Security.PermissionSet.SetPermissionImpl%2A> 메서드는에 대 한 구현에서 <xref:System.Security.PermissionSet.SetPermission%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8fd13-306">The <xref:System.Security.PermissionSet.SetPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.SetPermission%2A> method.</span></span>  
  
 <span data-ttu-id="8fd13-307">이 메서드는 기존 권한에서 동일한 유형의 개체를 제거는 <xref:System.Security.PermissionSet> 바꿉니다는 `perm` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-307">This method removes any existing permission object of the same type from the <xref:System.Security.PermissionSet> and replaces it with the `perm` parameter.</span></span> <span data-ttu-id="8fd13-308">사용 권한을 구현 하는 경우 <xref:System.Security.Permissions.IUnrestrictedPermission> 에 설정 되어는 <xref:System.Security.PermissionSet> 즉 <xref:System.Security.Permissions.PermissionState.Unrestricted>, 결과 <xref:System.Security.PermissionSet> 더 이상 `Unrestricted`합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-308">If a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is set on a <xref:System.Security.PermissionSet> that is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the resulting <xref:System.Security.PermissionSet> is no longer `Unrestricted`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fd13-309">
            <see cref="T:System.Security.ReadOnlyPermissionSet" />에서 메서드가 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-309">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-310">현재 컬렉션의 루트 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-310">Gets the root object of the current collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fd13-311">현재 컬렉션의 루트 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-311">The root object of the current collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-312">이 메서드는 지 원하는 데 필요 <xref:System.Collections.ICollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-312">This method is required to support <xref:System.Collections.ICollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fd13-313">다음 코드 예제에서는 사용을 보여 줍니다. <xref:System.Security.PermissionSet.SyncRoot%2A> 현재 컬렉션의 루트 개체를 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-313">The following code example shows the use of <xref:System.Security.PermissionSet.SyncRoot%2A> property to get the root object of the current collection.</span></span> <span data-ttu-id="8fd13-314">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-314">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#8)]
 [!code-csharp[System.Security.PermissionSet#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#8)]
 [!code-vb[System.Security.PermissionSet#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="8fd13-315">콜백을 시작한 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-315">The object that initiated the callback.</span>
          </span>
          <span data-ttu-id="8fd13-316">이 매개 변수의 기능은 현재 구현되지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-316">The functionality for this parameter is not currently implemented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-317">전체 개체 그래프가 deserialize될 때 실행됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-317">Runs when the entire object graph has been deserialized.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-318">
            <see cref="T:System.Security.PermissionSet" />의 문자열 표현을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-318">Returns a string representation of the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-319">
            <see cref="T:System.Security.PermissionSet" />의 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-319">A representation of the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-320">문자열 표현의 형식이의 상태를 확인 하는 디버깅에 유용한는 <xref:System.Security.PermissionSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-320">The string representation is useful in debugging to see the state of a <xref:System.Security.PermissionSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fd13-321">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Security.PermissionSet.ToString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8fd13-321">The following code example shows the use of the <xref:System.Security.PermissionSet.ToString%2A> method.</span></span> <span data-ttu-id="8fd13-322">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-322">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#10)]
 [!code-csharp[System.Security.PermissionSet#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#10)]
 [!code-vb[System.Security.PermissionSet#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public virtual System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fd13-323">보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-323">Creates an XML encoding of the security object and its current state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-324">모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-324">An XML encoding of the security object, including any state information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fd13-325">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Security.PermissionSet.ToXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8fd13-325">The following code example shows the use of the <xref:System.Security.PermissionSet.ToXml%2A> method.</span></span> <span data-ttu-id="8fd13-326">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-326">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#17)]
 [!code-csharp[System.Security.PermissionSet#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#17)]
 [!code-vb[System.Security.PermissionSet#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.PermissionSet Union (System.Security.PermissionSet other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.PermissionSet Union(class System.Security.PermissionSet other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (other As PermissionSet) As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::PermissionSet ^ Union(System::Security::PermissionSet ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="8fd13-327">현재 <see cref="T:System.Security.PermissionSet" />와 함께 합집합 부분을 구성하는 사용 권한 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-327">The permission set to form the union with the current <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fd13-328">현재 <see cref="T:System.Security.PermissionSet" />와 지정된 <see cref="T:System.Security.PermissionSet" />의 합집합 부분인 <see cref="T:System.Security.PermissionSet" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-328">Creates a <see cref="T:System.Security.PermissionSet" /> that is the union of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fd13-329">현재 <see cref="T:System.Security.PermissionSet" />와 지정된 <see cref="T:System.Security.PermissionSet" />의 합집합을 나타내는 새 사용 권한 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fd13-329">A new permission set that represents the union of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fd13-330">에 대 한 호출의 결과 <xref:System.Security.PermissionSet.Union%2A> 는 <xref:System.Security.PermissionSet> 현재 모든 작업을 나타내는 <xref:System.Security.PermissionSet> 지정 된 모든 작업 뿐만 아니라 <xref:System.Security.PermissionSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-330">The result of a call to <xref:System.Security.PermissionSet.Union%2A> is a <xref:System.Security.PermissionSet> that represents all the operations represented by the current <xref:System.Security.PermissionSet> as well as all the operations represented by the specified <xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="8fd13-331">집합 중 하나가 `Unrestricted`의 union은 `Unrestricted` 도 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-331">If either set is `Unrestricted`, the union is `Unrestricted` as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fd13-332">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Security.PermissionSet.Union%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8fd13-332">The following code example shows the use of the <xref:System.Security.PermissionSet.Union%2A> method.</span></span> <span data-ttu-id="8fd13-333">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.PermissionSet> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fd13-333">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#13)]
 [!code-csharp[System.Security.PermissionSet#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#13)]
 [!code-vb[System.Security.PermissionSet#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>