<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DbConnection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5595516e00e30dc1501f0fdaa2753cde5ef900070.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">595516e00e30dc1501f0fdaa2753cde5ef900070</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbConnection">
          <source>Represents a connection to a database.</source>
          <target state="translated">데이터베이스에 대한 연결을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbConnection">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph>, you must override the following members: <ph id="ph2">&lt;see cref="M:System.Data.Common.DbConnection.Close" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)" /&gt;</ph>, <ph id="ph4">&lt;see cref="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)" /&gt;</ph>, <ph id="ph5">&lt;see cref="M:System.Data.Common.DbConnection.CreateDbCommand" /&gt;</ph>, <ph id="ph6">&lt;see cref="M:System.Data.Common.DbConnection.Open" /&gt;</ph>, and <ph id="ph7">&lt;see cref="E:System.Data.Common.DbConnection.StateChange" /&gt;</ph>.</source>
          <target state="translated">상속 하는 경우 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph>, 멤버를 재정의 해야 합니다: <ph id="ph2">&lt;see cref="M:System.Data.Common.DbConnection.Close" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)" /&gt;</ph>, <ph id="ph4">&lt;see cref="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)" /&gt;</ph>, <ph id="ph5">&lt;see cref="M:System.Data.Common.DbConnection.CreateDbCommand" /&gt;</ph>, <ph id="ph6">&lt;see cref="M:System.Data.Common.DbConnection.Open" /&gt;</ph>, 및 <ph id="ph7">&lt;see cref="E:System.Data.Common.DbConnection.StateChange" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbConnection">
          <source>You must also provide the following properties: <ph id="ph1">&lt;see cref="P:System.Data.Common.DbConnection.ConnectionString" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Data.Common.DbConnection.Database" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Data.Common.DbConnection.DataSource" /&gt;</ph>, <ph id="ph4">&lt;see cref="P:System.Data.Common.DbConnection.ServerVersion" /&gt;</ph>, and <ph id="ph5">&lt;see cref="P:System.Data.Common.DbConnection.State" /&gt;</ph>.</source>
          <target state="translated">다음 속성을 제공 해야: <ph id="ph1">&lt;see cref="P:System.Data.Common.DbConnection.ConnectionString" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Data.Common.DbConnection.Database" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Data.Common.DbConnection.DataSource" /&gt;</ph>, <ph id="ph4">&lt;see cref="P:System.Data.Common.DbConnection.ServerVersion" /&gt;</ph>, 및 <ph id="ph5">&lt;see cref="P:System.Data.Common.DbConnection.State" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
          <source>Specifies the isolation level for the transaction.</source>
          <target state="translated">트랜잭션의 격리 수준을 지정합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
          <source>Starts a database transaction.</source>
          <target state="translated">데이터베이스 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
          <source>An object representing the new transaction.</source>
          <target state="translated">새 트랜잭션을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
          <source>If you are creating your own connection type, override this method to implement the code necessary to begin a transaction.</source>
          <target state="translated">사용자 고유의 연결 형식을 만드는 경우 트랜잭션을 시작 하는 데 필요한 코드를 구현 하려면이 메서드를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbConnection">
          <source>Starts a database transaction.</source>
          <target state="translated">데이터베이스 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbConnection">
          <source>If you do not specify an isolation level, the default isolation level for the specific type of connection is used.</source>
          <target state="translated">격리 수준을 지정 하지 않으면 경우에 특정 유형의 연결에 대 한 기본 격리 수준이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.BeginTransaction">
          <source>Starts a database transaction.</source>
          <target state="translated">데이터베이스 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.BeginTransaction">
          <source>An object representing the new transaction.</source>
          <target state="translated">새 트랜잭션을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.BeginTransaction">
          <source>If you do not specify an isolation level, the default isolation level for the specific type of connection is used.</source>
          <target state="translated">격리 수준을 지정 하지 않으면 경우에 특정 유형의 연결에 대 한 기본 격리 수준이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>Specifies the isolation level for the transaction.</source>
          <target state="translated">트랜잭션의 격리 수준을 지정합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>Starts a database transaction with the specified isolation level.</source>
          <target state="translated">지정된 격리 수준으로 데이터베이스 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>An object representing the new transaction.</source>
          <target state="translated">새 트랜잭션을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
          <source>Specifies the name of the database for the connection to use.</source>
          <target state="translated">사용할 연결의 데이터베이스 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
          <source>Changes the current database for an open connection.</source>
          <target state="translated">열려 있는 연결의 현재 데이터베이스를 변경합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
          <source>The value supplied in the <ph id="ph1">`databaseName`</ph> parameter must be a valid database name for the current instance.</source>
          <target state="translated">제공 된 값이 고 <ph id="ph1">`databaseName`</ph> 매개 변수는 현재 인스턴스에 대 한 올바른 데이터베이스 이름을 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.Close">
          <source>Closes the connection to the database.</source>
          <target state="translated">데이터베이스에 대한 연결을 닫습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.Close">
          <source>This is the preferred method of closing any open connection.</source>
          <target state="translated">열린 연결을 닫기 위해 기본적으로 이 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.Close">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.Close%2A&gt;</ph> method rolls back any pending transactions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbConnection.Close%2A&gt;</ph> 메서드 보류 중인 트랜잭션을 모두 롤백합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.Close">
          <source>It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.</source>
          <target state="translated">그런 다음 연결 풀에 대 한 연결을 해제 하거나 연결 풀링을 사용 하지 않도록 설정 하는 경우 연결을 닫습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.Close">
          <source>An application can call <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.Close%2A&gt;</ph> more than one time.</source>
          <target state="translated">응용 프로그램에서 호출할 수 <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.Close%2A&gt;</ph> 한 번 이상.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.Close">
          <source>No exception is generated.</source>
          <target state="translated">예외가 생성 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.Close">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbConnection&gt;</ph> goes out of scope, it is not closed.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.Common.DbConnection&gt;</ph> 늘어나고의 범위를 닫혀 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.Close">
          <source>Therefore, you must explicitly close the connection by calling <ph id="ph1">`Close`</ph> or <ph id="ph2">`Dispose`</ph>, which are functionally equivalent.</source>
          <target state="translated">따라서 명시적으로 닫아야 연결 호출 하 여 <ph id="ph1">`Close`</ph> 또는 <ph id="ph2">`Dispose`</ph>, 하는 기능적으로 동일 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.Close">
          <source>If the connection pooling value <ph id="ph1">`Pooling`</ph> is set to <ph id="ph2">`true`</ph> or <ph id="ph3">`yes`</ph>, this also releases the physical connection.</source>
          <target state="translated">연결 풀링 값 경우 <ph id="ph1">`Pooling`</ph> 로 설정 된 <ph id="ph2">`true`</ph> 또는 <ph id="ph3">`yes`</ph>, 물리적 연결이 끊어집니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.Close">
          <source>Do not call <ph id="ph1">`Close`</ph> or <ph id="ph2">`Dispose`</ph> on a <bpt id="p1">**</bpt>Connection<ept id="p1">**</ept>, a <bpt id="p2">**</bpt>DataReader<ept id="p2">**</ept>, or any other managed object in the <ph id="ph3">`Finalize`</ph> method of your class.</source>
          <target state="translated">호출 하지 마십시오 <ph id="ph1">`Close`</ph> 또는 <ph id="ph2">`Dispose`</ph> 에 <bpt id="p1">**</bpt>연결<ept id="p1">**</ept>, <bpt id="p2">**</bpt>DataReader<ept id="p2">**</ept>, 또는 다른 관리 되는 개체에는 <ph id="ph3">`Finalize`</ph> 클래스의 메서드로 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.Close">
          <source>In a finalizer, you should only release unmanaged resources that your class owns directly.</source>
          <target state="translated">종료자에서만 클래스에 직접 속한 관리 되지 않는 리소스를 해제 해야 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.Close">
          <source>If your class does not own any unmanaged resources, do not include a <ph id="ph1">`Finalize`</ph> method in your class definition.</source>
          <target state="translated">클래스에 관리되지 않는 리소스가 없는 경우 클래스 정의에 <ph id="ph1">`Finalize`</ph> 메서드를 포함하지 마세요.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.Close">
          <source>For more information, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>가비지 수집<ept id="p1">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.Close">
          <source>The connection-level error that occurred while opening the connection.</source>
          <target state="translated">연결을 여는 동안 발생한 연결 수준 오류입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbConnection.ConnectionString">
          <source>Gets or sets the string used to open the connection.</source>
          <target state="translated">연결을 여는 데 사용되는 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.ConnectionString">
          <source>The connection string used to establish the initial connection.</source>
          <target state="translated">초기 연결을 설정하는 데 사용되는 연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.ConnectionString">
          <source>The exact contents of the connection string depend on the specific data source for this connection.</source>
          <target state="translated">연결 문자열의 정확한 내용은 이 연결의 특정 데이터 소스에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.ConnectionString">
          <source>The default value is an empty string.</source>
          <target state="translated">기본값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.ConnectionString">
          <source>The exact contents of the connection string depend on the specific data source for this connection.</source>
          <target state="translated">연결 문자열의 정확한 내용은 이 연결의 특정 데이터 소스에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.ConnectionString">
          <source>To determine which settings are valid, see the documentation for the specific type of connection that you are using.</source>
          <target state="translated">어떤 설정이 올바른지를 확인 하려면 사용 중인 연결의 특정 형식에 대 한 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbConnection.ConnectionTimeout">
          <source>Gets the time to wait while establishing a connection before terminating the attempt and generating an error.</source>
          <target state="translated">시도를 종료하고 오류를 생성하기 전까지 연결하기 위해 대기할 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.ConnectionTimeout">
          <source>The time (in seconds) to wait for a connection to open.</source>
          <target state="translated">연결이 열리기 전까지 대기할 시간(초)입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.ConnectionTimeout">
          <source>The default value is determined by the specific type of connection that you are using.</source>
          <target state="translated">기본값은 사용하고 있는 특정 형식의 연결에 따라 결정됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.CreateCommand">
          <source>Creates and returns a <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object associated with the current connection.</source>
          <target state="translated">현재 연결과 관련된 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> 개체를 만들고 반환합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.CreateCommand">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.CreateDbCommand">
          <source>Creates and returns a <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object associated with the current connection.</source>
          <target state="translated">현재 연결과 관련된 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> 개체를 만들고 반환합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.CreateDbCommand">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.CreateDbCommand">
          <source>If you are implementing your own connection, override this method to implement the code necessary to create and return a <ph id="ph1">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object.</source>
          <target state="translated">자체 연결을 구현 하는 경우 만들고 반환 하는 데 필요한 코드를 구현 하려면이 메서드를 재정의 한 <ph id="ph1">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbConnection.Database">
          <source>Gets the name of the current database after a connection is opened, or the database name specified in the connection string before the connection is opened.</source>
          <target state="translated">연결이 열린 후에 현재 데이터베이스의 이름을 가져오거나 연결이 열리기 전에 연결 문자열에 지정된 데이터베이스 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.Database">
          <source>The name of the current database or the name of the database to be used after a connection is opened.</source>
          <target state="translated">현재 데이터베이스 이름이나 연결이 열린 후 사용할 데이터베이스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.Database">
          <source>The default value is an empty string.</source>
          <target state="translated">기본값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.Database">
          <source>A connection typically updates this property dynamically when the current database changes.</source>
          <target state="translated">일반적으로 연결을 동적으로이 속성을 업데이트는 현재 데이터베이스가 변경 될 때.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbConnection.DataSource">
          <source>Gets the name of the database server to which to connect.</source>
          <target state="translated">연결할 데이터베이스 서버의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.DataSource">
          <source>The name of the database server to which to connect.</source>
          <target state="translated">연결할 데이터베이스 서버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.DataSource">
          <source>The default value is an empty string.</source>
          <target state="translated">기본값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.DataSource">
          <source>If the connection to the database is closed, the <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.DataSource%2A&gt;</ph> returns whatever is contained in the <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.ConnectionString%2A&gt;</ph> for the <ph id="ph3">`DataSource`</ph> keyword.</source>
          <target state="translated">데이터베이스에 대 한 연결이 닫힐 경우는 <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.DataSource%2A&gt;</ph> 값을 반환에 <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.ConnectionString%2A&gt;</ph> 에 대 한는 <ph id="ph3">`DataSource`</ph> 키워드입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.DataSource">
          <source>If the connection is open and the <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.ConnectionString%2A&gt;</ph> data source keyword's value starts with "&amp;#124;<ph id="ph2">`datadirectory`</ph>&amp;#124;", the property returns whatever is contained in the <ph id="ph3">&lt;xref:System.Data.Common.DbConnection.ConnectionString%2A&gt;</ph> for the <ph id="ph4">`DataSource`</ph> keyword only.</source>
          <target state="translated">연결이 열려 있는 경우와 <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.ConnectionString%2A&gt;</ph> 데이터 소스 키워드 값으로 시작 "&amp;#124;<ph id="ph2">`datadirectory`</ph>&amp;#124;", 속성 값을 반환에 <ph id="ph3">&lt;xref:System.Data.Common.DbConnection.ConnectionString%2A&gt;</ph> 에 대 한는 <ph id="ph4">`DataSource`</ph> 키워드만 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.DataSource">
          <source>If the connection to the database is open, the property returns what the native provider returns for the <ph id="ph1">`DBPROP_INIT_DATASOURCE`</ph>, and if that is empty, the native provider's <ph id="ph2">`DBPROP_DATASOURCENAME`</ph> is returned.</source>
          <target state="translated">속성에 대 한 네이티브 공급자 반환 반환 하는 데이터베이스 연결이 열려 있으면는 <ph id="ph1">`DBPROP_INIT_DATASOURCE`</ph>, 비어 있는 경우 네이티브 공급자 <ph id="ph2">`DBPROP_DATASOURCENAME`</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbConnection.DbProviderFactory">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderFactory" /&gt;</ph> for this <ph id="ph2">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderFactory" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.DbProviderFactory">
          <source>A set of methods for creating instances of a provider's implementation of the data source classes.</source>
          <target state="translated">데이터 소스 클래스의 공급자 구현에 대한 인스턴스를 만드는 데 사용되는 메서드의 집합입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>A reference to an existing <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> in which to enlist.</source>
          <target state="translated">등록할 기존 <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>Enlists in the specified transaction.</source>
          <target state="translated">지정된 트랜잭션에 참여합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>New in ADO.NET 2.0 is support for using the <ph id="ph1">`EnlistTransaction`</ph> method to enlist in a distributed transaction.</source>
          <target state="translated">새 ADO.NET 2.0에서 지원은 사용에 대 한는 <ph id="ph1">`EnlistTransaction`</ph> 메서드를 분산된 트랜잭션에 참여 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>Because it enlists a connection in a <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> instance, <ph id="ph2">`EnlistTransaction`</ph> takes advantage of functionality available in the <ph id="ph3">&lt;xref:System.Transactions&gt;</ph> namespace for managing distributed transactions.</source>
          <target state="translated">연결을 참여 하기 때문에 <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> 인스턴스, <ph id="ph2">`EnlistTransaction`</ph> 에서 사용할 수 있는 기능을 활용는 <ph id="ph3">&lt;xref:System.Transactions&gt;</ph> 분산 트랜잭션 관리를 위한 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>Once a connection is explicitly enlisted in a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes.</source>
          <target state="translated">트랜잭션에 연결을 명시적으로 등록 된, 등록 취소 하거나 첫 번째 트랜잭션이 완료 될 때까지 다른 트랜잭션에 인 리스트 먼 트 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbConnection">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph>의 데이터 소스에 대한 스키마 정보를 반환합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbConnection">
          <source>If the connection is associated with a transaction, executing <ph id="ph1">`GetSchema`</ph> calls may cause some providers to throw an exception.</source>
          <target state="translated">트랜잭션과 관련 된 연결 인지 실행 <ph id="ph1">`GetSchema`</ph> 호출에는 일부 공급자에서 예외가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.GetSchema">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph>의 데이터 소스에 대한 스키마 정보를 반환합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.GetSchema">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that contains schema information.</source>
          <target state="translated">스키마 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.GetSchema">
          <source>If the connection is associated with a transaction, executing <ph id="ph1">`GetSchema`</ph> calls may cause some providers to throw an exception.</source>
          <target state="translated">트랜잭션과 관련 된 연결 인지 실행 <ph id="ph1">`GetSchema`</ph> 호출에는 일부 공급자에서 예외가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.GetSchema(System.String)">
          <source>Specifies the name of the schema to return.</source>
          <target state="translated">반환할 스키마의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.GetSchema(System.String)">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph> using the specified string for the schema name.</source>
          <target state="translated">스키마 이름에 대해 지정된 문자열을 사용하여 이 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph>의 데이터 소스에 대한 스키마 정보를 반환합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.GetSchema(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that contains schema information.</source>
          <target state="translated">스키마 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.GetSchema(System.String)">
          <source>If the connection is associated with a transaction, executing <ph id="ph1">`GetSchema`</ph> calls may cause some providers to throw an exception.</source>
          <target state="translated">트랜잭션과 관련 된 연결 인지 실행 <ph id="ph1">`GetSchema`</ph> 호출에는 일부 공급자에서 예외가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.GetSchema(System.String)">
          <source><ph id="ph1">&lt;paramref name="collectionName" /&gt;</ph> is specified as null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collectionName" /&gt;</ph>이 ull로 지정되었습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
          <source>Specifies the name of the schema to return.</source>
          <target state="translated">반환할 스키마의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
          <source>Specifies a set of restriction values for the requested schema.</source>
          <target state="translated">요청된 스키마에 대한 제한 값의 집합을 지정합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph> using the specified string for the schema name and the specified string array for the restriction values.</source>
          <target state="translated">스키마 이름에 대해 지정된 문자열과 제한 값에 대해 지정된 문자열 배열을 사용하여 이 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph>의 데이터 소스에 대한 스키마 정보를 반환합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that contains schema information.</source>
          <target state="translated">스키마 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
          <source>The <ph id="ph1">`restrictionValues`</ph> parameter can supply <bpt id="p1">*</bpt>n<ept id="p1">*</ept> depth of values, which are specified by the restrictions collection for a specific collection.</source>
          <target state="translated"><ph id="ph1">`restrictionValues`</ph> 매개 변수 제공 <bpt id="p1">*</bpt>n<ept id="p1">*</ept> 수준의 특정 컬렉션에 대 한 제한 컬렉션에서 지정 된 값입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
          <source>In order to set values on a given restriction, and not set the values of other restrictions, you need to set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.</source>
          <target state="translated">특정된 제한에 값을 설정 하 고 다른 제한 값을 설정 하지 않으려면, 앞의 제한을 null 하 고 다음 값을 지정 하려면 원하는 제한에 적절 한 값을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
          <source>An example of this is the "Tables" collection.</source>
          <target state="translated">이 예는 "Table" 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
          <source>If the "Tables" collection has three restrictions (database, owner, and table name) and you want to get back only the tables associated with the owner "Carl", you must pass in the following values at least: null, "Carl".</source>
          <target state="translated">다음 값에서 이상 전달 해야는 "Table" 컬렉션에 세 가지 제한 (데이터베이스, 소유자 및 테이블 이름) "칼" 소유자와 연결 된 테이블에만 다시 확보 하려는 경우: null, "칼"입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
          <source>If a restriction value is not passed in, the default values are used for that restriction.</source>
          <target state="translated">에 제한 값이 전달 되지 않으면, 기본 값은 해당 제한에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
          <source>This is the same mapping as passing in null, which is different from passing in an empty string for the parameter value.</source>
          <target state="translated">이 null 전달 하는 대로 동일한 매핑을 매개 변수 값에 대 한 빈 문자열을 전달과에서는 다릅니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
          <source>In that case, the empty string ("") is considered to be the value for the specified parameter.</source>
          <target state="translated">그러면 빈 문자열 ("")의 지정된 된 매개 변수 값으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
          <source>If the connection is associated with a transaction, executing <ph id="ph1">`GetSchema`</ph> calls may cause some providers to throw an exception.</source>
          <target state="translated">트랜잭션과 관련 된 연결 인지 실행 <ph id="ph1">`GetSchema`</ph> 호출에는 일부 공급자에서 예외가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
          <source><ph id="ph1">&lt;paramref name="collectionName" /&gt;</ph> is specified as null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collectionName" /&gt;</ph>이 ull로 지정되었습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.StateChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.StateChangeEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.Common.DbConnection.StateChange" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Data.Common.DbConnection.StateChange" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.Open">
          <source>Opens a database connection with the settings specified by the <ph id="ph1">&lt;see cref="P:System.Data.Common.DbConnection.ConnectionString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Common.DbConnection.ConnectionString" /&gt;</ph>에서 지정하는 설정을 사용하여 데이터베이스 연결을 엽니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.Open">
          <source>This method must be overridden with user-defined behavior.</source>
          <target state="translated">사용자 정의 동작으로이 메서드를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.Open">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Open%2A?displayProperty=nameWithType&gt;</ph> will throw an exception if called again without first being closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Open%2A?displayProperty=nameWithType&gt;</ph> 없이 메서드를 호출 하면 예외가 throw 됩니다 먼저 닫는 중입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbConnection">
          <source>An error occurred while opening the connection.</source>
          <target state="translated">연결을 여는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbConnection">
          <source>This method implements an asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.Common.DbConnection.Open" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;see cref="M:System.Data.Common.DbConnection.Open" /&gt;</ph>의 비동기 버전을 구현합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbConnection">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">비동기 프로그래밍에 대 한 자세한 내용은 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, 참조 <bpt id="p1">[</bpt>비동기 프로그래밍<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.OpenAsync">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.Common.DbConnection.Open" /&gt;</ph>, which opens a database connection with the settings specified by the <ph id="ph2">&lt;see cref="P:System.Data.Common.DbConnection.ConnectionString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.Common.DbConnection.Open" /&gt;</ph>으로 지정된 설정을 사용하여 데이터베이스 연결을 여는 <ph id="ph2">&lt;see cref="P:System.Data.Common.DbConnection.ConnectionString" /&gt;</ph>의 비동기 버전입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.OpenAsync">
          <source>This method invokes the virtual method <ph id="ph1">&lt;see cref="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)" /&gt;</ph> with CancellationToken.None.</source>
          <target state="translated">이 메서드는 CancellationToken.None을 사용하여 가상 메서드 <ph id="ph1">&lt;see cref="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)" /&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.OpenAsync">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.OpenAsync">
          <source>After calling <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.OpenAsync%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> must return <ph id="ph3">&lt;xref:System.Data.ConnectionState.Connecting&gt;</ph> until the returned <ph id="ph4">&lt;xref:System.Threading.Tasks.Task&gt;</ph> is completed.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.OpenAsync%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> 반환 해야 합니다 <ph id="ph3">&lt;xref:System.Data.ConnectionState.Connecting&gt;</ph> 반환 될 때까지 <ph id="ph4">&lt;xref:System.Threading.Tasks.Task&gt;</ph> 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.OpenAsync">
          <source>Then, if the connection was successful, <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> must return <ph id="ph2">&lt;xref:System.Data.ConnectionState.Open&gt;</ph>.</source>
          <target state="translated">그런 다음 연결이 성공적 이면 <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> 반환 해야 <ph id="ph2">&lt;xref:System.Data.ConnectionState.Open&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.OpenAsync">
          <source>If the connection fails, <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> must return <ph id="ph2">&lt;xref:System.Data.ConnectionState.Closed&gt;</ph>.</source>
          <target state="translated">연결에 실패 하면 <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> 반환 해야 <ph id="ph2">&lt;xref:System.Data.ConnectionState.Closed&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.OpenAsync">
          <source>A call to <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.Close%2A&gt;</ph> will attempt to cancel or close the corresponding <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.OpenAsync%2A&gt;</ph> call.</source>
          <target state="translated">에 대 한 호출 <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.Close%2A&gt;</ph> 취소 하거나 해당 닫습니다는 하려고 <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.OpenAsync%2A&gt;</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.OpenAsync">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">비동기 프로그래밍에 대 한 자세한 내용은 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, 참조 <bpt id="p1">[</bpt>비동기 프로그래밍<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">취소 명령입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.Common.DbConnection.Open" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.Common.DbConnection.Open" /&gt;</ph>의 비동기 버전입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>Providers should override with an appropriate implementation.</source>
          <target state="translated">공급자는 적절한 구현을 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>The cancellation token can optionally be honored.</source>
          <target state="translated">취소 토큰은 선택적으로 적용될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>The default implementation invokes the synchronous <ph id="ph1">&lt;see cref="M:System.Data.Common.DbConnection.Open" /&gt;</ph> call and returns a completed task.</source>
          <target state="translated">기본 구현은 동기 <ph id="ph1">&lt;see cref="M:System.Data.Common.DbConnection.Open" /&gt;</ph> 호출을 호출하고 완료된 작업을 반환합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>The default implementation will return a cancelled task if passed an already cancelled cancellationToken.</source>
          <target state="translated">기본 구현은 이미 취소된 cancellationToken을 전달하는 경우 취소된 작업을 반환합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>Exceptions thrown by Open will be communicated via the returned Task Exception property.</source>
          <target state="translated">Open에서 throw되는 예외는 반환된 Task Exception 속성을 통해 전달됩니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>Do not invoke other methods and properties of the <ph id="ph1">&lt;see langword="DbConnection" /&gt;</ph> object until the returned Task is complete.</source>
          <target state="translated">반환된 작업이 완료될 때까지 <ph id="ph1">&lt;see langword="DbConnection" /&gt;</ph> 개체의 다른 메서드 및 속성을 호출하지 마십시오.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>After calling <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.OpenAsync%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> must return <ph id="ph3">&lt;xref:System.Data.ConnectionState.Connecting&gt;</ph> until the returned <ph id="ph4">&lt;xref:System.Threading.Tasks.Task&gt;</ph> is completed.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.OpenAsync%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> 반환 해야 합니다 <ph id="ph3">&lt;xref:System.Data.ConnectionState.Connecting&gt;</ph> 반환 될 때까지 <ph id="ph4">&lt;xref:System.Threading.Tasks.Task&gt;</ph> 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>Then, if the connection was successful, <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> must return <ph id="ph2">&lt;xref:System.Data.ConnectionState.Open&gt;</ph>.</source>
          <target state="translated">그런 다음 연결이 성공적 이면 <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> 반환 해야 <ph id="ph2">&lt;xref:System.Data.ConnectionState.Open&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>If the connection fails, <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> must return <ph id="ph2">&lt;xref:System.Data.ConnectionState.Closed&gt;</ph>.</source>
          <target state="translated">연결에 실패 하면 <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.State%2A&gt;</ph> 반환 해야 <ph id="ph2">&lt;xref:System.Data.ConnectionState.Closed&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>A call to <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.Close%2A&gt;</ph> will attempt to cancel or close the corresponding <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.OpenAsync%2A&gt;</ph> call.</source>
          <target state="translated">에 대 한 호출 <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.Close%2A&gt;</ph> 취소 하거나 해당 닫습니다는 하려고 <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.OpenAsync%2A&gt;</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">비동기 프로그래밍에 대 한 자세한 내용은 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, 참조 <bpt id="p1">[</bpt>비동기 프로그래밍<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbConnection.ServerVersion">
          <source>Gets a string that represents the version of the server to which the object is connected.</source>
          <target state="translated">개체가 연결되는 서버 버전을 나타내는 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.ServerVersion">
          <source>The version of the database.</source>
          <target state="translated">데이터베이스의 버전입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.ServerVersion">
          <source>The format of the string returned depends on the specific type of connection you are using.</source>
          <target state="translated">반환되는 문자열 형식은 사용하고 있는 특정 형식의 연결에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbConnection.ServerVersion">
          <source><ph id="ph1">&lt;see cref="P:System.Data.Common.DbConnection.ServerVersion" /&gt;</ph> was called while the returned Task was not completed and the connection was not opened after a call to <ph id="ph2">&lt;see cref="Overload:System.Data.Common.DbConnection.OpenAsync" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="Overload:System.Data.Common.DbConnection.OpenAsync" /&gt;</ph> 호출 후에 반환된 작업이 완료되지 않았고 연결이 열려 있지 않은 상태에서 <ph id="ph1">&lt;see cref="P:System.Data.Common.DbConnection.ServerVersion" /&gt;</ph>이 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbConnection.State">
          <source>Gets a string that describes the state of the connection.</source>
          <target state="translated">연결의 상태를 설명하는 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.State">
          <source>The state of the connection.</source>
          <target state="translated">연결의 상태입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbConnection.State">
          <source>The format of the string returned depends on the specific type of connection you are using.</source>
          <target state="translated">반환되는 문자열 형식은 사용하고 있는 특정 형식의 연결에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="E:System.Data.Common.DbConnection.StateChange">
          <source>Occurs when the state of the event changes.</source>
          <target state="translated">이벤트 상태가 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.Common.DbConnection.StateChange">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.StateChange&gt;</ph> event occurs when the state of the event changes from closed to opened, or opened to closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbConnection.StateChange&gt;</ph> 상태가 닫힘 상태에서 이벤트 변경 열거나를 closed로 열 때 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbConnection">
          <source>Begins a database transaction.</source>
          <target state="translated">데이터베이스 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
          <source>Begins a database transaction.</source>
          <target state="translated">데이터베이스 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
          <source>An object that represents the new transaction.</source>
          <target state="translated">새 트랜잭션을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnection&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbConnection&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbConnection&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.IDbConnection&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.IDbConnection.BeginTransaction%2A&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Data.IDbConnection.BeginTransaction%2A&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
          <source>Begins a database transaction with the specified <ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> value.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> 값을 사용하여 데이터베이스 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
          <source>An object that represents the new transaction.</source>
          <target state="translated">새 트랜잭션을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.IDbConnection.BeginTransaction%2A&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Data.IDbConnection.BeginTransaction%2A&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
          <source>Creates and returns a <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object that is associated with the current connection.</source>
          <target state="translated">현재 연결과 관련된 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> 개체를 만들고 반환합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object that is associated with the connection.</source>
          <target state="translated">연결과 관련된 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Commands and Parameters<ept id="p1">](~/docs/framework/data/adonet/commands-and-parameters.md)</ept> and <ph id="ph1">&lt;xref:System.Data.IDbConnection.CreateCommand%2A&gt;</ph>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>명령 및 매개 변수<ept id="p1">](~/docs/framework/data/adonet/commands-and-parameters.md)</ept> 및 <ph id="ph1">&lt;xref:System.Data.IDbConnection.CreateCommand%2A&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>