<Type Name="DbDataAdapter" FullName="System.Data.Common.DbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="30ed8e7c4e5ab99d6e4577e5d8441402a753c427" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37683793" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable, System.Data.IDbDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataAdapter extends System.Data.Common.DataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataAdapter&#xA;Inherits DataAdapter&#xA;Implements ICloneable, IDbDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataAdapter abstract : System::Data::Common::DataAdapter, ICloneable, System::Data::IDbDataAdapter" />
  <TypeSignature Language="F#" Value="type DbDataAdapter = class&#xA;    inherit DataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="49938-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span>
      <span class="sxs-lookup">
        <span data-stu-id="49938-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span>
      </span>
      <span data-ttu-id="49938-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span>
      <span class="sxs-lookup">
        <span data-stu-id="49938-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-103"><xref:System.Data.Common.DbDataAdapter> 클래스에서 상속 합니다 <xref:System.Data.Common.DataAdapter> 클래스를 구현 합니다 <xref:System.Data.IDbDataAdapter> 인터페이스.</span><span class="sxs-lookup"><span data-stu-id="49938-103">The <xref:System.Data.Common.DbDataAdapter> class inherits from the <xref:System.Data.Common.DataAdapter> class and implements the <xref:System.Data.IDbDataAdapter> interface.</span></span> <span data-ttu-id="49938-104">클래스를 구현 하는 데 도움이 된 **DataAdapter** 관계형 데이터베이스를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-104">It helps a class implement a **DataAdapter** designed for use with a relational database.</span></span>  
  
 <span data-ttu-id="49938-105">응용 프로그램의 인스턴스를 만들지 않습니다는 <xref:System.Data.Common.DbDataAdapter> 클래스를 직접 하지만에서 상속 된 클래스의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="49938-105">An application does not create an instance of the <xref:System.Data.Common.DbDataAdapter> class directly, but creates an instance of a class that inherits from it.</span></span>  
  
 <span data-ttu-id="49938-106">상속 된 클래스 <xref:System.Data.Common.DbDataAdapter> 상속 된 멤버를 구현 해야 하며 일반적으로 공급자 특정 기능을 추가 하기 위한 추가 멤버를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-106">Classes that inherit <xref:System.Data.Common.DbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="49938-107">예를 들어,를 <xref:System.Data.Common.DbDataAdapter> 클래스를 정의 합니다 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 속성 및 <xref:System.Data.Common.DbDataAdapter> 의 8 개 오버 로드를 정의 하는 클래스를 <xref:System.Data.IDataAdapter.Fill%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="49938-107">For example, the <xref:System.Data.Common.DbDataAdapter> class defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> class defines eight overloads of the <xref:System.Data.IDataAdapter.Fill%2A> method.</span></span> <span data-ttu-id="49938-108">차례로 <xref:System.Data.OleDb.OleDbDataAdapter> 클래스를 상속 합니다 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 메서드를도 추가 두 오버 로드를 정의 하 고 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 매개 변수로 ADO 레코드 집합 개체를 사용 하는.</span><span class="sxs-lookup"><span data-stu-id="49938-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> that take an ADO Recordset object as a parameter.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="49938-109">
        <para>상속 하는 경우는 <see cref="T:System.Data.Common.DbDataAdapter" /> 클래스인 것이 좋습니다 다음 생성자를 구현 하는: <list type="table"><listheader><term> 항목 </term><description> 설명을 </description></listheader><item><term> *Prv*DataAdapter() </term><description> 의 새 인스턴스를 초기화 합니다 * Prv * DataAdapter 클래스입니다.  </description></item><item><term> * Prv * DataAdapter (* Prv * 명령을 * selectCommand *) </term><description> 의 새 인스턴스를 초기화 합니다 * Prv * 지정 된 SQL SELECT DataAdapter 클래스 문입니다.  </description></item><item><term> * Prv * DataAdapter (string * selectCommandText *, string * selectConnectionString *) </term><description> 의 새 인스턴스를 초기화 합니다 * Prv * DataAdapter 클래스 SQL SELECT 문 및 연결 문자열  </description></item><item><term> * Prv * DataAdapter (string * selectCommandText * * Prv * 연결 * selectConnection *) </term><description> 의 새 인스턴스를 초기화 합니다 * Prv * DataAdapter SQL SELECT 문 사용 하 여 클래스 및 * Prv * 연결 개체입니다.  </description></item></list>  .NET Framework 데이터 공급자의 일관성 수준을 올릴 폼에서 상속 하는 클래스 이름을 지정 해야 * Prv * DataAdapter, 여기서 * Prv *는 특정.NET Framework 데이터 공급자 네임 스페이스의 모든 클래스에 지정 된 일관 된 접두사입니다. 예를 들어, "Sql"은의 접두사를 <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> **System.Data.SqlClient** 네임 스페이스의 클래스입니다.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="49938-109">
          <para>When you inherit from the <see cref="T:System.Data.Common.DbDataAdapter" /> class, we recommend that you implement the following constructors:  <list type="table"><listheader><term> Item  </term><description> Description  </description></listheader><item><term> *Prv*DataAdapter()  </term><description> Initializes a new instance of the *Prv*DataAdapter class.  </description></item><item><term> *Prv*DataAdapter(*Prv*Command *selectCommand*)  </term><description> Initializes a new instance of the *Prv*DataAdapter class with the specified SQL SELECT statement.  </description></item><item><term> *Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)  </term><description> Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a connection string.  </description></item><item><term> *Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)  </term><description> Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a *Prv*Connection object.  </description></item></list>  To promote consistency among .NET Framework data providers, you should name the inheriting class in the form *Prv*DataAdapter, where *Prv* is the uniform prefix given to all classes in a specific .NET Framework data provider namespace. For example, "Sql" is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the **System.Data.SqlClient** namespace.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49938-110">Initializes a new instance of a <see langword="DataAdapter" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-110">Initializes a new instance of a <see langword="DataAdapter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49938-111">Initializes a new instance of a **DataAdapter** class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-111">Initializes a new instance of a **DataAdapter** class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-112">인스턴스를 만들면 <xref:System.Data.Common.DbDataAdapter>, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-112">When you create an instance of <xref:System.Data.Common.DbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="49938-113">속성</span><span class="sxs-lookup"><span data-stu-id="49938-113">Properties</span></span>|<span data-ttu-id="49938-114">초기 값</span><span class="sxs-lookup"><span data-stu-id="49938-114">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.IDbDataAdapter.SelectCommand%2A>|<span data-ttu-id="49938-115">새 <xref:System.Data.IDbCommand>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-115">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.InsertCommand%2A>|<span data-ttu-id="49938-116">새 <xref:System.Data.IDbCommand>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-116">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>|<span data-ttu-id="49938-117">새 <xref:System.Data.IDbCommand>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-117">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>|<span data-ttu-id="49938-118">새 <xref:System.Data.IDbCommand>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-118">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="49938-119">속성에 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-119">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbDataAdapter : System.Data.Common.DbDataAdapter -&gt; System.Data.Common.DbDataAdapter" Usage="new System.Data.Common.DbDataAdapter adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <span data-ttu-id="49938-120">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-120">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-121">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-121">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-122">이 오버 로드는 <xref:System.Data.Common.DbDataAdapter> 생성자 사용 하도록 설계 된.NET Framework 데이터 공급자가 복제 구현에서 사용 하 여 비슷한 생성자를 구현 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="49938-122">This overload of the <xref:System.Data.Common.DbDataAdapter> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected virtual int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddToBatch : System.Data.IDbCommand -&gt; int&#xA;override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="dbDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="49938-123">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-123">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-124">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-124">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-125">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-125">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-126"><xref:System.Data.Common.DbDataAdapter>,이 메서드는 throw <xref:System.NotSupportedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-126">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="49938-127">상속한 클래스 <xref:System.Data.Common.DbDataAdapter> 일괄 처리에 대 한 지원을 제공 하려면이 메서드를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-127">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="49938-128">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-128">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-129">
            <para>이 메서드는 보호 되 고.NET Framework 데이터 공급자가 사용 하도록 설계 되었습니다.  클래스에서 상속 되는 경우 <see cref="T:System.Data.Common.DbDataAdapter" /> 클래스 명령 일괄 처리에 추가할 수 있도록 하려면이 메서드를 재정의 하는 일괄 처리를 지원 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-129">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to add a command to a batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected virtual void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearBatch();" />
      <MemberSignature Language="F#" Value="abstract member ClearBatch : unit -&gt; unit&#xA;override this.ClearBatch : unit -&gt; unit" Usage="dbDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49938-130">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-130">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-131"><xref:System.Data.Common.DbDataAdapter>,이 메서드는 throw <xref:System.NotSupportedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-131">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="49938-132">상속한 클래스 <xref:System.Data.Common.DbDataAdapter> 일괄 처리에 대 한 지원을 제공 하려면이 메서드를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-132">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="49938-133">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-133">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-134">
            <para>이 메서드는 보호 되 고.NET Framework 데이터 공급자가 사용 하도록 설계 되었습니다.  클래스에서 상속 되는 경우 <see cref="T:System.Data.Common.DbDataAdapter" /> 클래스 일괄 처리에서 모든 명령을 제거 하는 사용자를 허용 하려면이 메서드를 재정의 하는 일괄 처리를 지원 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-134">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to remove all commands from a batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs&#xA;override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="dbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">
          <span data-ttu-id="49938-135">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-135">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="49938-136">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-136">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          </span>
        </param>
        <param name="statementType">
          <span data-ttu-id="49938-137">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-137">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="49938-138">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-138">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-139">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-139">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-140">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-140">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-141">
            <para>재정의 하는 경우 <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> 메서드.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-141">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs&#xA;override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="dbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">
          <span data-ttu-id="49938-142">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-142">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="49938-143">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-143">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          </span>
        </param>
        <param name="statementType">
          <span data-ttu-id="49938-144">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-144">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="49938-145">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-145">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-146">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-146">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-147">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-147">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-148">
            <para>재정의 하는 경우 <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> 메서드.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-148">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultSourceTableName">
      <MemberSignature Language="C#" Value="public const string DefaultSourceTableName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultSourceTableName" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultSourceTableName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultSourceTableName;" />
      <MemberSignature Language="F#" Value="val mutable DefaultSourceTableName : string" Usage="System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49938-149">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-149">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-150">"Table"가 사용 된 기본 이름을 <xref:System.Data.Common.DataAdapter> 테이블 매핑에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-150">"Table" is the default name used by the <xref:System.Data.Common.DataAdapter> object for table mappings.</span></span>  
  
 <span data-ttu-id="49938-151"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> 응용 프로그램에 사용할 테이블 매핑을 추가 하는 경우 <xref:System.Data.Common.DbDataAdapter.Fill%2A>, 하지만 지정 하지 않습니다는 <xref:System.Data.DataTable> 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-151"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> is when an application adds a table mapping to be used with <xref:System.Data.Common.DbDataAdapter.Fill%2A>, but does not specify a <xref:System.Data.DataTable> name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ DeleteCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49938-152">Gets or sets a command for deleting records from the data set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-152">Gets or sets a command for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49938-153">
            <see cref="T:System.Data.IDbCommand" /> 중에 사용 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 데이터 집합의 삭제 된 행에 대 한 데이터 원본에서 레코드를 삭제 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-153">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-154">하는 동안 <xref:System.Data.Common.DbDataAdapter.Update%2A>이면이 속성은 설정 되지 않으며 기본 키 정보에 있으면 합니다 <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> 자동으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-154">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49938-155">다음 예제에서는 파생된 클래스 <xref:System.Data.OleDb.OleDbDataAdapter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-155">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="49938-156">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-156">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-157">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-157">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteBatch : unit -&gt; int&#xA;override this.ExecuteBatch : unit -&gt; int" Usage="dbDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49938-158">Executes the current batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-158">Executes the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-159">The return value from the last command in the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-159">The return value from the last command in the batch.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-160"><xref:System.Data.Common.DbDataAdapter>,이 메서드는 throw <xref:System.NotSupportedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-160">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="49938-161">상속한 클래스 <xref:System.Data.Common.DbDataAdapter> 일괄 처리에 대 한 지원을 제공 하려면이 메서드를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-161">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-162">
            <para>이 메서드는 보호 되 고.NET Framework 데이터 공급자가 사용 하도록 설계 되었습니다.  클래스에서 상속 되는 경우 <see cref="T:System.Data.Common.DbDataAdapter" /> 클래스 사용자가 일괄 처리를 실행 하도록 허용 하려면이 메서드를 재정의 하는 일괄 처리를 지원 합니다. 이 메서드의 구현을 일괄 처리를 어댑터에 명령을 결합 되어 일괄 처리를 실행 하 고 일괄 처리의 반환 값을 반환 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-162">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch. An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49938-163">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-163">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public override int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Fill dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="49938-164">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-164">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-165">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-165">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-166">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-166">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="49938-167">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-167">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-168"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 메서드는 SELECT 문을 사용 하 여 데이터 원본에서 데이터를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-168">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="49938-169"><xref:System.Data.IDbConnection> 선택 명령과 사용 하 여 연결 된 개체는 유효 해야 합니다. 하지만 열려 있이 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-169">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="49938-170">경우는 <xref:System.Data.IDbConnection> 닫은 후 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 은 호출,이 열어 데이터를 검색 하 고 닫으면 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-170">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="49938-171">연결 하기 전에 열려 있으면 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 는 호출을 열린 상태로 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-171">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="49938-172">오류 또는 예외가 발생 하는 경우 데이터 테이블을 채우는 동안 오류가 발생 하기 전에 추가 행은 데이터 테이블에 남아 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-172">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="49938-173">작업의 나머지 부분을 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-173">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="49938-174">명령에서 모든 행을 반환 하지 않는, 테이블에 추가 됩니다는 <xref:System.Data.DataSet>, 예외가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-174">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="49938-175">경우는 <xref:System.Data.Common.DbDataAdapter> 개체를 채우는 동안 중복 된 열을 발견 한 <xref:System.Data.DataTable>, 패턴을 사용 하 고 후속 열의 이름을 생성 "*columnname*1","*columnname*2" " *columnname*3", 및 등입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-175">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="49938-176">놓 이기는 들어오는 데이터에 명명 되지 않은 열을 포함 하는 경우는 <xref:System.Data.DataSet> "column1", "Column2" 등에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-176">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="49938-177">지정 된 쿼리가 여러 결과 반환 하는 경우 결과 집합 쿼리를 반환 하는 각 행에 대해 별도 테이블에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-177">When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</span></span> <span data-ttu-id="49938-178">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 값을 추가 하 여 이름이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-178">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="49938-179">만들어지므로 테이블 행을 반환 하지 않는 쿼리에 대 한 select 쿼리 뒤에 삽입 쿼리를 처리 하는 경우, select 쿼리에 대해 생성 된 테이블 생성 되는 첫 번째 테이블 이기 때문에 "Table" 이라는 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-179">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</span></span> <span data-ttu-id="49938-180">열 및 테이블 이름을 사용 하 여 응용 프로그램은 이러한 명명 패턴을 사용 하 여 충돌 하지 않도록 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-180">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="49938-181">채우는 SELECT 문을 사용 하는 경우는 <xref:System.Data.DataSet> 여러 결과가 반환 일괄 처리 SQL 문과 같은 결과 중 하나에 오류가 포함 되어 있는 경우 모든 후속 결과 건너뛰고에 추가 되지 않습니다는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-181">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="49938-182">후속을 사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 내용 새로 고침에 대 한 호출을 <xref:System.Data.DataSet>, 두 조건이 충족 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-182">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="49938-183">SQL 문을 처음 채우는 데 사용 되는 일치 해야 합니다 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-183">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="49938-184">합니다 **키** 열 정보 표시 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-184">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="49938-185">기본 키 정보가 있는 경우 중복 행 조정 되며 한 번만 표시에 <xref:System.Data.DataTable> 에 해당 하는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-185">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-186">통해 기본 키 정보를 설정할 수 있습니다 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, 지정 하 여는 <xref:System.Data.DataTable.PrimaryKey%2A> 의 속성을 <xref:System.Data.DataTable>, 하거나 설정 하 여를 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 속성을 `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="49938-186">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="49938-187">`SelectCommand`가 OUTER JOIN의 결과를 반환하면 `DataAdapter`는 결과 <xref:System.Data.DataTable.PrimaryKey%2A>에 대해 <xref:System.Data.DataTable> 값을 설정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-187">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="49938-188">중복 행을 올바르게 확인할 수 있도록 기본 키를 명시적으로 정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-188">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="49938-189">자세한 내용은 [기본 키 정의](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-189">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-190">구현의 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-190">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="49938-191">사용 하 여 여러 결과 대 한 스키마 정보를 검색할 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 사용 하 여는 <xref:System.Data.MissingSchemaAction> 로 `AddWithKey`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-191">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Fill dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="49938-192">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-192">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-193">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-193">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-194">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-194">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="49938-195">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-195">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-196">합니다 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 연결 된 지정 된 SELECT 문을 사용 하 여 데이터 원본에서 행을 검색 하는 메서드 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-196">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="49938-197">SELECT 문과 사용 하 여 연결 된 연결 개체는 유효 해야 합니다. 하지만 열려 있이 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-197">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="49938-198">전에 연결이 닫히면 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 는 데이터를 검색 하려면을 열고 다음 닫는 하는를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-198">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="49938-199">연결 하기 전에 열려 있으면 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 는 호출을 열린 상태로 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-199">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="49938-200"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 작업이 대상에 행 추가 <xref:System.Data.DataTable> 개체를 <xref:System.Data.DataSet>만들기는 <xref:System.Data.DataTable> 경우 이미 없는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-200">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="49938-201">만들면 <xref:System.Data.DataTable> 개체는 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 작업은 일반적으로 열 이름 메타 데이터만 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="49938-201">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="49938-202">그러나 경우 합니다 <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> 속성이 `AddWithKey`, 적절 한 기본 키와 제약 조건도 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="49938-202">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="49938-203">경우는 <xref:System.Data.Common.DbDataAdapter> 에서 중복 열을 채우는 동안는 <xref:System.Data.DataTable>, 패턴을 사용 하 여 후속 열에 대 한 이름을 생성 "*columnname*1", "*columnname*2", "*columnname*3", 및 등입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-203">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="49938-204">놓 이기는 들어오는 데이터에 명명 되지 않은 열을 포함 하는 경우는 <xref:System.Data.DataSet> "column1", "Column2" 등에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-204">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="49938-205">여러 결과 집합에 추가 될 때를 <xref:System.Data.DataSet> 각 결과 집합을 별도 테이블에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-205">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span>  
  
 <span data-ttu-id="49938-206">오버 로드 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 를 사용 하는 `DataTable` 대로 매개 변수 에서만 첫 번째 결과 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="49938-206">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="49938-207">오버 로드를 사용 하 여 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 를 사용 하는 `DataSet` 여러 결과를 얻으려면 매개 변수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-207">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="49938-208"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 메서드 시나리오를 지원 합니다. 여기서는 <xref:System.Data.DataSet> 여러 개 포함 된 <xref:System.Data.DataTable> 개체 이름이 대/소문자만 다른 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-208">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="49938-209">이러한 상황에서는 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 해당 테이블을 찾을 대/소문자 구분 비교를 수행 하 고 정확히 일치 하는 경우 새 테이블을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="49938-209">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="49938-210">다음 C# 코드는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49938-210">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
 dataset.Tables.Add("AAA");  
 adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
    adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="49938-211">경우 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 라고 하며 <xref:System.Data.DataSet> 하나만 포함 되어 <xref:System.Data.DataTable> 이름이 다른 경우에 의해서만 <xref:System.Data.DataTable> 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-211">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="49938-212">이 시나리오에서는 비교는 대/소문자 구분.</span><span class="sxs-lookup"><span data-stu-id="49938-212">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="49938-213">다음 C# 코드는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49938-213">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="49938-214">사용할 수는 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 메서드를 여러 번에 동일한 <xref:System.Data.DataTable>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-214">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="49938-215">기본 키가 있는 경우 들어오는 행이 이미 존재 하는 일치 하는 행과 병합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-215">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="49938-216">들어오는 행에 추가 된 기본 키가 없으면는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-216">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="49938-217">`SelectCommand`가 OUTER JOIN의 결과를 반환하면 `DataAdapter`는 결과 <xref:System.Data.DataTable.PrimaryKey%2A>에 대해 <xref:System.Data.DataTable> 값을 설정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-217">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="49938-218">중복 행을 올바르게 확인할 수 있도록 기본 키를 명시적으로 정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-218">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="49938-219">자세한 내용은 [기본 키 정의](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-219">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-220">구현의 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 고 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> .NET Framework 데이터 공급자는 결과 대해서만 첫 번째 스키마 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-220">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="49938-221">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-221">The source table is invalid.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-222">
            <para>이 오버 로드는 <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> 메서드는 보호 되므로.NET Framework 데이터 공급자가 사용 하도록 설계 되었습니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-222">
              <para>This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="49938-223">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-223">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="49938-224">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-224">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-225">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-225">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-226">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-226">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="49938-227">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-227">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-228"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 메서드는 SELECT 문을 사용 하 여 데이터 원본에서 데이터를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-228">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="49938-229"><xref:System.Data.IDbConnection> 선택 명령과 사용 하 여 연결 된 개체는 유효 해야 합니다. 하지만 열려 있이 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-229">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="49938-230">경우는 <xref:System.Data.IDbConnection> 닫은 후 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 는 데이터를 검색 하려면을 열고 다음 닫는 하는를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-230">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="49938-231">연결 하기 전에 열려 있으면 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 는 호출을 열린 상태로 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-231">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="49938-232">명령에서 모든 행을 반환 하지 않는, 테이블에 추가 됩니다는 <xref:System.Data.DataSet>, 예외가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-232">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="49938-233">경우는 <xref:System.Data.Common.DbDataAdapter> 개체를 채우는 동안 중복 된 열을 발견을 <xref:System.Data.DataTable>, 패턴 "columnname1", "columnname2", "columnname3", 및 등을 사용 하 여 후속 열에 대 한 이름을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-233">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="49938-234">놓 이기는 들어오는 데이터에 명명 되지 않은 열을 포함 하는 경우는 <xref:System.Data.DataSet> "column1", "Column2" 등에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-234">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="49938-235">지정 된 쿼리가 여러 결과 반환 하는 경우 각 결과 집합을 별도 테이블에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-235">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="49938-236">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 값을 추가 하 여 이름이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-236">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="49938-237">테이블이 만들어지면 행을 반환 하지 않는 쿼리에 대 한 select 쿼리 뒤에 삽입 쿼리를 처리 하는 경우 이후 select 쿼리에 대해 생성 된 테이블은 수 "Table" 이라는, 생성 된 첫 번째 테이블 이기 때문에.</span><span class="sxs-lookup"><span data-stu-id="49938-237">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="49938-238">열 및 테이블 이름을 사용 하 여 응용 프로그램은 이러한 명명 패턴을 사용 하 여 충돌 하지 않도록 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-238">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="49938-239"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 메서드 시나리오를 지원 합니다. 여기서는 <xref:System.Data.DataSet> 여러 개 포함 된 <xref:System.Data.DataTable> 개체 이름이 대/소문자만 다른 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-239">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="49938-240">이러한 상황에서는 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 해당 테이블을 찾을 대/소문자 구분 비교를 수행 하 고 정확히 일치 하는 경우 새 테이블을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="49938-240">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="49938-241">다음 C# 코드는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49938-241">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="49938-242">경우 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 라고 하며 <xref:System.Data.DataSet> 하나만 포함 되어 <xref:System.Data.DataTable> 이름이 다른 경우에 의해서만 <xref:System.Data.DataTable> 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-242">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="49938-243">이 시나리오에서는 비교는 대/소문자 구분.</span><span class="sxs-lookup"><span data-stu-id="49938-243">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="49938-244">다음 C# 코드는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49938-244">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="49938-245">오류 또는 예외가 발생 하는 경우 데이터 테이블을 채우는 동안 오류가 발생 하기 전에 추가 행은 데이터 테이블에 남아 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-245">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="49938-246">작업의 나머지 부분을 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-246">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="49938-247">채우는 SELECT 문을 사용 하는 경우는 <xref:System.Data.DataSet> 일괄 처리 SQL 문 다음에 유의 같은 여러 결과 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-247">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="49938-248">모든 후속 결과 생략 되 고 추가할 없습니다 오류가 있으면 결과 중 하나는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-248">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="49938-249">후속을 사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 내용 새로 고침에 대 한 호출을 <xref:System.Data.DataSet>, 두 조건이 충족 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-249">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="49938-250">SQL 문을 처음 채우는 데 사용 되는 일치 해야 합니다 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-250">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="49938-251">합니다 **키** 열 정보 표시 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-251">The **Key** column information must be present.</span></span> <span data-ttu-id="49938-252">기본 키 정보가 있는 경우 중복 행 조정 되며 한 번만 표시에 <xref:System.Data.DataTable> 에 해당 하는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-252">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-253">통해 기본 키 정보를 설정할 수 있습니다 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, 지정 하 여는 <xref:System.Data.DataTable.PrimaryKey%2A> 의 속성을 <xref:System.Data.DataTable>, 하거나 설정 하 여를 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 속성을 `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="49938-253">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="49938-254">`SelectCommand`가 OUTER JOIN의 결과를 반환하면 `DataAdapter`는 결과 <xref:System.Data.DataTable.PrimaryKey%2A>에 대해 <xref:System.Data.DataTable> 값을 설정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-254">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="49938-255">중복 행을 올바르게 확인할 수 있도록 기본 키를 명시적으로 정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-255">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="49938-256">자세한 내용은 [기본 키 정의](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-256">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-257">구현의 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-257">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="49938-258">사용 하 여 여러 결과 대 한 스키마 정보를 검색할 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 사용 하 여는 <xref:System.Data.MissingSchemaAction> 로 `AddWithKey`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-258">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49938-259">다음 예제에서는 파생된 클래스 <xref:System.Data.OleDb.OleDbDataAdapter>를 입력 하는 <xref:System.Data.DataSet> categories 테이블에서 행을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-259">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with rows from the categories table.</span></span> <span data-ttu-id="49938-260">이 예에서는 만들었다고 가정를 <xref:System.Data.OleDb.OleDbDataAdapter> 및 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-260">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="49938-261">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-261">The source table is invalid.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-262">
            <para>재정의 하는 경우 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 메서드.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-262">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDataReader ^ dataReader);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDataReader -&gt; int" Usage="dbDataAdapter.Fill (dataTable, dataReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="dataTable">To be added.</param>
        <param name="dataReader">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="49938-263">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-263">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="49938-264">The SQL SELECT statement used to retrieve rows from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-264">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="49938-265">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-265">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-266">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-266">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-267">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-267">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="49938-268">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-268">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-269">합니다 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 연결 된 지정 된 SELECT 문을 사용 하 여 데이터 원본에서 행을 검색 하는 메서드 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-269">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="49938-270">SELECT 문과 사용 하 여 연결 된 연결 개체는 유효 해야 합니다. 하지만 열려 있이 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-270">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="49938-271">연결 하기 전에 닫히면 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 는 호출 하기를 열어 데이터를 검색 하 고 닫으면 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-271">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="49938-272">연결 하기 전에 열려 있으면 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 는 호출을 열린 상태로 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-272">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="49938-273"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 지정된 된 대상에 행을 추가 하는 작업이 <xref:System.Data.DataTable> 개체를 <xref:System.Data.DataSet>만들기는 <xref:System.Data.DataTable> 경우 이미 없는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-273">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="49938-274">만들 때를 <xref:System.Data.DataTable> 개체는 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 작업은 일반적으로 열 이름 메타 데이터만 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="49938-274">When creating a <xref:System.Data.DataTable> object, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="49938-275">그러나 경우 합니다 <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> 속성이 `AddWithKey`, 적절 한 기본 키와 제약 조건도 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="49938-275">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="49938-276">경우는 <xref:System.Data.Common.DbDataAdapter> 개체를 채우는 동안 중복 된 열을 발생을 <xref:System.Data.DataTable>, 패턴을 사용 하 여 후속 열에 대 한 이름을 생성 "*columnname*1", "*columnname*2 ","*columnname*3 "등입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-276">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="49938-277">놓 이기는 들어오는 데이터에 명명 되지 않은 열을 포함 하는 경우는 <xref:System.Data.DataSet> "column1", "Column2" 등에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-277">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="49938-278">오버 로드 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 를 사용 하는 `DataTable` 대로 매개 변수 에서만 첫 번째 결과 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="49938-278">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="49938-279">오버 로드를 사용 하 여 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 를 사용 하는 `DataSet` 여러 결과를 얻으려면 매개 변수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-279">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="49938-280">사용할 수는 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 메서드를 여러 번에 동일한 <xref:System.Data.DataTable>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-280">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="49938-281">기본 키가 있는 경우 들어오는 행이 이미 존재 하는 일치 하는 행과 병합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-281">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="49938-282">들어오는 행에 추가 된 기본 키가 없으면는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-282">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="49938-283">`SelectCommand`가 OUTER JOIN의 결과를 반환하면 `DataAdapter`는 결과 <xref:System.Data.DataTable.PrimaryKey%2A>에 대해 <xref:System.Data.DataTable> 값을 설정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-283">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="49938-284">중복 행을 올바르게 확인할 수 있도록 기본 키를 명시적으로 정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-284">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="49938-285">자세한 내용은 [기본 키 정의](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-285">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-286">구현의 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-286">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="49938-287">사용 하 여 여러 결과 대 한 스키마 정보를 검색할 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 사용 하 여는 <xref:System.Data.MissingSchemaAction> 로 `AddWithKey`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-287">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-288">
            <para>이 오버 로드는 <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> 메서드는 보호 되므로.NET Framework 데이터 공급자가 사용 하도록 설계 되었습니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-288">
              <para>This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (int startRecord, int maxRecords, params System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(int32 startRecord, int32 maxRecords, class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (startRecord As Integer, maxRecords As Integer, ParamArray dataTables As DataTable()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(int startRecord, int maxRecords, ... cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="override this.Fill : int * int * System.Data.DataTable[] -&gt; int" Usage="dbDataAdapter.Fill (startRecord, maxRecords, dataTables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="dataTables" Type="System.Data.DataTable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startRecord">
          <span data-ttu-id="49938-289">The zero-based record number to start with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-289">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="49938-290">The maximum number of records to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-290">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="dataTables">
          <span data-ttu-id="49938-291">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-291">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-292">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-292">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-293">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-293">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="49938-294">This value does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-294">This value does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-295">합니다 <xref:System.Data.Common.DataAdapter.Fill%2A> 연결 된 지정 된 SELECT 문을 사용 하 여 데이터 원본에서 행을 검색 하는 메서드 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-295">The <xref:System.Data.Common.DataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="49938-296">SELECT 문과 사용 하 여 연결 된 연결 개체는 유효 해야 합니다. 하지만 열려 있이 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-296">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="49938-297">연결 하기 전에 닫히면 <xref:System.Data.Common.DataAdapter.Fill%2A> 는 데이터를 검색 하는 것이 열려 있고 닫혀 다음 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-297">If the connection is closed before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it is opened to retrieve data, and then it is closed.</span></span> <span data-ttu-id="49938-298">연결 하기 전에 열려 있으면 <xref:System.Data.Common.DataAdapter.Fill%2A> 는 호출을 열린 상태로 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-298">If the connection is open before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="49938-299"><xref:System.Data.Common.DataAdapter.Fill%2A> 작업이 대상에 행 추가 <xref:System.Data.DataTable> 개체를 <xref:System.Data.DataSet>만들기는 <xref:System.Data.DataTable> 경우 이미 없는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-299">The <xref:System.Data.Common.DataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="49938-300">만들면 <xref:System.Data.DataTable> 개체는 <xref:System.Data.Common.DataAdapter.Fill%2A> 작업은 일반적으로 열 이름 메타 데이터만 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="49938-300">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="49938-301">그러나 경우 합니다 <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> 속성이 `AddWithKey`, 적절 한 기본 키와 제약 조건도 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="49938-301">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="49938-302">`SelectCommand`가 OUTER JOIN의 결과를 반환하면 `DataAdapter`는 결과 <xref:System.Data.DataTable.PrimaryKey%2A>에 대해 <xref:System.Data.DataTable> 값을 설정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-302">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="49938-303">중복 행을 올바르게 확인할 수 있도록 기본 키를 명시적으로 정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-303">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="49938-304">자세한 내용은 [기본 키 정의](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-304">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="49938-305">데이터 어댑터를 채우는 동안 중복 된 열을 발견 하는 경우는 <xref:System.Data.DataTable>, 패턴 "columnname1", "columnname2", "columnname3", 및 등을 사용 하 여 후속 열에 대 한 이름을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-305">If the data adapter encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="49938-306">놓 이기는 들어오는 데이터에 명명 되지 않은 열을 포함 하는 경우는 <xref:System.Data.DataSet> "column1", "Column2" 등에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-306">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="49938-307">여러 결과 집합에 추가 될 때를 <xref:System.Data.DataSet>, 각 결과 집합을 별도 테이블에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-307">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is placed in a separate table.</span></span> <span data-ttu-id="49938-308">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 값을 추가 하 여 이름이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-308">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="49938-309">열 및 테이블 이름을 사용 하 여 응용 프로그램은 이러한 명명 패턴을 사용 하 여 충돌 하지 않도록 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-309">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="49938-310">채우는 SELECT 문을 사용 하는 경우는 <xref:System.Data.DataSet> 여러 결과 반환을 일괄 처리 SQL 문과 같은 결과 중 하나에 오류가 포함 되어 있는 경우 모든 후속 결과 생략 되 고에 추가 되지 않습니다는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-310">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="49938-311">사용할 수는 <xref:System.Data.Common.DataAdapter.Fill%2A> 메서드를 여러 번에 동일한 <xref:System.Data.DataTable>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-311">You can use the <xref:System.Data.Common.DataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="49938-312">기본 키가 있는 경우 들어오는 행이 이미 존재 하는 일치 하는 행과 병합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-312">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="49938-313">들어오는 행에 추가 된 기본 키가 없으면는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-313">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-314">구현의 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-314">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="49938-315">사용 하 여 여러 결과 대 한 스키마 정보를 검색할 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 사용 하 여는 <xref:System.Data.MissingSchemaAction> 로 `AddWithKey`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-315">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="49938-316">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-316">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="49938-317">The zero-based record number to start with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-317">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="49938-318">The maximum number of records to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-318">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="49938-319">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-319">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-320">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-320">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-321">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-321">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="49938-322">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-322">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-323">`maxRecords` 값이 0 시작 레코드 뒤에서 발견 되는 모든 레코드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="49938-323">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="49938-324">경우 `maxRecords` 보다 크면 나머지 행 수가 나머지 행이 반환 하 고 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-324">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</span></span>  
  
 <span data-ttu-id="49938-325">해당 select 명령이 여러 결과 반환 하는 문의 경우 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 에 적용 됩니다 `maxRecords` 첫 번째 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-325">If the corresponding select command is a statement returning multiple results, <xref:System.Data.Common.DbDataAdapter.Fill%2A> only applies `maxRecords` to the first result.</span></span>  
  
 <span data-ttu-id="49938-326"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 메서드는 SELECT 문을 사용 하 여 데이터 원본에서 데이터를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-326">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="49938-327"><xref:System.Data.IDbConnection> SELECT 문과 사용 하 여 연결 된 개체는 유효 해야 합니다. 하지만 열려 있이 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-327">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="49938-328">경우는 <xref:System.Data.IDbConnection> 닫은 후 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 은 호출,이 열어 데이터를 검색 하 고 닫으면 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-328">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="49938-329">연결 하기 전에 열려 있으면 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 는 호출을 열린 상태로 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-329">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="49938-330">명령에서 모든 행을 반환 하지 않는, 테이블에 추가 됩니다는 <xref:System.Data.DataSet>, 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-330">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="49938-331">경우는 <xref:System.Data.Common.DbDataAdapter> 개체를 채우는 동안 중복 된 열을 발생을 <xref:System.Data.DataTable>, 패턴을 사용 하 여 후속 열에 대 한 이름을 생성 "*columnname*1", "*columnname*2 ","*columnname*3 "등입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-331">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="49938-332">놓 이기는 들어오는 데이터에 명명 되지 않은 열을 포함 하는 경우는 <xref:System.Data.DataSet> "column1", "Column2" 등에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-332">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="49938-333">지정 된 쿼리가 여러 결과 반환 하는 경우 각 결과 집합을 별도 테이블에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-333">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="49938-334">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 값을 추가 하 여 이름이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-334">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="49938-335">만들어지므로 테이블 행을 반환 하지 않는 쿼리에 대 한 select 쿼리 뒤에 삽입 쿼리를 처리 하는 경우, 생성 된 첫 번째 테이블 이기 때문에 선택 쿼리에 대해 생성 된 테이블이 "Table"을 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-335">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</span></span> <span data-ttu-id="49938-336">열 및 테이블 이름을 사용 하 여 응용 프로그램은 이러한 명명 패턴을 사용 하 여 충돌 하지 않도록 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-336">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="49938-337"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 메서드 시나리오를 지원 합니다. 여기서는 <xref:System.Data.DataSet> 여러 개 포함 된 <xref:System.Data.DataTable> 개체 이름이 대/소문자만 다른 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-337">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="49938-338">이러한 상황에서는 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 해당 테이블을 찾을 대/소문자 구분 비교를 수행 하 고 정확히 일치 하는 경우 새 테이블을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="49938-338">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="49938-339">다음 C# 코드는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49938-339">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="49938-340">경우 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 라고 하며 <xref:System.Data.DataSet> 하나만 포함 되어 <xref:System.Data.DataTable> 이름이 다른 경우에 의해서만 <xref:System.Data.DataTable> 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-340">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="49938-341">이 시나리오에서는 비교는 대/소문자 구분.</span><span class="sxs-lookup"><span data-stu-id="49938-341">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="49938-342">다음 C# 코드는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49938-342">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="49938-343">오류 또는 예외가 발생 하는 경우 데이터 테이블을 채우는 동안 오류가 발생 하기 전에 추가 행은 데이터 테이블에 남아 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-343">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="49938-344">작업의 나머지 부분을 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-344">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="49938-345">채우는 SELECT 문을 사용 하는 경우는 <xref:System.Data.DataSet> 일괄 처리 SQL 문과 같은 여러 결과 반환 합니다. 다음에 유의 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-345">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, be aware of the following:</span></span>  
  
-   <span data-ttu-id="49938-346">SQL 문 일괄 처리에서 여러 결과 처리할 때 `maxRecords` 첫 번째 결과에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-346">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="49938-347">장으로 구성 된 결과 (.NET Framework Data Provider for OLE DB만)이 포함 된 행에도 마찬가지입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-347">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="49938-348">최상위 결과 따라 제한 됩니다 `maxRecords`, 하지만 모든 자식 행이 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-348">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="49938-349">모든 후속 결과 생략 되 고 추가할 없습니다 오류가 있으면 결과 중 하나는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-349">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="49938-350">후속을 사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 내용 새로 고침에 대 한 호출을 <xref:System.Data.DataSet>, 두 조건이 충족 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-350">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="49938-351">SQL 문을 처음 채우는 데 사용 되는 일치 해야 합니다 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-351">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="49938-352">합니다 **키** 열 정보 표시 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-352">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="49938-353">기본 키 정보가 있는 경우 중복 행 조정 되며 한 번만 표시에 <xref:System.Data.DataTable> 에 해당 하는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-353">If primary key information is present, any duplicate rows will be reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-354">통해 기본 키 정보를 설정할 수 있습니다 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, 지정 하 여는 <xref:System.Data.DataTable.PrimaryKey%2A> 의 속성을 <xref:System.Data.DataTable>, 하거나 설정 하 여를 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 속성을 `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="49938-354">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="49938-355">`SelectCommand`가 OUTER JOIN의 결과를 반환하면 `DataAdapter`는 결과 <xref:System.Data.DataTable.PrimaryKey%2A>에 대해 <xref:System.Data.DataTable> 값을 설정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-355">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="49938-356">중복 행을 올바르게 확인할 수 있도록 기본 키를 명시적으로 정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-356">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="49938-357">자세한 내용은 [기본 키 정의](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-357">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-358">구현의 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-358">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="49938-359">사용 하 여 여러 결과 대 한 스키마 정보를 검색할 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 사용 하 여는 <xref:System.Data.MissingSchemaAction> 로 `AddWithKey`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-359">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-360">합니다 `DataSet` 나타난 레코드 개수 보다 많은 포함 되지 것입니다 `maxRecords`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-360">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="49938-361">하지만, 쿼리에서 생성 한 전체 결과 집합은 여전히 서버에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-361">However, the entire result set generated by the query is still returned from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49938-362">다음 예제에서는 파생된 클래스 <xref:System.Data.OleDb.OleDbDataAdapter>를 입력 하는 <xref:System.Data.DataSet> 에서 행을 10부터 15 개의 행을 사용 하 여는 **범주** 테이블입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-362">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with 15 rows, beginning at row 10, from the **Categories** table.</span></span> <span data-ttu-id="49938-363">이 예에서는 만들었다고 가정를 <xref:System.Data.OleDb.OleDbDataAdapter> 및 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-363">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="49938-364">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-364">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="49938-365">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-365">The source table is invalid.</span>
          </span>
          <span data-ttu-id="49938-366">-or-  The connection is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-366">-or-  The connection is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="49938-367">The connection could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-367">The connection could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="49938-368">The <paramref name="startRecord" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-368">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="49938-369">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-369">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-370">
            <para>재정의 하는 경우 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 메서드.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-370">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, string srcTable, class System.Data.IDataReader dataReader, int32 startRecord, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable, System::Data::IDataReader ^ dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string * System.Data.IDataReader * int * int -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable, dataReader, startRecord, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataSet">To be added.</param>
        <param name="srcTable">To be added.</param>
        <param name="dataReader">To be added.</param>
        <param name="startRecord">To be added.</param>
        <param name="maxRecords">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, int startRecord, int maxRecords, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, int32 startRecord, int32 maxRecords, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), startRecord As Integer, maxRecords As Integer, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, int startRecord, int maxRecords, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable[] * int * int * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTables, startRecord, maxRecords, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTables">
          <span data-ttu-id="49938-371">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-371">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="49938-372">The zero-based record number to start with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-372">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="49938-373">The maximum number of records to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-373">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="49938-374">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-374">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="49938-375">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-375">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-376">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-376">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-377">The number of rows added to or refreshed in the data tables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-377">The number of rows added to or refreshed in the data tables.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-378">`maxRecords` 값이 0 시작 레코드 뒤에서 발견 되는 모든 레코드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="49938-378">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="49938-379">경우 `maxRecords` 보다 크면 나머지 행 수가 없으면 오류가 발생 하 고 나머지 행이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-379">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</span></span>  
  
 <span data-ttu-id="49938-380"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 메서드는 SELECT 문을 사용 하 여 데이터 원본에서 데이터를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-380">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="49938-381"><xref:System.Data.IDbConnection> SELECT 문과 사용 하 여 연결 된 개체는 유효 해야 합니다. 하지만 열려 있이 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-381">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="49938-382">경우는 <xref:System.Data.IDbConnection> 닫은 후 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 는 데이터를 검색 하려면을 열고 다음 닫는 하는를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-382">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="49938-383">연결 하기 전에 열려 있으면 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 는 호출을 열린 상태로 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-383">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="49938-384">명령에서 모든 행을 반환 하지 않는, 테이블에 추가 됩니다는 <xref:System.Data.DataSet>, 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-384">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="49938-385">경우는 <xref:System.Data.Common.DbDataAdapter> 개체를 채우는 동안 중복 된 열을 발생을 <xref:System.Data.DataTable>, 패턴을 사용 하 여 후속 열에 대 한 이름을 생성 "*columnname*1", "*columnname*2 ","*columnname*3 "등입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-385">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="49938-386">놓 이기는 들어오는 데이터에 명명 되지 않은 열을 포함 하는 경우는 <xref:System.Data.DataSet> "column1", "Column2" 등에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-386">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="49938-387">지정 된 쿼리가 여러 결과 반환 하는 경우 각 결과 집합을 별도 테이블에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-387">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="49938-388">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 값을 추가 하 여 이름이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-388">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="49938-389">테이블이 만들어지면 행을 반환 하지 않는 쿼리에 대 한 select 쿼리 뒤에 삽입 쿼리를 처리 하는 경우 이후 select 쿼리에 대해 생성 된 테이블은 수 "Table" 이라는, 생성 된 첫 번째 테이블 이기 때문에.</span><span class="sxs-lookup"><span data-stu-id="49938-389">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="49938-390">열 및 테이블 이름을 사용 하 여 응용 프로그램은 이러한 명명 패턴을 사용 하 여 충돌 하지 않도록 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-390">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="49938-391"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 메서드 시나리오를 지원 합니다. 여기서는 <xref:System.Data.DataSet> 여러 개 포함 된 <xref:System.Data.DataTable> 개체 이름이 대/소문자만 다른 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-391">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="49938-392">이러한 상황에서는 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 해당 테이블을 찾을 대/소문자 구분 비교를 수행 하 고 정확히 일치 하는 경우 새 테이블을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="49938-392">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="49938-393">다음 C# 코드는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49938-393">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="49938-394">경우 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 라고 하며 <xref:System.Data.DataSet> 하나만 포함 되어 <xref:System.Data.DataTable> 이름이 다른 경우에 의해서만 <xref:System.Data.DataTable> 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-394">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="49938-395">이 시나리오에서는 비교는 대/소문자 구분.</span><span class="sxs-lookup"><span data-stu-id="49938-395">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="49938-396">다음 C# 코드는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49938-396">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="49938-397">오류 또는 예외가 발생 하는 경우 데이터 테이블을 채우는 동안 오류가 발생 하기 전에 추가 행은 데이터 테이블에 남아 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-397">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="49938-398">작업의 나머지 부분을 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-398">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="49938-399">채우는 SELECT 문을 사용 하는 경우는 <xref:System.Data.DataTable> 개체 일괄 처리 SQL 문 다음에 유의 같은 여러 결과 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-399">When the SELECT statement used to populate the <xref:System.Data.DataTable> objects returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="49938-400">SQL 문 일괄 처리에서 여러 결과 처리할 때 `maxRecords` 첫 번째 결과에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-400">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="49938-401">장으로 구성 된 결과 (.NET Framework Data Provider for OLE DB만)이 포함 된 행에도 마찬가지입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-401">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="49938-402">최상위 결과 따라 제한 됩니다 `maxRecords`, 하지만 모든 자식 행이 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-402">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="49938-403">결과 중 하나에 오류가 포함 되어, 모든 후속 결과 건너뜁니다.</span><span class="sxs-lookup"><span data-stu-id="49938-403">If one of the results contains an error, all subsequent results are skipped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-404">합니다 `DataSet` 나타난 레코드 개수 보다 많은 포함 되지 것입니다 `maxRecords`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-404">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="49938-405">그러나 쿼리에 의해 생성 된 전체 결과 집합은 여전히 서버에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-405">However, the entire resultset generated by the query is still returned from the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="49938-406">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-406">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="49938-407">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-407">The source table is invalid.</span>
          </span>
          <span data-ttu-id="49938-408">-or-  The connection is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-408">-or-  The connection is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="49938-409">The connection could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-409">The connection could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="49938-410">The <paramref name="startRecord" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-410">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="49938-411">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-411">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-412">
            <para>재정의 하는 경우 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 메서드.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-412">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="49938-413">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-413">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="49938-414">The zero-based record number to start with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-414">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="49938-415">The maximum number of records to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-415">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="49938-416">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-416">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="49938-417">The SQL SELECT statement used to retrieve rows from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-417">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="49938-418">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-418">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-419">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-419">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-420">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-420">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="49938-421">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-421">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-422">합니다 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 연결 된 지정 된 SELECT 문을 사용 하 여 데이터 원본에서 행을 검색 하는 메서드 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-422">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="49938-423">SELECT 문과 사용 하 여 연결 된 연결 개체는 유효 해야 합니다. 하지만 열려 있이 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-423">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="49938-424">전에 연결이 닫히면 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 는 데이터를 검색 하려면을 열고 다음 닫는 하는를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-424">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="49938-425">연결 하기 전에 열려 있으면 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 는 호출을 열린 상태로 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-425">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="49938-426"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 작업이 대상에 행 추가 <xref:System.Data.DataTable> 개체를 <xref:System.Data.DataSet>만들기는 <xref:System.Data.DataTable> 경우 이미 없는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-426">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="49938-427">만들면 <xref:System.Data.DataTable> 개체는 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 작업은 일반적으로 열 이름 메타 데이터만 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="49938-427">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="49938-428">그러나 경우 합니다 <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> 속성이 `AddWithKey`, 적절 한 기본 키와 제약 조건도 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="49938-428">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="49938-429">경우는 <xref:System.Data.Common.DbDataAdapter> 에서 중복 열을 채우는 동안는 <xref:System.Data.DataTable>, 패턴을 사용 하 여 후속 열에 대 한 이름을 생성 "*columnname*1", "*columnname*2", "*columnname*3", 및 등입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-429">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="49938-430">놓 이기는 들어오는 데이터에 명명 되지 않은 열을 포함 하는 경우는 <xref:System.Data.DataSet> "column1", "Column2" 등에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-430">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="49938-431">여러 결과 집합에 추가 될 때를 <xref:System.Data.DataSet> 각 결과 집합을 별도 테이블에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-431">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="49938-432">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 값을 추가 하 여 이름이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-432">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="49938-433">열 및 테이블 이름을 사용 하 여 응용 프로그램은 이러한 명명 패턴을 사용 하 여 충돌 하지 않도록 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-433">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="49938-434"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 메서드 시나리오를 지원 합니다. 여기서는 <xref:System.Data.DataSet> 여러 개 포함 된 <xref:System.Data.DataTable> 개체 이름이 대/소문자만 다른 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-434">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="49938-435">이러한 상황에서는 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 해당 테이블을 찾을 대/소문자 구분 비교를 수행 하 고 정확히 일치 하는 경우 새 테이블을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="49938-435">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="49938-436">다음 C# 코드는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49938-436">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="49938-437">경우 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 라고 하며 <xref:System.Data.DataSet> 하나만 포함 되어 <xref:System.Data.DataTable> 이름이 다른 경우에 의해서만 <xref:System.Data.DataTable> 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-437">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="49938-438">이 시나리오에서는 비교는 대/소문자 구분.</span><span class="sxs-lookup"><span data-stu-id="49938-438">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="49938-439">다음 C# 코드는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49938-439">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="49938-440">사용할 수는 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 메서드를 여러 번에 동일한 <xref:System.Data.DataTable>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-440">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="49938-441">기본 키가 있는 경우 들어오는 행이 이미 존재 하는 일치 하는 행과 병합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-441">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="49938-442">들어오는 행에 추가 된 기본 키가 없으면는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-442">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="49938-443">`SelectCommand`가 OUTER JOIN의 결과를 반환하면 `DataAdapter`는 결과 <xref:System.Data.DataTable.PrimaryKey%2A>에 대해 <xref:System.Data.DataTable> 값을 설정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-443">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="49938-444">중복 행을 올바르게 확인할 수 있도록 기본 키를 명시적으로 정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-444">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="49938-445">자세한 내용은 [기본 키 정의](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-445">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-446">구현의 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 고 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> .NET Framework 데이터 공급자는 결과 대해서만 첫 번째 스키마 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-446">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="49938-447">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-447">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="49938-448">The <paramref name="startRecord" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-448">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="49938-449">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-449">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-450">
            <para>이 오버 로드는 <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> 메서드는 보호 되므로.NET Framework 데이터 공급자가 사용 하도록 설계 되었습니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-450">
              <para>This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillCommandBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Data.CommandBehavior FillCommandBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandBehavior FillCommandBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property FillCommandBehavior As CommandBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Data::CommandBehavior FillCommandBehavior { System::Data::CommandBehavior get(); void set(System::Data::CommandBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillCommandBehavior : System.Data.CommandBehavior with get, set" Usage="System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49938-451">Gets or sets the behavior of the command used to fill the data adapter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-451">Gets or sets the behavior of the command used to fill the data adapter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49938-452">
            <see cref="T:System.Data.CommandBehavior" /> 데이터 어댑터를 채우는 데 명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-452">The <see cref="T:System.Data.CommandBehavior" /> of the command used to fill the data adapter.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillError">
      <MemberSignature Language="C#" Value="public event System.Data.FillErrorEventHandler FillError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.FillErrorEventHandler FillError" />
      <MemberSignature Language="DocId" Value="E:System.Data.Common.DbDataAdapter.FillError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FillError As FillErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::FillErrorEventHandler ^ FillError;" />
      <MemberSignature Language="F#" Value="member this.FillError : System.Data.FillErrorEventHandler " Usage="member this.FillError : System.Data.FillErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_FillError")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.FillErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49938-453">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-453">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="49938-454">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-454">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="49938-455">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-455">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-456">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-456">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-457">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-457">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-458">사용 하 여 데이터 원본에서 스키마 정보를 검색 하는이 메서드는 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-458">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="49938-459">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 작업 추가 <xref:System.Data.DataTable> 대상 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-459">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-460">그런 다음 열을 추가 합니다 <xref:System.Data.DataColumnCollection> 의 합니다 <xref:System.Data.DataTable>, 하 고 다음 구성 <xref:System.Data.DataColumn> 데이터 원본에 존재 하는 경우 속성:</span><span class="sxs-lookup"><span data-stu-id="49938-460">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="49938-461"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="49938-461"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="49938-462">설정 해야 합니다 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 고 <xref:System.Data.DataColumn.AutoIncrementSeed%2A> 개별적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-462">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="49938-463"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 또한 구성 합니다 <xref:System.Data.DataTable.PrimaryKey%2A> 고 <xref:System.Data.DataTable.Constraints%2A> 다음 규칙에 따라 속성:</span><span class="sxs-lookup"><span data-stu-id="49938-463"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="49938-464">하나 이상의 기본 키 열에서 반환 되는 경우는 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>에 대 한 기본 키 열으로 사용할는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-464">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="49938-465">기본 키 열이 없으면 반환 됩니다. 고유한 열은 하지만 모든 고유한 열이 null이 아닌 경우에 고유 열 기본 키로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-465">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="49938-466">열이 null을 허용 하는 경우는 <xref:System.Data.UniqueConstraint> 에 추가 됩니다는 <xref:System.Data.ConstraintCollection>, 하지만 <xref:System.Data.DataTable.PrimaryKey%2A> 속성이 설정 되지 않은 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-466">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="49938-467">기본 키 열에 대 한 기본 키 열으로 사용 된 기본 키 열 및 고유 열을 모두 반환 되는 경우는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-467">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="49938-468">기본 키 및 unique 제약 조건에 추가 됩니다는 <xref:System.Data.ConstraintCollection> 선행 규칙에 있지만 다른 제약 조건에 따라 유형이 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-468">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="49938-469">고유한 클러스터형 SQL Server 테이블에서 열 또는 열에 인덱스가 정의 되 고 클러스터형된 인덱스의 열 이름을 반환 됩니다 primary key 제약 별도 열 집합에 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-469">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="49938-470">기본 키 열의 이름을 반환할 기본 키 인덱스의 이름을 지정 하는 SELECT 문을 사용 하 여 쿼리 힌트를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-470">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="49938-471">쿼리 힌트를 지정 하는 방법에 대 한 자세한 내용은 참조 하십시오 [쿼리 힌트 (Transact SQL)](http://msdn.microsoft.com/library/ms181714.aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-471">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="49938-472">중 기본 키 정보는 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 를 찾고 키 열과 일치 하는 모든 행을 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-472">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="49938-473">원하는 동작이 없는 경우 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 스키마 정보를 요청 하지 않고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-473">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="49938-474">경우는 <xref:System.Data.IDataAdapter> 에서 중복 열을 채우는 동안는 <xref:System.Data.DataTable>, 패턴을 사용 하 여 후속 열에 대 한 이름을 생성 "*columnname*1", "*columnname*2", "*columnname*3", 및 등입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-474">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="49938-475">놓 이기는 들어오는 데이터에 명명 되지 않은 열을 포함 하는 경우는 <xref:System.Data.DataSet> "column1", "Column2" 등에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-475">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="49938-476">여러 결과 집합에 추가 될 때를 <xref:System.Data.DataSet> 각 결과 집합을 별도 테이블에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-476">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="49938-477">추가 결과 집합이 지정한 테이블 이름 (예를 들어, "Table", "Table1", "Table2", 및 등입니다.)를 정수 값을 추가 하 여 이름이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-477">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="49938-478">열 및 테이블 이름을 사용 하 여 응용 프로그램은 이러한 명명 패턴을 사용 하 여 충돌 하지 않도록 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-478">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="49938-479"><xref:System.Data.IDbConnection> 선택 명령과 사용 하 여 연결 된 개체는 유효 해야 합니다. 하지만 열 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-479">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="49938-480">경우는 <xref:System.Data.IDbConnection> 닫은 후 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 는 데이터를 검색 하려면을 열고 다음 닫는 하는를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-480">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="49938-481">연결 하기 전에 열려 있으면 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 은 호출 하는 열려 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-481">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-482">구현의 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-482">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="49938-483">사용 하 여 여러 결과 대 한 스키마 정보를 검색할 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 사용 하 여는 <xref:System.Data.MissingSchemaAction> 로 `AddWithKey`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-483">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="49938-484">사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>,.NET Framework Data Provider for SQL Server를 실행 중인 문에 FOR BROWSE 절을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-484">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="49938-485">사용자는 SET FMTONLY ON 문 사용 하의 잠재적인 부작용을 알고 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-485">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="49938-486">자세한 내용은 SQL Server 온라인 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="49938-486">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49938-487">다음 예제에서는 파생된 클래스 <xref:System.Data.SqlClient.SqlDataAdapter>를 입력 하는 <xref:System.Data.DataSet> 반환 고 스키마를 사용 하 여를 <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="49938-487">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="49938-488">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-488">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="49938-489">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-489">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-490">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-490">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-491">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-491">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-492">합니다 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 사용 하 여 데이터 원본에서 스키마를 검색 하는 메서드는 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-492">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="49938-493">와 연결 된 연결 개체는 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 유효 해야 하지만 열려 있이 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-493">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="49938-494">전에 연결이 닫히면 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 는 데이터를 검색 하려면을 열고 다음 닫는 하는를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-494">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="49938-495">연결 하기 전에 열려 있으면 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 는 호출을 열린 상태로 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-495">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="49938-496">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 작업이 반환 된 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-496">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation returns a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="49938-497">그런 다음 열을 추가 합니다 <xref:System.Data.DataColumnCollection> 의 합니다 <xref:System.Data.DataTable>, 하 고 다음 구성 <xref:System.Data.DataColumn> 데이터 원본에 존재 하는 경우 속성:</span><span class="sxs-lookup"><span data-stu-id="49938-497">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="49938-498"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="49938-498"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="49938-499">설정 해야 합니다 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 고 <xref:System.Data.DataColumn.AutoIncrementSeed%2A> 개별적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-499">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="49938-500"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 또한 구성 합니다 <xref:System.Data.DataTable.PrimaryKey%2A> 고 <xref:System.Data.DataTable.Constraints%2A> 다음 규칙에 따라 속성:</span><span class="sxs-lookup"><span data-stu-id="49938-500"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="49938-501">경우는 <xref:System.Data.DataTable.PrimaryKey%2A> 에 대해 이미 정의 `DataTable`, 또는 `DataTable` 데이터를 포함 합니다 `PrimaryKey` 속성이 설정 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-501">If a <xref:System.Data.DataTable.PrimaryKey%2A> has already been defined for the `DataTable`, or the `DataTable` contains data, the `PrimaryKey` property will not be set.</span></span>  
  
-   <span data-ttu-id="49938-502">하나 이상의 기본 키 열에서 반환 되는 경우는 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>에 대 한 기본 키 열으로 사용할는 `DataTable`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-502">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the `DataTable`.</span></span>  
  
-   <span data-ttu-id="49938-503">기본 키 열이 없으면 반환 됩니다. 고유한 열은 하지만 모든 고유한 열이 null이 아닌 경우에 고유 열 기본 키로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-503">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="49938-504">열이 null을 허용 하는 경우는 <xref:System.Data.UniqueConstraint> 에 추가 됩니다는 <xref:System.Data.ConstraintCollection>, 하지만 `PrimaryKey` 속성이 설정 되지 않은 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-504">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the `PrimaryKey` property is not set.</span></span>  
  
-   <span data-ttu-id="49938-505">기본 키 열에 대 한 기본 키 열으로 사용 된 기본 키 열 및 고유 열을 모두 반환 되는 경우는 `DataTable`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-505">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the `DataTable`.</span></span>  
  
 <span data-ttu-id="49938-506">기본 키 및 unique 제약 조건에 추가 됩니다는 <xref:System.Data.ConstraintCollection> 선행 규칙에 있지만 다른 제약 조건에 따라 유형이 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-506">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span> <span data-ttu-id="49938-507">이 프로세스 서버에 여러 번 왕복 해야 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-507">This process may require several round-trips to the server.</span></span>  
  
 <span data-ttu-id="49938-508">고유한 클러스터형 SQL Server 테이블에서 열 또는 열에 인덱스가 정의 되 고 클러스터형된 인덱스의 열 이름을 반환 됩니다 primary key 제약 별도 열 집합에 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-508">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="49938-509">기본 키 열의 이름을 반환할 기본 키 인덱스의 이름을 지정 하는 SELECT 문을 사용 하 여 쿼리 힌트를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-509">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="49938-510">쿼리 힌트를 지정 하는 방법에 대 한 자세한 내용은 참조 하십시오 [쿼리 힌트 (Transact SQL)](http://msdn.microsoft.com/library/ms181714.aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-510">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="49938-511">경우는 <xref:System.Data.Common.DbDataAdapter> 에서 중복 열을 채우는 동안는 <xref:System.Data.DataTable>, 패턴을 사용 하 여 후속 열에 대 한 이름을 생성 "*columnname*1", "*columnname*2", "*columnname*3", 및 등입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-511">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="49938-512">놓 이기는 들어오는 데이터에 명명 되지 않은 열을 포함 하는 경우는 <xref:System.Data.DataSet> "column1", "Column2" 등에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-512">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="49938-513">여러 결과 집합에 추가 될 때를 <xref:System.Data.DataSet> 각 결과 집합을 별도 테이블에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-513">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="49938-514">추가 결과 집합이 지정한 테이블 이름 (예를 들어, "Table", "Table1", "Table2", 및 등입니다.)를 정수 값을 추가 하 여 이름이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-514">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="49938-515">열 및 테이블 이름을 사용 하 여 응용 프로그램은 이러한 명명 패턴을 사용 하 여 충돌 하지 않도록 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-515">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="49938-516"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 모든 행을 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-516"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="49938-517">사용 된 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 에 행을 추가 하는 방법을 <xref:System.Data.DataTable>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-517">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-518">구현의 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-518">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="49938-519">사용 하 여 여러 결과 대 한 스키마 정보를 검색할 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 사용 하 여는 <xref:System.Data.MissingSchemaAction> 로 `AddWithKey`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-519">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="49938-520">사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>,.NET Framework Data Provider for SQL Server를 실행 중인 문에 FOR BROWSE 절을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-520">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="49938-521">사용자는 SET FMTONLY ON 문 사용 하의 잠재적인 부작용을 알고 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-521">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="49938-522">자세한 내용은 SQL Server 온라인 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="49938-522">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49938-523">다음 예제에서는 파생된 클래스 <xref:System.Data.SqlClient.SqlDataAdapter>를 입력 하는 <xref:System.Data.DataSet> 반환 고 스키마를 사용 하 여를 <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="49938-523">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * string -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="49938-524">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-524">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="49938-525">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-525">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="49938-526">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-526">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-527">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-527">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-528">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-528">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-529">사용 하 여 데이터 원본에서 스키마 정보를 검색 하는이 메서드는 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-529">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="49938-530">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 작업 추가 <xref:System.Data.DataTable> 대상 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-530">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-531">그런 다음 열을 추가 합니다 <xref:System.Data.DataColumnCollection> 의 합니다 <xref:System.Data.DataTable>, 하 고 다음 구성 <xref:System.Data.DataColumn> 데이터 원본에 존재 하는 경우 속성:</span><span class="sxs-lookup"><span data-stu-id="49938-531">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="49938-532"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="49938-532"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="49938-533">설정 해야 합니다 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 고 <xref:System.Data.DataColumn.AutoIncrementSeed%2A> 개별적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-533">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="49938-534"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 또한 구성 합니다 <xref:System.Data.DataTable.PrimaryKey%2A> 고 <xref:System.Data.DataTable.Constraints%2A> 다음 규칙에 따라 속성:</span><span class="sxs-lookup"><span data-stu-id="49938-534"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="49938-535">하나 이상의 기본 키 열에서 반환 되는 경우는 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>에 대 한 기본 키 열으로 사용할는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-535">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="49938-536">기본 키 열이 없으면 반환 됩니다. 고유한 열은 하지만 모든 고유한 열이 null이 아닌 경우에 고유 열 기본 키로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-536">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="49938-537">열이 null을 허용 하는 경우는 <xref:System.Data.UniqueConstraint> 에 추가 됩니다는 <xref:System.Data.ConstraintCollection>, 하지만 <xref:System.Data.DataTable.PrimaryKey%2A> 속성이 설정 되지 않은 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-537">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="49938-538">기본 키 열에 대 한 기본 키 열으로 사용 된 기본 키 열 및 고유 열을 모두 반환 되는 경우는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-538">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="49938-539">기본 키 및 unique 제약 조건에 추가 됩니다는 <xref:System.Data.ConstraintCollection> 선행 규칙에 있지만 다른 제약 조건에 따라 유형이 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-539">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="49938-540">고유한 클러스터형 SQL Server 테이블에서 열 또는 열에 인덱스가 정의 되 고 클러스터형된 인덱스의 열 이름을 반환 됩니다 primary key 제약 별도 열 집합에 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-540">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="49938-541">기본 키 열의 이름을 반환할 기본 키 인덱스의 이름을 지정 하는 SELECT 문을 사용 하 여 쿼리 힌트를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-541">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="49938-542">쿼리 힌트를 지정 하는 방법에 대 한 자세한 내용은 참조 하십시오 [쿼리 힌트 (Transact SQL)](http://msdn.microsoft.com/library/ms181714.aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-542">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="49938-543">중 기본 키 정보는 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 를 찾고 키 열과 일치 하는 모든 행을 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-543">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="49938-544">원하는 동작이 없는 경우 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 스키마 정보를 요청 하지 않고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-544">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="49938-545">경우는 <xref:System.Data.Common.DbDataAdapter> 에서 중복 열을 채우는 동안는 <xref:System.Data.DataTable>, 패턴을 사용 하 여 후속 열에 대 한 이름을 생성 "*columnname*1", "*columnname*2", "*columnname*3", 및 등입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-545">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="49938-546">놓 이기는 들어오는 데이터에 명명 되지 않은 열을 포함 하는 경우는 <xref:System.Data.DataSet> "column1", "Column2" 등에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-546">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="49938-547">여러 결과 집합에 추가 될 때를 <xref:System.Data.DataSet> 각 결과 집합을 별도 테이블에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-547">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="49938-548">추가 결과 집합이 지정한 테이블 이름 (예를 들어, "Table", "Table1", "Table2", 및 등입니다.)를 정수 값을 추가 하 여 이름이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-548">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="49938-549">열 및 테이블 이름을 사용 하 여 응용 프로그램은 이러한 명명 패턴을 사용 하 여 충돌 하지 않도록 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-549">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="49938-550"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 메서드 시나리오를 지원 합니다. 여기서는 <xref:System.Data.DataSet> 여러 개 포함 된 <xref:System.Data.DataTable> 개체 이름이 대/소문자만 다른 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-550">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="49938-551">이러한 상황에서는 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 해당 테이블을 찾을 대/소문자 구분 비교를 수행 하 고 정확히 일치 하는 경우 새 테이블을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="49938-551">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="49938-552">다음 C# 코드는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49938-552">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="49938-553">경우 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 라고 하며 <xref:System.Data.DataSet> 하나만 포함 되어 <xref:System.Data.DataTable> 이름이 다른 경우에 의해서만 <xref:System.Data.DataTable> 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-553">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="49938-554">이 시나리오에서는 비교는 대/소문자 구분.</span><span class="sxs-lookup"><span data-stu-id="49938-554">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="49938-555">다음 C# 코드는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49938-555">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="49938-556"><xref:System.Data.IDbConnection> 선택 명령과 사용 하 여 연결 된 개체는 유효 해야 합니다. 하지만 열 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-556">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="49938-557">경우는 <xref:System.Data.IDbConnection> 닫은 후 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 는 데이터를 검색 하려면을 열고 다음 닫는 하는를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-557">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="49938-558">연결 하기 전에 열려 있으면 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 은 호출 하는 열려 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-558">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-559">구현의 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-559">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="49938-560">사용 하 여 여러 결과 대 한 스키마 정보를 검색할 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 사용 하 여는 <xref:System.Data.MissingSchemaAction> 로 `AddWithKey`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-560">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="49938-561">사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>,.NET Framework Data Provider for SQL Server를 실행 중인 문에 FOR BROWSE 절을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-561">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="49938-562">사용자는 SET FMTONLY ON 문 사용 하의 잠재적인 부작용을 알고 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-562">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="49938-563">자세한 내용은 SQL Server 온라인 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="49938-563">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49938-564">다음 예제에서는 파생된 클래스 <xref:System.Data.SqlClient.SqlDataAdapter>를 입력 하는 <xref:System.Data.DataSet> 반환 고 스키마를 사용 하 여를 <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="49938-564">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="49938-565">A source table from which to get the schema could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-565">A source table from which to get the schema could not be found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="49938-566">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-566">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="49938-567">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-567">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="49938-568">The SQL SELECT statement used to retrieve rows from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-568">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="49938-569">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-569">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-570">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-570">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-571">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-571">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-572">합니다 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 사용 하 여 데이터 원본에서 스키마를 검색 하는 메서드는 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-572">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="49938-573">와 연결 된 연결 개체는 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 유효 해야 하지만 열려 있이 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-573">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="49938-574">전에 연결이 닫히면 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 는 데이터를 검색 하려면을 열고 다음 닫는 하는를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-574">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="49938-575">연결 하기 전에 열려 있으면 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 는 호출을 열린 상태로 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-575">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="49938-576">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 작업 추가 <xref:System.Data.DataTable> 대상 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-576">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-577">그런 다음 열을 추가 합니다 <xref:System.Data.DataColumnCollection> 의 합니다 <xref:System.Data.DataTable>, 하 고 다음 구성 <xref:System.Data.DataColumn> 데이터 원본에 존재 하는 경우 속성:</span><span class="sxs-lookup"><span data-stu-id="49938-577">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="49938-578"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="49938-578"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="49938-579">설정 해야 합니다 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 고 <xref:System.Data.DataColumn.AutoIncrementSeed%2A> 개별적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-579">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="49938-580"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 또한 구성 합니다 <xref:System.Data.DataTable.PrimaryKey%2A> 고 <xref:System.Data.DataTable.Constraints%2A> 다음 규칙에 따라 속성:</span><span class="sxs-lookup"><span data-stu-id="49938-580"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="49938-581">하나 이상의 기본 키 열에서 반환 되는 경우는 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>에 대 한 기본 키 열으로 사용할는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-581">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="49938-582">기본 키 열이 없으면 반환 됩니다. 고유한 열은 하지만 모든 고유한 열이 null이 아닌 경우에 고유 열 기본 키로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-582">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="49938-583">열이 null을 허용 하는 경우는 <xref:System.Data.UniqueConstraint> 에 추가 됩니다는 <xref:System.Data.ConstraintCollection>, 하지만 <xref:System.Data.DataTable.PrimaryKey%2A> 속성이 설정 되지 않은 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-583">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="49938-584">기본 키 열에 대 한 기본 키 열으로 사용 된 기본 키 열 및 고유 열을 모두 반환 되는 경우는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-584">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="49938-585">기본 키 및 unique 제약 조건에 추가 됩니다는 <xref:System.Data.ConstraintCollection> 선행 규칙에 있지만 다른 제약 조건에 따라 유형이 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-585">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="49938-586">고유한 클러스터형 SQL Server 테이블에서 열 또는 열에 인덱스가 정의 되 고 클러스터형된 인덱스의 열 이름을 반환 됩니다 primary key 제약 별도 열 집합에 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-586">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="49938-587">기본 키 열의 이름을 반환할 기본 키 인덱스의 이름을 지정 하는 SELECT 문을 사용 하 여 쿼리 힌트를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-587">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="49938-588">쿼리 힌트를 지정 하는 방법에 대 한 자세한 내용은 참조 하십시오 [쿼리 힌트 (Transact SQL)](http://msdn.microsoft.com/library/ms181714.aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-588">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="49938-589">경우는 <xref:System.Data.IDataAdapter> 에서 중복 열을 채우는 동안는 <xref:System.Data.DataTable>, 패턴을 사용 하 여 후속 열에 대 한 이름을 생성 "*columnname*1", "*columnname*2", "*columnname*3", 및 등입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-589">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="49938-590">놓 이기는 들어오는 데이터에 명명 되지 않은 열을 포함 하는 경우는 <xref:System.Data.DataSet> "column1", "Column2" 등에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-590">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="49938-591">여러 결과 집합에 추가 될 때를 <xref:System.Data.DataSet> 각 결과 집합을 별도 테이블에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-591">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="49938-592">추가 결과 집합이 지정한 테이블 이름 (예를 들어, "Table", "Table1", "Table2", 및 등입니다.)를 정수 값을 추가 하 여 이름이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-592">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="49938-593">열 및 테이블 이름을 사용 하 여 응용 프로그램은 이러한 명명 패턴을 사용 하 여 충돌 하지 않도록 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-593">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="49938-594"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 모든 행을 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-594"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="49938-595">사용 된 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 에 행을 추가 하는 방법을 <xref:System.Data.DataTable>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-595">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-596">구현의 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-596">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="49938-597">사용 하 여 여러 결과 대 한 스키마 정보를 검색할 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 사용 하 여는 <xref:System.Data.MissingSchemaAction> 로 `AddWithKey`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-597">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="49938-598">사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>,.NET Framework Data Provider for SQL Server를 실행 중인 문에 FOR BROWSE 절을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-598">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="49938-599">사용자는 SET FMTONLY ON 문 사용 하의 잠재적인 부작용을 알고 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-599">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="49938-600">자세한 내용은 SQL Server 온라인 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="49938-600">See SQL Server Books Online for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-601">
            <para>이 구현 된 <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> 메서드는 보호 되므로.NET Framework 데이터 공급자가 사용 하도록 설계 되었습니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-601">
              <para>This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, System.Data.IDbCommand command, string srcTable, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, string srcTable, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::String ^ srcTable, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * System.Data.IDbCommand * string * System.Data.CommandBehavior -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, command, srcTable, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="49938-602">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-602">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="49938-603">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-603">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="49938-604">The SQL SELECT statement used to retrieve rows from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-604">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="49938-605">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-605">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="49938-606">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-606">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-607">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-607">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-608">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-608">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-609">합니다 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 사용 하 여 데이터 원본에서 스키마를 검색 하는 메서드는 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-609">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="49938-610">와 연결 된 연결 개체는 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 유효 해야 하지만 열려 있이 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-610">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="49938-611">전에 연결이 닫히면 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 는 데이터를 검색 하려면을 열고 다음 닫는 하는를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-611">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="49938-612">연결 하기 전에 열려 있으면 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 는 호출을 열린 상태로 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-612">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="49938-613">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 작업 추가 <xref:System.Data.DataTable> 대상 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-613">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-614">그런 다음 열을 추가 합니다 <xref:System.Data.DataColumnCollection> 의 합니다 <xref:System.Data.DataTable>, 하 고 다음 구성 <xref:System.Data.DataColumn> 데이터 원본에 존재 하는 경우 속성:</span><span class="sxs-lookup"><span data-stu-id="49938-614">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="49938-615"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="49938-615"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="49938-616">설정 해야 합니다 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 고 <xref:System.Data.DataColumn.AutoIncrementSeed%2A> 개별적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-616">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="49938-617"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 또한 구성 합니다 <xref:System.Data.DataTable.PrimaryKey%2A> 고 <xref:System.Data.DataTable.Constraints%2A> 다음 규칙에 따라 속성:</span><span class="sxs-lookup"><span data-stu-id="49938-617"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="49938-618">하나 이상의 기본 키 열에서 반환 되는 경우는 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>에 대 한 기본 키 열으로 사용할는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-618">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="49938-619">기본 키 열이 없으면 반환 됩니다. 고유한 열은 하지만 모든 고유한 열이 null이 아닌 경우에 고유 열 기본 키로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-619">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="49938-620">열이 null을 허용 하는 경우는 <xref:System.Data.UniqueConstraint> 에 추가 됩니다는 <xref:System.Data.ConstraintCollection>, 하지만 <xref:System.Data.DataTable.PrimaryKey%2A> 속성이 설정 되지 않은 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-620">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="49938-621">기본 키 열에 대 한 기본 키 열으로 사용 된 기본 키 열 및 고유 열을 모두 반환 되는 경우는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-621">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="49938-622">기본 키 및 unique 제약 조건에 추가 됩니다는 <xref:System.Data.ConstraintCollection> 선행 규칙에 있지만 다른 제약 조건에 따라 유형이 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-622">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="49938-623">고유한 클러스터형 SQL Server 테이블에서 열 또는 열에 인덱스가 정의 되 고 클러스터형된 인덱스의 열 이름을 반환 됩니다 primary key 제약 별도 열 집합에 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-623">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="49938-624">기본 키 열의 이름을 반환할 기본 키 인덱스의 이름을 지정 하는 SELECT 문을 사용 하 여 쿼리 힌트를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-624">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="49938-625">쿼리 힌트를 지정 하는 방법에 대 한 자세한 내용은 참조 하십시오 [쿼리 힌트 (Transact SQL)](http://msdn.microsoft.com/library/ms181714.aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-625">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="49938-626">경우는 <xref:System.Data.IDataAdapter> 에서 중복 열을 채우는 동안는 <xref:System.Data.DataTable>, 패턴을 사용 하 여 후속 열에 대 한 이름을 생성 "*columnname*1", "*columnname*2", "*columnname*3", 및 등입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-626">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="49938-627">놓 이기는 들어오는 데이터에 명명 되지 않은 열을 포함 하는 경우는 <xref:System.Data.DataSet> "column1", "Column2" 등에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-627">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="49938-628">여러 결과 집합에 추가 될 때를 <xref:System.Data.DataSet> 각 결과 집합을 별도 테이블에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-628">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="49938-629">추가 결과 집합이 지정한 테이블 이름 (예를 들어, "Table", "Table1", "Table2", 및 등입니다.)를 정수 값을 추가 하 여 이름이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-629">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="49938-630">열 및 테이블 이름을 사용 하 여 응용 프로그램은 이러한 명명 패턴을 사용 하 여 충돌 하지 않도록 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-630">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="49938-631"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 메서드 시나리오를 지원 합니다. 여기서는 <xref:System.Data.DataSet> 여러 개 포함 된 <xref:System.Data.DataTable> 개체 이름이 대/소문자만 다른 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-631">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="49938-632">이러한 상황에서는 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 해당 테이블을 찾을 대/소문자 구분 비교를 수행 하 고 정확히 일치 하는 경우 새 테이블을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="49938-632">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="49938-633">다음 C# 코드는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49938-633">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="49938-634">경우 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 라고 하며 <xref:System.Data.DataSet> 하나만 포함 되어 <xref:System.Data.DataTable> 이름이 다른 경우에 의해서만 <xref:System.Data.DataTable> 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-634">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="49938-635">이 시나리오에서는 비교는 대/소문자 구분.</span><span class="sxs-lookup"><span data-stu-id="49938-635">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="49938-636">다음 C# 코드는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49938-636">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="49938-637"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 모든 행을 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-637"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="49938-638">사용 된 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 에 행을 추가 하는 방법을 <xref:System.Data.DataTable>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-638">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-639">구현의 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-639">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="49938-640">사용 하 여 여러 결과 대 한 스키마 정보를 검색할 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 사용 하 여는 <xref:System.Data.MissingSchemaAction> 로 `AddWithKey`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-640">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="49938-641">사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>,.NET Framework Data Provider for SQL Server를 실행 중인 문에 FOR BROWSE 절을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-641">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="49938-642">사용자는 SET FMTONLY ON 문 사용 하의 잠재적인 부작용을 알고 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-642">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="49938-643">자세한 내용은 SQL Server 온라인 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="49938-643">See SQL Server Books Online for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-644">
            <para>이 구현 된 <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> 메서드는 보호 되므로.NET Framework 데이터 공급자가 사용 하도록 설계 되었습니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-644">
              <para>This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected virtual System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedParameter : int * int -&gt; System.Data.IDataParameter&#xA;override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="dbDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">
          <span data-ttu-id="49938-645">The index of the command to retrieve the parameter from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-645">The index of the command to retrieve the parameter from.</span>
          </span>
        </param>
        <param name="parameterIndex">
          <span data-ttu-id="49938-646">The index of the parameter within the command.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-646">The index of the parameter within the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-647">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-647">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-648">The <see cref="T:System.Data.IDataParameter" /> specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-648">The <see cref="T:System.Data.IDataParameter" /> specified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-649"><xref:System.Data.Common.DbDataAdapter>,이 메서드는 throw <xref:System.NotSupportedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-649">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="49938-650">상속한 클래스 <xref:System.Data.Common.DbDataAdapter> 일괄 처리에 대 한 지원을 제공 하려면이 메서드를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-650">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="49938-651">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-651">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-652">
            <para>이 메서드는 보호 되 고.NET Framework 데이터 공급자가 사용 하도록 설계 되었습니다.  클래스에서 상속 되는 경우 <see cref="T:System.Data.Common.DbDataAdapter" /> 클래스 사용자가 일괄 처리를 실행 하도록 허용 하려면이 메서드를 재정의 하는 일괄 처리를 지원 합니다. 구현을 사용 하는 <paramref name="commandIdentifier" /> 요청된 된 명령을 찾습니다 제공을 사용 하 여는 <paramref name="parameterIndex" /> 요청 된 매개 변수를 찾으려는 제공 합니다. 예를 들어, 한 <paramref name="commandIdentifier" /> 0 및 <paramref name="parameterIndex" /> 0에서 일괄 처리의 첫 번째 명령은 첫 번째 매개 변수를 반환 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-652">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch. An implementation uses the <paramref name="commandIdentifier" /> provided to locate the requested command, then uses the <paramref name="parameterIndex" /> provided to locate the requested parameter. For example, a <paramref name="commandIdentifier" /> of 0 and a <paramref name="parameterIndex" /> of 0 returns the first parameter from the first command in the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedRecordsAffected : int *  *  -&gt; bool&#xA;override this.GetBatchedRecordsAffected : int *  *  -&gt; bool" Usage="dbDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="error" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">
          <span data-ttu-id="49938-653">The zero-based column ordinal of the individual command within the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-653">The zero-based column ordinal of the individual command within the batch.</span>
          </span>
        </param>
        <param name="recordsAffected">
          <span data-ttu-id="49938-654">The number of rows affected in the data store by the specified command within the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-654">The number of rows affected in the data store by the specified command within the batch.</span>
          </span>
        </param>
        <param name="error">
          <span data-ttu-id="49938-655">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-655">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span>
          </span>
          <span data-ttu-id="49938-656">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-656">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-657">Returns information about an individual update attempt within a larger batched update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-657">Returns information about an individual update attempt within a larger batched update.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-658">Information about an individual update attempt within a larger batched update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-658">Information about an individual update attempt within a larger batched update.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-659">일괄 처리 업데이트 논리를 지 원하는 데이터 공급자에는 일련의 가상 메서드를 재정의 해야 합니다는 <xref:System.Data.Common.DbDataAdapter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-659">Data providers that support batched updating logic must override a series of virtual methods on the <xref:System.Data.Common.DbDataAdapter> class.</span></span> <span data-ttu-id="49938-660">`GetBatchedRecordsAffected` 이러한 가상 메서드 중 하나를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="49938-660">`GetBatchedRecordsAffected` represents one of those virtual methods.</span></span> <span data-ttu-id="49938-661">합니다 `DbDataAdapter` 클래스가 의존 `GetBatchedRecordsAffected` 해당 표시 일괄 처리 내의 개별 업데이트 시도의 성공 여부를 확인 하려면 <xref:System.Data.DataRow> 적절 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-661">The `DbDataAdapter` class relies on `GetBatchedRecordsAffected` to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <xref:System.Data.DataRow> accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public override System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberSignature Language="F#" Value="override this.GetFillParameters : unit -&gt; System.Data.IDataParameter[]" Usage="dbDataAdapter.GetFillParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49938-662">Gets the parameters set by the user when executing an SQL SELECT statement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-662">Gets the parameters set by the user when executing an SQL SELECT statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-663">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-663">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected virtual void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeBatching();" />
      <MemberSignature Language="F#" Value="abstract member InitializeBatching : unit -&gt; unit&#xA;override this.InitializeBatching : unit -&gt; unit" Usage="dbDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49938-664">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-664">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-665"><xref:System.Data.Common.DbDataAdapter>,이 메서드는 throw <xref:System.NotSupportedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-665">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="49938-666">상속한 클래스 <xref:System.Data.Common.DbDataAdapter> 일괄 처리에 대 한 지원을 제공 하려면이 메서드를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-666">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="49938-667">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-667">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-668">
            <para>이 메서드는 보호 되 고.NET Framework 데이터 공급자가 사용 하도록 설계 되었습니다.  클래스에서 상속 되는 경우 <see cref="T:System.Data.Common.DbDataAdapter" /> 클래스를이 메서드를 재정의 하는 일괄 처리를 지원 합니다. 이 메서드는 일괄 처리를 지 원하는 데 필요한 모든 리소스를 초기화할 수 있도록 클래스를 제공 합니다. 예를 들어, 클래스는 명령 집합을 일괄 처리에서 보유 하는 데이터 구조를 할당할 수 있습니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-668">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method. This method gives the class the opportunity to initialize any resources necessary to support batching. For example, a class may allocate a data structure to hold the set of commands in the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ InsertCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49938-669">Gets or sets a command used to insert new records into the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-669">Gets or sets a command used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49938-670">A <see cref="T:System.Data.IDbCommand" /> 하는 동안 사용 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 데이터 집합에 새 행에 대 한 데이터 원본에서 레코드를 삽입 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-670">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-671">하는 동안 <xref:System.Data.Common.DbDataAdapter.Update%2A>이면이 속성은 설정 되지 않으며 기본 키 정보에 있으면 합니다 <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.InsertCommand%2A> 자동으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-671">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49938-672">다음 예제에서는 파생된 클래스 <xref:System.Data.OleDb.OleDbDataAdapter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-672">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFillError">
      <MemberSignature Language="C#" Value="protected virtual void OnFillError (System.Data.FillErrorEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFillError(class System.Data.FillErrorEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnFillError(System.Data.FillErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFillError (value As FillErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFillError(System::Data::FillErrorEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnFillError : System.Data.FillErrorEventArgs -&gt; unit&#xA;override this.OnFillError : System.Data.FillErrorEventArgs -&gt; unit" Usage="dbDataAdapter.OnFillError value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.FillErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit&#xA;override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="49938-673">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-673">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-674">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-674">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-675">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-675">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="49938-676">개요를 보려면 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-676">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-677">
            <para>재정의 하는 경우 <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> 메서드.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-677">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit&#xA;override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="49938-678">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-678">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-679">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-679">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-680">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-680">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="49938-681">개요를 보려면 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-681">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-682">
            <para>재정의 하는 경우 <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> 메서드.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-682">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> in a derived class, be sure to call the bases class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ SelectCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49938-683">Gets or sets a command used to select records in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-683">Gets or sets a command used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49938-684">A <see cref="T:System.Data.IDbCommand" /> 하는 동안 사용 되는 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 데이터 집합에 배치 하기 위해 데이터 원본에서 레코드를 선택 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-684">A <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="49938-685">다음 예제에서는 파생된 클래스 <xref:System.Data.OleDb.OleDbDataAdapter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-685">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49938-686">Gets or sets an SQL statement for deleting records from the data set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-686">Gets or sets an SQL statement for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49938-687">
            <see cref="T:System.Data.IDbCommand" /> 중에 사용 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 데이터 집합의 삭제 된 행에 대 한 데이터 원본에서 레코드를 삭제 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-687">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-688">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="49938-688">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="49938-689"><xref:System.Data.Common.DbDataAdapter> 인스턴스가 <xref:System.Data.IDbDataAdapter> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-689">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="49938-690">자세한 내용은 <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="49938-690">For more information, see <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49938-691">Gets or sets an SQL statement used to insert new records into the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-691">Gets or sets an SQL statement used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49938-692">
            <see cref="T:System.Data.IDbCommand" /> 하는 동안 사용 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 데이터 집합에 새 행에 대 한 데이터 원본에서 레코드를 삽입 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-692">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-693">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="49938-693">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="49938-694"><xref:System.Data.Common.DbDataAdapter> 인스턴스가 <xref:System.Data.IDbDataAdapter> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-694">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="49938-695">자세한 내용은 <xref:System.Data.IDbDataAdapter.InsertCommand%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="49938-695">For more information, see <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49938-696">Gets or sets an SQL statement used to select records in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-696">Gets or sets an SQL statement used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49938-697">
            <see cref="T:System.Data.IDbCommand" /> 하는 동안 사용 되는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 데이터 집합에 배치 하기 위해 데이터 원본에서 레코드를 선택 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-697">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-698">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="49938-698">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="49938-699"><xref:System.Data.Common.DbDataAdapter> 인스턴스가 <xref:System.Data.IDbDataAdapter> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-699">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="49938-700">자세한 내용은 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="49938-700">For more information, see <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49938-701">Gets or sets an SQL statement used to update records in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-701">Gets or sets an SQL statement used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49938-702">
            <see cref="T:System.Data.IDbCommand" /> 하는 동안 사용 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 데이터 집합의 수정 된 행에 대 한 데이터 원본에서 레코드를 업데이트 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-702">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-703">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="49938-703">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="49938-704"><xref:System.Data.Common.DbDataAdapter> 인스턴스가 <xref:System.Data.IDbDataAdapter> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-704">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="49938-705">자세한 내용은 <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="49938-705">For more information, see <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49938-706">Creates a new object that is a copy of the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-706">Creates a new object that is a copy of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-707">A new object that is a copy of this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-707">A new object that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-708">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="49938-708">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="49938-709"><xref:System.Data.Common.DbDataAdapter> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-709">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 <span data-ttu-id="49938-710">자세한 내용은 <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="49938-710">For more information, see <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected virtual void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TerminateBatching();" />
      <MemberSignature Language="F#" Value="abstract member TerminateBatching : unit -&gt; unit&#xA;override this.TerminateBatching : unit -&gt; unit" Usage="dbDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49938-711">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-711">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-712"><xref:System.Data.Common.DbDataAdapter>,이 메서드는 throw <xref:System.NotSupportedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-712">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="49938-713">상속한 클래스 <xref:System.Data.Common.DbDataAdapter> 일괄 처리에 대 한 지원을 제공 하려면이 메서드를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-713">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="49938-714">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-714">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="49938-715">
            <para>이 메서드는 보호 되 고.NET Framework 데이터 공급자가 사용 하도록 설계 되었습니다.  클래스에서 상속 되는 경우 <see cref="T:System.Data.Common.DbDataAdapter" /> 클래스를이 메서드를 재정의 하는 일괄 처리를 지원 합니다. 이 메서드를 통해 클래스의 일괄 처리를 지원 하기 위해 할당 된 모든 리소스를 삭제할 수 있습니다. 예를 들어, 클래스 명령 일괄 처리에서 보유 하는 데이터 구조 할당을 취소 될 수 있습니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-715">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method. This method gives the class the opportunity to dispose of any resources allocated to support batching. For example, the class may deallocate the data structure that holds the commands in the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49938-716">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-716">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataRow[] dataRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataRow[] dataRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataRows As DataRow()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] -&gt; int" Usage="dbDataAdapter.Update dataRows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="dataRows">
          <span data-ttu-id="49938-717">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-717">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-718">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-718">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-719">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-719">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-720">응용 프로그램 호출 하는 경우는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 메서드를 <xref:System.Data.Common.DbDataAdapter> 검사를 <xref:System.Data.DataRow.RowState%2A> 속성 합니다 에서구성된인덱스순서에따라각행에대해반복적으로필요한INSERT,UPDATE또는DELETE문을실행하고<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="49938-720">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-721">예를 들어 <xref:System.Data.Common.DbDataAdapter.Update%2A> 뒤에 INSERT 문과 DELETE 문의 다른 인해의 행 순서는 DELETE 문을 실행할 수 있습니다는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-721">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="49938-722">유의 해야 이러한 문은 일괄 처리 프로세스로 수행 되지 않습니다. 각 행은 개별적으로 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-722">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="49938-723">응용 프로그램에서 호출할 수는 <xref:System.Data.DataSet.GetChanges%2A> 문 형식 (예: 업데이트 하기 전에 삽입)의 시퀀스를 제어 해야 할 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-723">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="49938-724">자세한 내용은 [Dataadapter 사용 하 여 데이터 원본 업데이트](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-724">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="49938-725">하는 경우 INSERT, UPDATE 또는 DELETE 문이 지정 되지 않았습니다는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 메서드 예외를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-725">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="49938-726">만들 수 있습니다는 <xref:System.Data.SqlClient.SqlCommandBuilder> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder> 설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 개체는 `SelectCommand` .NET Framework 데이터 공급자의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-726">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="49938-727">설정 하지 않으면 추가적인 모든 SQL 문을에서 생성 된 후에 **CommandBuilder**합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-727">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="49938-728">이 세대 논리에 키 열 정보가 필요 합니다 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-728">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-729">자세한 내용은 참조 [commandbuilder를 사용 하를 사용 하 여 명령 생성](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-729">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="49938-730"><xref:System.Data.Common.DbDataAdapter.Update%2A> 메서드 업데이트를 수행 하기 전에 첫 번째 매핑의에 나열 된 테이블에서 행을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-730">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="49938-731">합니다 <xref:System.Data.Common.DbDataAdapter.Update%2A> 다음의 값을 사용 하 여 행을 새로 고치는 <xref:System.Data.IDbCommand.UpdatedRowSource%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-731">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="49938-732">반환 되는 모든 추가 행은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-732">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="49938-733">모든 데이터에 다시 로드 된 후는 <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 이벤트가 발생 하는 조정 된 검사할 수 있도록 <xref:System.Data.DataSet> 행 및 모든 출력 매개 변수는 명령으로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-733">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="49938-734">행을 성공적으로 업데이트 한 후 해당 행 변경 내용이 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-734">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="49938-735">사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.Update%2A>, 실행 순서는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-735">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="49938-736">값을 <xref:System.Data.DataRow> 매개 변수 값으로 이동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-736">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="49938-737"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-737">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="49938-738">명령을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-738">The command executes.</span></span>  
  
4.  <span data-ttu-id="49938-739">명령으로 설정 되어 있으면 `FirstReturnedRecord`, 첫 번째 반환 결과에 위치한는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-739">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="49938-740">에 배치 됩니다 출력 매개 변수가 있는 경우는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-740">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="49938-741"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-741">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="49938-742"><xref:System.Data.DataRow.AcceptChanges%2A>가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="49938-742"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="49938-743">와 연결 된 각 명령을 <xref:System.Data.Common.DbDataAdapter> 일반적으로 연결 된 매개 변수 컬렉션을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-743">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="49938-744">매개 변수를 통해 현재 행에 매핑되는 `SourceColumn` 및 `SourceVersion` .NET Framework 데이터 공급자의 속성 `Parameter` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-744">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="49938-745">`SourceColumn` 참조를 <xref:System.Data.DataTable> 열은는 <xref:System.Data.Common.DbDataAdapter> 현재 행에 대 한 매개 변수 값을 가져오기에 대 한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-745">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="49938-746">`SourceColumn` 테이블 매핑을 적용 하려면 먼저 매핑되지 않은 열 이름으로 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-746">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="49938-747">하는 경우 `SourceColumn` 참조를 존재 하지 않는 열에 수행 되는 동작에 따라 달라 집니다 다음 중 하나 <xref:System.Data.MissingMappingAction> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-747">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="49938-748">열거형 값</span><span class="sxs-lookup"><span data-stu-id="49938-748">Enumeration value</span></span>|<span data-ttu-id="49938-749">수행한 작업</span><span class="sxs-lookup"><span data-stu-id="49938-749">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="49938-750">원본 열 이름 및 테이블 이름을 사용 하 여는 <xref:System.Data.DataSet> 매핑이 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="49938-750">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="49938-751"><xref:System.SystemException> 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-751">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="49938-752">매핑을 명시적으로 설정 하는 경우 입력된 매개 변수의 매핑이 없을 일반적으로 오류의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-752">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="49938-753"><xref:System.SystemException> 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-753">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="49938-754">합니다 `SourceColumn` 속성은 또한 출력에 대 한 값을 매핑할 사용 또는 입/출력 매개 변수를는 `DataSet`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-754">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="49938-755">존재 하지 않는 열을 참조 하는 경우 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-755">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="49938-756">합니다 `SourceVersion` .NET Framework 데이터 공급자의 속성 `Parameter` 클래스 열 값의 원본, 현재 또는 제안 버전 사용 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-756">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="49938-757">이 기능은 낙관적 동시성 위반을 검사 하는 UPDATE 문의 WHERE 절에 원래 값을 포함 하도록 자주 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-757">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-758">행을 업데이트 하는 동안 오류가 발생 하는 경우 예외가 throw 되 고 업데이트의 실행이 중단 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-758">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="49938-759">오류가 발생 하는 경우 예외를 생성 하지 않고 업데이트 작업을 계속 하려면 설정 합니다 <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 속성을 `true` 호출 하기 전에 <xref:System.Data.Common.DbDataAdapter.Update%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-759">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="49938-760">내에서 행당 별로 오류에 응답할 수도 있습니다는 `RowUpdated` DataAdapter의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-760">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="49938-761">내에서 예외를 생성 하지 않고 업데이트 작업을 계속 하려면를 `RowUpdated` 이벤트를 설정 합니다 <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> 의 속성을 <xref:System.Data.Common.RowUpdatedEventArgs> 를 <xref:System.Data.UpdateStatus.Continue>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-761">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49938-762">다음 예제에서는 파생된 클래스 <xref:System.Data.OleDb.OleDbDataAdapter>데이터 소스를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-762">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="49938-763">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-763">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="49938-764">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-764">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="49938-765">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-765">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="49938-766">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-766">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="49938-767">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-767">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="49938-768">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-768">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Update(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Update dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="49938-769">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-769">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-770">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-770">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-771">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-771">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-772">응용 프로그램 호출 하는 경우는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 메서드를 <xref:System.Data.Common.DbDataAdapter> 검사를 <xref:System.Data.DataRow.RowState%2A> 속성 합니다 에서구성된인덱스순서에따라각행에대해반복적으로필요한INSERT,UPDATE또는DELETE문을실행하고<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="49938-772">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-773">예를 들어 <xref:System.Data.Common.DbDataAdapter.Update%2A> 뒤에 INSERT 문과 DELETE 문의 다른 인해의 행 순서는 DELETE 문을 실행할 수 있습니다는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-773">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="49938-774">유의 해야 이러한 문은 일괄 처리 프로세스로 수행 되지 않습니다. 각 행은 개별적으로 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-774">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="49938-775">응용 프로그램에서 호출할 수는 <xref:System.Data.DataSet.GetChanges%2A> 문 형식 (예: 업데이트 하기 전에 삽입)의 시퀀스를 제어 해야 할 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-775">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="49938-776">자세한 내용은 [Dataadapter 사용 하 여 데이터 원본 업데이트](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-776">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="49938-777">하는 경우 INSERT, UPDATE 또는 DELETE 문이 지정 되지 않았습니다는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 메서드 예외를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-777">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="49938-778">만들 수 있습니다는 <xref:System.Data.SqlClient.SqlCommandBuilder> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder> 설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 개체는 `SelectCommand` .NET Framework 데이터 공급자의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-778">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="49938-779">설정 하지 않으면 추가적인 모든 SQL 문을에서 생성 된 후에 **CommandBuilder**합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-779">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="49938-780">이 세대 논리에 키 열 정보가 필요 합니다 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-780">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-781">자세한 내용은 참조 [commandbuilder를 사용 하를 사용 하 여 명령 생성](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-781">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="49938-782"><xref:System.Data.Common.DbDataAdapter.Update%2A> 메서드 업데이트를 수행 하기 전에 첫 번째 매핑의에 나열 된 테이블에서 행을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-782">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="49938-783">합니다 <xref:System.Data.Common.DbDataAdapter.Update%2A> 다음의 값을 사용 하 여 행을 새로 고치는 <xref:System.Data.IDbCommand.UpdatedRowSource%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-783">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="49938-784">반환 되는 모든 추가 행은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-784">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="49938-785">모든 데이터에 다시 로드 된 후는 <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 이벤트가 발생 하는 조정 된 검사할 수 있도록 <xref:System.Data.DataSet> 행 및 모든 출력 매개 변수는 명령으로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-785">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="49938-786">행을 성공적으로 업데이트 한 후 해당 행 변경 내용이 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-786">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="49938-787">사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.Update%2A>, 실행 순서는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-787">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="49938-788">값을 <xref:System.Data.DataRow> 매개 변수 값으로 이동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-788">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="49938-789"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-789">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="49938-790">명령을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-790">The command executes.</span></span>  
  
4.  <span data-ttu-id="49938-791">명령으로 설정 되어 있으면 `FirstReturnedRecord`, 첫 번째 반환 결과에 위치한는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-791">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="49938-792">에 배치 됩니다 출력 매개 변수가 있는 경우는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-792">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="49938-793"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-793">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="49938-794"><xref:System.Data.DataRow.AcceptChanges%2A>가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="49938-794"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="49938-795">와 연결 된 각 명령을 <xref:System.Data.Common.DbDataAdapter> 일반적으로 연결 된 매개 변수 컬렉션을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-795">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="49938-796">매개 변수를 통해 현재 행에 매핑되는 `SourceColumn` 및 `SourceVersion` .NET Framework 데이터 공급자의 속성 `Parameter` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-796">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="49938-797">`SourceColumn` 참조를 <xref:System.Data.DataTable> 열은는 <xref:System.Data.Common.DbDataAdapter> 현재 행에 대 한 매개 변수 값을 가져오기에 대 한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-797">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="49938-798">`SourceColumn` 테이블 매핑을 적용 하려면 먼저 매핑되지 않은 열 이름으로 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-798">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="49938-799">하는 경우 `SourceColumn` 참조를 존재 하지 않는 열에 수행 되는 동작에 따라 달라 집니다 다음 중 하나 <xref:System.Data.MissingMappingAction> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-799">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="49938-800">열거형 값</span><span class="sxs-lookup"><span data-stu-id="49938-800">Enumeration value</span></span>|<span data-ttu-id="49938-801">수행한 작업</span><span class="sxs-lookup"><span data-stu-id="49938-801">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="49938-802">원본 열 이름 및 테이블 이름을 사용 하 여는 <xref:System.Data.DataSet> 매핑이 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="49938-802">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="49938-803"><xref:System.SystemException> 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-803">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="49938-804">매핑을 명시적으로 설정 하는 경우 입력된 매개 변수의 매핑이 없을 일반적으로 오류의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-804">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="49938-805"><xref:System.SystemException> 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-805">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="49938-806">합니다 `SourceColumn` 속성은 또한 출력에 대 한 값을 매핑할 사용 또는 입/출력 매개 변수를는 `DataSet`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-806">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="49938-807">존재 하지 않는 열을 참조 하는 경우 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-807">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="49938-808">합니다 `SourceVersion` .NET Framework 데이터 공급자의 속성 `Parameter` 클래스 열 값의 원본, 현재 또는 제안 버전 사용 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-808">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="49938-809">이 기능은 낙관적 동시성 위반을 검사 하는 UPDATE 문의 WHERE 절에 원래 값을 포함 하도록 자주 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-809">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-810">행을 업데이트 하는 동안 오류가 발생 하는 경우 예외가 throw 되 고 업데이트의 실행이 중단 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-810">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="49938-811">오류가 발생 하는 경우 예외를 생성 하지 않고 업데이트 작업을 계속 하려면 설정 합니다 <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 속성을 `true` 호출 하기 전에 <xref:System.Data.Common.DbDataAdapter.Update%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-811">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="49938-812">내에서 행당 별로 오류에 응답할 수도 있습니다는 `RowUpdated` DataAdapter의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-812">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="49938-813">내에서 예외를 생성 하지 않고 업데이트 작업을 계속 하려면를 `RowUpdated` 이벤트를 설정 합니다 <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> 의 속성을 <xref:System.Data.Common.RowUpdatedEventArgs> 를 <xref:System.Data.UpdateStatus.Continue>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-813">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49938-814">다음 예제에서는 파생된 클래스 <xref:System.Data.OleDb.OleDbDataAdapter>데이터 소스를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-814">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="49938-815">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-815">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="49938-816">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-816">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Update dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="49938-817">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-817">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-818">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-818">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-819">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-819">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-820">응용 프로그램 호출 하는 경우는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 메서드를 <xref:System.Data.Common.DbDataAdapter> 검사를 <xref:System.Data.DataRow.RowState%2A> 속성 합니다 에서구성된인덱스순서에따라각행에대해반복적으로필요한INSERT,UPDATE또는DELETE문을실행하고<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="49938-820">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-821">예를 들어 <xref:System.Data.Common.DbDataAdapter.Update%2A> 뒤에 INSERT 문과 DELETE 문의 다른 인해의 행 순서는 DELETE 문을 실행할 수 있습니다는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-821">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="49938-822">유의 해야 이러한 문은 일괄 처리 프로세스로 수행 되지 않습니다. 각 행은 개별적으로 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-822">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="49938-823">응용 프로그램에서 호출할 수는 <xref:System.Data.DataSet.GetChanges%2A> 문 형식 (예: 업데이트 하기 전에 삽입)의 시퀀스를 제어 해야 할 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-823">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="49938-824">자세한 내용은 [Dataadapter 사용 하 여 데이터 원본 업데이트](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-824">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="49938-825">하는 경우 INSERT, UPDATE 또는 DELETE 문이 지정 되지 않았습니다는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 메서드 예외를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-825">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="49938-826">만들 수 있습니다는 <xref:System.Data.SqlClient.SqlCommandBuilder> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder> 설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 개체는 `SelectCommand` .NET Framework 데이터 공급자의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-826">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="49938-827">설정 하지 않으면 추가적인 모든 SQL 문을에서 생성 된 후에 **CommandBuilder**합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-827">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="49938-828">이 세대 논리에 키 열 정보가 필요 합니다 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-828">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-829">자세한 내용은 참조 [commandbuilder를 사용 하를 사용 하 여 명령 생성](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-829">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="49938-830"><xref:System.Data.Common.DbDataAdapter.Update%2A> 메서드 업데이트를 수행 하기 전에 첫 번째 매핑의에 나열 된 테이블에서 행을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-830">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="49938-831">합니다 <xref:System.Data.Common.DbDataAdapter.Update%2A> 다음의 값을 사용 하 여 행을 새로 고치는 <xref:System.Data.IDbCommand.UpdatedRowSource%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-831">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="49938-832">반환 되는 모든 추가 행은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-832">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="49938-833">모든 데이터에 다시 로드 된 후는 <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 이벤트가 발생 하는 조정 된 검사할 수 있도록 <xref:System.Data.DataSet> 행 및 모든 출력 매개 변수는 명령으로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-833">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="49938-834">행을 성공적으로 업데이트 한 후 해당 행 변경 내용이 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-834">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="49938-835">사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.Update%2A>, 실행 순서는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-835">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="49938-836">값을 <xref:System.Data.DataRow> 매개 변수 값으로 이동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-836">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="49938-837"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-837">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="49938-838">명령을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-838">The command executes.</span></span>  
  
4.  <span data-ttu-id="49938-839">명령으로 설정 되어 있으면 `FirstReturnedRecord`, 첫 번째 반환 결과에 위치한는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-839">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="49938-840">에 배치 됩니다 출력 매개 변수가 있는 경우는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-840">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="49938-841"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-841">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="49938-842"><xref:System.Data.DataRow.AcceptChanges%2A>가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="49938-842"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="49938-843">와 연결 된 각 명령을 <xref:System.Data.Common.DbDataAdapter> 일반적으로 연결 된 매개 변수 컬렉션을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-843">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="49938-844">매개 변수를 통해 현재 행에 매핑되는 `SourceColumn` 및 `SourceVersion` .NET Framework 데이터 공급자의 속성 `Parameter` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-844">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="49938-845">`SourceColumn` 참조를 <xref:System.Data.DataTable> 열은는 <xref:System.Data.Common.DbDataAdapter> 현재 행에 대 한 매개 변수 값을 가져오기에 대 한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-845">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="49938-846">`SourceColumn` 테이블 매핑을 적용 하려면 먼저 매핑되지 않은 열 이름으로 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-846">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="49938-847">하는 경우 `SourceColumn` 참조를 존재 하지 않는 열에 수행 되는 동작에 따라 달라 집니다 다음 중 하나 <xref:System.Data.MissingMappingAction> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-847">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="49938-848">열거형 값</span><span class="sxs-lookup"><span data-stu-id="49938-848">Enumeration value</span></span>|<span data-ttu-id="49938-849">수행한 작업</span><span class="sxs-lookup"><span data-stu-id="49938-849">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="49938-850">원본 열 이름 및 테이블 이름을 사용 하 여는 <xref:System.Data.DataSet> 매핑이 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="49938-850">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="49938-851"><xref:System.SystemException> 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-851">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="49938-852">매핑을 명시적으로 설정 하는 경우 입력된 매개 변수의 매핑이 없을 일반적으로 오류의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-852">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="49938-853"><xref:System.SystemException> 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-853">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="49938-854">합니다 `SourceColumn` 속성은 또한 출력에 대 한 값을 매핑할 사용 또는 입/출력 매개 변수를는 `DataSet`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-854">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="49938-855">존재 하지 않는 열을 참조 하는 경우 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-855">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="49938-856">합니다 `SourceVersion` .NET Framework 데이터 공급자의 속성 `Parameter` 클래스 열 값의 원본, 현재 또는 제안 버전 사용 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-856">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="49938-857">이 기능은 낙관적 동시성 위반을 검사 하는 UPDATE 문의 WHERE 절에 원래 값을 포함 하도록 자주 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-857">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-858">행을 업데이트 하는 동안 오류가 발생 하는 경우 예외가 throw 되 고 업데이트의 실행이 중단 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-858">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="49938-859">오류가 발생 하는 경우 예외를 생성 하지 않고 업데이트 작업을 계속 하려면 설정 합니다 <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 속성을 `true` 호출 하기 전에 <xref:System.Data.Common.DbDataAdapter.Update%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-859">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="49938-860">내에서 행당 별로 오류에 응답할 수도 있습니다는 `RowUpdated` DataAdapter의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-860">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="49938-861">내에서 예외를 생성 하지 않고 업데이트 작업을 계속 하려면를 `RowUpdated` 이벤트를 설정 합니다 <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> 의 속성을 <xref:System.Data.Common.RowUpdatedEventArgs> 를 <xref:System.Data.UpdateStatus.Continue>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-861">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49938-862">다음 예제에서는 파생된 클래스 <xref:System.Data.OleDb.OleDbDataAdapter>데이터 소스를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-862">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="49938-863">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-863">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="49938-864">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-864">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="49938-865">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-865">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="49938-866">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-866">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="49938-867">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-867">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="49938-868">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-868">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="protected virtual int Update (System.Data.DataRow[] dataRows, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Update(class System.Data.DataRow[] dataRows, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Update (dataRows As DataRow(), tableMapping As DataTableMapping) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] * System.Data.Common.DataTableMapping -&gt; int" Usage="dbDataAdapter.Update (dataRows, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRows">
          <span data-ttu-id="49938-869">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-869">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="49938-870">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-870">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-871">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-871">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-872">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-872">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-873">응용 프로그램 호출 하는 경우는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 메서드를 <xref:System.Data.Common.DbDataAdapter> 검사를 <xref:System.Data.DataRow.RowState%2A> 속성 합니다 에서구성된인덱스순서에따라각행에대해반복적으로필요한INSERT,UPDATE또는DELETE문을실행하고<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="49938-873">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-874">예를 들어 <xref:System.Data.Common.DbDataAdapter.Update%2A> 뒤에 INSERT 문과 DELETE 문의 다른 인해의 행 순서는 DELETE 문을 실행할 수 있습니다는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-874">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="49938-875">유의 해야 이러한 문은 일괄 처리 프로세스로 수행 되지 않습니다. 각 행은 개별적으로 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-875">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="49938-876">응용 프로그램에서 호출할 수는 <xref:System.Data.DataSet.GetChanges%2A> 문 형식 (예: 업데이트 하기 전에 삽입)의 시퀀스를 제어 해야 할 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-876">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="49938-877">자세한 내용은 [Dataadapter 사용 하 여 데이터 원본 업데이트](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-877">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="49938-878">하는 경우 INSERT, UPDATE 또는 DELETE 문이 지정 되지 않았습니다는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 메서드 예외를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-878">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="49938-879">만들 수 있습니다는 <xref:System.Data.SqlClient.SqlCommandBuilder> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder> 설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 개체는 `SelectCommand` .NET Framework 데이터 공급자의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-879">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="49938-880">설정 하지 않으면 추가적인 모든 SQL 문을에서 생성 된 후에 **CommandBuilder**합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-880">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="49938-881">이 세대 논리에 키 열 정보가 필요 합니다 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-881">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-882">자세한 내용은 참조 [commandbuilder를 사용 하를 사용 하 여 명령 생성](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-882">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="49938-883"><xref:System.Data.Common.DbDataAdapter.Update%2A> 메서드 업데이트를 수행 하기 전에 첫 번째 매핑의에 나열 된 테이블에서 행을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-883">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="49938-884">합니다 <xref:System.Data.Common.DbDataAdapter.Update%2A> 다음의 값을 사용 하 여 행을 새로 고치는 <xref:System.Data.IDbCommand.UpdatedRowSource%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-884">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="49938-885">반환 되는 모든 추가 행은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-885">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="49938-886">모든 데이터에 다시 로드 된 후는 <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 이벤트가 발생 하는 조정 된 검사할 수 있도록 <xref:System.Data.DataSet> 행 및 모든 출력 매개 변수는 명령으로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-886">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="49938-887">행을 성공적으로 업데이트 한 후 해당 행 변경 내용이 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-887">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="49938-888">사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.Update%2A>, 실행 순서는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-888">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="49938-889">값을 <xref:System.Data.DataRow> 매개 변수 값으로 이동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-889">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="49938-890"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-890">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="49938-891">명령을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-891">The command executes.</span></span>  
  
4.  <span data-ttu-id="49938-892">명령으로 설정 되어 있으면 `FirstReturnedRecord`, 첫 번째 반환 결과에 위치한는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-892">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="49938-893">에 배치 됩니다 출력 매개 변수가 있는 경우는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-893">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="49938-894"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-894">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="49938-895"><xref:System.Data.DataRow.AcceptChanges%2A>가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="49938-895"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="49938-896">와 연결 된 각 명령을 <xref:System.Data.Common.DbDataAdapter> 일반적으로 연결 된 매개 변수 컬렉션을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-896">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="49938-897">매개 변수를 통해 현재 행에 매핑되는 `SourceColumn` 및 `SourceVersion` .NET Framework 데이터 공급자의 속성 `Parameter` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-897">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="49938-898">`SourceColumn` 참조를 <xref:System.Data.DataTable> 열은는 <xref:System.Data.Common.DbDataAdapter> 현재 행에 대 한 매개 변수 값을 가져오기에 대 한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-898">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="49938-899">`SourceColumn` 테이블 매핑을 적용 하려면 먼저 매핑되지 않은 열 이름으로 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-899">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="49938-900">하는 경우 `SourceColumn` 참조를 존재 하지 않는 열에 수행 되는 동작에 따라 달라 집니다 다음 중 하나 <xref:System.Data.MissingMappingAction> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-900">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="49938-901">열거형 값</span><span class="sxs-lookup"><span data-stu-id="49938-901">Enumeration value</span></span>|<span data-ttu-id="49938-902">수행한 작업</span><span class="sxs-lookup"><span data-stu-id="49938-902">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="49938-903">원본 열 이름 및 테이블 이름을 사용 하 여는 <xref:System.Data.DataSet> 매핑이 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="49938-903">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="49938-904"><xref:System.SystemException> 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-904">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="49938-905">매핑을 명시적으로 설정 하는 경우 입력된 매개 변수의 매핑이 없을 일반적으로 오류의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-905">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="49938-906"><xref:System.SystemException> 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-906">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="49938-907">합니다 `SourceColumn` 속성은 또한 출력에 대 한 값을 매핑할 사용 또는 입/출력 매개 변수를는 `DataSet`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-907">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="49938-908">존재 하지 않는 열을 참조 하는 경우 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-908">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="49938-909">합니다 `SourceVersion` .NET Framework 데이터 공급자의 속성 `Parameter` 클래스 열 값의 원본, 현재 또는 제안 버전 사용 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-909">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="49938-910">이 기능은 낙관적 동시성 위반을 검사 하는 UPDATE 문의 WHERE 절에 원래 값을 포함 하도록 자주 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-910">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-911">행을 업데이트 하는 동안 오류가 발생 하는 경우 예외가 throw 되 고 업데이트의 실행이 중단 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-911">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="49938-912">오류가 발생 하는 경우 예외를 생성 하지 않고 업데이트 작업을 계속 하려면 설정 합니다 <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 속성을 `true` 호출 하기 전에 <xref:System.Data.Common.DbDataAdapter.Update%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-912">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="49938-913">내에서 행당 별로 오류에 응답할 수도 있습니다는 `RowUpdated` DataAdapter의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-913">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="49938-914">내에서 예외를 생성 하지 않고 업데이트 작업을 계속 하려면를 `RowUpdated` 이벤트를 설정 합니다 <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> 의 속성을 <xref:System.Data.Common.RowUpdatedEventArgs> 를 <xref:System.Data.UpdateStatus.Continue>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-914">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="49938-915">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-915">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="49938-916">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-916">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="49938-917">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-917">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="49938-918">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-918">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="49938-919">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-919">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="49938-920">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-920">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Update (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="49938-921">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-921">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="49938-922">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-922">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49938-923">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-923">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49938-924">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-924">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-925">응용 프로그램 호출 하는 경우는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 메서드를 <xref:System.Data.Common.DbDataAdapter> 검사를 <xref:System.Data.DataRow.RowState%2A> 속성 합니다 에서구성된인덱스순서에따라각행에대해반복적으로필요한INSERT,UPDATE또는DELETE문을실행하고<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="49938-925">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-926">예를 들어 <xref:System.Data.Common.DbDataAdapter.Update%2A> 뒤에 INSERT 문과 DELETE 문의 다른 인해의 행 순서는 DELETE 문을 실행할 수 있습니다는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-926">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="49938-927">유의 해야 이러한 문은 일괄 처리 프로세스로 수행 되지 않습니다. 각 행은 개별적으로 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-927">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="49938-928">응용 프로그램에서 호출할 수는 <xref:System.Data.DataSet.GetChanges%2A> 명령문의 시퀀스를 제어 해야 하는 경우에 메서드 (예를 들어 업데이트 하기 전에 삽입).</span><span class="sxs-lookup"><span data-stu-id="49938-928">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</span></span> <span data-ttu-id="49938-929">자세한 내용은 [Dataadapter 사용 하 여 데이터 원본 업데이트](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-929">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="49938-930">하는 경우 INSERT, UPDATE 또는 DELETE 문이 지정 되지 않았습니다는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 메서드 예외를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-930">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="49938-931">만들 수 있습니다는 <xref:System.Data.SqlClient.SqlCommandBuilder> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder> 설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 개체는 `SelectCommand` .NET Framework 데이터 공급자의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-931">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="49938-932">설정 하지 않으면 추가적인 모든 SQL 문을에서 생성 된 후에 **CommandBuilder**합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-932">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="49938-933">이 세대 논리에 키 열 정보가 필요 합니다 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-933">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-934">자세한 내용은 참조 [commandbuilder를 사용 하를 사용 하 여 명령 생성](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-934">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="49938-935"><xref:System.Data.Common.DbDataAdapter.Update%2A> 메서드 시나리오를 지원 합니다. 여기서는 <xref:System.Data.DataSet> 여러 개 포함 된 <xref:System.Data.DataTable> 개체 이름이 대/소문자만 다른 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-935">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="49938-936">이름이 같지만 서로 다른 경우를 사용 하 여 여러 테이블에 존재 하는 경우는 `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> 해당 테이블을 찾을 대/소문자 구분 비교를 수행 하 고 정확히 일치 하는 경우 예외를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-936">When multiple tables with the same name, but different case, exist in a `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</span></span> <span data-ttu-id="49938-937">다음 C# 코드는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49938-937">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet ds = new DataSet();  
 ds.Tables.Add("aaa");  
 ds.Tables.Add("AAA");  
 adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.  
 adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.  
    adapter.Update(ds, "Aaa"); // Results in an exception.  
```  
  
 <span data-ttu-id="49938-938">경우 <xref:System.Data.Common.DbDataAdapter.Update%2A> 라고 하며 <xref:System.Data.DataSet> 하나만 포함 되어 <xref:System.Data.DataTable> 이름이 다른 경우에 의해서만 <xref:System.Data.DataTable> 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-938">If <xref:System.Data.Common.DbDataAdapter.Update%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="49938-939">이 시나리오에서는 비교는 대/소문자 구분.</span><span class="sxs-lookup"><span data-stu-id="49938-939">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="49938-940">다음 C# 코드는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49938-940">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="49938-941"><xref:System.Data.Common.DbDataAdapter.Update%2A> 메서드 업데이트를 수행 하기 전에 첫 번째 매핑의에 나열 된 테이블에서 행을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-941">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="49938-942">합니다 <xref:System.Data.Common.DbDataAdapter.Update%2A> 다음의 값을 사용 하 여 행을 새로 고치는 <xref:System.Data.IDbCommand.UpdatedRowSource%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-942">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="49938-943">반환 되는 모든 추가 행은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-943">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="49938-944">모든 데이터에 다시 로드 된 후는 <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 이벤트가 발생 하는 조정 된 검사할 수 있도록 <xref:System.Data.DataSet> 행 및 모든 출력 매개 변수는 명령으로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-944">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="49938-945">행을 성공적으로 업데이트 한 후 해당 행 변경 내용이 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-945">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="49938-946">사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.Update%2A>, 실행 순서는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-946">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="49938-947">값을 <xref:System.Data.DataRow> 매개 변수 값으로 이동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-947">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="49938-948"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-948">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="49938-949">명령을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-949">The command executes.</span></span>  
  
4.  <span data-ttu-id="49938-950">명령으로 설정 되어 있으면 `FirstReturnedRecord`, 첫 번째 반환 결과에 위치한는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-950">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="49938-951">에 배치 됩니다 출력 매개 변수가 있는 경우는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-951">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="49938-952"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-952">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="49938-953"><xref:System.Data.DataRow.AcceptChanges%2A>가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="49938-953"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="49938-954">와 연결 된 각 명령을 <xref:System.Data.Common.DbDataAdapter> 일반적으로 연결 된 매개 변수 컬렉션을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-954">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="49938-955">매개 변수를 통해 현재 행에 매핑되는 `SourceColumn` 및 `SourceVersion` .NET Framework 데이터 공급자의 속성 `Parameter` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-955">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="49938-956">`SourceColumn` 참조를 <xref:System.Data.DataTable> 열은는 <xref:System.Data.Common.DbDataAdapter> 현재 행에 대 한 매개 변수 값을 가져오기에 대 한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-956">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="49938-957">`SourceColumn` 테이블 매핑을 적용 하려면 먼저 매핑되지 않은 열 이름으로 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-957">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="49938-958">하는 경우 `SourceColumn` 참조를 존재 하지 않는 열에 수행 되는 동작에 따라 달라 집니다 다음 중 하나 <xref:System.Data.MissingMappingAction> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-958">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="49938-959">열거형 값</span><span class="sxs-lookup"><span data-stu-id="49938-959">Enumeration value</span></span>|<span data-ttu-id="49938-960">수행한 작업</span><span class="sxs-lookup"><span data-stu-id="49938-960">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="49938-961">원본 열 이름 및 테이블 이름을 사용 하 여는 <xref:System.Data.DataSet> 매핑이 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="49938-961">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="49938-962"><xref:System.SystemException> 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-962">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="49938-963">매핑을 명시적으로 설정 하는 경우 입력된 매개 변수의 매핑이 없을 일반적으로 오류의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-963">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="49938-964"><xref:System.SystemException> 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-964">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="49938-965">합니다 `SourceColumn` 속성은 또한 출력에 대 한 값을 매핑할 사용 또는 입/출력 매개 변수를는 `DataSet`합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-965">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="49938-966">존재 하지 않는 열을 참조 하는 경우 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-966">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="49938-967">합니다 `SourceVersion` .NET Framework 데이터 공급자의 속성 `Parameter` 클래스 열 값의 원본, 현재 또는 제안 버전 사용 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-967">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="49938-968">이 기능은 낙관적 동시성 위반을 검사 하는 UPDATE 문의 WHERE 절에 원래 값을 포함 하도록 자주 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-968">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49938-969">행을 업데이트 하는 동안 오류가 발생 하는 경우 예외가 throw 되 고 업데이트의 실행이 중단 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-969">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="49938-970">오류가 발생 하는 경우 예외를 생성 하지 않고 업데이트 작업을 계속 하려면 설정 합니다 <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 속성을 `true` 호출 하기 전에 <xref:System.Data.Common.DbDataAdapter.Update%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-970">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="49938-971">내에서 행당 별로 오류에 응답할 수도 있습니다는 `RowUpdated` DataAdapter의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-971">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="49938-972">내에서 예외를 생성 하지 않고 업데이트 작업을 계속 하려면를 `RowUpdated` 이벤트를 설정 합니다 <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> 의 속성을 <xref:System.Data.Common.RowUpdatedEventArgs> 를 <xref:System.Data.UpdateStatus.Continue>입니다.</span><span class="sxs-lookup"><span data-stu-id="49938-972">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49938-973">다음 예제에서는 파생된 클래스 <xref:System.Data.OleDb.OleDbDataAdapter>데이터 소스를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-973">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="49938-974">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-974">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="49938-975">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-975">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="49938-976">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-976">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public virtual int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49938-977">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-977">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49938-978">일괄 작업당 처리할 행 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-978">The number of rows to process per batch.</span>
          </span>
          <span data-ttu-id="49938-979">
            <list type="table">
              <listheader>
                <term> 값이 </term>
                <description> 효과 </description>
              </listheader>
              <item>
                <term> 0 </term>
                <description> 일괄 작업 크기에는 제한이 없습니다.  </description>
              </item>
              <item>
                <term> 1 </term>
                <description> 일괄 처리 업데이트를 사용 하지 않도록 설정 합니다.  </description>
              </item>
              <item>
                <term> &gt; 1 </term>
                <description> 변경 내용이 일괄 처리를 사용 하 여 전송 됩니다 <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> 번 작업 합니다.  </description>
              </item>
            </list>  이 1이 아닌 값으로 설정 하는 경우 모든 명령이 연결 된 합니다 <see cref="T:System.Data.Common.DbDataAdapter" /> 있어야 해당 <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> 속성으로 설정 * * 없음 * * 또는 * * 출력 매개 변수 * *.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-979">
              <list type="table">
                <listheader>
                  <term> Value is  </term>
                  <description> Effect  </description>
                </listheader>
                <item>
                  <term> 0  </term>
                  <description> There is no limit on the batch size.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description> Disables batch updating.  </description>
                </item>
                <item>
                  <term> &gt; 1  </term>
                  <description> Changes are sent using batches of <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> operations at a time.  </description>
                </item>
              </list>  When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.Common.DbDataAdapter" /> must have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to **None** or **OutputParameters**.</span>
          </span>
          <span data-ttu-id="49938-980">그렇지 않으면 예외가 throw 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-980">An exception will be thrown otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-981">사용 합니다 <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> 속성에서 변경 된 데이터 소스를 업데이트 하는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-981">Use the <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="49938-982">데이터 공급자가 일괄 처리를 지 원하는 경우 서버에 왕복 횟수를 줄여 응용 프로그램 성능을 향상 시킬 수이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-982">If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</span></span> <span data-ttu-id="49938-983">ADO.NET 2.0에서는이 속성은 SQL Server (SqlClient) 및 Oracle (OracleClient) 용.NET 데이터 공급자에 대 한 지원.</span><span class="sxs-lookup"><span data-stu-id="49938-983">In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</span></span>  
  
 <span data-ttu-id="49938-984">너무 큰 배치를 실행하면 성능이 저하될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49938-984">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="49938-985">따라서 응용 프로그램을 구현하기 전에 최적의 배치 크기 설정을 테스트해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-985">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="49938-986"><xref:System.ArgumentOutOfRangeException> 0 보다 작은 값을 숫자로 설정 된 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-986">An <xref:System.ArgumentOutOfRangeException> will be thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ UpdateCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49938-987">Gets or sets a command used to update records in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-987">Gets or sets a command used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49938-988">A <see cref="T:System.Data.IDbCommand" /> 하는 동안 사용 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 데이터 집합의 수정 된 행에 대 한 데이터 원본에서 레코드를 업데이트 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49938-988">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49938-989">하는 동안 <xref:System.Data.Common.DbDataAdapter.Update%2A>이면이 속성은 설정 되지 않으며 기본 키 정보에 있으면 합니다 <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> 자동으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49938-989">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49938-990">다음 예제에서는 파생된 클래스 <xref:System.Data.OleDb.OleDbDataAdapter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="49938-990">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>