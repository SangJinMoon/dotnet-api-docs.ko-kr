<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataAdapter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c15c2ebaa8f380dc7733c8d56b9c4a0aaeacc1dfa2e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c2ebaa8f380dc7733c8d56b9c4a0aaeacc1dfa2e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DataAdapter">
          <source>Represents a set of SQL commands and a database connection that are used to fill the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and update the data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>를 채우고 데이터 원본을 업데이트하는 데 사용되는 데이터베이스 연결 및 SQL 명령 집합을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> serves as a bridge between a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> and a data source for retrieving and saving data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 간의 다리 역할을 한 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 와 데이터 소스를 검색 하 고 데이터를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> provides this bridge by mapping <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph>, which changes the data in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> to match the data in the data source, and <ph id="ph4">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph>, which changes the data in the data source to match the data in the <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 매핑하는 방법으로이 연결을 제공 <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph>, 데이터를 변경 하는 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 데이터 원본의 데이터와 일치 하도록 및 <ph id="ph4">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph>의 데이터와 일치 하도록 데이터 원본에서 데이터를 변경는 <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DataAdapter">
          <source>If you are connecting to a SQL Server database, you can increase overall performance by using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> along with its associated <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> objects.</source>
          <target state="translated">SQL Server 데이터베이스에 연결 하는 경우에 사용 하 여 전반적인 성능을 높일 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 관련 함께 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DataAdapter">
          <source>For OLE DB-supported data sources, use the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> with its associated <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> objects.</source>
          <target state="translated">OLE DB 지원 데이터 원본에 대 한 사용는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 연관 된 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DataAdapter">
          <source>For ODBC-supported data sources, use the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> with its associated <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> objects.</source>
          <target state="translated">사용 하 여 ODBC에서 지 원하는 데이터 원본에 대 한는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 연관 된 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DataAdapter">
          <source>For Oracle databases, use the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> with its associated <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> objects.</source>
          <target state="translated">Oracle 데이터베이스 사용의 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 와 연결 된 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DataAdapter">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> is created, the read/write properties are set to initial values.</source>
          <target state="translated">인스턴스가 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 만들어지면 읽기/쓰기 속성은 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DataAdapter">
          <source>For a list of these values, see the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> constructor.</source>
          <target state="translated">이러한 값의 목록에 대 한 참조는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DataAdapter">
          <source>Initializes a new instance of a <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.#ctor">
          <source>Initializes a new instance of a <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.#ctor">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> is created, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스가 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 만들어지면 다음 읽기/쓰기 속성은 다음과 같은 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.#ctor">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.#ctor">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.#ctor">
          <source>An array of <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.#ctor">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> object used to create the new <ph id="ph2">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph>를 만드는 데 사용되는 <ph id="ph2">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
          <source>Initializes a new instance of a <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> class from an existing object of the same type.</source>
          <target state="translated">같은 형식의 기존 개체에서 <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</source>
          <target state="translated">이 오버 로드는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 생성자는 사용 하기 위한.NET Framework 데이터 공급자에서 복제 구현에서 사용 하기 위해 비슷한 생성자를 구현 하는 경우.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
          <source>Gets or sets a value indicating whether <ph id="ph1">&lt;see cref="M:System.Data.DataRow.AcceptChanges" /&gt;</ph> is called on a <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> after it is added to the <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> during any of the <bpt id="p1">**</bpt>Fill<ept id="p1">**</ept> operations.</source>
          <target state="translated"><bpt id="p1">**</bpt>채우기<ept id="p1">**</ept> 작업을 수행하는 동안 <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>에 추가된 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>에 대해 <ph id="ph1">&lt;see cref="M:System.Data.DataRow.AcceptChanges" /&gt;</ph>가 호출되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.Data.DataRow.AcceptChanges" /&gt;</ph> is called on the <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>; otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Data.DataRow.AcceptChanges" /&gt;</ph>에서 <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>가 호출되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
          <source>If <ph id="ph1">`false`</ph>, <ph id="ph2">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is not called, and the newly added rows are treated as inserted rows.</source>
          <target state="translated">경우 <ph id="ph1">`false`</ph>, <ph id="ph2">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> 를 호출 하지 않으면 새로 추가 된 행이 삽입 된 행으로 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
          <source>Gets or sets whether <ph id="ph1">&lt;see cref="M:System.Data.DataRow.AcceptChanges" /&gt;</ph> is called during a <ph id="ph2">&lt;see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.DataRow.AcceptChanges" /&gt;</ph>를 수행하는 동안 <ph id="ph2">&lt;see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" /&gt;</ph>가 호출되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.Data.DataRow.AcceptChanges" /&gt;</ph> is called during an <ph id="ph3">&lt;see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" /&gt;</ph>; otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Data.DataRow.AcceptChanges" /&gt;</ph>를 수행하는 동안 <ph id="ph3">&lt;see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" /&gt;</ph>가 호출되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
          <source>During a call to the <ph id="ph1">`Update`</ph> method of a <ph id="ph2">`DataAdapter`</ph>, the database can send data back to your ADO.NET application as output parameters or as the first returned record of a result set.</source>
          <target state="translated">호출 하는 동안는 <ph id="ph1">`Update`</ph> 의 메서드는 <ph id="ph2">`DataAdapter`</ph>, 데이터베이스 데이터를 출력 매개 변수 또는 결과 집합의 첫 번째 반환 된 레코드로 ADO.NET 응용 프로그램으로 다시 보낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
          <source>ADO.NET can retrieve these values and update the corresponding columns in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> being updated.</source>
          <target state="translated">ADO.NET에서는 이러한 값을 검색하여 업데이트되는 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>의 해당 열을 업데이트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
          <source>By default, ADO.NET calls the <ph id="ph1">`AcceptChanges`</ph> method of the <ph id="ph2">`DataRow`</ph> after the update.</source>
          <target state="translated">기본적으로 ADO.NET 호출의 <ph id="ph1">`AcceptChanges`</ph> 의 메서드는 <ph id="ph2">`DataRow`</ph> 업데이트 후 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
          <source>However, if you want to merge the updated row back into another <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, you may want to preserver the original value of a primary key column.</source>
          <target state="translated">그러나 병합 하려는 경우 업데이트 된 행에 다시 다른 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, 기본 키 열의 원래 값을 유지할 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
          <source>For example, a primary key column corresponding to an automatically incrementing column in the database, such as an identity column, can contain new values that are assigned by the database that do not match the original values assigned in the <ph id="ph1">`DataRow`</ph>.</source>
          <target state="translated">예를 들어 id 열, 등 데이터베이스의 자동 증가 열에 해당 하는 기본 키 열에 할당 된 원래 값이 일치 하지 않는 데이터베이스에 의해 할당 된 새 값을 포함할 수 있습니다는 <ph id="ph1">`DataRow`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
          <source>By default, <ph id="ph1">`AcceptChanges`</ph> is called implicitly after an update, and the original values in the row, which may have been <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> values assigned by ADO.NET, are lost.</source>
          <target state="translated">기본적으로 <ph id="ph1">`AcceptChanges`</ph> 이후에 업데이트, 및 되었을 수 있습니다는 행의 원래 값이 암시적으로 호출 <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> ADO.NET에 의해 할당 되는 값은 손실 됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
          <source>You can preserve the original values in the <ph id="ph1">`DataRow`</ph> by preventing <ph id="ph2">`ADO.NET`</ph> from calling <ph id="ph3">`AcceptChanges`</ph> after it performs an update on a row, by setting the <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate%2A&gt;</ph> property to <ph id="ph5">`false`</ph>, which preserves the original values.</source>
          <target state="translated">원래 값을 유지할 수 있습니다는 <ph id="ph1">`DataRow`</ph> 방지 하 여 <ph id="ph2">`ADO.NET`</ph> 호출에서 <ph id="ph3">`AcceptChanges`</ph> 설정 하 여 행에 대 한 업데이트를 수행한 후의 <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate%2A&gt;</ph> 속성을 <ph id="ph5">`false`</ph>를 원래 값을 유지 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
          <source>Setting the <ph id="ph1">`AcceptChangesDuringUpdate`</ph> property to <ph id="ph2">`false`</ph> applies to all data modifications, not only inserts.</source>
          <target state="translated">설정의 <ph id="ph1">`AcceptChangesDuringUpdate`</ph> 속성을 <ph id="ph2">`false`</ph> 삽입 뿐 아니라, 모든 데이터 수정에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
          <source>If you want to edit or delete rows in the same update, and if you want to suppress the call to <ph id="ph1">`AcceptChanges`</ph> only for inserts, then instead of setting <ph id="ph2">`AccceptChangesDuringUpdate`</ph> to <ph id="ph3">`false`</ph>, use an event handler for the <ph id="ph4">`RowUpdated`</ph> event of the <ph id="ph5">`DataAdapter`</ph>.</source>
          <target state="translated">동일한 업데이트에는 행을 편집 하거나 삭제 하 고 호출을 억제 하려면 <ph id="ph1">`AcceptChanges`</ph> 고 설정 하는 대신 삽입에 대해서만 <ph id="ph2">`AccceptChangesDuringUpdate`</ph> 를 <ph id="ph3">`false`</ph>에 대 한 이벤트 처리기를 사용 하 여는 <ph id="ph4">`RowUpdated`</ph> 의 이벤트는 <ph id="ph5">`DataAdapter`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
          <source>In the event handler you can check the <ph id="ph1">&lt;xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A&gt;</ph> to determine if the data modification is an insert, and if <ph id="ph2">`true`</ph>, set the <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> to <ph id="ph5">&lt;xref:System.Data.UpdateStatus.SkipCurrentRow&gt;</ph>.</source>
          <target state="translated">이벤트 처리기를 확인할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A&gt;</ph> 데이터 수정, 삽입 한 경우를 확인 하려면 <ph id="ph2">`true`</ph>설정는 <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> 속성의는 <ph id="ph4">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> 를 <ph id="ph5">&lt;xref:System.Data.UpdateStatus.SkipCurrentRow&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
          <source>For more information and an example, see <bpt id="p1">[</bpt>Retrieving Identity or Autonumber Values<ept id="p1">](~/docs/framework/data/adonet/retrieving-identity-or-autonumber-values.md)</ept>.</source>
          <target state="translated">자세한 내용 및 예제에 대 한 참조 <bpt id="p1">[</bpt>검색 Id 또는 일련 번호 값<ept id="p1">](~/docs/framework/data/adonet/retrieving-identity-or-autonumber-values.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
          <source>This example demonstrates extracting changed rows from a <ph id="ph1">`DataTable`</ph> and using a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> to update the data source and retrieve a new identity column value.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`DataTable`</ph>에서 변경된 행을 추출하고 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>를 사용하여 데이터 소스를 업데이트하고 새 ID 열 값을 검색하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
          <source>By setting the <ph id="ph1">`AcceptChangesDuringUpdate`</ph> property of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> to <ph id="ph3">`false`</ph> to preserve the original auto increment value, the new data can then be merged into the original <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>, even if the new identity value does not match the original auto increment value in the <ph id="ph5">`DataTable`</ph>.</source>
          <target state="translated">설정 하 여는 <ph id="ph1">`AcceptChangesDuringUpdate`</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 를 <ph id="ph3">`false`</ph> 원래 자동 증가 값을 유지 하기 위해 새 데이터 다음에 병합 원래 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>새 id 값 원래 자동 증가 일치 하지 않는 경우에, 값은 <ph id="ph5">`DataTable`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.CloneInternals">
          <source>Creates a copy of this instance of <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph>의 인스턴스 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.CloneInternals">
          <source>The cloned instance of <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph>.</source>
          <target state="translated">복제된 <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph>의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.CloneInternals">
          <source>This method is deprecated.</source>
          <target state="translated">이 메서드는 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.CloneInternals">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.%23ctor%2A&gt;</ph> constructor should be used instead of this method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.%23ctor%2A&gt;</ph> 생성자는이 메서드 대신 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.CloneInternals">
          <source>All the commands, the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph>, and the <ph id="ph3">&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</ph> are cloned.</source>
          <target state="translated">모든 명령에서 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</ph> 복제 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.CloneInternals">
          <source>However, the connections for the commands are not copied, but shared.</source>
          <target state="translated">그러나 명령에 대 한 연결 된 복사 되지는 않지만, 공유 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.CloneInternals">
          <source>Thus, the cloned <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> can be used against the same connection as the original.</source>
          <target state="translated">따라서 복제 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 원본과 동일한 연결에 대해 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.CloneInternals">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DataAdapter.CloneInternals" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.Common.DataAdapter.CloneInternals" /&gt;</ph> method.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Data.Common.DataAdapter.CloneInternals" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Data.Common.DataAdapter.CloneInternals" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
          <source>Gets or sets a value that specifies whether to generate an exception when an error is encountered during a row update.</source>
          <target state="translated">행을 업데이트하는 동안 오류가 발생할 때 예외를 생성할지 여부를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to continue the update without generating an exception; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">예외를 생성하지 않고 업데이트를 계속하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
          <source>If <ph id="ph1">`ContinueUpdateOnError`</ph> is set to <ph id="ph2">`true`</ph>, no exception is thrown when an error occurs during the update of a row.</source>
          <target state="translated">경우 <ph id="ph1">`ContinueUpdateOnError`</ph> 로 설정 된 <ph id="ph2">`true`</ph>, 행을 업데이트 하는 동안 오류가 발생 하면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
          <source>The update of the row is skipped and the error information is placed in the <ph id="ph1">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> property of the row in error.</source>
          <target state="translated">행의 업데이트를 건너뛰고 오류 정보에 저장 되는 <ph id="ph1">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> 오류에 대 한 행의 속성입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> continues to update subsequent rows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 계속 해 서 후속 행을 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
          <source>If <ph id="ph1">`ContinueUpdateOnError`</ph> is set to <ph id="ph2">`false`</ph>, an exception is thrown when an error occurs during the update of a row.</source>
          <target state="translated">경우 <ph id="ph1">`ContinueUpdateOnError`</ph> 로 설정 된 <ph id="ph2">`false`</ph>, 행을 업데이트 하는 동안 오류가 발생 하면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.CreateTableMappings">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.DataTableMappingCollection" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.Common.DataTableMappingCollection" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.CreateTableMappings">
          <source>A new table mapping collection.</source>
          <target state="translated">새 테이블 매핑 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 메서드는 <ph id="ph3">`disposing`</ph> 매개 변수 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 호출 <ph id="ph2">`Dispose`</ph> 와 <ph id="ph3">`disposing`</ph> 로 설정 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 매개 변수가 <ph id="ph2">`true`</ph>인 경우 이 메서드는 이 <ph id="ph3">&lt;xref:System.Data.Common.DataAdapter&gt;</ph>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드는 참조되는 각 개체의 <ph id="ph1">`Dispose`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>는 다른 개체에서 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 하십시오 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">구현 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>Dispose 메서드를 구현<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Finalize 메서드를 재정의<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DataAdapter">
          <source>Adds or refreshes rows in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in the data source.</source>
          <target state="translated">데이터 소스의 행과 일치하도록 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>의 행을 추가하거나 새로 고칩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to fill with records and, if necessary, schema.</source>
          <target state="translated">레코드와 스키마(필요한 경우)로 채울 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>Adds or refreshes rows in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in the data source.</source>
          <target state="translated">데이터 소스의 행과 일치하도록 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>의 행을 추가하거나 새로 고칩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> method retrieves rows from the data source using the SELECT statement specified by an associated <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> 연결 된 지정 된 SELECT 문에서 사용 하 여 데이터 원본에서 행을 검색 하는 메서드 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">SELECT 문은 연결 된 연결 개체는 유효 해야 합니다. 하지만 열려 있이 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">하기 전에 연결이 닫히거나 경우 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> 은 호출은 열 데이터를 검색 하려면 다음 종료 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">연결 하기 전에 열려 있으면 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> 는 호출을 열린 상태로 유지 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> operation then adds the rows to destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> objects if they do not already exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> 대상에 행을 추가 하는 작업을 다음 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 개체에 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>만들기는 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 경우 이미 없는 개체.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>When creating <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> operation normally creates only column name metadata.</source>
          <target state="translated">만들 때 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> 작업은 일반적으로 열 이름 메타 데이터만 만듭니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">그러나 경우는 <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> 속성이 <ph id="ph2">`AddWithKey`</ph>, 적절 한 기본 키와 제약 조건도 만들어집니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`SelectCommand`</ph>가 OUTER JOIN의 결과를 반환하면 <ph id="ph2">`DataAdapter`</ph>는 결과 <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>에 대해 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 값을 설정하지 않습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">중복 행을 올바르게 확인할 수 있도록 기본 키를 명시적으로 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기본 키 정의<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>If the data adapter encounters duplicate columns while populating a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</source>
          <target state="translated">데이터 어댑터를 채우는 동안 중복 된 열을 발견 하는 경우는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, 패턴 "columnname1", "columnname2", "columnname3" 및 등을 사용 하 여 후속 열에 대 한 이름을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> "column1", "Column2" 등에 따라 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">여러 결과 집합에 추가 될 때는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 각 결과 집합은 별도 테이블에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">열 및 테이블 이름을 사용 하 여 응용 프로그램 명명 패턴과 충돌 하지 않도록 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>When the SELECT statement used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">채우는 데 사용 된 SELECT 문에서 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 여러 결과 반환 일괄 처리 SQL 문과 같은 결과 중 하나에 오류가 포함 되어 있는 경우 모든 후속 결과 건너뛰고에 추가 되지 않습니다는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> method multiple times on the same <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> 메서드가 여러 번 같은 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">기본 키가 있는 경우 이미 존재 하는 일치 하는 행과 들어오는 행이 병합 됩니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>If no primary key exists, incoming rows are appended to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">들어오는 행에 추가 된 기본 키가 없으면는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> 만 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">여러 결과 대 한 스키마 정보를 검색 하려면 사용 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> 로 설정 <ph id="ph3">`AddWithKey`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to fill with records.</source>
          <target state="translated">레코드로 채울 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
          <source>Adds or refreshes rows in the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to match those in the data source using the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> name and the specified <ph id="ph3">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 이름 및 지정된 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>를 사용하여 데이터 소스의 행과 일치하도록 <ph id="ph3">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>의 행을 추가하거나 새로 고칩니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
          <source>See the remarks for <ph id="ph1">`System.Data.Common.DataAdapter.Fill(System.Data.DataSet)`</ph> for additional information.</source>
          <target state="translated">에 대 한 설명을 참조 <ph id="ph1">`System.Data.Common.DataAdapter.Fill(System.Data.DataSet)`</ph> 추가 정보에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects to fill with records.</source>
          <target state="translated">레코드로 채울 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
          <source>The zero-based index of the starting record.</source>
          <target state="translated">레코드 시작의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
          <source>An integer indicating the maximum number of records.</source>
          <target state="translated">최대 레코드 수를 나타내는 정수입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
          <source>Adds or refreshes rows in a specified range in the collection of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects to match those in the data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 개체 컬렉션의 지정된 범위에서 데이터 소스의 행과 일치하도록 행을 추가하거나 새로 고칩니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
          <source>See the remarks for <ph id="ph1">`System.Data.Common.DataAdapter.Fill(System.Data.DataSet)`</ph> for additional information.</source>
          <target state="translated">에 대 한 설명을 참조 <ph id="ph1">`System.Data.Common.DataAdapter.Fill(System.Data.DataSet)`</ph> 추가 정보에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to fill with records.</source>
          <target state="translated">레코드로 채울 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
          <source>A string indicating the name of the source table.</source>
          <target state="translated">소스 테이블의 이름을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
          <source>The zero-based index of the starting record.</source>
          <target state="translated">레코드 시작의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
          <source>An integer indicating the maximum number of records.</source>
          <target state="translated">최대 레코드 수를 나타내는 정수입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
          <source>Adds or refreshes rows in a specified range in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in the data source using the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> names.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>과 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 이름을 사용하여 지정된 범위에서 데이터 소스의 행과 일치하도록 <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>의 행을 추가하거나 새로 고칩니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
          <source>See the remarks for <ph id="ph1">`System.Data.Common.DataAdapter.Fill(System.Data.DataSet)`</ph> for additional information.</source>
          <target state="translated">에 대 한 설명을 참조 <ph id="ph1">`System.Data.Common.DataAdapter.Fill(System.Data.DataSet)`</ph> 추가 정보에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="E:System.Data.Common.DataAdapter.FillError">
          <source>Returned when an error occurs during a fill operation.</source>
          <target state="translated">채우기 작업 도중에 오류가 발생할 때 반환됩니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.Common.DataAdapter.FillError">
          <source>The <bpt id="p1">**</bpt>FillError<ept id="p1">**</ept> event allows a user to determine whether or not the fill operation should continue after the error occurs.</source>
          <target state="translated"><bpt id="p1">**</bpt>FillError<ept id="p1">**</ept> 이벤트 오류가 발생 한 후 채우기 작업을 계속할지 여부를 결정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.Common.DataAdapter.FillError">
          <source>Examples of when the <bpt id="p1">**</bpt>FillError<ept id="p1">**</ept> event might occur are:</source>
          <target state="translated">경우의 예는 <bpt id="p1">**</bpt>FillError<ept id="p1">**</ept> 이벤트가 발생할 수는 있습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.Common.DataAdapter.FillError">
          <source>The data being added to a <ph id="ph1">`DataSet`</ph> cannot be converted to a common language runtime type without losing precision.</source>
          <target state="translated">에 추가 되는 데이터는 <ph id="ph1">`DataSet`</ph> 정밀도 손실 하지 않고 공용 언어 런타임 형식으로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.Common.DataAdapter.FillError">
          <source>The row being added contains data that violates a Constraint that must be enforced on a <ph id="ph1">`DataColumn`</ph> in the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated">추가 되는 행에 적용 해야 하는 제약 조건을 위반 하는 데이터를 포함 한 <ph id="ph1">`DataColumn`</ph> 에 <ph id="ph2">`DataSet`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DataAdapter.FillLoadOption">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> that determines how the adapter fills the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> from the <ph id="ph3">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>.</source>
          <target state="translated">어댑터가 <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph>에서 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>을 채우는 방법을 결정하는 <ph id="ph3">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.FillLoadOption">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DataAdapter">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>에 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>을 추가합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to be filled with the schema from the data source.</source>
          <target state="translated">데이터 소스에서 스키마로 채울 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and configures the schema to match that in the data source based on the specified <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>에 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>을 추가하고 지정된 <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph>을 기반으로 데이터 소스의 스키마와 일치하도록 스키마를 구성합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> object that contains schema information returned from the data source.</source>
          <target state="translated">데이터 소스에서 반환된 스키마 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> method retrieves the schema from the data source using the <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> 사용 하 여 데이터 원본에서 스키마를 검색 하는 메서드는 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>The connection object associated with the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> must be valid, but it does not need to be open.</source>
          <target state="translated">와 연결 된 연결 개체는 <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> 유효 해야 하지만 열려 있이 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> is called, it is opened to retrieve data and then closed.</source>
          <target state="translated">하기 전에 연결이 닫히거나 경우 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> 는 호출을 열어 데이터를 검색 한 다음 닫습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">연결 하기 전에 열려 있으면 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> 는 호출을 열린 상태로 유지 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> operation adds a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to the destination <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> 작업 추가 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 대상 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>It then adds columns to the <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, and configures the following <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> properties if they exist at the data source:</source>
          <target state="translated">그런 다음 열을 추가 <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, 다음을 구성 하 고 <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> 속성 데이터 원본에 존재 하는 경우:</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>You must set <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> separately.</source>
          <target state="translated">설정 해야 <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> 별도로 합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> also configures the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> properties according to the following rules:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> 또한 구성 된 <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> 다음 규칙에 따라 속성:</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If one or more primary key columns are returned by the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, they are used as the primary key columns for the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">하나 이상의 기본 키 열에서 반환 되는 경우는 <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>에 대 한 기본 키 열으로 사용 되는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</source>
          <target state="translated">기본 키 열이 반환 되지 고유 열이 표시 되지만 고유한 열 경우, 그리고 모든 고유 열이 null이 아닌 경우에 기본 키로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If any of the columns are nullable, a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, but the <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property is not set.</source>
          <target state="translated">열이 null을 허용 하는 경우는 <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> 에 추가 됩니다는 <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, 하지만 <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 속성이 설정 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">기본 키 열과 고유 열이 모두 반환 되는 기본 키 열에 대 한 기본 키 열으로 사용 됩니다는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>The underlying data store may allow column attributes that are not supported in a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>, which causes some column attributes to not translate correctly.</source>
          <target state="translated">기본 데이터 저장소에서 지원 되지 않는 열 특성을 허용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>, 때문에 일부 열 특성이 올바르게 변환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>For example, SQL Server allows an identity column with a data type of tinyint whereas a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> only allows Int16, Int32, and Int64 to have the <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> property set.</source>
          <target state="translated">반면 SQL Server 데이터 형식이 tinyint 인 id 열을 허용 하는 예를 들어는 <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> Int16, Int32, 및 i n t 64가 허용 된 <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> 속성 집합입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source><ph id="ph1">`FillSchema`</ph> silently ignores cases where the <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> cannot accurately mirror the data source and throws no exception.</source>
          <target state="translated"><ph id="ph1">`FillSchema`</ph> 경우 자동으로 무시 여기서는 <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> 어떠한 예외도 throw 하 고 데이터 소스를 정확 하 게 미러링할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Note that primary keys and unique constraints are added to the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> according to the preceding rules, but other constraint types are not added.</source>
          <target state="translated">기본 키와 unique 제약 조건에 추가 된 <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> 선행 규칙에 있지만 다른 제약 조건에 따라 형식이 추가 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">고유 클러스터형 인덱스가 하나 이상의 SQL Server 테이블의 열에 정의 된 및 기본 키 제약 조건을 별도의 열 집합에 정의 되어 클러스터형된 인덱스에 있는 열의 이름이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">기본 키 열 이름으로를 반환 하려면 기본 키 인덱스의 이름을 지정 하는 SELECT 문을 사용 하 여 쿼리 힌트를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>For more information about specifying query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](/sql/t-sql/queries/hints-transact-sql-query)</ept>.</source>
          <target state="translated">쿼리 힌트를 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>쿼리 힌트 (TRANSACT-SQL)<ept id="p1">](/sql/t-sql/queries/hints-transact-sql-query)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 발생할 중복 열을 채우는 동안는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, 패턴을 사용 하 고 후속 열의 이름을 생성 "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", 및 기타 등등.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> "column1", "Column2" 등에 따라 합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">여러 결과 집합에 추가 될 때는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 각 결과 집합은 별도 테이블에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예: "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">열 및 테이블 이름을 사용 하 여 응용 프로그램 명명 패턴과 충돌 하지 않도록 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> does not return any rows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.FillSchema%2A&gt;</ph> 모든 행을 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> method to add rows to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> 에 행을 추가 하는 메서드는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> 만 첫 번째 결과 대 한 스키마 정보를 검색 하는.NET Framework Data Provider for OLE DB에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">여러 결과 대 한 스키마 정보를 검색 하려면 사용 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> 로 설정 <ph id="ph3">`AddWithKey`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to be filled from the <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>에서 채울 <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to be used as the data source when filling the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>을 채울 때 데이터 소스로 사용할 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>에 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>을 추가합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> object that contains schema information returned from the data source.</source>
          <target state="translated">데이터 소스에서 반환된 스키마 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to be filled from the <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>에서 채울 <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">테이블 매핑에 사용할 원본 테이블의 이름입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to be used as the data source when filling the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>을 채울 때 데이터 소스로 사용할 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>에 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>을 추가합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
          <source>A reference to a collection of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects that were added to the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>에 추가된 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 개체의 컬렉션에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.GetFillParameters">
          <source>Gets the parameters set by the user when executing an SQL SELECT statement.</source>
          <target state="translated">SQL SELECT 문을 실행할 때 사용자가 설정한 매개 변수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.GetFillParameters">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph> objects that contains the parameters set by the user.</source>
          <target state="translated">사용자가 설정한 매개 변수를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.HasTableMappings">
          <source>Indicates whether a <ph id="ph1">&lt;see cref="T:System.Data.Common.DataTableMappingCollection" /&gt;</ph> has been created.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DataTableMappingCollection" /&gt;</ph>이 만들어졌는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.HasTableMappings">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a <ph id="ph2">&lt;see cref="T:System.Data.Common.DataTableMappingCollection" /&gt;</ph> has been created; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.Common.DataTableMappingCollection" /&gt;</ph>이 만들어졌으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DataAdapter.MissingMappingAction">
          <source>Determines the action to take when incoming data does not have a matching table or column.</source>
          <target state="translated">들어오는 데이터와 일치하는 테이블이나 열이 없는 경우 수행할 동작을 결정합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.MissingMappingAction">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.MissingMappingAction" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.MissingMappingAction" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.MissingMappingAction">
          <source>The default is <ph id="ph1">&lt;see langword="Passthrough" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="Passthrough" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.MissingMappingAction">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph> property provides the master mapping between the returned records and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph> 속성은 반환 되는 레코드 사이 마스터 매핑을 제공 및 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.MissingMappingAction">
          <source>The following example creates a derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 파생된 클래스 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DataAdapter.MissingMappingAction">
          <source>The value set is not one of the <ph id="ph1">&lt;see cref="T:System.Data.MissingMappingAction" /&gt;</ph> values.</source>
          <target state="translated">설정된 값이 <ph id="ph1">&lt;see cref="T:System.Data.MissingMappingAction" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DataAdapter.MissingSchemaAction">
          <source>Determines the action to take when existing <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> schema does not match incoming data.</source>
          <target state="translated">기존 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 스키마가 들어오는 데이터와 일치하지 않는 경우 수행할 동작을 결정합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.MissingSchemaAction">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.MissingSchemaAction">
          <source>The default is <ph id="ph1">&lt;see langword="Add" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="Add" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.MissingSchemaAction">
          <source>The following example creates a derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 파생된 클래스 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DataAdapter.MissingSchemaAction">
          <source>The value set is not one of the <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> values.</source>
          <target state="translated">설정된 값이 <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.FillErrorEventArgs" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.FillErrorEventArgs" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
          <source>Invoked when an error occurs during a <ph id="ph1">&lt;see langword="Fill" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Fill" /&gt;</ph>을 수행하는 동안 오류가 발생하면 호출됩니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.ResetFillLoadOption">
          <source>Resets <ph id="ph1">&lt;see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /&gt;</ph> to its default state and causes <ph id="ph2">&lt;see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> to honor <ph id="ph3">&lt;see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /&gt;</ph>을 기본 상태로 다시 설정하여 <ph id="ph2">&lt;see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /&gt;</ph>이 <ph id="ph3">&lt;see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /&gt;</ph>을 따르도록 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
          <source>Gets or sets whether the <ph id="ph1">&lt;see langword="Fill" /&gt;</ph> method should return provider-specific values or common CLS-compliant values.</source>
          <target state="translated">공급자별 값이나 공용 CLS 규격 값 중에서 <ph id="ph1">&lt;see langword="Fill" /&gt;</ph> 메서드가 반환해야 하는 것을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see langword="Fill" /&gt;</ph> method should return provider-specific values; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph> to return common CLS-compliant values.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 메서드가 공급자별 값을 반환해야 하면 <ph id="ph2">&lt;see langword="Fill" /&gt;</ph>이고, 공용 CLS 규격 값을 반환해야 하면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">`false`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
          <source>Determines whether the <ph id="ph1">&lt;see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /&gt;</ph> 속성을 유지해야 하는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /&gt;</ph> property is persisted; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /&gt;</ph> 속성이 유지되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
          <source>Determines whether the <ph id="ph1">&lt;see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /&gt;</ph> 속성을 유지해야 하는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /&gt;</ph> property is persisted; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /&gt;</ph> 속성이 유지되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
          <source>Determines whether one or more <ph id="ph1">&lt;see cref="T:System.Data.Common.DataTableMapping" /&gt;</ph> objects exist and they should be persisted.</source>
          <target state="translated">하나 이상의 <ph id="ph1">&lt;see cref="T:System.Data.Common.DataTableMapping" /&gt;</ph> 개체가 존재하며 유지되어야 하는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if one or more <ph id="ph2">&lt;see cref="T:System.Data.Common.DataTableMapping" /&gt;</ph> objects exist; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.Common.DataTableMapping" /&gt;</ph> 개체가 하나 이상 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
          <source>Indicates how a source table is mapped to a dataset table.</source>
          <target state="translated">소스 테이블이 데이터 집합 테이블에 매핑되는 방식을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
          <source>A collection that provides the master mapping between the returned records and the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">반환된 레코드와 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 간의 마스터 매핑을 제공하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
          <source>The default value is an empty collection.</source>
          <target state="translated">기본값은 빈 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDataAdapter&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.IDataAdapter&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
          <source>Fore more information, see <ph id="ph1">&lt;xref:System.Data.IDataAdapter.TableMappings%2A&gt;</ph>.</source>
          <target state="translated">자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Data.IDataAdapter.TableMappings%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DataAdapter.TableMappings">
          <source>Gets a collection that provides the master mapping between a source table and a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">소스 테이블과 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 사이에 마스터 매핑을 제공하는 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.TableMappings">
          <source>A collection that provides the master mapping between the returned records and the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">반환된 레코드와 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 간의 마스터 매핑을 제공하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.TableMappings">
          <source>The default value is an empty collection.</source>
          <target state="translated">기본값은 빈 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.TableMappings">
          <source>When reconciling changes, the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Data.Common.DataTableMappingCollection&gt;</ph> collection to associate the column names used by the data source with the column names used by the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">변경 내용, 일치 하는 경우는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 사용 하 여는 <ph id="ph2">&lt;xref:System.Data.Common.DataTableMappingCollection&gt;</ph> 컬렉션에서 사용 하는 열 이름으로 데이터 소스에서 사용 되는 열 이름을 연결 하는 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.TableMappings">
          <source>The following example uses a derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, to add <ph id="ph2">&lt;xref:System.Data.Common.DataTableMapping&gt;</ph> objects to its <ph id="ph3">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph> collection and display a list of those mapped source tables.</source>
          <target state="translated">다음 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, 추가할 <ph id="ph2">&lt;xref:System.Data.Common.DataTableMapping&gt;</ph> 개체를 해당 <ph id="ph3">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph> 원본 테이블을 수집 하 고 매핑된의 목록을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DataAdapter.TableMappings">
          <source>This example assumes that an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> has already been created.</source>
          <target state="translated">이 예에서는 가정 하는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 이미 생성 되었습니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> used to update the data source.</source>
          <target state="translated">데이터 소스를 업데이트하는 데 사용된 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> named "Table."</source>
          <target state="translated">"Table"이라는 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>의 지정된 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>에서 삽입, 업데이트 또는 삭제된 각 행에 대해 각각 INSERT, UPDATE 또는 DELETE 문을 호출합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>The number of rows successfully updated from the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>에서 성공적으로 업데이트된 행의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>The update is performed on a by-row basis.</source>
          <target state="translated">이 업데이트는 행 단위로에서 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>For every inserted, modified, and deleted row, the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> method determines the type of change that has been performed on it (Insert, Update or Delete).</source>
          <target state="translated">모든 삽입, 수정 및 삭제 된 행에 대해는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> 메서드 결정에 수행 된 변경 유형 (삽입, 업데이트 또는 삭제) 합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>Depending on the type of change, the <ph id="ph1">`Insert`</ph>, <ph id="ph2">`Update,`</ph> or <ph id="ph3">`Delete`</ph> command template executes to propagate the modified row to the data source.</source>
          <target state="translated">변경 유형에 따라는 <ph id="ph1">`Insert`</ph>, <ph id="ph2">`Update,`</ph> 또는 <ph id="ph3">`Delete`</ph> 명령 템플릿이 실행 데이터 원본에 수정된 된 행을 전파 합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>When an application calls the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> examines the <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">응용 프로그램 호출 하는 경우는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> 메서드를는 <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 검사 하는 <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> 속성을 반복적으로 에구성된인덱스순서에따라각행에대한필요한INSERT,UPDATE또는DELETE문을실행하고<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>For example, <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> 옵니다 INSERT 문에서 다른 DELETE 문은 때문에 있는 행의 순서는 DELETE 문이 실행 될 수 있습니다는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>It should be noted that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">이러한 문은 일괄 처리 프로세스로 수행 되지 않습니다 용도로 각 행은 개별적으로 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>An application can call the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</source>
          <target state="translated">응용 프로그램에서 호출할 수는 <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> 명령문의 시퀀스를 제어 해야 할 경우에 (예를 들어 업데이트 하기 전에 삽입).</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Dataadapter로 데이터 원본 업데이트<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> method generates an exception.</source>
          <target state="translated">경우 INSERT, UPDATE 또는 DELETE 문이 지정 되지 않았습니다는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> 메서드 예외를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph3">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">만들 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> 설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 개체는 <ph id="ph3">`SelectCommand`</ph> .NET Framework 데이터 공급자의 속성입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>Then, any additional SQL statements that you do not set are generated by the <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</source>
          <target state="translated">를 설정 하지 않는 추가적인 모든 SQL 문을 그러면는 <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">이 생성 논리는 키 열에 대 한 정보가 필요는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> 메서드는 업데이트를 수행 하기 전에 첫 번째 매핑에 나열 된 테이블에서 행을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> then refreshes the row using the value of the <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> 다음의 값을 사용 하 여 행을 새로 고치는 <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">반환 된 추가 행은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>After any data is loaded back into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised, allowing the user to inspect the reconciled <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> row and any output parameters returned by the command.</source>
          <target state="translated">모든 데이터에 다시 로드 되는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> 이벤트가 발생 하는 조정 된 검사 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 행 및 모든 출력 매개 변수는 명령에서 반환 된 합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">행이 성공적으로 업데이트 한 후 해당 행에 변경 내용은 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph>, the order of execution is as follows:</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph>, 실행의 순서는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> 매개 변수 값으로 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>는 첫 번째 반환 결과에 배치 되는 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">에 지정 되므로 출력 매개 변수가 있는 경우는 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=nameWithType&gt;</ph>가 호출된 경우</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>This will raise both the <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged?displayProperty=nameWithType&gt;</ph> events for the updated <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">모두 발생 하므로 <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged?displayProperty=nameWithType&gt;</ph> 업데이트 된 항목에 대 한 이벤트 <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>Each command associated with the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> usually has a parameters collection associated with it.</source>
          <target state="translated">와 연결 된 각 명령에서 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 은 일반적으로 관련 된 매개 변수 컬렉션을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">매개 변수를 통해 현재 행에 매핑되는 <ph id="ph1">`SourceColumn`</ph> 및 <ph id="ph2">`SourceVersion`</ph> .NET 데이터 공급자의 속성 <ph id="ph3">`Parameter`</ph> 클래스.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column that the <ph id="ph3">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 참조 하는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 열 하는 <ph id="ph3">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 현재 행에 대 한 매개 변수 값을 가져오기에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 테이블 매핑이 적용 되기 전에 매핑되지 않은 열 이름을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> values.</source>
          <target state="translated">경우 <ph id="ph1">`SourceColumn`</ph> 참조 존재 하지 않는 열에는 다음 중 하나에 따라 다른 동작이 수행 <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>Enumeration value</source>
          <target state="translated">열거형 값</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>Action taken</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>Use the source column names and table names in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if no mapping is present.</source>
          <target state="translated">원본 열 이름 및 테이블 이름을 사용 하 여는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 매핑이 없는 경우.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</source>
          <target state="translated">매핑을 명시적으로 설정 하는 경우 입력 매개 변수의 매핑이 없을 일반적으로 오류의 결과입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 속성은 또한 출력에 대 한 값에 매핑할 사용 입/출력 매개 변수를 또는 <ph id="ph2">`DataSet`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">존재 하지 않는 열을 참조 하는 경우 예외가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the Original, Current, or Proposed version of the column value.</source>
          <target state="translated"><ph id="ph1">`SourceVersion`</ph> .NET 데이터 공급자의 속성 <ph id="ph2">`Parameter`</ph> 클래스 Original, Current 또는 Proposed 버전 열 값의 사용 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">낙관적 동시성 위반을 확인 하는 UPDATE 문의 WHERE 절에 원래 값을 포함 하려면이 기능은 주로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> method or <ph id="ph2">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> method will commit all changes in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> 메서드 또는 <ph id="ph2">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> 메서드 주 복제본은 모든 변경 내용을 커밋합니다는 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>If either of these methods are called before the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method is called, no changes will be committed when the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method is called, unless further changes have been made since <ph id="ph3">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> was called.</source>
          <target state="translated">이러한 방법 중 하나를 호출 하기 전에는 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> 메서드가 호출 되 면 변경 내용이 커밋됩니다 시기는 <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> 이후 추가 변경 사항이 없는 경우 메서드는 호출 <ph id="ph3">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">행을 업데이트 하는 동안 오류가 발생 하는 경우 예외가 throw 되 고 업데이트의 실행이 중단.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property to <ph id="ph2">`true`</ph> before calling <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</source>
          <target state="translated">설정 오류가 발생 하는 경우 예외를 생성 하지 않고 업데이트 작업을 계속 하려면는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 호출 하기 전에 <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">내에서 각 행 마다 별로 오류를 선택할 수 있습니다는 <ph id="ph1">`RowUpdated`</ph> DataAdapter의 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> to <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</source>
          <target state="translated">내에서 예외를 생성 하지 않고 업데이트 작업을 계속 하려면는 <ph id="ph1">`RowUpdated`</ph> 이벤트를 설정는 <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> 를 <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>For every column that you propagate to the data source on <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph>, a parameter should be added to the <ph id="ph2">`InsertCommand`</ph>, <ph id="ph3">`UpdateCommand`</ph>, or <ph id="ph4">`DeleteCommand`</ph>.</source>
          <target state="translated">데이터 소스에 전파 하는 모든 열에 대 한 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph>에 추가 되어야 하는 매개 변수는 <ph id="ph2">`InsertCommand`</ph>, <ph id="ph3">`UpdateCommand`</ph>, 또는 <ph id="ph4">`DeleteCommand`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">`SourceColumn`</ph> property of the parameter should be set to the name of the column.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 매개 변수의 속성 열의 이름으로 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>This setting indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</source>
          <target state="translated">이 설정은 매개 변수의 값을 수동으로 설정 되어 있지 않지만 현재 처리 된 행의 특정 열에서 가져온 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, to <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> the data source.</source>
          <target state="translated">다음 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>을 <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> 데이터 원본입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>The source table is invalid.</source>
          <target state="translated">소스 테이블이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">INSERT, UPDATE 또는 DELETE 문을 실행한 결과 영향을 받은 레코드가 없는 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>