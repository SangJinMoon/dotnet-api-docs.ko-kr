<Type Name="DbCommandBuilder" FullName="System.Data.Common.DbCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e032408cb118b800e4810c44f61ef2b1a9fa0524" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36692163" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbCommandBuilder : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbCommandBuilder extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbCommandBuilder&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbCommandBuilder abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type DbCommandBuilder = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bccd8-101">Automatically generates single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bccd8-101">Automatically generates single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database.</span>
      </span>
      <span data-ttu-id="bccd8-102">This is an abstract class that can only be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bccd8-102">This is an abstract class that can only be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-103"><xref:System.Data.Common.DbCommandBuilder> 클래스 자체 명령 작성기를 만드는 공급자 작성자의 편의 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-103">The <xref:System.Data.Common.DbCommandBuilder> class is provided for the convenience of provider writers creating their own command builders.</span></span> <span data-ttu-id="bccd8-104">이 클래스에서 상속 하 여 개발자는 자신의 코드에 공급자 특정 동작을 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-104">By inheriting from this class, developers can implement provider specific behavior in their own code.</span></span>  
  
 <span data-ttu-id="bccd8-105"><xref:System.Data.Common.DbDataAdapter> 변경 내용을 조정 하는 데 필요한 SQL 문을 자동으로 생성 되지 않습니다는 <xref:System.Data.DataSet> 연결 된 데이터 원본을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-105">The <xref:System.Data.Common.DbDataAdapter> does not automatically generate the SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> with the associated data source.</span></span> <span data-ttu-id="bccd8-106">만들 수 있습니다는 <xref:System.Data.Common.DbCommandBuilder> 설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 개체는 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> 의 속성은 <xref:System.Data.Common.DbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-106">However, you can create a <xref:System.Data.Common.DbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> property of the <xref:System.Data.Common.DbDataAdapter>.</span></span> <span data-ttu-id="bccd8-107">를 설정 하지 않는 추가적인 모든 SQL 문을 그러면는 <xref:System.Data.Common.DbCommandBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-107">Then, any additional SQL statements that you do not set are generated by the <xref:System.Data.Common.DbCommandBuilder>.</span></span>  
  
 <span data-ttu-id="bccd8-108"><xref:System.Data.Common.DbCommandBuilder> 자체에 대 한 수신기로 등록 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> 설정할 때마다 이벤트는 <xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-108">The <xref:System.Data.Common.DbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events whenever you set the <xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A> property.</span></span> <span data-ttu-id="bccd8-109">만 연결할 수 있습니다 <xref:System.Data.Common.DbDataAdapter> 또는 <xref:System.Data.Common.DbCommandBuilder> 서로 개체를 한 번에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-109">You can only associate one <xref:System.Data.Common.DbDataAdapter> or <xref:System.Data.Common.DbCommandBuilder> object with each other at one time.</span></span>  
  
 <span data-ttu-id="bccd8-110">INSERT, UPDATE 또는 DELETE 문을 생성 하는 <xref:System.Data.Common.DbCommandBuilder> 사용 하 여는 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> 속성을 필수 메타 데이터 집합을 자동으로 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-110">To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.Common.DbCommandBuilder> uses the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata automatically.</span></span> <span data-ttu-id="bccd8-111">변경 하는 경우는 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> 호출 해야 (예를 들어 첫 번째 업데이트 후) 메타 데이터를 검색 한 후의 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 메서드 메타 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-111">If you change the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> after the metadata has been retrieved (for example, after the first update), you should call the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method to update the metadata.</span></span>  
  
 <span data-ttu-id="bccd8-112">또한 `SelectCommand`는 기본 키 열이나 고유 열을 하나 이상 반환해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-112">The `SelectCommand` must also return at least one primary key or unique column.</span></span> <span data-ttu-id="bccd8-113">항목이 없으면는 <xref:System.InvalidOperationException> 예외가 생성 되 고 명령은 생성 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-113">If none exist, an <xref:System.InvalidOperationException> exception is generated, and the commands are not generated.</span></span>  
  
 <span data-ttu-id="bccd8-114"><xref:System.Data.Common.DbCommandBuilder> 또한 사용 하 여는 <xref:System.Data.Common.DbCommand.Connection%2A>, <xref:System.Data.Common.DbCommand.CommandTimeout%2A>, 및 <xref:System.Data.Common.DbCommand.Transaction%2A> 속성에서 참조 되는 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-114">The <xref:System.Data.Common.DbCommandBuilder> also uses the <xref:System.Data.Common.DbCommand.Connection%2A>, <xref:System.Data.Common.DbCommand.CommandTimeout%2A>, and <xref:System.Data.Common.DbCommand.Transaction%2A> properties referenced by the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="bccd8-115">사용자를 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 이러한 속성을 수정 하거나는 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> 자체는 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-115">The user should call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if any of these properties are modified, or if the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> itself is replaced.</span></span> <span data-ttu-id="bccd8-116">그렇지 않은 경우는 <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>, <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>, 및 <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> 속성 이전 값을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-116">Otherwise the <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>, <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>, and <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> properties retain their previous values.</span></span>  
  
 <span data-ttu-id="bccd8-117">호출 하는 경우 <xref:System.ComponentModel.Component.Dispose%2A>, <xref:System.Data.Common.DbCommandBuilder> 에서 분리는 <xref:System.Data.Common.DbDataAdapter>, 생성된 된 명령을 더 이상 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-117">If you call <xref:System.ComponentModel.Component.Dispose%2A>, the <xref:System.Data.Common.DbCommandBuilder> is disassociated from the <xref:System.Data.Common.DbDataAdapter>, and the generated commands are no longer used.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bccd8-118">Initializes a new instance of a class that inherits from the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-118">Initializes a new instance of a class that inherits from the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected abstract void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow row, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow row, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ row, System::Data::StatementType statementType, bool whereClause);" />
      <MemberSignature Language="F#" Value="abstract member ApplyParameterInfo : System.Data.Common.DbParameter * System.Data.DataRow * System.Data.StatementType * bool -&gt; unit" Usage="dbCommandBuilder.ApplyParameterInfo (parameter, row, statementType, whereClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="row" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="bccd8-119">A <see cref="T:System.Data.Common.DbParameter" /> to which the additional modifications are applied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-119">A <see cref="T:System.Data.Common.DbParameter" /> to which the additional modifications are applied.</span>
          </span>
        </param>
        <param name="row">
          <span data-ttu-id="bccd8-120">The <see cref="T:System.Data.DataRow" /> from the schema table provided by <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-120">The <see cref="T:System.Data.DataRow" /> from the schema table provided by <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</span>
          </span>
        </param>
        <param name="statementType">
          <span data-ttu-id="bccd8-121">The type of command being generated; INSERT, UPDATE or DELETE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-121">The type of command being generated; INSERT, UPDATE or DELETE.</span>
          </span>
        </param>
        <param name="whereClause">
          <span data-ttu-id="bccd8-122">
            <see langword="true" /> if the parameter is part of the update or delete WHERE clause, <see langword="false" /> if it is part of the insert or update values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-122">
              <see langword="true" /> if the parameter is part of the update or delete WHERE clause, <see langword="false" /> if it is part of the insert or update values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bccd8-123">Allows the provider implementation of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class to handle additional parameter properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-123">Allows the provider implementation of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class to handle additional parameter properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-124">이 방법을 사용 하면는 <xref:System.Data.Common.DbCommandBuilder> 공급자 특정 매개 변수 속성을 처리 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-124">This method allows an implementation of the <xref:System.Data.Common.DbCommandBuilder> class to handle provider-specific parameter properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogLocation">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.CatalogLocation CatalogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Common.CatalogLocation CatalogLocation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.CatalogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogLocation As CatalogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Common::CatalogLocation CatalogLocation { System::Data::Common::CatalogLocation get(); void set(System::Data::Common::CatalogLocation value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogLocation : System.Data.Common.CatalogLocation with get, set" Usage="System.Data.Common.DbCommandBuilder.CatalogLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CatalogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bccd8-125">Sets or gets the <see cref="T:System.Data.Common.CatalogLocation" /> for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-125">Sets or gets the <see cref="T:System.Data.Common.CatalogLocation" /> for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bccd8-126">
            <see cref="T:System.Data.Common.CatalogLocation" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-126">A <see cref="T:System.Data.Common.CatalogLocation" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogSeparator">
      <MemberSignature Language="C#" Value="public virtual string CatalogSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.CatalogSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogSeparator : string with get, set" Usage="System.Data.Common.DbCommandBuilder.CatalogSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bccd8-127">Sets or gets a string used as the catalog separator for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-127">Sets or gets a string used as the catalog separator for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bccd8-128">인스턴스와 함께 사용 하 여 카탈로그 구분 기호를 나타내는 문자열의 <see cref="T:System.Data.Common.DbCommandBuilder" /> 클래스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-128">A string indicating the catalog separator for use with an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictOption">
      <MemberSignature Language="C#" Value="public virtual System.Data.ConflictOption ConflictOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConflictOption ConflictOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.ConflictOption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConflictOption As ConflictOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConflictOption ConflictOption { System::Data::ConflictOption get(); void set(System::Data::ConflictOption value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictOption : System.Data.ConflictOption with get, set" Usage="System.Data.Common.DbCommandBuilder.ConflictOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConflictOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bccd8-129">Specifies which <see cref="T:System.Data.ConflictOption" /> is to be used by the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-129">Specifies which <see cref="T:System.Data.ConflictOption" /> is to be used by the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bccd8-130">중 하나를 반환 된 <see cref="T:System.Data.ConflictOption" /> 이 동작을 설명 하는 값 <see cref="T:System.Data.Common.DbCommandBuilder" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-130">Returns one of the <see cref="T:System.Data.ConflictOption" /> values describing the behavior of this <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As DbDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbDataAdapter ^ DataAdapter { System::Data::Common::DbDataAdapter ^ get(); void set(System::Data::Common::DbDataAdapter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataAdapter : System.Data.Common.DbDataAdapter with get, set" Usage="System.Data.Common.DbCommandBuilder.DataAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bccd8-131">Gets or sets a <see cref="T:System.Data.Common.DbDataAdapter" /> object for which Transact-SQL statements are automatically generated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-131">Gets or sets a <see cref="T:System.Data.Common.DbDataAdapter" /> object for which Transact-SQL statements are automatically generated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bccd8-132">
            <see cref="T:System.Data.Common.DbDataAdapter" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-132">A <see cref="T:System.Data.Common.DbDataAdapter" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-133"><xref:System.Data.Common.DbCommandBuilder> 자체에 대 한 수신기로 등록 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> 에서 생성 되는 이벤트는 <xref:System.Data.Common.DbDataAdapter> 이 속성에 지정 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-133">The <xref:System.Data.Common.DbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.Common.DbDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="bccd8-134">새 인스턴스를 만들 때 <xref:System.Data.Common.DbCommandBuilder>, 모든 기존 <xref:System.Data.Common.DbCommandBuilder> 이 연관 <xref:System.Data.Common.DbDataAdapter> 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-134">When you create a new instance of <xref:System.Data.Common.DbCommandBuilder>, any existing <xref:System.Data.Common.DbCommandBuilder> associated with this <xref:System.Data.Common.DbDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dbCommandBuilder.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="bccd8-135">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-135">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bccd8-136">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbCommandBuilder" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-136">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbCommandBuilder" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-137">이 메서드는 public <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> 메서드 및 `Finalize` 메서드.</span><span class="sxs-lookup"><span data-stu-id="bccd8-137">This method is called by the public <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> method and the `Finalize` method.</span></span> <span data-ttu-id="bccd8-138"><xref:System.Data.Common.DbCommandBuilder.Dispose%2A> 보호 된 호출 <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> 로 설정 disposing 매개 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-138"><xref:System.Data.Common.DbCommandBuilder.Dispose%2A> invokes the protected <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="bccd8-139">`Finalize` 호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-139">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="bccd8-140">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.Data.Common.DbCommandBuilder>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-140">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Data.Common.DbCommandBuilder> references.</span></span> <span data-ttu-id="bccd8-141">이 메서드는 참조되는 각 개체의 <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-141">This method invokes the <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bccd8-142">
            <para>
              <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /> 다른 개체에서 여러 번 호출할 수 있습니다. <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />를 재정의할 때 이전 <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오. 구현 하는 방법에 대 한 자세한 내용은 <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, 참조 [Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md) 구현 합니다.  에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see langword="Finalize" />, 참조 [관리 되지 않는 Resources](~/docs/standard/garbage-collection/unmanaged.md) 정리 하 고 [Finalize 메서드를 재정의] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-142">
              <para>
                <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /> can be called multiple times by other objects. When overriding <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" />. For more information about how to implement <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bccd8-143">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-143">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-144">응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-144">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="bccd8-145">사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-145">You can also use <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="bccd8-146">예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 및 관련된 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-146">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> and modify the associated command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="bccd8-147">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="bccd8-147">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="bccd8-148">그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-148">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="bccd8-149">SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-149">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="bccd8-150">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대.</span><span class="sxs-lookup"><span data-stu-id="bccd8-150">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="bccd8-151">경우 오버 로드 된 버전의 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 발생할 수 있습니다는 부울 값을 제공 하 여이 동작을 지정할 수 있습니다는 <xref:System.Data.Common.DbCommandBuilder> 전달 하 여 대신 열 이름에 따라 매개 변수를 생성 `True`합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-151">If the overloaded version of <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> allows you to specify this behavior by supplying a Boolean value, you can cause the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead by passing `True`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetDeleteCommand();" />
      <MemberSignature Language="F#" Value="member this.GetDeleteCommand : unit -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetDeleteCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bccd8-152">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-152">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bccd8-153">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-153">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-154">응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-154">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="bccd8-155">사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-155">You can also use <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="bccd8-156">예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 및 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-156">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="bccd8-157">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="bccd8-157">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="bccd8-158">그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-158">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="bccd8-159">SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-159">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="member this.GetDeleteCommand : bool -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetDeleteCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="bccd8-160">If <see langword="true" />, generate parameter names matching column names, if possible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-160">If <see langword="true" />, generate parameter names matching column names, if possible.</span>
          </span>
          <span data-ttu-id="bccd8-161">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-161">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bccd8-162">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source, optionally using columns for parameter names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-162">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source, optionally using columns for parameter names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bccd8-163">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-163">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-164">응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-164">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="bccd8-165">사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-165">You can also use <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="bccd8-166">예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 및 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-166">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="bccd8-167">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="bccd8-167">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="bccd8-168">그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-168">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="bccd8-169">SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-169">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="bccd8-170">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대.</span><span class="sxs-lookup"><span data-stu-id="bccd8-170">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="bccd8-171">전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수를 사용 하면 강제로 <xref:System.Data.Common.DbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-171">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="bccd8-172">다음 조건에 해당 하는 경우에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-172">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="bccd8-173"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-173">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="bccd8-174">생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-174">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="bccd8-175">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-175">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bccd8-176">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-176">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-177">응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 의 텍스트를 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-177">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="bccd8-178">사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-178">You can also use <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="bccd8-179">예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 및 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-179">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> and modify command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="bccd8-180">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="bccd8-180">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="bccd8-181">그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-181">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="bccd8-182">SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-182">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="bccd8-183">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대.</span><span class="sxs-lookup"><span data-stu-id="bccd8-183">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="bccd8-184">경우 오버 로드 된 버전의 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 이 동작을 지정할 수 있습니다, 발생할 수 있습니다는 <xref:System.Data.Common.DbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-184">If the overloaded version of <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> allows you to specify this behavior, you can cause the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetInsertCommand();" />
      <MemberSignature Language="F#" Value="member this.GetInsertCommand : unit -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetInsertCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bccd8-185">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-185">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bccd8-186">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-186">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-187">응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 의 텍스트를 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-187">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="bccd8-188">사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-188">You can also use <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="bccd8-189">예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 및 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-189">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="bccd8-190">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="bccd8-190">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="bccd8-191">그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-191">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="bccd8-192">SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-192">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="member this.GetInsertCommand : bool -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetInsertCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="bccd8-193">If <see langword="true" />, generate parameter names matching column names, if possible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-193">If <see langword="true" />, generate parameter names matching column names, if possible.</span>
          </span>
          <span data-ttu-id="bccd8-194">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-194">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bccd8-195">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source, optionally using columns for parameter names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-195">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source, optionally using columns for parameter names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bccd8-196">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-196">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-197">응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 의 텍스트를 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-197">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="bccd8-198">사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-198">You can also use <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="bccd8-199">예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 및 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-199">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="bccd8-200">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="bccd8-200">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="bccd8-201">그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-201">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="bccd8-202">SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-202">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="bccd8-203">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대.</span><span class="sxs-lookup"><span data-stu-id="bccd8-203">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="bccd8-204">전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수를 사용 하면 강제로 <xref:System.Data.Common.DbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-204">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="bccd8-205">열 이름에 따라 매개 변수를 생성할 다음 조건이 충족 되는 경우에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-205">Generation of the parameters based on column names succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="bccd8-206"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-206">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="bccd8-207">생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-207">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="bccd8-208">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-208">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParameterName">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bccd8-209">Returns the name of the specified parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-209">Returns the name of the specified parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="abstract member GetParameterName : int -&gt; string" Usage="dbCommandBuilder.GetParameterName parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">
          <span data-ttu-id="bccd8-210">The number to be included as part of the parameter's name..</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-210">The number to be included as part of the parameter's name..</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bccd8-211">Returns the name of the specified parameter in the format of @p*#*.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-211">Returns the name of the specified parameter in the format of @p*#*.</span>
          </span>
          <span data-ttu-id="bccd8-212">Use when building a custom command builder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-212">Use when building a custom command builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bccd8-213">The name of the parameter with the specified number appended as part of the parameter name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-213">The name of the parameter with the specified number appended as part of the parameter name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="abstract member GetParameterName : string -&gt; string" Usage="dbCommandBuilder.GetParameterName parameterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">
          <span data-ttu-id="bccd8-214">The partial name of the parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-214">The partial name of the parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bccd8-215">Returns the full parameter name, given the partial parameter name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-215">Returns the full parameter name, given the partial parameter name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bccd8-216">The full parameter name corresponding to the partial parameter name requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-216">The full parameter name corresponding to the partial parameter name requested.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="abstract member GetParameterPlaceholder : int -&gt; string" Usage="dbCommandBuilder.GetParameterPlaceholder parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">
          <span data-ttu-id="bccd8-217">The number to be included as part of the parameter's name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-217">The number to be included as part of the parameter's name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bccd8-218">Returns the placeholder for the parameter in the associated SQL statement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-218">Returns the placeholder for the parameter in the associated SQL statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bccd8-219">The name of the parameter with the specified number appended.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-219">The name of the parameter with the specified number appended.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-220">이 메서드는 사용자 지정 명령 작성기를 만드는 공급자 작성자가 사용이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-220">This method is intended for use by provider writers building a custom command builder.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable GetSchemaTable (System.Data.Common.DbCommand sourceCommand);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable(class System.Data.Common.DbCommand sourceCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSchemaTable (sourceCommand As DbCommand) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ GetSchemaTable(System::Data::Common::DbCommand ^ sourceCommand);" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaTable : System.Data.Common.DbCommand -&gt; System.Data.DataTable&#xA;override this.GetSchemaTable : System.Data.Common.DbCommand -&gt; System.Data.DataTable" Usage="dbCommandBuilder.GetSchemaTable sourceCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceCommand" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="sourceCommand">
          <span data-ttu-id="bccd8-221">The <see cref="T:System.Data.Common.DbCommand" /> for which to retrieve the corresponding schema table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-221">The <see cref="T:System.Data.Common.DbCommand" /> for which to retrieve the corresponding schema table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bccd8-222">Returns the schema table for the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-222">Returns the schema table for the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bccd8-223">A <see cref="T:System.Data.DataTable" /> that represents the schema for the specific <see cref="T:System.Data.Common.DbCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-223">A <see cref="T:System.Data.DataTable" /> that represents the schema for the specific <see cref="T:System.Data.Common.DbCommand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-224">이 메서드는 사용자 지정 명령 작성기를 만드는 공급자 작성자가 사용이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-224">This method is intended for use by provider writers building a custom command builder.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bccd8-225">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-225">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-226">응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-226">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="bccd8-227">사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-227">You can also use <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="bccd8-228">예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 및 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-228">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="bccd8-229">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="bccd8-229">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="bccd8-230">그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-230">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="bccd8-231">SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-231">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="bccd8-232">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대.</span><span class="sxs-lookup"><span data-stu-id="bccd8-232">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="bccd8-233">경우 오버 로드 된 버전의 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 이 동작을 지정할 수 있습니다, 발생할 수 있습니다는 <xref:System.Data.Common.DbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-233">If the overloaded version of <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> allows you to specify this behavior, you can cause the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetUpdateCommand();" />
      <MemberSignature Language="F#" Value="member this.GetUpdateCommand : unit -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetUpdateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bccd8-234">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-234">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bccd8-235">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-235">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-236">응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-236">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="bccd8-237">사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-237">You can also use <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="bccd8-238">예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 및 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-238">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="bccd8-239">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="bccd8-239">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="bccd8-240">그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-240">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="bccd8-241">SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-241">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="member this.GetUpdateCommand : bool -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetUpdateCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="bccd8-242">If <see langword="true" />, generate parameter names matching column names, if possible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-242">If <see langword="true" />, generate parameter names matching column names, if possible.</span>
          </span>
          <span data-ttu-id="bccd8-243">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-243">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bccd8-244">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source, optionally using columns for parameter names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-244">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source, optionally using columns for parameter names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bccd8-245">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-245">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-246">응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-246">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="bccd8-247">사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-247">You can also use <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="bccd8-248">예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 및 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-248">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> and modify command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="bccd8-249">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="bccd8-249">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="bccd8-250">그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-250">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="bccd8-251">SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-251">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="bccd8-252">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대.</span><span class="sxs-lookup"><span data-stu-id="bccd8-252">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="bccd8-253">전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수를 사용 하면 강제로 <xref:System.Data.Common.DbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-253">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="bccd8-254">열 이름에 따라 매개 변수를 생성할 다음 조건이 충족 되는 경우에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-254">Generation of the parameters based on column names succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="bccd8-255"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-255">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="bccd8-256">생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-256">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="bccd8-257">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-257">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeCommand">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbCommand InitializeCommand (System.Data.Common.DbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbCommand InitializeCommand(class System.Data.Common.DbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InitializeCommand (command As DbCommand) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbCommand ^ InitializeCommand(System::Data::Common::DbCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member InitializeCommand : System.Data.Common.DbCommand -&gt; System.Data.Common.DbCommand&#xA;override this.InitializeCommand : System.Data.Common.DbCommand -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.InitializeCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="bccd8-258">The <see cref="T:System.Data.Common.DbCommand" /> to be used by the command builder for the corresponding insert, update, or delete command.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-258">The <see cref="T:System.Data.Common.DbCommand" /> to be used by the command builder for the corresponding insert, update, or delete command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bccd8-259">Resets the <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" />, and <see cref="T:System.Data.UpdateRowSource" /> properties on the <see cref="T:System.Data.Common.DbCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-259">Resets the <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" />, and <see cref="T:System.Data.UpdateRowSource" /> properties on the <see cref="T:System.Data.Common.DbCommand" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bccd8-260">A <see cref="T:System.Data.Common.DbCommand" /> instance to use for each insert, update, or delete operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-260">A <see cref="T:System.Data.Common.DbCommand" /> instance to use for each insert, update, or delete operation.</span>
          </span>
          <span data-ttu-id="bccd8-261">Passing a null value allows the <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> method to create a <see cref="T:System.Data.Common.DbCommand" /> object based on the Select command associated with the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-261">Passing a null value allows the <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> method to create a <see cref="T:System.Data.Common.DbCommand" /> object based on the Select command associated with the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-262">이 메서드는 사용자 지정 명령 작성기를 만드는 공급자 작성자가 사용이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-262">This method is intended for use by provider writers building a custom command builder.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public virtual string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member QuoteIdentifier : string -&gt; string&#xA;override this.QuoteIdentifier : string -&gt; string" Usage="dbCommandBuilder.QuoteIdentifier unquotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">
          <span data-ttu-id="bccd8-263">The original unquoted identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-263">The original unquoted identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bccd8-264">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-264">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bccd8-265">The quoted version of the identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-265">The quoted version of the identifier.</span>
          </span>
          <span data-ttu-id="bccd8-266">Embedded quotes within the identifier are properly escaped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-266">Embedded quotes within the identifier are properly escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuotePrefix">
      <MemberSignature Language="C#" Value="public virtual string QuotePrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuotePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.QuotePrefix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QuotePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuotePrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuotePrefix : string with get, set" Usage="System.Data.Common.DbCommandBuilder.QuotePrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bccd8-267">Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-267">Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bccd8-268">시작 문자 또는 문자를 사용 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-268">The beginning character or characters to use.</span>
          </span>
          <span data-ttu-id="bccd8-269">기본값은 빈 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-269">The default is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-270">일부 데이터 원본에는 공백, 쉼표 및 세미콜론 등의 문자를 포함할 수 있는 개체 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-270">Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</span></span> <span data-ttu-id="bccd8-271">이 기능을 사용 하 여는 <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> 및 <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> 왼쪽된 대괄호 문자와 오른쪽 대괄호를 개체 이름 캡슐화와 같은 구분 기호를 지정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-271">To accommodate this capability, use the <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> and <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bccd8-272">변경할 수 없지만 <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> 속성 삽입, 업데이트 또는 삭제 명령을 생성 한 후, 호출한 후 해당 설정을 변경할 수는 `Update` 의 메서드는 <xref:System.Data.Common.DbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-272">Although you cannot change the <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> or <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete command has been generated, you can change their settings after calling the `Update` method of a <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bccd8-273">This property cannot be changed after an insert, update, or delete command has been generated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-273">This property cannot be changed after an insert, update, or delete command has been generated.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteSuffix">
      <MemberSignature Language="C#" Value="public virtual string QuoteSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuoteSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QuoteSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuoteSuffix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteSuffix : string with get, set" Usage="System.Data.Common.DbCommandBuilder.QuoteSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bccd8-274">Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-274">Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bccd8-275">끝 문자 (들) 사용 하도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-275">The ending character or characters to use.</span>
          </span>
          <span data-ttu-id="bccd8-276">기본값은 빈 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-276">The default is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-277">일부 데이터 원본에는 공백, 쉼표 및 세미콜론 등의 문자를 포함할 수 있는 개체 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-277">Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</span></span> <span data-ttu-id="bccd8-278">이 기능을 사용 하 여는 <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> 및 <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> 왼쪽된 대괄호 문자와 오른쪽 대괄호를 개체 이름 캡슐화와 같은 구분 기호를 지정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-278">To accommodate this capability, use the <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> and <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bccd8-279">변경할 수 없지만 <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> 속성 삽입, 업데이트 또는 삭제 명령을 생성 한 후, 호출한 후 해당 설정을 변경할 수는 `Update` 의 메서드는 <xref:System.Data.Common.DbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-279">Although you cannot change the <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> or <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete command has been generated, you can change their settings after calling the `Update` method of a <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public virtual void RefreshSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.RefreshSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RefreshSchema ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RefreshSchema();" />
      <MemberSignature Language="F#" Value="abstract member RefreshSchema : unit -&gt; unit&#xA;override this.RefreshSchema : unit -&gt; unit" Usage="dbCommandBuilder.RefreshSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bccd8-280">Clears the commands associated with this <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-280">Clears the commands associated with this <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-281">호출 된 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 메서드는 <xref:System.Data.Common.DbCommand> 개체에서 참조 하는 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>,</span><span class="sxs-lookup"><span data-stu-id="bccd8-281">Calling the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method effectively removes all the <xref:System.Data.Common.DbCommand> objects referred to by the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>,</span></span>  
  
 <span data-ttu-id="bccd8-282"><xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>,</span><span class="sxs-lookup"><span data-stu-id="bccd8-282"><xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>,</span></span>  
  
 <span data-ttu-id="bccd8-283"><xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>및</span><span class="sxs-lookup"><span data-stu-id="bccd8-283"><xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>, and</span></span>  
  
 <span data-ttu-id="bccd8-284"><xref:System.Data.Common.DbDataAdapter.InsertCommand%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="bccd8-284"><xref:System.Data.Common.DbDataAdapter.InsertCommand%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected void RowUpdatingHandler (System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RowUpdatingHandler(class System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RowUpdatingHandler (rowUpdatingEvent As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RowUpdatingHandler(System::Data::Common::RowUpdatingEventArgs ^ rowUpdatingEvent);" />
      <MemberSignature Language="F#" Value="member this.RowUpdatingHandler : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbCommandBuilder.RowUpdatingHandler rowUpdatingEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowUpdatingEvent" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="rowUpdatingEvent">
          <span data-ttu-id="bccd8-285">A <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> instance containing information about the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-285">A <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> instance containing information about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bccd8-286">Adds an event handler for the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-286">Adds an event handler for the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaSeparator">
      <MemberSignature Language="C#" Value="public virtual string SchemaSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.SchemaSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SchemaSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SchemaSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SchemaSeparator : string with get, set" Usage="System.Data.Common.DbCommandBuilder.SchemaSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bccd8-287">Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-287">Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bccd8-288">스키마 구분 기호로 사용할 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-288">The character to be used as the schema separator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-289">일반적으로 데이터베이스 서버는 일부 문자로 식별자에서 스키마 이름을 구분 식별자에 대 한 스키마를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-289">Generally, database servers indicate the schema for an identifier by separating the schema name from the identifier with some character.</span></span> <span data-ttu-id="bccd8-290">예를 들어 SQL Server 사용 콜론을 같은 완료 식별자를 만들어 **사람: CustomerName**, 여기서 스키마 이름인 "Person" 및 "CustomerName"는 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-290">For example, SQL Server uses a colon, creating complete identifiers such as **Person:CustomerName**, where "Person" is the schema name and "CustomerName" is the identifier.</span></span> <span data-ttu-id="bccd8-291">이 속성을 설정 개발자가이 동작을 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-291">Setting this property allows developers to modify this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllValues">
      <MemberSignature Language="C#" Value="public bool SetAllValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SetAllValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.SetAllValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SetAllValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SetAllValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SetAllValues : bool with get, set" Usage="System.Data.Common.DbCommandBuilder.SetAllValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bccd8-292">Specifies whether all column values in an update statement are included or only changed ones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-292">Specifies whether all column values in an update statement are included or only changed ones.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bccd8-293">
            <see langword="true" /> UPDATE 문에 의해 생성 된 경우는 <see cref="T:System.Data.Common.DbCommandBuilder" /> ;는 모든 열 포함 <see langword="false" /> 포함 된 것만 열을 변경 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-293">
              <see langword="true" /> if the UPDATE statement generated by the <see cref="T:System.Data.Common.DbCommandBuilder" /> includes all columns; <see langword="false" /> if it includes only changed columns.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-294">에 의해 생성 된 UPDATE 문에 <xref:System.Data.Common.DbCommandBuilder> 모든 열에 대 한 업데이트 정보를 포함할 수 또는 값이 변경 된 열에 대 한 정보를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-294">The UPDATE statement generated by a <xref:System.Data.Common.DbCommandBuilder> can include update information about all the columns, or it can include information only about those columns whose values have changed.</span></span> <span data-ttu-id="bccd8-295">설정의 <xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A> 속성을 `true` 여부의 값이 변경 되었는지 여부를 때문에 생성 된 UPDATE 문이 열이 모두 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-295">Setting the <xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A> property to `true` causes the generated UPDATE statement to include all the columns, whether their values have changed or not.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected abstract void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="abstract member SetRowUpdatingHandler : System.Data.Common.DbDataAdapter -&gt; unit" Usage="dbCommandBuilder.SetRowUpdatingHandler adapter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <span data-ttu-id="bccd8-296">The <see cref="T:System.Data.Common.DbDataAdapter" /> to be used for the update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-296">The <see cref="T:System.Data.Common.DbDataAdapter" /> to be used for the update.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bccd8-297">Registers the <see cref="T:System.Data.Common.DbCommandBuilder" /> to handle the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event for a <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-297">Registers the <see cref="T:System.Data.Common.DbCommandBuilder" /> to handle the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event for a <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccd8-298">이 메서드는 사용자 지정 명령 작성기를 만드는 공급자 작성자가 사용이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-298">This method is intended for use by provider writers building a custom command builder.</span></span> <span data-ttu-id="bccd8-299">새 <xref:System.Data.Common.DbDataAdapter> 에 추가 되는 <xref:System.Data.Common.DbCommandBuilder>, DbDataAdapter의에 대 한 등록 **RowUpdating** 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-299">When a new <xref:System.Data.Common.DbDataAdapter> is added to the <xref:System.Data.Common.DbCommandBuilder>, it is registered for the DbDataAdapter's **RowUpdating** event.</span></span> <span data-ttu-id="bccd8-300">이 메서드는 동일한로 다시 호출 되 면 <xref:System.Data.Common.DbDataAdapter>, <xref:System.Data.Common.DbCommandBuilder> 해당 DbDataAdapter에 대 한 등록 되어 있지 않은 **RowUpdating** 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="bccd8-300">If this method is called again with the same <xref:System.Data.Common.DbDataAdapter>, the <xref:System.Data.Common.DbCommandBuilder> is unregistered for that DbDataAdapter's **RowUpdating** event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public virtual string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member UnquoteIdentifier : string -&gt; string&#xA;override this.UnquoteIdentifier : string -&gt; string" Usage="dbCommandBuilder.UnquoteIdentifier quotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">
          <span data-ttu-id="bccd8-301">The identifier that will have its embedded quotes removed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-301">The identifier that will have its embedded quotes removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bccd8-302">Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-302">Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bccd8-303">The unquoted identifier, with embedded quotes properly un-escaped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccd8-303">The unquoted identifier, with embedded quotes properly un-escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>