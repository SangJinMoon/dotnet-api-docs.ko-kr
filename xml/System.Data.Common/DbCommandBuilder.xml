<Type Name="DbCommandBuilder" FullName="System.Data.Common.DbCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5bfb54f7b76a4739f53cb9e965eb71e14aa89733" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380397" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbCommandBuilder : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbCommandBuilder extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbCommandBuilder&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbCommandBuilder abstract : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>관련 데이터베이스를 사용하여 <see cref="T:System.Data.DataSet" />에 변경한 내용을 조정하는 데 사용되는 단일 테이블 명령을 자동으로 생성합니다. 이 클래스는 상속될 수만 있는 추상 클래스입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.DbCommandBuilder> 클래스 자체 명령 작성기를 만드는 공급자 작성자의 편의 위해 제공 됩니다. 이 클래스에서 상속 하 여 개발자는 자신의 코드에 공급자 특정 동작을 구현할 수 있습니다.  
  
 <xref:System.Data.Common.DbDataAdapter> 변경 내용을 조정 하는 데 필요한 SQL 문을 자동으로 생성 되지 않습니다는 <xref:System.Data.DataSet> 연결 된 데이터 원본을 사용 합니다. 만들 수 있습니다는 <xref:System.Data.Common.DbCommandBuilder> 설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 개체는 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> 의 속성은 <xref:System.Data.Common.DbDataAdapter>합니다. 를 설정 하지 않는 추가적인 모든 SQL 문을 그러면는 <xref:System.Data.Common.DbCommandBuilder>합니다.  
  
 <xref:System.Data.Common.DbCommandBuilder> 자체에 대 한 수신기로 등록 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> 설정할 때마다 이벤트는 <xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A> 속성입니다. 만 연결할 수 있습니다 <xref:System.Data.Common.DbDataAdapter> 또는 <xref:System.Data.Common.DbCommandBuilder> 서로 개체를 한 번에 있습니다.  
  
 INSERT, UPDATE 또는 DELETE 문을 생성 하는 <xref:System.Data.Common.DbCommandBuilder> 사용 하 여는 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> 속성을 필수 메타 데이터 집합을 자동으로 검색 합니다. 변경 하는 경우는 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> 호출 해야 (예를 들어 첫 번째 업데이트 후) 메타 데이터를 검색 한 후의 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 메서드 메타 데이터를 업데이트 합니다.  
  
 또한 `SelectCommand`는 기본 키 열이나 고유 열을 하나 이상 반환해야 합니다. 항목이 없으면는 <xref:System.InvalidOperationException> 예외가 생성 되 고 명령은 생성 되지 않습니다.  
  
 <xref:System.Data.Common.DbCommandBuilder> 또한 사용 하 여는 <xref:System.Data.Common.DbCommand.Connection%2A>, <xref:System.Data.Common.DbCommand.CommandTimeout%2A>, 및 <xref:System.Data.Common.DbCommand.Transaction%2A> 속성에서 참조 되는 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>합니다. 사용자를 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 이러한 속성을 수정 하거나는 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> 자체는 대체 합니다. 그렇지 않은 경우는 <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>, <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>, 및 <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> 속성 이전 값을 유지 합니다.  
  
 호출 하는 경우 <xref:System.ComponentModel.Component.Dispose%2A>, <xref:System.Data.Common.DbCommandBuilder> 에서 분리는 <xref:System.Data.Common.DbDataAdapter>, 생성된 된 명령을 더 이상 사용 됩니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.Common.DbCommandBuilder" /> 클래스에서 상속하는 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected abstract void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow row, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow row, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ row, System::Data::StatementType statementType, bool whereClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="row" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">추가 수정 사항이 적용될 <see cref="T:System.Data.Common.DbParameter" />입니다.</param>
        <param name="row">
          <see cref="T:System.Data.DataRow" />에서 제공하는 스키마 테이블의 <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />입니다.</param>
        <param name="statementType">생성되는 명령의 형식인 INSERT, UPDATE 또는 DELETE입니다.</param>
        <param name="whereClause">
          매개 변수가 WHERE 절을 업데이트하거나 삭제하는 데 사용되면 <see langword="true" />이고, 값을 삽입하거나 업데이트하는 데 사용되면 <see langword="false" />입니다.</param>
        <summary>
          <see cref="T:System.Data.Common.DbCommandBuilder" /> 클래스의 공급자 구현에서 추가 매개 변수 속성을 처리할 수 있도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 방법을 사용 하면는 <xref:System.Data.Common.DbCommandBuilder> 공급자 특정 매개 변수 속성을 처리 하는 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogLocation">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.CatalogLocation CatalogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Common.CatalogLocation CatalogLocation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.CatalogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogLocation As CatalogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Common::CatalogLocation CatalogLocation { System::Data::Common::CatalogLocation get(); void set(System::Data::Common::CatalogLocation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CatalogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.Common.CatalogLocation" /> 클래스의 인스턴스에 대한 <see cref="T:System.Data.Common.DbCommandBuilder" />을 설정하거나 가져옵니다.</summary>
        <value>
          <see cref="T:System.Data.Common.CatalogLocation" /> 개체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogSeparator">
      <MemberSignature Language="C#" Value="public virtual string CatalogSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.CatalogSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.Common.DbCommandBuilder" /> 클래스의 인스턴스에 대한 카탈로그 구분 기호로 사용되는 문자열을 설정하거나 가져옵니다.</summary>
        <value>
          <see cref="T:System.Data.Common.DbCommandBuilder" /> 클래스의 인스턴스에서 사용할 카탈로그 구분 기호를 나타내는 문자열입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictOption">
      <MemberSignature Language="C#" Value="public virtual System.Data.ConflictOption ConflictOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConflictOption ConflictOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.ConflictOption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConflictOption As ConflictOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConflictOption ConflictOption { System::Data::ConflictOption get(); void set(System::Data::ConflictOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConflictOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.ConflictOption" />가 사용할 <see cref="T:System.Data.Common.DbCommandBuilder" />을 지정합니다.</summary>
        <value>이 <see cref="T:System.Data.ConflictOption" />의 동작을 설명하는 <see cref="T:System.Data.Common.DbCommandBuilder" /> 값 중 하나를 반환합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As DbDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbDataAdapter ^ DataAdapter { System::Data::Common::DbDataAdapter ^ get(); void set(System::Data::Common::DbDataAdapter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Transact-SQL 문을 자동으로 생성할 <see cref="T:System.Data.Common.DbDataAdapter" /> 개체를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.Common.DbDataAdapter" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.DbCommandBuilder> 자체에 대 한 수신기로 등록 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> 에서 생성 되는 이벤트는 <xref:System.Data.Common.DbDataAdapter> 이 속성에 지정 된 합니다.  
  
 새 인스턴스를 만들 때 <xref:System.Data.Common.DbCommandBuilder>, 모든 기존 <xref:System.Data.Common.DbCommandBuilder> 이 연관 <xref:System.Data.Common.DbDataAdapter> 해제 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary>
          <see cref="T:System.Data.Common.DbCommandBuilder" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 public <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> 메서드 및 `Finalize` 메서드. <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> 보호 된 호출 <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> 로 설정 disposing 매개 `true`합니다. `Finalize` 호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.  
  
 `disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.Data.Common.DbCommandBuilder>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다. 이 메서드는 참조되는 각 개체의 <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> 메서드를 호출합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다. <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />를 재정의할 때 이전 <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오. 구현 하는 방법에 대 한 자세한 내용은 <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, 참조 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
 에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see langword="Finalize" />, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>데이터 소스에서 삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 가져옵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 및 관련된 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.  
  
 먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다. SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>합니다.  
  
 매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대. 경우 오버 로드 된 버전의 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 발생할 수 있습니다는 부울 값을 제공 하 여이 동작을 지정할 수 있습니다는 <xref:System.Data.Common.DbCommandBuilder> 전달 하 여 대신 열 이름에 따라 매개 변수를 생성 `True`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetDeleteCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 소스에서 삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 가져옵니다.</summary>
        <returns>삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 및 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.  
  
 먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다. SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <see langword="true" />인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다. <see langword="false" />이면 @p1, @p2 등을 생성합니다.</param>
        <summary>선택적으로 매개 변수 이름에 열을 사용하여 데이터 소스에서 삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 가져옵니다.</summary>
        <returns>삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 및 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.  
  
 먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다. SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>합니다.  
  
 매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대. 전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수를 사용 하면 강제로 <xref:System.Data.Common.DbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다. 다음 조건에 해당 하는 경우에 성공 합니다.  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.  
  
-   생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.  
  
-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>데이터 소스에서 삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 가져옵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 의 텍스트를 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 및 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.  
  
 먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다. SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>합니다.  
  
 매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대. 경우 오버 로드 된 버전의 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 이 동작을 지정할 수 있습니다, 발생할 수 있습니다는 <xref:System.Data.Common.DbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetInsertCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 소스에서 삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 가져옵니다.</summary>
        <returns>삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 의 텍스트를 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 및 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.  
  
 먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다. SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <see langword="true" />인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다. <see langword="false" />이면 @p1, @p2 등을 생성합니다.</param>
        <summary>선택적으로 매개 변수 이름에 열을 사용하여 데이터 소스에서 삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 가져옵니다.</summary>
        <returns>삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 의 텍스트를 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 및 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.  
  
 먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다. SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>합니다.  
  
 매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대. 전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수를 사용 하면 강제로 <xref:System.Data.Common.DbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다. 열 이름에 따라 매개 변수를 생성할 다음 조건이 충족 되는 경우에 성공 합니다.  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.  
  
-   생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.  
  
-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParameterName">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 매개 변수의 이름을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">매개 변수 이름의 일부로 포함될 수입니다.</param>
        <summary>@p*#* 형식으로 지정된 매개 변수의 이름을 반환합니다. 사용자 지정 명령 작성기를 만들 때 사용합니다.</summary>
        <returns>매개 변수 이름의 일부로 지정된 수가 추가된 매개 변수 이름입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">매개 변수의 부분 이름입니다.</param>
        <summary>부분 매개 변수 이름이 제공된 경우 전체 매개 변수 이름을 반환합니다.</summary>
        <returns>요청된 부분 매개 변수 이름에 해당하는 전체 매개 변수 이름입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">매개 변수 이름의 일부로 포함될 수입니다.</param>
        <summary>연결된 SQL 문에서 매개 변수의 자리 표시자를 반환합니다.</summary>
        <returns>지정된 수가 추가된 매개 변수 이름입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 사용자 지정 명령 작성기를 만드는 공급자 작성자가 사용이 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable GetSchemaTable (System.Data.Common.DbCommand sourceCommand);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable(class System.Data.Common.DbCommand sourceCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSchemaTable (sourceCommand As DbCommand) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ GetSchemaTable(System::Data::Common::DbCommand ^ sourceCommand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceCommand" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="sourceCommand">해당 스키마 테이블을 검색할 <see cref="T:System.Data.Common.DbCommand" />입니다.</param>
        <summary>
          <see cref="T:System.Data.Common.DbCommandBuilder" />의 스키마 테이블을 반환합니다.</summary>
        <returns>특정 <see cref="T:System.Data.DataTable" />의 스키마를 나타내는 <see cref="T:System.Data.Common.DbCommand" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 사용자 지정 명령 작성기를 만드는 공급자 작성자가 사용이 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>데이터 소스에서 업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 가져옵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 및 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.  
  
 먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다. SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>합니다.  
  
 매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대. 경우 오버 로드 된 버전의 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 이 동작을 지정할 수 있습니다, 발생할 수 있습니다는 <xref:System.Data.Common.DbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetUpdateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 소스에서 업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 가져옵니다.</summary>
        <returns>업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 및 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.  
  
 먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다. SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <see langword="true" />인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다. <see langword="false" />이면 @p1, @p2 등을 생성합니다.</param>
        <summary>선택적으로 매개 변수 이름에 열을 사용하여 데이터 소스에서 업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 가져옵니다.</summary>
        <returns>업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Common.DbCommand" /> 개체를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 및 명령 텍스트를 수정 하 고 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>합니다.  
  
 먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다. SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>합니다.  
  
 매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대. 전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수를 사용 하면 강제로 <xref:System.Data.Common.DbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다. 열 이름에 따라 매개 변수를 생성할 다음 조건이 충족 되는 경우에 성공 합니다.  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.  
  
-   생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.  
  
-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeCommand">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbCommand InitializeCommand (System.Data.Common.DbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbCommand InitializeCommand(class System.Data.Common.DbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InitializeCommand (command As DbCommand) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbCommand ^ InitializeCommand(System::Data::Common::DbCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="command">명령 작성기가 해당하는 삽입, 업데이트 또는 삭제 명령에 사용할 <see cref="T:System.Data.Common.DbCommand" />입니다.</param>
        <summary>
          <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />에 대한 <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" />, <see cref="T:System.Data.UpdateRowSource" /> 및 <see cref="T:System.Data.Common.DbCommand" /> 속성을 다시 설정합니다.</summary>
        <returns>각각의 삽입, 업데이트 또는 삭제 작업에 사용할 <see cref="T:System.Data.Common.DbCommand" /> 인스턴스입니다. null 값을 전달하면 <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> 메서드에서 <see cref="T:System.Data.Common.DbCommand" />와 연결된 Select 명령에 따라 <see cref="T:System.Data.Common.DbCommandBuilder" /> 개체를 만들 수 있습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 사용자 지정 명령 작성기를 만드는 공급자 작성자가 사용이 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public virtual string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">따옴표 붙지 않은 원래 식별자입니다.</param>
        <summary>올바른 카탈로그 대/소문자로 따옴표 붙지 않은 식별자가 제공되는 경우 따옴표 붙은 올바른 형식의 해당 식별자를 반환합니다. 여기에는 식별자에 포함된 모든 따옴표를 이스케이프하는 작업이 포함됩니다.</summary>
        <returns>따옴표를 사용한 식별자입니다. 식별자에 포함된 따옴표가 올바르게 이스케이프되었습니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuotePrefix">
      <MemberSignature Language="C#" Value="public virtual string QuotePrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuotePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.QuotePrefix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QuotePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuotePrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이름에 공백 또는 예약된 토큰과 같은 문자가 포함된 데이터베이스 개체(예: 테이블 또는 열)를 지정할 때 사용할 시작 문자를 가져오거나 설정합니다.</summary>
        <value>사용할 시작 문자입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부 데이터 원본에는 공백, 쉼표 및 세미콜론 등의 문자를 포함할 수 있는 개체 있을 수 있습니다. 이 기능을 사용 하 여는 <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> 및 <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> 왼쪽된 대괄호 문자와 오른쪽 대괄호를 개체 이름 캡슐화와 같은 구분 기호를 지정 하는 속성입니다.  
  
> [!NOTE]
>  변경할 수 없지만 <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> 속성 삽입, 업데이트 또는 삭제 명령을 생성 한 후, 호출한 후 해당 설정을 변경할 수는 `Update` 의 메서드는 <xref:System.Data.Common.DbDataAdapter>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">삽입, 업데이트 또는 삭제 명령이 생성된 후에 이 속성을 변경할 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteSuffix">
      <MemberSignature Language="C#" Value="public virtual string QuoteSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuoteSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QuoteSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuoteSuffix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이름에 공백 또는 예약된 토큰과 같은 문자가 포함된 데이터베이스 개체(예: 테이블 또는 열)를 지정할 때 사용할 끝 문자를 가져오거나 설정합니다.</summary>
        <value>사용할 끝 문자입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부 데이터 원본에는 공백, 쉼표 및 세미콜론 등의 문자를 포함할 수 있는 개체 있을 수 있습니다. 이 기능을 사용 하 여는 <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> 및 <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> 왼쪽된 대괄호 문자와 오른쪽 대괄호를 개체 이름 캡슐화와 같은 구분 기호를 지정 하는 속성입니다.  
  
> [!NOTE]
>  변경할 수 없지만 <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> 또는 <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> 속성 삽입, 업데이트 또는 삭제 명령을 생성 한 후, 호출한 후 해당 설정을 변경할 수는 `Update` 의 메서드는 <xref:System.Data.Common.DbDataAdapter>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public virtual void RefreshSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.RefreshSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RefreshSchema ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RefreshSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Data.Common.DbCommandBuilder" />와 연결된 명령을 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 된 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 메서드는 <xref:System.Data.Common.DbCommand> 개체에서 참조 하는 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>,  
  
 <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>,  
  
 <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>및  
  
 <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A> 속성  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected void RowUpdatingHandler (System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RowUpdatingHandler(class System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RowUpdatingHandler (rowUpdatingEvent As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RowUpdatingHandler(System::Data::Common::RowUpdatingEventArgs ^ rowUpdatingEvent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowUpdatingEvent" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="rowUpdatingEvent">이벤트에 대한 정보를 포함하는 <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 인스턴스입니다.</param>
        <summary>
          <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> 이벤트에 대한 이벤트 처리기를 추가합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaSeparator">
      <MemberSignature Language="C#" Value="public virtual string SchemaSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.SchemaSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SchemaSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SchemaSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스키마 식별자와 다른 식별자 간의 구분 기호로 사용할 문자를 가져오거나 설정합니다.</summary>
        <value>스키마 구분 기호로 사용할 문자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 데이터베이스 서버는 일부 문자로 식별자에서 스키마 이름을 구분 식별자에 대 한 스키마를 나타냅니다. 예를 들어 SQL Server 사용 콜론을 같은 완료 식별자를 만들어 **사람: CustomerName**, 여기서 스키마 이름인 "Person" 및 "CustomerName"는 식별자입니다. 이 속성을 설정 개발자가이 동작을 수정할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllValues">
      <MemberSignature Language="C#" Value="public bool SetAllValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SetAllValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.SetAllValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SetAllValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SetAllValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>UPDATE 문에 모든 열 값이 포함되어 있는지 아니면 변경된 열 값만 포함되어 있는지를 지정합니다.</summary>
        <value>
          <see cref="T:System.Data.Common.DbCommandBuilder" />가 생성한 UPDATE 문에 모든 열이 포함되면 <see langword="true" />이고, 변경된 열만 포함되면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 의해 생성 된 UPDATE 문에 <xref:System.Data.Common.DbCommandBuilder> 모든 열에 대 한 업데이트 정보를 포함할 수 또는 값이 변경 된 열에 대 한 정보를 포함할 수 있습니다. 설정의 <xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A> 속성을 `true` 여부의 값이 변경 되었는지 여부를 때문에 생성 된 UPDATE 문이 열이 모두 포함 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected abstract void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">업데이트에 사용할 <see cref="T:System.Data.Common.DbDataAdapter" />입니다.</param>
        <summary>
          <see cref="T:System.Data.Common.DbCommandBuilder" />에 대한 <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> 이벤트를 처리하기 위해 <see cref="T:System.Data.Common.DbDataAdapter" />를 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 사용자 지정 명령 작성기를 만드는 공급자 작성자가 사용이 됩니다. 새 <xref:System.Data.Common.DbDataAdapter> 에 추가 되는 <xref:System.Data.Common.DbCommandBuilder>, DbDataAdapter의에 대 한 등록 **RowUpdating** 이벤트입니다. 이 메서드는 동일한로 다시 호출 되 면 <xref:System.Data.Common.DbDataAdapter>, <xref:System.Data.Common.DbCommandBuilder> 해당 DbDataAdapter에 대 한 등록 되어 있지 않은 **RowUpdating** 이벤트입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public virtual string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">포함된 따옴표를 제거할 식별자입니다.</param>
        <summary>따옴표 붙은 식별자가 제공되는 경우 따옴표 붙지 않은 올바른 형식의 해당 식별자를 반환합니다. 여기에는 식별자에 포함된 모든 따옴표를 이스케이프 해제하는 작업이 포함됩니다.</summary>
        <returns>포함된 따옴표가 이스케이프 해제된, 따옴표 붙지 않은 식별자입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>