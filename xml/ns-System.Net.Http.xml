<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ns-System.Net.Http.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a83ea4b-dd12-480b-bfc8-267272ef18642117b45807e03a0cb71286977f2d8b3cddbfe4c1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2117b45807e03a0cb71286977f2d8b3cddbfe4c1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/10/2018</xliffext:ms.lasthandoff>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;see cref="N:System.Net.Http" /&gt;</ph> namespace provides a programming interface for modern HTTP applications.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="N:System.Net.Http" /&gt;</ph> 네임스페이스는 최신 HTTP 응용 프로그램의 프로그래밍 인터페이스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http&gt;</ph> namespace is designed to provide the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http&gt;</ph> 네임 스페이스는 다음을 제공 하도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>HTTP client components that allow users to consume modern web services over HTTP.</source>
          <target state="translated">HTTP 클라이언트 구성 요소 사용자가 HTTP를 통해 최신 웹 서비스를 사용할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>HTTP components that can be used by both clients and servers (HTTP headers and messages, for example).</source>
          <target state="translated">사용할 수 있는 HTTP 구성 요소에서 클라이언트와 서버 (HTTP 헤더 및 예를 들어 메시지).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This provides a consistent programming model on both the client and the server side for modern web services over HTTP.</source>
          <target state="translated">이로써 일관 된 프로그래밍 모델은 클라이언트와 서버 쪽에 최신 웹 서비스에 대 한 HTTP를 통해 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http&gt;</ph> namespace and the related <ph id="ph2">&lt;xref:System.Net.Http.Headers&gt;</ph> namespace provide the following set of components:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http&gt;</ph> 네임 스페이스 및 관련 <ph id="ph2">&lt;xref:System.Net.Http.Headers&gt;</ph> 네임 스페이스는 다음과 같은 구성 요소 집합을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> - the primary class used to send and receive requests over HTTP.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> -보내고 HTTP를 통해 요청을 수신 하는 데 사용 되는 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.Http.HttpRequestMessage&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Http.HttpResponseMessage&gt;</ph> - HTTP messages as defined in RFC 2616 by the IETF.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpRequestMessage&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Http.HttpResponseMessage&gt;</ph> -HTTP ietf RFC 2616에 정의 된 메시지입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.Http.Headers.HttpHeaders&gt;</ph> - HTTP headers as defined in RFC 2616 by the IETF.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.Headers.HttpHeaders&gt;</ph> -Ietf RFC 2616에 정의 된 대로 HTTP 헤더입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.Http.HttpClientHandler&gt;</ph> - HTTP handlers responsible for producing HTTP response messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClientHandler&gt;</ph> HTTP 처리기를 HTTP 응답 메시지를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are various HTTP message handles that can be used.</source>
          <target state="translated">사용할 수 있는 다양 한 HTTP 메시지 핸들이 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>These include the following.</source>
          <target state="translated">이 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler&gt;</ph> - A class used to plug a handler into a handler chain.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler&gt;</ph> -클래스에는 처리기 처리기 체인에 연결 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> - A simple to class to derive from that supports the most common requirements for most applications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> -대부분의 응용 프로그램에 대 한 가장 일반적인 요구 사항에서 파생 되도록 클래스에 단순 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.Http.HttpClientHandler&gt;</ph> - A class that operates at the bottom of the handler chain that actually handles the HTTP transport operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClientHandler&gt;</ph> -실제로 HTTP 전송 작업을 처리 하는 처리기 체인의 맨 아래에서 작동 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.Http.WebRequestHandler&gt;</ph> - A specialty class that operates at the bottom of the handler chain class that handles HTTP transport operations with options that are specific to the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.WebRequestHandler&gt;</ph> -특수 클래스에만 적용 되는 옵션을 사용 하 여 HTTP 전송 작업을 처리 하는 처리기 체인 클래스의 맨 아래에서 작동 하는 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest?displayProperty=nameWithType&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The contents of an HTTP message corresponds to the entity body defined in RFC 2616.</source>
          <target state="translated">RFC 2616에 정의 된 엔터티 본문에는 HTTP 메시지의 내용을 해당 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A number of classes can be used for HTTP content.</source>
          <target state="translated">HTTP 콘텐츠를 다양 한 클래스를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>These include the following.</source>
          <target state="translated">이 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.Http.ByteArrayContent&gt;</ph> - HTTP content based on a byte array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.ByteArrayContent&gt;</ph> -에 따라 HTTP 콘텐츠는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.Http.FormUrlEncodedContent&gt;</ph> - HTTP content of name/value tuples encoded using application/x-www-form-urlencoded MIME type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.FormUrlEncodedContent&gt;</ph> 이름/값 튜플의의 HTTP 콘텐츠 응용 프로그램/x-www-형식-urlencoded MIME 형식을 사용 하 여 인코딩됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.Http.MultipartContent&gt;</ph> - HTTP content that gets serialized using the multipart/* content type specification.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.MultipartContent&gt;</ph> Serialize 되는 다중을 사용 하 여 HTTP 콘텐츠 / * 콘텐츠 형식 사양을 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.Http.MultipartFormDataContent&gt;</ph> - HTTP content encoded using the multipart/form-data MIME type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.MultipartFormDataContent&gt;</ph> HTTP 콘텐츠 multipart/form-data MIME 형식을 사용 하 여 인코딩됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.Http.StreamContent&gt;</ph> - HTTP content based on a stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.StreamContent&gt;</ph> HTTP 콘텐츠 스트림을 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.Http.StringContent&gt;</ph> - HTTP content based on a string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.StringContent&gt;</ph> -에 따라 HTTP 콘텐츠는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an app using the <ph id="ph1">&lt;xref:System.Net.Http&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Http.Headers&gt;</ph> namespaces intends to download large amounts of data (50 megabytes or more), then the app should stream those downloads and not use the default buffering.</source>
          <target state="translated">응용 프로그램 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Net.Http&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Http.Headers&gt;</ph> 네임 스페이스에서 많은 양의 데이터 (50mb 이상)을 다운로드 하려는 다음 앱이 다운로드 스트림를 기본 버퍼링을 사용 하지 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the default buffering is used the client memory usage will get very large, potentially resulting in substantially reduced performance.</source>
          <target state="translated">기본 버퍼링을 사용 하는 경우 클라이언트 메모리 사용량은 매우 큰 받아볼, 성능 저하를 발생할 대체로 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes in the <ph id="ph1">&lt;xref:System.Net.Http&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Http.Headers&gt;</ph> namespaces can be used to develop Windows Store apps or desktop apps.</source>
          <target state="translated">에 있는 클래스는 <ph id="ph1">&lt;xref:System.Net.Http&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Http.Headers&gt;</ph> 네임 스페이스는 Windows 스토어 앱 이나 데스크톱 앱을 개발 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>When used in a Windows Store app, classes in the <ph id="ph1">&lt;xref:System.Net.Http&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Http.Headers&gt;</ph> namespaces are affected by network isolation feature, part of the application security model used by the <ph id="ph3">[!INCLUDE[win8](~/includes/win8-md.md)]</ph>.</source>
          <target state="translated">사용 되는 Windows 스토어 앱에 사용 하면, 클래스는 <ph id="ph1">&lt;xref:System.Net.Http&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Http.Headers&gt;</ph> 네임 스페이스에서 사용 하는 응용 프로그램 보안 모델의 일부 네트워크 격리 기능에 의해 영향을 받는 <ph id="ph3">[!INCLUDE[win8](~/includes/win8-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The appropriate network capabilities must be enabled in the app manifest for a Windows Store app for the system to allow network access by a Windows store app.</source>
          <target state="translated">Windows 스토어 앱에서 네트워크 액세스를 허용 하도록 시스템에 대 한 Windows 스토어 앱에 대 한 응용 프로그램 매니페스트에서 적절 한 네트워크 기능을 활성화 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <bpt id="p1">[</bpt>Network Isolation for Windows Store Apps<ept id="p1">](~/docs/framework/network-programming/network-isolation-for-windows-store-apps.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Windows 스토어 앱에 대한 네트워크 격리<ept id="p1">](~/docs/framework/network-programming/network-isolation-for-windows-store-apps.md)</ept>를 참조하세요.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>