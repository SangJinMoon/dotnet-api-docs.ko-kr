<Namespace Name="System.Net.Http">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2117b45807e03a0cb71286977f2d8b3cddbfe4c1" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30734917" />
  </Metadata>
  <Docs>
    <summary>
      <see cref="N:System.Net.Http" /> 네임스페이스는 최신 HTTP 응용 프로그램의 프로그래밍 인터페이스를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Http> 네임 스페이스는 다음을 제공 하도록 설계 되었습니다.  
  
1.  HTTP 클라이언트 구성 요소 사용자가 HTTP를 통해 최신 웹 서비스를 사용할 수 있도록 합니다.  
  
2.  사용할 수 있는 HTTP 구성 요소에서 클라이언트와 서버 (HTTP 헤더 및 예를 들어 메시지). 이로써 일관 된 프로그래밍 모델은 클라이언트와 서버 쪽에 최신 웹 서비스에 대 한 HTTP를 통해 됩니다.  
  
 <xref:System.Net.Http> 네임 스페이스 및 관련 <xref:System.Net.Http.Headers> 네임 스페이스는 다음과 같은 구성 요소 집합을 제공 합니다.  
  
1.  <xref:System.Net.Http.HttpClient> -보내고 HTTP를 통해 요청을 수신 하는 데 사용 되는 기본 클래스입니다.  
  
2.  <xref:System.Net.Http.HttpRequestMessage> 및 <xref:System.Net.Http.HttpResponseMessage> -HTTP ietf RFC 2616에 정의 된 메시지입니다.  
  
3.  <xref:System.Net.Http.Headers.HttpHeaders> -Ietf RFC 2616에 정의 된 대로 HTTP 헤더입니다.  
  
4.  <xref:System.Net.Http.HttpClientHandler> HTTP 처리기를 HTTP 응답 메시지를 생성 합니다.  
  
 사용할 수 있는 다양 한 HTTP 메시지 핸들이 있습니다. 이 다음과 같습니다.  
  
1.  <xref:System.Net.Http.DelegatingHandler> -클래스에는 처리기 처리기 체인에 연결 하는 데 사용 합니다.  
  
2.  <xref:System.Net.Http.HttpMessageHandler> -대부분의 응용 프로그램에 대 한 가장 일반적인 요구 사항에서 파생 되도록 클래스에 단순 합니다.  
  
3.  <xref:System.Net.Http.HttpClientHandler> -실제로 HTTP 전송 작업을 처리 하는 처리기 체인의 맨 아래에서 작동 하는 클래스입니다.  
  
4.  <xref:System.Net.Http.WebRequestHandler> -특수 클래스에만 적용 되는 옵션을 사용 하 여 HTTP 전송 작업을 처리 하는 처리기 체인 클래스의 맨 아래에서 작동 하는 <xref:System.Net.HttpWebRequest?displayProperty=nameWithType> 개체입니다.  
  
 RFC 2616에 정의 된 엔터티 본문에는 HTTP 메시지의 내용을 해당 합니다.  
  
 HTTP 콘텐츠를 다양 한 클래스를 사용할 수 있습니다. 이 다음과 같습니다.  
  
1.  <xref:System.Net.Http.ByteArrayContent> -에 따라 HTTP 콘텐츠는 바이트 배열입니다.  
  
2.  <xref:System.Net.Http.FormUrlEncodedContent> 이름/값 튜플의의 HTTP 콘텐츠 응용 프로그램/x-www-형식-urlencoded MIME 형식을 사용 하 여 인코딩됩니다.  
  
3.  <xref:System.Net.Http.MultipartContent> Serialize 되는 다중을 사용 하 여 HTTP 콘텐츠 / * 콘텐츠 형식 사양을 합니다.  
  
4.  <xref:System.Net.Http.MultipartFormDataContent> HTTP 콘텐츠 multipart/form-data MIME 형식을 사용 하 여 인코딩됩니다.  
  
5.  <xref:System.Net.Http.StreamContent> HTTP 콘텐츠 스트림을 기반으로 합니다.  
  
6.  <xref:System.Net.Http.StringContent> -에 따라 HTTP 콘텐츠는 문자열입니다.  
  
 응용 프로그램 사용 하는 경우는 <xref:System.Net.Http> 및 <xref:System.Net.Http.Headers> 네임 스페이스에서 많은 양의 데이터 (50mb 이상)을 다운로드 하려는 다음 앱이 다운로드 스트림를 기본 버퍼링을 사용 하지 합니다. 기본 버퍼링을 사용 하는 경우 클라이언트 메모리 사용량은 매우 큰 받아볼, 성능 저하를 발생할 대체로 합니다.  
  
 에 있는 클래스는 <xref:System.Net.Http> 및 <xref:System.Net.Http.Headers> 네임 스페이스는 Windows 스토어 앱 이나 데스크톱 앱을 개발 데 사용할 수 있습니다. 사용 되는 Windows 스토어 앱에 사용 하면, 클래스는 <xref:System.Net.Http> 및 <xref:System.Net.Http.Headers> 네임 스페이스에서 사용 하는 응용 프로그램 보안 모델의 일부 네트워크 격리 기능에 의해 영향을 받는 [!INCLUDE[win8](~/includes/win8-md.md)]합니다. Windows 스토어 앱에서 네트워크 액세스를 허용 하도록 시스템에 대 한 Windows 스토어 앱에 대 한 응용 프로그램 매니페스트에서 적절 한 네트워크 기능을 활성화 되어야 합니다. 자세한 내용은 [Windows 스토어 앱에 대한 네트워크 격리](~/docs/framework/network-programming/network-isolation-for-windows-store-apps.md)를 참조하세요.  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Net.Http.Headers" />
  </Docs>
</Namespace>