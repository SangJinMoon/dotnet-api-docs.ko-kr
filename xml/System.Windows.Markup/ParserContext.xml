<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ParserContext.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57c90593ce26ca53950dd22253ca32d173f5e6c75.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c90593ce26ca53950dd22253ca32d173f5e6c75</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.ParserContext">
          <source>Provides context information required by a XAML parser.</source>
          <target state="translated">XAML 파서에 필요한 컨텍스트 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ParserContext">
          <source>The XAML parser that this context refers to is the <ph id="ph1">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> era XAML parser API that is specific to the WPF implementation, as exposed in <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 컨텍스트를 참조 하는 XAML 파서가 <ph id="ph1">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> 연대에 노출 된 WPF 구현에만 적용 되는 XAML 파서에서 API <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ParserContext">
          <source>The XAML system in <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> uses a more sophisticated XAML type system and thus also uses a different type of context for XAML processing operations.</source>
          <target state="translated">XAML 시스템에서 <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 보다 정교한 XAML 형식 시스템을 사용 하며 따라서 사용 하 여 다른 종류의 상황에 맞는 XAML 처리 작업에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ParserContext">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ParserContext">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Markup.ParserContext&gt;</ph> is typically used as an input for a call to a <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader&gt;</ph> operation.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Markup.ParserContext&gt;</ph> 에 대 한 호출에 대 한 일반적으로 한 입력으로 사용 된 <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ParserContext">
          <source>In these cases, you are using overloads of <ph id="ph1">&lt;xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader.LoadAsync%2A?displayProperty=nameWithType&gt;</ph> where supplying the  <ph id="ph3">&lt;xref:System.Windows.Markup.ParserContext&gt;</ph> provides greater control over factors such as the type mapping to XAML, or altering XML processing defaults.</source>
          <target state="translated">이러한 경우의 오버 로드를 사용 하는 <ph id="ph1">&lt;xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader.LoadAsync%2A?displayProperty=nameWithType&gt;</ph> 제공 하는 경우는 <ph id="ph3">&lt;xref:System.Windows.Markup.ParserContext&gt;</ph> XAML을 매핑 또는 기본값 처리 하는 XML 변경 형식 등의 요인에 대 한 제어 강화를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ParserContext">
          <source>Using a <ph id="ph1">&lt;xref:System.Windows.Markup.ParserContext&gt;</ph> as opposed to using <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph> default behavior is an advanced scenario.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Windows.Markup.ParserContext&gt;</ph> 사용 하지 않고 <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph> 기본 동작은 고급 시나리오에 해당 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ParserContext">
          <source><ph id="ph1">`xml:lang`</ph> and <ph id="ph2">`xml:space`</ph> behavior is one of the aspects of a context you can override.</source>
          <target state="translated"><ph id="ph1">`xml:lang`</ph> 및 <ph id="ph2">`xml:space`</ph> 동작을 재정의할 수 있습니다 컨텍스트의 측면 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ParserContext">
          <source>By default, the parser context uses <ph id="ph1">`en-us`</ph> based values.</source>
          <target state="translated">파서 컨텍스트 기본적으로 사용 하 여 <ph id="ph1">`en-us`</ph> 값을 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ParserContext">
          <source>For more information on why the language-level context for XAML uses <ph id="ph1">`en-us`</ph> rather than a culture-invariant value, see <bpt id="p1">[</bpt>WPF Globalization and Localization Overview<ept id="p1">](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md)</ept>.</source>
          <target state="translated">XAML에 대 한 언어 수준 컨텍스트 이유에 대 한 자세한 내용은 사용 하 여 <ph id="ph1">`en-us`</ph> 고정 문화권 값이 아닌 참조 <bpt id="p1">[</bpt>WPF 전역화 및 지역화 개요<ept id="p1">](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.ParserContext">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.ParserContext" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.ParserContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.ParserContext.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.ParserContext" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.ParserContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.ParserContext.#ctor(System.Xml.XmlParserContext)">
          <source>The XML processing context to base the new <ph id="ph1">&lt;see cref="T:System.Windows.Markup.ParserContext" /&gt;</ph> on.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.ParserContext" /&gt;</ph>의 기반이 되는 XML 처리 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.ParserContext.#ctor(System.Xml.XmlParserContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.ParserContext" /&gt;</ph> class by using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.ParserContext" /&gt;</ph>을 사용하여 <ph id="ph2">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.ParserContext.#ctor(System.Xml.XmlParserContext)">
          <source><ph id="ph1">&lt;paramref name="xmlParserContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlParserContext" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.ParserContext.BaseUri">
          <source>Gets or sets the base URI for this context.</source>
          <target state="translated">이 컨텍스트의 기본 URI를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.ParserContext.BaseUri">
          <source>The base URI, as a string.</source>
          <target state="translated">문자열인 기본 URI입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.ParserContext.BaseUri">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.ParserContext.BaseUri%2A&gt;</ph> is used to resolve external resources that are referenced in XAML.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.ParserContext.BaseUri%2A&gt;</ph> XAML에서 참조 되는 외부 리소스를 확인 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.ParserContext.op_Implicit(System.Windows.Markup.ParserContext)~System.Xml.XmlParserContext">
          <source>The XAML parser context to convert to an <ph id="ph1">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph>로 변환할 XAML 파서 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.ParserContext.op_Implicit(System.Windows.Markup.ParserContext)~System.Xml.XmlParserContext">
          <source>Converts a XAML <ph id="ph1">&lt;see cref="T:System.Windows.Markup.ParserContext" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph>.</source>
          <target state="translated">XAML <ph id="ph1">&lt;see cref="T:System.Windows.Markup.ParserContext" /&gt;</ph>를 <ph id="ph2">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.ParserContext.op_Implicit(System.Windows.Markup.ParserContext)~System.Xml.XmlParserContext">
          <source>The converted XML parser context.</source>
          <target state="translated">변환된 XML 파서 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.ParserContext.op_Implicit(System.Windows.Markup.ParserContext)~System.Xml.XmlParserContext">
          <source><ph id="ph1">&lt;paramref name="parserContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parserContext" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.ParserContext.ToXmlParserContext(System.Windows.Markup.ParserContext)">
          <source>The context to convert to an <ph id="ph1">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph>로 변환할 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.ParserContext.ToXmlParserContext(System.Windows.Markup.ParserContext)">
          <source>Converts an <ph id="ph1">&lt;see cref="T:System.Windows.Markup.ParserContext" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.ParserContext" /&gt;</ph>을 <ph id="ph2">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.ParserContext.ToXmlParserContext(System.Windows.Markup.ParserContext)">
          <source>The XML parser context.</source>
          <target state="translated">XML 파서 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.ParserContext.ToXmlParserContext(System.Windows.Markup.ParserContext)">
          <source><ph id="ph1">&lt;paramref name="parserContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parserContext" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.ParserContext.XamlTypeMapper">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> to use with this <ph id="ph2">&lt;see cref="T:System.Windows.Markup.ParserContext" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph>에 사용할 <ph id="ph2">&lt;see cref="T:System.Windows.Markup.ParserContext" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.ParserContext.XamlTypeMapper">
          <source>The type mapper to use when mapping XAML elements to CLR types.</source>
          <target state="translated">XAML 요소를 CLR 형식에 매핑할 때 사용할 형식 매퍼입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.ParserContext.XmlLang">
          <source>Gets or sets the <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> string for this context.</source>
          <target state="translated">이 컨텍스트의 <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.ParserContext.XmlLang">
          <source>The <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> string value.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> 문자열 값입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.ParserContext.XmlLang">
          <source>This property is analogous to <ph id="ph1">&lt;xref:System.Xml.XmlReader.XmlLang%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 속성은 <ph id="ph1">&lt;xref:System.Xml.XmlReader.XmlLang%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.ParserContext.XmlnsDictionary">
          <source>Gets the XAML namespace dictionary for this XAML parser context.</source>
          <target state="translated">이 XAML 파서 컨텍스트의 XAML 네임스페이스 사전을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.ParserContext.XmlnsDictionary">
          <source>The XAML namespace dictionary.</source>
          <target state="translated">XAML 네임스페이스 사전입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.ParserContext.XmlnsDictionary">
          <source>The default dictionary is an initially empty <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsDictionary&gt;</ph>.</source>
          <target state="translated">기본 사전이 처음 비어 <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsDictionary&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.ParserContext.XmlnsDictionary">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsDictionary&gt;</ph> uses XAML namespace prefixes as keys and the complete XAML namespace identifier (typically a URI in string form) as values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsDictionary&gt;</ph> 값으로 키와 전체 XAML 네임 스페이스 식별자 (일반적으로 문자열 형식의 URI)로 XAML 네임 스페이스 접두사를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.ParserContext.XmlSpace">
          <source>Gets or sets the character for <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> or this context.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> 또는 이 컨텍스트의 문자를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.ParserContext.XmlSpace">
          <source>The character for <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> or this context.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> 또는 이 컨텍스트의 문자입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.ParserContext.XmlSpace">
          <source>This property is analogous to <ph id="ph1">&lt;xref:System.Xml.XmlReader.XmlSpace%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 속성은 <ph id="ph1">&lt;xref:System.Xml.XmlReader.XmlSpace%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>