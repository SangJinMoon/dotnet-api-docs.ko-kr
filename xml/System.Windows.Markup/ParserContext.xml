<Type Name="ParserContext" FullName="System.Windows.Markup.ParserContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c90593ce26ca53950dd22253ca32d173f5e6c75" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30657547" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ParserContext : System.Windows.Markup.IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParserContext extends System.Object implements class System.Windows.Markup.IUriContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ParserContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ParserContext&#xA;Implements IUriContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParserContext : System::Windows::Markup::IUriContext" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IUriContext</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>XAML 파서에 필요한 컨텍스트 정보를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 컨텍스트를 참조 하는 XAML 파서가 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 연대에 노출 된 WPF 구현에만 적용 되는 XAML 파서에서 API <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> 및 <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType>합니다.  
  
 XAML 시스템에서 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 보다 정교한 XAML 형식 시스템을 사용 하며 따라서 사용 하 여 다른 종류의 상황에 맞는 XAML 처리 작업에 대 한 합니다. 자세한 내용은 <xref:System.Xaml.XamlSchemaContext>을 참조하세요.  
  
 A <xref:System.Windows.Markup.ParserContext> 에 대 한 호출에 대 한 일반적으로 한 입력으로 사용 된 <xref:System.Windows.Markup.XamlReader> 작업 합니다. 이러한 경우의 오버 로드를 사용 하는 <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType> 또는 <xref:System.Windows.Markup.XamlReader.LoadAsync%2A?displayProperty=nameWithType> 제공 하는 경우는 <xref:System.Windows.Markup.ParserContext> XAML을 매핑 또는 기본값 처리 하는 XML 변경 형식 등의 요인에 대 한 제어 강화를 제공 합니다. 사용 하는 <xref:System.Windows.Markup.ParserContext> 사용 하지 않고 <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> 기본 동작은 고급 시나리오에 해당 합니다.  
  
 `xml:lang` 및 `xml:space` 동작을 재정의할 수 있습니다 컨텍스트의 측면 중 하나입니다. 파서 컨텍스트 기본적으로 사용 하 여 `en-us` 값을 기반으로 합니다. XAML에 대 한 언어 수준 컨텍스트 이유에 대 한 자세한 내용은 사용 하 여 `en-us` 고정 문화권 값이 아닌 참조 [WPF 전역화 및 지역화 개요](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md)합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.XamlReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Markup.ParserContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParserContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ParserContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParserContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Markup.ParserContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParserContext (System.Xml.XmlParserContext xmlParserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlParserContext xmlParserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ParserContext.#ctor(System.Xml.XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParserContext(System::Xml::XmlParserContext ^ xmlParserContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlParserContext" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlParserContext">새 <see cref="T:System.Windows.Markup.ParserContext" />의 기반이 되는 XML 처리 컨텍스트입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Markup.ParserContext" />을 사용하여 <see cref="T:System.Xml.XmlParserContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlParserContext" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ParserContext.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IUriContext.BaseUri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 컨텍스트의 기본 URI를 가져오거나 설정합니다.</summary>
        <value>문자열인 기본 URI입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.ParserContext.BaseUri%2A> XAML에서 참조 되는 외부 리소스를 확인 하는 데 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlParserContext.BaseURI" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Xml.XmlParserContext (System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Xml.XmlParserContext op_Implicit(class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ParserContext.op_Implicit(System.Windows.Markup.ParserContext)~System.Xml.XmlParserContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Xml::XmlParserContext ^(System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlParserContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="parserContext">
          <see cref="T:System.Xml.XmlParserContext" />로 변환할 XAML 파서 컨텍스트입니다.</param>
        <summary>XAML <see cref="T:System.Windows.Markup.ParserContext" />를 <see cref="T:System.Xml.XmlParserContext" />로 변환합니다.</summary>
        <returns>변환된 XML 파서 컨텍스트입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parserContext" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ToXmlParserContext">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlParserContext ToXmlParserContext (System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlParserContext ToXmlParserContext(class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ParserContext.ToXmlParserContext(System.Windows.Markup.ParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlParserContext ^ ToXmlParserContext(System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlParserContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="parserContext">
          <see cref="T:System.Xml.XmlParserContext" />로 변환할 컨텍스트입니다.</param>
        <summary>
          <see cref="T:System.Windows.Markup.ParserContext" />을 <see cref="T:System.Xml.XmlParserContext" />로 변환합니다.</summary>
        <returns>XML 파서 컨텍스트입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parserContext" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="XamlTypeMapper">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.XamlTypeMapper XamlTypeMapper { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.XamlTypeMapper XamlTypeMapper" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ParserContext.XamlTypeMapper" />
      <MemberSignature Language="VB.NET" Value="Public Property XamlTypeMapper As XamlTypeMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::XamlTypeMapper ^ XamlTypeMapper { System::Windows::Markup::XamlTypeMapper ^ get(); void set(System::Windows::Markup::XamlTypeMapper ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XamlTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Markup.XamlTypeMapper" />에 사용할 <see cref="T:System.Windows.Markup.ParserContext" />를 가져오거나 설정합니다.</summary>
        <value>XAML 요소를 CLR 형식에 매핑할 때 사용할 형식 매퍼입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.XamlTypeMapper" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public string XmlLang { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ParserContext.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlLang { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 컨텍스트의 <see langword="xml:lang" /> 문자열을 가져오거나 설정합니다.</summary>
        <value>
          <see langword="xml:lang" /> 문자열 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 <xref:System.Xml.XmlReader.XmlLang%2A?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XmlLanguage" />
        <altmember cref="T:System.Windows.Markup.XmlLangPropertyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="XmlnsDictionary">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.XmlnsDictionary XmlnsDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.XmlnsDictionary XmlnsDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ParserContext.XmlnsDictionary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlnsDictionary As XmlnsDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::XmlnsDictionary ^ XmlnsDictionary { System::Windows::Markup::XmlnsDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlnsDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 XAML 파서 컨텍스트의 XAML 네임스페이스 사전을 가져옵니다.</summary>
        <value>XAML 네임스페이스 사전입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 사전이 처음 비어 <xref:System.Windows.Markup.XmlnsDictionary>합니다.  
  
 <xref:System.Windows.Markup.XmlnsDictionary> 값으로 키와 전체 XAML 네임 스페이스 식별자 (일반적으로 문자열 형식의 URI)로 XAML 네임 스페이스 접두사를 사용 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XmlnsDictionary" />
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public string XmlSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ParserContext.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSpace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSpace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see langword="xml:space" /> 또는 이 컨텍스트의 문자를 가져오거나 설정합니다.</summary>
        <value>
          <see langword="xml:space" /> 또는 이 컨텍스트의 문자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 <xref:System.Xml.XmlReader.XmlSpace%2A?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>