<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Reference.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ee5e70576b28cba90a50b94825a15eca9d9d41ad.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee5e70576b28cba90a50b94825a15eca9d9d41ad</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.Reference">
          <source>Implements the <bpt id="p1">&lt;c&gt;</bpt>{x:Reference}<ept id="p1">&lt;/c&gt;</ept> markup extension.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>{x:Reference}<ept id="p1">&lt;/c&gt;</ept> 태그 확장명을 구현합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.Reference">
          <source>The <ph id="ph1">`{x:Reference}`</ph> markup extension supports a positional usage (there is only one parameter) and a named argument usage (with the named argument <ph id="ph2">`name`</ph>).</source>
          <target state="translated"><ph id="ph1">`{x:Reference}`</ph> 태그 확장 지원 (에 하나의 매개 변수만) 위치 사용 및 명명 된 인수 사용 (명명 된 인수와 함께 <ph id="ph2">`name`</ph>).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.Reference">
          <source>The <ph id="ph1">`{x:Reference}`</ph> markup extension is used to reference another named object in the object graph.</source>
          <target state="translated"><ph id="ph1">`{x:Reference}`</ph> 태그 확장은 개체 그래프에 다른 명명 된 개체를 참조 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.Reference">
          <source>Objects in this scenario are initially named by , although specific implementations often define a different <ph id="ph1">&lt;xref:System.Windows.Markup.RuntimeNamePropertyAttribute&gt;</ph>.</source>
          <target state="translated">이 시나리오에서는 개체 by 이름 처음 특정 구현이 종종 다른 정의 하지만 <ph id="ph1">&lt;xref:System.Windows.Markup.RuntimeNamePropertyAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.Reference">
          <source>For more information, see <bpt id="p1">[</bpt>x:Reference Markup Extension<ept id="p1">](~/docs/framework/xaml-services/x-reference-markup-extension.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>X:reference 태그 확장<ept id="p1">](~/docs/framework/xaml-services/x-reference-markup-extension.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.Reference">
          <source>For more information about markup extensions, see <bpt id="p1">[</bpt>Type Converters and Markup Extensions for XAML<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept>.</source>
          <target state="translated">태그 확장에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 변환기 및 XAML 태그 확장명<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.Reference">
          <source>The System.Xaml assembly uses <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</ph> to map all types in the assembly to the XAML namespace for the XAML language (<ph id="ph2">[!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)]</ph>).</source>
          <target state="translated">System.Xaml 어셈블리 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</ph> XAML 언어 XAML 네임 스페이스에는 어셈블리의 모든 형식에 매핑할 (<ph id="ph2">[!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)]</ph>).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.Reference">
          <source>Typically you declare a prefix for <ph id="ph1">[!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)]</ph> in a root element mapping and use the prefix <ph id="ph2">`x`</ph>.</source>
          <target state="translated">에 대 한 접두사를 선언 하는 일반적으로 <ph id="ph1">[!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)]</ph> 루트 요소 매핑을 사용 하 여 접두사 <ph id="ph2">`x`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.Reference">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Reference" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.Reference" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.Reference.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Reference" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.Reference" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.Reference.#ctor(System.String)">
          <source>The XAML name of the element to reference.</source>
          <target state="translated">참조할 요소의 XAML 이름입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.Reference.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Reference" /&gt;</ph> class with the <ph id="ph2">&lt;paramref name="name" /&gt;</ph> argument.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="name" /&gt;</ph> 인수를 사용하여 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Reference" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.Reference.Name">
          <source>Gets or sets the XAML name to obtain the reference for.</source>
          <target state="translated">참조를 가져올 XAML 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Reference.Name">
          <source>The XAML name of the element to obtain the reference for.</source>
          <target state="translated">참조를 가져올 요소의 XAML 이름입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
          <source>A class that implements the <ph id="ph1">&lt;see cref="T:System.Xaml.IXamlNameResolver" /&gt;</ph> service.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.IXamlNameResolver" /&gt;</ph> 서비스를 구현하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
          <source>Returns an object that is the value of the target property.</source>
          <target state="translated">대상 속성의 값인 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
          <source>For the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Reference" /&gt;</ph> type, this is the object that the provided <ph id="ph2">&lt;see cref="P:System.Windows.Markup.Reference.Name" /&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.Reference" /&gt;</ph> 형식의 경우 이것은 제공된 <ph id="ph2">&lt;see cref="P:System.Windows.Markup.Reference.Name" /&gt;</ph>이 참조하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
          <source>The value of the target property.</source>
          <target state="translated">대상 속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
          <source>This is potentially any object that is type-mapped in the relevant backing assemblies.</source>
          <target state="translated">이것은 관련 백업 어셈블리에서 형식 매핑된 개체일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
          <source>This method expects a <ph id="ph1">`serviceProvider`</ph> value that implements the <ph id="ph2">&lt;xref:System.Xaml.IXamlNameResolver&gt;</ph> service.</source>
          <target state="translated">이 메서드에서 예상는 <ph id="ph1">`serviceProvider`</ph> 구현 하는 값은 <ph id="ph2">&lt;xref:System.Xaml.IXamlNameResolver&gt;</ph> 서비스입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;paramref name="serviceProvider" /&gt;</ph> value does not implement the <ph id="ph2">&lt;see cref="T:System.Xaml.IXamlNameResolver" /&gt;</ph> service.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceProvider" /&gt;</ph> 값이 <ph id="ph2">&lt;see cref="T:System.Xaml.IXamlNameResolver" /&gt;</ph> 서비스를 구현하지 않는 경우</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Markup.Reference.Name" /&gt;</ph> value has not been set through construction or positional usage.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Markup.Reference.Name" /&gt;</ph> 값이 생성 또는 위치 사용을 통해 설정되지 않은 경우</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;paramref name="serviceProvider" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceProvider" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>