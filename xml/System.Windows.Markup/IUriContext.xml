<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IUriContext.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59bd5c36558ea71491b9c7680d60163b65cbb0718.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9bd5c36558ea71491b9c7680d60163b65cbb0718</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.IUriContext">
          <source>Represents a service that can use application context to resolve a provided relative URI to an absolute URI.</source>
          <target state="translated">절대 URI에 대해 제공된 상대 URI를 확인하기 위해 응용 프로그램 컨텍스트를 사용할 수 있는 서비스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IUriContext">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> implemented as a service enables type converters to use an application-specific context that might be able to complete a URI-type property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> 서비스 URI 형식 속성을 완료할 수 수 있는 응용 프로그램 관련 컨텍스트를 사용 하는 형식 변환기를 사용 하는 대로 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IUriContext">
          <source>Type converters and markup extensions can query for <ph id="ph1">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</source>
          <target state="translated">형식 변환기 및 태그 확장에 대해 쿼리할 수 <ph id="ph1">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> XAML 개체 작성기 값 변환 동작을 호출 하는 경우 XAML 개체 작성기에서 제공 하는 서비스 컨텍스트에 서비스로 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IUriContext">
          <source>For more information, see <bpt id="p1">[</bpt>Type Converters and Markup Extensions for XAML<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept> and <bpt id="p2">[</bpt>Service Contexts Available to Type Converters and Markup Extensions<ept id="p2">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>형식 변환기 및 XAML 태그 확장명<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept> 및 <bpt id="p2">[</bpt>형식 변환기 또는 태그 확장 서비스 컨텍스트에 사용할 수 있는<ept id="p2">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IUriContext">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> is not just for value conversion and service context.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> 값 변환 및 서비스 컨텍스트에 데 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IUriContext">
          <source>Class logic for UI elements or other classes that support containment might also implement <ph id="ph1">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> services as a recognized pattern that child elements can call for base URI information, or store base URI information that is obtained from XAML parsing of the root element.</source>
          <target state="translated">UI 요소 또는 포함을 지 원하는 다른 클래스에 대 한 클래스 논리 구현할 수도 <ph id="ph1">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> 자식 요소 또는 기본 URI 정보에 대 한 호출 수를 저장 하는 인식된 된 패턴으로는 서비스 기본 URI 정보 XAML에서 가져온를 구문 분석 하는 루트 요소입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IUriContext">
          <source>In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly PresentationCore.</source>
          <target state="translated">.NET Framework의 이전 버전에서는이 인터페이스는 WPF 관련 PresentationCore 어셈블리에 존재합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IUriContext">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> is in the System.Xaml assembly.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> System.Xaml 어셈블리에 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IUriContext">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>WPF에서 System.Xaml로 마이그레이션된 형식<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IUriContext">
          <source>WPF Usage Notes</source>
          <target state="translated">WPF 사용 정보</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IUriContext">
          <source>Example scenarios for <ph id="ph1">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> exist in WPF.</source>
          <target state="translated">에 대 한 예제 시나리오 <ph id="ph1">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> WPF에 존재 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IUriContext">
          <source>As an example of a value converter, the <ph id="ph1">&lt;xref:System.Windows.Media.FontFamilyConverter&gt;</ph> class can use a relative URI that is provided for properties such as <ph id="ph2">&lt;xref:System.Windows.Controls.Page.FontFamily%2A?displayProperty=nameWithType&gt;</ph>, if <ph id="ph3">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> is available as a service on the <ph id="ph4">&lt;xref:System.ComponentModel.ITypeDescriptorContext&gt;</ph> input.</source>
          <target state="translated">값 변환기의 예로 <ph id="ph1">&lt;xref:System.Windows.Media.FontFamilyConverter&gt;</ph> 클래스와 같은 속성에 대해 제공 되는 상대 URI를 사용할 수 <ph id="ph2">&lt;xref:System.Windows.Controls.Page.FontFamily%2A?displayProperty=nameWithType&gt;</ph>경우 <ph id="ph3">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> 은 서비스에서 사용할 수는 <ph id="ph4">&lt;xref:System.ComponentModel.ITypeDescriptorContext&gt;</ph> 입력 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IUriContext">
          <source>As an example of the element case, <ph id="ph1">&lt;xref:System.Windows.Documents.Hyperlink&gt;</ph> implements <ph id="ph2">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> so that it can pass through base URI values when parsed, which then modifies <ph id="ph3">&lt;xref:System.Windows.Documents.Hyperlink.NavigateUri%2A&gt;</ph>.</source>
          <target state="translated">요소의 경우의 예를 들어 <ph id="ph1">&lt;xref:System.Windows.Documents.Hyperlink&gt;</ph> 구현 <ph id="ph2">&lt;xref:System.Windows.Markup.IUriContext&gt;</ph> 구문 분석할 때 기본 URI 값을 통해 전달할 수 있도록 다음 수정 <ph id="ph3">&lt;xref:System.Windows.Documents.Hyperlink.NavigateUri%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.IUriContext.BaseUri">
          <source>Gets or sets the base URI of the current application context.</source>
          <target state="translated">현재 응용 프로그램 컨텍스트의 기본 URI를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IUriContext.BaseUri">
          <source>The base URI of the application context.</source>
          <target state="translated">응용 프로그램 컨텍스트의 기본 URI입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>