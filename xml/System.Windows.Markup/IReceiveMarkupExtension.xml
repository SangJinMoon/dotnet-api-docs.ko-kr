<Type Name="IReceiveMarkupExtension" FullName="System.Windows.Markup.IReceiveMarkupExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d590f413cad5fd1e1bf753c645edf4ec35b2826" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30655397" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IReceiveMarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReceiveMarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IReceiveMarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReceiveMarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReceiveMarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("IReceiveMarkupExtension has been deprecated. This interface is no longer in use.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d00ea-101">출력이 대상 속성과 다른 속성 유형인 태그 확장에서 식 또는 다른 클래스를 받을 수 있는 형식을 선언하는 데 사용하는 메커니즘을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d00ea-101">Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property.</span>
      </span>
      <span data-ttu-id="d00ea-102">.NET Framework 4 구현에 사용하지 마십시오.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d00ea-102">Do not use for .NET Framework 4 implementations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d00ea-103">[!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)], <xref:System.Windows.Markup.IReceiveMarkupExtension> 때마다 XAML 구문 분석 하는 동안 ו 태그 확장으로 XAML에 액세스할 수 있는 멤버가 서로 다른 코드를 입력 하는 형식을 허용 하는 WPF 관련 기술 했습니다.</span><span class="sxs-lookup"><span data-stu-id="d00ea-103">In [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)], <xref:System.Windows.Markup.IReceiveMarkupExtension> was a WPF-specific technique for permitting types to enter a different codepath whenever any of its XAML-accessible members where set as markup extensions during XAML parsing.</span></span> <span data-ttu-id="d00ea-104">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)],이 인터페이스는 더 이상 태그 확장 서비스를 받을 수는 방법에 대 한.NET Framework XAML 서비스 구현으로 대체 또는 형식 태그 확장 setter 특정 논리를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d00ea-104">In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], this interface is obsolete, and is replaced with a .NET Framework XAML Services implementation for how markup extensions can receive services or types can invoke markup-extension specific setter logic.</span></span>  
  
 <span data-ttu-id="d00ea-105">에 대 한 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 구현에서는 형식에서 다른 방법으로 아니라 태그 확장으로 속성을 설정할 때 특수 한 처리를 수행 하려면 유형을로 정의 되어야 합니다 <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> 적용 된 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="d00ea-105">For [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] implementations, if types want to perform special processing when setting properties by markup extension rather than by other means, types should be defined with <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> attributes applied.</span></span> <span data-ttu-id="d00ea-106">특성은 일반적으로 형식의 private 멤버로 정의 하는 콜백을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d00ea-106">The attribute specifies a callback, which is typically defined as a private member of the type.</span></span>  
  
 <span data-ttu-id="d00ea-107">WPF 클래스의 인프라 구현에서는 대부분의 경우 <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> 는 참조를 적용 한 `ReceiveMarkupExtension` 이전에이 인터페이스를 구현한 하지만 이제 대신 메서드는 콜백을 통해 컨텍스트를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="d00ea-107">In infrastructure implementations of WPF classes, most cases where <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> is applied reference a `ReceiveMarkupExtension` method that previously implemented this interface, but now instead use context through the callback.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
    <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
  </Docs>
  <Members>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public void ReceiveMarkupExtension (string property, System.Windows.Markup.MarkupExtension markupExtension, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceiveMarkupExtension(string property, class System.Windows.Markup.MarkupExtension markupExtension, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReceiveMarkupExtension(System::String ^ property, System::Windows::Markup::MarkupExtension ^ markupExtension, IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
        <Parameter Name="markupExtension" Type="System.Windows.Markup.MarkupExtension" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="d00ea-108">대상 속성의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d00ea-108">The name of the target property.</span>
          </span>
        </param>
        <param name="markupExtension">
          <span data-ttu-id="d00ea-109">들어오는 데이터의 태그 확장 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d00ea-109">The markup extension instance of the incoming data.</span>
          </span>
        </param>
        <param name="serviceProvider">
          <span data-ttu-id="d00ea-110">속성 값에 대한 태그 확장 데이터를 처리할 때 수행해야 하는 추가 서비스를 제공할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d00ea-110">Can provide additional services that should be performed when processing the markup extension data for a property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d00ea-111">속성 값을 제공하는 태그 확장에 대한 처리를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d00ea-111">Provides the handling for markup extensions that provide property values.</span>
          </span>
          <span data-ttu-id="d00ea-112">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 구현에는 사용하지 마십시오. <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />을 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d00ea-112">Do not use for [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementations; see <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>