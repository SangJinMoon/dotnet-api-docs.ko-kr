<Type Name="DesignerSerializationOptionsAttribute" FullName="System.Windows.Markup.DesignerSerializationOptionsAttribute">
  <TypeSignature Language="C#" Value="public sealed class DesignerSerializationOptionsAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DesignerSerializationOptionsAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.DesignerSerializationOptionsAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DesignerSerializationOptionsAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerSerializationOptionsAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="920bf-101">특성의 serialization 플래그를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="920bf-101">Specifies the serialization flags for a property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="920bf-102"><xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> 디자이너 및 디자인 화면이 특성이 지정 된 속성이와 상호 작용할 때 사용 해야 하는 폼에 대 한 제약 조건에 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="920bf-102"><xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> provides a constraint hint for the form that designers and design surfaces should use when interacting with the attributed property.</span></span> <span data-ttu-id="920bf-103">이렇게 하면에 대 한 이유를 따라서는 일반적으로 힌트 <xref:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="920bf-103">Generally the reason for doing so is to hint <xref:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute>.</span></span> <span data-ttu-id="920bf-104">의사 공백을의 위험에 문자열의 내용을 직렬화 된 양식으로 해당 속성과 상호 작용 있는 경우에서 이렇게 할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="920bf-104">You might do this in cases where interacting with that property as a content-serialized form of the string has risk of introducing spurious white space.</span></span> <span data-ttu-id="920bf-105">예제 <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> 이러한 이유 때문에 대 한 적용 <xref:System.Windows.FrameworkElement.Name%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="920bf-105">An example case where <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> is applied for this reason is <xref:System.Windows.FrameworkElement.Name%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="920bf-106">특성 사용에 대 한 <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> 메서드에 할당을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="920bf-106">Attribute usage for <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> supports assigning to a method.</span></span> <span data-ttu-id="920bf-107">XAML에 대 한 직렬화 옵션 연결 속성을 할당 하 여 선언할 수 있습니다이 <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> 에 `Get` 접근자 메서드에 연결 된 속성 사용 패턴을 지 원하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="920bf-107">This enables you to declare serialization options for a XAML attached property, by assigning <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> on the `Get` accessor method that supports the attached property usage pattern.</span></span> <span data-ttu-id="920bf-108">WPF 형식에서 이러한 예는 <xref:System.Windows.Markup.XmlAttributeProperties.XmlSpace%2A> 및 해당 `Get` 접근자 <xref:System.Windows.Markup.XmlAttributeProperties.GetXmlSpace%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="920bf-108">An example of this in the WPF types is <xref:System.Windows.Markup.XmlAttributeProperties.XmlSpace%2A> and its `Get` accessor <xref:System.Windows.Markup.XmlAttributeProperties.GetXmlSpace%2A>.</span></span>  
  
 <span data-ttu-id="920bf-109"><xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> 하지 여부 속성은 serialize 되지 않습니다 원하는 직렬화 형식 힌트입니다.</span><span class="sxs-lookup"><span data-stu-id="920bf-109">Note that <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> hints the desired serialization form, not whether the property is or is not serialized.</span></span> <span data-ttu-id="920bf-110">속성 serialization의 다른 측면에 영향을 하려는 경우 사용할 수 있습니다 <xref:System.ComponentModel.DesignerSerializationVisibilityAttribute>를 구현할 수 또는 `ShouldSerialize` 패턴 소유자 클래스에 메서드.</span><span class="sxs-lookup"><span data-stu-id="920bf-110">If you want to influence other aspects of property serialization, you can use <xref:System.ComponentModel.DesignerSerializationVisibilityAttribute>, or can implement `ShouldSerialize` pattern methods on the owner class.</span></span> <span data-ttu-id="920bf-111">디자인 타임에 대 한 일반.NET serialization 패턴에 자세한 내용은 참조 [디자이너 Serialization 개요](http://msdn.microsoft.com/library/c342635a-aa5f-4281-915b-b013738af15a)합니다.</span><span class="sxs-lookup"><span data-stu-id="920bf-111">For more information on the general .NET serialization patterns for design time, see [Designer Serialization Overview](http://msdn.microsoft.com/library/c342635a-aa5f-4281-915b-b013738af15a).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationOptionsAttribute (System.Windows.Markup.DesignerSerializationOptions designerSerializationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Markup.DesignerSerializationOptions designerSerializationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationOptionsAttribute(System::Windows::Markup::DesignerSerializationOptions designerSerializationOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designerSerializationOptions" Type="System.Windows.Markup.DesignerSerializationOptions" />
      </Parameters>
      <Docs>
        <param name="designerSerializationOptions"><span data-ttu-id="920bf-112">속성이 serialize되는 방법을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="920bf-112">Specifies how the property is to be serialized.</span></span></param>
        <summary><span data-ttu-id="920bf-113"><see cref="T:System.Windows.Markup.DesignerSerializationOptionsAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="920bf-113">Initializes a new instance of the <see cref="T:System.Windows.Markup.DesignerSerializationOptionsAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="920bf-114"><paramref name="designerSerializationOptions" />은 유효한 <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="920bf-114"><paramref name="designerSerializationOptions" /> is not a valid <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DesignerSerializationOptions">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.DesignerSerializationOptions DesignerSerializationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Markup.DesignerSerializationOptions DesignerSerializationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignerSerializationOptions As DesignerSerializationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::DesignerSerializationOptions DesignerSerializationOptions { System::Windows::Markup::DesignerSerializationOptions get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.DesignerSerializationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="920bf-115">특성에 설정된 <see cref="T:System.Windows.Markup.DesignerSerializationOptions" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="920bf-115">Gets the <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> set on the attribute.</span></span></summary>
        <value><span data-ttu-id="920bf-116">serialization 옵션(열거형 값)입니다.</span><span class="sxs-lookup"><span data-stu-id="920bf-116">The serialization option, as a value of the enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="920bf-117">현재 가능한 유일한 값은 <xref:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="920bf-117">Currently the only possible value is <xref:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>