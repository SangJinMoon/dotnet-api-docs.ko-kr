<Type Name="TypeExtension" FullName="System.Windows.Markup.TypeExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61ac1224d62662355e58bc4a47a46fdf9e214201" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30658127" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeExtension : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeExtension extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.TypeExtension" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeExtension&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeExtension : System::Windows::Markup::MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.TypeExtensionConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Type))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>문자열 입력에 따라 <see cref="T:System.Type" />을 반환하는 태그 확장을 구현합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 사용 정보를 참조 [X:type 태그 확장](~/docs/framework/xaml-services/x-type-markup-extension.md)합니다.  
  
> [!NOTE]
>  `{x:Type}` 태그에서 코드 호출 사용자에 대 한 기능은 일반적으로 것입니다. XAML 지원을 구현 하는 코드에 대 한 형식 확인 서비스에서 가져온 <xref:System.Windows.Markup.IXamlTypeResolver> 활성 구현에 상호 관련 되는 XAML 스키마 컨텍스트. 참조 하려고 하지 마십시오 <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> 대신는 <xref:System.Windows.Markup.IXamlTypeResolver> 서비스 공급자에 전달 하는 컨텍스트 형식 확인을 위해 올바르지 않을 수 있습니다 하 고 유효한 서비스 없는 호출 하려는 시도 실패 합니다.  
  
## <a name="wpf-usage-notes"></a>WPF 사용 정보  
 형식 참조의 스타일, 템플릿 및 데이터 바인딩 기능 영역에 대 한 일반적으로 사용 되 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]이러한 기능은 XAML에서 참조 하는 경우.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Markup.TypeExtension" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Markup.TypeExtension" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension(System::String ^ typeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">참조할 형식을 식별하는 문자열입니다. 이 문자열은 <c>prefix:className</c> 형식을 사용합니다. <c>prefix</c>는 XAML 네임스페이스에 대한 매핑 접두사이며 기본 XAML 네임스페이스에 매핑되지 않은 형식을 참조하려는 경우에만 필요합니다.</param>
        <summary>제공된 <paramref name="typeName" /> 문자열에 따라 <see cref="T:System.Windows.Markup.TypeExtension" /> 값을 초기화하는 <see cref="P:System.Windows.Markup.TypeExtension.TypeName" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 값 생성자에서 설정 하는 경우 평가 되지 않습니다. 값이 있으면 `null`, 값 처음 사용 됩니다. 실제 구문 분석 및 값의 평가 될 때까지 지연 됩니다 <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> XAML을 구문 분석 및 사용 가능한 서비스 컨텍스트 활성이 확장에 호출 됩니다. 이 이번에는 `typeName` XAML 스키마 컨텍스트 내에서 형식과 해당 형식을 반환 된 확인 가능 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="typeName" />을 <see langword="null" />로 지정하려고 시도했습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">이 <see cref="T:System.Windows.Markup.TypeExtension" />으로 표현할 형식입니다.</param>
        <summary>형식을 직접 선언하여 <see cref="T:System.Windows.Markup.TypeExtension" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 런타임 코드 사용에 대 한 도우미 메서드를 이것이 <xref:System.Windows.Markup.TypeExtension> 및 태그 확장에 대 한 일반적인 구현 패턴의 일부가 아닙니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">태그 확장명 서비스를 제공할 수 있는 개체입니다. 이 공급자는 <see cref="T:System.Windows.Markup.IXamlTypeResolver" />에 대한 서비스를 제공해야 합니다.</param>
        <summary>이 확장이 적용되는 속성에 설정해야 하는 개체를 반환합니다. <see cref="T:System.Windows.Markup.TypeExtension" />의 경우 이 값은 요청된 형식 이름에 대해 계산된 <see cref="T:System.Type" /> 값입니다.</summary>
        <returns>확장이 적용되는 속성에 설정할 <see cref="T:System.Type" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전달할 수 `null` 에 대 한 `serviceProvider`,이 경우에 <xref:System.Windows.Markup.TypeExtension> 인스턴스 생성자에는 초기 트루 타입으로 설정 된 아닌 `typeName`합니다. 이 태그 확장 구현에 전달 된 따라 서비스에 의존 하는 그렇지 않은 경우 `serviceProvider`합니다. 않아야 `null`합니다. `serviceProvider` 에 대 한 서비스를 제공 해야 하는 <xref:System.Windows.Markup.IXamlTypeResolver>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          확장에 대한 <paramref name="member" /> 값이 <see langword="null" />인 경우.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="typeName" /> 문자열의 일부가 제대로 구문 분석되지 않은 경우  
  
 또는  
  
 <paramref name="serviceProvider" />에서 <see cref="T:System.Windows.Markup.IXamlTypeResolver" />에 대한 서비스를 제공하지 않는 경우  
  
 또는  
  
 형식에 대한 <paramref name="typeName" />값을 확인하지 않았습니다.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceProvider" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.TypeExtension.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.ConstructorArgument("type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 확장에 대한 형식 정보를 가져오거나 설정합니다.</summary>
        <value>설정된 형식입니다. 런타임에 액세스 권한을 얻기 위해 <see langword="null" />이 될 수도 있지만 <see langword="null" />로 설정할 수는 없습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 와이 인스턴스를 인스턴스화하지 않으면는 <xref:System.Windows.Markup.TypeExtension.%23ctor%28System.Type%29> 서명 생성자이 값이 됩니다 `null`합니다. 이 속성 됩니다 될 때 다시 설정 <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> 라고 합니다. 트루타입 표시 하려는 경우 항상 호출 해야 <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> 이 속성을 확인 하지 않고 있습니다.  
  
 이 속성은 태그 확장 사용에 대 한 일반적인 규칙에 따라 설정할 수 있습니다. 그러나 설정 하는 경우는 <xref:System.Type>,이 태그 확장의 목적은 관련 되지 않습니다. 다음 때문에 동일한 <xref:System.Type> 에서 반환 되는 <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> 호출 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see langword="null" />로 설정하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.TypeExtension.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 태그 확장이 나타내는 형식 이름을 가져오거나 설정합니다.</summary>
        <value>형식을 식별하는 문자열입니다. 이 문자열 형식을 사용 하 여 *접두사*<c>:</c>*className*합니다. (*접두사* 는 XML 네임 스페이스에 대 한 매핑 접두사 이며 WPF에 대 한 기본 XML 네임 스페이스에 매핑되지 않은 형식을 참조 하려는 경우에 필요 ([!INCLUDE[TLA#tla_wpfxmlnsv1](~/includes/tlasharptla-wpfxmlnsv1-md.md)]).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <see langword="null" />로 설정하려고 한 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>