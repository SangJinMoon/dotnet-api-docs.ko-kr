<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConstructorArgumentAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5617f14c36b80f59fad31d7452e2f3ad147456f87.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">617f14c36b80f59fad31d7452e2f3ad147456f87</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>Specifies that an object can be initialized by using a non-default constructor syntax, and that a property of the specified name supplies construction information.</source>
          <target state="translated">개체가 기본이 아닌 생성자 구문을 사용하여 초기화될 수 있고 지정된 이름의 속성이 생성 정보를 제공한다는 것을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>This information is primarily for XAML serialization.</source>
          <target state="translated">이 정보는 주로 XAML serialization용입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>This attribute specifies that the associated property can be initialized by a constructor parameter and should be ignored for XAML serialization if the constructor is used to construct the instance.</source>
          <target state="translated">이 특성 연결된 된 속성을 생성자 매개 변수를 통해 초기화할 수 있음을 지정 생성자 사용 인스턴스를 생성 하는 경우에 XAML serialization에서 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>This provides better round trip representations for parameterized constructor syntax rather than default constructor instantiation plus specific attributes.</source>
          <target state="translated">특정 특성을 함께 기본 생성자 인스턴스화를 사용 하는 대신 매개 변수가 있는 생성자 구문에 대 한 더 나은 라운드트립 표현을 제공합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>A framework can potentially support preserving markup extension usages and reconstituting them rather than relying on <ph id="ph1">`ProvideValue`</ph> output in the object tree for serialization.</source>
          <target state="translated">프레임 워크는 유지 태그 확장명 사용 및 재구성을에 의존 하지 않고에 잠재적으로 지원할 수 <ph id="ph1">`ProvideValue`</ph> serialization에 대 한 개체 트리의 출력 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Markup.ConstructorArgumentAttribute&gt;</ph> information is useful during serialization for producing an accurate representation of the typical markup extension usage.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Windows.Markup.ConstructorArgumentAttribute&gt;</ph> 생성 정확 하 게 표현한 일반적인 태그 확장 사용에 대 한 직렬화 정보는 유용 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>For more information about markup extensions, see <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</source>
          <target state="translated">태그 확장에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>XAML 개요에 대 한 태그 확장<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>In order to be valid for a <ph id="ph1">&lt;xref:System.Windows.Markup.ConstructorArgumentAttribute&gt;</ph> attribution, a type's public non-default constructor must support exactly one parameter.</source>
          <target state="translated">에 대 한 유효 하려면는 <ph id="ph1">&lt;xref:System.Windows.Markup.ConstructorArgumentAttribute&gt;</ph> attribution, 형식의 공용 기본이 아닌 생성자 매개 변수를 하나만 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>The name of the parameter must correspond to a read/write property.</source>
          <target state="translated">매개 변수의 이름 읽기/쓰기 특성이 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>The property must be otherwise serializable.</source>
          <target state="translated">속성은 직렬화 가능 그렇지 않으면 여야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>You use this attribute to create the correspondence between the name of the parameter in the constructor, and the property.</source>
          <target state="translated">생성자에서 매개 변수의 이름 속성 사이의 대응을 만드는 데이 특성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>Specifically, you apply this attribute to the property-level definition of the connecting read/write property.</source>
          <target state="translated">특히 연결 읽기/쓰기 속성의 속성 수준 정의에이 특성을 적용 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>Consumers of <ph id="ph1">&lt;xref:System.Windows.Markup.ConstructorArgumentAttribute&gt;</ph> may throw in cases where <ph id="ph2">&lt;xref:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName%2A&gt;</ph> does not resolve to type backing, or when applied to a type that does not have the appropriate construction arguments and arity.</source>
          <target state="translated">소비자가 <ph id="ph1">&lt;xref:System.Windows.Markup.ConstructorArgumentAttribute&gt;</ph> 경우에 throw 될 수 있습니다 위치 <ph id="ph2">&lt;xref:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName%2A&gt;</ph> 형식 백업을 해결 되지 않으면 적용 되는 형식에 해당 하는 구성 인수와 인자 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</source>
          <target state="translated">이 클래스는.NET Framework의 이전 버전에서는 WPF 관련 WindowsBase 어셈블리에 존재합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.ConstructorArgumentAttribute&gt;</ph> is in the System.Xaml assembly.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.ConstructorArgumentAttribute&gt;</ph> System.Xaml 어셈블리에 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>WPF에서 System.Xaml로 마이그레이션된 형식<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>WPF Usage Notes</source>
          <target state="translated">WPF 사용 정보</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.ConstructorArgumentAttribute">
          <source>For more information about markup extensions and WPF, see <bpt id="p1">[</bpt>Markup Extensions and WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)</ept>.</source>
          <target state="translated">태그 확장명 및 WPF에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>태그 확장명 및 WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)">
          <source>The name of the constructor that will initialize the associated property.</source>
          <target state="translated">연결된 속성을 초기화하는 생성자의 이름입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.ConstructorArgumentAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.ConstructorArgumentAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName">
          <source>Gets the name parameter of the constructor that will initialize the associated property.</source>
          <target state="translated">연결된 속성을 초기화할 생성자의 이름 매개 변수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName">
          <source>The name of the constructor.</source>
          <target state="translated">생성자의 이름입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName">
          <source>Assuming CLR backing, this corresponds to the <ph id="ph1">&lt;see cref="P:System.Reflection.ParameterInfo.Name" /&gt;</ph> of the relevant constructor parameter.</source>
          <target state="translated">CLR 백업이라고 가정할 경우 관련 생성자 매개 변수의 <ph id="ph1">&lt;see cref="P:System.Reflection.ParameterInfo.Name" /&gt;</ph>에 해당합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>