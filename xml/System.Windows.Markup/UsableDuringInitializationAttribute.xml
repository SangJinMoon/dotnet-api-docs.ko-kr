<Type Name="UsableDuringInitializationAttribute" FullName="System.Windows.Markup.UsableDuringInitializationAttribute">
  <TypeSignature Language="C#" Value="public sealed class UsableDuringInitializationAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UsableDuringInitializationAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.UsableDuringInitializationAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UsableDuringInitializationAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class UsableDuringInitializationAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0bbc5-101">이 형식이 XAML 개체 그래프를 만드는 동안 하향식으로 빌드되는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0bbc5-101">Indicates whether this type is built top-down during XAML object graph creation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bbc5-102">위에서 아래로 개체 그래프를 만들 때 XAML 프로세서 동작에 근접 하는 메타포.</span><span class="sxs-lookup"><span data-stu-id="0bbc5-102">Top-down is a metaphor that approximates XAML processor behavior when creating the object graph.</span></span> <span data-ttu-id="0bbc5-103">위에서 아래로 작성할 때 클래스 인스턴스화되고 부모에 연결 된 다음 해당 속성이 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0bbc5-103">When built top-down, a class is instantiated, attached to the parent, and then has its properties set.</span></span> <span data-ttu-id="0bbc5-104">하향식 생성 속성 변경 처리기를 여러 번 호출 하는 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0bbc5-104">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="0bbc5-105">이러한 처리는 개체 그래프를 전파 하 고 개체 그래프의 시작에 대 한 성능 최적화를 제공 하므로 여러 처리기 호출을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="0bbc5-105">Such handling will ripple up the object graph and therefore eliminating the multiple handler calls provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="0bbc5-106">이 클래스는.NET Framework의 이전 버전에서는 WPF 관련 WindowsBase 어셈블리에 존재합니다.</span><span class="sxs-lookup"><span data-stu-id="0bbc5-106">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="0bbc5-107">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.UsableDuringInitializationAttribute> System.Xaml 어셈블리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0bbc5-107">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.UsableDuringInitializationAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="0bbc5-108">자세한 내용은 참조 [WPF에서 System.Xaml로 마이그레이션된 형식](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0bbc5-108">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="0bbc5-109">WPF 사용 정보</span><span class="sxs-lookup"><span data-stu-id="0bbc5-109">WPF Usage Notes</span></span>  
 <span data-ttu-id="0bbc5-110">에 대 한 WPF XAML에서 [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] 및 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], 하향식 생성으로 빌드된 XAML에 특정 클래스를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="0bbc5-110">In WPF XAML for [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] and [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], top-down construction was built in to the XAML processing for certain classes.</span></span> <span data-ttu-id="0bbc5-111"><xref:System.Windows.Markup.UsableDuringInitializationAttribute> 특성에서 상-동작의 보고를 공식화 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="0bbc5-111">The <xref:System.Windows.Markup.UsableDuringInitializationAttribute> attribute formalizes the reporting of the top-down behavior in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.FrameworkElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UsableDuringInitializationAttribute (bool usable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool usable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.UsableDuringInitializationAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (usable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UsableDuringInitializationAttribute(bool usable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="usable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="usable"><span data-ttu-id="0bbc5-112">초기화하는 동안 관련된 클래스를 사용할 수 있는지 여부를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="0bbc5-112">Defines whether the associated class is usable during initialization.</span></span></param>
        <summary><span data-ttu-id="0bbc5-113"><see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0bbc5-113">Initializes a new instance of the <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bbc5-114">이 특성을 상속합니다.</span><span class="sxs-lookup"><span data-stu-id="0bbc5-114">This attribute inherits.</span></span> <span data-ttu-id="0bbc5-115">초기 응용 프로그램에 대 한 일반적으로 `[UsableDuringInitialization(true)]`, 그런 다음 설정할 수 있지만 `[UsableDuringInitialization(false)]` 동작의 파생된 클래스 보고 변경 하는 파생된 클래스에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0bbc5-115">For the initial application you would typically apply as `[UsableDuringInitialization(true)]`, but you could then set `[UsableDuringInitialization(false)]` on a derived class to change the derived class reporting of the behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Usable">
      <MemberSignature Language="C#" Value="public bool Usable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Usable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.UsableDuringInitializationAttribute.Usable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Usable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Usable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0bbc5-116">초기화하는 동안 관련 클래스를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0bbc5-116">Gets a value that indicates whether the associated class is usable during initialization.</span></span></summary>
        <value>
          <span data-ttu-id="0bbc5-117">초기화하는 동안 관련된 클래스를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0bbc5-117"><see langword="true" /> if the associated class is usable during initialization; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>