<Type Name="XamlTypeMapper" FullName="System.Windows.Markup.XamlTypeMapper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a3d3958120fe26b80e126a09c20e3314d4c834d3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlTypeMapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeMapper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlTypeMapper" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeMapper" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeMapper" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bda8d-101">XAML 요소 이름을 어셈블리의 적합한 CLR <see cref="T:System.Type" />에 매핑합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bda8d-101">Maps a XAML element name to the appropriate CLR <see cref="T:System.Type" /> in assemblies.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda8d-102"><xref:System.Windows.Markup.XamlTypeMapper> 에 대 한 대체 컨텍스트를 제공 하는 고급 WPF 시나리오의 일부인 <xref:System.Windows.Markup.XamlReader> 및 <xref:System.Windows.Markup.XamlWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-102"><xref:System.Windows.Markup.XamlTypeMapper> is part of an advanced WPF scenario that supplies alternate context for <xref:System.Windows.Markup.XamlReader> and <xref:System.Windows.Markup.XamlWriter>.</span></span> <span data-ttu-id="bda8d-103">에 대 한 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] WPF 응용 프로그램을 고려해 야 재정의 <xref:System.Xaml.XamlSchemaContext> 사용 하려고 하지 않고이 시나리오에 대 한 <xref:System.Windows.Markup.XamlTypeMapper>합니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-103">For [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] WPF applications, you should consider overriding <xref:System.Xaml.XamlSchemaContext> for this scenario, rather than attempting to use <xref:System.Windows.Markup.XamlTypeMapper>.</span></span>  
  
 <span data-ttu-id="bda8d-104"><xref:System.Windows.Markup.XamlTypeMapper> XAML 파서에서의 응용 프로그램 보다 더 직접적 기법을 통해 사용자 지정 매핑 정보를 제공 하는 데 사용할 수 <xref:System.Windows.Markup.XmlnsDefinitionAttribute> 어셈블리 코드에는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-104"><xref:System.Windows.Markup.XamlTypeMapper> can be used to provide the XAML parser with custom mapping information through a more direct technique than the application of <xref:System.Windows.Markup.XmlnsDefinitionAttribute> values on the assembly code.</span></span> <span data-ttu-id="bda8d-105">이 추가 하기 위해 다시 컴파일할 필요 없이 기존 어셈블리에 있는 xaml 형식을 참조 하거나 어셈블리의 모든 CLR 네임 스페이스의 통합 하는 데 유용할 수 있습니다 <xref:System.Windows.Markup.XmlnsDefinitionAttribute> 특성 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-105">This might be useful for consolidation of all CLR namespaces in an assembly, or for referencing types that are XAML-ready in an existing assembly without having to recompile it just to add <xref:System.Windows.Markup.XmlnsDefinitionAttribute> attributing.</span></span>  
  
 <span data-ttu-id="bda8d-106">일반적으로 만듭니다는 <xref:System.Windows.Markup.XamlTypeMapper> 지정 하기 위해 인스턴스는 <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> 속성 값에 대 한는 <xref:System.Windows.Markup.ParserContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-106">You typically create a <xref:System.Windows.Markup.XamlTypeMapper> instance in order to specify the <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> property value for a <xref:System.Windows.Markup.ParserContext>.</span></span> <span data-ttu-id="bda8d-107"><xref:System.Windows.Markup.ParserContext> 차례로으로 사용할 수에 대 한 컨텍스트는 <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-107">The <xref:System.Windows.Markup.ParserContext> in turn can be used as the context for a <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType> call.</span></span>  
  
## <a name="default-mapper"></a><span data-ttu-id="bda8d-108">기본 매퍼</span><span class="sxs-lookup"><span data-stu-id="bda8d-108">Default Mapper</span></span>  
 <span data-ttu-id="bda8d-109">사용 하 여 기본 맵 편집기를 가져올 수 있습니다는 <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> 정적 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-109">You can obtain a default mapper using the <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> static property.</span></span> <span data-ttu-id="bda8d-110">기본 매퍼 기본 어셈블리 목록에 대해서만 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-110">The default mapper only works on a default assembly list.</span></span> <span data-ttu-id="bda8d-111">어셈블리에 대 한 특정 정보가 없습니다 (에 지정 되어 <xref:System.Windows.Markup.XamlTypeMapper> 생성자) 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-111">No specific information about assemblies (as is specified in <xref:System.Windows.Markup.XamlTypeMapper> constructors) is used.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.NamespaceMapEntry" />
    <altmember cref="T:System.Windows.Markup.ParserContext" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bda8d-112">
            <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-112">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">
          <span data-ttu-id="bda8d-113">
            <see cref="T:System.Windows.Markup.XamlTypeMapper" />에서 사용해야 하는 어셈블리 이름의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-113">The array of assembly names the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bda8d-114">
            <see cref="T:System.Windows.Markup.XamlTypeMapper" />에서 사용해야 하는 어셈블리 이름의 배열을 지정하여 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-114">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> class by specifying an array of assembly names that the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bda8d-115">
            <paramref name="assemblyNames" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-115">
              <paramref name="assemblyNames" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames, System.Windows.Markup.NamespaceMapEntry[] namespaceMaps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames, class System.Windows.Markup.NamespaceMapEntry[] namespaceMaps) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String(), namespaceMaps As NamespaceMapEntry())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames, cli::array &lt;System::Windows::Markup::NamespaceMapEntry ^&gt; ^ namespaceMaps);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
        <Parameter Name="namespaceMaps" Type="System.Windows.Markup.NamespaceMapEntry[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">
          <span data-ttu-id="bda8d-116">
            <see cref="T:System.Windows.Markup.XamlTypeMapper" />에서 사용해야 하는 어셈블리 이름의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-116">The array of assembly names the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</span>
          </span>
        </param>
        <param name="namespaceMaps">
          <span data-ttu-id="bda8d-117">
            <see cref="T:System.Windows.Markup.XamlTypeMapper" />에서 사용해야 하는 네임스페이스 맵의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-117">The array of namespace maps the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bda8d-118">지정된 어셈블리 이름의 배열 및 지정된 네임스페이스 맵을 사용하여 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-118">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> class, using the specified array of assembly names and the specified namespace maps.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bda8d-119">
            <paramref name="assemblyNames" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-119">
              <paramref name="assemblyNames" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMappingProcessingInstruction">
      <MemberSignature Language="C#" Value="public void AddMappingProcessingInstruction (string xmlNamespace, string clrNamespace, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingProcessingInstruction(string xmlNamespace, string clrNamespace, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingProcessingInstruction (xmlNamespace As String, clrNamespace As String, assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingProcessingInstruction(System::String ^ xmlNamespace, System::String ^ clrNamespace, System::String ^ assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="clrNamespace" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">
          <span data-ttu-id="bda8d-120">XML 네임스페이스의 접두사입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-120">The prefix for the XML namespace..</span>
          </span>
        </param>
        <param name="clrNamespace">
          <span data-ttu-id="bda8d-121">매핑할 형식이 들어 있는 CLR 네임스페이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-121">The CLR  namespace that contains the types to map.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="bda8d-122">CLR 네임스페이스가 들어 있는 어셈블리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-122">The assembly that contains the CLR  namespace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bda8d-123">어셈블리의 XML 네임스페이스와 CLR 네임스페이스 사이의 매핑을 정의하고 이것을 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 정보에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-123">Defines a mapping between an XML namespace and CLR namespaces in assemblies, and adds these to the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda8d-124"><xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A> 매핑을 추가 하려면 프로그래밍 방식 으로가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-124"><xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A> is a programmatic way to add a mapping.</span></span>  <span data-ttu-id="bda8d-125">다음 XAML mapping 명령의 여러 부분의 매개 변수에 해당 하는 예를 들어는 <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>:</span><span class="sxs-lookup"><span data-stu-id="bda8d-125">For example, the different parts of the following XAML mapping instruction correspond to the parameters of the <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>:</span></span>  
  
```  
<Window xmlns:SDK="clr-namespace:Samples;assembly=SDKSamples">  
...  
```  
  
 <span data-ttu-id="bda8d-126">`xmlNamespace` 은 `SDK`, `clrNamespace` 은 `Samples`, 및 `assemblyName` 은 `SDKSamples`합니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-126">The `xmlNamespace` is `SDK`, the `clrNamespace` is `Samples`, and the `assemblyName` is `SDKSamples`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bda8d-127">
            <paramref name="xmlNamespace" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-127">
              <paramref name="xmlNamespace" /> is <see langword="null" /></span>
          </span>
          <span data-ttu-id="bda8d-128">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-128">-or-</span>
          </span>
          <span data-ttu-id="bda8d-129">
            <paramref name="clrNamespace" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-129">
              <paramref name="clrNamespace" /> is <see langword="null" /></span>
          </span>
          <span data-ttu-id="bda8d-130">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-130">-or-</span>
          </span>
          <span data-ttu-id="bda8d-131">
            <paramref name="assemblyName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-131">
              <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllowInternalType">
      <MemberSignature Language="C#" Value="protected virtual bool AllowInternalType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AllowInternalType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool AllowInternalType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bda8d-132">액세스할 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-132">The type to access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bda8d-133">특정 내부 형식에 액세스하기 위해 완전 신뢰로 호출되어야 하는 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 파생 형식에 대한 권한을 요청합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-133">Requests permission for a <see cref="T:System.Windows.Markup.XamlTypeMapper" /> derived type that is called under full trust to access a specific internal type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bda8d-134">내부 형식에 액세스할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-134">
              <see langword="true" /> if the internal type can be accessed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda8d-135">서브 클래스에서 재정의 되지 않으면 <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> 항상 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-135">If not overridden by a subclass, <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> always returns `false`.</span></span>  
  
 <span data-ttu-id="bda8d-136">하위 클래스에서 재정의 되 면 동작 지정 해야 <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> 반환할지 `true` 내부 형식이 고, 그렇지 않으면 액세스 될 수 있도록 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-136">When overridden by a subclass, the behavior should be that <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> should return `true` if the internal type can be accessed; otherwise, `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMapper">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XamlTypeMapper DefaultMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Markup.XamlTypeMapper DefaultMapper" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultMapper As XamlTypeMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Markup::XamlTypeMapper ^ DefaultMapper { System::Windows::Markup::XamlTypeMapper ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XamlTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bda8d-137">지정되지 않은 경우 사용할 <see cref="T:System.Windows.Markup.XamlTypeMapper" />의 인스턴스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-137">Gets an instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> to use if one has not been specified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bda8d-138">기본 형식 매퍼입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-138">The default type mapper.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda8d-139">기본 매퍼 기본 어셈블리 목록에 대해서만 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-139">The default mapper only works on a default assembly list.</span></span> <span data-ttu-id="bda8d-140">어셈블리에 대 한 특정 정보가 없습니다 (에 지정 되어 <xref:System.Windows.Markup.XamlTypeMapper> 생성자) 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-140">No specific information about assemblies (as is specified in <xref:System.Windows.Markup.XamlTypeMapper> constructors) is used.</span></span> <span data-ttu-id="bda8d-141">현재 구현에서 기본 어셈블리 목록은: `WindowsBase`, `PresentationCore`, `PresentationFramework`합니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-141">In the current implementation the default assembly list is: `WindowsBase`, `PresentationCore`, `PresentationFramework`.</span></span>  
  
 <span data-ttu-id="bda8d-142">기본 맵 편집기를 사용 하 여 사용할 수 없다는 사용자 지정 어셈블리/형식 XAML에서 전혀 의미 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-142">Using the default mapper does not mean that you cannot use custom assemblies/types in XAML at all.</span></span> <span data-ttu-id="bda8d-143">사용자 지정 형식/어셈블리를 사용 하는 경우 사용 해야 기본 XAML 기술을으로 매핑을 만드는 의미일 뿐 `xmlns` , 형식 매퍼 API와 달리, 형식/어셈블리 참조는 각 XAML 페이지에서 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-143">It only means that if you do use custom types/assemblies, you must then use the conventional XAML technique of creating the mappings as `xmlns` attributes in each XAML page where the types/assemblies are referenced, as opposed to a type mapper API.</span></span> <span data-ttu-id="bda8d-144">자세한 내용은 참조 [XAML 네임 스페이스 및 WPF XAML에 대 한 매핑 Namespace](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-144">For more information, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string xmlNamespace, string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType(string xmlNamespace, string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (xmlNamespace As String, localName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ xmlNamespace, System::String ^ localName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">
          <span data-ttu-id="bda8d-145">지정된 XML 네임스페이스 접두사입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-145">The specified XML namespace prefix.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="bda8d-146">매핑된 <see cref="T:System.Type" />을 가져올 XAML 요소의 "로컬" 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-146">The "local" name of the XAML element to obtain the mapped <see cref="T:System.Type" /> for.</span>
          </span>
          <span data-ttu-id="bda8d-147">이 컨텍스트에서 로컬은 제공된 <c>xmlNamespace</c>에 대해 매핑된 XML 네임스페이스를 의미합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-147">Local in this context means as mapped versus the provided <c>xmlNamespace</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bda8d-148">지정된 XML 네임스페이스 접두사와 요소 이름을 사용하여 지정된 XAML 요소가 매핑될 CLR <see cref="T:System.Type" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-148">Gets the CLR <see cref="T:System.Type" /> that a given XAML element is mapped to, using the specified XML namespace prefix and element name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bda8d-149">개체의 <see cref="T:System.Type" />이거나 매핑을 확인할 수 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-149">The <see cref="T:System.Type" /> for the object, or <see langword="null" /> if no mapping could be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda8d-150">제공된 된 정보에 매핑되는 형식을 찾을 수 없는 경우 `null` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-150">If a type cannot be found that maps to the provided information, `null` is returned.</span></span>  
  
 <span data-ttu-id="bda8d-151">일부분으로 접두사를 넣지 마십시오 `localName`합니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-151">Do not include the prefix as part of `localName`.</span></span> <span data-ttu-id="bda8d-152">XAML 요소 정보를 접두사로 하나에 대 한 요소로 구분 `xmlNamespace` 및 `localName` 이 API 호출에 대 한 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="bda8d-152">For any prefixed XAML element information, separate it into `xmlNamespace` and `localName` components for this API call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bda8d-153">
            <paramref name="xmlNamespace" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-153">
              <paramref name="xmlNamespace" /> is <see langword="null" /></span>
          </span>
          <span data-ttu-id="bda8d-154">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-154">-or-</span>
          </span>
          <span data-ttu-id="bda8d-155">
            <paramref name="localName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-155">
              <paramref name="localName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
      </Docs>
    </Member>
    <Member MemberName="SetAssemblyPath">
      <MemberSignature Language="C#" Value="public void SetAssemblyPath (string assemblyName, string assemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAssemblyPath(string assemblyName, string assemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAssemblyPath (assemblyName As String, assemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAssemblyPath(System::String ^ assemblyName, System::String ^ assemblyPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="bda8d-156">확장명이나 경로가 지정되지 않은 약식 어셈블리 이름입니다(<see cref="P:System.Reflection.AssemblyName.Name" />과 동일).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-156">The short name of the assembly without an extension or path specified (equivalent to <see cref="P:System.Reflection.AssemblyName.Name" />).</span>
          </span>
        </param>
        <param name="assemblyPath">
          <span data-ttu-id="bda8d-157">어셈블리의 파일 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-157">The file path of the assembly.</span>
          </span>
          <span data-ttu-id="bda8d-158">어셈블리 경로는 파일 확장명이 들어 있는 전체 파일 경로여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-158">The assembly path must be a full file path containing a file extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bda8d-159">어셈블리를 로드할 때 사용할 경로를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-159">Specifies the path to use when loading an assembly.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bda8d-160">
            <paramref name="assemblyName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-160">
              <paramref name="assemblyName" /> is <see langword="null" /></span>
          </span>
          <span data-ttu-id="bda8d-161">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-161">-or-</span>
          </span>
          <span data-ttu-id="bda8d-162">
            <paramref name="assemblyPath" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-162">
              <paramref name="assemblyPath" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Windows.Markup.XamlParseException">
          <span data-ttu-id="bda8d-163">
            <paramref name="assemblyName" />가 <see cref="F:System.String.Empty" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-163">
              <paramref name="assemblyName" /> is <see cref="F:System.String.Empty" /></span>
          </span>
          <span data-ttu-id="bda8d-164">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-164">-or-</span>
          </span>
          <span data-ttu-id="bda8d-165">
            <paramref name="assemblyPath" />가 <see cref="F:System.String.Empty" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-165">
              <paramref name="assemblyPath" /> is <see cref="F:System.String.Empty" /></span>
          </span>
          <span data-ttu-id="bda8d-166">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-166">-or-</span>
          </span>
          <span data-ttu-id="bda8d-167">
            <paramref name="assemblyPath" />는 파일 확장명이 들어 있는 전체 파일 경로가 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bda8d-167">
              <paramref name="assemblyPath" /> is not a full file path containing a file extension.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>