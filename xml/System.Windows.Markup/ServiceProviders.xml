<Type Name="ServiceProviders" FullName="System.Windows.Markup.ServiceProviders">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3091dc9f8c29facb03d9d611b6212c24e36c1bcd" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37502531" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceProviders : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProviders extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ServiceProviders" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProviders&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProviders : IServiceProvider" />
  <TypeSignature Language="F#" Value="type ServiceProviders = class&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="37d51-101">서비스를 추가하는 메서드를 사용하여 <see cref="T:System.IServiceProvider" /> 인터페이스에 대한 구현을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="37d51-101">Provides an implementation for the <see cref="T:System.IServiceProvider" /> interface with methods that enable adding services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37d51-102">콘텐츠를 직렬화 할 때 이것이 사용에 대 한 유틸리티 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="37d51-102">This is a utility class for use when serializing content.</span></span> <span data-ttu-id="37d51-103">클래스는 기본적으로, 구현 하는 서비스 형식으로 키가 지정 된 서비스를 저장 하기 위한 사전 입력 전용 <xref:System.IServiceProvider> 동일한 사전에서 나중에 검색에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="37d51-103">The class is basically an input-only dictionary for storing services keyed by their service type, which implements <xref:System.IServiceProvider> for later retrieval from the same dictionary.</span></span> <span data-ttu-id="37d51-104">사전을 사용 하 여 반복 해 서 동일한 서비스에 대 한 쿼리를 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="37d51-104">Using the dictionary avoids querying for the same service repeatedly.</span></span> <span data-ttu-id="37d51-105">이 클래스의 기본 클래스인 <xref:System.Windows.Markup.XamlDesignerSerializationManager>를 서비스에 사용 되는 `ShouldSerialize` WPF의 다른 부분에서 메서드 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="37d51-105">This class is the base class of <xref:System.Windows.Markup.XamlDesignerSerializationManager>, which is the service used for `ShouldSerialize` method implementations in other parts of WPF.</span></span>  
  
 <span data-ttu-id="37d51-106">이 클래스를 사용 하 여 WPF 어셈블리 참조에서는 일반.NET Framework XAML 서비스 시나리오는 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="37d51-106">Using this class requires referencing WPF assemblies, it is not intended for general .NET Framework XAML Services scenarios.</span></span> <span data-ttu-id="37d51-107">와 같은 시나리오에서는 직렬화 중에 서비스를 많이 사용 기능의 WPF 내부 구현에 대 한는 처리할 때는 `ShouldSerialize` 특정 형식 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="37d51-107">The scenario here is for WPF internal implementation of service-intensive features during serialization, such as when processing the `ShouldSerialize` implementations of certain types.</span></span> <span data-ttu-id="37d51-108">이 시나리오에 포함 된 실제 클래스는 파생된 클래스 <xref:System.Windows.Markup.XamlDesignerSerializationManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="37d51-108">The practical class involved in this scenario is the derived class <xref:System.Windows.Markup.XamlDesignerSerializationManager>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProviders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ServiceProviders.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProviders();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37d51-109">
            <see cref="T:System.Windows.Markup.ServiceProviders" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d51-109">Initializes a new instance of the <see cref="T:System.Windows.Markup.ServiceProviders" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddService">
      <MemberSignature Language="C#" Value="public void AddService (Type serviceType, object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddService(class System.Type serviceType, object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddService (serviceType As Type, service As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddService(Type ^ serviceType, System::Object ^ service);" />
      <MemberSignature Language="F#" Value="member this.AddService : Type * obj -&gt; unit" Usage="serviceProviders.AddService (serviceType, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="37d51-110">새 서비스의 서비스 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d51-110">Service type of the new service.</span>
          </span>
        </param>
        <param name="service">
          <span data-ttu-id="37d51-111">서비스 구현 클래스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d51-111">The service implementation class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37d51-112">서비스를 목록에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d51-112">Adds a service to the list.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="37d51-113">
            <paramref name="serviceType" /> 또는 <paramref name="service" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d51-113">
              <paramref name="serviceType" /> or <paramref name="service" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37d51-114">이미 사전에 있는 서비스를 추가하려고 시도했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d51-114">Attempted to add a service that already exists in the dictionary.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="serviceProviders.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="37d51-115">가져올 서비스 개체의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d51-115">The type of service object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37d51-116">지정된 형식의 서비스 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d51-116">Gets the service object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37d51-117">
            <paramref name="serviceType" /> 형식의 서비스 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d51-117">A service implementation for the type <paramref name="serviceType" />.</span>
          </span>
          <span data-ttu-id="37d51-118">
            <paramref name="serviceType" /> 형식에 대해 저장된 서비스가 없는 경우 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d51-118">May be <see langword="null" /> if there is no service stored for type <paramref name="serviceType" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>