<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5b1419b6b996eab65fbdcda1f6ed9782df12197d" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36502766" /></Metadata><TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <TypeSignature Language="F#" Value="type IQueryAmbient = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fc4b0-101">지정된 속성을 현재 범위에서 앰비언트로 처리해야 하는지 여부에 대한 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-101">Queries for whether a specified property should be treated as ambient in the current scope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc4b0-102">앰비언트 속성 메커니즘의 목적은 되어 있는 임시 유용 하지 않은 일반적인 실행 시간 값에 대 한 개체는 알려져 있는 경우에서 특정 개체 인스턴스화를 방지 하려면 XAML 개체 작성기 줌으로써 구문 분석 시간을 개선 하기 위해 애플리케이션입니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-102">The purpose of an ambient property mechanism is to improve parsing time by informing a XAML object writer to avoid instantiating certain objects, in cases where it is known that the objects are for values that are temporary and not useful for a typical run time application.</span></span> <span data-ttu-id="fc4b0-103">일반적으로 XAML 조회 또는 속성 get 접근자의 XAML 처리 준비-사용할 수 있는 값을 사용 하 여 개체 그래프 표현에 맞게 이러한 개체를 인스턴스화해야 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-103">Normally, XAML lookups or XAML processing of a property get accessor would need to instantiate such objects to fill the object graph representation with ready-to-use values.</span></span>  
  
 <span data-ttu-id="fc4b0-104"><xref:System.Windows.Markup.IQueryAmbient> 하나의 멤버가: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-104"><xref:System.Windows.Markup.IQueryAmbient> has one member: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.</span></span>  
  
 <span data-ttu-id="fc4b0-105"><xref:System.Windows.Markup.IQueryAmbient> 병렬 메커니즘입니다 <xref:System.Windows.Markup.AmbientAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-105"><xref:System.Windows.Markup.IQueryAmbient> is a parallel mechanism to <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="fc4b0-106"><xref:System.Windows.Markup.IQueryAmbient> 리플렉션을 사용 하 여 정보를 확인을 방지 하는 특수 한 메커니즘 및 act 상황 수도 (지정된 된 개체는 보고서를 선택할 수 있습니다 `true` 또는 `false` 에 대 한 <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>) 특성은 기본적으로 정적 이지만, 분석)입니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-106"><xref:System.Windows.Markup.IQueryAmbient> is the specialized mechanism that avoids using reflection to determine information, and can also act situationally (a given object could choose to report `true` or `false` for <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>), whereas the attribute is essentially static analysis).</span></span> <span data-ttu-id="fc4b0-107"><xref:System.Windows.Markup.AmbientAttribute> 일반 메커니즘으로 XAML 개체 작성기에서 사용할 수 있는 전용된 XAML 형식 시스템 속성에는 일반적으로 상관 <xref:System.Xaml.XamlMember.IsAmbient%2A> 고 <xref:System.Xaml.XamlType.IsAmbient%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-107"><xref:System.Windows.Markup.AmbientAttribute> is the general mechanism that can be used by XAML object writers and that typically correlates to the dedicated XAML type system properties <xref:System.Xaml.XamlMember.IsAmbient%2A> and <xref:System.Xaml.XamlType.IsAmbient%2A>.</span></span>  
  
## <a name="wpf-implementations-of-iqueryambient"></a><span data-ttu-id="fc4b0-108">WPF 구현의 IQueryAmbient</span><span class="sxs-lookup"><span data-stu-id="fc4b0-108">WPF Implementations of IQueryAmbient</span></span>  
 <span data-ttu-id="fc4b0-109">Wpf에서 <xref:System.Windows.Markup.IQueryAmbient> 리소스 사전 조회 프로세스에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-109">In WPF, <xref:System.Windows.Markup.IQueryAmbient> is used for the resource dictionary lookup process.</span></span> <span data-ttu-id="fc4b0-110">조회 프로세스가 가져옵니다 연속 `Resources` WPF 논리적 트리 전체 값, 키가 될 때까지 리소스 범위의 루트를 향해 진행을 찾을 수 있습니다. 또는 키 범위에 존재 하지 않는 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-110">The lookup process gets successive `Resources` values throughout the WPF logical tree, working towards the root of the resource scope until either a key is found or the key is determined to not exist in scope.</span></span> <span data-ttu-id="fc4b0-111">일반적으로 이렇게 해야 인스턴스화를 <xref:System.Windows.ResourceDictionary> 결과를 받을 때마다 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-111">Normally, doing so would require instantiating a <xref:System.Windows.ResourceDictionary> each time to receive the results.</span></span> <span data-ttu-id="fc4b0-112">내용을 선언 `Resources` 한 앰비언트로 `Resources` 존재이 조회 프로세스를 최적화 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-112">Declaring the contents of `Resources` as ambient so long as `Resources` exists optimizes this lookup process.</span></span> <span data-ttu-id="fc4b0-113">Wpf에서이 인터페이스는 다음과 같은 경우에 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-113">In WPF, this interface is implemented in the following cases:</span></span>  
  
-   <span data-ttu-id="fc4b0-114"><xref:System.Windows.FrameworkElement> 구현 <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> 반환할 `true` 기존 포함 된 경우 모든 속성 이름에 대 한 <xref:System.Windows.ResourceDictionary> 에 대 한 <xref:System.Windows.FrameworkElement.Resources%2A>에 대 한 쿼리 아닙니다 하기만 하 고는 <xref:System.Windows.FrameworkElement.Resources%2A> 속성 자체입니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-114"><xref:System.Windows.FrameworkElement> implements <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> to return `true` for all property names if it contains an existing <xref:System.Windows.ResourceDictionary> for <xref:System.Windows.FrameworkElement.Resources%2A>, and so long as the query is not for the <xref:System.Windows.FrameworkElement.Resources%2A> property itself.</span></span>  
  
-   <span data-ttu-id="fc4b0-115"><xref:System.Windows.Style> 동일한 패턴을 구현 해당 <xref:System.Windows.Style.Resources%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-115"><xref:System.Windows.Style> implements the same pattern for its <xref:System.Windows.Style.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="fc4b0-116"><xref:System.Windows.Application> 동일한 패턴을 구현 해당 <xref:System.Windows.Application.Resources%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-116"><xref:System.Windows.Application> implements the same pattern for its <xref:System.Windows.Application.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="fc4b0-117"><xref:System.Windows.FrameworkContentElement> 동일한 패턴을 구현 해당 <xref:System.Windows.FrameworkContentElement.Resources%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-117"><xref:System.Windows.FrameworkContentElement> implements the same pattern for its <xref:System.Windows.FrameworkContentElement.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="fc4b0-118"><xref:System.Windows.FrameworkTemplate> 동일한 패턴을 구현 해당 <xref:System.Windows.FrameworkTemplate.Resources%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-118"><xref:System.Windows.FrameworkTemplate> implements the same pattern for its <xref:System.Windows.FrameworkTemplate.Resources%2A>.</span></span> <span data-ttu-id="fc4b0-119">또한 보고 <xref:System.Windows.FrameworkTemplate.Template%2A> 앰비언트 하지만 반환 콘텐츠 `false` 에 대 한 쿼리 하는 경우 <xref:System.Windows.FrameworkTemplate.Template%2A> 자체입니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-119">It also reports <xref:System.Windows.FrameworkTemplate.Template%2A> content as ambient but returns `false` if querying for <xref:System.Windows.FrameworkTemplate.Template%2A> itself.</span></span>  
  
-   <span data-ttu-id="fc4b0-120">관련 된 경우 각 `Resources` 속성 (및 <xref:System.Windows.FrameworkTemplate.Template%2A>)로 특성이 지정 된 <xref:System.Windows.Markup.AmbientAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-120">In each of these cases, the relevant `Resources` property (and <xref:System.Windows.FrameworkTemplate.Template%2A>) are attributed as <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="fc4b0-121">일반적인 사용법은 없는 속성에 대 한 쿼리는 <xref:System.Windows.Markup.AmbientAttribute> 인터페이스를 정의 하는 개체의 속성 특성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-121">The typical usage is to query for the properties that are NOT the <xref:System.Windows.Markup.AmbientAttribute> attributed properties of the object that defines the interface.</span></span> <span data-ttu-id="fc4b0-122">즉, 리소스 사전 개체 그래프를 만들 때 잠재적인 런타임 값을 제공 하기 위해 존재 한다면 리소스 사전의 속성 컨테이너로 외에도 다른 속성 수 앰비언트로 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-122">In other words, so long as a resource dictionary exists in order to provide the potential run time value when the object graph is created, any other property besides the resource dictionary's property container can be treated as ambient.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member IsAmbientPropertyAvailable : string -&gt; bool" Usage="iQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="fc4b0-123">앰비언트 상태를 확인할 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-123">The name of the property to check for ambience state.</span></span></param>
        <summary><span data-ttu-id="fc4b0-124">지정된 명명된 속성을 현재 범위에서 앰비언트로 간주할 수 있는지 여부에 대한 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-124">Queries for whether a specified named property can be considered ambient in the current scope.</span></span></summary>
        <returns><span data-ttu-id="fc4b0-125">요청된 속성을 앰비언트로 간주할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fc4b0-125"><see langword="true" /> if the requested property can be considered ambient; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>