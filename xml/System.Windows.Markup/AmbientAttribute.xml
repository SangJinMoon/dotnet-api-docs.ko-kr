<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fed5ee82ed23838c0a8baef8d382515ec75d5620" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36503272" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8b94c-101">속성이나 형식을 앰비언트로 처리하도록 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b94c-101">Specifies that a property or type should be treated as ambient.</span>
      </span>
      <span data-ttu-id="8b94c-102">앰비언트 개념은 XAML 프로세서가 멤버의 형식 소유자를 결정하는 방법과 관련됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b94c-102">The ambient concept relates to how XAML processors determine type owners of members.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b94c-103">앰비언트 속성 값 사용 가능 하도록 파서 컨텍스트에서 하지만 일반적인 형식 멤버 조회가 바로 XAML 노드 생성 되 고 집합의 목적을 위해 일시 중단 되는 개체 그래프를 만들 때 필요한 속성이입니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-103">An ambient property is a property where the value is expected to be available in the parser context when creating an object graph, but where typical type-member lookup is suspended for purposes of the immediate XAML node set being created.</span></span> <span data-ttu-id="8b94c-104">앰비언트 개념에 대 한 두 가지 기본 시나리오가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-104">There are two main scenarios for the ambient concept:</span></span>  
  
-   <span data-ttu-id="8b94c-105">동일한 개체의 다른 속성에 영향을 줍니다 및 해당 개체 속성 조회 어떻게 작업 해야 한정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-105">Some other property of the same object influences and qualifies how that object-property lookup should work.</span></span>  
  
-   <span data-ttu-id="8b94c-106">이 속성은 더 큰 지연 메커니즘을 나타냅니다 및 현재 개체 내에 포함 된 모든 개체에 멤버 값을 조회 하기 위한 앰비언트 기능을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-106">The property represents a larger deferral mechanism and the ambient capabilities for looking up a member value extend to all objects contained within the current object.</span></span>  
  
 <span data-ttu-id="8b94c-107">이 특성이 제공 하는 앰비언트 속성 조회 동작을 사용 하는 컨테이너는 특정 속성에 적용할 수 있습니다 또는 클래스를 사용 하는 모든 경우에는 속성에 대 한 해당 값 형식의 앰비언트 속성 동작에 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-107">This attribute can be applied to specific properties that have expected containers that enable an ambient property lookup behavior, or can be applied to a class to enable the ambient property behavior in all cases of that value type for a property.</span></span>  
  
 <span data-ttu-id="8b94c-108"><xref:System.Windows.Markup.AmbientAttribute> CLR 메서드를 앰비언트로 XAML 연결 가능한 속성 특성을 지원 하기에 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-108"><xref:System.Windows.Markup.AmbientAttribute> can also be applied to a CLR method, to support attributing a XAML attachable property as ambient.</span></span> <span data-ttu-id="8b94c-109">이 잠재적으로 필요한 CLR 구현에서 XAML 연결 된 속성은 구현/표현 있으므로 접근자 패턴으로 리플렉션에 `get` 및 `set` 메서드.</span><span class="sxs-lookup"><span data-stu-id="8b94c-109">This is potentially necessary because in a CLR implementation a XAML attached property is implemented/represented to reflection as an accessor pattern with `get` and `set` methods.</span></span> <span data-ttu-id="8b94c-110">특성에 실제 CLR 속성이 없습니다 존재 하므로 대 한 사용량을 제한 <xref:System.AttributeTargets> 를 `Property` 는 기능이 활성화 되지 앰비언트로 연결할 수 있는 멤버를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-110">No actual CLR property to attribute exists, so restricting usage for <xref:System.AttributeTargets> to `Property` would not have enabled specifying an attachable member as ambient.</span></span> <span data-ttu-id="8b94c-111">앰비언트로 보고 하려는 연결 가능한 멤버, 특성은 `get` 접근자입니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-111">For an attachable member that you want to report as ambient, attribute the `get` accessor.</span></span> <span data-ttu-id="8b94c-112">연결 가능한 멤버의 메서드를 특별히 지원 하지 않는 메서드에 특성을 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-112">You should not attempt to attribute methods that are not specifically support methods of attachable members.</span></span>  
  
 <span data-ttu-id="8b94c-113">이 클래스는.NET Framework의 이전 버전에서는 WPF 관련 WindowsBase 어셈블리에 존재합니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-113">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="8b94c-114">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> System.Xaml 어셈블리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-114">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="8b94c-115">자세한 내용은 참조 [WPF에서 System.Xaml로 마이그레이션된 형식](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-115">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 <span data-ttu-id="8b94c-116">앰비언트 형식 (where 형식 <xref:System.Windows.Markup.AmbientAttribute> 형식 수준에서 적용) 특정 XAML 처리 해야 하는 경우 여기서 속성의 형식은 해결 될 것으로 잘못 된 순서에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-116">Ambient types (types where <xref:System.Windows.Markup.AmbientAttribute> is applied at type level) can be used for certain XAML processing situations where the type of a property needs to be resolved out of order.</span></span>  
  
## <a name="object-writer-scenarios"></a><span data-ttu-id="8b94c-117">개체 작성기 시나리오</span><span class="sxs-lookup"><span data-stu-id="8b94c-117">Object Writer Scenarios</span></span>  
 <span data-ttu-id="8b94c-118">XAML 개체 작성기를 정의 하는 속성, 메서드 또는 형식 발생 하는 경우 여기서 <xref:System.Windows.Markup.AmbientAttribute> 은 적용, 일반적으로 액세스 해야 개체를 작성 하는 데 필요한 앰비언트 속성 조회 동작을 결정 하는 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-118">If you are defining a XAML object writer, and you encounter a property, method or type where <xref:System.Windows.Markup.AmbientAttribute> is applied, you typically must access a service to determine the intended ambient property lookup behavior that is needed for writing out objects.</span></span> <span data-ttu-id="8b94c-119">자세한 내용은 <xref:System.Xaml.IAmbientProvider>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8b94c-119">For more information, see <xref:System.Xaml.IAmbientProvider>.</span></span>  
  
## <a name="value-converters"></a><span data-ttu-id="8b94c-120">값 변환기</span><span class="sxs-lookup"><span data-stu-id="8b94c-120">Value Converters</span></span>  
 <span data-ttu-id="8b94c-121">형식 변환기 또는 태그 확장 멤버 또는 형식 또는 한정자 없이 문자열 이름으로 지정 하는 속성 등의 간접 형식 매핑을 나타내는 속성을 처리 하기 위해 앰비언트 정보를 알아야 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-121">Type converters or markup extensions might need to know the ambient information in order to process properties that represent indirect type mappings, such as properties that specify members or types by string names with or without qualification.</span></span> <span data-ttu-id="8b94c-122">이 시나리오에서는 <xref:System.Windows.Markup.AmbientAttribute> 값 변환기 코드 논리에 대 한 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-122">In this scenario, <xref:System.Windows.Markup.AmbientAttribute> is not intended to be used directly for value converter code logic.</span></span> <span data-ttu-id="8b94c-123">값 변환기 전달 하는 XAML 작성기 처리 동작에 의존 해야 대신 <xref:System.Xaml.IAmbientProvider> 호출 될 때 값 변환기 메서드를 해당 서비스 컨텍스트에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-123">Rather, the value converter should rely on the XAML writer processing behavior, which will pass <xref:System.Xaml.IAmbientProvider> in its service contexts to your value converter methods when called.</span></span>  
  
## <a name="wpf-scenarios-for-ambientattribute"></a><span data-ttu-id="8b94c-124">AmbientAttribute에 대 한 WPF 시나리오</span><span class="sxs-lookup"><span data-stu-id="8b94c-124">WPF Scenarios for AmbientAttribute</span></span>  
  
-   <span data-ttu-id="8b94c-125">속성에는 <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>)의 속성 이름에 대 한 백업 참조를 찾는 데 필요한 필수 속성 이름 조회를 한정할 수 <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-125">A property of a <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) can qualify the necessary property name lookups that are needed to find the backing references for property names in <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> values.</span></span>  
  
-   <span data-ttu-id="8b94c-126">내에서 모든 콘텐츠는 `Resources` 속성 (항목의 한 <xref:System.Windows.ResourceDictionary>) 템플릿 콘텐츠 뿐 아니라 있어야 값으로 다른 피어에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-126">All content within a `Resources` property (items of a <xref:System.Windows.ResourceDictionary>) as well as template content, should be able to access other peers as values.</span></span> <span data-ttu-id="8b94c-127">전체 선언 `Resources` 앰비언트로 속성 WPF XAML 파서에이 활성화 하는 논리를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-127">Declaring the entire `Resources` property as ambient invokes logic that enables this in the WPF XAML parser.</span></span>  
  
 <span data-ttu-id="8b94c-128">참조 <xref:System.Windows.ResourceDictionary> 설정에 대 한 시나리오의 예에 대 한 <xref:System.Windows.Markup.AmbientAttribute> 형식 수준에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b94c-128">See <xref:System.Windows.ResourceDictionary> for an example of a scenario for setting <xref:System.Windows.Markup.AmbientAttribute> at type level.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b94c-129">
            <see cref="T:System.Windows.Markup.AmbientAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b94c-129">Initializes a new instance of the <see cref="T:System.Windows.Markup.AmbientAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>