<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fed5ee82ed23838c0a8baef8d382515ec75d5620" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36503272" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>속성이나 형식을 앰비언트로 처리하도록 지정합니다. 앰비언트 개념은 XAML 프로세서가 멤버의 형식 소유자를 결정하는 방법과 관련됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 앰비언트 속성 값 사용 가능 하도록 파서 컨텍스트에서 하지만 일반적인 형식 멤버 조회가 바로 XAML 노드 생성 되 고 집합의 목적을 위해 일시 중단 되는 개체 그래프를 만들 때 필요한 속성이입니다. 앰비언트 개념에 대 한 두 가지 기본 시나리오가 있습니다.  
  
-   동일한 개체의 다른 속성에 영향을 줍니다 및 해당 개체 속성 조회 어떻게 작업 해야 한정 합니다.  
  
-   이 속성은 더 큰 지연 메커니즘을 나타냅니다 및 현재 개체 내에 포함 된 모든 개체에 멤버 값을 조회 하기 위한 앰비언트 기능을 확장 합니다.  
  
 이 특성이 제공 하는 앰비언트 속성 조회 동작을 사용 하는 컨테이너는 특정 속성에 적용할 수 있습니다 또는 클래스를 사용 하는 모든 경우에는 속성에 대 한 해당 값 형식의 앰비언트 속성 동작에 적용할 수 있습니다.  
  
 <xref:System.Windows.Markup.AmbientAttribute> CLR 메서드를 앰비언트로 XAML 연결 가능한 속성 특성을 지원 하기에 적용할 수 있습니다. 이 잠재적으로 필요한 CLR 구현에서 XAML 연결 된 속성은 구현/표현 있으므로 접근자 패턴으로 리플렉션에 `get` 및 `set` 메서드. 특성에 실제 CLR 속성이 없습니다 존재 하므로 대 한 사용량을 제한 <xref:System.AttributeTargets> 를 `Property` 는 기능이 활성화 되지 앰비언트로 연결할 수 있는 멤버를 지정 합니다. 앰비언트로 보고 하려는 연결 가능한 멤버, 특성은 `get` 접근자입니다. 연결 가능한 멤버의 메서드를 특별히 지원 하지 않는 메서드에 특성을 하지 않아야 합니다.  
  
 이 클래스는.NET Framework의 이전 버전에서는 WPF 관련 WindowsBase 어셈블리에 존재합니다. [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> System.Xaml 어셈블리에 있습니다. 자세한 내용은 참조 [WPF에서 System.Xaml로 마이그레이션된 형식](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)합니다.  
  
 앰비언트 형식 (where 형식 <xref:System.Windows.Markup.AmbientAttribute> 형식 수준에서 적용) 특정 XAML 처리 해야 하는 경우 여기서 속성의 형식은 해결 될 것으로 잘못 된 순서에 사용할 수 있습니다.  
  
## <a name="object-writer-scenarios"></a>개체 작성기 시나리오  
 XAML 개체 작성기를 정의 하는 속성, 메서드 또는 형식 발생 하는 경우 여기서 <xref:System.Windows.Markup.AmbientAttribute> 은 적용, 일반적으로 액세스 해야 개체를 작성 하는 데 필요한 앰비언트 속성 조회 동작을 결정 하는 서비스입니다. 자세한 내용은 <xref:System.Xaml.IAmbientProvider>을 참조하십시오.  
  
## <a name="value-converters"></a>값 변환기  
 형식 변환기 또는 태그 확장 멤버 또는 형식 또는 한정자 없이 문자열 이름으로 지정 하는 속성 등의 간접 형식 매핑을 나타내는 속성을 처리 하기 위해 앰비언트 정보를 알아야 할 수 있습니다. 이 시나리오에서는 <xref:System.Windows.Markup.AmbientAttribute> 값 변환기 코드 논리에 대 한 직접 사용할 수 없습니다. 값 변환기 전달 하는 XAML 작성기 처리 동작에 의존 해야 대신 <xref:System.Xaml.IAmbientProvider> 호출 될 때 값 변환기 메서드를 해당 서비스 컨텍스트에서 합니다.  
  
## <a name="wpf-scenarios-for-ambientattribute"></a>AmbientAttribute에 대 한 WPF 시나리오  
  
-   속성에는 <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>)의 속성 이름에 대 한 백업 참조를 찾는 데 필요한 필수 속성 이름 조회를 한정할 수 <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> 값입니다.  
  
-   내에서 모든 콘텐츠는 `Resources` 속성 (항목의 한 <xref:System.Windows.ResourceDictionary>) 템플릿 콘텐츠 뿐 아니라 있어야 값으로 다른 피어에 액세스할 수 있습니다. 전체 선언 `Resources` 앰비언트로 속성 WPF XAML 파서에이 활성화 하는 논리를 호출 합니다.  
  
 참조 <xref:System.Windows.ResourceDictionary> 설정에 대 한 시나리오의 예에 대 한 <xref:System.Windows.Markup.AmbientAttribute> 형식 수준에서 합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Markup.AmbientAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>