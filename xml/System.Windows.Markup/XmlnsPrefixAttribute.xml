<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlnsPrefixAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52b55c0f31d02d0279e09c475af619bcc93b53d51.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b55c0f31d02d0279e09c475af619bcc93b53d51</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>Identifies a recommended prefix to associate with a XAML namespace for XAML usage, when writing elements and attributes in a XAML file (serialization) or when interacting with a design environment that has XAML editing features.</source>
          <target state="translated">XAML 파일에 요소 및 특성을 쓰거나(serialization) XAML 편집 기능이 있는 디자인 환경을 조작할 때 XAML 사용을 위해 XAML 네임스페이스와 연결할 권장 접두사를 식별합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>XAML processors or frameworks that incorporate XAML, or any process that performs XAML serialization, should generally honor the recommended prefix.</source>
          <target state="translated">XAML 프로세서 또는 XAML 또는 XAML serialization을 수행 하는 모든 프로세스를 통합 하는 프레임 워크 권장 되는 접두사 일반적으로 따라야 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>The prefix might be necessary in any case where prefixes from specific mappings in the original XAML source are not somehow preserved in the runtime object graph or otherwise stored by a framework or technology.</source>
          <target state="translated">접두사는 어떤 경우 든 특정 매핑의 원본 XAML 소스에 접두사는 되지는 런타임 개체 그래프에 유지 하거나 위치 프레임 워크 또는 기술에 의해 저장 되 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>A framework might have specific preferences for how to serialize its own types that ignore the recommended prefix from its own assemblies; this might be done to consistently promote a default XAML namespace.</source>
          <target state="translated">프레임 워크는 자체 어셈블리;에서 권장 되는 접두사를 무시 하는 자체 형식을 serialize 하는 방법에 대 한 특정 한 기본 설정이 있을 수 있습니다. 이를 일관성 있게 기본 XAML 네임 스페이스를 승격 수행 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>However, such a framework should still provide recommended prefixes for possible third-party and tool usages of its XAML types.</source>
          <target state="translated">그러나 이러한 프레임 워크는 XAML 형식의 가능한 제 3 자 및 도구 사용에 대 한 권장된 하는 접두사를 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>See "Best Practice for XAML Designer Support or General Serialization" section below.</source>
          <target state="translated">아래의 "XAML 디자이너 지원 또는 일반 Serialization에 대 한 모범 사례" 섹션을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>A general recommendation for prefixes is to use short strings, because the prefix is typically applied to all serialized elements that come from the XAML namespace.</source>
          <target state="translated">접두사에 대 한 일반적인 권장 사항은 짧은 문자열을 사용 되므로 대개 접두사는 XAML 네임 스페이스에서 제공 하는 모든 직렬화 된 요소에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>The prefix string length can have a noticeable effect on the size of serialized XAML output.</source>
          <target state="translated">접두사 문자열 길이 serialize 된 XAML 출력의 크기에 많은 영향을 미칠 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>If a prefix being requested is already in use by another previously encountered/serialized XAML namespace identifier, the behavior is unspecified (behavior is up to each individual XAML processor implementation).</source>
          <target state="translated">요청 되는 접두사 이미 다른 이전에 발생/serialize 된 XAML 네임 스페이스 식별자로 사용 중이면 동작이 지정 되지 않습니다 (동작은 각 개별 XAML 프로세서 구현까지).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>In most cases, you apply <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> only if you have also applied at least one <ph id="ph2">&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</ph> in the assembly for that same XAML namespace.</source>
          <target state="translated">적용 하면 대부분의 경우에서 <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> 하나 이상도 적용 한 경우에 <ph id="ph2">&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</ph> 해당 동일한 XAML 네임 스페이스에 대 한 어셈블리에 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</source>
          <target state="translated">이 클래스는.NET Framework의 이전 버전에서는 WPF 관련 WindowsBase 어셈블리에 존재합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> is in the System.Xaml assembly.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> System.Xaml 어셈블리에 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>WPF에서 System.Xaml로 마이그레이션된 형식<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>Best Practice for XAML Designer Support or General Serialization</source>
          <target state="translated">XAML 디자이너 지원 또는 일반 Serialization에 대 한 모범 사례</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>Even if you intend the associated XAML namespace to be the default XAML namespace in most usage cases for your framework or library, you should still specify a non-empty string as the recommended prefix for a XAML namespace.</source>
          <target state="translated">프레임 워크 또는 라이브러리에 대 한 대부분의 사용의 기본 XAML 네임 스페이스 연결된 된 XAML 네임 스페이스를 작성할 경우에로 XAML 네임 스페이스에 대 한 권장 되는 접두사는 비어 있지 않은 문자열에도 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>Default XAML namespace information is carried in individual XAML files and XAML node streams.</source>
          <target state="translated">기본 XAML 네임 스페이스 정보는 개별 XAML 파일과 XAML 노드 스트림에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>The default XAML namespace and how it is defined in a given XAML source can easily be perpetuated for per-case serialization without using <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph>.</source>
          <target state="translated">기본 XAML 네임 스페이스 및 지정 된 XAML 소스에 정의 되었는지 어떻게 수 쉽게 수 참조별 사례 당 serialization에 대 한 사용 하지 않고 <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> is useful for cases where the XAML author has chosen to map the default XAML namespace to something else.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> 은 다른 개체에 기본 XAML 네임 스페이스를 매핑할 XAML 작성자가 선택한 하는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>In this scenario a XAML text editor embedded in a design environment can use <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> as a hint for an initial XAML namespace <ph id="ph2">`xmlns`</ph> mapping.</source>
          <target state="translated">환경 디자인에 포함 된 XAML 텍스트 편집기는이 시나리오에서는 צ ְ ײ <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> 는 초기 XAML 네임 스페이스에 대 한 힌트로 <ph id="ph2">`xmlns`</ph> 매핑.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>Or a design environment can add just-in-time mappings to the backing XAML for design metaphors such as dragging objects out of a toolbox and into a visual design surface.</source>
          <target state="translated">또는 디자인 환경 개체는 도구 상자를 시각적 디자인 화면으로 끄는 등 디자인 요소에 대 한 지원 XAML 적시에 매핑을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>Also, it is conceivable that a designer could simultaneously support multiple XAML-enabling frameworks, and has a common XAML serializer that relies on .NET Framework XAML Services rather than framework-specific serialization.</source>
          <target state="translated">또한 가능한 디자이너를 동시에 여러 XAML을 사용 하면 프레임 워크를 지원할 수 있습니다 및 프레임 워크 관련 serialization 보다는.NET Framework XAML 서비스에 의존 하는 공통 XAML serializer가 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XmlnsPrefixAttribute">
          <source>Specifying a <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> for these scenarios helps make the XAML usage for your types more portable and robust if the XAML is exchanged between design tools, or undergoes a round trip between XAML editors and other consumers such as markup compilers or other serialization.</source>
          <target state="translated">지정 하는 <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> 이러한 시나리오에 대 한 만들어줍니다 XAML 사용 프로그램 형식에 대 한 더욱 이식 가능 하 고 강력한 XAML 디자인 도구 사이 교환 되 또는 XAML 편집기와 태그 컴파일러와 같은 다른 소비자 간의 왕복을 수행 하는 경우 또는 기타 직렬화입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
          <source>The XAML namespace indentifier.</source>
          <target state="translated">XAML 네임스페이스 식별자입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
          <source>The recommended prefix string.</source>
          <target state="translated">권장되는 접두사 문자열입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="xmlNamespace" /&gt;</ph> or <ph id="ph2">&lt;paramref name="prefix" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlNamespace" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="prefix" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix">
          <source>Gets the recommended prefix associated with this attribute.</source>
          <target state="translated">이 특성과 연결된 권장되는 접두사를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix">
          <source>The recommended prefix string.</source>
          <target state="translated">권장되는 접두사 문자열입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace">
          <source>Gets the XAML namespace identifier associated with this attribute.</source>
          <target state="translated">이 특성과 연결된 XAML 네임스페이스 식별자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace">
          <source>The XAML namespace identifier.</source>
          <target state="translated">XAML 네임스페이스 식별자입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>