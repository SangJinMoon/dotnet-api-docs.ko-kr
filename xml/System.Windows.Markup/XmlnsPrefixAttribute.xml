<Type Name="XmlnsPrefixAttribute" FullName="System.Windows.Markup.XmlnsPrefixAttribute">
  <TypeSignature Language="C#" Value="public sealed class XmlnsPrefixAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlnsPrefixAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XmlnsPrefixAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlnsPrefixAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlnsPrefixAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a911c-101">XAML 파일에 요소 및 특성을 쓰거나(serialization) XAML 편집 기능이 있는 디자인 환경을 조작할 때 XAML 사용을 위해 XAML 네임스페이스와 연결할 권장 접두사를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-101">Identifies a recommended prefix to associate with a XAML namespace for XAML usage, when writing elements and attributes in a XAML file (serialization) or when interacting with a design environment that has XAML editing features.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a911c-102">XAML 프로세서 또는 XAML 또는 XAML serialization을 수행 하는 모든 프로세스를 통합 하는 프레임 워크 권장 되는 접두사 일반적으로 따라야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-102">XAML processors or frameworks that incorporate XAML, or any process that performs XAML serialization, should generally honor the recommended prefix.</span></span> <span data-ttu-id="a911c-103">접두사는 어떤 경우 든 특정 매핑의 원본 XAML 소스에 접두사는 되지는 런타임 개체 그래프에 유지 하거나 위치 프레임 워크 또는 기술에 의해 저장 되 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-103">The prefix might be necessary in any case where prefixes from specific mappings in the original XAML source are not somehow preserved in the runtime object graph or otherwise stored by a framework or technology.</span></span> <span data-ttu-id="a911c-104">프레임 워크는 자체 어셈블리;에서 권장 되는 접두사를 무시 하는 자체 형식을 serialize 하는 방법에 대 한 특정 한 기본 설정이 있을 수 있습니다. 이를 일관성 있게 기본 XAML 네임 스페이스를 승격 수행 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-104">A framework might have specific preferences for how to serialize its own types that ignore the recommended prefix from its own assemblies; this might be done to consistently promote a default XAML namespace.</span></span> <span data-ttu-id="a911c-105">그러나 이러한 프레임 워크는 XAML 형식의 가능한 제 3 자 및 도구 사용에 대 한 권장된 하는 접두사를 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-105">However, such a framework should still provide recommended prefixes for possible third-party and tool usages of its XAML types.</span></span> <span data-ttu-id="a911c-106">아래의 "XAML 디자이너 지원 또는 일반 Serialization에 대 한 모범 사례" 섹션을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="a911c-106">See "Best Practice for XAML Designer Support or General Serialization" section below.</span></span>  
  
 <span data-ttu-id="a911c-107">접두사에 대 한 일반적인 권장 사항은 짧은 문자열을 사용 되므로 대개 접두사는 XAML 네임 스페이스에서 제공 하는 모든 직렬화 된 요소에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-107">A general recommendation for prefixes is to use short strings, because the prefix is typically applied to all serialized elements that come from the XAML namespace.</span></span> <span data-ttu-id="a911c-108">접두사 문자열 길이 serialize 된 XAML 출력의 크기에 많은 영향을 미칠 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-108">The prefix string length can have a noticeable effect on the size of serialized XAML output.</span></span>  
  
 <span data-ttu-id="a911c-109">요청 되는 접두사 이미 다른 이전에 발생/serialize 된 XAML 네임 스페이스 식별자로 사용 중이면 동작이 지정 되지 않습니다 (동작은 각 개별 XAML 프로세서 구현까지).</span><span class="sxs-lookup"><span data-stu-id="a911c-109">If a prefix being requested is already in use by another previously encountered/serialized XAML namespace identifier, the behavior is unspecified (behavior is up to each individual XAML processor implementation).</span></span>  
  
 <span data-ttu-id="a911c-110">적용 하면 대부분의 경우에서 <xref:System.Windows.Markup.XmlnsPrefixAttribute> 하나 이상도 적용 한 경우에 <xref:System.Windows.Markup.XmlnsDefinitionAttribute> 해당 동일한 XAML 네임 스페이스에 대 한 어셈블리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-110">In most cases, you apply <xref:System.Windows.Markup.XmlnsPrefixAttribute> only if you have also applied at least one <xref:System.Windows.Markup.XmlnsDefinitionAttribute> in the assembly for that same XAML namespace.</span></span>  
  
 <span data-ttu-id="a911c-111">이 클래스는.NET Framework의 이전 버전에서는 WPF 관련 WindowsBase 어셈블리에 존재합니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-111">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="a911c-112">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.XmlnsPrefixAttribute> System.Xaml 어셈블리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-112">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.XmlnsPrefixAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="a911c-113">자세한 내용은 참조 [WPF에서 System.Xaml로 마이그레이션된 형식](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-113">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="best-practice-for-xaml-designer-support-or-general-serialization"></a><span data-ttu-id="a911c-114">XAML 디자이너 지원 또는 일반 Serialization에 대 한 모범 사례</span><span class="sxs-lookup"><span data-stu-id="a911c-114">Best Practice for XAML Designer Support or General Serialization</span></span>  
 <span data-ttu-id="a911c-115">프레임 워크 또는 라이브러리에 대 한 대부분의 사용의 기본 XAML 네임 스페이스 연결된 된 XAML 네임 스페이스를 작성할 경우에로 XAML 네임 스페이스에 대 한 권장 되는 접두사는 비어 있지 않은 문자열에도 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-115">Even if you intend the associated XAML namespace to be the default XAML namespace in most usage cases for your framework or library, you should still specify a non-empty string as the recommended prefix for a XAML namespace.</span></span> <span data-ttu-id="a911c-116">기본 XAML 네임 스페이스 정보는 개별 XAML 파일과 XAML 노드 스트림에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-116">Default XAML namespace information is carried in individual XAML files and XAML node streams.</span></span> <span data-ttu-id="a911c-117">기본 XAML 네임 스페이스 및 지정 된 XAML 소스에 정의 되었는지 어떻게 수 쉽게 수 참조별 사례 당 serialization에 대 한 사용 하지 않고 <xref:System.Windows.Markup.XmlnsPrefixAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-117">The default XAML namespace and how it is defined in a given XAML source can easily be perpetuated for per-case serialization without using <xref:System.Windows.Markup.XmlnsPrefixAttribute>.</span></span> <span data-ttu-id="a911c-118">그러나는 <xref:System.Windows.Markup.XmlnsPrefixAttribute> 은 다른 개체에 기본 XAML 네임 스페이스를 매핑할 XAML 작성자가 선택한 하는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-118">However, the <xref:System.Windows.Markup.XmlnsPrefixAttribute> is useful for cases where the XAML author has chosen to map the default XAML namespace to something else.</span></span> <span data-ttu-id="a911c-119">환경 디자인에 포함 된 XAML 텍스트 편집기는이 시나리오에서는 צ ְ ײ <xref:System.Windows.Markup.XmlnsPrefixAttribute> 는 초기 XAML 네임 스페이스에 대 한 힌트로 `xmlns` 매핑.</span><span class="sxs-lookup"><span data-stu-id="a911c-119">In this scenario a XAML text editor embedded in a design environment can use <xref:System.Windows.Markup.XmlnsPrefixAttribute> as a hint for an initial XAML namespace `xmlns` mapping.</span></span> <span data-ttu-id="a911c-120">또는 디자인 환경 개체는 도구 상자를 시각적 디자인 화면으로 끄는 등 디자인 요소에 대 한 지원 XAML 적시에 매핑을 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-120">Or a design environment can add just-in-time mappings to the backing XAML for design metaphors such as dragging objects out of a toolbox and into a visual design surface.</span></span> <span data-ttu-id="a911c-121">또한 가능한 디자이너를 동시에 여러 XAML을 사용 하면 프레임 워크를 지원할 수 있습니다 및 프레임 워크 관련 serialization 보다는.NET Framework XAML 서비스에 의존 하는 공통 XAML serializer가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-121">Also, it is conceivable that a designer could simultaneously support multiple XAML-enabling frameworks, and has a common XAML serializer that relies on .NET Framework XAML Services rather than framework-specific serialization.</span></span> <span data-ttu-id="a911c-122">지정 하는 <xref:System.Windows.Markup.XmlnsPrefixAttribute> 이러한 시나리오에 대 한 만들어줍니다 XAML 사용 프로그램 형식에 대 한 더욱 이식 가능 하 고 강력한 XAML 디자인 도구 사이 교환 되 또는 XAML 편집기와 태그 컴파일러와 같은 다른 소비자 간의 왕복을 수행 하는 경우 또는 기타 직렬화입니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-122">Specifying a <xref:System.Windows.Markup.XmlnsPrefixAttribute> for these scenarios helps make the XAML usage for your types more portable and robust if the XAML is exchanged between design tools, or undergoes a round trip between XAML editors and other consumers such as markup compilers or other serialization.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlnsPrefixAttribute (string xmlNamespace, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlNamespace, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlNamespace As String, prefix As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlnsPrefixAttribute(System::String ^ xmlNamespace, System::String ^ prefix);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace"><span data-ttu-id="a911c-123">XAML 네임스페이스 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-123">The XAML namespace indentifier.</span></span></param>
        <param name="prefix"><span data-ttu-id="a911c-124">권장되는 접두사 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-124">The recommended prefix string.</span></span></param>
        <summary><span data-ttu-id="a911c-125"><see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-125">Initializes a new instance of the <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a911c-126"><paramref name="xmlNamespace" /> 또는 <paramref name="prefix" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="a911c-126"><paramref name="xmlNamespace" /> or <paramref name="prefix" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a911c-127">이 특성과 연결된 권장되는 접두사를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-127">Gets the recommended prefix associated with this attribute.</span></span></summary>
        <value><span data-ttu-id="a911c-128">권장되는 접두사 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-128">The recommended prefix string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespace">
      <MemberSignature Language="C#" Value="public string XmlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a911c-129">이 특성과 연결된 XAML 네임스페이스 식별자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-129">Gets the XAML namespace identifier associated with this attribute.</span></span></summary>
        <value><span data-ttu-id="a911c-130">XAML 네임스페이스 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="a911c-130">The XAML namespace identifier.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>