<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RuntimeNamePropertyAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac593f9fe0c0e13586d21cf7969160cb485c06ab18f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93f9fe0c0e13586d21cf7969160cb485c06ab18f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
          <source>Represents a type-level attribute that reports which property of the type maps to the XAML <bpt id="p1">[</bpt>x:Name attribute<ept id="p1">](~/docs/framework/xaml-services/x-name-directive.md)</ept>.</source>
          <target state="translated">XAML <bpt id="p1">[</bpt>x:Name attribute<ept id="p1">](~/docs/framework/xaml-services/x-name-directive.md)</ept>로 매핑할 형식의 속성을 보고하는 형식 수준 특성을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
          <source>The property that is specified in the <ph id="ph1">&lt;xref:System.Windows.Markup.RuntimeNamePropertyAttribute&gt;</ph> must be of type <ph id="ph2">&lt;xref:System.String&gt;</ph> and must be read/write.</source>
          <target state="translated">에 지정 된 속성의 <ph id="ph1">&lt;xref:System.Windows.Markup.RuntimeNamePropertyAttribute&gt;</ph> 형식 이어야 합니다 <ph id="ph2">&lt;xref:System.String&gt;</ph> 하며 읽기/쓰기 여야 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
          <source>Frameworks might attribute a certain property of one its architectural base elements to be the XAML name equivalent.</source>
          <target state="translated">프레임 워크는 아키텍처 기본 요소를 해당 하는 XAML 이름으로 하나의 특정 속성 특성 지정할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
          <source>This is done so that the concept of a XAML name in a XAML namescope set at XAML load time is available to a framework's programming model at run time.</source>
          <target state="translated">이 런타임 시 XAML 로드 시간에 설정 하는 XAML 네임 스페이스에는 XAML 이름의 개념은 프레임 워크의 프로그래밍 모델에 사용할 수 있도록 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
          <source>A XAML name value must use the <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">XAML 이름 값을 사용 해야 합니다는 <bpt id="p1">[</bpt>XamlName 문법<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
          <source>In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</source>
          <target state="translated">이 클래스는.NET Framework의 이전 버전에서는 WPF 관련 WindowsBase 어셈블리에 존재합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.RuntimeNamePropertyAttribute&gt;</ph> is in the System.Xaml assembly.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.RuntimeNamePropertyAttribute&gt;</ph> System.Xaml 어셈블리에 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>WPF에서 System.Xaml로 마이그레이션된 형식<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
          <source>WPF Usage Notes</source>
          <target state="translated">WPF 사용 정보</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
          <source>An example of an existing class in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> where the <ph id="ph2">&lt;xref:System.Windows.Markup.RuntimeNamePropertyAttribute&gt;</ph> is applied is <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph>.</source>
          <target state="translated">기존 클래스의 예로 <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> 여기서는 <ph id="ph2">&lt;xref:System.Windows.Markup.RuntimeNamePropertyAttribute&gt;</ph> 적용 되는 <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> property on <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> is attributed with <ph id="ph3">&lt;xref:System.Windows.Markup.RuntimeNamePropertyAttribute&gt;</ph>, which results in any <ph id="ph4">&lt;xref:System.Windows.FrameworkElement&gt;</ph> derived class also using <ph id="ph5">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> as its run-time name property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 특성으로 지정 <ph id="ph3">&lt;xref:System.Windows.Markup.RuntimeNamePropertyAttribute&gt;</ph>, 모든 줄어들고 결과적 <ph id="ph4">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 도 사용 하 여 클래스를 파생 <ph id="ph5">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> 런타임에 name 속성으로.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
          <source>In general, you do not typically need to apply this attribute in WPF unless you are implementing a new or <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>-parallel framework-level class.</source>
          <target state="translated">일반적으로 일반적으로 불필요 새 구현 하는 경우가 아니면 WPF에서이 특성을 적용 하려면 또는 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>-프레임 워크 수준 클래스에 병렬입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
          <source><ph id="ph1">`x:Name`</ph> should take precedence over the run-time name property if both exist as attributes on an element, and a XAML processor implementation generally throws in this case.</source>
          <target state="translated"><ph id="ph1">`x:Name`</ph> 우선 해야 런타임에 name 속성 모두 요소에 특성으로 포함 하 고 XAML 프로세서 구현 일반적으로 경우 throw 하는 경우.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.RuntimeNamePropertyAttribute.#ctor(System.String)">
          <source>The name of the property to use as the <ph id="ph1">&lt;see langword="x:Name" /&gt;</ph> equivalent of the class.</source>
          <target state="translated">클래스의 <ph id="ph1">&lt;see langword="x:Name" /&gt;</ph>에 해당하는 값으로 사용할 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.RuntimeNamePropertyAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.RuntimeNamePropertyAttribute.#ctor(System.String)">
          <source>The specified property must be of type <ph id="ph1">&lt;xref:System.String&gt;</ph> and have get and set access.</source>
          <target state="translated">지정된 된 속성 형식 이어야 합니다 <ph id="ph1">&lt;xref:System.String&gt;</ph> get 및 액세스를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.RuntimeNamePropertyAttribute.Name">
          <source>Gets the name of the runtime name property that is specified by this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" /&gt;</ph>로 지정된 런타임 이름 속성의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.RuntimeNamePropertyAttribute.Name">
          <source>The name of the property.</source>
          <target state="translated">속성의 이름입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>