<Type Name="DataBoundControlAdapter" FullName="System.Web.UI.WebControls.Adapters.DataBoundControlAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e56828131e192cc05a4b2c8e7c22a0d1a35887b7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36386598" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataBoundControlAdapter : System.Web.UI.WebControls.Adapters.WebControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataBoundControlAdapter extends System.Web.UI.WebControls.Adapters.WebControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class DataBoundControlAdapter&#xA;Inherits WebControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBoundControlAdapter : System::Web::UI::WebControls::Adapters::WebControlAdapter" />
  <TypeSignature Language="F#" Value="type DataBoundControlAdapter = class&#xA;    inherit WebControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Adapters.WebControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>특정 브라우저 요청에 대해 어댑터가 연결된 <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 개체의 동작을 사용자 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 되는 컨트롤의 <xref:System.Web.UI.WebControls.DataBoundControl> 클래스는 데이터 소스에 바인딩된와 연결 된 데이터 원본에 있는 항목을 열거 하 여 해당 사용자 인터페이스 또는 자식 컨트롤 계층 구조를 생성 합니다. <xref:System.Web.UI.WebControls.DataBoundControl> 추상 기본 클래스와 같은 데이터 원본에 바인딩될 수 있는 모든 컨트롤의 일반적인 특성을 정의 하는 <xref:System.Web.UI.WebControls.DataGrid> 및 <xref:System.Web.UI.WebControls.ListBox> 컨트롤입니다. 자세한 내용은 <xref:System.Web.UI.WebControls.DataBoundControl>을 참조하세요.  
  
 A <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter> 의 동작을 수정 하는 <xref:System.Web.UI.WebControls.DataBoundControl> 는 특정 브라우저 또는 브라우저 또는 역할의 일부 기능에 대 한 필터 클래스에 대 한 합니다. 파생 되는 특수 한 클래스에 캡슐화 할의 렌더링 동작에는 <xref:System.Web.UI.HtmlTextWriter> 클래스입니다. 따라서 것은 브라우저 클래스 동작 또는에 어댑터 기능이 포함 되는 수에 대 한 단일 어댑터는 사용 될 가능성이 <xref:System.Web.UI.HtmlTextWriter> 클래스 불필요 한 컨트롤 어댑터의 사용을 만들 수 있습니다.  
  
 각 컨트롤 브라우저 정의 파일을 통해 어댑터에 명시적 매핑이 있는 경우에 `<controlAdapter>` 이러한 파일의 항목입니다. 따라서 액세스 하는 모든는 <xref:System.Web.UI.Control.Adapter%2A> 의 속성은 <xref:System.Web.UI.WebControls.DataBoundControl> 사용 하 여는 <xref:System.Web.HttpBrowserCapabilities> 어댑터와 컨트롤의 매핑에 대 한 조회를 수행 하는 브라우저 정의 파일에서 추출 된 개체입니다.  
  
 처리 하는 동안.NET Framework는 특정 브라우저 될 수 있는 컨트롤의 메서드를 호출을 차단 합니다. 컨트롤 어댑터가 연결 되 면.NET Framework는 연결 된 어댑터 메서드를 호출 합니다. 자세한 내용은 <xref:System.Web.UI.Adapters.ControlAdapter>을 참조하세요.  
  
 M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding(System.Collections.IEnumerable) 메서드를 연결 된 열거 가능 컬렉션을 바인딩합니다 <xref:System.Web.UI.WebControls.DataBoundControl>합니다. <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.Control%2A> 속성에 대 한 강력한 형식의 참조를 반환 합니다.는 <xref:System.Web.UI.WebControls.DataBoundControl>합니다.  
  
   
  
## Examples  
 다음 코드 예제는 만들고 두 개의 파생 된 컨트롤을 사용 합니다.  
  
-   `MyDataBound` 에서 파생 된 클래스 <xref:System.Web.UI.WebControls.DataBoundControl>, 간단한 읽기 전용 그리드 컨트롤입니다.  
  
-   `MyDataBoundAdapter` 에서 파생 된 클래스 <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter>, 작은 화면 브라우저에 적합 한 행 구분선이 있는 1 차원 목록으로 표의 데이터를 렌더링 합니다.  
  
 웹 페이지를 사용 하 여 선언 하는 첫 번째 코드 예제는 `MyDataBound` 컨트롤과 인스턴스의 <xref:System.Web.UI.WebControls.ObjectDataSource> 의 형태로 데이터를 제공 하는 <xref:System.Data.DataView> 개체입니다.  
  
  
  
 두 번째 코드 예제에는 파생 된 `MyDataBound` 및 `MyDataBoundAdapter` 클래스:  
  
-   `MyDataBound` 재정의 <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding%2A> 저장 하는 메서드는 <xref:System.Collections.IEnumerator> 데이터 원본과 재정의 대 한 컬렉션은 <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> html 데이터 소스를 `<table>`합니다.  
  
-   `MyDataBoundAdapter` 재정의 <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding%2A> 를 1 차원 데이터 소스를 저장 하려면 <xref:System.Collections.ArrayList> 행 구분 기호를 추가 합니다. 재정의 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents%2A> 렌더링 하는 <xref:System.Collections.ArrayList> 구분 하 여 필드의 목록으로 `<br />` 태그입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/CS/mydatabound.cs#1)]
 [!code-vb[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/VB/mydatabound.vb#1)]  
  
 세 번째 코드 예제에서는 구성 파일을 사용 하 여 사용할 수 없는 컨트롤 어댑터가 임을 지정 하려면 `MyDataBound` 하 고 있는 Microsoft Internet Explorer 브라우저에 대 한 제어는 `MyDataBoundAdapter` 와 함께 사용 되 `MyDataBound` Openwave를 브라우저에 대 한 제어 합니다.  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
    <altmember cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
    <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
    <altmember cref="T:System.Web.UI.Control" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBoundControlAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataBoundControlAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework의 새 인스턴스를 내부적으로 생성 된 <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter> 해당 만들 때 <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter> 개체입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
        <altmember cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.DataBoundControl Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataBoundControl Control" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.Control" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Control As DataBoundControl" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::DataBoundControl ^ Control { System::Web::UI::WebControls::DataBoundControl ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : System.Web.UI.WebControls.DataBoundControl" Usage="System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 컨트롤 어댑터와 연결된 <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 개체에 대한 강력한 형식의 참조를 검색합니다.</summary>
        <value>이 <see cref="T:System.Web.UI.WebControls.DataBoundControl" />가 연결된 <see cref="T:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter> 개체에 연결 되는 <xref:System.Web.UI.WebControls.DataBoundControl> 컨트롤,.NET Framework 컨트롤 멤버 대신 특정 어댑터 멤버를 호출 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.Control%2A> 어댑터의 속성에서 파생 된 <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter> 클래스. 에 대 한 강력한 형식의 참조 반환은 `MyDataBound` 제어 합니다.  
  
 [!code-csharp[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/CS/mydatabound.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/VB/mydatabound.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>상속 하는 경우는 <see cref="T:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter" /> 클래스, 여기에 최소한 구현 해야는 <see langword="Control" /> 속성을 "예" 섹션에 표시 된 대로 컨트롤의 강력한 형식의 인스턴스를 반환 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
        <altmember cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.WebControls.Adapters.WebControlAdapter.Control" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal virtual void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberSignature Language="F#" Value="abstract member PerformDataBinding : System.Collections.IEnumerable -&gt; unit&#xA;override this.PerformDataBinding : System.Collections.IEnumerable -&gt; unit" Usage="dataBoundControlAdapter.PerformDataBinding data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">파생된 <see cref="T:System.Collections.IEnumerable" />에 바인딩할 <see cref="T:System.Object" />의 <see cref="T:System.Web.UI.WebControls.DataBoundControl" />입니다.</param>
        <summary>연결된 <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 개체의 데이터 소스에 있는 데이터를 컨트롤 어댑터에 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding%2A> 메서드 대신 호출 됩니다는 <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A?displayProperty=nameWithType> 메서드 때는 <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter> 에서 파생 된 컨트롤에 컨트롤 어댑터가 연결 되는 <xref:System.Web.UI.WebControls.DataBoundControl> 클래스입니다.  
  
 일반적으로 재정의 <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A?displayProperty=nameWithType> 고유 이름 및 필요한 경우 값을 만드는 데이터를 반복 하 고 내부 컬렉션에 저장 합니다. 일반적으로 <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> 또는의 유사한 메서드는 <xref:System.Web.UI.WebControls.DataBoundControl> 사용자 인터페이스 또는 자식 컨트롤 해당 내부 컬렉션을 채웁니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding%2A> 를 1 차원 데이터 소스를 저장 하는 컬렉션 <xref:System.Collections.ArrayList> 행 구분 기호를 추가 합니다. 재정의 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents%2A> 렌더링 하는 메서드는 <xref:System.Collections.ArrayList> 구분 하 여 필드의 목록으로 `<br />` 태그입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/CS/mydatabound.cs#3)]
 [!code-vb[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/VB/mydatabound.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 <see cref="M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding(System.Collections.IEnumerable)" /> 특수 논리를 바인딩 경우 메서드는 대상 브라우저에 필요-예를 들어 때 항목 이름을 생성 해야 다르게 보다 컨트롤의 일반적인 용도 대 한 합니다.  <see cref="M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding(System.Collections.IEnumerable)" /> 메서드 호출을 기본 <see cref="M:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding(System.Collections.IEnumerable)" />합니다. 호출 해야는 <see cref="M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding(System.Collections.IEnumerable)" /> 의 데이터 바인딩 기능이 필요한 경우에 기본 메서드는 <see cref="T:System.Web.UI.WebControls.DataBoundControl" />합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding(System.Collections.IEnumerable)" />
        <altmember cref="M:System.Web.UI.WebControls.ListControl.PerformDataBinding(System.Collections.IEnumerable)" />
      </Docs>
    </Member>
  </Members>
</Type>