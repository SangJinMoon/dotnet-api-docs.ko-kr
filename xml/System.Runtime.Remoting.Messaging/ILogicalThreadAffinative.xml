<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ILogicalThreadAffinative.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac511600b4c6c27db5d82abf8e22b33be9547f64f82.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">11600b4c6c27db5d82abf8e22b33be9547f64f82</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative">
          <source>Marks an object that can propagate outside of an <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph> in a <ph id="ph2">&lt;see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" /&gt;</ph>에서 전파되는 개체를 표시합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative">
          <source>When a remote method call is made to an object in another <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>, the current <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.CallContext&gt;</ph> class generates a <ph id="ph3">&lt;xref:System.Runtime.Remoting.Messaging.LogicalCallContext&gt;</ph> that travels along with the call to the remote location.</source>
          <target state="translated">다른 개체에 원격 메서드 호출이 수행 때 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>, 현재 <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.CallContext&gt;</ph> 클래스를 생성 한 <ph id="ph3">&lt;xref:System.Runtime.Remoting.Messaging.LogicalCallContext&gt;</ph> 원격 위치에 대 한 호출 함께 전달 되 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative">
          <source>Only objects that expose the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative&gt;</ph> interface and are stored in the <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.CallContext&gt;</ph> are propagated outside the <ph id="ph3">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">해당 노출 개체는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative&gt;</ph> 인터페이스 및에 저장 됩니다는 <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.CallContext&gt;</ph> 전파 됩니다는 <ph id="ph3">&lt;xref:System.AppDomain&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative">
          <source>Objects that do not support this interface are not transmitted in <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.LogicalCallContext&gt;</ph> instances with remote method calls.</source>
          <target state="translated">이 인터페이스를 지원 하지 않는 개체에 전송 되지 않은 <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.LogicalCallContext&gt;</ph> 원격 메서드 호출을 사용 하 여 인스턴스.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative&gt;</ph> interface to transmit <bpt id="p1">[</bpt>Principal and Identity Objects<ept id="p1">](~/docs/standard/security/principal-and-identity-objects.md)</ept> to a remote location for identification.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative&gt;</ph> 전송 하는 인터페이스 <bpt id="p1">[</bpt>보안 주체 개체 및 Identity 개체<ept id="p1">](~/docs/standard/security/principal-and-identity-objects.md)</ept> id에 대 한 원격 위치에 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative">
          <source>To view the code for the <ph id="ph1">`HelloServiceClass`</ph> class used in the sample, see the example for the <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.CallContext.GetData%2A&gt;</ph> method.</source>
          <target state="translated">에 대 한 코드를 보려면는 <ph id="ph1">`HelloServiceClass`</ph> 샘플에 사용 되는 클래스에 대 한 예제를 참조 하십시오.는 <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.CallContext.GetData%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative">
          <source>To view the code for the server class used in this sample, see example for the <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A&gt;</ph> class.</source>
          <target state="translated">이 샘플에 사용 된 서버 클래스에 대 한 코드를 보려면 참조에 대 한 예제는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative">
          <source>To view the code for the client class used in the sample, see the example for the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.CallContext&gt;</ph> class.</source>
          <target state="translated">샘플에 사용 되는 클라이언트 클래스에 대 한 코드를 보려면 예제를 참조 하세요.는 <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.CallContext&gt;</ph> 클래스입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>