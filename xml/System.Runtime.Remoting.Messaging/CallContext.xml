<Type Name="CallContext" FullName="System.Runtime.Remoting.Messaging.CallContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="05e8219cc578922a0d0f92229acc8226c5915f3c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36631606" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CallContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit CallContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.CallContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CallContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallContext sealed" />
  <TypeSignature Language="F#" Value="type CallContext = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>실행 코드 경로로 전달된 속성 집합을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.Messaging.CallContext> 메서드 호출에 스레드 로컬 저장소와 유사한 특수 한 컬렉션 개체 이며 각 논리 스레드가 실행 중에 고유한 데이터 슬롯을 제공 합니다. 슬롯 호출 컨텍스트 논리 다른 스레드 간에 공유 되지 않습니다. 개체에 추가할 수는 <xref:System.Runtime.Remoting.Messaging.CallContext> 아래 위로 이동 하면서 다시 실행 코드 경로 구성 하 고 경로 따라 다양 한 개체에 의해 검사 합니다.  
  
 다른 개체에 원격 메서드 호출이 수행 시기 <xref:System.AppDomain>, <xref:System.Runtime.Remoting.Messaging.CallContext> 클래스를 생성 한 <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> 원격 호출과 함께 전송 되는 인스턴스. 해당 노출 개체는 <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> 인터페이스 및에 저장 됩니다는 <xref:System.Runtime.Remoting.Messaging.CallContext> 전파 됩니다는 <xref:System.AppDomain> 에 <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>합니다. 이 인터페이스를 지원 하지 않는 개체에 전송 되지 않은 <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> 원격 메서드 호출을 사용 하 여 인스턴스.  
  
> [!NOTE]
>  모든 메서드에 <xref:System.Runtime.Remoting.Messaging.CallContext> 이 정적이 고 현재에서 호출 컨텍스트에 작업할 <xref:System.Threading.Thread>합니다.  
  
> [!NOTE]
>  이 클래스에는 링크 요청을 만듭니다. A `SecurityException` 직접 실행 호출자 인프라 권한이 없는 경우 throw 됩니다. 참조 [링크 요청](~/docs/framework/misc/link-demands.md) 자세한 정보에 대 한 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Runtime.Remoting.Messaging.CallContext> 전송 하는 클래스 [보안 주체 개체 및 Identity 개체](~/docs/standard/security/principal-and-identity-objects.md) id에 대 한 원격 위치에 있습니다. 에 대 한 코드를 보려면는 `LogicalCallContextData` 이 샘플에 사용 된 클래스에 대 한 예제를 참조 하십시오.는 <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> 인터페이스입니다. 에 대 한 코드를 보려면는 `HelloServiceClass` 이 샘플에 사용 된 클래스에 대 한 예제를 참조 하십시오.는 <xref:System.Runtime.Remoting.Messaging.CallContext.GetData%2A> 메서드. 이 샘플에 사용 된 서버 클래스에 대 한 코드를 보려면 예제를 참조 하세요.는 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> 클래스입니다.  
  
 [!code-cpp[CallContext#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CallContext/CPP/client.cpp#1)]
 [!code-csharp[CallContext#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CallContext/CS/client.cs#1)]
 [!code-vb[CallContext#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CallContext/VB/client.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">에 인프라 코드와 작동 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
    <altmember cref="T:System.Runtime.Remoting.Messaging.Header" />
  </Docs>
  <Members>
    <Member MemberName="FreeNamedDataSlot">
      <MemberSignature Language="C#" Value="public static void FreeNamedDataSlot (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeNamedDataSlot(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeNamedDataSlot (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeNamedDataSlot(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member FreeNamedDataSlot : string -&gt; unit" Usage="System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">비울 데이터 슬롯의 이름입니다.</param>
        <summary>지정한 이름을 가진 데이터 슬롯을 비웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 논리 스레드에서 반환 된 하 고 해당 명명 된 데이터 슬롯을 해제 하는 명명 된 데이터 슬롯의 값을 표시 하는 원격 개체에서 메서드를 호출 하는 명명 된 데이터 슬롯을 만드는 클라이언트를 보여 줍니다.  
  
 [!code-cpp[CallContext_GetHeaders#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CallContext_GetHeaders/CPP/callcontext_client.cpp#1)]
 [!code-csharp[CallContext_GetHeaders#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CallContext_GetHeaders/CS/callcontext_client.cs#1)]
 [!code-vb[CallContext_GetHeaders#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CallContext_GetHeaders/VB/callcontext_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">직접 실행 호출자에 인프라 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">에 인프라 코드와 작동 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static object GetData (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetData(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.CallContext.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetData (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetData(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetData : string -&gt; obj" Usage="System.Runtime.Remoting.Messaging.CallContext.GetData name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">호출 컨텍스트에 있는 항목의 이름입니다.</param>
        <summary>지정한 이름으로 <see cref="T:System.Runtime.Remoting.Messaging.CallContext" />에서 개체를 검색합니다.</summary>
        <returns>지정한 이름과 관련된 호출 컨텍스트의 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Runtime.Remoting.Messaging.CallContext.GetData%2A> 전송 하는 메서드 [보안 주체 개체 및 Identity 개체](~/docs/standard/security/principal-and-identity-objects.md) id에 대 한 원격 위치에 있습니다. 에 대 한 코드를 보려면는 `LogicalCallContextData` 이 샘플에 사용 된 클래스에 대 한 예제를 참조 하십시오.는 <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> 인터페이스입니다. 샘플에 사용 되는 클라이언트 클래스에 대 한 코드를 보려면 예제를 참조 하세요.는 <xref:System.Runtime.Remoting.Messaging.CallContext> 클래스입니다. 이 샘플에 사용 된 서버 클래스에 대 한 코드를 보려면 예제를 참조 하세요.는 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> 클래스입니다.  
  
 [!code-cpp[CallContext#3](~/samples/snippets/cpp/VS_Snippets_Remoting/CallContext/CPP/service.cpp#3)]
 [!code-csharp[CallContext#3](~/samples/snippets/csharp/VS_Snippets_Remoting/CallContext/CS/service.cs#3)]
 [!code-vb[CallContext#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CallContext/VB/service.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">직접 실행 호출자에 인프라 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">에 인프라 코드와 작동 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHeaders">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.Messaging.Header[] GetHeaders ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.Messaging.Header[] GetHeaders() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.CallContext.GetHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHeaders () As Header()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Runtime::Remoting::Messaging::Header ^&gt; ^ GetHeaders();" />
      <MemberSignature Language="F#" Value="static member GetHeaders : unit -&gt; System.Runtime.Remoting.Messaging.Header[]" Usage="System.Runtime.Remoting.Messaging.CallContext.GetHeaders " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.Header[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>메서드 호출과 함께 보낸 헤더를 반환합니다.</summary>
        <returns>메서드 호출과 함께 보낸 헤더입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 헤더를 원격 메서드의 보내고 원격 메서드가 반환 될 때 콘솔에 해당 헤더의 내용을 출력 합니다.  
  
 [!code-cpp[CallContext_GetHeaders#2](~/samples/snippets/cpp/VS_Snippets_Remoting/CallContext_GetHeaders/CPP/callcontext_client.cpp#2)]
 [!code-csharp[CallContext_GetHeaders#2](~/samples/snippets/csharp/VS_Snippets_Remoting/CallContext_GetHeaders/CS/callcontext_client.cs#2)]
 [!code-vb[CallContext_GetHeaders#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CallContext_GetHeaders/VB/callcontext_client.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">직접 실행 호출자에 인프라 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">에 인프라 코드와 작동 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="HostContext">
      <MemberSignature Language="C#" Value="public static object HostContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property object HostContext" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.CallContext.HostContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property HostContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ HostContext { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostContext : obj with get, set" Usage="System.Runtime.Remoting.Messaging.CallContext.HostContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 스레드와 연결된 호스트 컨텍스트를 가져오거나 설정합니다.</summary>
        <value>현재 스레드와 연결된 호스트 컨텍스트입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">직접 실행 호출자에 인프라 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">에 인프라 코드와 작동 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="LogicalGetData">
      <MemberSignature Language="C#" Value="public static object LogicalGetData (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object LogicalGetData(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.CallContext.LogicalGetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogicalGetData (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LogicalGetData(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member LogicalGetData : string -&gt; obj" Usage="System.Runtime.Remoting.Messaging.CallContext.LogicalGetData name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">논리 호출 컨텍스트에 있는 항목의 이름입니다.</param>
        <summary>논리 호출 컨텍스트에서 지정된 이름의 개체를 검색합니다.</summary>
        <returns>지정한 이름과 관련된 논리 호출 컨텍스트의 개체입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">직접 실행 호출자에 인프라 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">에 인프라 코드와 작동 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="LogicalSetData">
      <MemberSignature Language="C#" Value="public static void LogicalSetData (string name, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogicalSetData(string name, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.CallContext.LogicalSetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LogicalSetData (name As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void LogicalSetData(System::String ^ name, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member LogicalSetData : string * obj -&gt; unit" Usage="System.Runtime.Remoting.Messaging.CallContext.LogicalSetData (name, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">논리 호출 컨텍스트의 새 항목과 연결할 이름입니다.</param>
        <param name="data">논리 호출 컨텍스트에 저장할 개체이며, 이 개체는 serialize할 수 없습니다.</param>
        <summary>지정된 개체를 논리 호출 컨텍스트에 저장하고 이를 지정한 이름에 연결합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">직접 실행 호출자에 인프라 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">에 인프라 코드와 작동 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public static void SetData (string name, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetData(string name, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.CallContext.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetData (name As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetData(System::String ^ name, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetData : string * obj -&gt; unit" Usage="System.Runtime.Remoting.Messaging.CallContext.SetData (name, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">호출 컨텍스트의 새 항목과 연결할 이름입니다.</param>
        <param name="data">호출 컨텍스트에 저장할 개체입니다.</param>
        <summary>지정된 개체를 저장하고 이를 지정한 이름에 연결합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Runtime.Remoting.Messaging.CallContext.SetData%2A> 전송 하는 메서드 [보안 주체 개체 및 Identity 개체](~/docs/standard/security/principal-and-identity-objects.md) id에 대 한 원격 위치에 있습니다. 에 대 한 코드를 보려면는 `LogicalCallContextData` 이 샘플에 사용 된 클래스에 대 한 예제를 참조 하십시오.는 <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> 인터페이스입니다. 에 대 한 코드를 보려면는 `HelloServiceClass` 이 샘플에 사용 된 클래스에 대 한 예제를 참조 하십시오.는 <xref:System.Runtime.Remoting.Messaging.CallContext.GetData%2A> 메서드. 이 샘플에 사용 된 서버 클래스에 대 한 코드를 보려면 예제를 참조 하세요.는 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> 클래스입니다.  
  
 [!code-cpp[CallContext#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CallContext/CPP/client.cpp#1)]
 [!code-csharp[CallContext#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CallContext/CS/client.cs#1)]
 [!code-vb[CallContext#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CallContext/VB/client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">직접 실행 호출자에 인프라 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">에 인프라 코드와 작동 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SetHeaders">
      <MemberSignature Language="C#" Value="public static void SetHeaders (System.Runtime.Remoting.Messaging.Header[] headers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetHeaders(class System.Runtime.Remoting.Messaging.Header[] headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.CallContext.SetHeaders(System.Runtime.Remoting.Messaging.Header[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetHeaders (headers As Header())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetHeaders(cli::array &lt;System::Runtime::Remoting::Messaging::Header ^&gt; ^ headers);" />
      <MemberSignature Language="F#" Value="static member SetHeaders : System.Runtime.Remoting.Messaging.Header[] -&gt; unit" Usage="System.Runtime.Remoting.Messaging.CallContext.SetHeaders headers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headers" Type="System.Runtime.Remoting.Messaging.Header[]" />
      </Parameters>
      <Docs>
        <param name="headers">메서드 호출과 함께 보낼 헤더의 <see cref="T:System.Runtime.Remoting.Messaging.Header" /> 배열입니다.</param>
        <summary>메서드 호출과 함께 보낸 헤더를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 논리 스레드에 적용 되는 헤더는 편의성을 보여 줍니다.  
  
 [!code-cpp[CallContext_GetHeaders#3](~/samples/snippets/cpp/VS_Snippets_Remoting/CallContext_GetHeaders/CPP/callcontext_share.cpp#3)]
 [!code-csharp[CallContext_GetHeaders#3](~/samples/snippets/csharp/VS_Snippets_Remoting/CallContext_GetHeaders/CS/callcontext_share.cs#3)]
 [!code-vb[CallContext_GetHeaders#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CallContext_GetHeaders/VB/callcontext_share.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">직접 실행 호출자에 인프라 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">에 인프라 코드와 작동 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>