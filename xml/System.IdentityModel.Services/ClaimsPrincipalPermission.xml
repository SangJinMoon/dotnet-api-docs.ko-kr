<Type Name="ClaimsPrincipalPermission" FullName="System.IdentityModel.Services.ClaimsPrincipalPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eeb199be9aad43189f1b9fc4e545b8d607add347" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52740729" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClaimsPrincipalPermission : System.Security.IPermission, System.Security.ISecurityEncodable, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ClaimsPrincipalPermission extends System.Object implements class System.Security.IPermission, class System.Security.ISecurityEncodable, class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClaimsPrincipalPermission&#xA;Implements IPermission, ISecurityEncodable, IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsPrincipalPermission sealed : System::Security::IPermission, System::Security::ISecurityEncodable, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type ClaimsPrincipalPermission = class&#xA;    interface IPermission&#xA;    interface ISecurityEncodable&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.IPermission</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b38e8-101">
        <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> 구현을 통해 리소스에 대한 액세스 권한이 활성 보안 주체에 부여되어야 하는지를 결정하는 권한을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b38e8-101">Represents a permission that uses a <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> implementation to determine if access to a resource should be granted to the active principal.</span>
      </span>
      <span data-ttu-id="b38e8-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b38e8-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38e8-103">합니다 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 클래스를 사용 하 여 명령적 액세스 검사를 수행 하는 기능을 제공 합니다 <xref:System.Security.Claims.ClaimsAuthorizationManager> 응용 프로그램에 대해 구성 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-103">The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class provides the capability to perform imperative access checks by using the <xref:System.Security.Claims.ClaimsAuthorizationManager> that is configured for an application.</span></span> <span data-ttu-id="b38e8-104">호출 하 여 합니다 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> 메서드 또는 정적 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> 메서드, 클레임 인증 관리자에 대해 정의 된 권한 부여 정책에 따라 코드의 실행 경로 내에서 리소스에 대 한 보호를 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-104">By invoking the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method or the static <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method, you can provide protection to resources from within the execution path of your code according to the authorization policy defined for your claims authentication manager.</span></span> <span data-ttu-id="b38e8-105">선언적 액세스 검사를 사용 하 여 수행할 수는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-105">Declarative access checks can be performed by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b38e8-106"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 클래스에서 구성 된 클레임 인증 관리자를 사용 하는 <xref:System.IdentityModel.Configuration.IdentityConfiguration> 아래에서 설정 된는 <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> 속성.</span><span class="sxs-lookup"><span data-stu-id="b38e8-106">The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class uses the claims authorization manager configured by the <xref:System.IdentityModel.Configuration.IdentityConfiguration> that is set under the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b38e8-107">이 WS-페더레이션 사용 되지 않습니다; 시나리오에도 모든 경우에는 예를 들어 활성 (WCF) 웹 응용 프로그램 및 콘솔 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-107">This is true in all cases, even in scenarios where WS-Federation is not used; for example, active (WCF) Web applications and Console applications.</span></span> <span data-ttu-id="b38e8-108">클레임 권한 부여 관리자 구성에서 또는 프로그래밍 방식으로 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-108">You can specify the claims authorization manager either in configuration or programmatically.</span></span> <span data-ttu-id="b38e8-109">구성 파일에서 클레임 권한 부여 관리자를 지정 하려면 설정 합니다 [ &lt;claimsAuthorizationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md) 요소 아래에 있는 [ &lt;identityConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) 요소에서이 id 구성을 참조 하는지 확인 합니다 [ &lt;federationConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md) 런타임에 의해 로드 되는 요소 (예를 들어, 여 설정 된 `identityConfigurationName` 특성).</span><span class="sxs-lookup"><span data-stu-id="b38e8-109">To specify the claims authorization manager in a configuration file, set the [&lt;claimsAuthorizationManager&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md) element under an [&lt;identityConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) element and ensure that this identity configuration is referenced by the [&lt;federationConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md) element that is loaded by the runtime (for example, by setting the `identityConfigurationName` attribute).</span></span> <span data-ttu-id="b38e8-110">클레임 인증 관리자를 프로그래밍 방식으로 설정 하려면에 대 한 처리기를 제공 합니다 <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-110">To set the claims authorization manager programmatically, provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> event.</span></span>  
  
 <span data-ttu-id="b38e8-111">그러나 어느 한 수준에서 제공 하는 기능 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 역할 기반 액세스 검사 (RBAC)을 통해 제공 하는 것과 비슷합니다는 <xref:System.Security.Permissions.PrincipalPermission> 클래스는 <xref:System.Security.Claims.ClaimsAuthorizationManager> 활성 보안 주체를 제공한 클레임을 기반으로 하는 검사를 수행 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-111">On one level, the functionality provided by <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> is similar to the role-based access checks (RBAC) provided through the <xref:System.Security.Permissions.PrincipalPermission> class; however, the <xref:System.Security.Claims.ClaimsAuthorizationManager> class performs checks based on the claims presented by the active principal.</span></span> <span data-ttu-id="b38e8-112">이 통해 훨씬 더 많은 세분성 보다 많은 권한을 단일 역할에 따라 일반적으로 수집 되는 위치 순수 RBAC를 통해 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-112">This enables far more granularity than is available through pure RBAC, where many permissions are typically collected under a single role.</span></span> <span data-ttu-id="b38e8-113">아마도, 무엇 보다도 클레임 기반 권한 부여 권한 코드에서 리소스에 대해 특정 작업이 필요할 수 있습니다는 클레임을 구성 하려면 백 엔드 정책 사용 될 수 있으므로 보다 효과적으로 분리할 비즈니스 논리 및 권한 부여 정책 사용 하도록 설정 합니다 엔터티를 제시 수요를 충족 하기 위해 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-113">Perhaps, more importantly, claims-based authorization enables better separation of business logic and authorization policy because permission can be demanded for a specific action on a resource in code and back-end policy can be used to configure which claims the presenting entity must possess in order to satisfy the demand.</span></span> <span data-ttu-id="b38e8-114">RBAC와 같은 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 에서 파생 된 클래스에서 구현 하는 코드 액세스 보안과 달리, 사용자 기반 액세스 확인을를 수행 합니다 <xref:System.Security.CodeAccessPermission> 클래스 및 스택 워크를 사용 권한으로 코드의 모든 호출자에 게 부여 되어 있는지 확인 하는 데 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission>현재 보안 주체에만 해당 검사를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-114">Like RBAC, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> performs a user-based access check, that is, unlike code access security implemented by classes that derive from the <xref:System.Security.CodeAccessPermission> class and use a stack walk to ensure that all callers of the code have been granted a permission, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> performs its check only on the current principal.</span></span>  
  
 <span data-ttu-id="b38e8-115">정적 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> 메서드는 지정된 된 리소스에 지정 된 작업에 대 한 액세스를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-115">The static <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method checks access for a specified action on a specified resource.</span></span> <span data-ttu-id="b38e8-116">리소스 및 작업은 모두 문자열은 일반적으로 Uri입니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-116">The resource and action are both strings and are typically URIs.</span></span> <span data-ttu-id="b38e8-117">인스턴스를 초기화할 수도 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 액션 리소스 및 호출을 사용 하 여는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b38e8-117">You can also initialize an instance of <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> with an action and a resource and call the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method.</span></span> <span data-ttu-id="b38e8-118">생성자는만 단일 리소스 및 작업에 사용 되지만 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 개체를 통해 결합 될 수는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> 및 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b38e8-118">Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods.</span></span> <span data-ttu-id="b38e8-119">이러한 메서드를 사용 하 여 만든 권한을 여러 리소스 작업 쌍을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-119">A permission created by using these methods may contain multiple resource-action pairs.</span></span>  
  
 <span data-ttu-id="b38e8-120">두 메서드를 호출 하 여 액세스를 확인 합니다 <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> 메서드를 사용 하 여 구성 된 클레임 인증 관리자의는 <xref:System.Security.Claims.AuthorizationContext> 활성 사용자 구성 (<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>), 리소스 및 작업.</span><span class="sxs-lookup"><span data-stu-id="b38e8-120">Both methods determine access by invoking the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> method of the configured claims authorization manager with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>), the resource, and the action.</span></span> <span data-ttu-id="b38e8-121">Throw를 <xref:System.Security.SecurityException> 현재 보안 주체는 리소스에서 작업을 수행할 권한이 없으면이 고, 그렇지 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-121">They throw a <xref:System.Security.SecurityException> if the current principal is not authorized to perform the action on the resource; otherwise, execution proceeds.</span></span>  
  
 <span data-ttu-id="b38e8-122">경우는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 여러 리소스 작업 쌍을 포함 하는 <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> 각 권한에 포함 된 리소스 작업 쌍에 대 한 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-122">In the case of a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> that contains multiple resource-action pairs, the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> method is invoked for each of the resource-action pairs contained in the permission.</span></span>  <span data-ttu-id="b38e8-123">에 대 한 호출에 대 한 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> 성공 하려면 활성 사용자 권한에 포함 된 리소스 작업 쌍의 모든 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-123">For the call to <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed, the active principal must be authorized for all of the resource-action pairs contained in the permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b38e8-124">다음 예제를 사용 하 여 리소스를 보호 하는 방법을 보여 줍니다 합니다 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> 메서드를 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> 메서드를 또는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> 선언 합니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-124">The following example shows how to protect a resource by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method, the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method, or a <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration.</span></span> <span data-ttu-id="b38e8-125">각각의 경우 구성 된 <xref:System.Security.Claims.ClaimsAuthorizationManager> 가 계산 된 지정 된 리소스 및 작업에 대 한 현재 보안 주체를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-125">In each case, the configured <xref:System.Security.Claims.ClaimsAuthorizationManager> is invoked to evaluate the current principal against the specified resource and action.</span></span> <span data-ttu-id="b38e8-126">현재 보안 주체는 지정된 된 리소스에서 지정된 된 작업에 대 한 권한이 없는 경우는 <xref:System.Security.SecurityException> throw 되 고, 그렇지 않으면 실행이 진행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-126">If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.</span></span>  
  
 [!code-csharp[WifCppWithCam#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcppwithcam/cs/wifcppwithcam/program.cs#1)]  
  
 <span data-ttu-id="b38e8-127">다음 XML 표시를 사용자 지정 클레임 권한 부여를 사용 하는 데 필요한 최소 구성을 사용 하 여 관리자는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-127">The following XML shows the minimum configuration required to use a custom claims authorization manager with the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class.</span></span> <span data-ttu-id="b38e8-128">선언 해야 합니다, 여기에 최소한 둘 다를 `system.identityModel` 및 `system.identityModel.services` 섹션을 `<configSection>` 요소에서 권한 부여 관리자를 지정 합니다는 [ &lt;claimsAuthorizationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)요소 아래에 있는 기본 id 구성이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-128">You must, at a minimum, declare both the `system.identityModel` and the `system.identityModel.services` sections in the `<configSection>` element and then specify your authorization manager in a [&lt;claimsAuthorizationManager&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md) element under the default identity configuration.</span></span> <span data-ttu-id="b38e8-129">이렇게 하면 권한 부여 관리자에 게 기본 페더레이션 구성에서 참조 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-129">This will ensure that your authorization manager is referenced from the default federation configuration.</span></span> <span data-ttu-id="b38e8-130">또는는 권한 부여 관리자에 지정 된 id 구성의 이름을 지정할 수 있습니다는 `identityConfigurationName` 특성을 [ &lt;federationConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-130">Alternatively, you can specify the name of the identity configuration under which your authorization manager is specified in the `identityConfigurationName` attribute of the [&lt;federationConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md) element.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
  <configSections>  
    <!-- WIF configuration sections -->  
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>  
    <section name="system.identityModel.services" type="System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>  
  </configSections>  
  
  <startup>  
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
  </startup>  
  
  <system.identityModel>  
    <identityConfiguration>  
      <claimsAuthorizationManager type ="MyClaimsAuthorizationManager.MyClaimsAuthorizationManager, MyClaimsAuthorizationManager"/>  
    </identityConfiguration>  
  </system.identityModel>  
  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute" />
    <altmember cref="P:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration" />
    <altmember cref="T:System.Security.Claims.ClaimsAuthorizationManager" />
    <related type="Article" href="https://msdn.microsoft.com/library/8b14054c-6d07-46ab-ab58-03f14beac0f2">
      <span data-ttu-id="b38e8-131">&lt;federationConfiguration&gt;</span>
      <span class="sxs-lookup">
        <span data-stu-id="b38e8-131">&lt;federationConfiguration&gt;</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipalPermission (string resource, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string resource, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resource As String, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipalPermission(System::String ^ resource, System::String ^ action);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.ClaimsPrincipalPermission : string * string -&gt; System.IdentityModel.Services.ClaimsPrincipalPermission" Usage="new System.IdentityModel.Services.ClaimsPrincipalPermission (resource, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resource" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resource">
          <span data-ttu-id="b38e8-132">보안 주체에 권한이 부여되어야 하는 리소스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-132">The resource on which the principal should be authorized.</span>
          </span>
        </param>
        <param name="action">
          <span data-ttu-id="b38e8-133">보안 주체에 권한이 부여되어야 하는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-133">The action for which the principal should be authorized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b38e8-134">
            <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-134">Creates a new instance of the <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38e8-135"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 개체는 지정 된 리소스 작업 쌍을 사용 하 여 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-135">The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> object is initialized with the specified resource-action pair.</span></span> <span data-ttu-id="b38e8-136">호출할 수 있습니다는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> 액세스 검사를 수행 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-136">You can call the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method to perform an access check.</span></span>  
  
 <span data-ttu-id="b38e8-137">생성자는만 단일 리소스 및 작업에 사용 되지만 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 개체를 통해 결합 될 수는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> 및 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b38e8-137">Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods.</span></span> <span data-ttu-id="b38e8-138">이러한 메서드를 통해 만든 사용 권한은 여러 리소스 작업 쌍을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-138">The permission created through these methods may contain multiple resource-action pairs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b38e8-139">
            <paramref name="resource" />이 <see langword="null" /> 또는 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-139">
              <paramref name="resource" /> is <see langword="null" /> or an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b38e8-140">
            <paramref name="action" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-140">
              <paramref name="action" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public static void CheckAccess (string resource, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckAccess(string resource, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CheckAccess (resource As String, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CheckAccess(System::String ^ resource, System::String ^ action);" />
      <MemberSignature Language="F#" Value="static member CheckAccess : string * string -&gt; unit" Usage="System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess (resource, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2103:ReviewImperativeSecurity", Justification="It is expected that the runtime's behavior would rely on changing data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2103:ReviewImperativeSecurity", Justification="It is expected that the runtime’s behavior would rely on changing data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resource">
          <span data-ttu-id="b38e8-141">보안 주체에 권한이 부여되어야 하는 리소스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-141">The resource on which the principal should be authorized.</span>
          </span>
        </param>
        <param name="action">
          <span data-ttu-id="b38e8-142">보안 주체에 권한이 부여되어야 하는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-142">The action for which the principal should be authorized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b38e8-143">지정된 리소스에 대해 지정된 작업을 수행할 수 있는 권한이 현재 주체에 부여되었는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-143">Checks if the current principal is authorized to perform the specified action on the specified resource.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38e8-144">지정된 된 리소스에서 지정된 된 작업에 대 한 보안 주체를 인증 해야 합니다 또는 <xref:System.Security.SecurityException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-144">The principal must be authorized for the specified action on the specified resource or the <xref:System.Security.SecurityException> exception is thrown.</span></span>  
  
 <span data-ttu-id="b38e8-145">합니다 <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> 구성 된 클레임 인증 관리자의 메서드가 호출 됩니다는 <xref:System.Security.Claims.AuthorizationContext> 활성 사용자 구성 (<xref:System.Threading.Thread.CurrentPrincipal%2A>), 리소스 및 작업.</span><span class="sxs-lookup"><span data-stu-id="b38e8-145">The <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> method of the configured claims authorization manager is invoked with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A>), the resource, and the action.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b38e8-146">다음 예제에서는 사용 하 여 리소스를 보호 하는 방법의 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b38e8-146">The following example shows how to protect a resource by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method.</span></span> <span data-ttu-id="b38e8-147">구성 된 클레임 인증 관리자는 지정 된 리소스 및 작업에 대 한 현재 보안 주체를 평가 하려면 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-147">The configured claims authorization manager is invoked to evaluate the current principal against the specified resource and action.</span></span> <span data-ttu-id="b38e8-148">현재 보안 주체는 지정된 된 리소스에서 지정된 된 작업에 대 한 권한이 없는 경우는 <xref:System.Security.SecurityException> throw 되 고, 그렇지 않으면 실행이 진행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-148">If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.</span></span>  
  
 [!code-csharp[WifCppWithCam#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcppwithcam/cs/wifcppwithcam/program.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b38e8-149">현재 보안 주체는 <see cref="T:System.Security.Claims.ClaimsPrincipal" />에서 할당할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-149">The current principal is not assignable from <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</span>
          </span>
          <span data-ttu-id="b38e8-150">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-150">-or-</span>
          </span>
          <span data-ttu-id="b38e8-151">구성된 <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" />가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-151">There is no <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> configured.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="b38e8-152">권한 부여 검사에 실패했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-152">The authorization check failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="claimsPrincipalPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2103:ReviewImperativeSecurity", Justification="It is expected that the runtime's behavior would rely on changing data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2103:ReviewImperativeSecurity", Justification="It is expected that the runtime’s behavior would rely on changing data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b38e8-153">현재 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 인스턴스의 복사본을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-153">Returns a copy of the current <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b38e8-154">현재 인스턴스에서 복사된 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-154">A <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> copied from the current instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit&#xA;override this.Demand : unit -&gt; unit" Usage="claimsPrincipalPermission.Demand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b38e8-155">현재 인스턴스와 연결된 리소스 작업 쌍에 대한 권한이 현재 주체에 부여되었는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-155">Checks if the current principal is authorized for the resource-action pairs associated with the current instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38e8-156">이 인스턴스와 연결 된 리소스 작업 쌍 모두에 대 한 현재 보안 주체를 인증 해야 합니다 또는 <xref:System.Security.SecurityException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-156">The current principal must be authorized for all of the resource-action pairs associated with this instance or the <xref:System.Security.SecurityException> exception is thrown.</span></span>  
  
 <span data-ttu-id="b38e8-157">생성자는만 단일 리소스 및 작업에 사용 되지만 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 개체를 통해 결합 될 수는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> 및 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b38e8-157">Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods.</span></span> <span data-ttu-id="b38e8-158">이러한 메서드를 통해 만든 사용 권한은 여러 리소스 작업 쌍을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-158">The permission created through these methods may contain multiple resource-action pairs.</span></span>  
  
 <span data-ttu-id="b38e8-159"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> 메서드를 호출 하는 <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> 메서드를 사용 하 여 구성 된 클레임 인증 관리자의는 <xref:System.Security.Claims.AuthorizationContext> 활성 사용자 구성 (<xref:System.Threading.Thread.CurrentPrincipal%2A>), 리소스 및 각 포함 리소스 작업 쌍에 대 한 작업 권한.</span><span class="sxs-lookup"><span data-stu-id="b38e8-159">The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method invokes the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> method of the configured claims authorization manager with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A>), the resource, and the action for each of the resource-action pairs contained in the permission.</span></span> <span data-ttu-id="b38e8-160">에 대 한는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> 활성 되려면 사용자 권한에 포함 된 리소스 작업 쌍의 모든 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-160">For the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed the active principal must be authorized for all of the resource-action pairs that are contained in the permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b38e8-161">다음 예제에서는 사용 하 여 리소스를 보호 하는 방법의 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b38e8-161">The following example shows how to protect a resource by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method.</span></span> <span data-ttu-id="b38e8-162">구성 된 클레임 인증 관리자는 지정 된 리소스 및 작업에 대 한 현재 보안 주체를 평가 하려면 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-162">The configured claims authorization manager is invoked to evaluate the current principal against the specified resource and action.</span></span> <span data-ttu-id="b38e8-163">현재 보안 주체는 지정된 된 리소스에서 지정된 된 작업에 대 한 권한이 없는 경우는 <xref:System.Security.SecurityException> throw 되 고, 그렇지 않으면 실행이 진행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-163">If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.</span></span>  
  
 [!code-csharp[WifCppWithCam#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcppwithcam/cs/wifcppwithcam/program.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b38e8-164">현재 보안 주체는 <see cref="T:System.Security.Claims.ClaimsPrincipal" />에서 할당할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-164">The current principal is not assignable from <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</span>
          </span>
          <span data-ttu-id="b38e8-165">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-165">-or-</span>
          </span>
          <span data-ttu-id="b38e8-166">구성된 <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" />가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-166">There is no <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> configured.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="b38e8-167">권한 부여 검사에 실패했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-167">The authorization check failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public void FromXml (System.Security.SecurityElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXml (element As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXml(System::Security::SecurityElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="claimsPrincipalPermission.FromXml element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="b38e8-168">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-168">The XML encoding to use to reconstruct the permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b38e8-169">지정된 XML 인코딩에서 현재 사용 권한 및 상태를 다시 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-169">Reconstructs the current permission and its state from the specified XML encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38e8-170">호출 하 여 생성 된 XML 인코딩을 사용 권한을 다시 생성 된 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b38e8-170">Reconstructs a permission from the XML encoding created by a call to the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b38e8-171">
            <paramref name="element" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-171">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b38e8-172">인코딩에 인식할 수 없는 요소나 특성 또는 부적합한 형식의 XML이 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-172">The encoding contains unrecognized elements or attributes or improperly formed XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="claimsPrincipalPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b38e8-173">현재 사용 권한과 교차하는 사용 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-173">The permission to intersect with the current permission.</span>
          </span>
          <span data-ttu-id="b38e8-174">
            <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />의 인스턴스여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-174">It must be an instance of <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b38e8-175">현재 권한과 지정된 권한의 교집합에 해당하는 권한을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-175">Returns a permission that is the intersection of the current permission and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b38e8-176">현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 새 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 또는 <paramref name="target" />이 <paramref name="null" />이거나 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />의 인스턴스가 아닌 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-176">A new <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> that represents the intersection of the current permission and the specified permission; or <see langword="null" /> if <paramref name="target" /> is <paramref name="null" /> or is not an instance of <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38e8-177">반환 되는 사용 권한에 현재 사용 권한 및 지정 된 사용 권한에 제공 된 리소스 작업 쌍만 합니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-177">The permission that is returned has only the resource-action pairs that were present both in the current permission and in the specified permission.</span></span> <span data-ttu-id="b38e8-178">리소스 작업 쌍에 사용 권한을 둘 중 하나만 존재 하는 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-178">Resource-action pairs that existed in only one or the other of the permissions are not included.</span></span> <span data-ttu-id="b38e8-179">에 대 한는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> 새 사용 권한을 성공 하기 위해서는 현재 보안 주체가 하기만 현재 사용 권한 및 지정한 사용 권한의 공통 된 리소스 작업 쌍에 대 한 권한을 부여할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-179">For a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed on the new permission, the current principal only needs to be authorized for the resource-action pairs that were common to the current permission and the specified permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="claimsPrincipalPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b38e8-180">하위 집합 관계를 테스트할 사용 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-180">The permission to be tested for the subset relationship.</span>
          </span>
          <span data-ttu-id="b38e8-181">
            <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />의 인스턴스여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-181">It must be an instance of <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b38e8-182">현재 사용 권한이 지정된 사용 권한의 하위 집합인지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-182">Returns a value that indicates whether current permission is a subset of the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b38e8-183">현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-183">
              <see langword="true" /> if current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38e8-184">현재 권한 모든 현재 사용 권한이 포함 된 리소스 작업 쌍도 있는 경우 지정 된 사용 권한에 지정 된 사용 권한의 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-184">The current permission is a subset of the specified permission if all of the resource-action pairs contained in the current permission are also present in the specified permission.</span></span> <span data-ttu-id="b38e8-185">하는 경우 `target` 됩니다 `null` 의 인스턴스가 아닌 경우 또는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission>의 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf%2A> 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-185">If `target` is `null` or is not an instance of <xref:System.IdentityModel.Services.ClaimsPrincipalPermission>, the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="claimsPrincipalPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b38e8-186">사용 권한이 제한되지 않았는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-186">Returns a value that indicates whether the permission is unrestricted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b38e8-187">현재 권한이 제한되지 않은 경우 <see langword="true" />이고, 제한되는 경우 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-187">
              <see langword="true" /> if the permission is unrestricted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b38e8-188">권한이 제한되지 않음을 나타내는 <see langword="true" />를 항상 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-188">Always returns <see langword="true" /> indicating that permission is unrestricted.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="claimsPrincipalPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b38e8-189">XML로 인코딩된 현재 사용 권한 및 해당 상태 형식을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-189">Returns the XML encoded form of the current permission and its state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b38e8-190">XML로 인코딩된 현재 사용 권한 및 해당 상태 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-190">The XML encoded form of the current permission and its state.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38e8-191">보안 주체가 XML로 인코딩된 양식에서 호출 하 여 재구성할 수는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b38e8-191">The principal can be reconstructed from its XML encoded form by calling the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="claimsPrincipalPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b38e8-192">현재 사용 권한과 결합할 사용 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-192">The permission to combine with current permission.</span>
          </span>
          <span data-ttu-id="b38e8-193">
            <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 형식이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-193">It must be of type <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b38e8-194">현재 권한과 지정된 권한의 합집합에 해당하는 새 권한을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-194">Returns a new permission that is the union of the current permission and the specified permission.</span>
          </span>
          <span data-ttu-id="b38e8-195">현재 인스턴스 및 대상 인스턴스에 존재하는 리소스-작업 쌍을 모두 보유하는 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-195">
              <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> object that has all of the resource-action pairs that are present in the current instance and the target instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b38e8-196">현재 사용 권한과 지정된 사용 권한의 합집합에 해당하는 새 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 또는 <paramref name="target" />이 <paramref name="null" />이거나 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />의 인스턴스가 아닌 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38e8-196">A new <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> that represents the union of the current permission and the specified permission; or <see langword="null" /> if <paramref name="target" /> is <paramref name="null" /> or is not an instance of <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38e8-197">반환 되는 사용 권한에 현재 사용 권한과에 있는 리소스 작업 쌍의 모든 및 지정한 사용 권한에 제공 된 리소스 작업 쌍의 모든.</span><span class="sxs-lookup"><span data-stu-id="b38e8-197">The permission that is returned has all of the resource-action pairs that are present in the current permission and all of the resource-action pairs that are present the specified permission.</span></span> <span data-ttu-id="b38e8-198">에 대 한는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> 새 사용 권한을 성공 하기 위해서는 현재 보안 주체가 현재 사용 권한과에 있던 리소스 작업 쌍의 모든 및 지정한 사용 권한의에 있던 리소스 작업 쌍의 모든 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b38e8-198">For a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed on the new permission, the current principal must be authorized for all of the resource-action pairs that existed in the current permission and all of the resource-action pairs that existed in the specified permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>