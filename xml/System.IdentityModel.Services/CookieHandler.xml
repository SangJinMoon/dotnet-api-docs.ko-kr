<Type Name="CookieHandler" FullName="System.IdentityModel.Services.CookieHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e234c79bb977b762d5493ec4745d5160bd1fccba" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51932637" /></Metadata><TypeSignature Language="C#" Value="public abstract class CookieHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CookieHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.CookieHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CookieHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class CookieHandler abstract" />
  <TypeSignature Language="F#" Value="type CookieHandler = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="77072-101">읽기, 쓰기 및 HTTP 클라이언트에서 세션 쿠키를 삭제 하는 것에 대 한 추상 기본 클래스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-101">Provides an abstract base class for reading, writing, and deleting session cookies on an HTTP client.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-102">합니다 <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM)의 인스턴스를 사용 합니다 <xref:System.IdentityModel.Services.CookieHandler> 읽고, 쓰고, 쿠키를 포함 하는 쿠키를 삭제 하는 클래스를 <xref:System.IdentityModel.Tokens.SessionSecurityToken> HTTP 클라이언트에서.</span><span class="sxs-lookup"><span data-stu-id="77072-102">The <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) uses an instance of the <xref:System.IdentityModel.Services.CookieHandler> class to read, write, and delete the cookie or cookies that contain the <xref:System.IdentityModel.Tokens.SessionSecurityToken> on the HTTP client.</span></span> <span data-ttu-id="77072-103">쿠키 (또는 여러 쿠키에서 세션 토큰은 분할 하는 위치에서는 쿠키를) 포함 하는 세션 토큰은 세션 쿠키 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-103">The cookie (or cookies, in the case where the session token is split across several cookies) that contains the session token is known as the session cookie.</span></span>  
  
 <span data-ttu-id="77072-104">Windows Identity Foundation (WIF)에서 구현 되는 청크 분할된 쿠키 처리기 라는 쿠키 처리기와 함께 제공 되는 <xref:System.IdentityModel.Services.ChunkedCookieHandler> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-104">Windows Identity Foundation (WIF) ships with a cookie handler called the chunked cookie handler that is implemented by the <xref:System.IdentityModel.Services.ChunkedCookieHandler> class.</span></span> <span data-ttu-id="77072-105">지정 된 청크 크기에 따라 하나 이상의 쿠키에서 세션 토큰을 분할 하는 청크 분할된 쿠키 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-105">The chunked cookie handler splits the session token across one or more cookies according to a specified chunk size.</span></span> <span data-ttu-id="77072-106">대부분의 브라우저에 따른 개별 쿠키 크기 제한에 맞게입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-106">This is to meet size limitations on individual cookies imposed by many browsers.</span></span>  
  
 <span data-ttu-id="77072-107">파생 될 수 있습니다 <xref:System.IdentityModel.Services.CookieHandler> 고유한 쿠키 처리기를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="77072-107">You can derive from <xref:System.IdentityModel.Services.CookieHandler> to create your own cookie handler.</span></span> <span data-ttu-id="77072-108">이렇게 하면 재정의 해야 합니다 <xref:System.IdentityModel.Services.CookieHandler.DeleteCore%2A>, <xref:System.IdentityModel.Services.CookieHandler.ReadCore%2A>, 및 <xref:System.IdentityModel.Services.CookieHandler.WriteCore%2A> 삭제, 읽기 및 세션 쿠키 작성의 실제 작업을 수행 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-108">When you do so, you must override the <xref:System.IdentityModel.Services.CookieHandler.DeleteCore%2A>, <xref:System.IdentityModel.Services.CookieHandler.ReadCore%2A>, and <xref:System.IdentityModel.Services.CookieHandler.WriteCore%2A> methods to perform the actual work of deleting, reading, and writing the session cookie.</span></span> <span data-ttu-id="77072-109">이러한 메서드는 일반적으로에서 쿠키 읽기를 <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> 쿠키 컬렉션 및 쓰기 또는 삭제는 <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-109">These methods typically read the cookie from the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection and write or delete cookies through the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection.</span></span> <span data-ttu-id="77072-110"><xref:System.Web.HttpContext> 개체는 요청에 액세스할 수 있으며 응답은 이러한 각 방법에 대 한 매개 변수로 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-110">The <xref:System.Web.HttpContext> object through which you can access the request and response is provided as a parameter to each of these methods.</span></span> <span data-ttu-id="77072-111">필요한 메서드 외에도 필요에 따라 속성 재정의할 수 있습니다 다른 가상 메서드에 의해 노출 되는 <xref:System.IdentityModel.Services.CookieHandler> 처리기의 동작을 사용자 지정 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-111">In addition to the required methods, you can optionally override other virtual methods properties exposed by the <xref:System.IdentityModel.Services.CookieHandler> class to customize the behavior of your handler.</span></span>  
  
 <span data-ttu-id="77072-112">여러 속성에 의해 노출 되는 <xref:System.IdentityModel.Services.CookieHandler> 기본 동작 및 세션 쿠키에 대 한 속성을 지정 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-112">Several properties are exposed by the <xref:System.IdentityModel.Services.CookieHandler> class that specify default behavior and properties for the session cookie.</span></span> <span data-ttu-id="77072-113">합니다 <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, 및 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 속성 쿠키는 유효한 도메인 및 클라이언트에 저장 되는 경로 대 한 기본 이름을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-113">The <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties supply the base name for the cookie, the domain in which it is valid and the path under which it is stored on the client.</span></span> <span data-ttu-id="77072-114"><xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> 속성 쿠키는 클라이언트 쪽 스크립트에 액세스할 수 있는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-114">The <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> property specifies whether the cookie is accessible to client-side scripts.</span></span> <span data-ttu-id="77072-115"><xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> 속성 보안 (HTTPS) 연결을 통해서만 쿠키를 전송 해야 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-115">The <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> property specifies whether the cookie should be transmitted only over secure (HTTPS) connections.</span></span> <span data-ttu-id="77072-116">경우 설정 된 <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> 속성 브라우저를 닫은 후에 유효한 상태를 유지 하는 세션에 대 한 영구 세션에 대 한 만료 시간을 설정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-116">If set, the <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> property is used to set the expiration time for persistent sessions, that is for sessions that remain valid even after the browser is closed.</span></span> <span data-ttu-id="77072-117">이러한 모든 속성에 일반적으로 기본 설정 된 해당 속성이 <xref:System.Web.HttpCookie> 처리기의 "core" 메서드를 통해 개체 (또는 개체).</span><span class="sxs-lookup"><span data-stu-id="77072-117">All of these properties have equivalent properties that are typically set on the underlying <xref:System.Web.HttpCookie> object (or objects) by the "core" methods of the handler.</span></span> <span data-ttu-id="77072-118">자세한 내용은 각 속성에 대 한 설명서를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="77072-118">For more information see the documentation for each property.</span></span>  
  
 <span data-ttu-id="77072-119">SAM에서 사용 되는 쿠키 처리기를 통해 구성을 지정할 수 있습니다 합니다 [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-119">The cookie handler that is used by the SAM can be specified in configuration through the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element.</span></span> <span data-ttu-id="77072-120">이 요소에 의해 설정 된 쿠키 처리기에 대 한 이벤트 대리자를 수정할 수 있습니다는 <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> 이벤트 또는 설정 하거나 통해 직접 액세스할 수는 <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-120">The cookie handler set by this element can be modified in an event delegate for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> event or it can be set or accessed directly through the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77072-121">다음 예제에서는 구성 형식의 사용자 지정 쿠키 처리기를 사용 하려면 SAM `MyNamespace.MyCustomCookieHandler`합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-121">The following example configures the SAM to use a custom cookie handler of type `MyNamespace.MyCustomCookieHandler`.</span></span>  
  
```xml  
<cookieHandler mode="Custom">  
    <customCookieHandler type="MyNamespace.MyCustomCookieHandler, MyAssembly" />  
</cookieHandler>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Services.ChunkedCookieHandler" />
    <related type="Article" href="https://msdn.microsoft.com/library/bfdc127f-8d94-4566-8bef-f583c6ae7398"><span data-ttu-id="77072-122">&lt;cookieHandler&gt;</span><span class="sxs-lookup"><span data-stu-id="77072-122">&lt;cookieHandler&gt;</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CookieHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CookieHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77072-123"><see cref="T:System.IdentityModel.Services.CookieHandler" /> 클래스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="77072-123">Called from constructors in derived classes to initialize the <see cref="T:System.IdentityModel.Services.CookieHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="77072-124">쿠키를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-124">Deletes a cookie.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="cookieHandler.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77072-125">기본 이름, 도메인 및 경로가 있는 현재 요청과 연결 된 쿠키를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-125">Deletes the cookie associated with the current request that has the default name, domain, and path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-126">지정 된 이름, 도메인 및 경로가 합니다 <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, 및 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-126">The name, domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span> <span data-ttu-id="77072-127">요청 된 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="77072-127">The request is specified by <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Delete : string -&gt; unit" Usage="cookieHandler.Delete name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="77072-128">쿠키의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-128">The name of the cookie.</span></span></param>
        <summary><span data-ttu-id="77072-129">지정된 된 이름 및 기본 도메인 및 경로가 있는 현재 요청과 연결 된 쿠키를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-129">Deletes the cookie associated with the current request that has the specified name and the default domain and path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-130">지정 된 도메인 및 경로가 합니다 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> 및 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-130">The domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span> <span data-ttu-id="77072-131">요청 된 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="77072-131">The request is specified by <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="77072-132"><paramref name="name" />가 <see langword="null" />이거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="77072-132"><paramref name="name" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="77072-133"><see cref="T:System.Web.HttpContext" /> 요청에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-133">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="77072-134">기본 이름, 도메인 및 경로가 있는 현재 요청과 연결 된 쿠키를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-134">Deletes the cookie associated with the current request that has the default name, domain, and path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-135">지정 된 이름, 도메인 및 경로가 합니다 <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, 및 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-135">The name, domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="77072-136">쿠키의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-136">The name of the cookie.</span></span></param>
        <param name="context"><span data-ttu-id="77072-137"><see cref="T:System.Web.HttpContext" /> 요청에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-137">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="77072-138">지정된 된 이름 및 기본 도메인 및 경로가 있는 지정 된 요청과 연결 된 쿠키를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-138">Deletes the cookie associated with the specified request that has the specified name and the default domain and path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-139">지정 된 도메인 및 경로가 합니다 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> 및 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-139">The domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="77072-140"><paramref name="name" />가 <see langword="null" />이거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="77072-140"><paramref name="name" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String, path As String, domain As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name, System::String ^ path, System::String ^ domain, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : string * string * string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete (name, path, domain, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="77072-141">쿠키의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-141">The name of the cookie.</span></span></param>
        <param name="path"><span data-ttu-id="77072-142">쿠키의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-142">The path for the cookie.</span></span></param>
        <param name="domain"><span data-ttu-id="77072-143">쿠키 도메인</span><span class="sxs-lookup"><span data-stu-id="77072-143">The domain for the cookie</span></span></param>
        <param name="context"><span data-ttu-id="77072-144"><see cref="T:System.Web.HttpContext" /> 요청에 대 한</span><span class="sxs-lookup"><span data-stu-id="77072-144">The <see cref="T:System.Web.HttpContext" /> for the request</span></span></param>
        <summary><span data-ttu-id="77072-145">지정 된 이름, 경로 및 도메인에 있는 지정한 요청과 관련 된 쿠키를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-145">Deletes the cookie associated with the specified request that has the specified name, path, and domain.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="77072-146"><paramref name="name" />가 <see langword="null" />이거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="77072-146"><paramref name="name" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteCore">
      <MemberSignature Language="C#" Value="protected abstract void DeleteCore (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeleteCore(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DeleteCore (name As String, path As String, domain As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DeleteCore(System::String ^ name, System::String ^ path, System::String ^ domain, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member DeleteCore : string * string * string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.DeleteCore (name, path, domain, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="77072-147">쿠키의 이름</span><span class="sxs-lookup"><span data-stu-id="77072-147">The name of the cookie</span></span></param>
        <param name="path"><span data-ttu-id="77072-148">쿠키의 경로</span><span class="sxs-lookup"><span data-stu-id="77072-148">The path for the cookie</span></span></param>
        <param name="domain"><span data-ttu-id="77072-149">쿠키 도메인</span><span class="sxs-lookup"><span data-stu-id="77072-149">The domain for the cookie</span></span></param>
        <param name="context"><span data-ttu-id="77072-150"><see cref="T:System.Web.HttpContext" /> 요청에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-150">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="77072-151">파생된 클래스에서 재정의 되 면 지정 된 이름, 도메인 및 경로가 있는 지정 된 요청과 연결 된 쿠키를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-151">When overridden in a derived class, deletes the cookie associated with the specified request that has the specified name, domain, and path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-152">오버 로드 된 호출 <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> 쿠키를 삭제할 수 있는 실제 작업을 수행 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-152">Called from the overloaded <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> methods to do the actual work of deleting the cookie.</span></span> <span data-ttu-id="77072-153"><xref:System.IdentityModel.Services.CookieHandler.Delete%2A> 메서드 이름 및 경로 비어 있지 않은 문자열을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-153">The <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> methods will ensure that name and path are non-empty strings.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="77072-154">이 메서드를 재정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-154">You must override this method.</span></span> <span data-ttu-id="77072-155">전적으로 개발자 구현은합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-155">The implementation is entirely up to the developer.</span></span> <span data-ttu-id="77072-156">그러나 일반적인 경우 구현에서 지정된 된 쿠키를 대체 합니다 <see cref="P:System.Web.HttpResponse.Cookies" /> 쿠키를 사용 하 여 컬렉션 <see langword="null" /> 데이터 및 만료 시간을 현재 시간 이전의 이것이 요구 사항이 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="77072-156">In the typical case, implementations replace the specified cookie in the <see cref="P:System.Web.HttpResponse.Cookies" /> collection, with a cookie that has <see langword="null" /> data and an expiration time that is set earlier than the current time; however, this is not a requirement.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public virtual string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77072-157">쿠키에 사용 되는 도메인을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-157">Gets or sets the domain used for cookies.</span></span></summary>
        <value><span data-ttu-id="77072-158">쿠키에 사용 되는 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-158">The domain used for cookies.</span></span> <span data-ttu-id="77072-159">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-159">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-160"><xref:System.Web.HttpCookie.Domain%2A?displayProperty=nameWithType> 속성에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-160">Corresponds to the <xref:System.Web.HttpCookie.Domain%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="77072-161">속성을 지정 하 여 초기화할 수 있습니다는 `domain` 특성을 [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) 요소를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-161">The property can be initialized by specifying the `domain` attribute on the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfdc127f-8d94-4566-8bef-f583c6ae7398"><span data-ttu-id="77072-162">&lt;cookieHandler&gt;</span><span class="sxs-lookup"><span data-stu-id="77072-162">&lt;cookieHandler&gt;</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HideFromClientScript">
      <MemberSignature Language="C#" Value="public virtual bool HideFromClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideFromClientScript" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HideFromClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HideFromClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideFromClientScript : bool with get, set" Usage="System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77072-163">클라이언트 스크립트에서 쿠키를 숨겨야 하는지 여부를 나타내는 값을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-163">Gets or sets a value that indicates whether the cookie should be hidden from client script.</span></span></summary>
        <value><span data-ttu-id="77072-164"><see langword="true" /> 클라이언트 스크립트에서 쿠키를 숨겨야 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-164"><see langword="true" /> if the cookie should be hidden from client script; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="77072-165">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-165">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-166">처리기에서 작성 한 쿠키의 Set-cookie 헤더에 "HttpOnly" 플래그는 내보내집니다 여부를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-166">Controls whether the "HttpOnly" flag is emitted in the Set-Cookie header for cookies written by the handler.</span></span> <span data-ttu-id="77072-167">일부 웹 브라우저는 쿠키 값에 액세스 하지 못하도록 클라이언트 쪽 스크립트를 유지 하 여이 플래그를 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-167">Some web browsers honor this flag by keeping client-side script from accessing the cookie value.</span></span>  
  
 <span data-ttu-id="77072-168">이 속성에 해당 하는 <xref:System.Web.HttpCookie.HttpOnly%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-168">This property corresponds to the <xref:System.Web.HttpCookie.HttpOnly%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="77072-169">속성을 지정 하 여 초기화할 수 있습니다는 `hideFromScript` 특성을 [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) 요소를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-169">The property can be initialized by specifying the `hideFromScript` attribute on the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCookiePath">
      <MemberSignature Language="C#" Value="public virtual string MatchCookiePath (Uri baseUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MatchCookiePath(class System.Uri baseUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.MatchCookiePath(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchCookiePath (baseUri As Uri, targetUri As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ MatchCookiePath(Uri ^ baseUri, Uri ^ targetUri);" />
      <MemberSignature Language="F#" Value="abstract member MatchCookiePath : Uri * Uri -&gt; string&#xA;override this.MatchCookiePath : Uri * Uri -&gt; string" Usage="cookieHandler.MatchCookiePath (baseUri, targetUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="77072-170">요청의 기본 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-170">The base URL of the request.</span></span></param>
        <param name="targetUri"><span data-ttu-id="77072-171">일치 하는 URL</span><span class="sxs-lookup"><span data-stu-id="77072-171">The URL to match</span></span></param>
        <summary><span data-ttu-id="77072-172">대상 도메인이 쿠키 도메인 내에서 대상 경로가 쿠키 경로 내에서 쿠키 경로 부분의 대/소문자를 일치 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-172">If the target domain is within the cookie domain and the target path is within the cookie path, match the casing of the cookie path portion.</span></span></summary>
        <returns><span data-ttu-id="77072-173"><see cref="T:System.String" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-173">Returns <see cref="T:System.String" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77072-174">처리기에서 작성 한 쿠키의 기본 이름을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-174">Gets or sets the base name for cookies written by the handler.</span></span></summary>
        <value><span data-ttu-id="77072-175">쿠키에 사용할 기본 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-175">The base name to use for cookies.</span></span> <span data-ttu-id="77072-176">기본값은 "FedAuth"입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-176">The default is "FedAuth".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-177">이 속성에 해당 하는 <xref:System.Web.HttpCookie.Name%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-177">This property corresponds to the <xref:System.Web.HttpCookie.Name%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="77072-178">속성을 지정 하 여 초기화할 수 있습니다는 `name` 특성을 [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) 요소를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-178">The property can be initialized by specifying the `name` attribute on the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="77072-179">설정 하려는 시도가 <see langword="null" /> 또는 빈 값이 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-179">An attempt to set a <see langword="null" /> or empty value occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77072-180">처리기에서 작성 한 쿠키의 가상 경로 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-180">Gets or sets the virtual path for cookies written by the handler.</span></span></summary>
        <value><span data-ttu-id="77072-181">가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-181">The virtual path.</span></span> <span data-ttu-id="77072-182">기본값은 ASP.NET 응용 프로그램의 루트입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-182">Defaults to the root of the ASP.NET application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-183">이 속성에 해당 하는 <xref:System.Web.HttpCookie.Path%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-183">This property corresponds to the <xref:System.Web.HttpCookie.Path%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="77072-184">속성을 지정 하 여 초기화할 수 있습니다는 `path` 특성을 [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) 요소를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-184">The property can be initialized by specifying the `path` attribute on the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="77072-185">설정 하려는 시도가 <see langword="null" /> 또는 빈 값이 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-185">An attempt to set a <see langword="null" /> or empty value occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PersistentSessionLifetime">
      <MemberSignature Language="C#" Value="public virtual Nullable&lt;TimeSpan&gt; PersistentSessionLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; PersistentSessionLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PersistentSessionLifetime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;TimeSpan&gt; PersistentSessionLifetime { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentSessionLifetime : Nullable&lt;TimeSpan&gt; with get, set" Usage="System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77072-186">영구 세션의 수명입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-186">The lifetime of persistent sessions.</span></span> <span data-ttu-id="77072-187">0 이면 임시 세션이 항상 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="77072-187">If zero, transient sessions are always used.</span></span></summary>
        <value><span data-ttu-id="77072-188">세션 수명입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-188">The session lifetime.</span></span> <span data-ttu-id="77072-189">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-189">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-190">영구 세션에 대 한 티켓 웹 브라우저를 닫았다가 후 로그인 세션이 계속 될 수 있습니다 즉 파일 기반 쿠키에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="77072-190">Tickets for persistent sessions are stored in file-based cookies, meaning that the sign-in session may continue after the web browser is closed and reopened.</span></span>  
  
 <span data-ttu-id="77072-191">이 속성 집합을 사용 하 여 <xref:System.Web.HttpCookie.Expires%2A?displayProperty=nameWithType> 속성.</span><span class="sxs-lookup"><span data-stu-id="77072-191">This property is used to set the <xref:System.Web.HttpCookie.Expires%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="77072-192">속성을 지정 하 여 초기화할 수 있습니다는 `persistentSessionLifetime` 특성을 [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) 요소를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-192">The property can be initialized by specifying the `persistentSessionLifetime` attribute on the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="77072-193">0 보다 작은 값을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-193">A value that is less than zero is specified.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="77072-194">쿠키를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="77072-194">Reads a cookie.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read" />
      <MemberSignature Language="VB.NET" Value="Public Function Read () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read();" />
      <MemberSignature Language="F#" Value="member this.Read : unit -&gt; byte[]" Usage="cookieHandler.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77072-195">기본 이름이 있는 현재 요청과 연결 된 쿠키를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="77072-195">Reads the cookie associated with the current request that has the default name.</span></span></summary>
        <returns><span data-ttu-id="77072-196">쿠키 값 또는 <see langword="null" /> 경우 쿠키를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="77072-196">The cookie value or <see langword="null" /> if the cookie was not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-197">쿠키의 이름으로 지정 된 <xref:System.IdentityModel.Services.CookieHandler.Name%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-197">The name of the cookie is specified by the <xref:System.IdentityModel.Services.CookieHandler.Name%2A> property.</span></span> <span data-ttu-id="77072-198">요청 된 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-198">The request is specified by <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (name As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Read : string -&gt; byte[]" Usage="cookieHandler.Read name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="77072-199">읽을 쿠키의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-199">The name of the cookie to read.</span></span></param>
        <summary><span data-ttu-id="77072-200">지정한 이름이 있는 현재 요청과 연결 된 쿠키를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="77072-200">Reads the cookie associated with the current request that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="77072-201">쿠키 값 또는 <see langword="null" /> 경우 쿠키를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="77072-201">The cookie value or <see langword="null" /> if the cookie was not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-202">요청 된 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="77072-202">The request is specified by <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="77072-203"><paramref name="name" />가 <see langword="null" />이거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="77072-203"><paramref name="name" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Read : System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.Read context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="77072-204"><see cref="T:System.Web.HttpContext" /> 요청에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-204">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="77072-205">기본 이름, 도메인 및 경로가 있는 현재 요청과 연결 된 쿠키를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="77072-205">Reads the cookie associated with the current request that has the default name, domain, and path.</span></span></summary>
        <returns><span data-ttu-id="77072-206">쿠키 값 또는 <see langword="null" /> 경우 쿠키를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="77072-206">The cookie value or <see langword="null" /> if the cookie was not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-207">쿠키의 이름으로 지정 된 <xref:System.IdentityModel.Services.CookieHandler.Name%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-207">The name of the cookie is specified by the <xref:System.IdentityModel.Services.CookieHandler.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (name As String, context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Read : string * System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.Read (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="77072-208">읽을 쿠키의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-208">The name of the cookie to read.</span></span></param>
        <param name="context"><span data-ttu-id="77072-209"><see cref="T:System.Web.HttpContext" /> 요청에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-209">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="77072-210">지정된 된 이름 및 기본 도메인 및 경로가 있는 지정 된 요청과 연결 된 쿠키를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="77072-210">Reads the cookie associated with the specified request that has the specified name and the default domain and path.</span></span></summary>
        <returns><span data-ttu-id="77072-211">쿠키 값 또는 <see langword="null" /> 경우 쿠키를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="77072-211">The cookie value or <see langword="null" /> if the cookie was not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="77072-212"><paramref name="name" />가 <see langword="null" />이거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="77072-212"><paramref name="name" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadCore">
      <MemberSignature Language="C#" Value="protected abstract byte[] ReadCore (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ReadCore(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.ReadCore(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadCore (name As String, context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ ReadCore(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ReadCore : string * System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.ReadCore (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="77072-213">쿠키의 이름</span><span class="sxs-lookup"><span data-stu-id="77072-213">The name of the cookie</span></span></param>
        <param name="context"><span data-ttu-id="77072-214"><see cref="T:System.Web.HttpContext" /> 요청에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-214">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="77072-215">파생된 클래스에서 재정의 되 면 지정한 이름의 쿠키를 읽고 지정 된 요청과 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-215">When overridden in a derived class, reads the cookie that has the specified name and that is associated with the specified request.</span></span></summary>
        <returns><span data-ttu-id="77072-216">쿠키 값 또는 <see langword="null" /> 쿠키 없는 경우</span><span class="sxs-lookup"><span data-stu-id="77072-216">The cookie value or <see langword="null" /> if the cookie was not found</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-217">오버 로드 된 호출 <xref:System.IdentityModel.Services.CookieHandler.Read%2A> 쿠키를 읽는의 실제 작업을 수행 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-217">Called from the overloaded <xref:System.IdentityModel.Services.CookieHandler.Read%2A> methods to do the actual work of reading the cookie.</span></span> <span data-ttu-id="77072-218">합니다 <xref:System.IdentityModel.Services.CookieHandler.Read%2A> 메서드를 사용 하면는 `name` 비어 있지 않은 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-218">The <xref:System.IdentityModel.Services.CookieHandler.Read%2A> methods will ensure that `name` is a non-empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="77072-219">이 메서드를 재정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-219">You must override this method.</span></span> <span data-ttu-id="77072-220">전적으로 개발자 구현은합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-220">The implementation is entirely up to the developer.</span></span> <span data-ttu-id="77072-221">하지만 일반적인 경우 구현에서 쿠키 데이터를 읽을 <see cref="P:System.Web.HttpRequest.Cookies" /> 컬렉션이 요구 사항은 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="77072-221">In the typical case, implementations read the cookie data from the <see cref="P:System.Web.HttpRequest.Cookies" /> collection, however, this is not a requirement.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RequireSsl">
      <MemberSignature Language="C#" Value="public virtual bool RequireSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireSsl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.RequireSsl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RequireSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequireSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireSsl : bool with get, set" Usage="System.IdentityModel.Services.CookieHandler.RequireSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77072-222">SSL에만 쿠키를 사용할지 여부를 지정 하는 값을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-222">Gets or sets a value that specifies whether the cookie should be used only with SSL.</span></span></summary>
        <value><span data-ttu-id="77072-223"><see langword="true" /> 쿠키에 SSL 연결;만 사용 해야 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-223"><see langword="true" /> if the cookie should only be used over an SSL connection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="77072-224">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-224">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-225">작성 된 쿠키를 Set-cookie 헤더에 "Secure" 플래그 내보내집니다 여부를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-225">Controls whether the "Secure" flag in the Set-Cookie header is emitted for any cookies written.</span></span> <span data-ttu-id="77072-226">이 값이 `true`세션 쿠키는 https만 사용할 수는 있습니다.</span><span class="sxs-lookup"><span data-stu-id="77072-226">If this value is `true`, the session cookies will only be available over HTTPS.</span></span>  
  
 <span data-ttu-id="77072-227">이 속성에 해당 하는 <xref:System.Web.HttpCookie.Secure%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-227">This property corresponds to the <xref:System.Web.HttpCookie.Secure%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="77072-228">속성을 지정 하 여 초기화할 수 있습니다는 `requireSSL` 특성을 [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) 요소를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-228">The property can be initialized by specifying the `requireSSL` attribute on the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="77072-229">쿠키를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-229">Writes a cookie.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, bool isPersistent, valuetype System.DateTime tokenExpirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), isPersistent As Boolean, tokenExpirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * bool * DateTime -&gt; unit" Usage="cookieHandler.Write (value, isPersistent, tokenExpirationTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
        <Parameter Name="tokenExpirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="77072-230">쿠키 값입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-230">The cookie value.</span></span></param>
        <param name="isPersistent"><span data-ttu-id="77072-231"><see langword="true" /> 영구 쿠키인 경우 <see langword="false" /> 쿠키는 세션 전용, 즉, 클라이언트의 브라우저 때 까지만 유효한 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="77072-231"><see langword="true" /> if the cookie is persistent; <see langword="false" /> if the cookie is session-only, that is, only valid until the browser on the client is closed.</span></span></param>
        <param name="tokenExpirationTime"><span data-ttu-id="77072-232">기본 토큰에 대 한 만료 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-232">The expiration time for the underlying token.</span></span></param>
        <summary><span data-ttu-id="77072-233">지정 된 값, 지 속성 및 만료 시간이 있는 현재 요청과 연결 된 쿠키를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-233">Writes a cookie associated with the current request that has the specified value, persistence, and expiration time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-234">경우는 `isPersistent` 매개 변수가 `false`, 쿠키 만료 시간은으로 설정 됩니다 <xref:System.DateTime.MinValue?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-234">If the `isPersistent` parameter is `false`, the cookie expiration time is set to <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="77072-235">경우는 `isPersistent` 매개 변수는 `true`, 쿠키 만료 시간은 값으로 설정 됩니다는 <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> 있지 않으면 속성 `null` 또는 합니다 <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> 속성은 `null`, 만료 시간은 합니다 값으로설정됩니다`tokenExpirationTime` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-235">If the `isPersistent` parameter is `true`, the cookie expiration time is set to the value of the <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> property if it is not `null` or, if the <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> property is `null`, the expiration time is set to the value of the `tokenExpirationTime` parameter.</span></span>  
  
 <span data-ttu-id="77072-236">지정 된 쿠키 이름, 도메인 및 경로가 합니다 <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, 및 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-236">The cookie name, domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span> <span data-ttu-id="77072-237">요청 된 <xref:System.Web.HttpContext.Current%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-237">The request is specified by <xref:System.Web.HttpContext.Current%2A>.</span></span> <span data-ttu-id="77072-238">지정 된 SSL을 통해서만 쿠키를 보내야 하는지 여부를 <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> 하 여 지정 된 속성 및 클라이언트 쪽 스크립트에서 쿠키를 숨겨야 하는지 여부를 <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-238">Whether the cookie should be sent only over SSL is specified by the <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> property and whether the cookie should be hidden from client-side scripts is specified by the <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="77072-239"><paramref name="value" />가 <see langword="null" />이거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="77072-239"><paramref name="value" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, expirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, DateTime expirationTime);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * DateTime -&gt; unit" Usage="cookieHandler.Write (value, name, expirationTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="77072-240">쿠키 값입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-240">The cookie value.</span></span></param>
        <param name="name"><span data-ttu-id="77072-241">쿠키의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-241">The name of the cookie.</span></span></param>
        <param name="expirationTime"><span data-ttu-id="77072-242">쿠키의 만료 시간 또는 <see cref="F:System.DateTime.MinValue" /> 세션 (세션 전용) 쿠키에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-242">The expiration time for the cookie, or <see cref="F:System.DateTime.MinValue" /> for a session (session-only) cookie.</span></span></param>
        <summary><span data-ttu-id="77072-243">지정 된 이름, 값 및 만료 시간이 있는 현재 요청과 연결 된 쿠키를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-243">Writes a cookie associated with the current request that has the specified name, value, and expiration time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-244">쿠키 도메인 및 경로가 하 여 지정 된 된 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> 및 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-244">The cookie domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span> <span data-ttu-id="77072-245">요청 된 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-245">The request is specified by <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="77072-246">요청 된 <xref:System.Web.HttpContext.Current%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-246">The request is specified by <xref:System.Web.HttpContext.Current%2A>.</span></span> <span data-ttu-id="77072-247">지정 된 SSL을 통해서만 쿠키를 보내야 하는지 여부를 <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> 하 여 지정 된 속성 및 클라이언트 쪽 스크립트에서 쿠키를 숨겨야 하는지 여부를 <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-247">Whether the cookie should be sent only over SSL is specified by the <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> property and whether the cookie should be hidden from client-side scripts is specified by the <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="77072-248"><paramref name="value" />가 <see langword="null" />이거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="77072-248"><paramref name="value" /> is <see langword="null" /> or empty.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="77072-249"><paramref name="name" />가 <see langword="null" />이거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="77072-249"><paramref name="name" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, expirationTime As DateTime, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, DateTime expirationTime, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * DateTime * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Write (value, name, expirationTime, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="77072-250">쿠키 값입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-250">The cookie value.</span></span></param>
        <param name="name"><span data-ttu-id="77072-251">쿠키의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-251">The name of the cookie.</span></span></param>
        <param name="expirationTime"><span data-ttu-id="77072-252">쿠키의 만료 시간 또는 <see cref="F:System.DateTime.MinValue" /> 세션 (세션 전용) 쿠키에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-252">The expiration time for the cookie, or <see cref="F:System.DateTime.MinValue" /> for a session (session-only) cookie.</span></span></param>
        <param name="context"><span data-ttu-id="77072-253"><see cref="T:System.Web.HttpContext" /> 요청에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-253">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="77072-254">지정 된 이름, 값 및 만료 시간이 있는 지정한 요청과 관련 된 쿠키를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-254">Writes a cookie associated with the specified request that has the specified name, value, and expiration time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-255">쿠키 도메인 및 경로가 하 여 지정 된 된 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> 및 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-255">The cookie domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span> <span data-ttu-id="77072-256">요청 된 <xref:System.Web.HttpContext.Current%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-256">The request is specified by <xref:System.Web.HttpContext.Current%2A>.</span></span> <span data-ttu-id="77072-257">지정 된 SSL을 통해서만 쿠키를 보내야 하는지 여부를 <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> 하 여 지정 된 속성 및 클라이언트 쪽 스크립트에서 쿠키를 숨겨야 하는지 여부를 <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-257">Whether the cookie should be sent only over SSL is specified by the <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> property and whether the cookie should be hidden from client-side scripts is specified by the <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="77072-258"><paramref name="value" />가 <see langword="null" />이거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="77072-258"><paramref name="value" /> is <see langword="null" /> or empty.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="77072-259"><paramref name="name" />가 <see langword="null" />이거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="77072-259"><paramref name="name" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, string path, string domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, path As String, domain As String, expirationTime As DateTime, requiresSsl As Boolean, hideFromClientScript As Boolean, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, System::String ^ path, System::String ^ domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * string * string * DateTime * bool * bool * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Write (value, name, path, domain, expirationTime, requiresSsl, hideFromClientScript, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="requiresSsl" Type="System.Boolean" />
        <Parameter Name="hideFromClientScript" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="77072-260">쿠키 값입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-260">The cookie value.</span></span></param>
        <param name="name"><span data-ttu-id="77072-261">쿠키의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-261">The name of the cookie.</span></span></param>
        <param name="path"><span data-ttu-id="77072-262">쿠키의 경로</span><span class="sxs-lookup"><span data-stu-id="77072-262">The path for the cookie</span></span></param>
        <param name="domain"><span data-ttu-id="77072-263">쿠키 도메인</span><span class="sxs-lookup"><span data-stu-id="77072-263">The domain for the cookie</span></span></param>
        <param name="expirationTime"><span data-ttu-id="77072-264">쿠키의 만료 시간 또는 <see cref="F:System.DateTime.MinValue" /> 세션 (세션 전용) 쿠키에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-264">The expiration time for the cookie, or <see cref="F:System.DateTime.MinValue" /> for a session (session-only) cookie.</span></span></param>
        <param name="requiresSsl"><span data-ttu-id="77072-265"><see langword="true" /> 쿠키에 SSL 연결;만 사용 해야 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-265"><see langword="true" /> if the cookie should only be used over an SSL connection; otherwise, <see langword="false" />.</span></span></param>
        <param name="hideFromClientScript"><span data-ttu-id="77072-266"><see langword="true" /> 클라이언트 스크립트에서 쿠키를 숨겨야 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-266"><see langword="true" /> if the cookie should be hidden from client script; otherwise, <see langword="false" />.</span></span></param>
        <param name="context"><span data-ttu-id="77072-267"><see cref="T:System.Web.HttpContext" /> 요청에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-267">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="77072-268">지정 된 이름, 값, 도메인, 경로, 만료 시간 및 표시 유형 있는 지정한 요청과 관련 된 쿠키를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-268">Writes a cookie associated with the specified request that has the specified name, value, domain, path, expiration time, and visibility.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="77072-269"><paramref name="value" />가 <see langword="null" />이거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="77072-269"><paramref name="value" /> is <see langword="null" /> or empty.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="77072-270"><paramref name="name" />가 <see langword="null" />이거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="77072-270"><paramref name="name" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteCore (byte[] value, string name, string path, string domain, DateTime expirationTime, bool secure, bool httpOnly, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteCore(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool secure, bool httpOnly, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteCore (value As Byte(), name As String, path As String, domain As String, expirationTime As DateTime, secure As Boolean, httpOnly As Boolean, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteCore(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, System::String ^ path, System::String ^ domain, DateTime expirationTime, bool secure, bool httpOnly, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member WriteCore : byte[] * string * string * string * DateTime * bool * bool * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.WriteCore (value, name, path, domain, expirationTime, secure, httpOnly, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="secure" Type="System.Boolean" />
        <Parameter Name="httpOnly" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="77072-271">쿠키 값입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-271">The cookie value.</span></span></param>
        <param name="name"><span data-ttu-id="77072-272">쿠키의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-272">The name of the cookie.</span></span></param>
        <param name="path"><span data-ttu-id="77072-273">쿠키의 경로</span><span class="sxs-lookup"><span data-stu-id="77072-273">The path for the cookie</span></span></param>
        <param name="domain"><span data-ttu-id="77072-274">쿠키 도메인</span><span class="sxs-lookup"><span data-stu-id="77072-274">The domain for the cookie</span></span></param>
        <param name="expirationTime"><span data-ttu-id="77072-275">쿠키의 만료 시간 또는 <see cref="F:System.DateTime.MinValue" /> 세션 (세션 전용) 쿠키에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-275">The expiration time for the cookie, or <see cref="F:System.DateTime.MinValue" /> for a session (session-only) cookie.</span></span></param>
        <param name="secure"><span data-ttu-id="77072-276"><see langword="true" /> 쿠키에 SSL 연결;만 사용 해야 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-276"><see langword="true" /> if the cookie should only be used over an SSL connection; otherwise, <see langword="false" />.</span></span></param>
        <param name="httpOnly"><span data-ttu-id="77072-277"><see langword="true" /> 클라이언트 스크립트에서 쿠키를 숨겨야 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-277"><see langword="true" /> if the cookie should be hidden from client script; otherwise, <see langword="false" />.</span></span></param>
        <param name="context"><span data-ttu-id="77072-278"><see cref="T:System.Web.HttpContext" /> 요청에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-278">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="77072-279">파생된 클래스에서 재정의 되 면 지정 된 이름, 값, 도메인, 경로, 만료 시간, 지 속성 및 표시 유형 있는 지정한 요청과 관련 된 쿠키를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-279">When overridden in a derived class, writes a cookie associated with the specified request that has the specified name, value, domain, path, expiration time, persistence and visibility.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77072-280">오버 로드 된 호출 <xref:System.IdentityModel.Services.CookieHandler.Write%2A> 쿠키를 작성 하는 실제 작업을 수행 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-280">Called from the overloaded <xref:System.IdentityModel.Services.CookieHandler.Write%2A> methods to do the actual work of writing the cookie.</span></span> <span data-ttu-id="77072-281"><xref:System.IdentityModel.Services.CookieHandler.Write%2A> 메서드는 했는지 `value` 이며 비어 있지 않은 바이트 배열입니다 `name` 및 `path` 는 비어 있지 않은 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-281">The <xref:System.IdentityModel.Services.CookieHandler.Write%2A> methods will ensure that `value` is a non-empty byte array and that `name` and `path` are non-empty strings.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="77072-282">이 메서드를 재정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-282">You must override this method.</span></span> <span data-ttu-id="77072-283">전적으로 개발자 구현은합니다.</span><span class="sxs-lookup"><span data-stu-id="77072-283">The implementation is entirely up to the developer.</span></span> <span data-ttu-id="77072-284">하지만 일반적인 경우 구현에 쿠키 데이터를 쓸는 <see cref="P:System.Web.HttpResponse.Cookies" /> 컬렉션이 요구 사항은 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="77072-284">In the typical case, implementations write the cookie data to the <see cref="P:System.Web.HttpResponse.Cookies" /> collection, however, this is not a requirement.</span></span> <span data-ttu-id="77072-285">메서드의 대부분의 매개 변수는 일반적으로 하나 이상에 해당 하는 속성을 설정 하는 데 사용 됩니다 <see cref="T:System.Web.HttpCookie" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="77072-285">Most parameters of the method are typically used to set equivalent properties on one or more <see cref="T:System.Web.HttpCookie" /> objects.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>