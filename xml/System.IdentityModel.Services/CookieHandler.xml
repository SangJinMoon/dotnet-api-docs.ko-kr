<Type Name="CookieHandler" FullName="System.IdentityModel.Services.CookieHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d23e5774bf0f999d5f53db9d0abae109f03d3d70" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30420057" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CookieHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CookieHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.CookieHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CookieHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class CookieHandler abstract" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>HTTP 클라이언트에서 세션 쿠기를 읽고 쓰고 삭제하기 위한 추상 기본 클래스를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM)의 인스턴스를 사용 하 여는 <xref:System.IdentityModel.Services.CookieHandler> 읽기, 쓰기 및 쿠키 또는 포함 하는 쿠키를 삭제 하는 클래스는 <xref:System.IdentityModel.Tokens.SessionSecurityToken> HTTP 클라이언트입니다. 쿠키 (또는 여러 개의 쿠키에서 세션 토큰 분할 되는 있는 경우에서 쿠키) 세션 쿠키 토큰 라고도 하는 세션을 포함 하 합니다.  
  
 Windows Identity Foundation (WIF)에서 구현 되는 청크 분할된 쿠키가 처리기 라는 쿠키 처리기와 함께 제공 되는 <xref:System.IdentityModel.Services.ChunkedCookieHandler> 클래스입니다. 청크 분할된 쿠키가 처리기는 지정 된 청크 크기에 따라 하나 이상의 쿠키에서 세션 토큰을 분할합니다. 다양 한 브라우저에 따라 적용 되는 개별 쿠키에 대 한 크기 제한에 맞게입니다.  
  
 파생 시켜 <xref:System.IdentityModel.Services.CookieHandler> 고유한 쿠키 처리기를 만듭니다. 이렇게 하면 재정의 해야는 <xref:System.IdentityModel.Services.CookieHandler.DeleteCore%2A>, <xref:System.IdentityModel.Services.CookieHandler.ReadCore%2A>, 및 <xref:System.IdentityModel.Services.CookieHandler.WriteCore%2A> 삭제, 읽기 및 쓰기 세션 쿠키의 실제 작업을 수행 하는 메서드. 이러한 메서드는 일반적으로 쿠키를 읽기는 <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> 통해 쿠키 컬렉션 및 쓰기 또는 삭제는 <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> 컬렉션입니다. <xref:System.Web.HttpContext> 개체는 요청에 액세스할 수 있으며 응답은 이러한 각 방법에 대 한 매개 변수로 제공 합니다. 필요한 메서드 외에도 필요에 따라 속성 재정의할 수 있습니다 다른 가상 메서드에 의해 노출 되는 <xref:System.IdentityModel.Services.CookieHandler> 처리기의 동작 사용자 지정 하는 클래스입니다.  
  
 여러 속성에 의해 노출 되는 <xref:System.IdentityModel.Services.CookieHandler> 세션 쿠키에 대 한 속성과 기본 동작을 지정 하는 클래스입니다. <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, 및 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 속성 쿠키은 유효한 도메인 및 클라이언트에 저장 되는 경로 대 한 기본 이름을 제공 합니다. <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> 속성 쿠키는 클라이언트 쪽 스크립트에 액세스할 수 있는지 여부를 지정 합니다. <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> 속성 보안 (HTTPS) 연결을 통해서만 쿠키를 전송 해야 하는지 여부를 지정 합니다. 경우 설정 된 <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> 속성을 사용 하는 브라우저를 닫은 후에 유효한 남아 있는 세션에 있는 영구 세션에 대 한 만료 시간을 설정 합니다. 일반적으로 내부에 설정 된 해당 속성은 이러한 모든 속성 <xref:System.Web.HttpCookie> 처리기의 "core" 메서드에서 개체 (또는 개체). 자세한 내용은 각 속성에 대 한 설명서를 참조 합니다.  
  
 SAM에서 사용 되는 쿠키 처리기를 통해 구성에 지정할 수 있습니다는 [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) 요소입니다. 이 요소에 의해 설정 쿠키 처리기에 대 한 이벤트 대리자를 수정할 수는 <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> 이벤트 이거나 설정 하거나 통해 직접 액세스할 수는 <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A?displayProperty=nameWithType> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 구성 유형의 사용자 지정 쿠키 처리기 사용 하 여 SAM `MyNamespace.MyCustomCookieHandler`합니다.  
  
```xml  
<cookieHandler mode="Custom">  
    <customCookieHandler type="MyNamespace.MyCustomCookieHandler, MyAssembly" />  
</cookieHandler>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Services.ChunkedCookieHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CookieHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CookieHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.IdentityModel.Services.CookieHandler" /> 클래스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>쿠키를 삭제합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 이름, 도메인 및 경로가 있는 현재 요청과 연결된 쿠키를 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 된 이름, 도메인 및 경로 <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, 및 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 속성입니다. 요청을 지정 하 여 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">쿠키의 이름입니다.</param>
        <summary>지정된 이름과 기본 도메인 및 경로가 있는 현재 요청과 연결된 쿠키를 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 도메인 및 경로 의해 지정 되는 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> 및 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 속성입니다. 요청을 지정 하 여 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" />가 <see langword="null" />이거나 비어 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">요청에 대한 <see cref="T:System.Web.HttpContext" />입니다.</param>
        <summary>기본 이름, 도메인 및 경로가 있는 현재 요청과 연결된 쿠키를 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 된 이름, 도메인 및 경로 <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, 및 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">쿠키의 이름입니다.</param>
        <param name="context">요청에 대한 <see cref="T:System.Web.HttpContext" />입니다.</param>
        <summary>지정된 이름과 기본 도메인 및 경로가 있는 지정된 요청과 연결된 쿠키를 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 도메인 및 경로 의해 지정 되는 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> 및 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" />가 <see langword="null" />이거나 비어 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String, path As String, domain As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name, System::String ^ path, System::String ^ domain, System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">쿠키의 이름입니다.</param>
        <param name="path">쿠키의 경로입니다.</param>
        <param name="domain">쿠키 도메인</param>
        <param name="context">요청의 <see cref="T:System.Web.HttpContext" /></param>
        <summary>지정된 이름, 경로 및 도메인이 있는 지정된 요청과 연결된 쿠키를 삭제합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" />가 <see langword="null" />이거나 비어 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteCore">
      <MemberSignature Language="C#" Value="protected abstract void DeleteCore (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeleteCore(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DeleteCore (name As String, path As String, domain As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DeleteCore(System::String ^ name, System::String ^ path, System::String ^ domain, System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">쿠키 이름</param>
        <param name="path">쿠키의 경로</param>
        <param name="domain">쿠키 도메인</param>
        <param name="context">요청에 대한 <see cref="T:System.Web.HttpContext" />입니다.</param>
        <summary>파생된 클래스에서 재정의된 경우 지정한 이름, 도메인 및 경로가 있는 지정된 요청과 연결된 쿠키를 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 오버 로드 된 호출 <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> 쿠키를 삭제할 경우의 실제 작업을 수행 하는 메서드. <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> 메서드 이름 및 경로 비어 있지 않은 문자열을 확인 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>이 메서드를 재정의 해야 합니다. 전적으로 개발자는 구현이입니다. 그러나 일반적인 경우 구현에서 지정된 된 쿠키를 대체는 <see cref="P:System.Web.HttpResponse.Cookies" /> 있는 쿠키를 사용 하 여 컬렉션 <see langword="null" /> 데이터와; 현재 시간 이전의 요구 사항은 아닙니다는 설정 된 만료 시간입니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public virtual string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>쿠키에 사용되는 도메인을 가져오거나 설정합니다.</summary>
        <value>쿠키에 사용된 도메인입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCookie.Domain%2A?displayProperty=nameWithType> 속성에 해당합니다.  
  
 속성을 지정 하 여 초기화할 수는 `domain` 특성에 [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) 구성 요소입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideFromClientScript">
      <MemberSignature Language="C#" Value="public virtual bool HideFromClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideFromClientScript" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HideFromClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HideFromClientScript { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클라이언트 스크립트에서 쿠키를 숨겨야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          쿠키를 클라이언트 스크립트에서 숨겨야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리기에 의해 작성 된 쿠키를 Set-cookie 헤더에 "HttpOnly" 플래그 내보낼 있는지 여부를 제어 합니다. 일부 웹 브라우저 쿠키 값에 액세스할 수 없게 클라이언트 쪽 스크립트를 유지 하 여이 플래그를 인식 합니다.  
  
 이 속성에 해당 하는 <xref:System.Web.HttpCookie.HttpOnly%2A?displayProperty=nameWithType> 속성입니다.  
  
 속성을 지정 하 여 초기화할 수는 `hideFromScript` 특성에 [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) 구성 요소입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCookiePath">
      <MemberSignature Language="C#" Value="public virtual string MatchCookiePath (Uri baseUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MatchCookiePath(class System.Uri baseUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.MatchCookiePath(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchCookiePath (baseUri As Uri, targetUri As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ MatchCookiePath(Uri ^ baseUri, Uri ^ targetUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseUri">요청의 기본 URL입니다.</param>
        <param name="targetUri">일치시킬 URL</param>
        <summary>대상 도메인이 쿠키 도메인 내에 있고 대상 경로가 쿠키 경로 내에 있을 경우 쿠키 경로 부분의 대/소문자를 일치시켜야 합니다.</summary>
        <returns>
          <see cref="T:System.String" />를 반환합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>처리기에서 작성한 쿠키의 기본 이름을 가져오거나 설정합니다.</summary>
        <value>쿠키에 사용할 기본 이름입니다. 기본값은 "FedAuth".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 해당 하는 <xref:System.Web.HttpCookie.Name%2A?displayProperty=nameWithType> 속성입니다.  
  
 속성을 지정 하 여 초기화할 수는 `name` 특성에 [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) 구성 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see langword="null" /> 또는 빈 값을 설정하려는 시도가 발생합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>처리기에서 작성한 쿠키의 가상 경로를 가져오거나 설정합니다.</summary>
        <value>가상 경로입니다. ASP.NET 응용 프로그램의 루트로 기본 설정됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 해당 하는 <xref:System.Web.HttpCookie.Path%2A?displayProperty=nameWithType> 속성입니다.  
  
 속성을 지정 하 여 초기화할 수는 `path` 특성에 [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) 구성 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see langword="null" /> 또는 빈 값을 설정하려는 시도가 발생합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="PersistentSessionLifetime">
      <MemberSignature Language="C#" Value="public virtual Nullable&lt;TimeSpan&gt; PersistentSessionLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; PersistentSessionLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PersistentSessionLifetime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;TimeSpan&gt; PersistentSessionLifetime { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영구 세션의 수명입니다. 0이면 임시 세션이 항상 사용됩니다.</summary>
        <value>세션 수명입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 영구 세션에 대 한 티켓 웹 브라우저를 닫았다가 후에 로그인 세션이 계속 될 수 있습니다 의미 파일 기반 쿠키에 저장 됩니다.  
  
 설정 하려면이 속성은 사용 된 <xref:System.Web.HttpCookie.Expires%2A?displayProperty=nameWithType> 속성입니다.  
  
 속성을 지정 하 여 초기화할 수는 `persistentSessionLifetime` 특성에 [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) 구성 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">0보다 작은 값이 지정됩니다.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>쿠키를 읽습니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read" />
      <MemberSignature Language="VB.NET" Value="Public Function Read () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 이름이 있는 현재 요청과 연결된 쿠키를 읽습니다.</summary>
        <returns>쿠키 값이거나, 쿠키가 없을 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 쿠키의 이름으로 지정 된 <xref:System.IdentityModel.Services.CookieHandler.Name%2A> 속성입니다. 요청을 지정 하 여 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (name As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">읽을 쿠키의 이름입니다.</param>
        <summary>지정된 이름이 있는 현재 요청과 연결된 쿠키를 읽습니다.</summary>
        <returns>쿠키 값이거나, 쿠키가 없을 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 요청을 지정 하 여 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" />가 <see langword="null" />이거나 비어 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">요청에 대한 <see cref="T:System.Web.HttpContext" />입니다.</param>
        <summary>기본 이름, 도메인 및 경로가 있는 현재 요청과 연결된 쿠키를 읽습니다.</summary>
        <returns>쿠키 값이거나, 쿠키가 없을 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 쿠키의 이름으로 지정 된 <xref:System.IdentityModel.Services.CookieHandler.Name%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (name As String, context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">읽을 쿠키의 이름입니다.</param>
        <param name="context">요청에 대한 <see cref="T:System.Web.HttpContext" />입니다.</param>
        <summary>지정한 이름, 기본 도메인 및 경로가 있는 쿠키를 지정한 요청과 관련하여 읽습니다.</summary>
        <returns>쿠키 값이거나, 쿠키가 없을 경우 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" />가 <see langword="null" />이거나 비어 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadCore">
      <MemberSignature Language="C#" Value="protected abstract byte[] ReadCore (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ReadCore(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.ReadCore(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadCore (name As String, context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ ReadCore(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">쿠키 이름</param>
        <param name="context">요청에 대한 <see cref="T:System.Web.HttpContext" />입니다.</param>
        <summary>파생된 클래스에서 재정의된 경우 지정한 이름이 있고 지정된 요청과 연결된 쿠키를 읽습니다.</summary>
        <returns>쿠키 값이거나, 쿠키가 없을 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 오버 로드 된 호출 <xref:System.IdentityModel.Services.CookieHandler.Read%2A> 읽는 쿠키의 실제 작업을 수행 하는 메서드. <xref:System.IdentityModel.Services.CookieHandler.Read%2A> 메서드는 하는지 확인 `name` 은 비어 있지 않은 문자열입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>이 메서드를 재정의 해야 합니다. 전적으로 개발자는 구현이입니다. 그러나 구현 쿠키 데이터를 읽을 일반적인 경우에는 <see cref="P:System.Web.HttpRequest.Cookies" /> 컬렉션,이 필요는 없습니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RequireSsl">
      <MemberSignature Language="C#" Value="public virtual bool RequireSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireSsl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.RequireSsl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RequireSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequireSsl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>쿠키를 SSL에만 사용해야 하는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>
          SSL 연결에서만 쿠키를 사용해야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Set-cookie 헤더에 "Secure" 플래그는 작성 된 쿠키에 대 한 내보내집니다 있는지 여부를 제어 합니다. 이 값이 `true`, 쿠키만 사용할 수 HTTPS를 통한 세션입니다.  
  
 이 속성에 해당 하는 <xref:System.Web.HttpCookie.Secure%2A?displayProperty=nameWithType> 속성입니다.  
  
 속성을 지정 하 여 초기화할 수는 `requireSSL` 특성에 [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) 구성 요소입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>쿠키를 작성합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, bool isPersistent, valuetype System.DateTime tokenExpirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), isPersistent As Boolean, tokenExpirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
        <Parameter Name="tokenExpirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">쿠키 값입니다.</param>
        <param name="isPersistent">
          영구 쿠키인 경우 <see langword="true" />이며, 세션 전용, 즉, 클라이언트의 브라우저가 닫힐 때까지만 유효한 경우는 <see langword="false" />입니다.</param>
        <param name="tokenExpirationTime">내부 토큰에 대한 만료 시간입니다.</param>
        <summary>지정한 이름, 값 및 만료 시간이 있는 지정한 요청과 관련하여 쿠키를 작성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 `isPersistent` 매개 변수는 `false`, 쿠키 만료 시간은으로 설정 됩니다 <xref:System.DateTime.MinValue?displayProperty=nameWithType>합니다. 경우는 `isPersistent` 매개 변수는 `true`, 쿠키 만료 시간은의 값으로 설정 됩니다는 <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> 없으면 속성 `null` 또는 경우에는 <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> 속성은 `null`, 만료 시간은 값으로설정됩니다`tokenExpirationTime` 매개 변수입니다.  
  
 지정 된 쿠키 이름, 도메인 및 경로 <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, 및 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 속성입니다. 요청을 지정 하 여 <xref:System.Web.HttpContext.Current%2A>합니다. SSL을 통해서만 쿠키를 보낼지 여부 지정는 <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> 속성 및 클라이언트 쪽 스크립트에서 쿠키 숨겨야 하는지 여부를 지정 하 여는 <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" />가 <see langword="null" />이거나 비어 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, expirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, DateTime expirationTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">쿠키 값입니다.</param>
        <param name="name">쿠키의 이름입니다.</param>
        <param name="expirationTime">쿠키에 대한 만료 시간 또는 세션(세션 전용) 쿠키에 대한 <see cref="F:System.DateTime.MinValue" />입니다.</param>
        <summary>지정한 이름, 값 및 만료 시간이 있는 지정한 요청과 관련하여 쿠키를 작성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 쿠키 도메인 및 경로 의해 지정 되는 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> 및 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 속성입니다. 요청을 지정 하 여 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>합니다.  요청을 지정 하 여 <xref:System.Web.HttpContext.Current%2A>합니다. SSL을 통해서만 쿠키를 보낼지 여부 지정는 <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> 속성 및 클라이언트 쪽 스크립트에서 쿠키 숨겨야 하는지 여부를 지정 하 여는 <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" />가 <see langword="null" />이거나 비어 있는 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" />가 <see langword="null" />이거나 비어 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, expirationTime As DateTime, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, DateTime expirationTime, System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">쿠키 값입니다.</param>
        <param name="name">쿠키의 이름입니다.</param>
        <param name="expirationTime">쿠키에 대한 만료 시간 또는 세션(세션 전용) 쿠키에 대한 <see cref="F:System.DateTime.MinValue" />입니다.</param>
        <param name="context">요청에 대한 <see cref="T:System.Web.HttpContext" />입니다.</param>
        <summary>지정한 이름, 값 및 만료 시간이 있는 현재 요청과 관련하여 쿠키를 작성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 쿠키 도메인 및 경로 의해 지정 되는 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> 및 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 속성입니다. 요청을 지정 하 여 <xref:System.Web.HttpContext.Current%2A>합니다. SSL을 통해서만 쿠키를 보낼지 여부 지정는 <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> 속성 및 클라이언트 쪽 스크립트에서 쿠키 숨겨야 하는지 여부를 지정 하 여는 <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" />가 <see langword="null" />이거나 비어 있는 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" />가 <see langword="null" />이거나 비어 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, string path, string domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, path As String, domain As String, expirationTime As DateTime, requiresSsl As Boolean, hideFromClientScript As Boolean, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, System::String ^ path, System::String ^ domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="requiresSsl" Type="System.Boolean" />
        <Parameter Name="hideFromClientScript" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">쿠키 값입니다.</param>
        <param name="name">쿠키의 이름입니다.</param>
        <param name="path">쿠키의 경로</param>
        <param name="domain">쿠키 도메인</param>
        <param name="expirationTime">쿠키에 대한 만료 시간 또는 세션(세션 전용) 쿠키에 대한 <see cref="F:System.DateTime.MinValue" />입니다.</param>
        <param name="requiresSsl">
          SSL 연결에서만 쿠키를 사용해야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="hideFromClientScript">
          쿠키를 클라이언트 스크립트에서 숨겨야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="context">요청에 대한 <see cref="T:System.Web.HttpContext" />입니다.</param>
        <summary>지정한 이름, 값, 도메인, 경로, 만료 시간, 표시 유형이 있는 쿠키를 지정한 요청과 관련하여 작성합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" />가 <see langword="null" />이거나 비어 있는 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" />가 <see langword="null" />이거나 비어 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteCore (byte[] value, string name, string path, string domain, DateTime expirationTime, bool secure, bool httpOnly, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteCore(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool secure, bool httpOnly, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteCore (value As Byte(), name As String, path As String, domain As String, expirationTime As DateTime, secure As Boolean, httpOnly As Boolean, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteCore(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, System::String ^ path, System::String ^ domain, DateTime expirationTime, bool secure, bool httpOnly, System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="secure" Type="System.Boolean" />
        <Parameter Name="httpOnly" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">쿠키 값입니다.</param>
        <param name="name">쿠키의 이름입니다.</param>
        <param name="path">쿠키의 경로</param>
        <param name="domain">쿠키 도메인</param>
        <param name="expirationTime">쿠키에 대한 만료 시간 또는 세션(세션 전용) 쿠키에 대한 <see cref="F:System.DateTime.MinValue" />입니다.</param>
        <param name="secure">
          SSL 연결에서만 쿠키를 사용해야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="httpOnly">
          쿠키를 클라이언트 스크립트에서 숨겨야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="context">요청에 대한 <see cref="T:System.Web.HttpContext" />입니다.</param>
        <summary>파생된 클래스에서 재정의된 경우, 지정한 이름, 값, 도메인, 경로, 만료 시간, 지속성 및 표시 유형이 있는 지정된 요청과 연결된 쿠키를 작성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 오버 로드 된 호출 <xref:System.IdentityModel.Services.CookieHandler.Write%2A> 쿠키 작성의 실제 작업을 수행 하는 메서드. <xref:System.IdentityModel.Services.CookieHandler.Write%2A> 메서드는 하는지 확인 `value` 비어 있지 않은 바이트 배열이 고는 `name` 및 `path` 는 비어 있지 않은 문자열입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>이 메서드를 재정의 해야 합니다. 전적으로 개발자는 구현이입니다. 그러나 일반적인 경우 구현 쿠키 데이터를 씁니다.는 <see cref="P:System.Web.HttpResponse.Cookies" /> 컬렉션,이 필요는 없습니다. 대부분의 매개 변수는 메서드의 속성을 설정 하려면 해당 하는 하나 이상의에서 일반적으로 사용 됩니다 <see cref="T:System.Web.HttpCookie" /> 개체입니다.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>