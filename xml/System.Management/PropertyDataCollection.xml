<Type Name="PropertyDataCollection" FullName="System.Management.PropertyDataCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4ef10b8843dee60d45e546ff59d9798c00e18922" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PropertyDataCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyDataCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Management.PropertyDataCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyDataCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyDataCollection : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="963de-101">WMI 개체의 속성 집합을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="963de-101">Represents the set of properties of a WMI object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="963de-102">다음 예제에 대 한 정보를 나열는 **Win32_OperatingSystem** 클래스 사용의 <xref:System.Management.PropertyData> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="963de-102">The following example lists information about the **Win32_OperatingSystem** class using the <xref:System.Management.PropertyData> class.</span></span> <span data-ttu-id="963de-103">에 대 한 자세한 내용은 **Win32_OperatingSystem**, MSDN library에서 Windows Management Instrumentation 설명서를 참조 http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-103">For more information about **Win32_OperatingSystem**, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span>  
  
 [!code-csharp[wminet_PropertyDataCollection#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_PropertyDataCollection/cs/PropertyDataCollection.cs#1)]
 [!code-vb[wminet_PropertyDataCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_PropertyDataCollection/vb/PropertyDataCollection.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="963de-104">새 <see cref="T:System.Management.PropertyData" /> 개체를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-104">Adds a new <see cref="T:System.Management.PropertyData" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string propertyName, object propertyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string propertyName, object propertyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (propertyName As String, propertyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ propertyName, System::Object ^ propertyValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="963de-105">새 속성의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-105">The name of the new property.</span>
          </span>
        </param>
        <param name="propertyValue">
          <span data-ttu-id="963de-106">속성 값으로, null일 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-106">The value of the property (cannot be null).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="963de-107">지정한 값의 새 <see cref="T:System.Management.PropertyData" />를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-107">Adds a new <see cref="T:System.Management.PropertyData" /> with the specified value.</span>
          </span>
          <span data-ttu-id="963de-108">이 값은 null일 수 없으며 CIM(Common Information Model) 형식으로 변환될 수 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-108">The value cannot be null and must be convertible to a Common Information Model (CIM) type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="963de-109">속성은 인스턴스를 클래스 정의에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-109">Properties can only be added to class definitions, not to instances.</span></span> <span data-ttu-id="963de-110">이 메서드는 유효한에서 호출 될 때만 <xref:System.Management.PropertyDataCollection> 에 <xref:System.Management.ManagementClass>합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-110">This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="963de-111">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="963de-111">.NET Framework Security</span></span>  
 <span data-ttu-id="963de-112">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-112">Full trust for the immediate caller.</span></span> <span data-ttu-id="963de-113">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-113">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="963de-114">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-114">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string propertyName, System.Management.CimType propertyType, bool isArray);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string propertyName, valuetype System.Management.CimType propertyType, bool isArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (propertyName As String, propertyType As CimType, isArray As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ propertyName, System::Management::CimType propertyType, bool isArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Management.CimType" />
        <Parameter Name="isArray" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="963de-115">속성의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-115">The name of the property.</span>
          </span>
        </param>
        <param name="propertyType">
          <span data-ttu-id="963de-116">속성의 CIM(Common Information Model) 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-116">The Common Information Model (CIM) type of the property.</span>
          </span>
        </param>
        <param name="isArray">
          <span data-ttu-id="963de-117">속성을 배열 형식으로 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-117">
              <see langword="true" /> to specify that the property is an array type; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="963de-118">값을 할당하지 않고 새 <see cref="T:System.Management.PropertyData" />를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-118">Adds a new <see cref="T:System.Management.PropertyData" /> with no assigned value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="963de-119">속성은 인스턴스를 클래스 정의에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-119">Properties can only be added to class definitions, not to instances.</span></span> <span data-ttu-id="963de-120">이 메서드는 유효한에서 호출 될 때만 <xref:System.Management.PropertyDataCollection> 에 <xref:System.Management.ManagementClass>합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-120">This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="963de-121">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="963de-121">.NET Framework Security</span></span>  
 <span data-ttu-id="963de-122">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="963de-123">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="963de-124">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string propertyName, object propertyValue, System.Management.CimType propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string propertyName, object propertyValue, valuetype System.Management.CimType propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (propertyName As String, propertyValue As Object, propertyType As CimType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ propertyName, System::Object ^ propertyValue, System::Management::CimType propertyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Management.CimType" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="963de-125">속성의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-125">The name of the property.</span>
          </span>
        </param>
        <param name="propertyValue">
          <span data-ttu-id="963de-126">속성 값으로, null일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-126">The value of the property (which can be null).</span>
          </span>
        </param>
        <param name="propertyType">
          <span data-ttu-id="963de-127">속성의 CIM 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-127">The CIM type of the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="963de-128">지정한 값과 CIM(Common Information Model) 형식을 가지는 새 <see cref="T:System.Management.PropertyData" />를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-128">Adds a new <see cref="T:System.Management.PropertyData" /> with the specified value and Common Information Model (CIM) type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="963de-129">속성은 인스턴스를 클래스 정의에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-129">Properties can only be added to class definitions, not to instances.</span></span> <span data-ttu-id="963de-130">이 메서드는 유효한에서 호출 될 때만 <xref:System.Management.PropertyDataCollection> 에 <xref:System.Management.ManagementClass>합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-130">This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="963de-131">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="963de-131">.NET Framework Security</span></span>  
 <span data-ttu-id="963de-132">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-132">Full trust for the immediate caller.</span></span> <span data-ttu-id="963de-133">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-133">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="963de-134">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-134">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="963de-135">
            <see cref="T:System.Management.PropertyDataCollection" /> 개체를 배열에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-135">Copies the <see cref="T:System.Management.PropertyDataCollection" /> object into an array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="963de-136">
            <see cref="T:System.Management.PropertyDataCollection" />을 복사할 대상 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-136">The array to which to copy the <see cref="T:System.Management.PropertyDataCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="963de-137">복사가 시작될 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-137">The index from which to start copying.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="963de-138">
            <see cref="T:System.Management.PropertyDataCollection" />을 배열에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-138">Copies the <see cref="T:System.Management.PropertyDataCollection" /> into an array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="963de-139">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="963de-139">.NET Framework Security</span></span>  
 <span data-ttu-id="963de-140">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-140">Full trust for the immediate caller.</span></span> <span data-ttu-id="963de-141">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-141">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="963de-142">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-142">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Management.PropertyData[] propertyArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Management.PropertyData[] propertyArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (propertyArray As PropertyData(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Management::PropertyData ^&gt; ^ propertyArray, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyArray" Type="System.Management.PropertyData[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyArray">
          <span data-ttu-id="963de-143">복사한 <see cref="T:System.Management.PropertyDataCollection" />이 포함될 대상 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-143">The destination array to contain the copied <see cref="T:System.Management.PropertyDataCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="963de-144">복사가 시작될 대상 배열의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-144">The index in the destination array from which to start copying.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="963de-145">
            <see cref="T:System.Management.PropertyDataCollection" />을 특수화된 <see cref="T:System.Management.PropertyData" /> 개체 배열에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-145">Copies the <see cref="T:System.Management.PropertyDataCollection" /> to a specialized <see cref="T:System.Management.PropertyData" /> object array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="963de-146">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="963de-146">.NET Framework Security</span></span>  
 <span data-ttu-id="963de-147">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-147">Full trust for the immediate caller.</span></span> <span data-ttu-id="963de-148">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-148">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="963de-149">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-149">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Management.PropertyDataCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="963de-150">
            <see cref="T:System.Management.PropertyDataCollection" />의 개체 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-150">Gets the number of objects in the <see cref="T:System.Management.PropertyDataCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="963de-151">이 컬렉션에 있는 개체 수를 나타내는 <see cref="T:System.Int32" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-151">Returns an <see cref="T:System.Int32" /> value representing the number of objects in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="963de-152">속성 값</span><span class="sxs-lookup"><span data-stu-id="963de-152">Property Value</span></span>  
 <span data-ttu-id="963de-153">컬렉션의 개체 수입니다.</span><span class="sxs-lookup"><span data-stu-id="963de-153">The number of objects in the collection.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="963de-154">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="963de-154">.NET Framework Security</span></span>  
 <span data-ttu-id="963de-155">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-155">Full trust for the immediate caller.</span></span> <span data-ttu-id="963de-156">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-156">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="963de-157">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-157">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Management.PropertyDataCollection.PropertyDataEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.PropertyDataCollection/PropertyDataEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As PropertyDataCollection.PropertyDataEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::PropertyDataCollection::PropertyDataEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.PropertyDataCollection+PropertyDataEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="963de-158">이 <see cref="T:System.Management.PropertyDataCollection" />에 대한 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-158">Returns the enumerator for this <see cref="T:System.Management.PropertyDataCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="963de-159">컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-159">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="963de-160">만 반복할 수 (Visual Basic.NET에서와 같이 `For Each` 문 또는 C# `For` 문)을 통해 앞 으로만 이동 가능한 열거자를 한 번입니다.</span><span class="sxs-lookup"><span data-stu-id="963de-160">You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time.</span></span> <span data-ttu-id="963de-161">인스턴스가 포함 된 메모리는 하는 열거자를 되감을 수 없기 WMI가 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="963de-161">The memory containing the instances is released by WMI so that the enumerator cannot be rewound.</span></span> <span data-ttu-id="963de-162">따라서는 <xref:System.Management.PropertyDataCollection.Count%2A> 되감기를 열거자 요구 하므로 메서드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-162">Therefore, the <xref:System.Management.PropertyDataCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.</span></span>  
  
 <span data-ttu-id="963de-163">에 대 한 호출을 허용 하지 않습니다 되지만 앞 으로만 이동 가능한 열거자 일반적으로 더 빨리 하며 기본 열거자 보다 적은 메모리를 사용 하 여 <xref:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-163">Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to <xref:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset%2A>.</span></span>  
  
 <span data-ttu-id="963de-164">열거자를 되감아 컬렉션의 개체 여러 열거할 수 있는 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="963de-164">If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="963de-165">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="963de-165">.NET Framework Security</span></span>  
 <span data-ttu-id="963de-166">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-166">Full trust for the immediate caller.</span></span> <span data-ttu-id="963de-167">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-167">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="963de-168">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-168">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Management.PropertyDataCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="963de-169">개체가 동기화되는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-169">Gets a value indicating whether the object is synchronized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="963de-170">개체가 동기화되는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-170">Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="963de-171">속성 값</span><span class="sxs-lookup"><span data-stu-id="963de-171">Property Value</span></span>  
 <span data-ttu-id="963de-172">`true` 개체가 동기화 되는지; 경우 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-172">`true` if the object is synchronized; otherwise, `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="963de-173">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="963de-173">.NET Framework Security</span></span>  
 <span data-ttu-id="963de-174">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-174">Full trust for the immediate caller.</span></span> <span data-ttu-id="963de-175">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-175">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="963de-176">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-176">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Management.PropertyData this[string propertyName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.PropertyData Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Management.PropertyDataCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(propertyName As String) As PropertyData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Management::PropertyData ^ default[System::String ^] { System::Management::PropertyData ^ get(System::String ^ propertyName); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.PropertyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="963de-177">검색할 속성의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-177">The name of the property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="963de-178">[] 구문을 사용하여 <see cref="T:System.Management.PropertyDataCollection" />에서 지정된 속성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-178">Gets the specified property from the <see cref="T:System.Management.PropertyDataCollection" />, using [] syntax.</span>
          </span>
          <span data-ttu-id="963de-179">이 속성은 <see cref="T:System.Management.PropertyDataCollection" /> 클래스의 인덱서입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-179">This property is the indexer for the <see cref="T:System.Management.PropertyDataCollection" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="963de-180">컬렉션의 지정된 속성에 대한 데이터가 들어 있는 <see cref="T:System.Management.PropertyData" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-180">Returns a <see cref="T:System.Management.PropertyData" /> containing the data for a specified property in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="963de-181">속성 값</span><span class="sxs-lookup"><span data-stu-id="963de-181">Property Value</span></span>  
 <span data-ttu-id="963de-182">A <xref:System.Management.PropertyData>을 지정 된 이름을 바탕으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-182">A <xref:System.Management.PropertyData>, based on the name specified.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="963de-183">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="963de-183">.NET Framework Security</span></span>  
 <span data-ttu-id="963de-184">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="963de-185">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="963de-186">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-186">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="963de-187">다음 예제에서는 가져옵니다는 **Freespace** 속성은 <xref:System.Management.ManagementClass>합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-187">The following example gets the **Freespace** property from a <xref:System.Management.ManagementClass>.</span></span>  
  
 [!code-csharp[wminet_PropertyDataCollection_Item#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_PropertyDataCollection_Item/cs/PropertyDataCollection_Item.cs#1)]
 [!code-vb[wminet_PropertyDataCollection_Item#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_PropertyDataCollection_Item/vb/PropertyDataCollection_Item.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="963de-188">제거할 속성의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-188">The name of the property to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="963de-189">
            <see cref="T:System.Management.PropertyData" />에서 <see cref="T:System.Management.PropertyDataCollection" /> 개체를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-189">Removes a <see cref="T:System.Management.PropertyData" /> from the <see cref="T:System.Management.PropertyDataCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="963de-190">속성은 인스턴스에서가 아니라 클래스 정의를 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-190">Properties can only be removed from class definitions, not from instances.</span></span> <span data-ttu-id="963de-191">이 메서드는 유효한의 속성 컬렉션에서 호출 될 때만 <xref:System.Management.ManagementClass>합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-191">This method is only valid when invoked on a property collection in a <xref:System.Management.ManagementClass>.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="963de-192">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="963de-192">.NET Framework Security</span></span>  
 <span data-ttu-id="963de-193">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-193">Full trust for the immediate caller.</span></span> <span data-ttu-id="963de-194">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-194">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="963de-195">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-195">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Management.PropertyDataCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="963de-196">동기화에 사용될 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-196">Gets the object to be used for synchronization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="963de-197">동기화에 사용될 개체가 들어 있는 <see cref="T:System.Object" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-197">Returns an <see cref="T:System.Object" /> value containing the object to be used for synchronization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="963de-198">속성 값</span><span class="sxs-lookup"><span data-stu-id="963de-198">Property Value</span></span>  
 <span data-ttu-id="963de-199">동기화에 사용할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="963de-199">The object to be used for synchronization.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="963de-200">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="963de-200">.NET Framework Security</span></span>  
 <span data-ttu-id="963de-201">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-201">Full trust for the immediate caller.</span></span> <span data-ttu-id="963de-202">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-202">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="963de-203">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-203">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="963de-204">
            <see cref="T:System.Collections.IEnumerator" />를 반복하는 <see cref="T:System.Management.PropertyDataCollection" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-204">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.PropertyDataCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="963de-205">
            <see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Management.PropertyDataCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="963de-205">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.PropertyDataCollection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="963de-206">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="963de-206">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="963de-207">@FSHO1@C# 언어의 `foreach` 문(Visual Basic의 경우 `for each`)은 열거자의 복잡성을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="963de-207">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="963de-208">그러므로 열거자를 직접 조작하는 대신 `foreach`를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-208">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="963de-209">열거자를 사용하여 컬렉션의 데이터를 읽을 수는 있지만 내부 컬렉션을 수정할 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-209">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="963de-210">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="963de-210">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="963de-211"><xref:System.Collections.IEnumerator.Reset%2A>을 실행하면 열거자가 이 위치로 복원됩니다.</span><span class="sxs-lookup"><span data-stu-id="963de-211"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="963de-212">이 위치에서, 호출 <xref:System.Collections.IEnumerator.Current%2A> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-212">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="963de-213">따라서 <xref:System.Collections.IEnumerator.MoveNext%2A>의 값을 읽기 전에 <xref:System.Collections.IEnumerator.Current%2A>를 호출하여 열거자를 해당 컬렉션의 첫 번째 요소로 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-213">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="963de-214"><xref:System.Collections.IEnumerator.Current%2A>에서는 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A>이 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-214"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="963de-215"><xref:System.Collections.IEnumerator.MoveNext%2A>는 <xref:System.Collections.IEnumerator.Current%2A>를 다음 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-215"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="963de-216">경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-216">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="963de-217">열거자가 있는 경우이 위치에 대 한 후속 호출에서 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환할 수도 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-217">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="963de-218">마지막으로 호출 하는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`호출, <xref:System.Collections.IEnumerator.Current%2A> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-218">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="963de-219"><xref:System.Collections.IEnumerator.Current%2A>를 컬렉션의 첫째 요소에 다시 설정하려면 <xref:System.Collections.IEnumerator.Reset%2A>을 호출한 뒤 <xref:System.Collections.IEnumerator.MoveNext%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-219">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="963de-220">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-220">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="963de-221">변경, 추가 하는 등 컬렉션을 수정 하거나 요소를 삭제 하면 열거자가 더 유효 하지 않으며을 다음에 호출할 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A> throw는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-221">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="963de-222">사이 컬렉션이 수정 되는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 및 <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> 열거자가 이미 무효로 되 었 하는 경우에 설정 하는 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="963de-222">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="963de-223">열거자는 컬렉션에 독점적으로 액세스할 수 있는 권한이 없으므로 컬렉션을 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="963de-223">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="963de-224">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="963de-224">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="963de-225">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="963de-225">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="963de-226">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="963de-226">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>