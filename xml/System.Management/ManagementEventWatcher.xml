<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ManagementEventWatcher.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5deaa5054d5a6e4440bdc47d463d522542aad06a1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">deaa5054d5a6e4440bdc47d463d522542aad06a1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Management.ManagementEventWatcher">
          <source>Subscribes to temporary event notifications based on a specified <bpt id="p1">*</bpt>event query<ept id="p1">*</ept>.</source>
          <target state="translated">지정된 <bpt id="p1">*</bpt>이벤트 쿼리<ept id="p1">*</ept>에 따라 임시 이벤트 알림을 신청합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Management.ManagementEventWatcher">
          <source>The following example shows how the client receives notification when an instance of <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> is created because the event class is <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>.</source>
          <target state="translated">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> 이벤트 클래스는 만들어집니다 <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Management.ManagementEventWatcher">
          <source>For more information, see the Windows Management Instrumentation documentation in the MSDN Library at <ph id="ph1">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. <ph id="ph1">http://msdn.microsoft.com/library</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Management.ManagementEventWatcher">
          <source>The client receives events synchronously by calling the <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> method.</source>
          <target state="translated">클라이언트에서는 <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Management.ManagementEventWatcher">
          <source>This example can be tested by starting a process, such as Notepad, while the example code is running.</source>
          <target state="translated">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Management.ManagementEventWatcher">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Management.ManagementEventWatcher" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Management.ManagementEventWatcher" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Management.ManagementEventWatcher" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Management.ManagementEventWatcher" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor">
          <source>For further initialization, set the properties on the object.</source>
          <target state="translated">추가로 초기화하려면 개체의 속성을 설정합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor">
          <source>This is the default constructor.</source>
          <target state="translated">이것이 기본 생성자입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework 보안</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자의 경우 완전히 신뢰합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor">
          <source>The following example shows how the client receives notification when an instance of <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> is created because the event class is <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>.</source>
          <target state="translated">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> 이벤트 클래스는 만들어집니다 <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor">
          <source>For more information, see the Windows Management Instrumentation documentation in the MSDN Library at <ph id="ph1">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. <ph id="ph1">http://msdn.microsoft.com/library</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor">
          <source>The client receives events synchronously by calling the <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> method.</source>
          <target state="translated">클라이언트에서는 <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor">
          <source>This example can be tested by starting a process, such as Notepad, while the example code is running.</source>
          <target state="translated">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Management.EventQuery" /&gt;</ph> representing a WMI event query, which determines the events for which the watcher will listen.</source>
          <target state="translated">감시자가 수신할 이벤트를 결정하는 WMI 이벤트 쿼리를 나타내는 <ph id="ph1">&lt;see cref="T:System.Management.EventQuery" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Management.ManagementEventWatcher" /&gt;</ph> class when given a WMI <bpt id="p1">*</bpt>event query<ept id="p1">*</ept>.</source>
          <target state="translated">WMI <bpt id="p1">*</bpt>이벤트 쿼리<ept id="p1">*</ept>에 따라 <ph id="ph1">&lt;see cref="T:System.Management.ManagementEventWatcher" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
          <source>The namespace in which the watcher will be listening for events is the default namespace that is currently set.</source>
          <target state="translated">이벤트에 대 한 감시자 수신 될 네임 스페이스는 현재 설정 되어 있는 기본 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework 보안</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자의 경우 완전히 신뢰합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
          <source>In this code example, the client receives notification when an instance of <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> is created because the event class is <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>.</source>
          <target state="translated">이 코드 예제에서는 클라이언트가 받는 알림의 인스턴스가 <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> 이벤트 클래스는 만들어집니다 <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
          <source>For more information, see the Windows Management Instrumentation documentation in the MSDN Library at <ph id="ph1">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. <ph id="ph1">http://msdn.microsoft.com/library</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
          <source>The client receives events synchronously by calling the <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> method.</source>
          <target state="translated">클라이언트에서는 <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
          <source>This example can be tested by starting a process, such as Notepad, while the example code is running.</source>
          <target state="translated">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
          <source>A WMI event query, which defines the events for which the watcher will listen.</source>
          <target state="translated">감시자가 수신할 이벤트를 정의하는 WMI 이벤트 쿼리입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Management.ManagementEventWatcher" /&gt;</ph> class when given a WMI <bpt id="p1">*</bpt>event query<ept id="p1">*</ept> in the form of a string.</source>
          <target state="translated">WMI <bpt id="p1">*</bpt>이벤트 쿼리<ept id="p1">*</ept>가 문자열 형태로 지정되면 <ph id="ph1">&lt;see cref="T:System.Management.ManagementEventWatcher" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
          <source>The namespace in which the watcher will be listening for events is the default namespace that is currently set.</source>
          <target state="translated">이벤트에 대 한 감시자 수신 될 네임 스페이스는 현재 설정 되어 있는 기본 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework 보안</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자의 경우 완전히 신뢰합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
          <source>The following example shows how the client receives notification when an instance of <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> is created because the event class is <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>.</source>
          <target state="translated">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> 이벤트 클래스는 만들어집니다 <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
          <source>For more information, see the Windows Management Instrumentation documentation in the MSDN Library at <ph id="ph1">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. <ph id="ph1">http://msdn.microsoft.com/library</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
          <source>The client receives events synchronously by calling the <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> method.</source>
          <target state="translated">클라이언트에서는 <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
          <source>This example can be tested by starting a process, such as Notepad, while the example code is running.</source>
          <target state="translated">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Management.ManagementScope" /&gt;</ph> representing the scope (namespace) in which the watcher will listen for events.</source>
          <target state="translated">감시자가 이벤트를 수신할 범위(네임스페이스)를 나타내는 <ph id="ph1">&lt;see cref="T:System.Management.ManagementScope" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Management.EventQuery" /&gt;</ph> representing a WMI event query, which determines the events for which the watcher will listen.</source>
          <target state="translated">감시자가 수신할 이벤트를 결정하는 WMI 이벤트 쿼리를 나타내는 <ph id="ph1">&lt;see cref="T:System.Management.EventQuery" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Management.ManagementEventWatcher" /&gt;</ph> class that listens for events conforming to the given WMI <bpt id="p1">*</bpt>event query<ept id="p1">*</ept>.</source>
          <target state="translated">지정된 WMI <bpt id="p1">*</bpt>이벤트 쿼리<ept id="p1">*</ept>와 일치하는 이벤트를 수신하는 <ph id="ph1">&lt;see cref="T:System.Management.ManagementEventWatcher" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework 보안</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자의 경우 완전히 신뢰합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
          <source>In this code example, the client receives notification when an instance of <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> is created because the event class is <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>.</source>
          <target state="translated">이 코드 예제에서는 클라이언트가 받는 알림의 인스턴스가 <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> 이벤트 클래스는 만들어집니다 <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
          <source>For more information, see the Windows Management Instrumentation documentation in the MSDN Library at <ph id="ph1">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. <ph id="ph1">http://msdn.microsoft.com/library</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
          <source>The client receives events synchronously by calling the <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> method.</source>
          <target state="translated">클라이언트에서는 <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
          <source>This example can be tested by starting a process, such as Notepad, while the example code is running.</source>
          <target state="translated">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
          <source>The management scope (namespace) in which the watcher will listen for events.</source>
          <target state="translated">감시자가 이벤트를 수신할 관리 범위(네임스페이스)입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
          <source>The query that defines the events for which the watcher will listen.</source>
          <target state="translated">감시자가 수신할 이벤트를 정의하는 쿼리입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Management.ManagementEventWatcher" /&gt;</ph> class that listens for events conforming to the given WMI <bpt id="p1">*</bpt>event query<ept id="p1">*</ept>.</source>
          <target state="translated">지정된 WMI <bpt id="p1">*</bpt>이벤트 쿼리<ept id="p1">*</ept>와 일치하는 이벤트를 수신하는 <ph id="ph1">&lt;see cref="T:System.Management.ManagementEventWatcher" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
          <source>For this variant, the query and the scope are specified as strings.</source>
          <target state="translated">이 변형에서는 쿼리와 범위가 문자열로 지정됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework 보안</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자의 경우 완전히 신뢰합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
          <source>The following example shows how the client receives notification when an instance of <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> is created because the event class is <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>.</source>
          <target state="translated">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> 이벤트 클래스는 만들어집니다 <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
          <source>For more information, see the Windows Management Instrumentation documentation in the MSDN Library at <ph id="ph1">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. <ph id="ph1">http://msdn.microsoft.com/library</ph>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
          <source>The client receives events synchronously by calling the <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> method.</source>
          <target state="translated">클라이언트에서는 <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
          <source>This example can be tested by starting a process, such as Notepad, while the example code is running.</source>
          <target state="translated">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Management.ManagementScope" /&gt;</ph> representing the scope (namespace) in which the watcher will listen for events.</source>
          <target state="translated">감시자가 이벤트를 수신할 범위(네임스페이스)를 나타내는 <ph id="ph1">&lt;see cref="T:System.Management.ManagementScope" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Management.EventQuery" /&gt;</ph> representing a WMI event query, which determines the events for which the watcher will listen.</source>
          <target state="translated">감시자가 수신할 이벤트를 결정하는 WMI 이벤트 쿼리를 나타내는 <ph id="ph1">&lt;see cref="T:System.Management.EventQuery" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Management.EventWatcherOptions" /&gt;</ph> representing additional options used to watch for events.</source>
          <target state="translated">이벤트를 조사하는 데 사용할 추가 옵션을 나타내는 <ph id="ph1">&lt;see cref="T:System.Management.EventWatcherOptions" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Management.ManagementEventWatcher" /&gt;</ph> class that listens for events conforming to the given WMI event query, according to the specified options.</source>
          <target state="translated">지정된 옵션에 따라, 지정된 WMI 이벤트 쿼리와 일치하는 이벤트를 수신하는 <ph id="ph1">&lt;see cref="T:System.Management.ManagementEventWatcher" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
          <source>For this variant, the query and the scope are specified objects.</source>
          <target state="translated">이 변형에서는 쿼리와 범위가 개체로 지정됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
          <source>The options object can specify options such as time-out and context information.</source>
          <target state="translated">옵션 개체에서는 시간 제한 및 컨텍스트 정보와 같은 옵션을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework 보안</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자의 경우 완전히 신뢰합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
          <source>The following example shows how the client receives notification when an instance of <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> is created because the event class is <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>.</source>
          <target state="translated">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> 이벤트 클래스는 만들어집니다 <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
          <source>For more information, see the Windows Management Instrumentation documentation in the MSDN Library at <ph id="ph1">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. <ph id="ph1">http://msdn.microsoft.com/library</ph>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
          <source>The client receives events synchronously by calling the <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> method.</source>
          <target state="translated">클라이언트에서는 <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
          <source>This example can be tested by starting a process, such as Notepad, while the example code is running.</source>
          <target state="translated">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
          <source>The management scope (namespace) in which the watcher will listen for events.</source>
          <target state="translated">감시자가 이벤트를 수신할 관리 범위(네임스페이스)입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
          <source>The query that defines the events for which the watcher will listen.</source>
          <target state="translated">감시자가 수신할 이벤트를 정의하는 쿼리입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Management.EventWatcherOptions" /&gt;</ph> representing additional options used to watch for events.</source>
          <target state="translated">이벤트를 조사하는 데 사용할 추가 옵션을 나타내는 <ph id="ph1">&lt;see cref="T:System.Management.EventWatcherOptions" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Management.ManagementEventWatcher" /&gt;</ph> class that listens for events conforming to the given WMI <bpt id="p1">*</bpt>event query<ept id="p1">*</ept>, according to the specified options.</source>
          <target state="translated">지정된 옵션에 따라, 지정된 WMI <bpt id="p1">*</bpt>이벤트 쿼리<ept id="p1">*</ept>와 일치하는 이벤트를 수신하는 <ph id="ph1">&lt;see cref="T:System.Management.ManagementEventWatcher" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
          <source>For this variant, the query and the scope are specified as strings.</source>
          <target state="translated">이 변형에서는 쿼리와 범위가 문자열로 지정됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
          <source>The options object can specify options such as a time-out and context information.</source>
          <target state="translated">옵션 개체에서는 시간 제한 및 컨텍스트 정보와 같은 옵션을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework 보안</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자의 경우 완전히 신뢰합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
          <source>The following example shows how the client receives notification when an instance of <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> is created because the event class is <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>.</source>
          <target state="translated">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> 이벤트 클래스는 만들어집니다 <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
          <source>For more information, see the Windows Management Instrumentation documentation in the MSDN Library at <ph id="ph1">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. <ph id="ph1">http://msdn.microsoft.com/library</ph>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
          <source>The client receives events synchronously by calling the <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> method.</source>
          <target state="translated">클라이언트에서는 <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
          <source>This example can be tested by starting a process, such as Notepad, while the example code is running.</source>
          <target state="translated">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="E:System.Management.ManagementEventWatcher.EventArrived">
          <source>Occurs when a new event arrives.</source>
          <target state="translated">새 이벤트가 도착하면 발생합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.EventArrived">
          <source>Event Data</source>
          <target state="translated">이벤트 데이터</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.EventArrived">
          <source>The event handler receives an argument of type <ph id="ph1">&lt;xref:System.Management.EventArrivedEventArgs&gt;</ph> containing data related to this event.</source>
          <target state="translated">이벤트 처리기 형식의 인수를 받습니다. <ph id="ph1">&lt;xref:System.Management.EventArrivedEventArgs&gt;</ph> 이 이벤트와 관련 된 데이터가 들어 있는입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.EventArrived">
          <source>The following <ph id="ph1">&lt;xref:System.Management.EventArrivedEventArgs&gt;</ph> properties provide information specific to this event.</source>
          <target state="translated">다음 <ph id="ph1">&lt;xref:System.Management.EventArrivedEventArgs&gt;</ph> 속성이이 이벤트에 관련 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.EventArrived">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.EventArrived">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.EventArrived">
          <source><ph id="ph1">&lt;xref:System.Management.ManagementEventArgs.Context%2A&gt;</ph> (inherited from <ph id="ph2">&lt;xref:System.Management.ManagementEventArgs&gt;</ph>)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Management.ManagementEventArgs.Context%2A&gt;</ph> (에서 상속 되며, <ph id="ph2">&lt;xref:System.Management.ManagementEventArgs&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.EventArrived">
          <source>Gets the operation context echoed back from the operation that triggered the event.</source>
          <target state="translated">이벤트를 트리거한 작업에서 반환 된 작업 컨텍스트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.EventArrived">
          <source>Gets the WMI event that was delivered.</source>
          <target state="translated">배달된 WMI 이벤트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.EventArrived">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework 보안</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.EventArrived">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자의 경우 완전히 신뢰합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.EventArrived">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.EventArrived">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.Finalize">
          <source>Ensures that outstanding calls are cleared.</source>
          <target state="translated">아직 해결되지 않은 호출을 해제합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.Finalize">
          <source>This is the destructor for the object.</source>
          <target state="translated">개체의 소멸자입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.Finalize">
          <source>In C#, finalizers are expressed using destructor syntax.</source>
          <target state="translated">C#에서 종료자는 소멸자 구문을 사용하여 표현됩니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.Finalize">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework 보안</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.Finalize">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자의 경우 완전히 신뢰합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.Finalize">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Management.ManagementEventWatcher.Options">
          <source>Gets or sets the options used to watch for events.</source>
          <target state="translated">이벤트를 조사하는 데 사용할 옵션을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Options">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Management.EventWatcherOptions" /&gt;</ph> that contains the event options used to watch for events.</source>
          <target state="translated">이벤트를 조사하는 데 사용할 이벤트 옵션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Management.EventWatcherOptions" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Options">
          <source>Property Value</source>
          <target state="translated">속성 값</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Options">
          <source>The options used to watch for events.</source>
          <target state="translated">이벤트를 조사 하는 데 사용 하는 옵션입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Options">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework 보안</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Options">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자의 경우 완전히 신뢰합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Options">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Options">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Options">
          <source>The following example shows how the client receives notification when an instance of <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> is created because the event class is <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>.</source>
          <target state="translated">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> 이벤트 클래스는 만들어집니다 <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Options">
          <source>For more information, see the Windows Management Instrumentation documentation in the MSDN Library at <ph id="ph1">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. <ph id="ph1">http://msdn.microsoft.com/library</ph>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Options">
          <source>The client receives events synchronously by calling the <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> method.</source>
          <target state="translated">클라이언트에서는 <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Options">
          <source>This example can be tested by starting a process, such as Notepad, while the example code is running.</source>
          <target state="translated">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Management.ManagementEventWatcher.Query">
          <source>Gets or sets the criteria to apply to events.</source>
          <target state="translated">이벤트에 적용할 기준을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Query">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Management.EventQuery" /&gt;</ph> that contains the query to apply to events.</source>
          <target state="translated">이벤트에 적용할 쿼리가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Management.EventQuery" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Query">
          <source>Property Value</source>
          <target state="translated">속성 값</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Query">
          <source>The criteria to apply to the events, which is equal to the <bpt id="p1">*</bpt>event query<ept id="p1">*</ept>.</source>
          <target state="translated">것과 같은 이벤트에 적용 하는 기준의 <bpt id="p1">*</bpt>이벤트 쿼리<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Query">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework 보안</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Query">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자의 경우 완전히 신뢰합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Query">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Query">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Query">
          <source>The following example shows how the client receives notification when an instance of <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> is created because the event class is <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>.</source>
          <target state="translated">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> 이벤트 클래스는 만들어집니다 <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Query">
          <source>For more information, see the Windows Management Instrumentation documentation in the MSDN Library at <ph id="ph1">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. <ph id="ph1">http://msdn.microsoft.com/library</ph>합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Query">
          <source>The client receives events synchronously by calling the <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> method.</source>
          <target state="translated">클라이언트에서는 <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Query">
          <source>This example can be tested by starting a process, such as Notepad, while the example code is running.</source>
          <target state="translated">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Management.ManagementEventWatcher.Scope">
          <source>Gets or sets the scope in which to watch for events (namespace or scope).</source>
          <target state="translated">이벤트를 조사할 범위(네임스페이스 또는 범위)를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Scope">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Management.ManagementScope" /&gt;</ph> that contains the scope the in which to watch for events.</source>
          <target state="translated">이벤트를 조사할 범위가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Management.ManagementScope" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Scope">
          <source>Property Value</source>
          <target state="translated">속성 값</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Scope">
          <source>The scope in which to watch for events (namespace or scope).</source>
          <target state="translated">(네임 스페이스 또는 범위) 이벤트 감시 하는 범위입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Scope">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework 보안</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Scope">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자의 경우 완전히 신뢰합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Scope">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Scope">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Scope">
          <source>The following example shows how the client receives notification when an instance of <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> is created because the event class is <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>.</source>
          <target state="translated">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> 이벤트 클래스는 만들어집니다 <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Scope">
          <source>For more information, see the Windows Management Instrumentation documentation in the MSDN Library at <ph id="ph1">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. <ph id="ph1">http://msdn.microsoft.com/library</ph>합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Scope">
          <source>The client receives events synchronously by calling the <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> method.</source>
          <target state="translated">클라이언트에서는 <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementEventWatcher.Scope">
          <source>This example can be tested by starting a process, such as Notepad, while the example code is running.</source>
          <target state="translated">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.Start">
          <source>Subscribes to events with the given query and delivers them, asynchronously, through the <ph id="ph1">&lt;see cref="E:System.Management.ManagementEventWatcher.EventArrived" /&gt;</ph> event.</source>
          <target state="translated">지정된 쿼리를 사용하여 이벤트에 등록하고 <ph id="ph1">&lt;see cref="E:System.Management.ManagementEventWatcher.EventArrived" /&gt;</ph> 이벤트를 통해 비동기적으로 배달합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.Start">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework 보안</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.Start">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자의 경우 완전히 신뢰합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.Start">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.Start">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.Stop">
          <source>Cancels the subscription whether it is synchronous or asynchronous.</source>
          <target state="translated">동기적이든지 비동기적이든지 상관없이 등록을 취소합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.Stop">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework 보안</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.Stop">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자의 경우 완전히 신뢰합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.Stop">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.Stop">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.Stop">
          <source>The following example shows how the client receives notification when an instance of <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> is created because the event class is <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>.</source>
          <target state="translated">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> 이벤트 클래스는 만들어집니다 <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.Stop">
          <source>For more information, see the Windows Management Instrumentation documentation in the MSDN Library at <ph id="ph1">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. <ph id="ph1">http://msdn.microsoft.com/library</ph>합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.Stop">
          <source>The client receives events synchronously by calling the <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> method.</source>
          <target state="translated">클라이언트에서는 <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.Stop">
          <source>This example can be tested by starting a process, such as Notepad, while the example code is running.</source>
          <target state="translated">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="E:System.Management.ManagementEventWatcher.Stopped">
          <source>Occurs when a subscription is canceled.</source>
          <target state="translated">등록이 취소되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.Stopped">
          <source>Event Data</source>
          <target state="translated">이벤트 데이터</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.Stopped">
          <source>The event handler receives an argument of type <ph id="ph1">&lt;xref:System.Management.StoppedEventArgs&gt;</ph> containing data related to this event.</source>
          <target state="translated">이벤트 처리기 형식의 인수를 받습니다. <ph id="ph1">&lt;xref:System.Management.StoppedEventArgs&gt;</ph> 이 이벤트와 관련 된 데이터가 들어 있는입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.Stopped">
          <source>The following <ph id="ph1">&lt;xref:System.Management.StoppedEventArgs&gt;</ph> properties provide information specific to this event.</source>
          <target state="translated">다음 <ph id="ph1">&lt;xref:System.Management.StoppedEventArgs&gt;</ph> 속성이이 이벤트에 관련 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.Stopped">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.Stopped">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.Stopped">
          <source><ph id="ph1">&lt;xref:System.Management.ManagementEventArgs.Context%2A&gt;</ph> (inherited from <ph id="ph2">&lt;xref:System.Management.ManagementEventArgs&gt;</ph>)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Management.ManagementEventArgs.Context%2A&gt;</ph> (에서 상속 되며, <ph id="ph2">&lt;xref:System.Management.ManagementEventArgs&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.Stopped">
          <source>Gets the operation context echoed back from the operation that triggered the event.</source>
          <target state="translated">이벤트를 트리거한 작업에서 반환 된 작업 컨텍스트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.Stopped">
          <source>Gets the completion status of the operation.</source>
          <target state="translated">작업의 완료 상태를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.Stopped">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework 보안</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.Stopped">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자의 경우 완전히 신뢰합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.Stopped">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Management.ManagementEventWatcher.Stopped">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
          <source>Waits for the next event that matches the specified query to arrive, and then returns it.</source>
          <target state="translated">지정된 쿼리와 일치하는 다음 이벤트가 도착하기를 기다린 다음 해당 이벤트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
          <source>A <ph id="ph1">&lt;see cref="T:System.Management.ManagementBaseObject" /&gt;</ph> representing the newly arrived event.</source>
          <target state="translated">새로 도착한 이벤트를 나타내는 <ph id="ph1">&lt;see cref="T:System.Management.ManagementBaseObject" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
          <source>If the event watcher object contains options with a specified time-out, the API will wait for the next event only for the specified amount of time; otherwise, the API will be blocked until the next event occurs.</source>
          <target state="translated">지정된 된 양의 시간;에 대 한 API는 다음 이벤트에 대 한 대기할 이벤트 감시자 개체에 지정된 된 제한 시간 옵션 포함 된 경우 이렇게 하지 않으면 API는 다음 이벤트가 발생할 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework 보안</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자의 경우 완전히 신뢰합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
          <source>The following example shows how the client receives notification when an instance of <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> is created because the event class is <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>.</source>
          <target state="translated">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. <bpt id="p1">**</bpt>Win32_Process<ept id="p1">**</ept> 이벤트 클래스는 만들어집니다 <bpt id="p2">**</bpt>__InstanceCreationEvent<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
          <source>For more information, see the Windows Management Instrumentation documentation in the MSDN Library at <ph id="ph1">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. <ph id="ph1">http://msdn.microsoft.com/library</ph>합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
          <source>The client receives events synchronously by calling the <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> method.</source>
          <target state="translated">클라이언트에서는 <ph id="ph1">&lt;xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A&gt;</ph> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
          <source>This example can be tested by starting a process, such as Notepad, while the example code is running.</source>
          <target state="translated">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>