<Type Name="ManagementEventWatcher" FullName="System.Management.ManagementEventWatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="abb4aa4505fe791575cfdc67554027bd854ee121" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36477994" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ManagementEventWatcher : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementEventWatcher extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementEventWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementEventWatcher&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEventWatcher : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ManagementEventWatcher = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c9f03-101">Subscribes to temporary event notifications based on a specified *event query*.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c9f03-101">Subscribes to temporary event notifications based on a specified *event query*.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c9f03-102">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. **Win32_Process** 이벤트 클래스는 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-102">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c9f03-103">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-103">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="c9f03-104">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-104">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c9f03-105">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-105">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c9f03-106">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-106">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9f03-107">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-107">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span>
          </span>
          <span data-ttu-id="c9f03-108">For further initialization, set the properties on the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-108">For further initialization, set the properties on the object.</span>
          </span>
          <span data-ttu-id="c9f03-109">This is the default constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-109">This is the default constructor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="c9f03-110">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="c9f03-110">.NET Framework Security</span></span>  
 <span data-ttu-id="c9f03-111">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="c9f03-112">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c9f03-113">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9f03-114">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. **Win32_Process** 이벤트 클래스는 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-114">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c9f03-115">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-115">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="c9f03-116">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-116">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c9f03-117">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-117">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="c9f03-118">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-118">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9f03-119">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query*.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-119">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query*.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9f03-120">이벤트에 대 한 감시자 수신 될 네임 스페이스는 현재 설정 되어 있는 기본 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-120">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="c9f03-121">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="c9f03-121">.NET Framework Security</span></span>  
 <span data-ttu-id="c9f03-122">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="c9f03-123">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c9f03-124">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9f03-125">이 코드 예제에서는 클라이언트가 받는 알림의 인스턴스가 **Win32_Process** 이벤트 클래스는 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-125">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c9f03-126">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-126">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="c9f03-127">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-127">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c9f03-128">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-128">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/cs/ManagementEventWatcher-E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/vb/ManagementEventWatcher-E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="c9f03-129">A WMI event query, which defines the events for which the watcher will listen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-129">A WMI event query, which defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9f03-130">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query* in the form of a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-130">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query* in the form of a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9f03-131">이벤트에 대 한 감시자 수신 될 네임 스페이스는 현재 설정 되어 있는 기본 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-131">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="c9f03-132">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="c9f03-132">.NET Framework Security</span></span>  
 <span data-ttu-id="c9f03-133">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-133">Full trust for the immediate caller.</span></span> <span data-ttu-id="c9f03-134">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-134">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c9f03-135">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-135">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9f03-136">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. **Win32_Process** 이벤트 클래스는 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-136">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c9f03-137">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-137">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="c9f03-138">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-138">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c9f03-139">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-139">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/cs/ManagementEventWatcher-S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/vb/ManagementEventWatcher-S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="c9f03-140">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-140">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="c9f03-141">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-141">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9f03-142">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-142">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="c9f03-143">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="c9f03-143">.NET Framework Security</span></span>  
 <span data-ttu-id="c9f03-144">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-144">Full trust for the immediate caller.</span></span> <span data-ttu-id="c9f03-145">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-145">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c9f03-146">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-146">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9f03-147">이 코드 예제에서는 클라이언트가 받는 알림의 인스턴스가 **Win32_Process** 이벤트 클래스는 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-147">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c9f03-148">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-148">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="c9f03-149">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-149">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c9f03-150">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-150">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/cs/ManagementEventWatcher-M_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/vb/ManagementEventWatcher-M_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="c9f03-151">The management scope (namespace) in which the watcher will listen for events.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-151">The management scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="c9f03-152">The query that defines the events for which the watcher will listen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-152">The query that defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9f03-153">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-153">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span>
          </span>
          <span data-ttu-id="c9f03-154">For this variant, the query and the scope are specified as strings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-154">For this variant, the query and the scope are specified as strings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="c9f03-155">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="c9f03-155">.NET Framework Security</span></span>  
 <span data-ttu-id="c9f03-156">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-156">Full trust for the immediate caller.</span></span> <span data-ttu-id="c9f03-157">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-157">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c9f03-158">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-158">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9f03-159">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. **Win32_Process** 이벤트 클래스는 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-159">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c9f03-160">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-160">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="c9f03-161">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-161">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c9f03-162">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-162">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/cs/ManagementEventWatcher-S_S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/vb/ManagementEventWatcher-S_S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="c9f03-163">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-163">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="c9f03-164">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-164">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c9f03-165">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-165">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9f03-166">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query, according to the specified options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-166">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query, according to the specified options.</span>
          </span>
          <span data-ttu-id="c9f03-167">For this variant, the query and the scope are specified objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-167">For this variant, the query and the scope are specified objects.</span>
          </span>
          <span data-ttu-id="c9f03-168">The options object can specify options such as time-out and context information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-168">The options object can specify options such as time-out and context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="c9f03-169">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="c9f03-169">.NET Framework Security</span></span>  
 <span data-ttu-id="c9f03-170">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-170">Full trust for the immediate caller.</span></span> <span data-ttu-id="c9f03-171">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-171">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c9f03-172">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-172">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9f03-173">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. **Win32_Process** 이벤트 클래스는 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-173">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c9f03-174">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-174">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="c9f03-175">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-175">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c9f03-176">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-176">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/cs/ManagementEventWatcher-M_E_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/vb/ManagementEventWatcher-M_E_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="c9f03-177">The management scope (namespace) in which the watcher will listen for events.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-177">The management scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="c9f03-178">The query that defines the events for which the watcher will listen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-178">The query that defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c9f03-179">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-179">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9f03-180">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*, according to the specified options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-180">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*, according to the specified options.</span>
          </span>
          <span data-ttu-id="c9f03-181">For this variant, the query and the scope are specified as strings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-181">For this variant, the query and the scope are specified as strings.</span>
          </span>
          <span data-ttu-id="c9f03-182">The options object can specify options such as a time-out and context information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-182">The options object can specify options such as a time-out and context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="c9f03-183">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="c9f03-183">.NET Framework Security</span></span>  
 <span data-ttu-id="c9f03-184">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="c9f03-185">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c9f03-186">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-186">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9f03-187">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. **Win32_Process** 이벤트 클래스는 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-187">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c9f03-188">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-188">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="c9f03-189">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-189">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c9f03-190">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-190">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/cs/ManagementEventWatcher-S_S_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/vb/ManagementEventWatcher-S_S_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventArrived">
      <MemberSignature Language="C#" Value="public event System.Management.EventArrivedEventHandler EventArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.EventArrivedEventHandler EventArrived" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.EventArrived" />
      <MemberSignature Language="VB.NET" Value="Public Event EventArrived As EventArrivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::EventArrivedEventHandler ^ EventArrived;" />
      <MemberSignature Language="F#" Value="member this.EventArrived : System.Management.EventArrivedEventHandler " Usage="member this.EventArrived : System.Management.EventArrivedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventArrivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9f03-191">Occurs when a new event arrives.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-191">Occurs when a new event arrives.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="c9f03-192">이벤트 데이터</span><span class="sxs-lookup"><span data-stu-id="c9f03-192">Event Data</span></span>  
 <span data-ttu-id="c9f03-193">이벤트 처리기 형식의 인수를 받습니다. <xref:System.Management.EventArrivedEventArgs> 이 이벤트와 관련 된 데이터가 들어 있는입니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-193">The event handler receives an argument of type <xref:System.Management.EventArrivedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="c9f03-194">다음 <xref:System.Management.EventArrivedEventArgs> 속성이이 이벤트에 관련 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-194">The following <xref:System.Management.EventArrivedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="c9f03-195">속성</span><span class="sxs-lookup"><span data-stu-id="c9f03-195">Property</span></span>|<span data-ttu-id="c9f03-196">설명</span><span class="sxs-lookup"><span data-stu-id="c9f03-196">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="c9f03-197"><xref:System.Management.ManagementEventArgs.Context%2A> (에서 상속 되며, <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="c9f03-197"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="c9f03-198">이벤트를 트리거한 작업에서 반환된 작업 컨텍스트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-198">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.EventArrivedEventArgs.NewEvent%2A>|<span data-ttu-id="c9f03-199">제공 되는 WMI 이벤트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-199">Gets the WMI event that was delivered.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="c9f03-200">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="c9f03-200">.NET Framework Security</span></span>  
 <span data-ttu-id="c9f03-201">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-201">Full trust for the immediate caller.</span></span> <span data-ttu-id="c9f03-202">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-202">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c9f03-203">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-203">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ManagementEventWatcher ()" />
      <MemberSignature Language="F#" Value="abstract member Finalize : unit -&gt; unit&#xA;override this.Finalize : unit -&gt; unit" Usage="managementEventWatcher.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9f03-204">Ensures that outstanding calls are cleared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-204">Ensures that outstanding calls are cleared.</span>
          </span>
          <span data-ttu-id="c9f03-205">This is the destructor for the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-205">This is the destructor for the object.</span>
          </span>
          <span data-ttu-id="c9f03-206">In C#, finalizers are expressed using destructor syntax.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-206">In C#, finalizers are expressed using destructor syntax.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="c9f03-207">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="c9f03-207">.NET Framework Security</span></span>  
 <span data-ttu-id="c9f03-208">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-208">Full trust for the immediate caller.</span></span> <span data-ttu-id="c9f03-209">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-209">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c9f03-210">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-210">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Management.EventWatcherOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventWatcherOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As EventWatcherOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventWatcherOptions ^ Options { System::Management::EventWatcherOptions ^ get(); void set(System::Management::EventWatcherOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Management.EventWatcherOptions with get, set" Usage="System.Management.ManagementEventWatcher.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventWatcherOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9f03-211">Gets or sets the options used to watch for events.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-211">Gets or sets the options used to watch for events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9f03-212">반환 된 <see cref="T:System.Management.EventWatcherOptions" /> 이벤트 옵션이 이벤트를 조사 하는 데 사용 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-212">Returns an <see cref="T:System.Management.EventWatcherOptions" /> that contains the event options used to watch for events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="c9f03-213">속성 값</span><span class="sxs-lookup"><span data-stu-id="c9f03-213">Property Value</span></span>  
 <span data-ttu-id="c9f03-214">이벤트를 조사 하는 데 사용 하는 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-214">The options used to watch for events.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="c9f03-215">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="c9f03-215">.NET Framework Security</span></span>  
 <span data-ttu-id="c9f03-216">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-216">Full trust for the immediate caller.</span></span> <span data-ttu-id="c9f03-217">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-217">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c9f03-218">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-218">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9f03-219">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. **Win32_Process** 이벤트 클래스는 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-219">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c9f03-220">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-220">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="c9f03-221">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-221">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c9f03-222">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-222">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/cs/ManagementEventWatcher_Options.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/vb/ManagementEventWatcher_Options.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public System.Management.EventQuery Query { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventQuery Query" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Query" />
      <MemberSignature Language="VB.NET" Value="Public Property Query As EventQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventQuery ^ Query { System::Management::EventQuery ^ get(); void set(System::Management::EventQuery ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Query : System.Management.EventQuery with get, set" Usage="System.Management.ManagementEventWatcher.Query" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9f03-223">Gets or sets the criteria to apply to events.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-223">Gets or sets the criteria to apply to events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9f03-224">반환 된 <see cref="T:System.Management.EventQuery" /> 이벤트에 적용할 쿼리 포함 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-224">Returns an <see cref="T:System.Management.EventQuery" /> that contains the query to apply to events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="c9f03-225">속성 값</span><span class="sxs-lookup"><span data-stu-id="c9f03-225">Property Value</span></span>  
 <span data-ttu-id="c9f03-226">것과 같은 이벤트에 적용 하는 기준의 *이벤트 쿼리*합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-226">The criteria to apply to the events, which is equal to the *event query*.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="c9f03-227">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="c9f03-227">.NET Framework Security</span></span>  
 <span data-ttu-id="c9f03-228">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-228">Full trust for the immediate caller.</span></span> <span data-ttu-id="c9f03-229">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-229">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c9f03-230">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-230">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9f03-231">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. **Win32_Process** 이벤트 클래스는 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-231">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c9f03-232">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-232">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="c9f03-233">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-233">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c9f03-234">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-234">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/cs/ManagementEventWatcher_Query.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/vb/ManagementEventWatcher_Query.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Management.ManagementScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.ManagementScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As ManagementScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::ManagementScope ^ Scope { System::Management::ManagementScope ^ get(); void set(System::Management::ManagementScope ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : System.Management.ManagementScope with get, set" Usage="System.Management.ManagementEventWatcher.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9f03-235">Gets or sets the scope in which to watch for events (namespace or scope).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-235">Gets or sets the scope in which to watch for events (namespace or scope).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9f03-236">반환 된 <see cref="T:System.Management.ManagementScope" /> 범위를 포함 하는 이벤트를 조사 하는 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-236">Returns a <see cref="T:System.Management.ManagementScope" /> that contains the scope the in which to watch for events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="c9f03-237">속성 값</span><span class="sxs-lookup"><span data-stu-id="c9f03-237">Property Value</span></span>  
 <span data-ttu-id="c9f03-238">(네임 스페이스 또는 범위) 이벤트 감시 하는 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-238">The scope in which to watch for events (namespace or scope).</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="c9f03-239">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="c9f03-239">.NET Framework Security</span></span>  
 <span data-ttu-id="c9f03-240">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-240">Full trust for the immediate caller.</span></span> <span data-ttu-id="c9f03-241">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-241">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c9f03-242">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-242">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9f03-243">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. **Win32_Process** 이벤트 클래스는 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-243">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c9f03-244">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-244">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="c9f03-245">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-245">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c9f03-246">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-246">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/cs/ManagementEventWatcher_Scope.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/vb/ManagementEventWatcher_Scope.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="managementEventWatcher.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9f03-247">Subscribes to events with the given query and delivers them, asynchronously, through the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-247">Subscribes to events with the given query and delivers them, asynchronously, through the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="c9f03-248">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="c9f03-248">.NET Framework Security</span></span>  
 <span data-ttu-id="c9f03-249">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-249">Full trust for the immediate caller.</span></span> <span data-ttu-id="c9f03-250">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-250">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c9f03-251">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-251">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="managementEventWatcher.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9f03-252">Cancels the subscription whether it is synchronous or asynchronous.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-252">Cancels the subscription whether it is synchronous or asynchronous.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="c9f03-253">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="c9f03-253">.NET Framework Security</span></span>  
 <span data-ttu-id="c9f03-254">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-254">Full trust for the immediate caller.</span></span> <span data-ttu-id="c9f03-255">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-255">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c9f03-256">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-256">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9f03-257">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. **Win32_Process** 이벤트 클래스는 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-257">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c9f03-258">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-258">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="c9f03-259">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-259">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c9f03-260">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-260">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/cs/ManagementEventWatcher_Stop.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/vb/ManagementEventWatcher_Stop.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event System.Management.StoppedEventHandler Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.StoppedEventHandler Stopped" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.Stopped" />
      <MemberSignature Language="VB.NET" Value="Public Event Stopped As StoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::StoppedEventHandler ^ Stopped;" />
      <MemberSignature Language="F#" Value="member this.Stopped : System.Management.StoppedEventHandler " Usage="member this.Stopped : System.Management.StoppedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.StoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9f03-261">Occurs when a subscription is canceled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-261">Occurs when a subscription is canceled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="c9f03-262">이벤트 데이터</span><span class="sxs-lookup"><span data-stu-id="c9f03-262">Event Data</span></span>  
 <span data-ttu-id="c9f03-263">이벤트 처리기 형식의 인수를 받습니다. <xref:System.Management.StoppedEventArgs> 이 이벤트와 관련 된 데이터가 들어 있는입니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-263">The event handler receives an argument of type <xref:System.Management.StoppedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="c9f03-264">다음 <xref:System.Management.StoppedEventArgs> 속성이이 이벤트에 관련 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-264">The following <xref:System.Management.StoppedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="c9f03-265">속성</span><span class="sxs-lookup"><span data-stu-id="c9f03-265">Property</span></span>|<span data-ttu-id="c9f03-266">설명</span><span class="sxs-lookup"><span data-stu-id="c9f03-266">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="c9f03-267"><xref:System.Management.ManagementEventArgs.Context%2A> (에서 상속 되며, <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="c9f03-267"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="c9f03-268">이벤트를 트리거한 작업에서 반환된 작업 컨텍스트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-268">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.StoppedEventArgs.Status%2A>|<span data-ttu-id="c9f03-269">작업의 완료 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-269">Gets the completion status of the operation.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="c9f03-270">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="c9f03-270">.NET Framework Security</span></span>  
 <span data-ttu-id="c9f03-271">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-271">Full trust for the immediate caller.</span></span> <span data-ttu-id="c9f03-272">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-272">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c9f03-273">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-273">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForNextEvent">
      <MemberSignature Language="C#" Value="public System.Management.ManagementBaseObject WaitForNextEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementBaseObject WaitForNextEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.WaitForNextEvent" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForNextEvent () As ManagementBaseObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementBaseObject ^ WaitForNextEvent();" />
      <MemberSignature Language="F#" Value="member this.WaitForNextEvent : unit -&gt; System.Management.ManagementBaseObject" Usage="managementEventWatcher.WaitForNextEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementBaseObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9f03-274">Waits for the next event that matches the specified query to arrive, and then returns it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-274">Waits for the next event that matches the specified query to arrive, and then returns it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9f03-275">A <see cref="T:System.Management.ManagementBaseObject" /> representing the newly arrived event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f03-275">A <see cref="T:System.Management.ManagementBaseObject" /> representing the newly arrived event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9f03-276">지정된 된 양의 시간;에 대 한 API는 다음 이벤트에 대 한 대기할 이벤트 감시자 개체에 지정된 된 제한 시간 옵션 포함 된 경우 이렇게 하지 않으면 API는 다음 이벤트가 발생할 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-276">If the event watcher object contains options with a specified time-out, the API will wait for the next event only for the specified amount of time; otherwise, the API will be blocked until the next event occurs.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="c9f03-277">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="c9f03-277">.NET Framework Security</span></span>  
 <span data-ttu-id="c9f03-278">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-278">Full trust for the immediate caller.</span></span> <span data-ttu-id="c9f03-279">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-279">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="c9f03-280">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-280">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9f03-281">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. **Win32_Process** 이벤트 클래스는 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-281">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="c9f03-282">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-282">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="c9f03-283">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-283">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="c9f03-284">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9f03-284">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/cs/ManagementEventWatcher_WaitForNextEvent.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/vb/ManagementEventWatcher_WaitForNextEvent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>