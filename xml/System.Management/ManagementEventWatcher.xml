<Type Name="ManagementEventWatcher" FullName="System.Management.ManagementEventWatcher">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0ed38b26f75ef973e22de3488c8a5d889870902c" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52916903" /></Metadata><TypeSignature Language="C#" Value="public class ManagementEventWatcher : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementEventWatcher extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementEventWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementEventWatcher&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEventWatcher : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ManagementEventWatcher = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b411b-101">지정된 *이벤트 쿼리*에 따라 임시 이벤트 알림을 신청합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-101">Subscribes to temporary event notifications based on a specified *event query*.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b411b-102">다음 예제에서는 클라이언트의 경우 인스턴스의 알림을 수신 하는 방법을 보여 줍니다 **Win32_Process** 이벤트 클래스 이므로 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-102">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="b411b-103">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하세요. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-103">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="b411b-104">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-104">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="b411b-105">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-105">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b411b-106"><see cref="T:System.Management.ManagementEventWatcher" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-106">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b411b-107"><see cref="T:System.Management.ManagementEventWatcher" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-107">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span></span> <span data-ttu-id="b411b-108">추가로 초기화하려면 개체의 속성을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-108">For further initialization, set the properties on the object.</span></span> <span data-ttu-id="b411b-109">이것이 기본 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-109">This is the default constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="b411b-110">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="b411b-110">.NET Framework Security</span></span>  
 <span data-ttu-id="b411b-111">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="b411b-112">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b411b-113">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b411b-114">다음 예제에서는 클라이언트의 경우 인스턴스의 알림을 수신 하는 방법을 보여 줍니다 **Win32_Process** 이벤트 클래스 이므로 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-114">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="b411b-115">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하세요. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-115">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="b411b-116">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-116">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="b411b-117">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-117">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="b411b-118">감시자가 수신할 이벤트를 결정하는 WMI 이벤트 쿼리를 나타내는 <see cref="T:System.Management.EventQuery" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-118">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="b411b-119">WMI *이벤트 쿼리*에 따라 <see cref="T:System.Management.ManagementEventWatcher" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-119">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query*.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b411b-120">네임 스페이스는 감시자가 수신할 이벤트에 대 한 기본 네임 스페이스는 현재 설정 된 경우</span><span class="sxs-lookup"><span data-stu-id="b411b-120">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="b411b-121">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="b411b-121">.NET Framework Security</span></span>  
 <span data-ttu-id="b411b-122">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="b411b-123">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b411b-124">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b411b-125">이 코드 예제에서는 클라이언트가 받는 알림의 인스턴스가 **Win32_Process** 이벤트 클래스 이므로 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-125">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="b411b-126">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하세요. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-126">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="b411b-127">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-127">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="b411b-128">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-128">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/cs/ManagementEventWatcher-E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/vb/ManagementEventWatcher-E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="b411b-129">감시자가 수신할 이벤트를 정의하는 WMI 이벤트 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-129">A WMI event query, which defines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="b411b-130">WMI *이벤트 쿼리*가 문자열 형태로 지정되면 <see cref="T:System.Management.ManagementEventWatcher" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-130">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query* in the form of a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b411b-131">네임 스페이스는 감시자가 수신할 이벤트에 대 한 기본 네임 스페이스는 현재 설정 된 경우</span><span class="sxs-lookup"><span data-stu-id="b411b-131">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="b411b-132">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="b411b-132">.NET Framework Security</span></span>  
 <span data-ttu-id="b411b-133">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-133">Full trust for the immediate caller.</span></span> <span data-ttu-id="b411b-134">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-134">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b411b-135">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-135">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b411b-136">다음 예제에서는 클라이언트의 경우 인스턴스의 알림을 수신 하는 방법을 보여 줍니다 **Win32_Process** 이벤트 클래스 이므로 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-136">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="b411b-137">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하세요. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-137">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="b411b-138">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-138">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="b411b-139">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-139">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/cs/ManagementEventWatcher-S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/vb/ManagementEventWatcher-S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="b411b-140">감시자가 이벤트를 수신할 범위(네임스페이스)를 나타내는 <see cref="T:System.Management.ManagementScope" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-140">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="b411b-141">감시자가 수신할 이벤트를 결정하는 WMI 이벤트 쿼리를 나타내는 <see cref="T:System.Management.EventQuery" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-141">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="b411b-142">지정된 WMI *이벤트 쿼리*와 일치하는 이벤트를 수신하는 <see cref="T:System.Management.ManagementEventWatcher" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-142">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="b411b-143">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="b411b-143">.NET Framework Security</span></span>  
 <span data-ttu-id="b411b-144">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-144">Full trust for the immediate caller.</span></span> <span data-ttu-id="b411b-145">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-145">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b411b-146">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-146">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b411b-147">이 코드 예제에서는 클라이언트가 받는 알림의 인스턴스가 **Win32_Process** 이벤트 클래스 이므로 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-147">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="b411b-148">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하세요. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-148">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="b411b-149">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-149">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="b411b-150">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-150">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/cs/ManagementEventWatcher-M_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/vb/ManagementEventWatcher-M_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="b411b-151">감시자가 이벤트를 수신할 관리 범위(네임스페이스)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-151">The management scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="b411b-152">감시자가 수신할 이벤트를 정의하는 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-152">The query that defines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="b411b-153">지정된 WMI *이벤트 쿼리*와 일치하는 이벤트를 수신하는 <see cref="T:System.Management.ManagementEventWatcher" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-153">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span></span> <span data-ttu-id="b411b-154">이 변형에서는 쿼리와 범위가 문자열로 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-154">For this variant, the query and the scope are specified as strings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="b411b-155">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="b411b-155">.NET Framework Security</span></span>  
 <span data-ttu-id="b411b-156">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-156">Full trust for the immediate caller.</span></span> <span data-ttu-id="b411b-157">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-157">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b411b-158">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-158">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b411b-159">다음 예제에서는 클라이언트의 경우 인스턴스의 알림을 수신 하는 방법을 보여 줍니다 **Win32_Process** 이벤트 클래스 이므로 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-159">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="b411b-160">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하세요. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-160">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="b411b-161">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-161">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="b411b-162">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-162">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/cs/ManagementEventWatcher-S_S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/vb/ManagementEventWatcher-S_S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="b411b-163">감시자가 이벤트를 수신할 범위(네임스페이스)를 나타내는 <see cref="T:System.Management.ManagementScope" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-163">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="b411b-164">감시자가 수신할 이벤트를 결정하는 WMI 이벤트 쿼리를 나타내는 <see cref="T:System.Management.EventQuery" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-164">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span></span></param>
        <param name="options"><span data-ttu-id="b411b-165">이벤트를 조사하는 데 사용할 추가 옵션을 나타내는 <see cref="T:System.Management.EventWatcherOptions" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-165">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span></span></param>
        <summary><span data-ttu-id="b411b-166">지정된 옵션에 따라, 지정된 WMI 이벤트 쿼리와 일치하는 이벤트를 수신하는 <see cref="T:System.Management.ManagementEventWatcher" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-166">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query, according to the specified options.</span></span> <span data-ttu-id="b411b-167">이 변형에서는 쿼리와 범위가 개체로 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-167">For this variant, the query and the scope are specified objects.</span></span> <span data-ttu-id="b411b-168">옵션 개체에서는 시간 제한 및 컨텍스트 정보와 같은 옵션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-168">The options object can specify options such as time-out and context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="b411b-169">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="b411b-169">.NET Framework Security</span></span>  
 <span data-ttu-id="b411b-170">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-170">Full trust for the immediate caller.</span></span> <span data-ttu-id="b411b-171">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-171">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b411b-172">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-172">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b411b-173">다음 예제에서는 클라이언트의 경우 인스턴스의 알림을 수신 하는 방법을 보여 줍니다 **Win32_Process** 이벤트 클래스 이므로 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-173">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="b411b-174">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하세요. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-174">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="b411b-175">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-175">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="b411b-176">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-176">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/cs/ManagementEventWatcher-M_E_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/vb/ManagementEventWatcher-M_E_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="b411b-177">감시자가 이벤트를 수신할 관리 범위(네임스페이스)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-177">The management scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="b411b-178">감시자가 수신할 이벤트를 정의하는 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-178">The query that defines the events for which the watcher will listen.</span></span></param>
        <param name="options"><span data-ttu-id="b411b-179">이벤트를 조사하는 데 사용할 추가 옵션을 나타내는 <see cref="T:System.Management.EventWatcherOptions" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-179">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span></span></param>
        <summary><span data-ttu-id="b411b-180">지정된 옵션에 따라, 지정된 WMI *이벤트 쿼리*와 일치하는 이벤트를 수신하는 <see cref="T:System.Management.ManagementEventWatcher" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-180">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*, according to the specified options.</span></span> <span data-ttu-id="b411b-181">이 변형에서는 쿼리와 범위가 문자열로 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-181">For this variant, the query and the scope are specified as strings.</span></span> <span data-ttu-id="b411b-182">옵션 개체에서는 시간 제한 및 컨텍스트 정보와 같은 옵션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-182">The options object can specify options such as a time-out and context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="b411b-183">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="b411b-183">.NET Framework Security</span></span>  
 <span data-ttu-id="b411b-184">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="b411b-185">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b411b-186">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-186">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b411b-187">다음 예제에서는 클라이언트의 경우 인스턴스의 알림을 수신 하는 방법을 보여 줍니다 **Win32_Process** 이벤트 클래스 이므로 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-187">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="b411b-188">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하세요. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-188">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="b411b-189">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-189">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="b411b-190">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-190">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/cs/ManagementEventWatcher-S_S_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/vb/ManagementEventWatcher-S_S_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventArrived">
      <MemberSignature Language="C#" Value="public event System.Management.EventArrivedEventHandler EventArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.EventArrivedEventHandler EventArrived" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.EventArrived" />
      <MemberSignature Language="VB.NET" Value="Public Event EventArrived As EventArrivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::EventArrivedEventHandler ^ EventArrived;" />
      <MemberSignature Language="F#" Value="member this.EventArrived : System.Management.EventArrivedEventHandler " Usage="member this.EventArrived : System.Management.EventArrivedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventArrivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b411b-191">새 이벤트가 도착하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-191">Occurs when a new event arrives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="b411b-192">이벤트 데이터</span><span class="sxs-lookup"><span data-stu-id="b411b-192">Event Data</span></span>  
 <span data-ttu-id="b411b-193">이벤트 처리기 형식의 인수를 받는 <xref:System.Management.EventArrivedEventArgs> 이 이벤트와 관련 된 데이터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-193">The event handler receives an argument of type <xref:System.Management.EventArrivedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="b411b-194">다음 <xref:System.Management.EventArrivedEventArgs> 속성이이 이벤트에 관련 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-194">The following <xref:System.Management.EventArrivedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="b411b-195">속성</span><span class="sxs-lookup"><span data-stu-id="b411b-195">Property</span></span>|<span data-ttu-id="b411b-196">설명</span><span class="sxs-lookup"><span data-stu-id="b411b-196">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="b411b-197"><xref:System.Management.ManagementEventArgs.Context%2A> (에서 상속 되며, <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="b411b-197"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="b411b-198">이벤트를 트리거한 작업에서 반환된 작업 컨텍스트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-198">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.EventArrivedEventArgs.NewEvent%2A>|<span data-ttu-id="b411b-199">배달된 WMI 이벤트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-199">Gets the WMI event that was delivered.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="b411b-200">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="b411b-200">.NET Framework Security</span></span>  
 <span data-ttu-id="b411b-201">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-201">Full trust for the immediate caller.</span></span> <span data-ttu-id="b411b-202">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-202">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b411b-203">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-203">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ManagementEventWatcher ()" />
      <MemberSignature Language="F#" Value="abstract member Finalize : unit -&gt; unit&#xA;override this.Finalize : unit -&gt; unit" Usage="managementEventWatcher.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b411b-204">아직 해결되지 않은 호출을 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-204">Ensures that outstanding calls are cleared.</span></span> <span data-ttu-id="b411b-205">개체의 소멸자입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-205">This is the destructor for the object.</span></span> <span data-ttu-id="b411b-206">C#에서 종료자는 소멸자 구문을 사용하여 표현됩니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-206">In C#, finalizers are expressed using destructor syntax.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="b411b-207">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="b411b-207">.NET Framework Security</span></span>  
 <span data-ttu-id="b411b-208">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-208">Full trust for the immediate caller.</span></span> <span data-ttu-id="b411b-209">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-209">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b411b-210">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-210">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Management.EventWatcherOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventWatcherOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As EventWatcherOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventWatcherOptions ^ Options { System::Management::EventWatcherOptions ^ get(); void set(System::Management::EventWatcherOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Management.EventWatcherOptions with get, set" Usage="System.Management.ManagementEventWatcher.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventWatcherOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b411b-211">이벤트를 조사하는 데 사용할 옵션을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-211">Gets or sets the options used to watch for events.</span></span></summary>
        <value><span data-ttu-id="b411b-212">이벤트를 조사하는 데 사용할 이벤트 옵션이 들어 있는 <see cref="T:System.Management.EventWatcherOptions" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-212">Returns an <see cref="T:System.Management.EventWatcherOptions" /> that contains the event options used to watch for events.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="b411b-213">속성 값</span><span class="sxs-lookup"><span data-stu-id="b411b-213">Property Value</span></span>  
 <span data-ttu-id="b411b-214">이벤트를 조사 하는 데 사용 하는 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-214">The options used to watch for events.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="b411b-215">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="b411b-215">.NET Framework Security</span></span>  
 <span data-ttu-id="b411b-216">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-216">Full trust for the immediate caller.</span></span> <span data-ttu-id="b411b-217">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-217">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b411b-218">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-218">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b411b-219">다음 예제에서는 클라이언트의 경우 인스턴스의 알림을 수신 하는 방법을 보여 줍니다 **Win32_Process** 이벤트 클래스 이므로 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-219">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="b411b-220">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하세요. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-220">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="b411b-221">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-221">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="b411b-222">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-222">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/cs/ManagementEventWatcher_Options.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/vb/ManagementEventWatcher_Options.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public System.Management.EventQuery Query { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventQuery Query" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Query" />
      <MemberSignature Language="VB.NET" Value="Public Property Query As EventQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventQuery ^ Query { System::Management::EventQuery ^ get(); void set(System::Management::EventQuery ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Query : System.Management.EventQuery with get, set" Usage="System.Management.ManagementEventWatcher.Query" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b411b-223">이벤트에 적용할 기준을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-223">Gets or sets the criteria to apply to events.</span></span></summary>
        <value><span data-ttu-id="b411b-224">이벤트에 적용할 쿼리가 들어 있는 <see cref="T:System.Management.EventQuery" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-224">Returns an <see cref="T:System.Management.EventQuery" /> that contains the query to apply to events.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="b411b-225">속성 값</span><span class="sxs-lookup"><span data-stu-id="b411b-225">Property Value</span></span>  
 <span data-ttu-id="b411b-226">과 동일한 이벤트에 적용할 기준을 합니다 *이벤트 쿼리*합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-226">The criteria to apply to the events, which is equal to the *event query*.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="b411b-227">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="b411b-227">.NET Framework Security</span></span>  
 <span data-ttu-id="b411b-228">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-228">Full trust for the immediate caller.</span></span> <span data-ttu-id="b411b-229">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-229">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b411b-230">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-230">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b411b-231">다음 예제에서는 클라이언트의 경우 인스턴스의 알림을 수신 하는 방법을 보여 줍니다 **Win32_Process** 이벤트 클래스 이므로 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-231">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="b411b-232">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하세요. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-232">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="b411b-233">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-233">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="b411b-234">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-234">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/cs/ManagementEventWatcher_Query.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/vb/ManagementEventWatcher_Query.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Management.ManagementScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.ManagementScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As ManagementScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::ManagementScope ^ Scope { System::Management::ManagementScope ^ get(); void set(System::Management::ManagementScope ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : System.Management.ManagementScope with get, set" Usage="System.Management.ManagementEventWatcher.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b411b-235">이벤트를 조사할 범위(네임스페이스 또는 범위)를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-235">Gets or sets the scope in which to watch for events (namespace or scope).</span></span></summary>
        <value><span data-ttu-id="b411b-236">이벤트를 조사할 범위가 들어 있는 <see cref="T:System.Management.ManagementScope" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-236">Returns a <see cref="T:System.Management.ManagementScope" /> that contains the scope the in which to watch for events.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="b411b-237">속성 값</span><span class="sxs-lookup"><span data-stu-id="b411b-237">Property Value</span></span>  
 <span data-ttu-id="b411b-238">(네임 스페이스 또는 범위) 이벤트를 조사 하는 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-238">The scope in which to watch for events (namespace or scope).</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="b411b-239">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="b411b-239">.NET Framework Security</span></span>  
 <span data-ttu-id="b411b-240">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-240">Full trust for the immediate caller.</span></span> <span data-ttu-id="b411b-241">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-241">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b411b-242">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-242">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b411b-243">다음 예제에서는 클라이언트의 경우 인스턴스의 알림을 수신 하는 방법을 보여 줍니다 **Win32_Process** 이벤트 클래스 이므로 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-243">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="b411b-244">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하세요. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-244">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="b411b-245">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-245">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="b411b-246">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-246">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/cs/ManagementEventWatcher_Scope.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/vb/ManagementEventWatcher_Scope.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="managementEventWatcher.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b411b-247">지정된 쿼리를 사용하여 이벤트에 등록하고 <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> 이벤트를 통해 비동기적으로 배달합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-247">Subscribes to events with the given query and delivers them, asynchronously, through the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="b411b-248">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="b411b-248">.NET Framework Security</span></span>  
 <span data-ttu-id="b411b-249">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-249">Full trust for the immediate caller.</span></span> <span data-ttu-id="b411b-250">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-250">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b411b-251">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-251">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="managementEventWatcher.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b411b-252">동기적이든지 비동기적이든지 상관없이 등록을 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-252">Cancels the subscription whether it is synchronous or asynchronous.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="b411b-253">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="b411b-253">.NET Framework Security</span></span>  
 <span data-ttu-id="b411b-254">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-254">Full trust for the immediate caller.</span></span> <span data-ttu-id="b411b-255">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-255">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b411b-256">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-256">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b411b-257">다음 예제에서는 클라이언트의 경우 인스턴스의 알림을 수신 하는 방법을 보여 줍니다 **Win32_Process** 이벤트 클래스 이므로 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-257">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="b411b-258">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하세요. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-258">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="b411b-259">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-259">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="b411b-260">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-260">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/cs/ManagementEventWatcher_Stop.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/vb/ManagementEventWatcher_Stop.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event System.Management.StoppedEventHandler Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.StoppedEventHandler Stopped" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.Stopped" />
      <MemberSignature Language="VB.NET" Value="Public Event Stopped As StoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::StoppedEventHandler ^ Stopped;" />
      <MemberSignature Language="F#" Value="member this.Stopped : System.Management.StoppedEventHandler " Usage="member this.Stopped : System.Management.StoppedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.StoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b411b-261">등록이 취소되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-261">Occurs when a subscription is canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="b411b-262">이벤트 데이터</span><span class="sxs-lookup"><span data-stu-id="b411b-262">Event Data</span></span>  
 <span data-ttu-id="b411b-263">이벤트 처리기 형식의 인수를 받는 <xref:System.Management.StoppedEventArgs> 이 이벤트와 관련 된 데이터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-263">The event handler receives an argument of type <xref:System.Management.StoppedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="b411b-264">다음 <xref:System.Management.StoppedEventArgs> 속성이이 이벤트에 관련 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-264">The following <xref:System.Management.StoppedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="b411b-265">속성</span><span class="sxs-lookup"><span data-stu-id="b411b-265">Property</span></span>|<span data-ttu-id="b411b-266">설명</span><span class="sxs-lookup"><span data-stu-id="b411b-266">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="b411b-267"><xref:System.Management.ManagementEventArgs.Context%2A> (에서 상속 되며, <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="b411b-267"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="b411b-268">이벤트를 트리거한 작업에서 반환된 작업 컨텍스트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-268">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.StoppedEventArgs.Status%2A>|<span data-ttu-id="b411b-269">작업의 완료 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-269">Gets the completion status of the operation.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="b411b-270">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="b411b-270">.NET Framework Security</span></span>  
 <span data-ttu-id="b411b-271">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-271">Full trust for the immediate caller.</span></span> <span data-ttu-id="b411b-272">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-272">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b411b-273">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-273">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForNextEvent">
      <MemberSignature Language="C#" Value="public System.Management.ManagementBaseObject WaitForNextEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementBaseObject WaitForNextEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.WaitForNextEvent" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForNextEvent () As ManagementBaseObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementBaseObject ^ WaitForNextEvent();" />
      <MemberSignature Language="F#" Value="member this.WaitForNextEvent : unit -&gt; System.Management.ManagementBaseObject" Usage="managementEventWatcher.WaitForNextEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementBaseObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b411b-274">지정된 쿼리와 일치하는 다음 이벤트가 도착하기를 기다린 다음 해당 이벤트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-274">Waits for the next event that matches the specified query to arrive, and then returns it.</span></span></summary>
        <returns><span data-ttu-id="b411b-275">새로 도착한 이벤트를 나타내는 <see cref="T:System.Management.ManagementBaseObject" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-275">A <see cref="T:System.Management.ManagementBaseObject" /> representing the newly arrived event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b411b-276">지정된 된 양의 시간 동안만 다음 이벤트에 대 한 API 대기는 지정된 된 제한 시간을 사용 하 여 옵션을 포함 하는 event watcher 개체, 경우 그렇지 않은 경우 API는 다음 이벤트가 발생할 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-276">If the event watcher object contains options with a specified time-out, the API will wait for the next event only for the specified amount of time; otherwise, the API will be blocked until the next event occurs.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="b411b-277">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="b411b-277">.NET Framework Security</span></span>  
 <span data-ttu-id="b411b-278">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-278">Full trust for the immediate caller.</span></span> <span data-ttu-id="b411b-279">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-279">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b411b-280">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-280">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b411b-281">다음 예제에서는 클라이언트의 경우 인스턴스의 알림을 수신 하는 방법을 보여 줍니다 **Win32_Process** 이벤트 클래스 이므로 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-281">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="b411b-282">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하세요. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-282">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="b411b-283">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-283">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="b411b-284">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b411b-284">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/cs/ManagementEventWatcher_WaitForNextEvent.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/vb/ManagementEventWatcher_WaitForNextEvent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>