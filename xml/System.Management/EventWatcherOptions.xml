<Type Name="EventWatcherOptions" FullName="System.Management.EventWatcherOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d15ff269f86025057aa8238f0391207e81923a7e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36477936" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventWatcherOptions : System.Management.ManagementOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventWatcherOptions extends System.Management.ManagementOptions" />
  <TypeSignature Language="DocId" Value="T:System.Management.EventWatcherOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class EventWatcherOptions&#xA;Inherits ManagementOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWatcherOptions : System::Management::ManagementOptions" />
  <TypeSignature Language="F#" Value="type EventWatcherOptions = class&#xA;    inherit ManagementOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.ManagementOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fa793-101">관리 이벤트 조사에 대한 옵션을 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fa793-101">Specifies options for management event watching.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fa793-102">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. **Win32_Process** 이벤트 클래스는 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-102">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="fa793-103">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-103">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</span></span> <span data-ttu-id="fa793-104">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-104">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="fa793-105">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-105">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_EventWatcherOptions#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventWatcherOptions/cs/EventWatcherOptions.cs#1)]
 [!code-vb[wminet_EventWatcherOptions#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventWatcherOptions/vb/EventWatcherOptions.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fa793-106">이벤트 조사에 대한 <see cref="T:System.Management.EventWatcherOptions" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa793-106">Initializes a new instance of the <see cref="T:System.Management.EventWatcherOptions" /> class for event watching.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWatcherOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.EventWatcherOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWatcherOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fa793-107">기본값을 사용하여 이벤트 조사에 대한 <see cref="T:System.Management.EventWatcherOptions" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa793-107">Initializes a new instance of the <see cref="T:System.Management.EventWatcherOptions" /> class for event watching, using default values.</span>
          </span>
          <span data-ttu-id="fa793-108">이것이 기본 생성자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa793-108">This is the default constructor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="fa793-109">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="fa793-109">.NET Framework Security</span></span>  
 <span data-ttu-id="fa793-110">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-110">Full trust for the immediate caller.</span></span> <span data-ttu-id="fa793-111">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-111">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="fa793-112">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-112">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa793-113">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. **Win32_Process** 이벤트 클래스는 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-113">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="fa793-114">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-114">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</span></span> <span data-ttu-id="fa793-115">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-115">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="fa793-116">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-116">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_EventWatcherOptions#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventWatcherOptions/cs/EventWatcherOptions.cs#1)]
 [!code-vb[wminet_EventWatcherOptions#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventWatcherOptions/vb/EventWatcherOptions.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWatcherOptions (System.Management.ManagementNamedValueCollection context, TimeSpan timeout, int blockSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementNamedValueCollection context, valuetype System.TimeSpan timeout, int32 blockSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.EventWatcherOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As ManagementNamedValueCollection, timeout As TimeSpan, blockSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWatcherOptions(System::Management::ManagementNamedValueCollection ^ context, TimeSpan timeout, int blockSize);" />
      <MemberSignature Language="F#" Value="new System.Management.EventWatcherOptions : System.Management.ManagementNamedValueCollection * TimeSpan * int -&gt; System.Management.EventWatcherOptions" Usage="new System.Management.EventWatcherOptions (context, timeout, blockSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Management.ManagementNamedValueCollection" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="blockSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="fa793-117">공급자에게 전달될 공급자별 정보를 포함하는 옵션 컨텍스트 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa793-117">The options context object containing provider-specific information to be passed through to the provider.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="fa793-118">다음 이벤트에 대한 대기 제한 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa793-118">The time-out to wait for the next events.</span>
          </span>
        </param>
        <param name="blockSize">
          <span data-ttu-id="fa793-119">각 블록에서 대기하는 이벤트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa793-119">The number of events to wait for in each block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa793-120">지정된 값을 사용하여 <see cref="T:System.Management.EventWatcherOptions" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa793-120">Initializes a new instance of the <see cref="T:System.Management.EventWatcherOptions" /> class with the given values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="fa793-121">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="fa793-121">.NET Framework Security</span></span>  
 <span data-ttu-id="fa793-122">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="fa793-123">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="fa793-124">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa793-125">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. **Win32_Process** 이벤트 클래스는 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-125">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="fa793-126">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-126">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</span></span> <span data-ttu-id="fa793-127">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-127">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="fa793-128">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-128">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_EventWatcherOptions-3#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventWatcherOptions-3/cs/EventWatcherOptions-3.cs#1)]
 [!code-vb[wminet_EventWatcherOptions-3#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventWatcherOptions-3/vb/EventWatcherOptions-3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Management.EventWatcherOptions.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BlockSize : int with get, set" Usage="System.Management.EventWatcherOptions.BlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa793-129">블록 작업을 위한 블록 크기를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa793-129">Gets or sets the block size for block operations.</span>
          </span>
          <span data-ttu-id="fa793-130">이벤트를 기다릴 때 이 값은 반환 전 대기 이벤트 수를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa793-130">When waiting for events, this value specifies how many events to wait for before returning.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa793-131">작업 블록의 블록 크기를 나타내는 <see cref="T:System.Int32" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa793-131">Returns an <see cref="T:System.Int32" /> value indicating the block size for a block of operations.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="fa793-132">속성 값</span><span class="sxs-lookup"><span data-stu-id="fa793-132">Property Value</span></span>  
 <span data-ttu-id="fa793-133">기본값은 1입니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-133">The default value is 1.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="fa793-134">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="fa793-134">.NET Framework Security</span></span>  
 <span data-ttu-id="fa793-135">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-135">Full trust for the immediate caller.</span></span> <span data-ttu-id="fa793-136">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-136">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="fa793-137">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-137">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa793-138">다음 예제에서는 클라이언트 알림의 인스턴스가 수신 하는 방법을 보여 줍니다. **Win32_Process** 이벤트 클래스는 만들어집니다 **__InstanceCreationEvent**합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-138">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="fa793-139">자세한 내용은 MSDN library에서 Windows Management Instrumentation 설명서를 참조 하십시오. [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-139">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</span></span> <span data-ttu-id="fa793-140">클라이언트에서는 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 메서드를 호출하여 이벤트를 동기적으로 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-140">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="fa793-141">예제 코드가 실행될 때 메모장과 같은 프로세스를 시작하여 이 예제를 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-141">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_EventWatcherOptions_BlockSize#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventWatcherOptions_BlockSize/cs/EventWatcherOptions_BlockSize.cs#1)]
 [!code-vb[wminet_EventWatcherOptions_BlockSize#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventWatcherOptions_BlockSize/vb/EventWatcherOptions_BlockSize.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.EventWatcherOptions.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="eventWatcherOptions.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fa793-142">개체의 복사본을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa793-142">Returns a copy of the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa793-143">복제된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa793-143">The cloned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="fa793-144">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="fa793-144">.NET Framework Security</span></span>  
 <span data-ttu-id="fa793-145">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-145">Full trust for the immediate caller.</span></span> <span data-ttu-id="fa793-146">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-146">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="fa793-147">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fa793-147">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
  </Members>
</Type>