<Type Name="EnumerationOptions" FullName="System.Management.EnumerationOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="23201e8b9df029e51828ebe239766ea693a6dc7e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460337" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EnumerationOptions : System.Management.ManagementOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumerationOptions extends System.Management.ManagementOptions" />
  <TypeSignature Language="DocId" Value="T:System.Management.EnumerationOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class EnumerationOptions&#xA;Inherits ManagementOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumerationOptions : System::Management::ManagementOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.ManagementOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>쿼리 및 열거형 관련 옵션 개체에 기본 클래스를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 초기화는 <xref:System.Management.EnumerationOptions> 와 변수는 <xref:System.Management.EnumerationOptions> 생성자와 WMI 클래스와 해당 하위 클래스의 인스턴스를 모두 가져옵니다.  
  
 [!code-csharp[wminet_EnumerationOptions#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EnumerationOptions/cs/EnumerationOptions.cs#1)]
 [!code-vb[wminet_EnumerationOptions#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EnumerationOptions/vb/EnumerationOptions.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Management.EnumerationOptions" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumerationOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.EnumerationOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnumerationOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>기본값을 사용하여 <see cref="T:System.Management.EnumerationOptions" /> 클래스의 새 인스턴스를 초기화합니다. 기본값에 대한 자세한 내용은 개별 속성에 대한 설명을 참조하십시오. 이것이 기본 생성자입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 보안  
 직접 실행 호출자의 경우 완전히 신뢰합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 초기화는 <xref:System.Management.EnumerationOptions> 와 변수는 <xref:System.Management.EnumerationOptions> 생성자와 WMI 클래스와 해당 하위 클래스의 인스턴스를 모두 가져옵니다.  
  
 [!code-csharp[wminet_EnumerationOptions#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EnumerationOptions/cs/EnumerationOptions.cs#1)]
 [!code-vb[wminet_EnumerationOptions#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EnumerationOptions/vb/EnumerationOptions.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumerationOptions (System.Management.ManagementNamedValueCollection context, TimeSpan timeout, int blockSize, bool rewindable, bool returnImmediatley, bool useAmendedQualifiers, bool ensureLocatable, bool prototypeOnly, bool directRead, bool enumerateDeep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementNamedValueCollection context, valuetype System.TimeSpan timeout, int32 blockSize, bool rewindable, bool returnImmediatley, bool useAmendedQualifiers, bool ensureLocatable, bool prototypeOnly, bool directRead, bool enumerateDeep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.EnumerationOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As ManagementNamedValueCollection, timeout As TimeSpan, blockSize As Integer, rewindable As Boolean, returnImmediatley As Boolean, useAmendedQualifiers As Boolean, ensureLocatable As Boolean, prototypeOnly As Boolean, directRead As Boolean, enumerateDeep As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnumerationOptions(System::Management::ManagementNamedValueCollection ^ context, TimeSpan timeout, int blockSize, bool rewindable, bool returnImmediatley, bool useAmendedQualifiers, bool ensureLocatable, bool prototypeOnly, bool directRead, bool enumerateDeep);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Management.ManagementNamedValueCollection" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="blockSize" Type="System.Int32" />
        <Parameter Name="rewindable" Type="System.Boolean" />
        <Parameter Name="returnImmediatley" Type="System.Boolean" />
        <Parameter Name="useAmendedQualifiers" Type="System.Boolean" />
        <Parameter Name="ensureLocatable" Type="System.Boolean" />
        <Parameter Name="prototypeOnly" Type="System.Boolean" />
        <Parameter Name="directRead" Type="System.Boolean" />
        <Parameter Name="enumerateDeep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">공급자에게 전달될 수 있는 공급자별 정보를 포함하는 옵션 컨텍스트 개체입니다.</param>
        <param name="timeout">결과를 열거하기 위한 시간 제한 값입니다.</param>
        <param name="blockSize">WMI에서 한 번에 검색할 항목 수입니다.</param>
        <param name="rewindable">
          결과 집합을 되감아 여러 번 이동할 수 있게 하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="returnImmediatley">
          해당 작업에서 결과를 즉시 반환하도록 하거나(반동기식) 모든 결과가 준비되기 전에는 중지되도록 하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="useAmendedQualifiers">
          반환된 개체가 수정된(로캘을 인식하는) 한정자를 포함하도록 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="ensureLocatable">
          반환된 모든 개체에 올바른 경로가 있어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="prototypeOnly">
          실제 결과 대신 결과 집합의 프로토타입을 반환하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="directRead">
          지정된 클래스의 개체만 검색하거나 파생된 클래스에서도 검색하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="enumerateDeep">
          서브클래스에서 재귀적 열거형을 사용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>쿼리 또는 열거형에 사용할 <see cref="T:System.Management.EnumerationOptions" /> 클래스의 새 인스턴스를 초기화하여 사용자가 여러 옵션에 대한 값을 지정할 수 있도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 보안  
 직접 실행 호출자의 경우 완전히 신뢰합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 초기화는 <xref:System.Management.EnumerationOptions> 와 변수는 <xref:System.Management.EnumerationOptions> 생성자와 WMI 클래스와 해당 하위 클래스의 인스턴스를 모두 가져옵니다.  
  
 [!code-csharp[wminet_EnumerationOptions-10#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EnumerationOptions-10/cs/EnumerationOptions-10.cs#1)]
 [!code-vb[wminet_EnumerationOptions-10#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EnumerationOptions-10/vb/EnumerationOptions-10.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Management.EnumerationOptions.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>블록 작업을 위한 블록 크기를 가져오거나 설정합니다. 컬렉션 안에서 열거할 때 WMI에서는 결과를 지정한 크기의 그룹으로 반환합니다.</summary>
        <value>블록 작업에서 블록 크기에 사용되는 <see cref="T:System.Int32" /> 값을 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a>속성 값  
 기본값은 1입니다.  
  
## <a name="net-framework-security"></a>.NET Framework 보안  
 직접 실행 호출자의 경우 완전히 신뢰합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 초기화는 <xref:System.Management.EnumerationOptions> 와 변수는 <xref:System.Management.EnumerationOptions> 생성자와 WMI 클래스와 해당 하위 클래스의 인스턴스를 모두 가져옵니다.  
  
 [!code-csharp[wminet_EnumerationOptions_BlockSize#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EnumerationOptions_BlockSize/cs/EnumerationOptions_BlockSize.cs#1)]
 [!code-vb[wminet_EnumerationOptions_BlockSize#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EnumerationOptions_BlockSize/vb/EnumerationOptions_BlockSize.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.EnumerationOptions.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>개체의 복사본을 반환합니다.</summary>
        <returns>복제된 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 보안  
 직접 실행 호출자의 경우 완전히 신뢰합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="DirectRead">
      <MemberSignature Language="C#" Value="public bool DirectRead { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DirectRead" />
      <MemberSignature Language="DocId" Value="P:System.Management.EnumerationOptions.DirectRead" />
      <MemberSignature Language="VB.NET" Value="Public Property DirectRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DirectRead { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WMI 공급자에 대한 *직접 액세스*가 해당 슈퍼클래스나 파생 클래스에 관계없이 지정된 클래스에 대해 요청되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>반환 된 <see cref="T:System.Boolean" /> 나타내는 값 여부를 *직접 액세스* 는 wmi 공급자가 지정된 된 클래스에 대 한 요청입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a>속성 값  
 `true` 지정된 된 클래스의 개체를 받아야 파생 이나; 상속 관계 없이 그렇지 않으면 `false`합니다. 기본값은 `false`입니다.  
  
## <a name="net-framework-security"></a>.NET Framework 보안  
 직접 실행 호출자의 경우 완전히 신뢰합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 초기화는 <xref:System.Management.EnumerationOptions> 와 변수는 <xref:System.Management.EnumerationOptions> 생성자와 WMI 클래스와 해당 하위 클래스의 인스턴스를 모두 가져옵니다.  
  
 [!code-csharp[wminet_EnumerationOptions_DirectRead#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EnumerationOptions_DirectRead/cs/EnumerationOptions_DirectRead.cs#1)]
 [!code-vb[wminet_EnumerationOptions_DirectRead#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EnumerationOptions_DirectRead/vb/EnumerationOptions_DirectRead.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureLocatable">
      <MemberSignature Language="C#" Value="public bool EnsureLocatable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnsureLocatable" />
      <MemberSignature Language="DocId" Value="P:System.Management.EnumerationOptions.EnsureLocatable" />
      <MemberSignature Language="VB.NET" Value="Public Property EnsureLocatable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnsureLocatable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>반환된 개체에 위치를 지정할 수 있는 정보가 포함되어야 하는지 여부를 나타내는 값을 가져오거나 설정합니다. 이것으로 **__PATH**, **__RELPATH** 및 **__SERVER** 등의 시스템 속성이 NULL이 아님을 확인할 수 있습니다. 이 플래그는 쿼리에서만 사용될 수 있으며 열거형에서는 무시됩니다.</summary>
        <value>반환된 개체에 위치를 확인할 수 있는 정보가 있어야 하는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a>속성 값  
 `true` WMI에서 반환 된 모든 개체 보유; 유효한 경로 확인 해야 하는 경우 그렇지 않으면 `false`합니다. 기본값은 `false`입니다.  
  
## <a name="net-framework-security"></a>.NET Framework 보안  
 직접 실행 호출자의 경우 완전히 신뢰합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDeep">
      <MemberSignature Language="C#" Value="public bool EnumerateDeep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnumerateDeep" />
      <MemberSignature Language="DocId" Value="P:System.Management.EnumerationOptions.EnumerateDeep" />
      <MemberSignature Language="VB.NET" Value="Public Property EnumerateDeep As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnumerateDeep { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정한 슈퍼클래스에서 파생된 모든 클래스에 재귀적 열거형이 요청되어야하는지 여부를 나타내는 값을 가져오거나 설정합니다. <see langword="false" />이면 직접 파생 클래스 멤버만 반환됩니다.</summary>
        <value>지정한 슈퍼클래스에서 파생된 모든 클래스에 재귀적 열거형이 요청되어야하는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a>속성 값  
 `true` 재귀적 열거형; 지정한 슈퍼 클래스에서 파생 된 모든 클래스에 요청 된 경우 그렇지 않으면 `false`합니다. 기본값은 `false`입니다.  
  
## <a name="net-framework-security"></a>.NET Framework 보안  
 직접 실행 호출자의 경우 완전히 신뢰합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 초기화는 <xref:System.Management.EnumerationOptions> 와 변수는 <xref:System.Management.EnumerationOptions> 생성자와 WMI 클래스와 해당 하위 클래스의 인스턴스를 모두 가져옵니다.  
  
 [!code-csharp[wminet_EnumerationOptions_EnumerateDeep#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EnumerationOptions_EnumerateDeep/cs/EnumerationOptions_EnumerateDeep.cs#1)]
 [!code-vb[wminet_EnumerationOptions_EnumerateDeep#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EnumerationOptions_EnumerateDeep/vb/EnumerationOptions_EnumerateDeep.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrototypeOnly">
      <MemberSignature Language="C#" Value="public bool PrototypeOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrototypeOnly" />
      <MemberSignature Language="DocId" Value="P:System.Management.EnumerationOptions.PrototypeOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property PrototypeOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrototypeOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>쿼리에서 실제 결과 대신 결과 집합의 프로토타입을 반환하는지 여부를 나타내는 값을 가져오거나 설정합니다. 이 플래그는 프로토타이핑에 사용됩니다.</summary>
        <value>쿼리에서 실제 결과 대신 결과 집합의 프로토타입을 반환해야 하는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a>속성 값  
 `true` 쿼리에서 실제 결과; 대신 결과 집합의 프로토타입을 반환 해야 하는 경우 그렇지 않으면 `false`합니다. 기본값은 `false`입니다.  
  
## <a name="net-framework-security"></a>.NET Framework 보안  
 직접 실행 호출자의 경우 완전히 신뢰합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnImmediately">
      <MemberSignature Language="C#" Value="public bool ReturnImmediately { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnImmediately" />
      <MemberSignature Language="DocId" Value="P:System.Management.EnumerationOptions.ReturnImmediately" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnImmediately As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReturnImmediately { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>호출된 작업이 동기적으로 수행되는지 반동기적으로 수행되는지를 나타내는 값을 가져오거나 설정합니다. 이 속성이 <see langword="true" />로 설정되면 열거형이 호출되고 호출에서는 즉시 제어를 반환합니다. 결과를 실제로 검색하는 작업은 결과 컬렉션이 만들어지면 발생합니다.</summary>
        <value>호출된 작업이 동기적으로 수행되는지 반동기적으로 수행되는지를 나타내는 <see cref="T:System.Boolean" /> 값을 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a>속성 값  
 `true` 동기적 또는 반 방식; 호출된 된 작업을 수행 해야 하는 경우 그렇지 않으면 `false`합니다. 기본값은 `true`입니다.  
  
## <a name="net-framework-security"></a>.NET Framework 보안  
 직접 실행 호출자의 경우 완전히 신뢰합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rewindable">
      <MemberSignature Language="C#" Value="public bool Rewindable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Rewindable" />
      <MemberSignature Language="DocId" Value="P:System.Management.EnumerationOptions.Rewindable" />
      <MemberSignature Language="VB.NET" Value="Public Property Rewindable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Rewindable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>해당 컬렉션을 되감기할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다. <see langword="true" />이면 컬렉션의 개체는 여러 번 열거할 수 있는 상태로 유지됩니다. <see langword="false" />이면 컬렉션은 한 번만 열거될 수 있습니다.</summary>
        <value>컬렉션을 되감기할 수 있는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a>속성 값  
 `true` 컬렉션 되감아; 것으로 간주 되는 경우 그렇지 않으면 `false`합니다. 기본값은 `true`입니다.  
  
## <a name="net-framework-security"></a>.NET Framework 보안  
 직접 실행 호출자의 경우 완전히 신뢰합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseAmendedQualifiers">
      <MemberSignature Language="C#" Value="public bool UseAmendedQualifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAmendedQualifiers" />
      <MemberSignature Language="DocId" Value="P:System.Management.EnumerationOptions.UseAmendedQualifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAmendedQualifiers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAmendedQualifiers { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WMI에서 반환된 개체가 수정된 정보를 포함해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다. 일반적으로 개체 및 속성 설명과 같은 수정된 정보는 WMI 개체에 첨부된 지역화할 수 있는 정보입니다.</summary>
        <value>WMI에서 반환된 개체가 수정된 정보를 포함해야 하는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설명 및 기타 수정 된 정보 관심 없는 경우이 속성 값을 설정 `false` 더 효율적입니다.  
  
## <a name="property-value"></a>속성 값  
 `true` WMI 개체에서 반환 하는 경우 수정 된 정보; 포함 되어야 그렇지 않으면 `false`합니다. 기본값은 `false`입니다.  
  
## <a name="net-framework-security"></a>.NET Framework 보안  
 직접 실행 호출자의 경우 완전히 신뢰합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>