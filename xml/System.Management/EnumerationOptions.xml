<Type Name="EnumerationOptions" FullName="System.Management.EnumerationOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="23201e8b9df029e51828ebe239766ea693a6dc7e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460337" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EnumerationOptions : System.Management.ManagementOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumerationOptions extends System.Management.ManagementOptions" />
  <TypeSignature Language="DocId" Value="T:System.Management.EnumerationOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class EnumerationOptions&#xA;Inherits ManagementOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumerationOptions : System::Management::ManagementOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.ManagementOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7eff2-101">쿼리 및 열거형 관련 옵션 개체에 기본 클래스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7eff2-101">Provides a base class for query and enumeration-related options objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7eff2-102">다음 예제에서는 초기화는 <xref:System.Management.EnumerationOptions> 와 변수는 <xref:System.Management.EnumerationOptions> 생성자와 WMI 클래스와 해당 하위 클래스의 인스턴스를 모두 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-102">The following example initializes an <xref:System.Management.EnumerationOptions> variable with an <xref:System.Management.EnumerationOptions> constructor and then gets all the instances of a WMI class and its subclasses.</span></span>  
  
 [!code-csharp[wminet_EnumerationOptions#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EnumerationOptions/cs/EnumerationOptions.cs#1)]
 [!code-vb[wminet_EnumerationOptions#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EnumerationOptions/vb/EnumerationOptions.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7eff2-103">
            <see cref="T:System.Management.EnumerationOptions" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-103">Initializes a new instance of the <see cref="T:System.Management.EnumerationOptions" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumerationOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.EnumerationOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnumerationOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7eff2-104">기본값을 사용하여 <see cref="T:System.Management.EnumerationOptions" /> 클래스의 새 인스턴스를 초기화합니다. 기본값에 대한 자세한 내용은 개별 속성에 대한 설명을 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-104">Initializes a new instance of the <see cref="T:System.Management.EnumerationOptions" /> class with default values (see the individual property descriptions for what the default values are).</span>
          </span>
          <span data-ttu-id="7eff2-105">이것이 기본 생성자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-105">This is the default constructor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="7eff2-106">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="7eff2-106">.NET Framework Security</span></span>  
 <span data-ttu-id="7eff2-107">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-107">Full trust for the immediate caller.</span></span> <span data-ttu-id="7eff2-108">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-108">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="7eff2-109">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-109">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7eff2-110">다음 예제에서는 초기화는 <xref:System.Management.EnumerationOptions> 와 변수는 <xref:System.Management.EnumerationOptions> 생성자와 WMI 클래스와 해당 하위 클래스의 인스턴스를 모두 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-110">The following example initializes an <xref:System.Management.EnumerationOptions> variable with an <xref:System.Management.EnumerationOptions> constructor and then gets all the instances of a WMI class and its subclasses.</span></span>  
  
 [!code-csharp[wminet_EnumerationOptions#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EnumerationOptions/cs/EnumerationOptions.cs#1)]
 [!code-vb[wminet_EnumerationOptions#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EnumerationOptions/vb/EnumerationOptions.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumerationOptions (System.Management.ManagementNamedValueCollection context, TimeSpan timeout, int blockSize, bool rewindable, bool returnImmediatley, bool useAmendedQualifiers, bool ensureLocatable, bool prototypeOnly, bool directRead, bool enumerateDeep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementNamedValueCollection context, valuetype System.TimeSpan timeout, int32 blockSize, bool rewindable, bool returnImmediatley, bool useAmendedQualifiers, bool ensureLocatable, bool prototypeOnly, bool directRead, bool enumerateDeep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.EnumerationOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As ManagementNamedValueCollection, timeout As TimeSpan, blockSize As Integer, rewindable As Boolean, returnImmediatley As Boolean, useAmendedQualifiers As Boolean, ensureLocatable As Boolean, prototypeOnly As Boolean, directRead As Boolean, enumerateDeep As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnumerationOptions(System::Management::ManagementNamedValueCollection ^ context, TimeSpan timeout, int blockSize, bool rewindable, bool returnImmediatley, bool useAmendedQualifiers, bool ensureLocatable, bool prototypeOnly, bool directRead, bool enumerateDeep);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Management.ManagementNamedValueCollection" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="blockSize" Type="System.Int32" />
        <Parameter Name="rewindable" Type="System.Boolean" />
        <Parameter Name="returnImmediatley" Type="System.Boolean" />
        <Parameter Name="useAmendedQualifiers" Type="System.Boolean" />
        <Parameter Name="ensureLocatable" Type="System.Boolean" />
        <Parameter Name="prototypeOnly" Type="System.Boolean" />
        <Parameter Name="directRead" Type="System.Boolean" />
        <Parameter Name="enumerateDeep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="7eff2-111">공급자에게 전달될 수 있는 공급자별 정보를 포함하는 옵션 컨텍스트 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-111">The options context object containing provider-specific information that can be passed through to the provider.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="7eff2-112">결과를 열거하기 위한 시간 제한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-112">The time-out value for enumerating through the results.</span>
          </span>
        </param>
        <param name="blockSize">
          <span data-ttu-id="7eff2-113">WMI에서 한 번에 검색할 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-113">The number of items to retrieve at one time from WMI.</span>
          </span>
        </param>
        <param name="rewindable">
          <span data-ttu-id="7eff2-114">결과 집합을 되감아 여러 번 이동할 수 있게 하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-114">
              <see langword="true" /> to show that the result set is rewindable (allows multiple traversal); otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="returnImmediatley">
          <span data-ttu-id="7eff2-115">해당 작업에서 결과를 즉시 반환하도록 하거나(반동기식) 모든 결과가 준비되기 전에는 중지되도록 하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-115">
              <see langword="true" /> to show that the operation should return immediately (semi-sync) or block until all results are available; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="useAmendedQualifiers">
          <span data-ttu-id="7eff2-116">반환된 개체가 수정된(로캘을 인식하는) 한정자를 포함하도록 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-116">
              <see langword="true" /> to show that the returned objects should contain amended (locale-aware) qualifiers; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="ensureLocatable">
          <span data-ttu-id="7eff2-117">반환된 모든 개체에 올바른 경로가 있어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-117">
              <see langword="true" /> to ensure all returned objects have valid paths; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="prototypeOnly">
          <span data-ttu-id="7eff2-118">실제 결과 대신 결과 집합의 프로토타입을 반환하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-118">
              <see langword="true" /> to return a prototype of the result set instead of the actual results; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="directRead">
          <span data-ttu-id="7eff2-119">지정된 클래스의 개체만 검색하거나 파생된 클래스에서도 검색하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-119">
              <see langword="true" /> to retrieve objects of only the specified class or from derived classes as well; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="enumerateDeep">
          <span data-ttu-id="7eff2-120">서브클래스에서 재귀적 열거형을 사용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-120">
              <see langword="true" /> to use recursive enumeration in subclasses; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7eff2-121">쿼리 또는 열거형에 사용할 <see cref="T:System.Management.EnumerationOptions" /> 클래스의 새 인스턴스를 초기화하여 사용자가 여러 옵션에 대한 값을 지정할 수 있도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-121">Initializes a new instance of the <see cref="T:System.Management.EnumerationOptions" /> class to be used for queries or enumerations, allowing the user to specify values for the different options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="7eff2-122">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="7eff2-122">.NET Framework Security</span></span>  
 <span data-ttu-id="7eff2-123">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-123">Full trust for the immediate caller.</span></span> <span data-ttu-id="7eff2-124">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-124">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="7eff2-125">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-125">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7eff2-126">다음 예제에서는 초기화는 <xref:System.Management.EnumerationOptions> 와 변수는 <xref:System.Management.EnumerationOptions> 생성자와 WMI 클래스와 해당 하위 클래스의 인스턴스를 모두 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-126">The following example initializes an <xref:System.Management.EnumerationOptions> variable with an <xref:System.Management.EnumerationOptions> constructor and then gets all the instances of a WMI class and its subclasses.</span></span>  
  
 [!code-csharp[wminet_EnumerationOptions-10#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EnumerationOptions-10/cs/EnumerationOptions-10.cs#1)]
 [!code-vb[wminet_EnumerationOptions-10#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EnumerationOptions-10/vb/EnumerationOptions-10.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Management.EnumerationOptions.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7eff2-127">블록 작업을 위한 블록 크기를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-127">Gets or sets the block size for block operations.</span>
          </span>
          <span data-ttu-id="7eff2-128">컬렉션 안에서 열거할 때 WMI에서는 결과를 지정한 크기의 그룹으로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-128">When enumerating through a collection, WMI will return results in groups of the specified size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7eff2-129">블록 작업에서 블록 크기에 사용되는 <see cref="T:System.Int32" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-129">Returns an <see cref="T:System.Int32" /> value used for the block size in block operations.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="7eff2-130">속성 값</span><span class="sxs-lookup"><span data-stu-id="7eff2-130">Property Value</span></span>  
 <span data-ttu-id="7eff2-131">기본값은 1입니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-131">The default value is 1.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="7eff2-132">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="7eff2-132">.NET Framework Security</span></span>  
 <span data-ttu-id="7eff2-133">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-133">Full trust for the immediate caller.</span></span> <span data-ttu-id="7eff2-134">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-134">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="7eff2-135">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-135">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7eff2-136">다음 예제에서는 초기화는 <xref:System.Management.EnumerationOptions> 와 변수는 <xref:System.Management.EnumerationOptions> 생성자와 WMI 클래스와 해당 하위 클래스의 인스턴스를 모두 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-136">The following example initializes an <xref:System.Management.EnumerationOptions> variable with an <xref:System.Management.EnumerationOptions> constructor and then gets all the instances of a WMI class and its subclasses.</span></span>  
  
 [!code-csharp[wminet_EnumerationOptions_BlockSize#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EnumerationOptions_BlockSize/cs/EnumerationOptions_BlockSize.cs#1)]
 [!code-vb[wminet_EnumerationOptions_BlockSize#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EnumerationOptions_BlockSize/vb/EnumerationOptions_BlockSize.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.EnumerationOptions.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7eff2-137">개체의 복사본을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-137">Returns a copy of the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7eff2-138">복제된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-138">The cloned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="7eff2-139">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="7eff2-139">.NET Framework Security</span></span>  
 <span data-ttu-id="7eff2-140">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-140">Full trust for the immediate caller.</span></span> <span data-ttu-id="7eff2-141">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-141">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="7eff2-142">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-142">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="DirectRead">
      <MemberSignature Language="C#" Value="public bool DirectRead { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DirectRead" />
      <MemberSignature Language="DocId" Value="P:System.Management.EnumerationOptions.DirectRead" />
      <MemberSignature Language="VB.NET" Value="Public Property DirectRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DirectRead { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7eff2-143">WMI 공급자에 대한 *직접 액세스*가 해당 슈퍼클래스나 파생 클래스에 관계없이 지정된 클래스에 대해 요청되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-143">Gets or sets a value indicating whether *direct access* to the WMI provider is requested for the specified class, without any regard to its super class or derived classes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7eff2-144">반환 된 <see cref="T:System.Boolean" /> 나타내는 값 여부를 *직접 액세스* 는 wmi 공급자가 지정된 된 클래스에 대 한 요청입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-144">Returns a <see cref="T:System.Boolean" /> value indicating whether *direct access* to the WMI provider is requested for the specified class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="7eff2-145">속성 값</span><span class="sxs-lookup"><span data-stu-id="7eff2-145">Property Value</span></span>  
 <span data-ttu-id="7eff2-146">`true` 지정된 된 클래스의 개체를 받아야 파생 이나; 상속 관계 없이 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-146">`true` if only objects of the specified class should be received, without regard to derivation or inheritance; otherwise, `false`.</span></span> <span data-ttu-id="7eff2-147">기본값은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-147">The default value is `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="7eff2-148">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="7eff2-148">.NET Framework Security</span></span>  
 <span data-ttu-id="7eff2-149">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-149">Full trust for the immediate caller.</span></span> <span data-ttu-id="7eff2-150">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-150">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="7eff2-151">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-151">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7eff2-152">다음 예제에서는 초기화는 <xref:System.Management.EnumerationOptions> 와 변수는 <xref:System.Management.EnumerationOptions> 생성자와 WMI 클래스와 해당 하위 클래스의 인스턴스를 모두 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-152">The following example initializes an <xref:System.Management.EnumerationOptions> variable with an <xref:System.Management.EnumerationOptions> constructor and then gets all the instances of a WMI class and its subclasses.</span></span>  
  
 [!code-csharp[wminet_EnumerationOptions_DirectRead#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EnumerationOptions_DirectRead/cs/EnumerationOptions_DirectRead.cs#1)]
 [!code-vb[wminet_EnumerationOptions_DirectRead#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EnumerationOptions_DirectRead/vb/EnumerationOptions_DirectRead.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureLocatable">
      <MemberSignature Language="C#" Value="public bool EnsureLocatable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnsureLocatable" />
      <MemberSignature Language="DocId" Value="P:System.Management.EnumerationOptions.EnsureLocatable" />
      <MemberSignature Language="VB.NET" Value="Public Property EnsureLocatable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnsureLocatable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7eff2-153">반환된 개체에 위치를 지정할 수 있는 정보가 포함되어야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-153">Gets or sets a value indicating whether to the objects returned should have locatable information in them.</span>
          </span>
          <span data-ttu-id="7eff2-154">이것으로 **__PATH**, **__RELPATH** 및 **__SERVER** 등의 시스템 속성이 NULL이 아님을 확인할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-154">This ensures that the system properties, such as **__PATH**, **__RELPATH**, and **__SERVER**, are non-NULL.</span>
          </span>
          <span data-ttu-id="7eff2-155">이 플래그는 쿼리에서만 사용될 수 있으며 열거형에서는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-155">This flag can only be used in queries, and is ignored in enumerations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7eff2-156">반환된 개체에 위치를 확인할 수 있는 정보가 있어야 하는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-156">Returns a <see cref="T:System.Boolean" /> value indicating whether the objects returned should have locatable information in them.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="7eff2-157">속성 값</span><span class="sxs-lookup"><span data-stu-id="7eff2-157">Property Value</span></span>  
 <span data-ttu-id="7eff2-158">`true` WMI에서 반환 된 모든 개체 보유; 유효한 경로 확인 해야 하는 경우 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-158">`true` if WMI should ensure all returned objects have valid paths; otherwise, `false`.</span></span> <span data-ttu-id="7eff2-159">기본값은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-159">The default value is `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="7eff2-160">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="7eff2-160">.NET Framework Security</span></span>  
 <span data-ttu-id="7eff2-161">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-161">Full trust for the immediate caller.</span></span> <span data-ttu-id="7eff2-162">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-162">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="7eff2-163">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-163">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDeep">
      <MemberSignature Language="C#" Value="public bool EnumerateDeep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnumerateDeep" />
      <MemberSignature Language="DocId" Value="P:System.Management.EnumerationOptions.EnumerateDeep" />
      <MemberSignature Language="VB.NET" Value="Public Property EnumerateDeep As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnumerateDeep { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7eff2-164">지정한 슈퍼클래스에서 파생된 모든 클래스에 재귀적 열거형이 요청되어야하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-164">Gets or sets a value indicating whether recursive enumeration is requested into all classes derived from the specified superclass.</span>
          </span>
          <span data-ttu-id="7eff2-165">
            <see langword="false" />이면 직접 파생 클래스 멤버만 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-165">If <see langword="false" />, only immediate derived class members are returned.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7eff2-166">지정한 슈퍼클래스에서 파생된 모든 클래스에 재귀적 열거형이 요청되어야하는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-166">Returns a <see cref="T:System.Boolean" /> value indicating whether recursive enumeration is requested into all classes derived from the specified superclass.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="7eff2-167">속성 값</span><span class="sxs-lookup"><span data-stu-id="7eff2-167">Property Value</span></span>  
 <span data-ttu-id="7eff2-168">`true` 재귀적 열거형; 지정한 슈퍼 클래스에서 파생 된 모든 클래스에 요청 된 경우 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-168">`true` if recursive enumeration is requested into all classes derived from the specified superclass; otherwise, `false`.</span></span> <span data-ttu-id="7eff2-169">기본값은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-169">The default value is `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="7eff2-170">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="7eff2-170">.NET Framework Security</span></span>  
 <span data-ttu-id="7eff2-171">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-171">Full trust for the immediate caller.</span></span> <span data-ttu-id="7eff2-172">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-172">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="7eff2-173">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-173">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7eff2-174">다음 예제에서는 초기화는 <xref:System.Management.EnumerationOptions> 와 변수는 <xref:System.Management.EnumerationOptions> 생성자와 WMI 클래스와 해당 하위 클래스의 인스턴스를 모두 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-174">The following example initializes an <xref:System.Management.EnumerationOptions> variable with an <xref:System.Management.EnumerationOptions> constructor and then gets all the instances of a WMI class and its subclasses.</span></span>  
  
 [!code-csharp[wminet_EnumerationOptions_EnumerateDeep#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EnumerationOptions_EnumerateDeep/cs/EnumerationOptions_EnumerateDeep.cs#1)]
 [!code-vb[wminet_EnumerationOptions_EnumerateDeep#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EnumerationOptions_EnumerateDeep/vb/EnumerationOptions_EnumerateDeep.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrototypeOnly">
      <MemberSignature Language="C#" Value="public bool PrototypeOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrototypeOnly" />
      <MemberSignature Language="DocId" Value="P:System.Management.EnumerationOptions.PrototypeOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property PrototypeOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrototypeOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7eff2-175">쿼리에서 실제 결과 대신 결과 집합의 프로토타입을 반환하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-175">Gets or sets a value indicating whether the query should return a prototype of the result set instead of the actual results.</span>
          </span>
          <span data-ttu-id="7eff2-176">이 플래그는 프로토타이핑에 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-176">This flag is used for prototyping.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7eff2-177">쿼리에서 실제 결과 대신 결과 집합의 프로토타입을 반환해야 하는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-177">Returns a <see cref="T:System.Boolean" /> value indicating whether the query should return a prototype of the result set instead of the actual results.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="7eff2-178">속성 값</span><span class="sxs-lookup"><span data-stu-id="7eff2-178">Property Value</span></span>  
 <span data-ttu-id="7eff2-179">`true` 쿼리에서 실제 결과; 대신 결과 집합의 프로토타입을 반환 해야 하는 경우 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-179">`true` if the query should return a prototype of the result set instead of the actual results; otherwise, `false`.</span></span> <span data-ttu-id="7eff2-180">기본값은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-180">The default value is `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="7eff2-181">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="7eff2-181">.NET Framework Security</span></span>  
 <span data-ttu-id="7eff2-182">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-182">Full trust for the immediate caller.</span></span> <span data-ttu-id="7eff2-183">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-183">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="7eff2-184">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-184">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnImmediately">
      <MemberSignature Language="C#" Value="public bool ReturnImmediately { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnImmediately" />
      <MemberSignature Language="DocId" Value="P:System.Management.EnumerationOptions.ReturnImmediately" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnImmediately As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReturnImmediately { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7eff2-185">호출된 작업이 동기적으로 수행되는지 반동기적으로 수행되는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-185">Gets or sets a value indicating whether the invoked operation should be performed in a synchronous or semisynchronous fashion.</span>
          </span>
          <span data-ttu-id="7eff2-186">이 속성이 <see langword="true" />로 설정되면 열거형이 호출되고 호출에서는 즉시 제어를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-186">If this property is set to <see langword="true" />, the enumeration is invoked and the call returns immediately.</span>
          </span>
          <span data-ttu-id="7eff2-187">결과를 실제로 검색하는 작업은 결과 컬렉션이 만들어지면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-187">The actual retrieval of the results will occur when the resulting collection is walked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7eff2-188">호출된 작업이 동기적으로 수행되는지 반동기적으로 수행되는지를 나타내는 <see cref="T:System.Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-188">Returns a <see cref="T:System.Boolean" /> value indicating whether the invoked operation should be performed in a synchronous or semisynchronous fashion.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="7eff2-189">속성 값</span><span class="sxs-lookup"><span data-stu-id="7eff2-189">Property Value</span></span>  
 <span data-ttu-id="7eff2-190">`true` 동기적 또는 반 방식; 호출된 된 작업을 수행 해야 하는 경우 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-190">`true` if the invoked operation should be performed in a synchronous or semisynchronous fashion; otherwise, `false`.</span></span> <span data-ttu-id="7eff2-191">기본값은 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-191">The default value is `true`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="7eff2-192">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="7eff2-192">.NET Framework Security</span></span>  
 <span data-ttu-id="7eff2-193">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-193">Full trust for the immediate caller.</span></span> <span data-ttu-id="7eff2-194">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-194">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="7eff2-195">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-195">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rewindable">
      <MemberSignature Language="C#" Value="public bool Rewindable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Rewindable" />
      <MemberSignature Language="DocId" Value="P:System.Management.EnumerationOptions.Rewindable" />
      <MemberSignature Language="VB.NET" Value="Public Property Rewindable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Rewindable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7eff2-196">해당 컬렉션을 되감기할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-196">Gets or sets a value indicating whether the collection is assumed to be rewindable.</span>
          </span>
          <span data-ttu-id="7eff2-197">
            <see langword="true" />이면 컬렉션의 개체는 여러 번 열거할 수 있는 상태로 유지됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-197">If <see langword="true" />, the objects in the collection will be kept available for multiple enumerations.</span>
          </span>
          <span data-ttu-id="7eff2-198">
            <see langword="false" />이면 컬렉션은 한 번만 열거될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-198">If <see langword="false" />, the collection can only be enumerated one time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7eff2-199">컬렉션을 되감기할 수 있는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-199">Returns a <see cref="T:System.Boolean" /> value indicating whether the collection is assumed to be rewindable.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="7eff2-200">속성 값</span><span class="sxs-lookup"><span data-stu-id="7eff2-200">Property Value</span></span>  
 <span data-ttu-id="7eff2-201">`true` 컬렉션 되감아; 것으로 간주 되는 경우 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-201">`true` if the collection is assumed to be rewindable; otherwise, `false`.</span></span> <span data-ttu-id="7eff2-202">기본값은 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-202">The default value is `true`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="7eff2-203">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="7eff2-203">.NET Framework Security</span></span>  
 <span data-ttu-id="7eff2-204">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-204">Full trust for the immediate caller.</span></span> <span data-ttu-id="7eff2-205">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-205">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="7eff2-206">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-206">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseAmendedQualifiers">
      <MemberSignature Language="C#" Value="public bool UseAmendedQualifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAmendedQualifiers" />
      <MemberSignature Language="DocId" Value="P:System.Management.EnumerationOptions.UseAmendedQualifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAmendedQualifiers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAmendedQualifiers { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7eff2-207">WMI에서 반환된 개체가 수정된 정보를 포함해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-207">Gets or sets a value indicating whether the objects returned from WMI should contain amended information.</span>
          </span>
          <span data-ttu-id="7eff2-208">일반적으로 개체 및 속성 설명과 같은 수정된 정보는 WMI 개체에 첨부된 지역화할 수 있는 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-208">Typically, amended information is localizable information attached to the WMI object, such as object and property descriptions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7eff2-209">WMI에서 반환된 개체가 수정된 정보를 포함해야 하는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7eff2-209">Returns a <see cref="T:System.Boolean" /> value indicating whether the objects returned from WMI should contain amended information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7eff2-210">설명 및 기타 수정 된 정보 관심 없는 경우이 속성 값을 설정 `false` 더 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-210">If descriptions and other amended information are not of interest, setting this property value to `false` is more efficient.</span></span>  
  
## <a name="property-value"></a><span data-ttu-id="7eff2-211">속성 값</span><span class="sxs-lookup"><span data-stu-id="7eff2-211">Property Value</span></span>  
 <span data-ttu-id="7eff2-212">`true` WMI 개체에서 반환 하는 경우 수정 된 정보; 포함 되어야 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-212">`true` if the objects returned from WMI should contain amended information; otherwise, `false`.</span></span> <span data-ttu-id="7eff2-213">기본값은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-213">The default value is `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="7eff2-214">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="7eff2-214">.NET Framework Security</span></span>  
 <span data-ttu-id="7eff2-215">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-215">Full trust for the immediate caller.</span></span> <span data-ttu-id="7eff2-216">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-216">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="7eff2-217">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7eff2-217">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>