<Type Name="MethodDataCollection" FullName="System.Management.MethodDataCollection">
  <TypeSignature Language="C#" Value="public class MethodDataCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MethodDataCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Management.MethodDataCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class MethodDataCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class MethodDataCollection : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="29f1e-101">컬렉션에서 사용할 수 있는 메서드 집합을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-101">Represents the set of methods available in the collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29f1e-102">다음 예제에 대 한 정보를 나열는 **Win32_Process.Create** 메서드를 사용 하는 <xref:System.Management.MethodData> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-102">The following example lists information about the **Win32_Process.Create** method using the <xref:System.Management.MethodData> class.</span></span> <span data-ttu-id="29f1e-103">대 한 자세한 내용은 **Win32_Process** MSDN library에서 Windows Management Instrumentation 설명서를 참조 하세요. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-103">For more information on the **Win32_Process** class, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span>  
  
 [!code-csharp[wminet_MethodDataCollection#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_MethodDataCollection/cs/MethodDataCollection.cs#1)]
 [!code-vb[wminet_MethodDataCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_MethodDataCollection/vb/MethodDataCollection.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29f1e-104"><see cref="T:System.Management.MethodData" />에 <see cref="T:System.Management.MethodDataCollection" /> 개체를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-104">Adds a <see cref="T:System.Management.MethodData" /> object to the <see cref="T:System.Management.MethodDataCollection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ methodName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="29f1e-105">추가할 메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-105">The name of the method to add.</span></span></param>
        <summary><span data-ttu-id="29f1e-106"><see cref="T:System.Management.MethodData" />에 <see cref="T:System.Management.MethodDataCollection" />를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-106">Adds a <see cref="T:System.Management.MethodData" /> to the <see cref="T:System.Management.MethodDataCollection" />.</span></span> <span data-ttu-id="29f1e-107">이 오버로드는 컬렉션에 매개 변수 없이 새 메서드를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-107">This overload will add a new method with no parameters to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f1e-108">추가 <xref:System.Management.MethodData> 개체는 <xref:System.Management.MethodDataCollection> 클래스에는 인스턴스가 없는 경우에 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-108">Adding <xref:System.Management.MethodData> objects to the <xref:System.Management.MethodDataCollection> can only be done when the class has no instances.</span></span> <span data-ttu-id="29f1e-109">다른 모든 경우 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-109">Any other case will result in an exception.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="29f1e-110">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="29f1e-110">.NET Framework Security</span></span>  
 <span data-ttu-id="29f1e-111">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="29f1e-112">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="29f1e-113">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string methodName, System.Management.ManagementBaseObject inParameters, System.Management.ManagementBaseObject outParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string methodName, class System.Management.ManagementBaseObject inParameters, class System.Management.ManagementBaseObject outParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.Add(System.String,System.Management.ManagementBaseObject,System.Management.ManagementBaseObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (methodName As String, inParameters As ManagementBaseObject, outParameters As ManagementBaseObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ methodName, System::Management::ManagementBaseObject ^ inParameters, System::Management::ManagementBaseObject ^ outParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="inParameters" Type="System.Management.ManagementBaseObject" />
        <Parameter Name="outParameters" Type="System.Management.ManagementBaseObject" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="29f1e-114">추가할 메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-114">The name of the method to add.</span></span></param>
        <param name="inParameters"><span data-ttu-id="29f1e-115">메서드에 대한 입력 매개 변수가 들어 있는 <see cref="T:System.Management.ManagementBaseObject" />입니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-115">The <see cref="T:System.Management.ManagementBaseObject" /> holding the input parameters to the method.</span></span></param>
        <param name="outParameters"><span data-ttu-id="29f1e-116">메서드에 대한 출력 매개 변수가 들어 있는 <see cref="T:System.Management.ManagementBaseObject" />입니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-116">The <see cref="T:System.Management.ManagementBaseObject" /> holding the output parameters to the method.</span></span></param>
        <summary><span data-ttu-id="29f1e-117"><see cref="T:System.Management.MethodData" />에 <see cref="T:System.Management.MethodDataCollection" />를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-117">Adds a <see cref="T:System.Management.MethodData" /> to the <see cref="T:System.Management.MethodDataCollection" />.</span></span> <span data-ttu-id="29f1e-118">이 오버로드는 컬렉션에 지정된 매개 변수 개체를 사용하여 새 메서드를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-118">This overload will add a new method with the specified parameter objects to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f1e-119">추가 <xref:System.Management.MethodData> 개체는 <xref:System.Management.MethodDataCollection> 클래스에는 인스턴스가 없는 경우에 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-119">Adding <xref:System.Management.MethodData> objects to the <xref:System.Management.MethodDataCollection> can only be done when the class has no instances.</span></span> <span data-ttu-id="29f1e-120">다른 모든 경우 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-120">Any other case will result in an exception.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="29f1e-121">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="29f1e-121">.NET Framework Security</span></span>  
 <span data-ttu-id="29f1e-122">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="29f1e-123">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="29f1e-124">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29f1e-125"><see cref="T:System.Management.MethodDataCollection" /> 개체를 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-125">Copies the <see cref="T:System.Management.MethodDataCollection" /> object into an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="29f1e-126">컬렉션을 복사할 대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-126">The array to which to copy the collection.</span></span></param>
        <param name="index"><span data-ttu-id="29f1e-127">복사를 시작할 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-127">The index from which to start.</span></span></param>
        <summary><span data-ttu-id="29f1e-128"><see cref="T:System.Management.MethodDataCollection" />을 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-128">Copies the <see cref="T:System.Management.MethodDataCollection" /> into an array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="29f1e-129">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="29f1e-129">.NET Framework Security</span></span>  
 <span data-ttu-id="29f1e-130">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-130">Full trust for the immediate caller.</span></span> <span data-ttu-id="29f1e-131">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-131">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="29f1e-132">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-132">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Management.MethodData[] methodArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Management.MethodData[] methodArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.CopyTo(System.Management.MethodData[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (methodArray As MethodData(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Management::MethodData ^&gt; ^ methodArray, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodArray" Type="System.Management.MethodData[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="methodArray"><span data-ttu-id="29f1e-133"><see cref="T:System.Management.MethodData" /> 개체를 복사할 대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-133">The destination array to which to copy the <see cref="T:System.Management.MethodData" /> objects.</span></span></param>
        <param name="index"><span data-ttu-id="29f1e-134">복사가 시작될 대상 배열의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-134">The index in the destination array from which to start the copy.</span></span></param>
        <summary><span data-ttu-id="29f1e-135"><see cref="T:System.Management.MethodDataCollection" />을 특수화된 <see cref="T:System.Management.MethodData" /> 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-135">Copies the <see cref="T:System.Management.MethodDataCollection" /> to a specialized <see cref="T:System.Management.MethodData" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="29f1e-136">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="29f1e-136">.NET Framework Security</span></span>  
 <span data-ttu-id="29f1e-137">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-137">Full trust for the immediate caller.</span></span> <span data-ttu-id="29f1e-138">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-138">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="29f1e-139">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-139">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29f1e-140"><see cref="T:System.Management.MethodDataCollection" /> 컬렉션의 개체 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-140">Gets the number of objects in the <see cref="T:System.Management.MethodDataCollection" /> collection.</span></span></summary>
        <value><span data-ttu-id="29f1e-141">이 컬렉션에 있는 개체 수를 나타내는 <see cref="T:System.Int32" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-141">Returns an <see cref="T:System.Int32" /> value representing the number of objects in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="29f1e-142">속성 값</span><span class="sxs-lookup"><span data-stu-id="29f1e-142">Property Value</span></span>  
 <span data-ttu-id="29f1e-143">개체 수는 <xref:System.Management.MethodDataCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-143">The number of objects in the <xref:System.Management.MethodDataCollection>.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="29f1e-144">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="29f1e-144">.NET Framework Security</span></span>  
 <span data-ttu-id="29f1e-145">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-145">Full trust for the immediate caller.</span></span> <span data-ttu-id="29f1e-146">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-146">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="29f1e-147">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-147">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Management.MethodDataCollection.MethodDataEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.MethodDataCollection/MethodDataEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As MethodDataCollection.MethodDataEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::MethodDataCollection::MethodDataEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.MethodDataCollection+MethodDataEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29f1e-148"><see cref="T:System.Management.MethodDataCollection" />에 대한 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-148">Returns an enumerator for the <see cref="T:System.Management.MethodDataCollection" />.</span></span></summary>
        <returns><span data-ttu-id="29f1e-149">컬렉션을 통해 열거할 <see cref="T:System.Collections.IEnumerator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-149">An <see cref="T:System.Collections.IEnumerator" /> to enumerate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f1e-150">이 메서드를 호출할 때마다 컬렉션에 새 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-150">Each call to this method returns a new enumerator on the collection.</span></span> <span data-ttu-id="29f1e-151">동일한 메서드 컬렉션에 대 한 여러 열거자를 얻을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-151">Multiple enumerators can be obtained for the same method collection.</span></span> <span data-ttu-id="29f1e-152">그러나 각 열거자는 컬렉션의 스냅숏을 때문에 열거자를 가져온 후 컬렉션에 변경한 내용은 반영 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-152">However, each enumerator takes a snapshot of the collection, so changes made to the collection after the enumerator was obtained are not reflected.</span></span>  
  
 <span data-ttu-id="29f1e-153">만 반복할 수 (Visual Basic.NET에서와 같이 `For Each` 문 또는 C# `For` 문)을 통해 앞 으로만 이동 가능한 열거자를 한 번입니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-153">You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time.</span></span> <span data-ttu-id="29f1e-154">인스턴스가 포함 된 메모리는 하는 열거자를 되감을 수 없기 WMI가 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-154">The memory containing the instances is released by WMI so that the enumerator cannot be rewound.</span></span> <span data-ttu-id="29f1e-155">따라서는 <xref:System.Management.MethodDataCollection.Count%2A> 되감기를 열거자 요구 하므로 메서드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-155">Therefore, the <xref:System.Management.MethodDataCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.</span></span>  
  
 <span data-ttu-id="29f1e-156">에 대 한 호출을 허용 하지 않습니다 되지만 앞 으로만 이동 가능한 열거자 일반적으로 더 빨리 하며 기본 열거자 보다 적은 메모리를 사용 하 여 <xref:System.Management.MethodDataCollection.MethodDataEnumerator.Reset%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-156">Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to <xref:System.Management.MethodDataCollection.MethodDataEnumerator.Reset%2A>.</span></span>  
  
 <span data-ttu-id="29f1e-157">열거자를 되감아 컬렉션의 개체 여러 열거할 수 있는 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-157">If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="29f1e-158">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="29f1e-158">.NET Framework Security</span></span>  
 <span data-ttu-id="29f1e-159">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-159">Full trust for the immediate caller.</span></span> <span data-ttu-id="29f1e-160">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-160">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="29f1e-161">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-161">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29f1e-162">개체가 동기화되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-162">Gets a value that indicates whether the object is synchronized.</span></span></summary>
        <value><span data-ttu-id="29f1e-163">개체가 동기화되는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-163">Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="29f1e-164">속성 값</span><span class="sxs-lookup"><span data-stu-id="29f1e-164">Property Value</span></span>  
 <span data-ttu-id="29f1e-165">`true` 개체가 동기화 되는지; 경우 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-165">`true` if the object is synchronized; otherwise, `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="29f1e-166">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="29f1e-166">.NET Framework Security</span></span>  
 <span data-ttu-id="29f1e-167">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-167">Full trust for the immediate caller.</span></span> <span data-ttu-id="29f1e-168">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-168">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="29f1e-169">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-169">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Management.MethodData this[string methodName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.MethodData Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(methodName As String) As MethodData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Management::MethodData ^ default[System::String ^] { System::Management::MethodData ^ get(System::String ^ methodName); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.MethodData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="29f1e-170">요청한 메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-170">The name of the method requested.</span></span></param>
        <summary><span data-ttu-id="29f1e-171"><see cref="T:System.Management.MethodData" />에서 지정된 <see cref="T:System.Management.MethodDataCollection" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-171">Gets the specified <see cref="T:System.Management.MethodData" /> from the <see cref="T:System.Management.MethodDataCollection" />.</span></span></summary>
        <value><span data-ttu-id="29f1e-172">컬렉션에서 지정된 메서드의 메서드 데이터가 들어 있는 <see cref="T:System.Management.MethodData" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-172">Returns a <see cref="T:System.Management.MethodData" /> containing the method data for a specified method from the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="29f1e-173">속성 값</span><span class="sxs-lookup"><span data-stu-id="29f1e-173">Property Value</span></span>  
 <span data-ttu-id="29f1e-174">A <xref:System.Management.MethodData> 지정된 방법에 대 한 모든 정보가 들어 있는입니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-174">A <xref:System.Management.MethodData> containing all information about the specified method.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="29f1e-175">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="29f1e-175">.NET Framework Security</span></span>  
 <span data-ttu-id="29f1e-176">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-176">Full trust for the immediate caller.</span></span> <span data-ttu-id="29f1e-177">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-177">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="29f1e-178">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-178">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ methodName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="29f1e-179">컬렉션에서 제거할 메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-179">The name of the method to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="29f1e-180"><see cref="T:System.Management.MethodData" />에서 <see cref="T:System.Management.MethodDataCollection" /> 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-180">Removes a <see cref="T:System.Management.MethodData" /> from the <see cref="T:System.Management.MethodDataCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f1e-181">제거 <xref:System.Management.MethodData> 에서 개체는 <xref:System.Management.MethodDataCollection> 클래스에는 인스턴스가 없는 경우에 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-181">Removing <xref:System.Management.MethodData> objects from the <xref:System.Management.MethodDataCollection> can only be done when the class has no instances.</span></span> <span data-ttu-id="29f1e-182">다른 모든 경우 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-182">Any other case will result in an exception.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="29f1e-183">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="29f1e-183">.NET Framework Security</span></span>  
 <span data-ttu-id="29f1e-184">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="29f1e-185">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="29f1e-186">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-186">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29f1e-187">동기화에 사용될 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-187">Gets the object to be used for synchronization.</span></span></summary>
        <value><span data-ttu-id="29f1e-188">동기화에 사용될 개체를 나타내는 <see cref="T:System.Object" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-188">Returns an <see cref="T:System.Object" /> value representing the object to be used for synchronization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="29f1e-189">속성 값</span><span class="sxs-lookup"><span data-stu-id="29f1e-189">Property Value</span></span>  
 <span data-ttu-id="29f1e-190">동기화에 사용할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-190">The object to be used for synchronization.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="29f1e-191">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="29f1e-191">.NET Framework Security</span></span>  
 <span data-ttu-id="29f1e-192">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-192">Full trust for the immediate caller.</span></span> <span data-ttu-id="29f1e-193">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-193">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="29f1e-194">자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-194">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29f1e-195"><see cref="T:System.Collections.IEnumerator" />를 반복하는 <see cref="T:System.Management.MethodDataCollection" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-195">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.MethodDataCollection" />.</span></span></summary>
        <returns><span data-ttu-id="29f1e-196"><see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Management.MethodDataCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-196">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.MethodDataCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f1e-197">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="29f1e-197">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="29f1e-198">@FSHO1@C# 언어의 `foreach` 문(Visual Basic의 경우 `for each`)은 열거자의 복잡성을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-198">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="29f1e-199">그러므로 열거자를 직접 조작하는 대신 `foreach`를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-199">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="29f1e-200">열거자를 사용하여 컬렉션의 데이터를 읽을 수는 있지만 내부 컬렉션을 수정할 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-200">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="29f1e-201">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-201">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="29f1e-202"><xref:System.Collections.IEnumerator.Reset%2A>을 실행하면 열거자가 이 위치로 복원됩니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-202"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="29f1e-203">이 위치에서, 호출 <xref:System.Collections.IEnumerator.Current%2A> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-203">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="29f1e-204">따라서 <xref:System.Collections.IEnumerator.MoveNext%2A>의 값을 읽기 전에 <xref:System.Collections.IEnumerator.Current%2A>를 호출하여 열거자를 해당 컬렉션의 첫 번째 요소로 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-204">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="29f1e-205"><xref:System.Collections.IEnumerator.Current%2A>에서는 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A>이 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-205"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="29f1e-206"><xref:System.Collections.IEnumerator.MoveNext%2A>는 <xref:System.Collections.IEnumerator.Current%2A>를 다음 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-206"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="29f1e-207">경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-207">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="29f1e-208">열거자가 있는 경우이 위치에 대 한 후속 호출에서 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환할 수도 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-208">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="29f1e-209">마지막으로 호출 하는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`호출, <xref:System.Collections.IEnumerator.Current%2A> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-209">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="29f1e-210"><xref:System.Collections.IEnumerator.Current%2A>를 컬렉션의 첫째 요소에 다시 설정하려면 <xref:System.Collections.IEnumerator.Reset%2A>을 호출한 뒤 <xref:System.Collections.IEnumerator.MoveNext%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-210">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="29f1e-211">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-211">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="29f1e-212">변경, 추가 하는 등 컬렉션을 수정 하거나 요소를 삭제 하면 열거자가 더 유효 하지 않으며을 다음에 호출할 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A> throw는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-212">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="29f1e-213">사이 컬렉션이 수정 되는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 및 <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> 열거자가 이미 무효로 되 었 하는 경우에 설정 하는 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-213">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="29f1e-214">열거자는 컬렉션에 독점적으로 액세스할 수 있는 권한이 없으므로 컬렉션을 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-214">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="29f1e-215">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-215">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="29f1e-216">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29f1e-216">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="29f1e-217">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="29f1e-217">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>