<Type Name="MethodDataCollection" FullName="System.Management.MethodDataCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ebac5475381013e6114490eac40793c27c067b7" /><Meta Name="ms.sourcegitcommit" Value="662f143e6be46d519ff8ab4451d543d91e651478" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/18/2018" /><Meta Name="ms.locfileid" Value="53564107" /></Metadata><TypeSignature Language="C#" Value="public class MethodDataCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MethodDataCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Management.MethodDataCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class MethodDataCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class MethodDataCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type MethodDataCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="31a97-101">컬렉션에서 사용할 수 있는 메서드 집합을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-101">Represents the set of methods available in the collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="31a97-102">다음 예제에 대 한 정보를 나열 합니다 **Win32_Process.Create** 메서드를 사용 하 여는 <xref:System.Management.MethodData> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-102">The following example lists information about the **Win32_Process.Create** method using the <xref:System.Management.MethodData> class.</span></span> <span data-ttu-id="31a97-103">에 대 한 자세한 합니다 **Win32_Process** 클래스에서 MSDN 라이브러리에서 Windows Management Instrumentation 설명서를 참조 하십시오 http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-103">For more information on the **Win32_Process** class, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span>  
  
 [!code-csharp[wminet_MethodDataCollection#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_MethodDataCollection/cs/MethodDataCollection.cs#1)]
 [!code-vb[wminet_MethodDataCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_MethodDataCollection/vb/MethodDataCollection.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="31a97-104"><see cref="T:System.Management.MethodData" />에 <see cref="T:System.Management.MethodDataCollection" /> 개체를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-104">Adds a <see cref="T:System.Management.MethodData" /> object to the <see cref="T:System.Management.MethodDataCollection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ methodName);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; unit&#xA;override this.Add : string -&gt; unit" Usage="methodDataCollection.Add methodName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="31a97-105">추가할 메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-105">The name of the method to add.</span></span></param>
        <summary><span data-ttu-id="31a97-106"><see cref="T:System.Management.MethodData" />에 <see cref="T:System.Management.MethodDataCollection" />를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-106">Adds a <see cref="T:System.Management.MethodData" /> to the <see cref="T:System.Management.MethodDataCollection" />.</span></span> <span data-ttu-id="31a97-107">이 오버로드는 컬렉션에 매개 변수 없이 새 메서드를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-107">This overload will add a new method with no parameters to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31a97-108">추가 <xref:System.Management.MethodData> 개체는 <xref:System.Management.MethodDataCollection> 클래스 인스턴스가 없는 경우에 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-108">Adding <xref:System.Management.MethodData> objects to the <xref:System.Management.MethodDataCollection> can only be done when the class has no instances.</span></span> <span data-ttu-id="31a97-109">다른 경우 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-109">Any other case will result in an exception.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="31a97-110">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="31a97-110">.NET Framework Security</span></span>  
 <span data-ttu-id="31a97-111">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="31a97-112">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="31a97-113">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string methodName, System.Management.ManagementBaseObject inParams, System.Management.ManagementBaseObject outParams);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string methodName, class System.Management.ManagementBaseObject inParams, class System.Management.ManagementBaseObject outParams) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.Add(System.String,System.Management.ManagementBaseObject,System.Management.ManagementBaseObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (methodName As String, inParams As ManagementBaseObject, outParams As ManagementBaseObject)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ methodName, System::Management::ManagementBaseObject ^ inParams, System::Management::ManagementBaseObject ^ outParams);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member Add : string * System.Management.ManagementBaseObject * System.Management.ManagementBaseObject -&gt; unit&#xA;override this.Add : string * System.Management.ManagementBaseObject * System.Management.ManagementBaseObject -&gt; unit" Usage="methodDataCollection.Add (methodName, inParams, outParams)" FrameworkAlternate="dotnet-plat-ext-2.2;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual void Add (string methodName, System.Management.ManagementBaseObject inParameters, System.Management.ManagementBaseObject outParameters);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string methodName, class System.Management.ManagementBaseObject inParameters, class System.Management.ManagementBaseObject outParameters) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (methodName As String, inParameters As ManagementBaseObject, outParameters As ManagementBaseObject)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ methodName, System::Management::ManagementBaseObject ^ inParameters, System::Management::ManagementBaseObject ^ outParameters);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="F#" Value="abstract member Add : string * System.Management.ManagementBaseObject * System.Management.ManagementBaseObject -&gt; unit&#xA;override this.Add : string * System.Management.ManagementBaseObject * System.Management.ManagementBaseObject -&gt; unit" Usage="methodDataCollection.Add (methodName, inParameters, outParameters)" FrameworkAlternate="dotnet-plat-ext-2.1;netframework-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" />
        <Parameter Name="inParams" Type="System.Management.ManagementBaseObject" Index="1" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="inParameters" Type="System.Management.ManagementBaseObject" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
        <Parameter Name="outParams" Type="System.Management.ManagementBaseObject" Index="2" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="outParameters" Type="System.Management.ManagementBaseObject" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="31a97-114">추가할 메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-114">The name of the method to add.</span></span></param>
        <param name="inParameters"><span data-ttu-id="31a97-115">메서드에 대한 입력 매개 변수가 들어 있는 <see cref="T:System.Management.ManagementBaseObject" />입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-115">The <see cref="T:System.Management.ManagementBaseObject" /> holding the input parameters to the method.</span></span></param>
        <param name="outParameters"><span data-ttu-id="31a97-116">메서드에 대한 출력 매개 변수가 들어 있는 <see cref="T:System.Management.ManagementBaseObject" />입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-116">The <see cref="T:System.Management.ManagementBaseObject" /> holding the output parameters to the method.</span></span></param>
        <param name="inParams"><span data-ttu-id="31a97-117">메서드에 대한 입력 매개 변수가 들어 있는 <see cref="T:System.Management.ManagementBaseObject" />입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-117">The <see cref="T:System.Management.ManagementBaseObject" /> holding the input parameters to the method.</span></span></param>
        <param name="outParams"><span data-ttu-id="31a97-118">메서드에 대한 출력 매개 변수가 들어 있는 <see cref="T:System.Management.ManagementBaseObject" />입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-118">The <see cref="T:System.Management.ManagementBaseObject" /> holding the output parameters to the method.</span></span></param>
        <summary><span data-ttu-id="31a97-119"><see cref="T:System.Management.MethodData" />에 <see cref="T:System.Management.MethodDataCollection" />를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-119">Adds a <see cref="T:System.Management.MethodData" /> to the <see cref="T:System.Management.MethodDataCollection" />.</span></span> <span data-ttu-id="31a97-120">이 오버로드는 컬렉션에 지정된 매개 변수 개체를 사용하여 새 메서드를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-120">This overload will add a new method with the specified parameter objects to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31a97-121">추가 <xref:System.Management.MethodData> 개체는 <xref:System.Management.MethodDataCollection> 클래스 인스턴스가 없는 경우에 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-121">Adding <xref:System.Management.MethodData> objects to the <xref:System.Management.MethodDataCollection> can only be done when the class has no instances.</span></span> <span data-ttu-id="31a97-122">다른 경우 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-122">Any other case will result in an exception.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="31a97-123">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="31a97-123">.NET Framework Security</span></span>  
 <span data-ttu-id="31a97-124">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-124">Full trust for the immediate caller.</span></span> <span data-ttu-id="31a97-125">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-125">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="31a97-126">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-126">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="31a97-127"><see cref="T:System.Management.MethodDataCollection" /> 개체를 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-127">Copies the <see cref="T:System.Management.MethodDataCollection" /> object into an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="methodDataCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="31a97-128">컬렉션을 복사할 대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-128">The array to which to copy the collection.</span></span></param>
        <param name="index"><span data-ttu-id="31a97-129">복사를 시작할 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-129">The index from which to start.</span></span></param>
        <summary><span data-ttu-id="31a97-130"><see cref="T:System.Management.MethodDataCollection" />을 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-130">Copies the <see cref="T:System.Management.MethodDataCollection" /> into an array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="31a97-131">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="31a97-131">.NET Framework Security</span></span>  
 <span data-ttu-id="31a97-132">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-132">Full trust for the immediate caller.</span></span> <span data-ttu-id="31a97-133">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-133">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="31a97-134">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-134">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Management.MethodData[] methodArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Management.MethodData[] methodArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.CopyTo(System.Management.MethodData[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (methodArray As MethodData(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Management::MethodData ^&gt; ^ methodArray, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Management.MethodData[] * int -&gt; unit" Usage="methodDataCollection.CopyTo (methodArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodArray" Type="System.Management.MethodData[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="methodArray"><span data-ttu-id="31a97-135"><see cref="T:System.Management.MethodData" /> 개체를 복사할 대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-135">The destination array to which to copy the <see cref="T:System.Management.MethodData" /> objects.</span></span></param>
        <param name="index"><span data-ttu-id="31a97-136">복사가 시작될 대상 배열의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-136">The index in the destination array from which to start the copy.</span></span></param>
        <summary><span data-ttu-id="31a97-137"><see cref="T:System.Management.MethodDataCollection" />을 특수화된 <see cref="T:System.Management.MethodData" /> 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-137">Copies the <see cref="T:System.Management.MethodDataCollection" /> to a specialized <see cref="T:System.Management.MethodData" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="31a97-138">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="31a97-138">.NET Framework Security</span></span>  
 <span data-ttu-id="31a97-139">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-139">Full trust for the immediate caller.</span></span> <span data-ttu-id="31a97-140">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-140">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="31a97-141">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-141">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Management.MethodDataCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31a97-142"><see cref="T:System.Management.MethodDataCollection" /> 컬렉션의 개체 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-142">Gets the number of objects in the <see cref="T:System.Management.MethodDataCollection" /> collection.</span></span></summary>
        <value><span data-ttu-id="31a97-143">이 컬렉션에 있는 개체 수를 나타내는 <see cref="T:System.Int32" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-143">Returns an <see cref="T:System.Int32" /> value representing the number of objects in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="31a97-144">속성 값</span><span class="sxs-lookup"><span data-stu-id="31a97-144">Property Value</span></span>  
 <span data-ttu-id="31a97-145">개체 수가 <xref:System.Management.MethodDataCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-145">The number of objects in the <xref:System.Management.MethodDataCollection>.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="31a97-146">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="31a97-146">.NET Framework Security</span></span>  
 <span data-ttu-id="31a97-147">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-147">Full trust for the immediate caller.</span></span> <span data-ttu-id="31a97-148">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-148">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="31a97-149">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-149">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Management.MethodDataCollection.MethodDataEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.MethodDataCollection/MethodDataEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As MethodDataCollection.MethodDataEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::MethodDataCollection::MethodDataEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Management.MethodDataCollection.MethodDataEnumerator" Usage="methodDataCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.MethodDataCollection+MethodDataEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31a97-150"><see cref="T:System.Management.MethodDataCollection" />에 대한 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-150">Returns an enumerator for the <see cref="T:System.Management.MethodDataCollection" />.</span></span></summary>
        <returns><span data-ttu-id="31a97-151">컬렉션을 통해 열거할 <see cref="T:System.Collections.IEnumerator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-151">An <see cref="T:System.Collections.IEnumerator" /> to enumerate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31a97-152">이 메서드를 호출할 때마다 컬렉션에 새 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-152">Each call to this method returns a new enumerator on the collection.</span></span> <span data-ttu-id="31a97-153">동일한 메서드 컬렉션에 대 한 여러 열거자를 얻을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-153">Multiple enumerators can be obtained for the same method collection.</span></span> <span data-ttu-id="31a97-154">그러나 각 열거자는 컬렉션의 스냅숏을 만듭니다 때문에 열거자를 가져온 후 컬렉션에 대 한 변경 내용이 반영 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-154">However, each enumerator takes a snapshot of the collection, so changes made to the collection after the enumerator was obtained are not reflected.</span></span>  
  
 <span data-ttu-id="31a97-155">반복할 수 있습니다 (Visual Basic.NET와 같이 `For Each` 문 또는 C# `For` 문) 정방향 전용 열거자를 한 번을 통해.</span><span class="sxs-lookup"><span data-stu-id="31a97-155">You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time.</span></span> <span data-ttu-id="31a97-156">인스턴스를 포함 하는 메모리는 열거자를 되감을 수 없습니다 있도록 WMI가 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-156">The memory containing the instances is released by WMI so that the enumerator cannot be rewound.</span></span> <span data-ttu-id="31a97-157">따라서는 <xref:System.Management.MethodDataCollection.Count%2A> 열거자 되감기 필요 하므로 메서드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-157">Therefore, the <xref:System.Management.MethodDataCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.</span></span>  
  
 <span data-ttu-id="31a97-158">정방향 전용 열거자 일반적으로 훨씬 더 빠릅니다 기본 열거자 보다 적은 메모리를 사용 하며 호출을 허용 하지 않습니다 <xref:System.Management.MethodDataCollection.MethodDataEnumerator.Reset%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-158">Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to <xref:System.Management.MethodDataCollection.MethodDataEnumerator.Reset%2A>.</span></span>  
  
 <span data-ttu-id="31a97-159">열거자를 되감아 컬렉션에 개체가 여러 열거형에 사용할 수 있는 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-159">If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="31a97-160">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="31a97-160">.NET Framework Security</span></span>  
 <span data-ttu-id="31a97-161">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-161">Full trust for the immediate caller.</span></span> <span data-ttu-id="31a97-162">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-162">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="31a97-163">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-163">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Management.MethodDataCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31a97-164">개체가 동기화되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-164">Gets a value that indicates whether the object is synchronized.</span></span></summary>
        <value><span data-ttu-id="31a97-165">개체가 동기화되는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-165">Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="31a97-166">속성 값</span><span class="sxs-lookup"><span data-stu-id="31a97-166">Property Value</span></span>  
 <span data-ttu-id="31a97-167">`true` 개체는 동기화 하는 경우 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-167">`true` if the object is synchronized; otherwise, `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="31a97-168">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="31a97-168">.NET Framework Security</span></span>  
 <span data-ttu-id="31a97-169">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-169">Full trust for the immediate caller.</span></span> <span data-ttu-id="31a97-170">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-170">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="31a97-171">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-171">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Management.MethodData this[string methodName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.MethodData Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(methodName As String) As MethodData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Management::MethodData ^ default[System::String ^] { System::Management::MethodData ^ get(System::String ^ methodName); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Management.MethodData" Usage="System.Management.MethodDataCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.MethodData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="31a97-172">요청한 메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-172">The name of the method requested.</span></span></param>
        <summary><span data-ttu-id="31a97-173"><see cref="T:System.Management.MethodData" />에서 지정된 <see cref="T:System.Management.MethodDataCollection" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-173">Gets the specified <see cref="T:System.Management.MethodData" /> from the <see cref="T:System.Management.MethodDataCollection" />.</span></span></summary>
        <value><span data-ttu-id="31a97-174">컬렉션에서 지정된 메서드의 메서드 데이터가 들어 있는 <see cref="T:System.Management.MethodData" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-174">Returns a <see cref="T:System.Management.MethodData" /> containing the method data for a specified method from the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="31a97-175">속성 값</span><span class="sxs-lookup"><span data-stu-id="31a97-175">Property Value</span></span>  
 <span data-ttu-id="31a97-176"><xref:System.Management.MethodData> 지정 된 메서드에 대 한 모든 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-176">A <xref:System.Management.MethodData> containing all information about the specified method.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="31a97-177">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="31a97-177">.NET Framework Security</span></span>  
 <span data-ttu-id="31a97-178">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-178">Full trust for the immediate caller.</span></span> <span data-ttu-id="31a97-179">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-179">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="31a97-180">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-180">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ methodName);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit&#xA;override this.Remove : string -&gt; unit" Usage="methodDataCollection.Remove methodName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="31a97-181">컬렉션에서 제거할 메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-181">The name of the method to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="31a97-182"><see cref="T:System.Management.MethodData" />에서 <see cref="T:System.Management.MethodDataCollection" /> 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-182">Removes a <see cref="T:System.Management.MethodData" /> from the <see cref="T:System.Management.MethodDataCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31a97-183">제거 <xref:System.Management.MethodData> 에서 개체를 <xref:System.Management.MethodDataCollection> 클래스 인스턴스가 없는 경우에 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-183">Removing <xref:System.Management.MethodData> objects from the <xref:System.Management.MethodDataCollection> can only be done when the class has no instances.</span></span> <span data-ttu-id="31a97-184">다른 경우 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-184">Any other case will result in an exception.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="31a97-185">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="31a97-185">.NET Framework Security</span></span>  
 <span data-ttu-id="31a97-186">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-186">Full trust for the immediate caller.</span></span> <span data-ttu-id="31a97-187">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-187">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="31a97-188">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-188">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Management.MethodDataCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31a97-189">동기화에 사용될 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-189">Gets the object to be used for synchronization.</span></span></summary>
        <value><span data-ttu-id="31a97-190">동기화에 사용될 개체를 나타내는 <see cref="T:System.Object" /> 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-190">Returns an <see cref="T:System.Object" /> value representing the object to be used for synchronization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="31a97-191">속성 값</span><span class="sxs-lookup"><span data-stu-id="31a97-191">Property Value</span></span>  
 <span data-ttu-id="31a97-192">동기화에 사용할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-192">The object to be used for synchronization.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="31a97-193">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="31a97-193">.NET Framework Security</span></span>  
 <span data-ttu-id="31a97-194">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-194">Full trust for the immediate caller.</span></span> <span data-ttu-id="31a97-195">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-195">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="31a97-196">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-196">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31a97-197"><see cref="T:System.Collections.IEnumerator" />를 반복하는 <see cref="T:System.Management.MethodDataCollection" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-197">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.MethodDataCollection" />.</span></span></summary>
        <returns><span data-ttu-id="31a97-198"><see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Management.MethodDataCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-198">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.MethodDataCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31a97-199">[Visual Basic의 경우 C#]</span><span class="sxs-lookup"><span data-stu-id="31a97-199">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="31a97-200">@FSHO1@C# 언어의 `foreach` 문(Visual Basic의 경우 `for each`)은 열거자의 복잡성을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-200">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="31a97-201">그러므로 열거자를 직접 조작하는 대신 `foreach`를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-201">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="31a97-202">열거자를 사용하여 컬렉션의 데이터를 읽을 수는 있지만 내부 컬렉션을 수정할 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-202">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="31a97-203">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-203">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="31a97-204"><xref:System.Collections.IEnumerator.Reset%2A>을 실행하면 열거자가 이 위치로 복원됩니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-204"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="31a97-205">이 위치에서, 호출 <xref:System.Collections.IEnumerator.Current%2A> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-205">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="31a97-206">따라서 <xref:System.Collections.IEnumerator.MoveNext%2A>의 값을 읽기 전에 <xref:System.Collections.IEnumerator.Current%2A>를 호출하여 열거자를 해당 컬렉션의 첫 번째 요소로 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-206">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="31a97-207"><xref:System.Collections.IEnumerator.Current%2A>에서는 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A>이 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-207"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="31a97-208"><xref:System.Collections.IEnumerator.MoveNext%2A>는 <xref:System.Collections.IEnumerator.Current%2A>를 다음 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-208"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="31a97-209">경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 열거자를 컬렉션의 끝 컬렉션의 마지막 요소 뒤에 배치 되는 전달 하 고 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-209">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="31a97-210">열거자가 있는 경우이 위치에 대 한 후속 호출은 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환할 수도 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-210">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="31a97-211">마지막으로 호출 하는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`호출, <xref:System.Collections.IEnumerator.Current%2A> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-211">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="31a97-212"><xref:System.Collections.IEnumerator.Current%2A>를 컬렉션의 첫째 요소에 다시 설정하려면 <xref:System.Collections.IEnumerator.Reset%2A>을 호출한 뒤 <xref:System.Collections.IEnumerator.MoveNext%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-212">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="31a97-213">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-213">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="31a97-214">변경에 추가 하는 등 컬렉션을 수정 하거나 요소를 삭제, 열거자가 복구할 유효 하지 않으며을 다음에 호출할 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A> throw는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-214">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="31a97-215">컬렉션 사이 수정 된 경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 하 고 <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> 열거자가 이미 무효화 된 경우에로 설정 되어 있는 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-215">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="31a97-216">열거자는 컬렉션에 독점적으로 액세스할 수 있는 권한이 없으므로 컬렉션을 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-216">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="31a97-217">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-217">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="31a97-218">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-218">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="31a97-219">이 방법은 O(1) 작업에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a97-219">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>