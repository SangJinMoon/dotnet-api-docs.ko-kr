<Type Name="QualifierDataCollection" FullName="System.Management.QualifierDataCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="444a846cc43f8fd0326eb114e1bddfbff4a08aaa" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55370135" /></Metadata><TypeSignature Language="C#" Value="public class QualifierDataCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QualifierDataCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Management.QualifierDataCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class QualifierDataCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class QualifierDataCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type QualifierDataCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8f297-101"><see cref="T:System.Management.QualifierData" /> 개체의 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-101">Represents a collection of <see cref="T:System.Management.QualifierData" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8f297-102">다음 예제에 대 한 한정자 정보를 나열 합니다 **Win32_Service** 를 사용 하 여 클래스를 <xref:System.Management.QualifierData> 클래스.</span><span class="sxs-lookup"><span data-stu-id="8f297-102">The following example lists qualifier information about the **Win32_Service** class using the <xref:System.Management.QualifierData> class.</span></span> <span data-ttu-id="8f297-103">에 대 한 자세한 내용은 **Win32_Service**를 참조 합니다 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) 설명서.</span><span class="sxs-lookup"><span data-stu-id="8f297-103">For more information about **Win32_Service**, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span>  
  
 [!code-csharp[wminet_QualifierDataCollection#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_QualifierDataCollection/cs/QualifierDataCollection.cs#1)]
 [!code-vb[wminet_QualifierDataCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_QualifierDataCollection/vb/QualifierDataCollection.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f297-104"><see cref="T:System.Management.QualifierData" />에 <see cref="T:System.Management.QualifierDataCollection" /> 개체를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-104">Adds a <see cref="T:System.Management.QualifierData" /> object to the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string qualifierName, object qualifierValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string qualifierName, object qualifierValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (qualifierName As String, qualifierValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ qualifierName, System::Object ^ qualifierValue);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj -&gt; unit&#xA;override this.Add : string * obj -&gt; unit" Usage="qualifierDataCollection.Add (qualifierName, qualifierValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifierName" Type="System.String" />
        <Parameter Name="qualifierValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="qualifierName"><span data-ttu-id="8f297-105"><see cref="T:System.Management.QualifierData" />에 추가될 <see cref="T:System.Management.QualifierDataCollection" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-105">The name of the <see cref="T:System.Management.QualifierData" /> to be added to the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></param>
        <param name="qualifierValue"><span data-ttu-id="8f297-106">새 한정자의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-106">The value for the new qualifier.</span></span></param>
        <summary><span data-ttu-id="8f297-107"><see cref="T:System.Management.QualifierData" />에 <see cref="T:System.Management.QualifierDataCollection" />를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-107">Adds a <see cref="T:System.Management.QualifierData" /> to the <see cref="T:System.Management.QualifierDataCollection" />.</span></span> <span data-ttu-id="8f297-108">이 오버로드는 한정자 이름과 값을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-108">This overload specifies the qualifier name and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="8f297-109">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="8f297-109">.NET Framework Security</span></span>  
 <span data-ttu-id="8f297-110">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-110">Full trust for the immediate caller.</span></span> <span data-ttu-id="8f297-111">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-111">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8f297-112">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-112">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string qualifierName, object qualifierValue, bool isAmended, bool propagatesToInstance, bool propagatesToSubclass, bool isOverridable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string qualifierName, object qualifierValue, bool isAmended, bool propagatesToInstance, bool propagatesToSubclass, bool isOverridable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (qualifierName As String, qualifierValue As Object, isAmended As Boolean, propagatesToInstance As Boolean, propagatesToSubclass As Boolean, isOverridable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ qualifierName, System::Object ^ qualifierValue, bool isAmended, bool propagatesToInstance, bool propagatesToSubclass, bool isOverridable);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * bool * bool * bool * bool -&gt; unit&#xA;override this.Add : string * obj * bool * bool * bool * bool -&gt; unit" Usage="qualifierDataCollection.Add (qualifierName, qualifierValue, isAmended, propagatesToInstance, propagatesToSubclass, isOverridable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifierName" Type="System.String" />
        <Parameter Name="qualifierValue" Type="System.Object" />
        <Parameter Name="isAmended" Type="System.Boolean" />
        <Parameter Name="propagatesToInstance" Type="System.Boolean" />
        <Parameter Name="propagatesToSubclass" Type="System.Boolean" />
        <Parameter Name="isOverridable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="qualifierName"><span data-ttu-id="8f297-113">한정자 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-113">The qualifier name.</span></span></param>
        <param name="qualifierValue"><span data-ttu-id="8f297-114">한정자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-114">The qualifier value.</span></span></param>
        <param name="isAmended"><span data-ttu-id="8f297-115">이 한정자가 수정된 <c>flavor</c>임을 지정하려면 <see langword="true" />고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-115"><see langword="true" /> to specify that this qualifier is amended (<c>flavor</c>); otherwise, <see langword="false" />.</span></span></param>
        <param name="propagatesToInstance"><span data-ttu-id="8f297-116">이 한정자를 인스턴스로 전파하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-116"><see langword="true" /> to propagate this qualifier to instances; otherwise, <see langword="false" />.</span></span></param>
        <param name="propagatesToSubclass"><span data-ttu-id="8f297-117">이 한정자를 서브클래스로 전파하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-117"><see langword="true" /> to propagate this qualifier to subclasses; otherwise, <see langword="false" />.</span></span></param>
        <param name="isOverridable"><span data-ttu-id="8f297-118">이 한정자의 값이 서브클래스의 인스턴스에서 재정의될 수 있도록 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-118"><see langword="true" /> to specify that this qualifier's value is overridable in instances of subclasses; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8f297-119"><see cref="T:System.Management.QualifierData" />에 <see cref="T:System.Management.QualifierDataCollection" />를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-119">Adds a <see cref="T:System.Management.QualifierData" /> to the <see cref="T:System.Management.QualifierDataCollection" />.</span></span> <span data-ttu-id="8f297-120">이 오버로드는 <see cref="T:System.Management.QualifierData" />의 모든 속성 값을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-120">This overload specifies all property values for a <see cref="T:System.Management.QualifierData" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="8f297-121">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="8f297-121">.NET Framework Security</span></span>  
 <span data-ttu-id="8f297-122">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="8f297-123">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8f297-124">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f297-125"><see cref="T:System.Management.QualifierDataCollection" /> 개체를 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-125">Copies the <see cref="T:System.Management.QualifierDataCollection" /> object into an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="qualifierDataCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="8f297-126"><see cref="T:System.Management.QualifierDataCollection" />을 복사할 대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-126">The array to which to copy the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></param>
        <param name="index"><span data-ttu-id="8f297-127">복사가 시작될 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-127">The index from which to start copying.</span></span></param>
        <summary><span data-ttu-id="8f297-128"><see cref="T:System.Management.QualifierDataCollection" />을 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-128">Copies the <see cref="T:System.Management.QualifierDataCollection" /> into an array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="8f297-129">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="8f297-129">.NET Framework Security</span></span>  
 <span data-ttu-id="8f297-130">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-130">Full trust for the immediate caller.</span></span> <span data-ttu-id="8f297-131">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-131">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8f297-132">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-132">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Management.QualifierData[] qualifierArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Management.QualifierData[] qualifierArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.CopyTo(System.Management.QualifierData[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (qualifierArray As QualifierData(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Management::QualifierData ^&gt; ^ qualifierArray, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Management.QualifierData[] * int -&gt; unit" Usage="qualifierDataCollection.CopyTo (qualifierArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifierArray" Type="System.Management.QualifierData[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="qualifierArray"><span data-ttu-id="8f297-133"><see cref="T:System.Management.QualifierData" />이 복사될 <see cref="T:System.Management.QualifierDataCollection" /> 개체의 특수화된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-133">The specialized array of <see cref="T:System.Management.QualifierData" /> objects to which to copy the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></param>
        <param name="index"><span data-ttu-id="8f297-134">복사가 시작될 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-134">The index from which to start copying.</span></span></param>
        <summary><span data-ttu-id="8f297-135"><see cref="T:System.Management.QualifierDataCollection" />을 특수화된 <see cref="T:System.Management.QualifierData" /> 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-135">Copies the <see cref="T:System.Management.QualifierDataCollection" /> into a specialized              <see cref="T:System.Management.QualifierData" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="8f297-136">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="8f297-136">.NET Framework Security</span></span>  
 <span data-ttu-id="8f297-137">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-137">Full trust for the immediate caller.</span></span> <span data-ttu-id="8f297-138">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-138">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8f297-139">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-139">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Management.QualifierDataCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Management.QualifierDataCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f297-140"><see cref="T:System.Management.QualifierData" />의 <see cref="T:System.Management.QualifierDataCollection" /> 개체 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-140">Gets the number of <see cref="T:System.Management.QualifierData" /> objects in the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></summary>
        <value><span data-ttu-id="8f297-141">컬렉션의 개체 수입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-141">The number of objects in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="8f297-142">속성 값</span><span class="sxs-lookup"><span data-stu-id="8f297-142">Property Value</span></span>  
 <span data-ttu-id="8f297-143">컬렉션의 개체 수입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-143">The number of objects in the collection.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="8f297-144">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="8f297-144">.NET Framework Security</span></span>  
 <span data-ttu-id="8f297-145">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-145">Full trust for the immediate caller.</span></span> <span data-ttu-id="8f297-146">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-146">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8f297-147">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-147">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Management.QualifierDataCollection.QualifierDataEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.QualifierDataCollection/QualifierDataEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As QualifierDataCollection.QualifierDataEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::QualifierDataCollection::QualifierDataEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Management.QualifierDataCollection.QualifierDataEnumerator" Usage="qualifierDataCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.QualifierDataCollection+QualifierDataEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f297-148"><see cref="T:System.Management.QualifierDataCollection" />에 대한 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-148">Returns an enumerator for the <see cref="T:System.Management.QualifierDataCollection" />.</span></span> <span data-ttu-id="8f297-149">이 메서드는 강력한 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-149">This method is strongly typed.</span></span></summary>
        <returns><span data-ttu-id="8f297-150">컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-150">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f297-151">반복할 수 있습니다 (Visual Basic.NET와 같이 `For Each` 문 또는 C# `For` 문) 정방향 전용 열거자를 한 번을 통해.</span><span class="sxs-lookup"><span data-stu-id="8f297-151">You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time.</span></span> <span data-ttu-id="8f297-152">인스턴스를 포함 하는 메모리는 열거자를 되감을 수 없습니다 있도록 WMI가 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-152">The memory containing the instances is released by WMI so that the enumerator cannot be rewound.</span></span> <span data-ttu-id="8f297-153">따라서는 <xref:System.Management.QualifierDataCollection.Count%2A> 열거자 되감기 필요 하므로 메서드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-153">Therefore, the <xref:System.Management.QualifierDataCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.</span></span>  
  
 <span data-ttu-id="8f297-154">정방향 전용 열거자 일반적으로 훨씬 더 빠릅니다 기본 열거자 보다 적은 메모리를 사용 하며 호출을 허용 하지 않습니다 <xref:System.Management.QualifierDataCollection.QualifierDataEnumerator.Reset%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-154">Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to  <xref:System.Management.QualifierDataCollection.QualifierDataEnumerator.Reset%2A>.</span></span>  
  
 <span data-ttu-id="8f297-155">열거자를 되감아 컬렉션에 개체가 여러 열거형에 사용할 수 있는 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-155">If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="8f297-156">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="8f297-156">.NET Framework Security</span></span>  
 <span data-ttu-id="8f297-157">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-157">Full trust for the immediate caller.</span></span> <span data-ttu-id="8f297-158">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-158">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8f297-159">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-159">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Management.QualifierDataCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Management.QualifierDataCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f297-160">개체가 동기화되어 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-160">Gets a value indicating whether the object is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="8f297-161"><see langword="true" /> 개체는 동기화 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-161"><see langword="true" /> if the object is synchronized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="8f297-162">속성 값</span><span class="sxs-lookup"><span data-stu-id="8f297-162">Property Value</span></span>  
 <span data-ttu-id="8f297-163">`true` 개체는 동기화 하는 경우 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-163">`true` if the object is synchronized; otherwise, `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="8f297-164">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="8f297-164">.NET Framework Security</span></span>  
 <span data-ttu-id="8f297-165">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-165">Full trust for the immediate caller.</span></span> <span data-ttu-id="8f297-166">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-166">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8f297-167">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-167">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Management.QualifierData this[string qualifierName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.QualifierData Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Management.QualifierDataCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(qualifierName As String) As QualifierData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Management::QualifierData ^ default[System::String ^] { System::Management::QualifierData ^ get(System::String ^ qualifierName); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Management.QualifierData" Usage="System.Management.QualifierDataCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.QualifierData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifierName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qualifierName"><span data-ttu-id="8f297-168"><see cref="T:System.Management.QualifierData" />에 있는 액세스할 <see cref="T:System.Management.QualifierDataCollection" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-168">The name of the <see cref="T:System.Management.QualifierData" /> to access in the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></param>
        <summary><span data-ttu-id="8f297-169"><see cref="T:System.Management.QualifierData" />에서 지정된 <see cref="T:System.Management.QualifierDataCollection" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-169">Gets the specified <see cref="T:System.Management.QualifierData" /> from the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></summary>
        <value><span data-ttu-id="8f297-170">데이터 컬렉션의 지정된 된 한정자입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-170">The data for a specified qualifier in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="8f297-171">속성 값</span><span class="sxs-lookup"><span data-stu-id="8f297-171">Property Value</span></span>  
 <span data-ttu-id="8f297-172"><xref:System.Management.QualifierData>지정한 이름에 기반 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-172">A <xref:System.Management.QualifierData>, based on the name specified.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="8f297-173">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="8f297-173">.NET Framework Security</span></span>  
 <span data-ttu-id="8f297-174">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-174">Full trust for the immediate caller.</span></span> <span data-ttu-id="8f297-175">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-175">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8f297-176">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-176">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string qualifierName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string qualifierName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (qualifierName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ qualifierName);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit&#xA;override this.Remove : string -&gt; unit" Usage="qualifierDataCollection.Remove qualifierName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifierName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qualifierName"><span data-ttu-id="8f297-177">제거할 <see cref="T:System.Management.QualifierData" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-177">The name of the <see cref="T:System.Management.QualifierData" /> to remove.</span></span></param>
        <summary><span data-ttu-id="8f297-178">이름으로 <see cref="T:System.Management.QualifierData" />에서 <see cref="T:System.Management.QualifierDataCollection" />를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-178">Removes a <see cref="T:System.Management.QualifierData" /> from the <see cref="T:System.Management.QualifierDataCollection" /> by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="8f297-179">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="8f297-179">.NET Framework Security</span></span>  
 <span data-ttu-id="8f297-180">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-180">Full trust for the immediate caller.</span></span> <span data-ttu-id="8f297-181">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-181">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8f297-182">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-182">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Management.QualifierDataCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Management.QualifierDataCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f297-183">동기화에 사용될 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-183">Gets the object to be used for synchronization.</span></span></summary>
        <value><span data-ttu-id="8f297-184">동기화에 사용할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-184">The object to be used for synchronization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="8f297-185">속성 값</span><span class="sxs-lookup"><span data-stu-id="8f297-185">Property Value</span></span>  
 <span data-ttu-id="8f297-186">동기화에 사용할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-186">The object to be used for synchronization.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="8f297-187">.NET Framework 보안</span><span class="sxs-lookup"><span data-stu-id="8f297-187">.NET Framework Security</span></span>  
 <span data-ttu-id="8f297-188">직접 실행 호출자의 경우 완전히 신뢰합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-188">Full trust for the immediate caller.</span></span> <span data-ttu-id="8f297-189">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-189">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8f297-190">자세한 내용은 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-190">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f297-191"><see cref="T:System.Collections.IEnumerator" />를 반복하는 <see cref="T:System.Management.QualifierDataCollection" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-191">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></summary>
        <returns><span data-ttu-id="8f297-192"><see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Management.QualifierDataCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-192">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f297-193">[Visual Basic의 경우 C#]</span><span class="sxs-lookup"><span data-stu-id="8f297-193">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="8f297-194">@FSHO1@C# 언어의 `foreach` 문(Visual Basic의 경우 `for each`)은 열거자의 복잡성을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-194">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="8f297-195">그러므로 열거자를 직접 조작하는 대신 `foreach`를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-195">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="8f297-196">열거자를 사용하여 컬렉션의 데이터를 읽을 수는 있지만 내부 컬렉션을 수정할 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-196">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="8f297-197">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-197">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="8f297-198"><xref:System.Collections.IEnumerator.Reset%2A>을 실행하면 열거자가 이 위치로 복원됩니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-198"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="8f297-199">이 위치에서, 호출 <xref:System.Collections.IEnumerator.Current%2A> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-199">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="8f297-200">따라서 <xref:System.Collections.IEnumerator.MoveNext%2A>의 값을 읽기 전에 <xref:System.Collections.IEnumerator.Current%2A>를 호출하여 열거자를 해당 컬렉션의 첫 번째 요소로 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-200">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="8f297-201"><xref:System.Collections.IEnumerator.Current%2A>에서는 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A>이 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-201"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="8f297-202"><xref:System.Collections.IEnumerator.MoveNext%2A>는 <xref:System.Collections.IEnumerator.Current%2A>를 다음 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-202"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="8f297-203">경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 열거자를 컬렉션의 끝 컬렉션의 마지막 요소 뒤에 배치 되는 전달 하 고 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-203">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="8f297-204">열거자가 있는 경우이 위치에 대 한 후속 호출은 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환할 수도 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-204">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="8f297-205">마지막으로 호출 하는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`호출, <xref:System.Collections.IEnumerator.Current%2A> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-205">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="8f297-206"><xref:System.Collections.IEnumerator.Current%2A>를 컬렉션의 첫째 요소에 다시 설정하려면 <xref:System.Collections.IEnumerator.Reset%2A>을 호출한 뒤 <xref:System.Collections.IEnumerator.MoveNext%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-206">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="8f297-207">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-207">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="8f297-208">변경에 추가 하는 등 컬렉션을 수정 하거나 요소를 삭제, 열거자가 복구할 유효 하지 않으며을 다음에 호출할 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A> throw는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-208">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="8f297-209">컬렉션 사이 수정 된 경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 하 고 <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> 열거자가 이미 무효화 된 경우에로 설정 되어 있는 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-209">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="8f297-210">열거자는 컬렉션에 독점적으로 액세스할 수 있는 권한이 없으므로 컬렉션을 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-210">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="8f297-211">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-211">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="8f297-212">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-212">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="8f297-213">이 방법은 O(1) 작업에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="8f297-213">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>