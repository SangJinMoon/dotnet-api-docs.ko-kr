<Type Name="CounterSetInstance" FullName="System.Diagnostics.PerformanceData.CounterSetInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e7dbad4b70a0e2aabd8d438aa66caae7a2e2cb16" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30396187" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CounterSetInstance : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CounterSetInstance extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceData.CounterSetInstance" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CounterSetInstance&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CounterSetInstance sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Diagnostics.PerformanceData.CounterSet" /> 클래스에서 정의된 논리 카운터의 인스턴스를 만듭니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance%2A?displayProperty=nameWithType> 메서드가이 클래스의 인스턴스를 반환 합니다.  
  
   
  
## Examples  
 예제를 보려면 <xref:System.Diagnostics.PerformanceData>를 참조하십시오.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Counters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet Counters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet Counters" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceData.CounterSetInstance.Counters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Counters As CounterSetInstanceCounterDataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceData::CounterSetInstanceCounterDataSet ^ Counters { System::Diagnostics::PerformanceData::CounterSetInstanceCounterDataSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>카운터 집합 인스턴스에 대한 카운터 데이터의 컬렉션을 검색합니다.</summary>
        <value>카운터 집합 인스턴스에 포함된 카운터 데이터의 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 카운터 집합 인스턴스에 카운터를 인덱싱할 수 있습니다.  
  
   
  
## Examples  
 예제를 보려면 <xref:System.Diagnostics.PerformanceData>를 참조하십시오.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSetInstance.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 개체에서 사용하는 관리되지 않는 리소스를 모두 해제합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CounterSetInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSetInstance.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CounterSetInstance ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>관리되지 않는 리소스를 해제하고 다른 정리 작업을 수행합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>