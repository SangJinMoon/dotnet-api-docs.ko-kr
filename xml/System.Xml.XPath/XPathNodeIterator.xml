<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XPathNodeIterator.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac579f55fb6e8b1dfcfb81b3b8d2737df75c404edd2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79f55fb6e8b1dfcfb81b3b8d2737df75c404edd2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>Provides an iterator over a selected set of nodes.</source>
          <target state="translated">선택한 노드 집합에 반복기를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> class is not positioned on the first node in a selected set of nodes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> 에서 반환 된 개체는 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 클래스는 선택한 노드 집합의 첫 번째 노드에 배치 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>A call to the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class must be made to position the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object on the first node in the selected set of nodes.</source>
          <target state="translated">에 대 한 호출에서 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> 클래스의 위치를 지정할 수 있어야 합니다는 <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> 선택된 된 노드 집합의 첫 번째 노드에 개체입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>When using the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>, if you edit the current node or any of its ancestors, your current position is lost.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>, 현재 노드 또는 상위 항목 중 하나를 편집 하는 경우에 현재 위치 손실 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>If you want to edit a number of nodes that you have selected, create a <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> array, copy all of the nodes from the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> into the array, then iterate through the array and modify the nodes.</source>
          <target state="translated">여러 노드를 편집 하려면 선택한을 만듭니다는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 배열, 노드를 모두 복사는 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> 를 배열로 다음 배열에서 반복 및 노드 수정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>There are two ways to iterate over an <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> collection by using the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class.</source>
          <target state="translated">두 가지 방법으로 반복 하는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 사용 하 여 컬렉션의 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>One way is to use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method and then call <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> to get the current <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> instance, as in the following example:</source>
          <target state="translated">사용 하는 한 가지 방법은 것는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> 메서드와 호출 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> 현재 가져오려는 <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 다음 예제와 같이 인스턴스:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>Another way is to use a <ph id="ph1">`foreach`</ph> loop to call the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method and use the returned <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface to enumerate the nodes, as in the following example:</source>
          <target state="translated">또 다른 방법은 사용 하는 <ph id="ph1">`foreach`</ph> 루프를 호출 하는 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> 메서드 및 사용법 반환 된 <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph> 다음 예제와 같이 노드를 열거 하는 인터페이스:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>You should either use <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> or use <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph>.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> 사용 또는 <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>Combining these two approaches can cause unexpected results.</source>
          <target state="translated">이러한 두 방법을 결합 예기치 않은 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method is called first, and then the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method is called in the <ph id="ph3">`foreach`</ph> loop, the <ph id="ph4">`foreach`</ph> loop will not start enumerating the results from the beginning of the collection, but from the position after the <ph id="ph5">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> method.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> 메서드는 먼저 차례로 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> 메서드가 호출 되는지는 <ph id="ph3">`foreach`</ph> 루프는 <ph id="ph4">`foreach`</ph> 루프 후 위치 않고 컬렉션의 시작 부분에서 결과 열거 하기 시작 되지 것입니다는 <ph id="ph5">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.Select%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> class to select a node set using the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.Select%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 클래스를 사용 하 여 설정 노드를 선택 하는 <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>The example takes the <ph id="ph1">`books.xml`</ph> file as input.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`books.xml`</ph> 파일을 입력으로 사용합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> class, you must override the following members:</source>
          <target state="translated">상속 하는 경우는 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> 클래스 멤버를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.#ctor">
          <source>This constructor is called by derived class constructors to initialize state in this type.</source>
          <target state="translated">이 생성자는이 형식으로 상태를 초기화 하는 파생된 클래스 생성자에서 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.Clone">
          <source>When overridden in a derived class, returns a clone of this <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> object.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 이 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> 개체의 복제를 반환합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> object clone of this <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> 개체의 새로운 <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> 개체 복제입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.Clone">
          <source>The cloned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object is positioned at the same node in the node set if calls have been made to the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method.</source>
          <target state="translated">복제 된 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> 개체 노드 호출에 적용 된 경우 집합의 동일한 노드에 배치 되는 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.Clone">
          <source>The cloned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object is not affected by subsequent changes to this <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object.</source>
          <target state="translated">복제 된 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> 개체가이 변경으로 영향을 받지 않습니다 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Xml.XPath.XPathNodeIterator.Count">
          <source>Gets the index of the last node in the selected set of nodes.</source>
          <target state="translated">선택된 노드 집합에 포함된 마지막 노드의 인덱스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Count">
          <source>The index of the last node in the selected set of nodes, or 0 if there are no selected nodes.</source>
          <target state="translated">선택된 노드 집합에 포함된 마지막 노드의 인덱스이며, 선택된 노드가 없는 경우에는 0입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Count">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.Count%2A&gt;</ph> property does not affect the position of the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.Count%2A&gt;</ph> 속성의 위치에는 영향을 주지는 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>When overridden in a derived class, gets the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for this <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph>, positioned on the current context node.</source>
          <target state="translated">파생 클래스에서 재정의할 때 현재 컨텍스트 노드에 있는 이 <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph>에 대한 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object positioned on the context node from which the node set was selected.</source>
          <target state="translated">노드 집합이 선택된 컨텍스트 노드에 있는 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>The <ph id="ph1">&lt;see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" /&gt;</ph> method must be called to move the <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> to the first node in the selected set.</source>
          <target state="translated">선택한 집합의 첫 번째 노드로 <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph>를 이동하려면 <ph id="ph1">&lt;see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>You can use the properties of the returned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object to obtain information on the current node.</source>
          <target state="translated">반환 된 속성을 사용할 수 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 개체를 현재 노드에 대 한 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>However, the returned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object should not be modified.</source>
          <target state="translated">그러나 반환 된 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 개체를 수정 하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>The returned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object cannot be moved away from the selected node set.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 개체 선택된 된 노드 집합 밖으로 이동할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>Alternatively, you can clone the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object using the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator.Clone%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> class.</source>
          <target state="translated">복제할 수 있습니다는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 를 사용 하 여 개체는 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator.Clone%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>The cloned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object can then be moved away from the selected node set.</source>
          <target state="translated">복제 된 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 개체 선택된 된 노드 집합에서 이동할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>This method of cloning the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object might affect the performance of the XPath query.</source>
          <target state="translated">이 메서드는 복제는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 개체 XPath 쿼리의 성능에 영향을 줄 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator.SelectDescendants%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator.SelectChildren%2A&gt;</ph> methods result in no nodes being selected, the <ph id="ph4">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> property might not be pointing to the context node.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator.SelectDescendants%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator.SelectChildren%2A&gt;</ph> 메서드의 해지면 노드가 선택 되는 <ph id="ph4">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> 속성 컨텍스트 노드를 가리킬 수 없습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>To test whether nodes have been selected, use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.Count%2A&gt;</ph> property as shown in the following example.</source>
          <target state="translated">선택 된 노드가 있는지 여부를 테스트 하려면 사용 하 여 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.Count%2A&gt;</ph> 다음 예제와 같이 속성입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>The following example gets all book titles authored by Herman Melville using the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object and the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator.Clone%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> class.</source>
          <target state="translated">다음 예제에서는 둥 Melville 사용 하 여 만든 모든 책 제목을 가져옵니다는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> 개체 및 <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator.Clone%2A&gt;</ph> 의 메서드는 <ph id="ph4">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`contosoBooks.xml`</ph> 파일을 입력으로 사용합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
          <source>When overridden in a derived class, gets the index of the current position in the selected set of nodes.</source>
          <target state="translated">파생 클래스에서 재정의할 때 선택된 노드 집합에서 현재 위치의 인덱스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
          <source>The index of the current position.</source>
          <target state="translated">현재 위치의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
          <source>The index is 1-based.</source>
          <target state="translated">인덱스는 1부터 시작합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
          <source>Therefore, the first node has an index of 1.</source>
          <target state="translated">따라서 첫 번째 노드에 인덱스 1에 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
          <source>An index of 0 indicates there are no selected nodes.</source>
          <target state="translated">인덱스 0에 선택 된 노드가 없으면 나타냅니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
          <source>This property always returns a positive integer.</source>
          <target state="translated">항상이 속성은 양의 정수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> object to iterate through the selected node set.</source>
          <target state="translated">선택된 노드 집합을 반복하는 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> object to iterate through the selected node set.</source>
          <target state="translated">선택된 노드 집합을 반복하는 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>The enumerator is positioned on the current position of the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object.</source>
          <target state="translated">열거자의 현재 위치에 배치 되는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>There are two ways to iterate over an <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> collection by using the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class.</source>
          <target state="translated">두 가지 방법으로 반복 하는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 사용 하 여 컬렉션의 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>One way is to use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method and then call <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> to get the current <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> instance, as in the following example:</source>
          <target state="translated">사용 하는 한 가지 방법은 것는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> 메서드와 호출 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> 현재 가져오려는 <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 다음 예제와 같이 인스턴스:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>Another way is to use a <ph id="ph1">`foreach`</ph> loop to call the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method and use the returned <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface to enumerate the nodes, as in the following example:</source>
          <target state="translated">또 다른 방법은 사용 하는 <ph id="ph1">`foreach`</ph> 루프를 호출 하는 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> 메서드 및 사용법 반환 된 <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph> 다음 예제와 같이 노드를 열거 하는 인터페이스:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>You should either use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> or use the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> 하거나 사용 하 여는 <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>Combining these two approaches can cause unexpected results.</source>
          <target state="translated">이러한 두 방법을 결합 예기치 않은 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method is called first, and then the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method is called in the <ph id="ph3">`foreach`</ph> loop, the <ph id="ph4">`foreach`</ph> loop will not start enumerating the results from the beginning of the collection, but from the position after the <ph id="ph5">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> method.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> 메서드는 먼저 차례로 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> 메서드가 호출 되는지는 <ph id="ph3">`foreach`</ph> 루프는 <ph id="ph4">`foreach`</ph> 루프 후 위치 않고 컬렉션의 시작 부분에서 결과 열거 하기 시작 되지 것입니다는 <ph id="ph5">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>When overridden in a derived class, moves the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object returned by the <ph id="ph2">&lt;see cref="P:System.Xml.XPath.XPathNodeIterator.Current" /&gt;</ph> property to the next node in the selected node set.</source>
          <target state="translated">파생 클래스에서 재정의할 때 <ph id="ph2">&lt;see cref="P:System.Xml.XPath.XPathNodeIterator.Current" /&gt;</ph> 속성에서 반환되는 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 개체를 선택된 노드 집합의 다음 노드로 이동합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object moved to the next node; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if there are no more selected nodes.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 개체가 다음 노드로 이동하는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 더 이상 선택한 노드가 없는 경우 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object is positioned on the first node in the selected node set only after the initial call to the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> 개체가 선택된 된 노드 집합에 대 한 초기 호출 후에 첫 번째 노드 위치는 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>The node set is created in document order.</source>
          <target state="translated">문서 순서로 노드 집합이 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>Therefore, calling the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method moves to the next node in document order.</source>
          <target state="translated">따라서 호출 하 여 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> 메서드는 문서 순서에 따라 다음 노드로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>There are two ways to iterate over an <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> collection by using the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class.</source>
          <target state="translated">두 가지 방법으로 반복 하는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 사용 하 여 컬렉션의 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>One way is to use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method and then call <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> to get the current <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> instance, as in the following example:</source>
          <target state="translated">사용 하는 한 가지 방법은 것는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> 메서드와 호출 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> 현재 가져오려는 <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 다음 예제와 같이 인스턴스:</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>Another way is to use a <ph id="ph1">`foreach`</ph> loop to call the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method and use the returned <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface to enumerate the nodes, as in the following example:</source>
          <target state="translated">또 다른 방법은 사용 하는 <ph id="ph1">`foreach`</ph> 루프를 호출 하는 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> 메서드 및 사용법 반환 된 <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph> 다음 예제와 같이 노드를 열거 하는 인터페이스:</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>You should either use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> or use the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> 하거나 사용 하 여는 <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>Combining these two approaches can cause unexpected results.</source>
          <target state="translated">이러한 두 방법을 결합 예기치 않은 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method is called first, and then the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method is called in the <ph id="ph3">`foreach`</ph> loop, the <ph id="ph4">`foreach`</ph> loop will not start enumerating the results from the beginning of the collection, but from the position after the <ph id="ph5">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> method.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> 메서드는 먼저 차례로 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> 메서드가 호출 되는지는 <ph id="ph3">`foreach`</ph> 루프는 <ph id="ph4">`foreach`</ph> 루프 후 위치 않고 컬렉션의 시작 부분에서 결과 열거 하기 시작 되지 것입니다는 <ph id="ph5">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.Select%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> class to select a node set using the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.Select%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 클래스를 사용 하 여 설정 노드를 선택 하는 <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>The example takes the <ph id="ph1">`books.xml`</ph> file as input.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`books.xml`</ph> 파일을 입력으로 사용합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
          <source>Creates a new object that is a copy of the current instance.</source>
          <target state="translated">현재 인스턴스의 복사본인 새 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
          <source>A new object that is a copy of this instance.</source>
          <target state="translated">이 인스턴스의 복사본인 새 개체입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>