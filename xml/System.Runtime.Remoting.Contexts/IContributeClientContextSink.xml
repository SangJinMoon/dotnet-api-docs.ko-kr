<Type Name="IContributeClientContextSink" FullName="System.Runtime.Remoting.Contexts.IContributeClientContextSink">
  <TypeSignature Language="C#" Value="public interface IContributeClientContextSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContributeClientContextSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Contexts.IContributeClientContextSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContributeClientContextSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContributeClientContextSink" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="54e82-101">원격 호출의 클라이언트 쪽 컨텍스트 경계에 가로채기 싱크를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="54e82-101">Contributes an interception sink at the context boundary on the client end of a remoting call.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54e82-102"><xref:System.Runtime.Remoting.Contexts.IContributeClientContextSink> 인터페이스의 컨텍스트 속성에 의해 구현 됩니다는 <xref:System.Runtime.Remoting.Contexts.Context> 를 제공할 원격 호출의 클라이언트 쪽에 있는 컨텍스트 경계에 가로채기 싱크 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="54e82-102">The <xref:System.Runtime.Remoting.Contexts.IContributeClientContextSink> interface is implemented by context properties in a <xref:System.Runtime.Remoting.Contexts.Context> class that want to contribute an interception sink at the context boundary on the client end of a remoting call.</span></span>  
  
 <span data-ttu-id="54e82-103">클라이언트 컨텍스트 체인을 구현 하는 클라이언트 컨텍스트 속성에서 구성 됩니다 <xref:System.Runtime.Remoting.Contexts.IContributeClientContextSink>를 통해 싱크를 제공 하는 <xref:System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="54e82-103">The client context chain is composed from those properties in the client context that implement <xref:System.Runtime.Remoting.Contexts.IContributeClientContextSink>, which contributes to a sink through the <xref:System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink%2A> method call.</span></span> <span data-ttu-id="54e82-104">나중에 사용이이 체인 캐시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="54e82-104">This chain is cached for future use.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="GetClientContextSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink GetClientContextSink (System.Runtime.Remoting.Messaging.IMessageSink nextSink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageSink GetClientContextSink(class System.Runtime.Remoting.Messaging.IMessageSink nextSink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink(System.Runtime.Remoting.Messaging.IMessageSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientContextSink (nextSink As IMessageSink) As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::Messaging::IMessageSink ^ GetClientContextSink(System::Runtime::Remoting::Messaging::IMessageSink ^ nextSink);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nextSink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
      </Parameters>
      <Docs>
        <param name="nextSink"><span data-ttu-id="54e82-105">지금까지 구성된 싱크의 체인입니다.</span><span class="sxs-lookup"><span data-stu-id="54e82-105">The chain of sinks composed so far.</span></span></param>
        <summary><span data-ttu-id="54e82-106">지금까지 구성된 싱크 체인에서 첫 번째 싱크를 가져온 다음 해당 메시지 싱크를 이미 구성된 체인의 맨 앞에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="54e82-106">Takes the first sink in the chain of sinks composed so far, and then chains its message sink in front of the chain already formed.</span></span></summary>
        <returns><span data-ttu-id="54e82-107">구성 싱크 체인입니다.</span><span class="sxs-lookup"><span data-stu-id="54e82-107">The composite sink chain.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>