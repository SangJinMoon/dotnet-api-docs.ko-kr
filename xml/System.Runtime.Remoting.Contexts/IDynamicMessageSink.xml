<Type Name="IDynamicMessageSink" FullName="System.Runtime.Remoting.Contexts.IDynamicMessageSink">
  <TypeSignature Language="C#" Value="public interface IDynamicMessageSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDynamicMessageSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Contexts.IDynamicMessageSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDynamicMessageSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDynamicMessageSink" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a9567-101">구현하는 메시지 싱크가 동적으로 등록된 속성에 의해 제공됨을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a9567-101">Indicates that the implementing message sink will be provided by dynamically registered properties.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9567-102">동적 메시지 싱크 알림과 함께 시작 및 호출 종료 현재 호출 (이 대상이에 유용)는 클라이언트 쪽 이나 서버에 적용 되는지 나타내는 플래그와 함께 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a9567-102">Dynamic message sinks are provided with notifications of call start and call finish with flags indicating whether the call is currently on the client side or server side (this is useful for the context level sinks).</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="ProcessMessageFinish">
      <MemberSignature Language="C#" Value="public void ProcessMessageFinish (System.Runtime.Remoting.Messaging.IMessage replyMsg, bool bCliSide, bool bAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessageFinish(class System.Runtime.Remoting.Messaging.IMessage replyMsg, bool bCliSide, bool bAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IDynamicMessageSink.ProcessMessageFinish(System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessMessageFinish (replyMsg As IMessage, bCliSide As Boolean, bAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessMessageFinish(System::Runtime::Remoting::Messaging::IMessage ^ replyMsg, bool bCliSide, bool bAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replyMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="bCliSide" Type="System.Boolean" />
        <Parameter Name="bAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="replyMsg"><span data-ttu-id="a9567-103">응답 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="a9567-103">A reply message.</span></span></param>
        <param name="bCliSide"><span data-ttu-id="a9567-104">메서드가 클라이언트측에서 호출되면 <see langword="true" />이고, 서버측에서 호출되면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a9567-104">A value of <see langword="true" /> if the method is invoked on the client side and <see langword="false" /> if it is invoked on the server side.</span></span></param>
        <param name="bAsync"><span data-ttu-id="a9567-105">이 메서드가 비동기 호출이면 <see langword="true" />이고, 동기 호출이면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a9567-105">A value of <see langword="true" /> if this is an asynchronic call and <see langword="false" /> if it is a synchronic call.</span></span></param>
        <summary><span data-ttu-id="a9567-106">호출이 반환 중임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a9567-106">Indicates that a call is returning.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9567-107">부울 매개 변수 표시 여부는 싱크를 클라이언트측 또는 서버측 한 호출을 사용 하는지 여부는 <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a9567-107">The Boolean parameters indicate whether the sink is located on the client side or the server side and whether the call is using the <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProcessMessageStart">
      <MemberSignature Language="C#" Value="public void ProcessMessageStart (System.Runtime.Remoting.Messaging.IMessage reqMsg, bool bCliSide, bool bAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessageStart(class System.Runtime.Remoting.Messaging.IMessage reqMsg, bool bCliSide, bool bAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IDynamicMessageSink.ProcessMessageStart(System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessMessageStart (reqMsg As IMessage, bCliSide As Boolean, bAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessMessageStart(System::Runtime::Remoting::Messaging::IMessage ^ reqMsg, bool bCliSide, bool bAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reqMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="bCliSide" Type="System.Boolean" />
        <Parameter Name="bAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reqMsg"><span data-ttu-id="a9567-108">요청 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="a9567-108">A request message.</span></span></param>
        <param name="bCliSide"><span data-ttu-id="a9567-109">메서드가 클라이언트측에서 호출되면 <see langword="true" />이고, 서버측에 있으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a9567-109">A value of <see langword="true" /> if the method is invoked on the client side and <see langword="false" /> if the method is on the server side.</span></span></param>
        <param name="bAsync"><span data-ttu-id="a9567-110">이 메서드가 비동기 호출이면 <see langword="true" />이고, 동기 호출이면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a9567-110">A value of <see langword="true" /> if this is an asynchronic call and <see langword="false" /> if it is a synchronic call.</span></span></param>
        <summary><span data-ttu-id="a9567-111">호출이 시작 중임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a9567-111">Indicates that a call is starting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9567-112">부울 매개 변수 표시 여부는 싱크를 클라이언트측 또는 서버측 한 호출을 사용 하는지 여부는 <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a9567-112">The Boolean parameters indicate whether the sink is located on the client side or the server side and whether the call is using the <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>