<Type Name="IntranetZoneCredentialPolicy" FullName="Microsoft.Win32.IntranetZoneCredentialPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf9f57bdf65a6f26cf1e2965c02261fbb922b20d" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37707534" /></Metadata><TypeSignature Language="C#" Value="public class IntranetZoneCredentialPolicy : System.Net.ICredentialPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntranetZoneCredentialPolicy extends System.Object implements class System.Net.ICredentialPolicy" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.IntranetZoneCredentialPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class IntranetZoneCredentialPolicy&#xA;Implements ICredentialPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class IntranetZoneCredentialPolicy : System::Net::ICredentialPolicy" />
  <TypeSignature Language="F#" Value="type IntranetZoneCredentialPolicy = class&#xA;    interface ICredentialPolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Net.ICredentialPolicy</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="675f4-101"><see cref="T:System.Net.WebRequest" />와 파생 클래스를 사용하여 이루어진 리소스 요청에 사용할 자격 증명 정책을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-101">Defines a credential policy to be used for resource requests that are made using <see cref="T:System.Net.WebRequest" /> and its derived classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="675f4-102">이 정책을 통해 보낼만 요청한 리소스를 요청 하는 클라이언트와 동일한 도메인의 경우 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-102">This policy allows credentials to be sent only if the requested resource is in the same domain as the client that is making the request.</span></span> <span data-ttu-id="675f4-103">대부분의 애플리케이션에 대 한 인트라넷에 없는 리소스에 대 한 요청과 함께 전송 되 고 네트워크 자격 증명 하지 못하므로 최적의 정책입니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-103">For many applications this is the optimal policy because it prevents network credentials from being sent with requests for resources that are not on the intranet.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="675f4-104"><xref:System.Net.ICredentialPolicy> 경우에 정책을 호출 되는 <xref:System.Net.WebRequest> 또는 <xref:System.Net.WebProxy> 연결 된 요청 되지 않는 자격 증명에 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-104"><xref:System.Net.ICredentialPolicy> policies are invoked only if the <xref:System.Net.WebRequest> or the <xref:System.Net.WebProxy> that is associated with the request has credentials that are not `null`.</span></span> <span data-ttu-id="675f4-105">이 정책 설정에 자격 증명을 지정 하지 않으면 하는 요청에 대 한 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-105">Setting this policy has no effect on requests that do not specify credentials.</span></span>  
  
 <span data-ttu-id="675f4-106">사용 합니다 <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> 속성을 설정 합니다 <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> 정책입니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-106">Use the <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> property to set the <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> policy.</span></span> <span data-ttu-id="675f4-107">합니다 <xref:System.Net.IAuthenticationModule> 요청에 대 한 인증을 처리 하는 호출을 <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> 인증을 수행 하기 전에 메서드.</span><span class="sxs-lookup"><span data-stu-id="675f4-107">The <xref:System.Net.IAuthenticationModule> that handles authentication for the request will invoke the <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> method before performing the authentication.</span></span> <span data-ttu-id="675f4-108">요청된 된 클라이언트는 다른 도메인에 있으면 합니다 <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> 메서드가 반환 되는 `false`, 및 인증이 수행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-108">If the requested resource is in a different domain than the client, the <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> method returns `false`, and authentication is not performed.</span></span>  
  
 <span data-ttu-id="675f4-109">이 정책에는의 모든 인스턴스에 영향을 줍니다. <xref:System.Net.WebRequest> 현재 애플리케이션 도메인에서 null이 아닌 자격 증명을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-109">This policy affects all instances of <xref:System.Net.WebRequest> with non-null credentials in the current application domain.</span></span> <span data-ttu-id="675f4-110">개별 요청에 대해 정책을 재정의할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-110">The policy cannot be overridden on individual requests.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="675f4-111">다음 코드 예제에서는의 인스턴스를 만드는 방법을 보여 줍니다 <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> 및 애플리케이션 도메인에 대 한 자격 증명 정책을 설정 하려면 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-111">The following code example demonstrates creating an instance of <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> and using it to set the credential policy for the application domain.</span></span>  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntranetZoneCredentialPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntranetZoneCredentialPolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="675f4-112"><see cref="T:Microsoft.Win32.IntranetZoneCredentialPolicy" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-112">Initializes a new instance of the <see cref="T:Microsoft.Win32.IntranetZoneCredentialPolicy" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="675f4-113">설정에 사용할 수 있는 개체를 만들려면이 생성자를 사용 하는 애플리케이션을 <xref:System.Net.AuthenticationManager.CredentialPolicy%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-113">Applications use this constructor to create objects that can be used to set the <xref:System.Net.AuthenticationManager.CredentialPolicy%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="675f4-114">다음 코드 예제에서는이 클래스의 인스턴스를 작성 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-114">The following code example demonstrates creating an instance of this class.</span></span>  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSendCredential">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSendCredential (Uri challengeUri, System.Net.WebRequest request, System.Net.NetworkCredential credential, System.Net.IAuthenticationModule authModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSendCredential(class System.Uri challengeUri, class System.Net.WebRequest request, class System.Net.NetworkCredential credential, class System.Net.IAuthenticationModule authModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSendCredential (challengeUri As Uri, request As WebRequest, credential As NetworkCredential, authModule As IAuthenticationModule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldSendCredential(Uri ^ challengeUri, System::Net::WebRequest ^ request, System::Net::NetworkCredential ^ credential, System::Net::IAuthenticationModule ^ authModule);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSendCredential : Uri * System.Net.WebRequest * System.Net.NetworkCredential * System.Net.IAuthenticationModule -&gt; bool&#xA;override this.ShouldSendCredential : Uri * System.Net.WebRequest * System.Net.NetworkCredential * System.Net.IAuthenticationModule -&gt; bool" Usage="intranetZoneCredentialPolicy.ShouldSendCredential (challengeUri, request, credential, authModule)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challengeUri" Type="System.Uri" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="challengeUri"><span data-ttu-id="675f4-115">요청을 받을 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-115">The <see cref="T:System.Uri" /> that will receive the request.</span></span></param>
        <param name="request"><span data-ttu-id="675f4-116">요청할 리소스를 나타내는 <see cref="T:System.Net.WebRequest" />입니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-116">The <see cref="T:System.Net.WebRequest" /> that represents the resource being requested.</span></span></param>
        <param name="credential"><span data-ttu-id="675f4-117">이 메서드가 <see langword="true" />를 반환하는 경우 요청과 함께 보낼 <see cref="T:System.Net.NetworkCredential" />입니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-117">The <see cref="T:System.Net.NetworkCredential" /> that will be sent with the request if this method returns <see langword="true" />.</span></span></param>
        <param name="authModule"><span data-ttu-id="675f4-118">인증이 필요한 경우 인증을 수행할 <see cref="T:System.Net.IAuthenticationModule" />입니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-118">The <see cref="T:System.Net.IAuthenticationModule" /> that will conduct the authentication, if authentication is required.</span></span></param>
        <summary><span data-ttu-id="675f4-119">클라이언트의 자격 증명이 <see cref="T:System.Boolean" />를 사용하여 이루어진 리소스 요청과 함께 전송되는지 여부를 나타내는 <see cref="T:System.Net.WebRequest" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-119">Returns a <see cref="T:System.Boolean" /> that indicates whether the client's credentials are sent with a request for a resource that was made using <see cref="T:System.Net.WebRequest" />.</span></span></summary>
        <returns><span data-ttu-id="675f4-120">요청된 리소스가 요청을 하는 클라이언트와 같은 도메인에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-120"><see langword="true" /> if the requested resource is in the same domain as the client making the request; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="675f4-121">애플리케이션이이 메서드를 직접 호출 하지 마십시오 에 의해 호출 되는 <xref:System.Net.IAuthenticationModule> 는 서버를 사용 하 여 인증을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-121">Applications do not call this method directly; it is called by the <xref:System.Net.IAuthenticationModule> that is responsible for performing authentication with the server.</span></span> <span data-ttu-id="675f4-122">이 메서드가 반환 하는 경우 `false`, <xref:System.Net.IAuthenticationModule> 서버에 클라이언트를 인증 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-122">If this method returns `false`, the <xref:System.Net.IAuthenticationModule> will not authenticate the client to the server.</span></span>  
  
 <span data-ttu-id="675f4-123">자격 증명을 지정 하거나 사용 하는 요청에 대해서만이 메서드는 <xref:System.Net.WebProxy> 자격 증명을 지정 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-123">This method is called only for requests that specify credentials or use a <xref:System.Net.WebProxy> object that specifies credentials.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="675f4-124">다음 코드 예제에서 파생 하는 방법을 보여 줍니다 <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> 자격 증명을 기본 인증을 사용 하 여 보안 하이퍼텍스트 전송 프로토콜 (HTTPS)을 사용 하는 요청을 보낼 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-124">The following code example demonstrates deriving from <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> to allow credentials to be sent for requests that use Secure Hypertext Transfer Protocol (HTTPS) with basic authentication.</span></span> <span data-ttu-id="675f4-125">HTTPS 및 기본 인증을 사용 하 여, 사용자 암호를 네트워크를 통해 전송 되기 전에 암호화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="675f4-125">Using HTTPS and basic authentication, the user password is encrypted before being sent over the network.</span></span>  
  
 [!code-cpp[NclCredPolicy#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#4)]
 [!code-csharp[NclCredPolicy#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>