<Namespace Name="System.Diagnostics">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef6aeaebe2981ce7e1b191a089dab9ae242e488a" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30734997" />
  </Metadata>
  <Docs>
    <summary>
      <see cref="N:System.Diagnostics" /> 네임스페이스는 시스템 프로세스, 이벤트 로그 및 성능 카운터와 상호 작용할 수 있는 클래스를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <xref:System.Diagnostics.EventLog> 구성 요소 이벤트 로그에 쓰기, 이벤트 로그 항목 읽기 및 만들기 및 이벤트 로그와 네트워크의 이벤트 원본을 삭제 하는 기능을 제공 합니다. <xref:System.Diagnostics.EntryWrittenEventHandler> 비동기적으로 이벤트 로그와 상호 작용 하는 방법을 제공 합니다. 지원 클래스를 더 세부적된으로 제어 되는 경우에 대 한 액세스를 제공 합니다. 포함 하 여: 권한 제한을, (이벤트 로그 항목이 작성 하는 기본 데이터의 형식을 제어 하), 이벤트 로그 종류를 지정 하 고 이벤트 로그의 컬렉션을 반복 하는 기능 항목입니다. 이러한 작업에 대 한 자세한 내용은 참조는 <xref:System.Diagnostics.EventLogPermission>, <xref:System.Diagnostics.EventLogEntryType>, 및 <xref:System.Diagnostics.EventLogEntryCollection> 클래스입니다.  
  
-   <xref:System.Diagnostics.Process> 클래스에서 네트워크를 통해 시스템 프로세스를 모니터링 하 고 시작 하 고 로컬 시스템 프로세스를 중지 하는 기능을 제공 합니다. (컴퓨터, 프로세스 이름 또는 프로세스 id를 지정)에서 실행 중인 프로세스 또는 현재 프로세서에 액세스할 수 있는 프로세스에 대 한 정보 보기 목록이 검색 하는 것 외에도 프로세스 스레드 한 세부 정보를 얻을 수 있습니다 및 모듈을 통해는 <xref:System.Diagnostics.Process> 클래스 자체에서 상호 작용 하는 <xref:System.Diagnostics.ProcessThread> 및 <xref:System.Diagnostics.ProcessModule> 클래스입니다. <xref:System.Diagnostics.ProcessStartInfo> 클래스를 사용 하면 다양 한 입력, 출력 및 오류 스트림, 작업 디렉터리 및 동사 명령줄 인수 등의 새 프로세스를 시작 하는 요소를 지정할 수 있습니다. 이러한 세밀 하 게 제어할 프로세스의 동작을 제공합니다. 다른 관련된 클래스 창 스타일, 프로세스를 지정할 수 있습니다 및 스레드 우선 순위를 및 스레드 및 모듈의 컬렉션과 상호 작용 합니다.  
  
-   <xref:System.Diagnostics.PerformanceCounter> 클래스를 사용 하면 시스템 성능을 모니터링 하는 동안는 <xref:System.Diagnostics.PerformanceCounterCategory> 클래스는 새로운 사용자 지정 카운터 및 범주를 만드는 방법을 제공 합니다. 로컬 사용자 지정 카운터에 쓸 수 있으며 로컬 및 원격 카운터 (시스템 뿐만 아니라 사용자 지정)에서 읽을 수 없습니다. 사용 하 여 카운터를 샘플링할 수 있습니다는 <xref:System.Diagnostics.PerformanceCounter> 클래스를 사용 하 여 연속 된 성능 카운터 샘플의 결과 계산할는 <xref:System.Diagnostics.CounterSample> 클래스입니다. <xref:System.Diagnostics.CounterCreationData> 클래스 범주에 여러 개의 카운터를 만들고 해당 형식을 지정할 수 있습니다. 성능 카운터 구성 요소와 연결 된 다른 클래스는 카운터, 카운터 사용 권한 및 카운터 형식 컬렉션에 대 한 액세스를 제공 합니다.  
  
 <xref:System.Diagnostics> 코드의 실행을 추적 하 고 응용 프로그램을 디버깅할 수 있는 클래스도 제공 합니다. 자세한 내용은 <xref:System.Diagnostics.Trace> 및 <xref:System.Diagnostics.Debug> 클래스를 참조하세요.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>