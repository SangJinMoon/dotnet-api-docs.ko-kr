<Type Name="HttpEncoder" FullName="System.Web.Util.HttpEncoder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d4bac60268ba6ef9b0edfa417efcbd211763d938" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36575153" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HttpEncoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Util.HttpEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpEncoder" />
  <TypeSignature Language="F#" Value="type HttpEncoder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5fcba-101">인코딩 및 디코딩 논리를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5fcba-101">Provides encoding and decoding logic.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fcba-102">클래스에는 인코딩 및 디코딩와 같은 클래스의 메서드로 사용 되는 논리가 포함 되어 <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, 및 <xref:System.Net.HttpResponseHeader>합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-102">The class contains encoding and decoding logic that is used by methods in classes such as <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, and <xref:System.Net.HttpResponseHeader>.</span></span>  
  
 <span data-ttu-id="5fcba-103">상속할 수 있습니다는 <xref:System.Web.Util.HttpEncoder> 클래스 및 기본 인코딩 및 디코딩 ASP.NET의 동작을 사용자 지정 하는 동작을 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-103">You can inherit from the <xref:System.Web.Util.HttpEncoder> class and override its behavior to customize the default encoding and decoding behavior of ASP.NET.</span></span> <span data-ttu-id="5fcba-104">다음 설정의 <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> 의 속성은 <xref:System.Web.Configuration.HttpRuntimeSection> 사용자 지정 클래스를 구성 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-104">You then set the <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> property of the <xref:System.Web.Configuration.HttpRuntimeSection> class to configure your custom class.</span></span>  
  
 <span data-ttu-id="5fcba-105">인코딩 및 디코딩하는 대 한 사용자 지정 클래스에서 파생 <xref:System.Web.Util.HttpEncoder> 기본 제공 ASP.NET 인코딩 및 디코딩 동작을 재정의할 수 또는 변경에만 가지 설정을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-105">A custom class for encoding and decoding that derives from <xref:System.Web.Util.HttpEncoder> can override the built-in ASP.NET encoding and decoding behavior or change only selected aspects of it.</span></span>  
  
 <span data-ttu-id="5fcba-106">에 대 한 사용자 지정 인코딩 형식을 대체 하거나 다음 인코딩 동작을 보완 하기 위해 ASP.NET에서 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-106">You can configure the custom encoding type for in ASP.NET to replace or supplement the following encoding behavior:</span></span>  
  
-   <span data-ttu-id="5fcba-107">HTML 인코딩</span><span class="sxs-lookup"><span data-stu-id="5fcba-107">HTML encoding</span></span>  
  
-   <span data-ttu-id="5fcba-108">HTML 특성 인코딩입니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-108">HTML attribute encoding</span></span>  
  
-   <span data-ttu-id="5fcba-109">URL 인코딩</span><span class="sxs-lookup"><span data-stu-id="5fcba-109">URL encoding</span></span>  
  
-   <span data-ttu-id="5fcba-110">URL 경로 인코딩</span><span class="sxs-lookup"><span data-stu-id="5fcba-110">URL path encoding</span></span>  
  
-   <span data-ttu-id="5fcba-111">HTTP 헤더 이름 및 헤더 값 인코딩</span><span class="sxs-lookup"><span data-stu-id="5fcba-111">HTTP header name and header value encoding</span></span>  
  
 <span data-ttu-id="5fcba-112">기본적으로 ASP.NET 응용 프로그램 사용 하도록 구성 되는 <xref:System.Web.Security.AntiXss.AntiXssEncoder> 인코딩 모든 출력에 대해를 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-112">By default, ASP.NET applications are configured to use the <xref:System.Web.Security.AntiXss.AntiXssEncoder> type for all output encoding.</span></span>  
  
 <span data-ttu-id="5fcba-113">다음 예제에서는 응용 프로그램 수준 Web.config 파일 표시에서 방법을 <xref:System.Web.Security.AntiXss.AntiXssEncoder> 유형이 ASP.NET 응용 프로그램에 대해 설정 되어:</span><span class="sxs-lookup"><span data-stu-id="5fcba-113">The following example from an application-level Web.config file shows how the <xref:System.Web.Security.AntiXss.AntiXssEncoder> type is set for an ASP.NET application:</span></span>  
  
 `<httpRuntime requestValidationMode="4.5" encoderType="System.Web.Security.AntiXss.AntiXssEncoder, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>`  
  
 <span data-ttu-id="5fcba-114">예제에서는 구성 설정의 <xref:System.Web.Security.AntiXss.AntiXssEncoder> 있는 모든 클래스는 응용 프로그램에서 인코딩 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-114">The configuration setting in the example sets the <xref:System.Web.Security.AntiXss.AntiXssEncoder> class to perform all output encoding in the application.</span></span> <span data-ttu-id="5fcba-115">자세한 내용은 참조는 <xref:System.Web.Security.AntiXss.AntiXssEncoder> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-115">For more information, see the <xref:System.Web.Security.AntiXss.AntiXssEncoder> class overview.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="5fcba-116">
        <para>사용자 지정 인코더 클래스를 만들고 기본 클래스의 기본 메서드를 재정의 하는 경우 파생 된 인코더 재정의 된 메서드 중 하나에서 예외를 throw 할 수 있습니다. 그러나 다음과 같은 경우에 이러한 예외를 throw 시킬 수 있는 ASP.NET에서 예기치 않은 동작이:-ASP.NET ASP.NET 사용자 지정 인코더에서 throw 된 처리 되지 않은 예외로 인해 발생 하는 오류 페이지를 렌더링 하는 경우 해당 오류 o 인코딩하는 데 시도 하지 않습니다 사용자 지정 인코더를 호출 하 여 경로 제공 합니다. 오류 조건 재귀를 방지합니다.  -ASP.NET은 HTTP 헤더 메시지를 보내면 IIS, ASP.NET는 처리 되지 않은 예외에 대 한 제공 하지 않습니다. 따라서 (이 페이지를 표시할 수를 허용 하는 구성 설정) 하는 경우 표준 ASP.NET 오류 페이지가 렌더링 됩니다.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="5fcba-116">
          <para>When you create a custom encoder class and override the base methods of the base class, the derived encoder might throw an exception from any of the overridden methods. However, in the following cases throwing such an exception could lead to unexpected behavior in ASP.NET:  -   If ASP.NET is rendering an error page that is caused by an unhandled exception that was thrown from a custom encoder, ASP.NET does not attempt to encode its error output by calling into the custom encoder. This avoids recursive error conditions.  -   When ASP.NET is sending HTTP headers to IIS, ASP.NET has no provision for unhandled exceptions. Therefore, the standard ASP.NET error page will be rendered (if configuration settings allows this page to be displayed).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="T:System.Web.Configuration.HttpRuntimeSection" />
    <altmember cref="T:System.Web.Security.AntiXss.AntiXssEncoder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5fcba-117">
            <see cref="T:System.Web.Util.HttpEncoder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-117">Initializes a new instance of the <see cref="T:System.Web.Util.HttpEncoder" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Current" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Current { System::Web::Util::HttpEncoder ^ get(); void set(System::Web::Util::HttpEncoder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Web.Util.HttpEncoder with get, set" Usage="System.Web.Util.HttpEncoder.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5fcba-118">응용 프로그램에서 사용될 <see cref="T:System.Web.Util.HttpEncoder" /> 형식을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-118">Gets or set the <see cref="T:System.Web.Util.HttpEncoder" /> type that will be used in an application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5fcba-119">사용될 인코더/디코더 형식에 대한 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-119">A reference to the encoder/decoder type that will be used.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fcba-120">파생 된 경우 <xref:System.Web.Util.HttpEncoder> 형식이 구성 파일에 지정 되어는 <xref:System.Web.Util.HttpEncoder.Current%2A> 속성 사용자 지정 형식에 대 한 참조를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-120">If a derived <xref:System.Web.Util.HttpEncoder> type is specified in the configuration file, the <xref:System.Web.Util.HttpEncoder.Current%2A> property returns a reference to the custom type.</span></span> <span data-ttu-id="5fcba-121">그러나 없는 사용자 지정 인코더를 사용 하 고, 속성은 기본 ASP.NET에 대 한 참조 반환 <xref:System.Web.Util.HttpEncoder> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="5fcba-121">However, if no custom encoder is used, the property returns a reference to the default ASP.NET <xref:System.Web.Util.HttpEncoder> instance.</span></span>  
  
 <span data-ttu-id="5fcba-122"><xref:System.Web.Util.HttpEncoder.Current%2A> 속성은 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-122">The <xref:System.Web.Util.HttpEncoder.Current%2A> property is not thread-safe.</span></span> <span data-ttu-id="5fcba-123">응용 프로그램의 경우에이 속성을 설정 `Application_Start` 메서드를 때문에 `Application_Start` 는 단일 스레드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-123">Set this property only in the application's `Application_Start` method, because `Application_Start` runs on a single thread.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5fcba-124">이 속성에 할당되는 인코더 인스턴스는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-124">The encoder instance that is being assigned to this property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Default" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Default { System::Web::Util::HttpEncoder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Web.Util.HttpEncoder" Usage="System.Web.Util.HttpEncoder.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5fcba-125">ASP.NET의 기본 인코더에 대한 참조를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-125">Gets a reference to the default encoder for ASP.NET.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5fcba-126">기본 인코더에 대한 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-126">A reference to the default encoder.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fcba-127">일반적인 인코딩 문제 기본 ASP.NET은 <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> 동작 공간 "+" 문자가 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-127">A common encoding issue is that the default ASP.NET <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> behavior converts spaces into the "+" character.</span></span> <span data-ttu-id="5fcba-128">지금까지 "+" 문자를 보다 읽기 쉬운 방식으로 URL에서 공백 문자 인코딩을 위한 인터넷 규약 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-128">Historically, the "+" character has been an Internet convention for encoding space characters in a URL into a more human-readable manner.</span></span> <span data-ttu-id="5fcba-129">그러나 표준에 따르면 공백 문자 할 대신 "%20"로 인코딩할 수는 "+" 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-129">However, according to standards, the space character is supposed to be encoded as "%20" and instead of as the "+" character.</span></span> <span data-ttu-id="5fcba-130">ASP.NET를 사용 하면 더 많은 표준 규격 인코딩 알고리즘 구현 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-130">ASP.NET lets you implement a more standards compliant encoding algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderNameValueEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HeaderNameValueEncode (string headerName, string headerValue, out string encodedHeaderName, out string encodedHeaderValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HeaderNameValueEncode(string headerName, string headerValue, [out] string&amp; encodedHeaderName, [out] string&amp; encodedHeaderValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HeaderNameValueEncode (headerName As String, headerValue As String, ByRef encodedHeaderName As String, ByRef encodedHeaderValue As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HeaderNameValueEncode(System::String ^ headerName, System::String ^ headerValue, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderName, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderValue);" />
      <MemberSignature Language="F#" Value="abstract member HeaderNameValueEncode : string * string *  *  -&gt; unit&#xA;override this.HeaderNameValueEncode : string * string *  *  -&gt; unit" Usage="httpEncoder.HeaderNameValueEncode (headerName, headerValue, encodedHeaderName, encodedHeaderValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="headerValue" Type="System.String" />
        <Parameter Name="encodedHeaderName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="encodedHeaderValue" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="headerName">
          <span data-ttu-id="5fcba-131">인코딩할 HTTP 헤더 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-131">The HTTP header name to encode.</span>
          </span>
        </param>
        <param name="headerValue">
          <span data-ttu-id="5fcba-132">인코딩할 HTTP 헤더 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-132">The HTTP header value to encode.</span>
          </span>
        </param>
        <param name="encodedHeaderName">
          <span data-ttu-id="5fcba-133">이 메서드가 반환될 때 HTTP 헤더에 사용할 인코딩된 이름을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-133">When this method returns, contains the encoded name to use for an HTTP header.</span>
          </span>
          <span data-ttu-id="5fcba-134">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-134">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="encodedHeaderValue">
          <span data-ttu-id="5fcba-135">이 메서드가 반환될 때 HTTP 헤더에 사용할 인코딩된 값을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-135">When this method returns, contains the encoded value to use for an HTTP header.</span>
          </span>
          <span data-ttu-id="5fcba-136">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-136">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5fcba-137">HTTP 헤더로 사용할 수 있는 문자열로 헤더 이름 및 값을 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-137">Encodes a header name and value into a string that can be used as an HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fcba-138"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> 메서드는 입력된 문자열에서는 `headerName` 및 `headerValue` 매개 변수를으로 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-138">The <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method takes input strings from the `headerName` and `headerValue` parameters and encodes them.</span></span> <span data-ttu-id="5fcba-139">인코딩된 값은 출력 매개 변수로 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-139">The encoded values are returned as out parameters.</span></span>  
  
 <span data-ttu-id="5fcba-140"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> 메서드는 다음과 같은 논리 헤더 이름 및 값을 인코딩하는 데 사용 하 여:</span><span class="sxs-lookup"><span data-stu-id="5fcba-140">The <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method uses the following logic to encode header names and values:</span></span>  
  
-   <span data-ttu-id="5fcba-141">유니코드 값이 9, ASCII 문자를 제외 하 고 ASCII 문자 32 보다 작은 모든 문자는 URL로 인코딩된 형식으로 `%NN` 여기서는 `N` 문자 16 진수 값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-141">All characters whose Unicode value is less than ASCII character 32, except ASCII character 9, are URL-encoded into a format of `%NN` where the `N` characters represent hexadecimal values.</span></span>  
  
-   <span data-ttu-id="5fcba-142">ASCII 문자 9 (가로 탭 문자) URL로 인코딩되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-142">ASCII character 9 (the horizontal tab character) is not URL-encoded.</span></span>  
  
-   <span data-ttu-id="5fcba-143">ASCII 문자 127 바이트로 인코딩됩니다 `%7F`합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-143">ASCII character 127 is encoded as `%7F`.</span></span>  
  
-   <span data-ttu-id="5fcba-144">다른 모든 문자는 인코딩되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-144">All other characters are not encoded.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="5fcba-145">이 메서드는 유니코드 값에 사용할 수 있지만 ASCII 범위에서 값에 대 한 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-145">Although this method can be used for Unicode values, it is typically used for values in the ASCII range.</span></span>  
  
 <span data-ttu-id="5fcba-146">기본 구현에서 <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> 의 값을 반환 하는 메서드 `headerValue` 에 `encodedHeaderValue` 경우 `headerValue` 은 `null` 은 빈 문자열 또는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-146">The default implementation of the <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method returns the value of `headerValue` in `encodedHeaderValue` if `headerValue` is `null` or is an empty string.</span></span> <span data-ttu-id="5fcba-147">기본 구현은의 값을 반환 하는 마찬가지로, `headerName` 에 `encodedHeaderName` 경우 `headerName` 은 `null` 이거나 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-147">Similarly, the default implementation returns the value of `headerName` in `encodedHeaderName` if `headerName` is `null` or is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlAttributeEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlAttributeEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlAttributeEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlAttributeEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlAttributeEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5fcba-148">인코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-148">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="5fcba-149">인코딩된 값을 쓸 텍스트 기록기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-149">The text writer to write the encoded value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5fcba-150">들어오는 값을 작은 따옴표나 큰따옴표로 구분된 HTML 특성에 삽입할 수 있는 문자열로 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-150">Encodes an incoming value into a string that can be inserted into an HTML attribute that is delimited by using single or double quotation marks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fcba-151"><xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> 메서드는 표준 HTML 엔터티를 사용 하 여 문자를 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-151">The <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> method encodes characters by using the standard HTML entities.</span></span> <span data-ttu-id="5fcba-152">예를 들어는 `<` (왼쪽된 꺾쇠 괄호)으로 인코딩된 `&lt;` 및 `\` (백슬래시)으로 인코딩된 `&#92;`합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-152">For example, the `<` (left angle bracket) is encoded as `&lt;` and the `\` (backslash) is encoded as `&#92;`.</span></span>  
  
 <span data-ttu-id="5fcba-153">안전 하 게 <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> 작은따옴표 및 큰따옴표가 특성 내에서.</span><span class="sxs-lookup"><span data-stu-id="5fcba-153">It is safe to use <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> within single-quoted and double-quoted attributes.</span></span> <span data-ttu-id="5fcba-154">값에 포함 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-154">The values must be quoted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5fcba-155">
            <paramref name="output" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-155">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlDecode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5fcba-156">디코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-156">The string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="5fcba-157">디코딩된 값을 쓸 텍스트 기록기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-157">The text writer to write the decoded value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5fcba-158">HTML로 인코딩된 문자열에서 값을 디코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-158">Decodes a value from an HTML-encoded string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fcba-159">다음 표에서 ASP.NET 디코딩 논리가 디코딩할 수 있는 문자 시퀀스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-159">The following table lists the character sequences that the ASP.NET decoding logic can decode.</span></span>  
  
|<span data-ttu-id="5fcba-160">문자 시퀀스</span><span class="sxs-lookup"><span data-stu-id="5fcba-160">Character sequence</span></span>|<span data-ttu-id="5fcba-161">규칙</span><span class="sxs-lookup"><span data-stu-id="5fcba-161">Rule</span></span>|  
|------------------------|----------|  
|<span data-ttu-id="5fcba-162">`&#NNN;` (ASCII 문자에 대 한 10 진수 코드)입니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-162">`&#NNN;` (decimal codes for ASCII characters).</span></span>|<span data-ttu-id="5fcba-163">지정 된 ASCII 문자로 디코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-163">Decoded as the specified ASCII character.</span></span> <span data-ttu-id="5fcba-164">문자 시퀀스는 # 문자 뒤 첫째 자리에서 시작 하 고 세미콜론 마칩니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-164">The character sequence starts at the first digit after the # character and finishes at the semicolon.</span></span>|  
|<span data-ttu-id="5fcba-165">`&#xZZ;` (ASCII 문자에 대 한 16 진수 코드)입니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-165">`&#xZZ;` (hexadecimal codes for ASCII characters).</span></span>|<span data-ttu-id="5fcba-166">지정 된 ASCII 문자로 디코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-166">Decoded as the specified ASCII character.</span></span> <span data-ttu-id="5fcba-167">인코딩된 양식 대신 10 진수 값을 16 진수 문자를 사용 하 여 문자를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-167">The encoded form specifies the character by using hexadecimal characters instead of a decimal value.</span></span> <span data-ttu-id="5fcba-168">문자 시퀀스는 # 문자 뒤 첫째 자리에서 시작 하 고 세미콜론 마칩니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-168">The character sequence starts at the first digit after the # character and finishes at the semicolon.</span></span>|  
|<span data-ttu-id="5fcba-169">명명 된 HTML 엔터티입니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-169">Named HTML entities.</span></span>|<span data-ttu-id="5fcba-170">해당 ASCII 문자로 디코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-170">Decoded as the equivalent ASCII character.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5fcba-171">
            <paramref name="output" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-171">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5fcba-172">인코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-172">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="5fcba-173">인코딩된 값을 쓸 텍스트 기록기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-173">The text writer to write the encoded value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5fcba-174">문자열을 HTML로 인코딩된 문자열로 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-174">Encodes a string into an HTML-encoded string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fcba-175">다음 표에서 ASP.NET 인코딩 논리가 디코딩할 수 있는 문자 시퀀스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-175">The following table lists the character sequences that the ASP.NET encoding logic can decode.</span></span>  
  
|<span data-ttu-id="5fcba-176">문자</span><span class="sxs-lookup"><span data-stu-id="5fcba-176">Character</span></span>|<span data-ttu-id="5fcba-177">같이 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-177">Encoded as</span></span>|  
|---------------|----------------|  
|<span data-ttu-id="5fcba-178">`<` (왼쪽된 꺾쇠 괄호)</span><span class="sxs-lookup"><span data-stu-id="5fcba-178">`<` (left angle bracket)</span></span>|`&lt;`|  
|<span data-ttu-id="5fcba-179">`>` (오른쪽 꺾쇠 괄호)</span><span class="sxs-lookup"><span data-stu-id="5fcba-179">`>` (right angle bracket)</span></span>|`&gt;`|  
|<span data-ttu-id="5fcba-180">`"` (큰따옴표)</span><span class="sxs-lookup"><span data-stu-id="5fcba-180">`"` (double quotation marks)</span></span>|`&quot;`|  
|<span data-ttu-id="5fcba-181">`&` (앰퍼샌드)</span><span class="sxs-lookup"><span data-stu-id="5fcba-181">`&` (ampersand)</span></span>|`&amp;`|  
|<span data-ttu-id="5fcba-182">`\` (백슬래시)</span><span class="sxs-lookup"><span data-stu-id="5fcba-182">`\` (backslash)</span></span>|`&#92;`|  
|<span data-ttu-id="5fcba-183">160에서 255 사이의 ASCII 문자</span><span class="sxs-lookup"><span data-stu-id="5fcba-183">ASCII characters from 160 to 255</span></span>|<span data-ttu-id="5fcba-184">`&#NNN;`여기서 `NNN` 는 3 자리 10 진수 문자 코드</span><span class="sxs-lookup"><span data-stu-id="5fcba-184">`&#NNN;`, where `NNN` is the three-digit decimal character code</span></span>|  
  
 <span data-ttu-id="5fcba-185">재정의 하는 경우는 <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> 메서드를 작은따옴표 또는 큰따옴표로 묶은 HTML 특성 내에서 안전 하 게 보호 되는 출력을 생성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-185">If you override the <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> method, you must produce output that is also safe within double-quoted or single-quoted HTML attributes.</span></span> <span data-ttu-id="5fcba-186">여기서 태그와 코드 결합할 수 있습니다와 같은 Razor 엔진에 의해 구문 분석에이 노드 \<attr 태그 = "@value" >.</span><span class="sxs-lookup"><span data-stu-id="5fcba-186">This accommodates parsing by the Razor engine, where markup and code can be combined, such as \<tag attr="@value">.</span></span> <span data-ttu-id="5fcba-187">또한는 @ 연산자는 컨텍스트 인식 하지 Razor 엔진에서 처리 될 때 따라서 호출 <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> 대신 <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-187">In addition, the @ operator is not context-aware when processed by the Razor engine, therefore it calls <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> rather than <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5fcba-188">
            <paramref name="output" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-188">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="JavaScriptStringEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string JavaScriptStringEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string JavaScriptStringEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function JavaScriptStringEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ JavaScriptStringEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member JavaScriptStringEncode : string -&gt; string&#xA;override this.JavaScriptStringEncode : string -&gt; string" Usage="httpEncoder.JavaScriptStringEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5fcba-189">인코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-189">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5fcba-190">문자열을 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-190">Encodes a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5fcba-191">인코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-191">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fcba-192">URL 인코딩은 되도록 모든 브라우저에서 URL 문자열의에서 텍스트를 올바르게 전달할 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-192">URL encoding makes sure that all browsers correctly transmit text in URL strings.</span></span> <span data-ttu-id="5fcba-193">물음표 (?), 앰퍼샌드 (&), 슬래시 (/) 및 공간 등의 문자 잘리거나 일부 브라우저 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-193">Characters such as a question mark (?), ampersand (&), slash (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="5fcba-194">따라서 이러한 문자를 인코딩해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-194">Therefore, these characters must be encoded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual byte[] UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance unsigned int8[] UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="abstract member UrlEncode : byte[] * int * int -&gt; byte[]&#xA;override this.UrlEncode : byte[] * int * int -&gt; byte[]" Usage="httpEncoder.UrlEncode (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="5fcba-195">인코딩할 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-195">An array of bytes to encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="5fcba-196">인코딩을 시작할 <c>바이트</c> 배열의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-196">The position in the <c>bytes</c> array at which to begin encoding.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5fcba-197">인코딩할 <c>바이트</c> 배열의 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-197">The number of items in the <c>bytes</c> array to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5fcba-198">URL에 사용할 수 없는 문자 배열을 해당하는 16진수 문자 엔터티로 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-198">Encodes an array of characters that are not allowed in a URL into a hexadecimal character-entity equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5fcba-199">인코딩된 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-199">An array of encoded characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fcba-200"><xref:System.Web.Util.HttpEncoder.UrlEncode%2A> 메서드에서 여러 URL 인코딩 메서드에 의해 호출 됩니다는 <xref:System.Web.HttpUtility> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-200">The <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> method is called by several URL encoding methods in the <xref:System.Web.HttpUtility> class.</span></span>  
  
 <span data-ttu-id="5fcba-201"><xref:System.Web.Util.HttpEncoder.UrlEncode%2A> 메서드 URL로 인코딩하고 모든 않는 문자에는 ASCII 문자 집합 하는 URL 안전한 것으로 간주 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-201">The <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> method URL-encodes any character that is not in the set of ASCII characters that is considered to be URL-safe.</span></span> <span data-ttu-id="5fcba-202">공백 ASCII로 인코딩됩니다 "`+"` 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-202">Spaces are encoded as the ASCII "`+"` character.</span></span> <span data-ttu-id="5fcba-203">URL 지원 ASCII 문자를 ASCI 문자로 포함 (A ~ Z 및-z), 일부 문장 부호와 숫자 (0 ~ 9,)입니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-203">URL-safe ASCII characters include the ASCI characters (A to Z and a to z), numerals (0 to 9), and some punctuation marks.</span></span> <span data-ttu-id="5fcba-204">다음 표에서 URL 로부터 안전한 ASCII 문자로 간주 되는 문장 부호를 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-204">The following table lists the punctuation marks that are considered URL-safe ASCII characters.</span></span>  
  
|<span data-ttu-id="5fcba-205">문자</span><span class="sxs-lookup"><span data-stu-id="5fcba-205">Character</span></span>|<span data-ttu-id="5fcba-206">설명</span><span class="sxs-lookup"><span data-stu-id="5fcba-206">Description</span></span>|  
|---------------|-----------------|  
|-|<span data-ttu-id="5fcba-207">하이픈</span><span class="sxs-lookup"><span data-stu-id="5fcba-207">Hyphen</span></span>|  
|<span data-ttu-id="5fcba-208">_</span><span class="sxs-lookup"><span data-stu-id="5fcba-208">_</span></span>|<span data-ttu-id="5fcba-209">밑줄</span><span class="sxs-lookup"><span data-stu-id="5fcba-209">Underscore</span></span>|  
|<span data-ttu-id="5fcba-210">.</span><span class="sxs-lookup"><span data-stu-id="5fcba-210">.</span></span>|<span data-ttu-id="5fcba-211">마침표 (.)</span><span class="sxs-lookup"><span data-stu-id="5fcba-211">Period (dot)</span></span>|  
|<span data-ttu-id="5fcba-212">!</span><span class="sxs-lookup"><span data-stu-id="5fcba-212">!</span></span>|<span data-ttu-id="5fcba-213">느낌표</span><span class="sxs-lookup"><span data-stu-id="5fcba-213">Exclamation mark</span></span>|  
|*|<span data-ttu-id="5fcba-214">별표 (\*)</span><span class="sxs-lookup"><span data-stu-id="5fcba-214">Asterisk (star)</span></span>|  
|<span data-ttu-id="5fcba-215">(</span><span class="sxs-lookup"><span data-stu-id="5fcba-215">(</span></span>|<span data-ttu-id="5fcba-216">여는 괄호</span><span class="sxs-lookup"><span data-stu-id="5fcba-216">Opening parenthesis</span></span>|  
|<span data-ttu-id="5fcba-217">)</span><span class="sxs-lookup"><span data-stu-id="5fcba-217">)</span></span>|<span data-ttu-id="5fcba-218">닫는 괄호</span><span class="sxs-lookup"><span data-stu-id="5fcba-218">Closing parenthesis</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5fcba-219">
            <paramref name="offset" />이 0보다 작거나 <paramref name="bytes" /> 배열의 길이보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-219">
              <paramref name="offset" /> is less than zero or greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
          <span data-ttu-id="5fcba-220">-또는- <paramref name="count" />가 0보다 작거나 <paramref name="count" />와 <paramref name="offset" />의 합이 <paramref name="bytes" /> 배열의 길이보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-220">-or-  <paramref name="count" /> is less than zero or <paramref name="count" /> plus <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5fcba-221">
            <paramref name="bytes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-221">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string UrlPathEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string UrlPathEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlPathEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ UrlPathEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member UrlPathEncode : string -&gt; string&#xA;override this.UrlPathEncode : string -&gt; string" Usage="httpEncoder.UrlPathEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5fcba-222">인코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-222">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5fcba-223">URL의 하위 섹션을 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-223">Encodes a subsection of a URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5fcba-224">URL 인코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fcba-224">A URL-encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fcba-225"><xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> 메서드는 <xref:System.Web.HttpUtility.UrlPathEncode%2A> 메서드에 의해 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-225">The <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> method is called by the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method.</span></span> <span data-ttu-id="5fcba-226"><xref:System.Web.HttpUtility.UrlPathEncode%2A> 메서드는 다음 단계를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-226">The <xref:System.Web.HttpUtility.UrlPathEncode%2A> method performs the following steps:</span></span>  
  
-   <span data-ttu-id="5fcba-227">인코딩 논리 적용 하 고는 <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> 메서드를 URL의 (쿼리 문자열 제외) 경로 부분에만 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-227">Applies the encoding logic of the <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> method to only the path part of the URL (which excludes the query string).</span></span> <span data-ttu-id="5fcba-228">메서드는 URL을 u t F-8 문자열로 인코딩된는 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-228">The method assumes that the URL is encoded as a UTF-8 string.</span></span>  
  
-   <span data-ttu-id="5fcba-229">인코딩된 문자열 결과에서 처음 128 개 ASCII 문자 집합만 사용 되도록 비 공간을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-229">Encodes non-spaces so that only a subset of the first 128 ASCII characters is used in the resulting encoded string.</span></span> <span data-ttu-id="5fcba-230">모든 문자와 128을, 또는 32 크고, 유니코드 값은 URL로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-230">Any characters at Unicode value 128 and greater, or 32 and less, are URL-encoded.</span></span>  
  
-   <span data-ttu-id="5fcba-231">공간을 (%20)으로 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="5fcba-231">Encodes spaces as %20.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>