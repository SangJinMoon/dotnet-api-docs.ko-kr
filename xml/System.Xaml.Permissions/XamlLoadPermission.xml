<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlLoadPermission.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57a76b027fa00ee1420eb0706f04f35374598cc39.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a76b027fa00ee1420eb0706f04f35374598cc39</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.Permissions.XamlLoadPermission">
          <source>Declares permissions for loading types from assemblies that are used by a XAML reader or writer.</source>
          <target state="translated">XAML 판독기 또는 작성기에서 사용하는 어셈블리에서 형식을 로드하기 위한 사용 권한을 선언합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Permissions.XamlLoadPermission">
          <source><ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission&gt;</ph> is relevant for scenarios such as whether internal types are permitted to load under partial trust.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission&gt;</ph> 내부 형식은 부분 신뢰 환경에서 로드할 수 있는지 여부 등의 시나리오에 적합 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Xaml.Permissions.XamlLoadPermission">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
          <source>An enumerable set of specific <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> values.</source>
          <target state="translated">열거 가능한 특정 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 값의 집합입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> class, using an enumerable set of specific <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> values.</source>
          <target state="translated">열거 가능한 특정 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> 값 집합을 사용하여 <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
          <source>A call to this constructor initializes the <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A&gt;</ph> collection with each <ph id="ph2">`allowedAccess`</ph> entry as an item, and sets the return for <ph id="ph3">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A&gt;</ph> to <ph id="ph4">`false`</ph> in the created instance.</source>
          <target state="translated">이 생성자를 호출을 초기화는 <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A&gt;</ph> 컬렉션을 각 <ph id="ph2">`allowedAccess`</ph> 항목을 항목으로 대 한 반환을 설정 하 고 <ph id="ph3">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A&gt;</ph> 를 <ph id="ph4">`false`</ph> 만든 인스턴스에 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
          <source><ph id="ph1">&lt;paramref name="allowedAccess" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="allowedAccess" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
          <source><ph id="ph1">&lt;paramref name="allowedAccess" /&gt;</ph> contained invalid information, such as a null item.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="allowedAccess" /&gt;</ph>에 null 항목과 같은 잘못된 정보가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> class, using existing permissions.</source>
          <target state="translated">기존 사용 권한을 사용하여 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> sets the return for <ph id="ph2">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A&gt;</ph> to <ph id="ph3">`true`</ph> in the created instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> 설정에 대 한 반환 <ph id="ph2">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A&gt;</ph> 를 <ph id="ph3">`true`</ph> 에서 생성된 된 인스턴스.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>Any call to this constructor sets the <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A&gt;</ph> collection to <ph id="ph2">`null`</ph> because it is not relevant if permissions are being reported rather than <ph id="ph3">&lt;xref:System.Xaml.Permissions.XamlAccessLevel&gt;</ph>.</source>
          <target state="translated">이 생성자를 호출 설정는 <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A&gt;</ph> 컬렉션 <ph id="ph2">`null`</ph> 없기 때문에 관련 된 사용 권한을 보고 되지 않으면 대신 <ph id="ph3">&lt;xref:System.Xaml.Permissions.XamlAccessLevel&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
          <source>The defining <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> value.</source>
          <target state="translated">정의하는 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> class, using a single <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> value.</source>
          <target state="translated">단일 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> 값을 사용하여 <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
          <source>A call to this constructor initializes the <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A&gt;</ph> collection with <ph id="ph2">`allowedAccess`</ph> as the only item, and sets the return for <ph id="ph3">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A&gt;</ph> to <ph id="ph4">`false`</ph> in the created instance.</source>
          <target state="translated">이 생성자에 대 한 호출에서 초기화는 <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A&gt;</ph> 사용 하 여 컬렉션 <ph id="ph2">`allowedAccess`</ph> 유일한 항목으로 대 한 반환을 설정 하 고 <ph id="ph3">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A&gt;</ph> 를 <ph id="ph4">`false`</ph> 만든 인스턴스에 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
          <source><ph id="ph1">&lt;paramref name="allowedAccess" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="allowedAccess" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
          <source>Gets the list of all <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> values that this <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> represents.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph>이 나타내는 모든 <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> 값의 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
          <source>A read-only list of <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> values, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 값의 읽기 전용 목록이나 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
          <source>If the current <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission&gt;</ph> is initialized such that <ph id="ph2">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A&gt;</ph> is <ph id="ph3">`true`</ph>, <ph id="ph4">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A&gt;</ph> may be <ph id="ph5">`null`</ph>.</source>
          <target state="translated">하는 경우 현재 <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission&gt;</ph> 초기화 되도록 <ph id="ph2">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A&gt;</ph> 은 <ph id="ph3">`true`</ph>, <ph id="ph4">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A&gt;</ph> 수 있습니다 <ph id="ph5">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
          <source>Creates and returns an identical copy of the current <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>의 동일한 복사본을 만들어 반환합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
          <source>A copy of the current <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>의 복사본입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
          <source>Per the interface contract of <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> this value is <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> in the signature but can be cast to <ph id="ph3">&lt;xref:System.Xaml.Permissions.XamlLoadPermission&gt;</ph>.</source>
          <target state="translated">인터페이스 계약 당 <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> 이 값은 <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> 시그니처의으로 캐스팅 될 수 있지만 <ph id="ph3">&lt;xref:System.Xaml.Permissions.XamlLoadPermission&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
          <source>The XML encoding to use to reconstruct the security object.</source>
          <target state="translated">보안 개체를 다시 생성하는 데 사용할 XML 인코딩입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
          <source>Reconstructs a security object with a specified state from an XML encoding.</source>
          <target state="translated">XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
          <source><ph id="ph1">&lt;paramref name="elem" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="elem" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
          <source><ph id="ph1">&lt;paramref name="elem" /&gt;</ph> does not contain the XML encoding for a <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="elem" /&gt;</ph>에 <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>에 대한 XML 인코딩이 포함되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
          <source>The version attribute within <ph id="ph1">&lt;paramref name="elem" /&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="elem" /&gt;</ph> 내의 버전 특성은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
          <source>The specific <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> to check for.</source>
          <target state="translated">확인할 특정 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> includes a specified <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> in its <ph id="ph3">&lt;see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /&gt;</ph> list.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 목록에 지정된 <ph id="ph3">&lt;see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /&gt;</ph>이 포함되는지 여부를 반환합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="requestedAccess" /&gt;</ph> exists as an item in the <ph id="ph3">&lt;see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /&gt;</ph> list of the current <ph id="ph4">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="requestedAccess" /&gt;</ph>가 현재 <ph id="ph3">&lt;see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /&gt;</ph>의 <ph id="ph4">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> 목록에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
          <source>Otherwise, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
          <source><ph id="ph1">&lt;paramref name="requestedAccess" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestedAccess" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> to intersect with the current <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>과 공통되는 <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
          <source>Creates and returns a <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> that is the intersection of the current <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> and the specified permission.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>과 지정된 사용 권한의 교집합에 해당하는 <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>을 만들어 반환합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
          <source>A new permission that represents the intersection of the current <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> and the specified <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>과 지정된 <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>의 교집합을 나타내는 새 사용 권한입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
          <source>This new permission is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the intersection is empty.</source>
          <target state="translated">교집합이 비어 있으면 새 사용 권한은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
          <source>For union, intersect, and subset logic, <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A&gt;</ph> is checked first, and might return a result based solely on that check.</source>
          <target state="translated">공용 구조체, 교차, 및 하위 논리 <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A&gt;</ph> 먼저, 확인 하 고 확인에만 의존 하는 결과 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
          <source>Next, <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A&gt;</ph> is checked.</source>
          <target state="translated">그런 다음, <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A&gt;</ph> 을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is not a <ph id="ph3">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이 아니거나 <ph id="ph3">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>이 아닙니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
          <source>A permission that is to be tested for the subset relationship.</source>
          <target state="translated">하위 집합 관계에 대해 테스트할 사용 권한입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> is a subset of the specified permission.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>이 지정된 사용 권한의 하위 집합인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> is a subset of the specified permission; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>이 지정된 권한의 하위 집합이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
          <source>For union, intersect, and subset logic, <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A&gt;</ph> is checked first, and might return a result based solely on that check.</source>
          <target state="translated">공용 구조체, 교차, 및 하위 논리 <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A&gt;</ph> 먼저, 확인 하 고 확인에만 의존 하는 결과 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
          <source>Next, <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A&gt;</ph> is checked.</source>
          <target state="translated">그런 다음, <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A&gt;</ph> 을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If <ph id="ph1">`target`</ph> is <ph id="ph2">`null`</ph> and the current <ph id="ph3">&lt;xref:System.Xaml.Permissions.XamlLoadPermission&gt;</ph> is both <ph id="ph4">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A&gt;</ph> <ph id="ph5">`false`</ph> and has an empty <ph id="ph6">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A&gt;</ph> list, this method returns <ph id="ph7">`true`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`target`</ph> 은 <ph id="ph2">`null`</ph> 및 현재 <ph id="ph3">&lt;xref:System.Xaml.Permissions.XamlLoadPermission&gt;</ph> 조건을 모두 만족은 <ph id="ph4">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A&gt;</ph> <ph id="ph5">`false`</ph> 이며 빈 <ph id="ph6">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A&gt;</ph> 목록에서이 메서드는 반환 <ph id="ph7">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is not a <ph id="ph3">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이 아니거나 <ph id="ph3">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>이 아닙니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> denotes unrestricted permissions.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>이 무제한의 사용 권한을 나타내는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> denotes unrestricted permissions.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>이 무제한의 사용 권한을 나타내면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> has specific access level restrictions in <ph id="ph3">&lt;see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /&gt;</ph>, or has no permissions.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>이 <ph id="ph3">&lt;see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /&gt;</ph>에서 특정 액세스 수준 제한이 있거나 권한이 없으면 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
          <source>Creates an XML encoding of this <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> and its current state.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
          <source>An XML encoding of this <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>, including any state information.</source>
          <target state="translated">상태 정보를 포함한 이 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>의 XML 인코딩입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> to combine with the current <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>과 결합할 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
          <source>Creates a permission that is the union of the current <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> and the specified permission.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>과 지정된 사용 권한의 합집합에 해당하는 사용 권한을 만듭니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> that represents the union of the current <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph> and the specified <ph id="ph3">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>과 지정된 <ph id="ph2">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>의 합집합 부분을 나타내는 새 <ph id="ph3">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
          <source>For union, intersect, and subset logic, <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A&gt;</ph> is checked first, and might return a result based solely on that check.</source>
          <target state="translated">공용 구조체, 교차, 및 하위 논리 <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A&gt;</ph> 먼저, 확인 하 고 확인에만 의존 하는 결과 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
          <source>Next, <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A&gt;</ph> is checked.</source>
          <target state="translated">그런 다음, <ph id="ph1">&lt;xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A&gt;</ph> 을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
          <source>If <ph id="ph1">`other`</ph> is <ph id="ph2">`null`</ph>, the current <ph id="ph3">&lt;xref:System.Xaml.Permissions.XamlLoadPermission&gt;</ph> is returned.</source>
          <target state="translated">경우 <ph id="ph1">`other`</ph> 은 <ph id="ph2">`null`</ph>, 현재 <ph id="ph3">&lt;xref:System.Xaml.Permissions.XamlLoadPermission&gt;</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is not a <ph id="ph3">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이 아니거나 <ph id="ph3">&lt;see cref="T:System.Xaml.Permissions.XamlLoadPermission" /&gt;</ph>이 아닙니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>