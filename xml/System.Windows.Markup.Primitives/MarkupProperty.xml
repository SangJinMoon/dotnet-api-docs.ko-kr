<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MarkupProperty.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52cc84508111a2d2946b82d9bf0f0cdc390e0599e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2cc84508111a2d2946b82d9bf0f0cdc390e0599e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.Primitives.MarkupProperty">
          <source>Abstract class that provides a property description to be used while writing to markup which encapsulates access to properties and their values.</source>
          <target state="translated">속성과 속성 값에 대한 액세스를 캡슐화하는 태그에 쓰는 동안 사용할 속성 설명을 제공하는 추상 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.Primitives.MarkupProperty">
          <source>A property is either represented as a string or a list of items.</source>
          <target state="translated">속성은 string 또는 항목의 목록으로 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.Primitives.MarkupProperty">
          <source>If the property can be represented as a string, <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt;</ph> is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">속성을 문자열로 나타낼 수 있는 <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.Primitives.MarkupProperty">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the property is a list of items.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, 속성은 항목의 목록입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes">
          <source>When overridden in a derived class, gets the attributes associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 이 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph>와 연결된 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes">
          <source>The collection of attributes.</source>
          <target state="translated">특성 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty">
          <source>When overridden in a derived class, gets the <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> identifier for the markup property if the property is implemented as a dependency property</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 마크업 속성이 종속성 속성으로 구현되면 해당 속성에 대한 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> 식별자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty">
          <source>The dependency property identifier.</source>
          <target state="translated">종속성 속성 식별자입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty">
          <source>The default behavior returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본 동작을 반환 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached">
          <source>When overridden in a derived class, determines whether this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph> is an attached <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 이 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph>가 연결된 <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is an attached <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성이 연결된 <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached">
          <source>The default behavior is to return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본 동작은 <ph id="ph1">`false`</ph>를 반환하는 것입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsAttached%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> is not <ph id="ph4">`null`</ph> and <ph id="ph5">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> can be <ph id="ph6">`null`</ph>, but is not required to be.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsAttached%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> 않습니다 <ph id="ph4">`null`</ph> 및 <ph id="ph5">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> 수 <ph id="ph6">`null`</ph>, 하지만 적일 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
          <source>When overridden in a derived class, determines whether this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph> is a composite property.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 이 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph>가 복합 속성인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> is this property is a composite property; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 속성이 복합 속성이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
          <source>The default behavior is to return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본 동작은 <ph id="ph1">`false`</ph>를 반환하는 것입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the property can be represented as a string and <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.Value%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.StringValue%2A&gt;</ph> are valid to use.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>, 속성을 문자열로 나타낼 수 및 <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.Value%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.StringValue%2A&gt;</ph> 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the property is one or more items and <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.Items%2A&gt;</ph> is valid to use.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, 속성은 하나 이상의 항목 및 <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.Items%2A&gt;</ph> 를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
          <source>When overridden in a derived class, determines whether this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph> represents a constructor argument.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 이 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph>가 생성자 인수를 나타내는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this property represents a constructor argument; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 속성이 데이터 생성자 인수를 나타내면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
          <source>The default behavior is return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본 동작은 반환 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> are both <ph id="ph5">`null`</ph>.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> 모두 <ph id="ph5">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
          <source>XAML only uses <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A&gt;</ph> for representing the constructor arguments of instances of <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph>.</source>
          <target state="translated">XAML만 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A&gt;</ph> 인스턴스의 생성자 인수를 나타내기 위한 <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
          <source>See <bpt id="p1">[</bpt>Markup Extensions and WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)</ept>.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt>태그 확장명 및 WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
          <source>When overridden in a derived class, determines whether this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph> represents direct content of a collection.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 이 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph>가 컬렉션의 직접 콘텐츠를 나타내는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property represents direct content; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성이 직접 콘텐츠를 나타내면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
          <source>The default behavior is to return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본 동작은 <ph id="ph1">`false`</ph>를 반환하는 것입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsContent%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> are both <ph id="ph5">`null`</ph>.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsContent%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> 모두 <ph id="ph5">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
          <source>Dictionaries are included when determining whether this <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty&gt;</ph> represents direct content.</source>
          <target state="translated">결정할 때 사전 포함 되어 있는지 여부를이 <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty&gt;</ph> 직접 콘텐츠를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
          <source>When overridden in a derived class, determines whether this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph> represents the key used by the <ph id="ph2">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupObject" /&gt;</ph> to store the item in a dictionary.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 이 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph>가 사전에 항목을 저장하기 위해 <ph id="ph2">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupObject" /&gt;</ph>에서 사용한 키를 나타내는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this property represents a key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성이 키를 나타내면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
          <source>The default behavior is to return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본 동작은 <ph id="ph1">`false`</ph>를 반환하는 것입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsKey%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> are <ph id="ph5">`null`</ph>.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsKey%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> 는 <ph id="ph5">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
          <source>XAML will use the identified property as an <ph id="ph1">`x:Key`</ph> attribute.</source>
          <target state="translated">XAML로 식별된 된 속성을 사용 합니다는 <ph id="ph1">`x:Key`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
          <source>When overridden in a derived class, determines whether this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph> represents text which is passed to a type converter to create an instance of the property or if a constructor should be used.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 이 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph>가 속성의 인스턴스를 만들기 위해 형식 변환기에 전달된 텍스트를 나타내는지 여부 또는 생성자를 사용해야 하는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if this <ph id="ph2">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph> represents a string; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph>가 문자열을 나타내면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
          <source>The default behavior is to return <ph id="ph1">`false.`</ph></source>
          <target state="translated">반환 하는 기본 동작이입니다. <ph id="ph1">`false.`</ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> are both <ph id="ph5">`null`</ph>.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> 모두 <ph id="ph5">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
          <source>If the property is provided through <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupObject.Properties%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A&gt;</ph> is <ph id="ph3">`true`</ph>, it will be the only property the type will provide.</source>
          <target state="translated">통해이 속성은 제공 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupObject.Properties%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A&gt;</ph> 은 <ph id="ph3">`true`</ph>, 유일한 속성의 형식에서 제공 되는 것입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
          <source>When overridden in a derived class, gets the items that make up the value of this property.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 이 속성의 값을 구성하는 항목을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
          <source>The items that make up the value of this property.</source>
          <target state="translated">이 속성의 값을 구성하는 항목입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
          <source>If the property is not an enumeration, only one item will be returned.</source>
          <target state="translated">속성이 열거형 항목을 하나만 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
          <source>If the property is an enumeration, or enumerable, all the items will be returned.</source>
          <target state="translated">열거 또는 열거 가능한 속성이 이면 모든 항목이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
          <source>At least one item is always returned, because <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupObject&gt;</ph> will not create a <ph id="ph2">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty&gt;</ph> for properties with no items.</source>
          <target state="translated">때문에 하나 이상의 항목을 항상 반환 <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupObject&gt;</ph> 만들지는 것입니다는 <ph id="ph2">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty&gt;</ph> 항목이 없는 속성에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.Primitives.MarkupProperty.Name">
          <source>When overridden in a derived class, gets a name that is used for diagnostics and error reporting.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 진단 및 오류 보고에 사용되는 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.Name">
          <source>The identifier property name.</source>
          <target state="translated">식별자 속성 이름입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.Name">
          <source>A serializer should not use this value.</source>
          <target state="translated">Serializer에서이 값을 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.Name">
          <source>It should use the <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> and/or <ph id="ph2">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> instead.</source>
          <target state="translated">사용 해야는 <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> 및/또는 <ph id="ph2">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> 대신 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor">
          <source>When overridden in a derived class, gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> for the markup property.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 태그 속성에 대한 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor">
          <source>The property descriptor.</source>
          <target state="translated">속성 설명자입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor">
          <source>The default behavior returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본 동작을 반환 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType">
          <source>When overridden in a derived class, gets the CLR type of the property.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 속성의 CLR 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType">
          <source>The CLR type.</source>
          <target state="translated">CLR 형식입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue">
          <source>When overridden in a derived class, gets the string value of this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph>.</source>
          <target state="translated">파생된 클래스에서 재정의되는 경우 이 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph>의 문자열 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue">
          <source>The string value.</source>
          <target state="translated">문자열 값입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences">
          <source>When overridden in a derived class, gets the set of types that this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph> will reference when it serializes its value as a string.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 이 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph>가 자신의 값을 문자열로 serialize할 때 참조할 형식 집합을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences">
          <source>The set of types.</source>
          <target state="translated">형식 집합입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences%2A&gt;</ph> enables a serializer to ensure that the de-serializer has enough information to convert references to these type from the string representations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences%2A&gt;</ph> serializer를 디 serializer가 문자열 표현에서 이러한 형식에 대 한 참조를 변환 하려면 충분 한 정보를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.Primitives.MarkupProperty.Value">
          <source>When overridden in a derived class, gets the current value of this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph>.</source>
          <target state="translated">파생된 클래스에 재정의될 때 이 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /&gt;</ph>의 현재 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.Primitives.MarkupProperty.Value">
          <source>The current value.</source>
          <target state="translated">현재 값입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>