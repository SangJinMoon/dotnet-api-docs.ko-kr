<Type Name="MarkupProperty" FullName="System.Windows.Markup.Primitives.MarkupProperty">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2cc84508111a2d2946b82d9bf0f0cdc390e0599e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MarkupProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupProperty extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.Primitives.MarkupProperty" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupProperty" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupProperty abstract" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4d580-101">속성과 속성 값에 대한 액세스를 캡슐화하는 태그에 쓰는 동안 사용할 속성 설명을 제공하는 추상 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4d580-101">Abstract class that provides a property description to be used while writing to markup which encapsulates access to properties and their values.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d580-102">속성은 string 또는 항목의 목록으로 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-102">A property is either represented as a string or a list of items.</span></span>  
  
 <span data-ttu-id="4d580-103">속성을 문자열로 나타낼 수 있는 <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> 은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-103">If the property can be represented as a string, <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> is `false`.</span></span>  
  
 <span data-ttu-id="4d580-104">경우 <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> 은 `true`, 속성은 항목의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-104">If <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> is `true`, the property is a list of items.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d580-105">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />와 연결된 특성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-105">When overridden in a derived class, gets the attributes associated with this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d580-106">특성 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-106">The collection of attributes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependencyProperty">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyProperty DependencyProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty DependencyProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DependencyProperty As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::DependencyProperty ^ DependencyProperty { System::Windows::DependencyProperty ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d580-107">파생 클래스에서 재정의되는 경우 마크업 속성이 종속성 속성으로 구현되면 해당 속성에 대한 <see cref="T:System.Windows.DependencyProperty" /> 식별자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-107">When overridden in a derived class, gets the <see cref="T:System.Windows.DependencyProperty" /> identifier for the markup property if the property is implemented as a dependency property</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d580-108">종속성 속성 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-108">The dependency property identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d580-109">기본 동작을 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-109">The default behavior returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttached">
      <MemberSignature Language="C#" Value="public virtual bool IsAttached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttached" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAttached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAttached { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d580-110">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />가 연결된 <see cref="T:System.Windows.DependencyProperty" />인지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-110">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> is an attached <see cref="T:System.Windows.DependencyProperty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d580-111">속성이 연결된 <see cref="T:System.Windows.DependencyProperty" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-111">
              <see langword="true" /> if the property is an attached <see cref="T:System.Windows.DependencyProperty" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d580-112">기본 동작은 `false`를 반환하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-112">The default behavior is to return `false`.</span></span>  
  
 <span data-ttu-id="4d580-113">때 <xref:System.Windows.Markup.Primitives.MarkupProperty.IsAttached%2A> 은 `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> 않습니다 `null` 및 <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> 수 `null`, 하지만 적일 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-113">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsAttached%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> is not `null` and <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> can be `null`, but is not required to be.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsComposite">
      <MemberSignature Language="C#" Value="public virtual bool IsComposite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsComposite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsComposite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsComposite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d580-114">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />가 복합 속성인지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-114">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> is a composite property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d580-115">이 속성이 복합 속성이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-115">
              <see langword="true" /> is this property is a composite property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d580-116">기본 동작은 `false`를 반환하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-116">The default behavior is to return `false`.</span></span>  
  
 <span data-ttu-id="4d580-117">경우 <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> 은 `false`, 속성을 문자열로 나타낼 수 및 <xref:System.Windows.Markup.Primitives.MarkupProperty.Value%2A> 및 <xref:System.Windows.Markup.Primitives.MarkupProperty.StringValue%2A> 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-117">If <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> is `false`, the property can be represented as a string and <xref:System.Windows.Markup.Primitives.MarkupProperty.Value%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.StringValue%2A> are valid to use.</span></span>  
  
 <span data-ttu-id="4d580-118">경우 <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> 은 `true`, 속성은 하나 이상의 항목 및 <xref:System.Windows.Markup.Primitives.MarkupProperty.Items%2A> 를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-118">If <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> is `true`, the property is one or more items and <xref:System.Windows.Markup.Primitives.MarkupProperty.Items%2A> is valid to use.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructorArgument">
      <MemberSignature Language="C#" Value="public virtual bool IsConstructorArgument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructorArgument" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsConstructorArgument As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsConstructorArgument { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d580-119">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />가 생성자 인수를 나타내는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-119">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents a constructor argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d580-120">이 속성이 데이터 생성자 인수를 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-120">
              <see langword="true" /> if this property represents a constructor argument; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d580-121">기본 동작은 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-121">The default behavior is return `false`.</span></span>  
  
 <span data-ttu-id="4d580-122">때 <xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A> 은 `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> 및 <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> 모두 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-122">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> are both `null`.</span></span>  
  
 <span data-ttu-id="4d580-123">XAML만 사용 하 여 <xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A> 인스턴스의 생성자 인수를 나타내기 위한 <xref:System.Windows.Markup.MarkupExtension>합니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-123">XAML only uses <xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A> for representing the constructor arguments of instances of <xref:System.Windows.Markup.MarkupExtension>.</span></span> <span data-ttu-id="4d580-124">참조 [태그 확장명 및 WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-124">See [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContent">
      <MemberSignature Language="C#" Value="public virtual bool IsContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsContent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d580-125">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />가 컬렉션의 직접 콘텐츠를 나타내는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-125">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents direct content of a collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d580-126">속성이 직접 콘텐츠를 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-126">
              <see langword="true" /> if the property represents direct content; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d580-127">기본 동작은 `false`를 반환하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-127">The default behavior is to return `false`.</span></span>  
  
 <span data-ttu-id="4d580-128">때 <xref:System.Windows.Markup.Primitives.MarkupProperty.IsContent%2A> 은 `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> 및 <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> 모두 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-128">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsContent%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> are both `null`.</span></span>  
  
 <span data-ttu-id="4d580-129">결정할 때 사전 포함 되어 있는지 여부를이 <xref:System.Windows.Markup.Primitives.MarkupProperty> 직접 콘텐츠를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-129">Dictionaries are included when determining whether this <xref:System.Windows.Markup.Primitives.MarkupProperty> represents direct content.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKey">
      <MemberSignature Language="C#" Value="public virtual bool IsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d580-130">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />가 사전에 항목을 저장하기 위해 <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />에서 사용한 키를 나타내는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-130">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents the key used by the <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> to store the item in a dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d580-131">속성이 키를 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-131">
              <see langword="true" /> if this property represents a key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d580-132">기본 동작은 `false`를 반환하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-132">The default behavior is to return `false`.</span></span>  
  
 <span data-ttu-id="4d580-133">때 <xref:System.Windows.Markup.Primitives.MarkupProperty.IsKey%2A> 은 `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> 및 <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> 는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-133">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsKey%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> are `null`.</span></span>  
  
 <span data-ttu-id="4d580-134">XAML로 식별된 된 속성을 사용 합니다는 `x:Key` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-134">XAML will use the identified property as an `x:Key` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValueAsString">
      <MemberSignature Language="C#" Value="public virtual bool IsValueAsString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValueAsString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValueAsString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValueAsString { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d580-135">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />가 속성의 인스턴스를 만들기 위해 형식 변환기에 전달된 텍스트를 나타내는지 여부 또는 생성자를 사용해야 하는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-135">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents text which is passed to a type converter to create an instance of the property or if a constructor should be used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d580-136">이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />가 문자열을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-136">
              <see langword="true" />, if this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents a string; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d580-137">반환 하는 기본 동작이입니다. `false.`</span><span class="sxs-lookup"><span data-stu-id="4d580-137">The default behavior is to return `false.`</span></span>  
  
 <span data-ttu-id="4d580-138">때 <xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A> 은 `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> 및 <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> 모두 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-138">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> are both `null`.</span></span>  
  
 <span data-ttu-id="4d580-139">통해이 속성은 제공 하는 경우 <xref:System.Windows.Markup.Primitives.MarkupObject.Properties%2A> 및 <xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A> 은 `true`, 유일한 속성의 형식에서 제공 되는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-139">If the property is provided through <xref:System.Windows.Markup.Primitives.MarkupObject.Properties%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A> is `true`, it will be the only property the type will provide.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Windows.Markup.Primitives.MarkupObject&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Markup.Primitives.MarkupObject&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Items" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Items As IEnumerable(Of MarkupObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;System::Windows::Markup::Primitives::MarkupObject ^&gt; ^ Items { System::Collections::Generic::IEnumerable&lt;System::Windows::Markup::Primitives::MarkupObject ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Markup.Primitives.MarkupObject&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d580-140">파생 클래스에서 재정의되는 경우 이 속성의 값을 구성하는 항목을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-140">When overridden in a derived class, gets the items that make up the value of this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d580-141">이 속성의 값을 구성하는 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-141">The items that make up the value of this property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d580-142">속성이 열거형 항목을 하나만 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-142">If the property is not an enumeration, only one item will be returned.</span></span>  
  
 <span data-ttu-id="4d580-143">열거 또는 열거 가능한 속성이 이면 모든 항목이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-143">If the property is an enumeration, or enumerable, all the items will be returned.</span></span>  
  
 <span data-ttu-id="4d580-144">때문에 하나 이상의 항목을 항상 반환 <xref:System.Windows.Markup.Primitives.MarkupObject> 만들지는 것입니다는 <xref:System.Windows.Markup.Primitives.MarkupProperty> 항목이 없는 속성에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-144">At least one item is always returned, because <xref:System.Windows.Markup.Primitives.MarkupObject> will not create a <xref:System.Windows.Markup.Primitives.MarkupProperty> for properties with no items.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d580-145">파생 클래스에서 재정의되는 경우 진단 및 오류 보고에 사용되는 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-145">When overridden in a derived class, gets a name that is used for diagnostics and error reporting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d580-146">식별자 속성 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-146">The identifier property name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d580-147">Serializer에서이 값을 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="4d580-147">A serializer should not use this value.</span></span> <span data-ttu-id="4d580-148">사용 해야는 <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> 및/또는 <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-148">It should use the <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and/or <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor PropertyDescriptor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor PropertyDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PropertyDescriptor As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ PropertyDescriptor { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d580-149">파생 클래스에서 재정의되는 경우 태그 속성에 대한 <see cref="T:System.ComponentModel.PropertyDescriptor" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-149">When overridden in a derived class, gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> for the markup property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d580-150">속성 설명자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-150">The property descriptor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d580-151">기본 동작을 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-151">The default behavior returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public abstract Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ PropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d580-152">파생 클래스에서 재정의된 경우 속성의 CLR 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-152">When overridden in a derived class, gets the CLR type of the property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d580-153">CLR 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-153">The CLR type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringValue">
      <MemberSignature Language="C#" Value="public abstract string StringValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StringValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ StringValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d580-154">파생된 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />의 문자열 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-154">When overridden in a derived class, gets the string value of this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d580-155">문자열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-155">The string value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeReferences">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; TypeReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; TypeReferences" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TypeReferences As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ TypeReferences { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d580-156">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />가 자신의 값을 문자열로 serialize할 때 참조할 형식 집합을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-156">When overridden in a derived class, gets the set of types that this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> will reference when it serializes its value as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d580-157">형식 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-157">The set of types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d580-158"><xref:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences%2A> serializer를 디 serializer가 문자열 표현에서 이러한 형식에 대 한 참조를 변환 하려면 충분 한 정보를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4d580-158"><xref:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences%2A> enables a serializer to ensure that the de-serializer has enough information to convert references to these type from the string representations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d580-159">파생된 클래스에 재정의될 때 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />의 현재 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-159">When overridden in a derived class, gets the current value of this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d580-160">현재 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d580-160">The current value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>