<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CacheDependency.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5971848a65c6d20655c657ffc94cd2e88f373bb0d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">971848a65c6d20655c657ffc94cd2e88f373bb0d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Caching.CacheDependency">
          <source>Establishes a dependency relationship between an item stored in an ASP.NET application's <ph id="ph1">&lt;see cref="T:System.Web.Caching.Cache" /&gt;</ph> object and a file, cache key, an array of either, or another <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">ASP.NET 응용 프로그램의 <ph id="ph1">&lt;see cref="T:System.Web.Caching.Cache" /&gt;</ph> 개체 및 파일, 캐시 키, 이 개체 또는 다른 <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 개체의 배열에 저장된 항목 간 종속 관계를 설정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.Caching.CacheDependency">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class monitors the dependency relationships so that when any of them changes, the cached item will be automatically removed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 클래스는 종속 관계를 모니터링하며 관게가 변경되면 캐시된 항목이 자동으로 제거됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>If you add an item to the cache that is dependent on another object, such as a file or array of files, the dependent item is automatically removed from the cache when the object changes.</source>
          <target state="translated">파일 또는 파일의 배열 등 다른 개체에 종속 된 캐시에 항목을 추가 하는 경우 종속 항목이 개체가 변경 될 때 자동으로 캐시에서 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>For example, suppose you create a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object based on data in an XML file.</source>
          <target state="translated">예를 들어 다음과 같이 가정는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 개체 데이터를에서 기반으로 XML 파일입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>You can add the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> to the cache with a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object that makes the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> dependent on the XML file.</source>
          <target state="translated">추가할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 을 캐시에는 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 개체가 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> XML 파일에 종속 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>If the XML file changes, the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is removed from the cache.</source>
          <target state="translated">XML 파일이 변경 되 면는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 캐시에서 제거 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>You can add items with dependencies to your application's cache with the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">응용 프로그램의 캐시에 종속성이 있는 항목을 추가할 수는 <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Add%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>You cannot use the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Item%2A&gt;</ph> property to add items to the cache with dependencies.</source>
          <target state="translated">사용할 수 없습니다는 <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Item%2A&gt;</ph> 속성을 종속성과 함께 캐시에 항목을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>To set up a dependency, you create an instance of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class, specifying the files, keys, or directories on which the item is dependent, and then pass the dependency to the <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Add%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">인스턴스를 한 종속성을 설정 하려면 만들면는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 클래스 파일, 키 또는 디렉터리 항목은 종속 항목을 지정 하 고 그런 다음 종속성을는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Add%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> instance can represent a single file or directory, an array of files or directories, or an array of files or directories along with an array of cache keys (these represent other items stored in the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> object).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 인스턴스는 단일 파일 또는 디렉터리, 파일 또는 디렉터리의 배열 또는 파일 또는 디렉터리 캐시 키의 배열과 함께 배열을 나타낼 수 있습니다 (나타냅니다에 저장 된 다른 항목은 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> 개체).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> property to determine whether a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> changed since the previous request for an item in the <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">다음 코드 예제를 사용 하 여 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> 속성을 확인 여부는 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 에 있는 항목에 대 한 이전 요청 이후 변경는 <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>The <ph id="ph1">`dt`</ph> value passed in the <ph id="ph2">`start`</ph> parameter is set to <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`dt`</ph> 전달 된 값의 <ph id="ph2">`start`</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Web.Caching.CacheDependency">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor">
          <source>If you want to derive your own class from <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>, implement this version of the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">파생 클래스에서 사용자 지정 하려는 경우 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>,이 버전의 구현에서 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor">
          <source>The following code example is a class that implements this version of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> constructor as all classes that derive from <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> are required to.</source>
          <target state="translated">다음 코드 예제는이 버전의를 구현 하는 클래스는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 생성자에서 파생 되는 모든 클래스와 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 해야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>The path to a file or directory that the cached object is dependent upon.</source>
          <target state="translated">캐시된 개체가 종속된 파일 또는 디렉터리에 대한 경로입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>When this resource changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">이 리소스가 변경되면 캐시된 해당 개체는 사용할 수 없게 되며 캐시에서 제거됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors a file or directory for changes.</source>
          <target state="translated">파일 또는 디렉터리의 변경 내용을 모니터링하는 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>If the directory or file specified in the <ph id="ph1">`filename`</ph> parameter is not found in the file system, it will be treated as missing.</source>
          <target state="translated">디렉터리 또는 파일에 지정 된 경우는 <ph id="ph1">`filename`</ph> 매개 변수가 없는 파일 시스템에 누락 된 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>If the directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when the directory or file is created.</source>
          <target state="translated">디렉터리 또는 파일이 없는 경우 종속성을 사용 하 여 개체에 추가 된 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, 캐시 된 개체에서 제거 됩니다는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> 파일이 나 디렉터리를 만들 때.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">예를 들어, 개체를 추가 하 여 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> 다음 파일 경로 대 한 종속성: c:\stocks\xyz.dat 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">해당 파일이 없을 때 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> , xyz.dat 파일 생성 시에 캐시 된 개체가 제거 된 개체를 만들었지만 나중에 만들어집니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>The following code example creates an instance of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class with a dependency on an XML file.</source>
          <target state="translated">다음 코드 예제에서는의 인스턴스를 만듭니다.는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> XML 파일에 대 한 종속성을 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method then adds an item to the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> that is dependent upon that file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> 메서드는 다음 항목을 추가 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> 해당 파일에 종속 된 수식입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>You can also use the following technique to add an item to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on a file.</source>
          <target state="translated">항목을 추가 하려면 다음 방법을 사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> 파일에 대 한 종속성입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">캐시된 개체가 종속되어 있는 파일 또는 디렉터리 경로로 이루어진 배열입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">이러한 리소스가 변경되면 캐시된 해당 개체는 사용할 수 없게 되며 캐시에서 제거됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories) for changes.</source>
          <target state="translated">파일 또는 디렉터리에 대한 경로 배열의 변경 내용을 모니터링하는 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>If any of the files or directories in the array changes or is removed from the array, the cached item becomes obsolete and is removed from the application's <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> object.</source>
          <target state="translated">파일 또는 배열에 있는 디렉터리 변경 되거나에서 제거 하 여 배열에 캐시 된 항목이 제거 되므로 고 응용 프로그램의에서 제거 됩니다 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">또한 디렉터리 또는 파일에 지정 된 경우는 <ph id="ph1">`filenames`</ph> 매개 변수가 없는 파일 시스템에 누락 된 것으로 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">디렉터리나 파일이 없거나 종속성이 있는 개체에 추가 된 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, 캐시 된 개체에서 제거 됩니다는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> 해당 디렉터리 또는 파일을 만들 때.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">예를 들어, 개체를 추가 하 여 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> 다음 파일 경로 대 한 종속성: c:\stocks\xyz.dat 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">해당 파일이 없을 때 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> , xyz.dat 파일 생성 시에 캐시 된 개체가 제거 된 개체를 만들었지만 나중에 만들어집니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>When you create the array that contains the file dependencies, you must define the number of files that the item you are adding to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> is dependent on.</source>
          <target state="translated">파일의 수를 정의 해야 파일 종속성을 포함 하는 배열을 만들면 사용자는 해당 항목에 추가 하는 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> 에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method to add an item to the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> with dependencies on an array of files.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> 항목을 추가 하는 메서드는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> 파일 배열에 대해 종속성을 가진 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>You can also make the item dependent on an array of directories.</source>
          <target state="translated">디렉터리의 배열을에 종속 된 항목을도 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>The path to a file or directory that the cached object is dependent upon.</source>
          <target state="translated">캐시된 개체가 종속된 파일 또는 디렉터리에 대한 경로입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>When this resource changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">이 리소스가 변경되면 캐시된 해당 개체는 사용할 수 없게 되며 캐시에서 제거됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>The time against which to check the last modified date of the directory or file.</source>
          <target state="translated">디렉터리나 파일을 마지막으로 수정한 날짜를 확인할 시간입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors a file or directory for changes.</source>
          <target state="translated">파일 또는 디렉터리의 변경 내용을 모니터링하는 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>If the directory or file specified in the <ph id="ph1">`filename`</ph> parameter is not found in the file system, it will be treated as missing.</source>
          <target state="translated">디렉터리 또는 파일에 지정 된 경우는 <ph id="ph1">`filename`</ph> 매개 변수가 없는 파일 시스템에 누락 된 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>If the directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when the directory or file is created.</source>
          <target state="translated">디렉터리 또는 파일이 없는 경우 종속성을 사용 하 여 개체에 추가 된 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, 캐시 된 개체에서 제거 됩니다는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> 파일이 나 디렉터리를 만들 때.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">예를 들어, 개체를 추가 하 여 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> 다음 파일 경로 대 한 종속성: c:\stocks\xyz.dat 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">해당 파일이 없을 때 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> , xyz.dat 파일 생성 시에 캐시 된 개체가 제거 된 개체를 만들었지만 나중에 만들어집니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>Change tracking begins immediately and is not directly based on the <ph id="ph1">`start`</ph> parameter.</source>
          <target state="translated">변경 내용 추적을 즉시 시작 되 고 직접 기반으로 하지 않는 <ph id="ph1">`start`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>Use the <ph id="ph1">`start`</ph> parameter to pass a date and time in the past against which you want to check the last modified date of the directory or file passed in the <ph id="ph2">`filename`</ph> parameter.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`start`</ph> 날짜와 시간에서 마지막으로 수정한 날짜는 디렉터리 또는 파일에 전달할 확인의 기준이 되는 과거에 전달할 매개 변수를는 <ph id="ph2">`filename`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>If the last modified date is later than the date and time set passed in the <ph id="ph1">`start`</ph> parameter, the cached item is removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">마지막으로 수정한 경우 되는 날짜 보다 이후 날짜 및 시간 설정에 전달 된는 <ph id="ph1">`start`</ph> 매개 변수를에서 캐시 된 항목이 제거 되는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>The following code example uses this constructor to instantiate a <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, then inserts an item into the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> with that dependency.</source>
          <target state="translated">다음 코드 예제에서는이 생성자를 사용 하 여를 인스턴스화하는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 에 항목을 삽입 한 다음 개체는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> 해당 종속성과 함께 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>The <ph id="ph1">`dt`</ph> value passed in the <ph id="ph2">`start`</ph> parameter is set to <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`dt`</ph> 전달 된 값의 <ph id="ph2">`start`</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">캐시된 개체가 종속되어 있는 파일 또는 디렉터리 경로로 이루어진 배열입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">이러한 리소스가 변경되면 캐시된 해당 개체는 사용할 수 없게 되며 캐시에서 제거됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>The time against which to check the last modified date of the objects in the array.</source>
          <target state="translated">배열에 있는 개체를 마지막으로 수정한 날짜를 확인할 시간입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories) for changes and specifies a time when change monitoring begins.</source>
          <target state="translated">파일 또는 디렉터리에 대한 경로 배열 변경을 모니터링하고 변경 모니터링이 시작되는 시간을 지정하는 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>If any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">디렉터리 또는 파일에 지정 된 경우는 <ph id="ph1">`filenames`</ph> 매개 변수가 없는 파일 시스템에 누락 된 것으로 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">디렉터리나 파일이 없거나 종속성이 있는 개체에 추가 된 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, 캐시 된 개체에서 제거 됩니다는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> 해당 디렉터리 또는 파일을 만들 때.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">예를 들어, 개체를 추가 하 여 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> 다음 파일 경로 대 한 종속성: c:\stocks\xyz.dat 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">해당 파일이 없을 때 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> , xyz.dat 파일 생성 시에 캐시 된 개체가 제거 된 개체를 만들었지만 나중에 만들어집니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>Change tracking begins immediately and is not directly based on the <ph id="ph1">`start`</ph> parameter.</source>
          <target state="translated">변경 내용 추적을 즉시 시작 되 고 직접 기반으로 하지 않는 <ph id="ph1">`start`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>Use the <ph id="ph1">`start`</ph> parameter to pass a date and time in the past against which you want to check the last modified date of the array passed in the <ph id="ph2">`filenames`</ph> parameter.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`start`</ph> 날짜 및 시간 기준이 되는 배열의 마지막으로 수정한 날짜를 확인 하려면 이전에 전달할 매개 변수를 전달 된는 <ph id="ph2">`filenames`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>If the last modified date of any object in the array is later than the date and time set passed in the <ph id="ph1">`start`</ph> parameter, the cached item is removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">마지막으로 수정한 경우 배열에 있는 모든 개체의 날짜와 보다 이후 날짜 시간 설정에 전달 되는 <ph id="ph1">`start`</ph> 매개 변수, 캐시 된 항목에서 제거 됩니다는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object that passes two XML files and a <ph id="ph2">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> value when the object is included as a parameter argument in an <ph id="ph3">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method call.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 두 개의 XML 파일을 전달 하는 개체 및 <ph id="ph2">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> 개체에서 매개 변수 인수로 포함 된 경우 값는 <ph id="ph3">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">캐시된 개체가 종속되어 있는 파일 또는 디렉터리 경로로 이루어진 배열입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">이러한 리소스가 변경되면 캐시된 해당 개체는 사용할 수 없게 되며 캐시에서 제거됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>An array of cache keys that the new object monitors for changes.</source>
          <target state="translated">새 개체가 변경 내용을 모니터링하는 캐시 키 배열입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</source>
          <target state="translated">이러한 캐시 키가 변경되면 이 종속성 개체와 연관된 캐시된 개체는 사용할 수 없게 되어 캐시에서 제거됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</source>
          <target state="translated">파일 또는 디렉터리에 대한 경로 배열이나, 캐시 키 배열 또는 이 두 가지 배열 모두의 변경 내용을 모니터링하는 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">또한 디렉터리 또는 파일에 지정 된 경우는 <ph id="ph1">`filenames`</ph> 매개 변수가 없는 파일 시스템에 누락 된 것으로 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">디렉터리나 파일이 없거나 종속성이 있는 개체에 추가 된 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, 캐시 된 개체에서 제거 됩니다는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> 해당 디렉터리 또는 파일을 만들 때.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">예를 들어, 개체를 추가 하 여 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> 다음 파일 경로 대 한 종속성: c:\stocks\xyz.dat 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">해당 파일이 없을 때 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> , xyz.dat 파일 생성 시에 캐시 된 개체가 제거 된 개체를 만들었지만 나중에 만들어집니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>However, the <ph id="ph1">`cachekeys`</ph> dependency does not work the same way.</source>
          <target state="translated">그러나는 <ph id="ph1">`cachekeys`</ph> 종속성 같은 방식으로 작동 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>If at least one value in the <ph id="ph1">`cachekeys`</ph> parameter does not exist at the time of an insert, the insert fails.</source>
          <target state="translated">값을 하나 이상 있는 경우는 <ph id="ph1">`cachekeys`</ph> 삽입 시 매개 변수가 없는, 삽입이 실패 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>Note that there is no exception thrown for this scenario.</source>
          <target state="translated">이 시나리오에 대해 throw 예외가 없는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>The following code fragment demonstrates how to insert an item into your application's <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on a key to another item placed in the cache.</source>
          <target state="translated">응용 프로그램에 항목을 삽입 하는 방법은 다음 코드 조각 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> 다른 항목에 키에 종속 된 캐시에 배치 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>Since this method uses array syntax, you must define the number of keys on which the item you are adding to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> is dependent.</source>
          <target state="translated">키의 수를 정의 해야 하므로이 메서드는 배열 구문을 사용를 항목에 추가 하는 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">캐시된 개체가 종속되어 있는 파일 또는 디렉터리 경로로 이루어진 배열입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">이러한 리소스가 변경되면 캐시된 해당 개체는 사용할 수 없게 되며 캐시에서 제거됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>An array of cache keys that the new object monitors for changes.</source>
          <target state="translated">새 개체가 변경 내용을 모니터링하는 캐시 키 배열입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</source>
          <target state="translated">이러한 캐시 키가 변경되면 이 종속성 개체와 연관된 캐시된 개체는 사용할 수 없게 되어 캐시에서 제거됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>The date and time against which to check the last modified date of the objects passed in the <bpt id="p1">&lt;c&gt;</bpt>filenames<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>cachekeys<ept id="p2">&lt;/c&gt;</ept> arrays.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>filenames<ept id="p1">&lt;/c&gt;</ept> 및 <bpt id="p2">&lt;c&gt;</bpt>cachekeys<ept id="p2">&lt;/c&gt;</ept> 배열에 전달된 개체를 마지막으로 수정한 날짜를 확인할 날짜와 시간입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</source>
          <target state="translated">파일 또는 디렉터리에 대한 경로 배열이나, 캐시 키 배열 또는 이 두 가지 배열 모두의 변경 내용을 모니터링하는 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">또한 디렉터리 또는 파일에 지정 된 경우는 <ph id="ph1">`filenames`</ph> 매개 변수가 없는 파일 시스템에 누락 된 것으로 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">디렉터리나 파일이 없거나 종속성이 있는 개체에 추가 된 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, 캐시 된 개체에서 제거 됩니다는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> 해당 디렉터리 또는 파일을 만들 때.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">예를 들어, 개체를 추가 하 여 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> 다음 파일 경로 대 한 종속성: c:\stocks\xyz.dat 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">해당 파일이 없을 때 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> , xyz.dat 파일 생성 시에 캐시 된 개체가 제거 된 개체를 만들었지만 나중에 만들어집니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>However, the <ph id="ph1">`cachekeys`</ph> dependency does not work the same way.</source>
          <target state="translated">그러나는 <ph id="ph1">`cachekeys`</ph> 종속성 같은 방식으로 작동 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>If at least one value in the <ph id="ph1">`cachekeys`</ph> parameter does not exist at the time of an insert, the insert fails.</source>
          <target state="translated">값을 하나 이상 있는 경우는 <ph id="ph1">`cachekeys`</ph> 삽입 시 매개 변수가 없는, 삽입이 실패 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Note that there is no exception thrown for this scenario.</source>
          <target state="translated">이 시나리오에 대해 throw 예외가 없는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Change tracking begins immediately and is not directly based on the <ph id="ph1">`start`</ph> parameter.</source>
          <target state="translated">변경 내용 추적을 즉시 시작 되 고 직접 기반으로 하지 않는 <ph id="ph1">`start`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Use the <ph id="ph1">`start`</ph> parameter to pass a date and time in the past against which you want to check the last modified date of any object passed in the <ph id="ph2">`filenames`</ph> or <ph id="ph3">`cachekeys`</ph> parameters.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`start`</ph> 날짜 및 시간 기준이 되는 개체의 마지막으로 수정한 날짜를 확인 하려면 이전에 전달할 매개 변수를 전달 된는 <ph id="ph2">`filenames`</ph> 또는 <ph id="ph3">`cachekeys`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>If the last modified date of any of those objects is later than the date and time set passed in the <ph id="ph1">`start`</ph> parameter, the cached item is removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">마지막으로 수정한 경우 해당 개체의 날짜와 보다 이후 날짜 시간 설정에 전달 된는 <ph id="ph1">`start`</ph> 매개 변수를에서 캐시 된 항목이 제거 되는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>The following code example creates a <ph id="ph1">`CreateDependency`</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">`CreateDependency`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>When this method is called, it creates a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> property is used to add an item to the cache with a <ph id="ph3">`key`</ph> parameter of <ph id="ph4">`key1`</ph> and a value of <ph id="ph5">`Value 1`</ph>.</source>
          <target state="translated">이 메서드가 호출 될 때 생성 한 <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> 개체 및 <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> 속성을 사용 하 여 캐시에 항목을 추가 <ph id="ph3">`key`</ph> 의 매개 변수 <ph id="ph4">`key1`</ph> 값 <ph id="ph5">`Value 1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>An array of strings, <ph id="ph1">`dependencyKey`</ph>, is then created with the value of <ph id="ph2">`key1`</ph> as well.</source>
          <target state="translated">문자열의 배열 <ph id="ph1">`dependencyKey`</ph>의 값을 사용 하 여 만든 다음이 <ph id="ph2">`key1`</ph> 도 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>This <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> constructor then instantiates a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object that passes <ph id="ph3">`dependencyKey`</ph> and the <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> object as parameter arguments.</source>
          <target state="translated">이 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 생성자를 인스턴스화하는 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 전달 하는 개체 <ph id="ph3">`dependencyKey`</ph> 및 <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> 매개 변수 인수로 개체입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method is called next, using the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object as a parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> 메서드는 다음으로 사용 하 여 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 개체를 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>This makes the object added to the cache using the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A&gt;</ph> method dependent on the <ph id="ph2">`key1`</ph> key.</source>
          <target state="translated">이것은 사용 하 여 캐시에 추가 된 개체는 <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A&gt;</ph> 에 종속 되는 메서드는 <ph id="ph2">`key1`</ph> 키입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">캐시된 개체가 종속되어 있는 파일 또는 디렉터리 경로로 이루어진 배열입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">이러한 리소스가 변경되면 캐시된 해당 개체는 사용할 수 없게 되며 캐시에서 제거됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>An array of cache keys that the new object monitors for changes.</source>
          <target state="translated">새 개체가 변경 내용을 모니터링하는 캐시 키 배열입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</source>
          <target state="translated">이러한 캐시 키가 변경되면 이 종속성 개체와 연관된 캐시된 개체는 사용할 수 없게 되어 캐시에서 제거됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>Another instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that this instance is dependent upon.</source>
          <target state="translated">이 인스턴스가 종속된 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 클래스의 다른 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</source>
          <target state="translated">파일 또는 디렉터리에 대한 경로 배열이나, 캐시 키 배열 또는 이 두 가지 배열 모두의 변경 내용을 모니터링하는 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>It also makes itself dependent upon a separate instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class.</source>
          <target state="translated">또한 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 클래스의 다른 인스턴스에 대해 종속되도록 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">또한 디렉터리 또는 파일에 지정 된 경우는 <ph id="ph1">`filenames`</ph> 매개 변수가 없는 파일 시스템에 누락 된 것으로 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">디렉터리나 파일이 없거나 종속성이 있는 개체에 추가 된 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, 캐시 된 개체에서 제거 됩니다는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> 해당 디렉터리 또는 파일을 만들 때.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">예를 들어, 개체를 추가 하 여 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> 다음 파일 경로 대 한 종속성: c:\stocks\xyz.dat 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">해당 파일이 없을 때 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> , xyz.dat 파일 생성 시에 캐시 된 개체가 제거 된 개체를 만들었지만 나중에 만들어집니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>However, the <ph id="ph1">`cachekeys`</ph> dependency does not work the same way.</source>
          <target state="translated">그러나는 <ph id="ph1">`cachekeys`</ph> 종속성 같은 방식으로 작동 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>If at least one value in the <ph id="ph1">`cachekeys`</ph> parameter does not exist at the time of an insert, the insert fails.</source>
          <target state="translated">값을 하나 이상 있는 경우는 <ph id="ph1">`cachekeys`</ph> 삽입 시 매개 변수가 없는, 삽입이 실패 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>Note that there is no exception thrown for this scenario.</source>
          <target state="translated">이 시나리오에 대해 throw 예외가 없는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>The following code example creates a <ph id="ph1">`CreateDependency`</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">`CreateDependency`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>When this method is called, it uses the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> property to add an item to the cache with a <ph id="ph2">`key`</ph> parameter of <ph id="ph3">`key1`</ph> and a value of <ph id="ph4">`Value 1`</ph>.</source>
          <target state="translated">사용 하 여이 메서드를 호출할 때는 <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> 속성을 캐시에 항목을 추가 하려면 한 <ph id="ph2">`key`</ph> 의 매개 변수 <ph id="ph3">`key1`</ph> 값 <ph id="ph4">`Value 1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>An array of strings, <ph id="ph1">`dependencyKey`</ph>, is then created with the value of <ph id="ph2">`key1`</ph> as well.</source>
          <target state="translated">문자열의 배열 <ph id="ph1">`dependencyKey`</ph>의 값을 사용 하 여 만든 다음이 <ph id="ph2">`key1`</ph> 도 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor is used to create a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, <ph id="ph3">`dep1`</ph>, which passes <ph id="ph4">`dependencyKey`</ph> as a parameter argument.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType&gt;</ph> 생성자 만드는 데 사용 되는 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 개체 <ph id="ph3">`dep1`</ph>를 전달 하는 <ph id="ph4">`dependencyKey`</ph> 매개 변수 인수로 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>A second <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, <ph id="ph2">`dep2`</ph>, is created using this constructor, with <ph id="ph3">`dep1`</ph> passed as the third parameter argument.</source>
          <target state="translated">두 번째 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 개체 <ph id="ph2">`dep2`</ph>,으로이 생성자를 사용 하 여 만들어집니다 <ph id="ph3">`dep1`</ph> 세 번째 매개 변수 인수로 전달 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>This second dependency is dependent on the first.</source>
          <target state="translated">이 두 번째 종속성 첫 번째에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method is called next, using the second <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object as a parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> 메서드는 다음으로, 두 번째를 사용 하 여 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 개체를 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>If the first dependency changes in any way, the cached item will be invalidated.</source>
          <target state="translated">첫 번째 종속성 어떤 식으로든에서 변경 되 면 캐시 된 항목이 유효 하지 것입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">캐시된 개체가 종속되어 있는 파일 또는 디렉터리 경로로 이루어진 배열입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">이러한 리소스가 변경되면 캐시된 해당 개체는 사용할 수 없게 되며 캐시에서 제거됩니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>An array of cache keys that the new object monitors for changes.</source>
          <target state="translated">새 개체가 변경 내용을 모니터링하는 캐시 키 배열입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</source>
          <target state="translated">이러한 캐시 키가 변경되면 이 종속성 개체와 연관된 캐시된 개체는 사용할 수 없게 되어 캐시에서 제거됩니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Another instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that this instance is dependent upon.</source>
          <target state="translated">이 인스턴스가 종속된 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 클래스의 다른 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>The time against which to check the last modified date of the objects in the arrays and the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">배열에 있는 개체와 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 개체를 마지막으로 수정한 날짜를 확인할 시간입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</source>
          <target state="translated">파일 또는 디렉터리에 대한 경로 배열이나, 캐시 키 배열 또는 이 두 가지 배열 모두의 변경 내용을 모니터링하는 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>It also makes itself dependent upon another instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class and a time when the change monitoring begins.</source>
          <target state="translated">또한 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 클래스의 인스턴스와 변경 모니터링이 시작되는 시간에 종속되도록 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">또한 디렉터리 또는 파일에 지정 된 경우는 <ph id="ph1">`filenames`</ph> 매개 변수가 없는 파일 시스템에 누락 된 것으로 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">디렉터리나 파일이 없거나 종속성이 있는 개체에 추가 된 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, 캐시 된 개체에서 제거 됩니다는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> 해당 디렉터리 또는 파일을 만들 때.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">예를 들어, 개체를 추가 하 여 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> 다음 파일 경로 대 한 종속성: c:\stocks\xyz.dat 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">해당 파일이 없을 때 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> , xyz.dat 파일 생성 시에 캐시 된 개체가 제거 된 개체를 만들었지만 나중에 만들어집니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>However, the <ph id="ph1">`cachekeys`</ph> dependency does not work the same way.</source>
          <target state="translated">그러나는 <ph id="ph1">`cachekeys`</ph> 종속성 같은 방식으로 작동 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If at least one value in the <ph id="ph1">`cachekeys`</ph> parameter does not exist at the time of an insert, the insert fails.</source>
          <target state="translated">값을 하나 이상 있는 경우는 <ph id="ph1">`cachekeys`</ph> 삽입 시 매개 변수가 없는, 삽입이 실패 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Note that there is no exception thrown for this scenario.</source>
          <target state="translated">이 시나리오에 대해 throw 예외가 없는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Change tracking begins immediately and is not directly based on the <ph id="ph1">`start`</ph> parameter.</source>
          <target state="translated">변경 내용 추적을 즉시 시작 되 고 직접 기반으로 하지 않는 <ph id="ph1">`start`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Use the <ph id="ph1">`start`</ph> parameter to pass a date and time in the past against which you want to check the last modified date of any of the objects passed in the <ph id="ph2">`filenames`</ph>, <ph id="ph3">`cachekeys`</ph>, or <ph id="ph4">`dependency`</ph> parameters.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`start`</ph> 날짜 및 시간 기준이 되는 개체의 마지막으로 수정한 날짜를 확인 하려면 이전에 전달할 매개 변수를 전달 된는 <ph id="ph2">`filenames`</ph>, <ph id="ph3">`cachekeys`</ph>, 또는 <ph id="ph4">`dependency`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If the last modified date for any of those objects is later than the date and time passed in the <ph id="ph1">`start`</ph> parameter, the cached item is removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">마지막으로 수정한 경우 이러한 개체 중 하나에 대 한 날짜와 보다 이후 날짜 시간에 전달 되는 <ph id="ph1">`start`</ph> 매개 변수, 캐시 된 항목에서 제거 됩니다는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>The following code example shows a <ph id="ph1">`CreateDependency`</ph> method.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">`CreateDependency`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>When this method is called, it creates a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> property is used to add an item to the cache with a key parameter of <ph id="ph3">`key1`</ph> and a value of <ph id="ph4">`Value 1`</ph>.</source>
          <target state="translated">이 메서드가 호출 될 때 생성 한 <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> 개체 및 <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> 속성은 매개 변수 키와 함께 캐시에 항목을 추가 하는 데 사용 <ph id="ph3">`key1`</ph> 값 <ph id="ph4">`Value 1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>An array of strings, <ph id="ph1">`dependencyKey`</ph>, is then created with the value at its first (and only) index set to the value of <ph id="ph2">`key1`</ph> as well.</source>
          <target state="translated">문자열의 배열 <ph id="ph1">`dependencyKey`</ph>의 값으로 설정 하는 첫 번째이자 유일한 인덱스에 있는 값을 사용 하 여 만든 다음이 <ph id="ph2">`key1`</ph> 도 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor is then used to create a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, <ph id="ph3">`dep1`</ph>, which passes <ph id="ph4">`dependencyKey`</ph> as a parameter argument.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType&gt;</ph> 생성자 다음 만들기를 사용 하는 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 개체 <ph id="ph3">`dep1`</ph>, 전달 하는 <ph id="ph4">`dependencyKey`</ph> 매개 변수 인수로 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>A second <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, <ph id="ph2">`dep2`</ph>, is then created using this constructor, with <ph id="ph3">`dep1`</ph> and the <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> object passed as parameter arguments.</source>
          <target state="translated">두 번째 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 개체 <ph id="ph2">`dep2`</ph>, 그런 다음으로이 생성자를 사용 하 여 생성 됩니다 <ph id="ph3">`dep1`</ph> 및 <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> 매개 변수 인수로 전달 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>This second dependency is dependent on the first, and dependency monitoring will begin 10 seconds after the <ph id="ph1">`CreateDependency`</ph> method is called.</source>
          <target state="translated">이 두 번째 종속성 첫 종속적 이며 종속성 모니터링 10 초 후 시작 됩니다는 <ph id="ph1">`CreateDependency`</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method is called next, using the second <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object as a parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> 메서드는 다음으로, 두 번째를 사용 하 여 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 개체를 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If the first dependency changes in any way, the cached item will be invalidated.</source>
          <target state="translated">첫 번째 종속성 어떤 식으로든에서 변경 되 면 캐시 된 항목이 유효 하지 것입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.DependencyDispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class and any classes that derive from <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 클래스 및 <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>에서 파생되는 클래스에서 사용되는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.DependencyDispose">
          <source>Any class that derives from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class is required to implement this method to clean up resources the derived class has used.</source>
          <target state="translated">파생 되는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 클래스는 파생된 클래스에 사용 되는 리소스를 정리 하려면이 메서드를 구현 하는 데 필요 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.DependencyDispose">
          <source>The following code example shows a class that inherits from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class and overrides the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.DependencyDispose%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서 상속 되는 클래스를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 클래스 및 재정의 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.DependencyDispose%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.DependencyDispose">
          <source>When this method is called, it sets a custom Boolean property named <ph id="ph1">`Disposed`</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드는 라는 사용자 지정 부울 속성 설정 <ph id="ph1">`Disposed`</ph> 를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.Dispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 개체가 사용하는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.FinishInit">
          <source>Completes initialization of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 개체의 초기화를 완료합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.FinishInit">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.FinishInit%2A&gt;</ph> method completes the initialization of the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.FinishInit%2A&gt;</ph> 의 초기화를 완료 하는 메서드는 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.FinishInit">
          <source>This method is called by all <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> constructors.</source>
          <target state="translated">이 메서드는 모든 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.FinishInit">
          <source>The <ph id="ph1">&lt;see cref="M:System.Web.Caching.CacheDependency.FinishInit" /&gt;</ph> method must be called at the end of the constructor for derived classes to complete the initialization of the <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.Caching.CacheDependency.FinishInit" /&gt;</ph> 의 초기화를 완료 하는 파생된 클래스에 대 한 생성자의 끝에 메서드를 호출 해야는 <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.GetFileDependencies">
          <source>Gets the file dependencies.</source>
          <target state="translated">파일 종속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.GetFileDependencies">
          <source>The file dependencies.</source>
          <target state="translated">파일 종속성입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>Retrieves a unique identifier for a <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 개체에 대한 고유 식별자를 검색합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>The unique identifier for the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 개체에 대한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>This method can be particularly useful for tracking multiple instances of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class associated with an item or an application.</source>
          <target state="translated">이 메서드를 여러 개를 추적 하는 데 특히 유용 수는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 항목 또는 응용 프로그램 관련 된 클래스입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>The identifier is a combination of either the file name (for a file dependency) or the key name (for a cache-key dependency) and a string that this method assigns to the dependency.</source>
          <target state="translated">식별자에는 파일 이름 (파일 종속성의 경우) 또는 (캐시 키 종속성의 경우)에 대 한 키 이름 및 종속성에이 메서드를 지정 하는 문자열의 조합입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>In classes that derive from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class, you can override this method to customize how it generates the unique identifier.</source>
          <target state="translated">파생 된 클래스에는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 클래스의 고유 식별자를 생성 방법을 사용자 지정 하려면이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Web.Caching.AggregateCacheDependency&gt;</ph> object, named <ph id="ph2">`aggDep`</ph>, with two <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> objects in its array.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.Caching.AggregateCacheDependency&gt;</ph> 라는 개체 <ph id="ph2">`aggDep`</ph>, 두 개의 <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 해당 배열에 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>Once <ph id="ph1">`aggDep`</ph> is instantiated, the code calls the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.GetUniqueID%2A&gt;</ph> method to generate a unique identifier for both dependencies that <ph id="ph3">`aggDep`</ph> contains and displays the identifiers to the containing page.</source>
          <target state="translated">한 번 <ph id="ph1">`aggDep`</ph> 인스턴스화되면 코드를 호출 하 여는 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.GetUniqueID%2A&gt;</ph> 두 종속성에 대 한 고유 식별자를 생성 하는 <ph id="ph3">`aggDep`</ph> 포함 및 포함 하는 페이지 식별자가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>An item is then added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, using the <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Insert%2A&gt;</ph> method, with <ph id="ph3">`aggDep`</ph> as a dependency.</source>
          <target state="translated">항목에 추가 됩니다는 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>를 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Insert%2A&gt;</ph> 메서드를와 <ph id="ph3">`aggDep`</ph> 종속성으로 있습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 개체가 변경되었는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object has changed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 개체가 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>You can add an item to an ASP.NET application's <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>.</source>
          <target state="translated">ASP.NET 응용 프로그램에 항목을 추가할 수 있습니다 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> changes, the item added to the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> is invalidated and removed from the cache.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 변경에 추가 된 항목의 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> 무효화 되 고 캐시에서 제거 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>You can use this property to determine whether a <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> has changed, and recreate the item in the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> if that has occurred.</source>
          <target state="translated">확인 하려면이 속성을 사용할 수 있습니다 여부는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 변경 되 고에 있는 항목을 다시 만듭니다는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> 있는 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> property to determine whether a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> changed since the previous request for an item in the <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">다음 코드 예제를 사용 하 여 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> 속성을 확인 여부는 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 에 있는 항목에 대 한 이전 요청 이후 변경는 <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>The <ph id="ph1">`dt`</ph> value passed in the <ph id="ph2">`start`</ph> parameter is set to <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`dt`</ph> 전달 된 값의 <ph id="ph2">`start`</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.ItemRemoved">
          <source>Called when a monitored cache entry is removed.</source>
          <target state="translated">모니터링되는 캐시 엔트리가 제거될 때 호출됩니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.KeepDependenciesAlive">
          <source>Updates the last access time of every cache item that depends on this item.</source>
          <target state="translated">이 항목에 종속되는 모든 캐시 항목의 마지막 액세스 시간을 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>The source of the event.</source>
          <target state="translated">이벤트 소스입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated">이벤트 데이터가 포함된 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>Notifies the base <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object that the dependency represented by a derived <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class has changed.</source>
          <target state="translated">파생 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 클래스에 나타나는 종속성이 변경되었음을 기본 <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 개체에 알립니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>Any class that derives from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class must implement this method.</source>
          <target state="translated">파생 되는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 클래스가이 메서드를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>When you derive from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class, you use the base functionality of any method or property that you have not overridden.</source>
          <target state="translated">파생 시키는 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 메서드나 재정의 하지 않은 속성의 기본 기능을 사용 하면 클래스입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>When you create an instance of the derived class, it represents the files, cache keys, database tables, or other arbitrary objects that you want to make a cached item dependent upon.</source>
          <target state="translated">파생된 클래스의 인스턴스를 만들 때 파일, 캐시 키, 데이터베이스 테이블 또는 다른 임의의 개체에 종속 된 캐시 된 항목 수 있도록 설정할를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>When a dependency item changes, this method notifies the base functionality of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class that the item has changed, so that the values of the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.UtcLastModified%2A&gt;</ph> properties can be updated.</source>
          <target state="translated">이 메서드는 기본 기능을 알립니다 종속성 항목 변경 되 면는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 항목이 변경 된 클래스 있도록의 값은 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.UtcLastModified%2A&gt;</ph> 속성만 업데이트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>The following code example shows a class that inherits from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서 상속 되는 클래스를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>It creates a public method, <ph id="ph1">`ResetDependency`</ph>, that uses the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A&gt;</ph> method to change the time at which the dependency was modified, and then calls the <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A&gt;</ph> method.</source>
          <target state="translated">공용 메서드를 만듭니다 <ph id="ph1">`ResetDependency`</ph>, 사용 하는 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A&gt;</ph> 종속성 수정 된 시간을 변경 하는 메서드 및 호출은 <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.SetCacheDependencyChanged(System.Action{System.Object,System.EventArgs})">
          <source>The dependency changed action.</source>
          <target state="translated">종속성이 변경된 동작입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.SetCacheDependencyChanged(System.Action{System.Object,System.EventArgs})">
          <source>Adds an Action method to handle notifying interested party in changes to this dependency.</source>
          <target state="translated">이 종속성의 변경 내용을 관련 당사자에게 알리는 작업을 처리하기 위한 동작 메서드를 추가합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)">
          <source>The time when the dependency last changed.</source>
          <target state="translated">종속성을 마지막으로 변경한 시간입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)">
          <source>Marks the time when a dependency last changed.</source>
          <target state="translated">종속성을 마지막으로 변경한 시간을 표시합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)">
          <source>The following code example shows a class that inherits from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서 상속 되는 클래스를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)">
          <source>It creates a public method, <ph id="ph1">`ResetDependency`</ph>, that uses the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A&gt;</ph> method to change the time at which the dependency was modified, and then calls the <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A&gt;</ph> method.</source>
          <target state="translated">공용 메서드를 만듭니다 <ph id="ph1">`ResetDependency`</ph>, 사용 하는 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A&gt;</ph> 종속성 수정 된 시간을 변경 하는 메서드 및 호출은 <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>Allows the first user to declare exclusive ownership of this dependency.</source>
          <target state="translated">첫 번째 사용자가 이 종속성의 단독 소유권을 선언하도록 허용합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="true" /&gt;</ph> if the item was the first to take ownership otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">소유권을 가져온 첫 번째 항목인 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>This method declares that the dependency is used.</source>
          <target state="translated">이 메서드는 종속성을 사용 해야 함을 선언 합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>If another item previously called this method and took ownership, <ph id="ph1">`false`</ph> is returned.</source>
          <target state="translated">다른 항목에서 이전에이 메서드를 호출 하 고, 소유권을 가져올 경우 <ph id="ph1">`false`</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>A  <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> can only be used by one cache entry.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 하나의 캐시 항목에 따라 에서만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>When an item is added to a cache with any cache dependencies specified, the cache should take ownership of those dependencies to make sure that they are not reused somewhere else.</source>
          <target state="translated">항목이 캐시에 지정 된 모든 캐시 종속성으로 추가 되 면 캐시 소유권을은 다시 사용할 수 없는 어딘가에 다른 되도록 해당 종속성을 수행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>Gets the time when the dependency was last changed.</source>
          <target state="translated">종속성을 마지막으로 변경한 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>The time when the dependency was last changed.</source>
          <target state="translated">종속성을 마지막으로 변경한 시간입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>This property is measured in Coordinated Universal Time (UTC) (also known as Greenwich Mean Time).</source>
          <target state="translated">이 속성은에 Utc (협정 세계시) (또는 그리니치 표준시)를 측정 합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Web.Caching.AggregateCacheDependency&gt;</ph> class to add an item, with two <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object dependencies, to the <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Web.Caching.AggregateCacheDependency&gt;</ph> 두 개의 항목을 추가 하려면 클래스 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 개체 종속성으로는 <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>When a request for the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> item is made, the code checks whether the item is in the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">경우에 대 한 요청에서 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> 항목 생성 되 면 코드에는 항목 인지 확인는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>If it is, the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.UtcLastModified%2A&gt;</ph> property is converted to a string and displayed on the page.</source>
          <target state="translated">인 경우는 <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.UtcLastModified%2A&gt;</ph> 속성을 문자열로 변환 되 고 페이지에 표시 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>If it is not, the item and its two dependencies are created and added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">그렇지 않을 경우 항목 및 두 개의 종속성 생성 되어에 추가 <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>