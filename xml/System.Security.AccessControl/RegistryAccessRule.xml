<Type Name="RegistryAccessRule" FullName="System.Security.AccessControl.RegistryAccessRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a10fa2e1cc108c3aba7b66c04ae68f8616d9c2c3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36627839" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RegistryAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type RegistryAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0d068-101">Represents a set of access rights allowed or denied for a user or group.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d068-101">Represents a set of access rights allowed or denied for a user or group.</span>
      </span>
      <span data-ttu-id="0d068-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d068-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d068-103"><xref:System.Security.AccessControl.RegistryAccessRule> 클래스는 Windows 레지스트리 키에 액세스 제어 보안을 관리 하기 위한.NET Framework가 제공 하는 클래스 집합 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-103">The <xref:System.Security.AccessControl.RegistryAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on registry keys.</span></span> <span data-ttu-id="0d068-104">이러한 클래스와의 관계는 기본 Windows 액세스 제어 구조를의 개요를 참조 하십시오. <xref:System.Security.AccessControl.RegistrySecurity>합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.RegistrySecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d068-105">Windows 액세스 제어 보안 레지스트리 키에만 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-105">Windows access control security can only be applied to registry keys.</span></span> <span data-ttu-id="0d068-106">키에 저장 된 개별 키/값 쌍에 적용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-106">It cannot be applied to individual key/value pairs stored in a key.</span></span>  
  
 <span data-ttu-id="0d068-107">현재 레지스트리 키에 적용 된 규칙 목록이 사용는 <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> 가져올 메서드를 한 <xref:System.Security.AccessControl.RegistrySecurity> 개체를 사용 하 여 해당 <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> 메서드의 컬렉션을 가져옵니다 <xref:System.Security.AccessControl.RegistryAccessRule> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-107">To get a list of the rules currently applied to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.RegistrySecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.RegistryAccessRule> objects.</span></span>  
  
 <span data-ttu-id="0d068-108"><xref:System.Security.AccessControl.RegistryAccessRule> 개체가 내부 임의 제어 액세스 목록 (DACL)에서 액세스 제어 항목으로 일대일로 매핑되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-108"><xref:System.Security.AccessControl.RegistryAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary control access list (DACL).</span></span> <span data-ttu-id="0d068-109">레지스트리 키에 대 한 모든 액세스 규칙 집합이 나타나면 집합은 현재 모든 액세스 제어 항목을 나타내는 데 필요한 규칙의 최소 수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-109">When you get the set of all access rules for a registry key, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d068-110">기본 액세스 제어 항목에 적용 하 고 규칙을 제거 하는 대로 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="0d068-111">규칙의 정보는 액세스 제어 항목의 가장 작은 수를 유지 하기 위해 가능 하면 병합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="0d068-112">따라서 규칙의 현재 목록의 읽을 때 하지 같습니다 정확 하 게 사용자가 추가한 모든 규칙의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="0d068-113">사용 하 여 <xref:System.Security.AccessControl.RegistryAccessRule> 개체를 허용 하거나 거부할 사용자 또는 그룹에 대 한 액세스 권한을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-113">Use <xref:System.Security.AccessControl.RegistryAccessRule> objects to specify access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="0d068-114">A <xref:System.Security.AccessControl.RegistryAccessRule> 개체는 항상 액세스를 허용 하거나 거부 된 액세스 권한 나타내며 하지 둘 다 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-114">A <xref:System.Security.AccessControl.RegistryAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="0d068-115">레지스트리 키에 규칙을 적용 하려면 사용 하 여는 <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> 가져올 메서드를는 <xref:System.Security.AccessControl.RegistrySecurity> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-115">To apply a rule to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="0d068-116">수정 된 <xref:System.Security.AccessControl.RegistrySecurity> 추가 규칙을 사용 하 여 해당 메서드를 사용 하 여 개체는 <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> 메서드를 보안 개체를 다시 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-116">Modify the <xref:System.Security.AccessControl.RegistrySecurity> object by using its methods to add the rule, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0d068-117">변경 내용은 한 <xref:System.Security.AccessControl.RegistrySecurity> 개체를 호출 하기 전에 레지스트리 키의 액세스 수준을 적용 되지 않습니다는 <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> 레지스트리 키로 변경 된 보안 개체를 지정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="0d068-117">Changes you make to a <xref:System.Security.AccessControl.RegistrySecurity> object do not affect the access levels of the registry key until you call the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the registry key.</span></span>  
  
 <span data-ttu-id="0d068-118"><xref:System.Security.AccessControl.RegistryAccessRule> 개체는 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-118"><xref:System.Security.AccessControl.RegistryAccessRule> objects are immutable.</span></span> <span data-ttu-id="0d068-119">레지스트리 키에 대 한 보안의 메서드를 사용 하 여 수정 되는 <xref:System.Security.AccessControl.RegistrySecurity> 규칙을 추가 하거나 제거 하는 클래스, 이렇게 하면 기본 액세스 제어 항목 수정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-119">Security for a registry key is modified using the methods of the <xref:System.Security.AccessControl.RegistrySecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d068-120">다음 코드 예제에서는 상속 및 전파 액세스 규칙을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-120">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="0d068-121">이 예에서는 만듭니다는 <xref:System.Security.AccessControl.RegistrySecurity> 개체을 다음을 추가 하는 두 개의 규칙은 <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-121">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="0d068-122">첫 번째 규칙에 없는 전파 플래그는 있지만 두 번째에 <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> 및 <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-122">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="0d068-123">프로그램에 규칙을 표시는 <xref:System.Security.AccessControl.RegistrySecurity> 개체를 다음 개체를 사용 하 여 하위 키를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-123">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the object to create a subkey.</span></span> <span data-ttu-id="0d068-124">자식 하위 키와 손자 하위 키를 만들고 각 하위 키에 대 한 보안을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-124">The program creates a child subkey and a grandchild subkey, and then displays the security for each subkey.</span></span> <span data-ttu-id="0d068-125">마지막으로, 프로그램 테스트 키를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-125">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d068-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="0d068-127">The user or group the rule applies to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-127">The user or group the rule applies to.</span>
          </span>
          <span data-ttu-id="0d068-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="0d068-129">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-129">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="0d068-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d068-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d068-132">이 생성자는 기본 전파 및 상속을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-132">This constructor specifies default propagation and inheritance.</span></span> <span data-ttu-id="0d068-133">즉, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> 및 <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-133">That is, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> and <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0d068-134">
            <paramref name="registryRights" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-134">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="0d068-135">-or-  <paramref name="type" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-135">-or-  <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d068-136">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-136">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0d068-137">-or-  <paramref name="eventRights" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-137">-or-  <paramref name="eventRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d068-138">
            <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-138">
              <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="0d068-139">The name of the user or group the rule applies to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-139">The name of the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="0d068-140">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-140">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="0d068-141">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-141">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d068-142">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-142">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d068-143">이 생성자는 기본 전파 및 상속을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-143">This constructor specifies default propagation and inheritance.</span></span> <span data-ttu-id="0d068-144">즉, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> 및 <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-144">That is, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> and <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0d068-145">이 생성자는 만들기는 <xref:System.Security.Principal.NTAccount> 개체를 전달 하 여 `identity` 에 <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> 생성자 및 새로 만든 전달 <xref:System.Security.Principal.NTAccount> 개체를 <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.AccessControlType%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-145">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d068-146">다음 코드 예제에서는 레지스트리 액세스 규칙을 만들고에 추가 <xref:System.Security.AccessControl.RegistrySecurity> 을 보여 주는 개체 권한을 허용 및 거부 하는 규칙에 동일한의 호환 규칙 동안 별도로 유지 방법을 kind 병합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-146">The following code example creates registry access rules and adds them to a <xref:System.Security.AccessControl.RegistrySecurity> object, showing how rules that allow and deny rights remain separate, while compatible rules of the same kind are merged.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0d068-147">
            <paramref name="registryRights" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-147">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="0d068-148">-or-  <paramref name="type" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-148">-or-  <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d068-149">
            <paramref name="registryRights" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-149">
              <paramref name="registryRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d068-150">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-150">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0d068-151">-or-  <paramref name="identity" /> is a zero-length string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-151">-or-  <paramref name="identity" /> is a zero-length string.</span>
          </span>
          <span data-ttu-id="0d068-152">-or-  <paramref name="identity" /> is longer than 512 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-152">-or-  <paramref name="identity" /> is longer than 512 characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="0d068-153">The user or group the rule applies to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-153">The user or group the rule applies to.</span>
          </span>
          <span data-ttu-id="0d068-154">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-154">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="0d068-155">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the rights allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-155">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the rights allowed or denied.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="0d068-156">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-156">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="0d068-157">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-157">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="0d068-158">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-158">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d068-159">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-159">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d068-160">레지스트리 키에 대 한 의미 있는 유일한 상속 플래그는 모든 레지스트리 키가 컨테이너는 <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-160">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="0d068-161">이 플래그를 지정 하지 않으면 전파 플래그 무시 되 고 직접 키만 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-161">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="0d068-162">플래그가 있는 경우에 다음 표에 나와 있는 것 처럼 규칙 전파 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-162">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="0d068-163">테이블 자식 하위 키가 CS 및 GS 손자 하위 키와 하위 키 S 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-163">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="0d068-164">즉, 손자 하위 키에 대 한 경로가 S\CS\GS입니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-164">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="0d068-165">전파 플래그</span><span class="sxs-lookup"><span data-stu-id="0d068-165">Propagation flags</span></span>|<span data-ttu-id="0d068-166">S</span><span class="sxs-lookup"><span data-stu-id="0d068-166">S</span></span>|<span data-ttu-id="0d068-167">CS</span><span class="sxs-lookup"><span data-stu-id="0d068-167">CS</span></span>|<span data-ttu-id="0d068-168">GS</span><span class="sxs-lookup"><span data-stu-id="0d068-168">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="0d068-169">X</span><span class="sxs-lookup"><span data-stu-id="0d068-169">X</span></span>|<span data-ttu-id="0d068-170">X</span><span class="sxs-lookup"><span data-stu-id="0d068-170">X</span></span>|<span data-ttu-id="0d068-171">X</span><span class="sxs-lookup"><span data-stu-id="0d068-171">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="0d068-172">X</span><span class="sxs-lookup"><span data-stu-id="0d068-172">X</span></span>|<span data-ttu-id="0d068-173">X</span><span class="sxs-lookup"><span data-stu-id="0d068-173">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="0d068-174">X</span><span class="sxs-lookup"><span data-stu-id="0d068-174">X</span></span>|<span data-ttu-id="0d068-175">X</span><span class="sxs-lookup"><span data-stu-id="0d068-175">X</span></span>|  
|<span data-ttu-id="0d068-176"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="0d068-176"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="0d068-177">X</span><span class="sxs-lookup"><span data-stu-id="0d068-177">X</span></span>||  
  
 <span data-ttu-id="0d068-178">손자 하위 키에 대 한 패턴에 포함 된 모든 하위 키를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-178">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="0d068-179">예를 들어 경우는 <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> 플래그가 지정 되어 `inheritanceFlags` 및 <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> 전파 플래그에 지정 된 `propagationFlags`,이 규칙이 직접 하위 키에 적용 되지 않습니다 되지만 모든 하위 키 및 모든 직계 자식 하위 키에 적용 하는 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-179">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d068-180">지정할 수는 있지만 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> 플래그에 대 한 `inheritanceFlags`, 그렇게 하는 이유가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-180">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="0d068-181">액세스 제어를 위해 하위 키에서 이름/값 쌍은 별개의 개체 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-181">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="0d068-182">이름/값 쌍에 대 한 액세스 권한은 하위 키의 권한에 의해 제어 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-182">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="0d068-183">또한 모든 하위 키 컨테이너는 (즉, 이러한를 포함할 수는 다른 하위 키) 하 여 영향을 받지 않습니다는 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-183">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="0d068-184">마지막으로 지정 하는 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> 플래그, 규칙의 유지 관리를 그렇지 않으면 호환 가능한 규칙의 조합을 사용 하 여 충돌 하므로 불필요 하 게 복잡해 집니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-184">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0d068-185">
            <paramref name="registryRights" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-185">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="0d068-186">-or-  <paramref name="type" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-186">-or-  <paramref name="type" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="0d068-187">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-187">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="0d068-188">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-188">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d068-189">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-189">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0d068-190">-or-  <paramref name="registryRights" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-190">-or-  <paramref name="registryRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d068-191">
            <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-191">
              <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="0d068-192">The name of the user or group the rule applies to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-192">The name of the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="0d068-193">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-193">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="0d068-194">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-194">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="0d068-195">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-195">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="0d068-196">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-196">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d068-197">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-197">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d068-198">레지스트리 키에 대 한 의미 있는 유일한 상속 플래그는 모든 레지스트리 키가 컨테이너는 <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-198">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="0d068-199">이 플래그를 지정 하지 않으면 전파 플래그 무시 되 고 직접 키만 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-199">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="0d068-200">플래그가 있는 경우에 다음 표에 나와 있는 것 처럼 규칙 전파 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-200">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="0d068-201">테이블 자식 하위 키가 CS 및 GS 손자 하위 키와 하위 키 S 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-201">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="0d068-202">즉, 손자 하위 키에 대 한 경로가 S\CS\GS입니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-202">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="0d068-203">전파 플래그</span><span class="sxs-lookup"><span data-stu-id="0d068-203">Propagation flags</span></span>|<span data-ttu-id="0d068-204">S</span><span class="sxs-lookup"><span data-stu-id="0d068-204">S</span></span>|<span data-ttu-id="0d068-205">CS</span><span class="sxs-lookup"><span data-stu-id="0d068-205">CS</span></span>|<span data-ttu-id="0d068-206">GS</span><span class="sxs-lookup"><span data-stu-id="0d068-206">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="0d068-207">X</span><span class="sxs-lookup"><span data-stu-id="0d068-207">X</span></span>|<span data-ttu-id="0d068-208">X</span><span class="sxs-lookup"><span data-stu-id="0d068-208">X</span></span>|<span data-ttu-id="0d068-209">X</span><span class="sxs-lookup"><span data-stu-id="0d068-209">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="0d068-210">X</span><span class="sxs-lookup"><span data-stu-id="0d068-210">X</span></span>|<span data-ttu-id="0d068-211">X</span><span class="sxs-lookup"><span data-stu-id="0d068-211">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="0d068-212">X</span><span class="sxs-lookup"><span data-stu-id="0d068-212">X</span></span>|<span data-ttu-id="0d068-213">X</span><span class="sxs-lookup"><span data-stu-id="0d068-213">X</span></span>|  
|<span data-ttu-id="0d068-214"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="0d068-214"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="0d068-215">X</span><span class="sxs-lookup"><span data-stu-id="0d068-215">X</span></span>||  
  
 <span data-ttu-id="0d068-216">손자 하위 키에 대 한 패턴에 포함 된 모든 하위 키를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-216">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="0d068-217">예를 들어 경우는 <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> 플래그가 지정 되어 `inheritanceFlags` 및 <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> 전파 플래그에 지정 된 `propagationFlags`,이 규칙이 직접 하위 키에 적용 되지 않습니다 되지만 모든 하위 키 및 모든 직계 자식 하위 키에 적용 하는 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-217">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d068-218">지정할 수는 있지만 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> 플래그에 대 한 `inheritanceFlags`, 그렇게 하는 이유가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-218">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="0d068-219">액세스 제어를 위해 하위 키에서 이름/값 쌍은 별개의 개체 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-219">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="0d068-220">이름/값 쌍에 대 한 액세스 권한은 하위 키의 권한에 의해 제어 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-220">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="0d068-221">또한 모든 하위 키 컨테이너는 (즉, 이러한를 포함할 수는 다른 하위 키) 하 여 영향을 받지 않습니다는 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-221">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="0d068-222">마지막으로 지정 하는 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> 플래그, 규칙의 유지 관리를 그렇지 않으면 호환 가능한 규칙의 조합을 사용 하 여 충돌 하므로 불필요 하 게 복잡해 집니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-222">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</span></span>  
  
 <span data-ttu-id="0d068-223">이 생성자는 만들기는 <xref:System.Security.Principal.NTAccount> 개체를 전달 하 여 `identity` 에 <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> 생성자 및 새로 만든 전달 <xref:System.Security.Principal.NTAccount> 개체를 <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AccessControlType%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-223">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d068-224">다음 코드 예제에서는 상속 및 전파 액세스 규칙을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-224">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="0d068-225">이 예에서는 만듭니다는 <xref:System.Security.AccessControl.RegistrySecurity> 개체를 로컬 폴더를 만들고 있는 두 개의 규칙을 추가 <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-225">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, and then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="0d068-226">첫 번째 규칙에 없는 전파 플래그는 있지만 두 번째에 <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> 및 <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-226">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="0d068-227">프로그램에 규칙을 표시는 <xref:System.Security.AccessControl.RegistrySecurity> 개체, 한 다음 사용 하는 <xref:System.Security.AccessControl.RegistrySecurity> 하위 키를 만들 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-227">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the <xref:System.Security.AccessControl.RegistrySecurity> object to create a subkey.</span></span> <span data-ttu-id="0d068-228">자식 하위 키와 손자 하위 키를 만들고 각 하위 키에 대 한 규칙을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-228">The program creates a child subkey and a grandchild subkey, and then displays the rules for each subkey.</span></span> <span data-ttu-id="0d068-229">마지막으로, 프로그램 테스트 키를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-229">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0d068-230">
            <paramref name="registryRights" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-230">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="0d068-231">-or-  <paramref name="type" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-231">-or-  <paramref name="type" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="0d068-232">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-232">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="0d068-233">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-233">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d068-234">
            <paramref name="eventRights" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-234">
              <paramref name="eventRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d068-235">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-235">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0d068-236">-or-  <paramref name="identity" /> is a zero-length string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-236">-or-  <paramref name="identity" /> is a zero-length string.</span>
          </span>
          <span data-ttu-id="0d068-237">-or-  <paramref name="identity" /> is longer than 512 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-237">-or-  <paramref name="identity" /> is longer than 512 characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAccessRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberSignature Language="F#" Value="member this.RegistryRights : System.Security.AccessControl.RegistryRights" Usage="System.Security.AccessControl.RegistryAccessRule.RegistryRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d068-238">Gets the rights allowed or denied by the access rule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-238">Gets the rights allowed or denied by the access rule.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d068-239">비트 조합 <see cref="T:System.Security.AccessControl.RegistryRights" /> 값 된 권한을 나타내는 허용 또는 액세스 규칙에 의해 거부 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d068-239">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied by the access rule.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d068-240"><xref:System.Security.AccessControl.RegistryAccessRule> 개체는 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-240"><xref:System.Security.AccessControl.RegistryAccessRule> objects are immutable.</span></span> <span data-ttu-id="0d068-241">다른 사용자, 서로 다른 권한을 또는 다른를 나타내는 새 액세스 규칙을 만들 수 있습니다 <xref:System.Security.AccessControl.AccessControlType>, 있지만 기존 액세스 규칙을 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0d068-241">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>