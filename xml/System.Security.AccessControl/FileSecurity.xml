<Type Name="FileSecurity" FullName="System.Security.AccessControl.FileSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9b2724afb2d643a5a4e51a85876bd0f33159a49" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30489217" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileSecurity : System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSecurity extends System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileSecurity&#xA;Inherits FileSystemSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSecurity sealed : System::Security::AccessControl::FileSystemSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.FileSystemSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>파일에 대한 액세스 제어 및 감사 보안을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSecurity> 시스템 파일과 액세스 시도 감사 하는 방법에 대 한 액세스 권한을 지정 하는 클래스입니다.  이 클래스는 규칙의 집합으로 액세스 및 감사 권한을 나타냅니다. 각 액세스 규칙으로 표시 됩니다는 <xref:System.Security.AccessControl.FileSystemAccessRule> 개체를 나타내는 각 감사 규칙이 동안는 <xref:System.Security.AccessControl.FileSystemAuditRule> 개체입니다.  
  
 <xref:System.Security.AccessControl.FileSecurity> 클래스는 기본 Microsoft Windows 파일 보안 시스템 추상화입니다. 이 시스템을 파일에 대 한 액세스를 제어 하는 임의 액세스 제어 목록 (DACL) 및 시스템 액세스 제어 목록 (SACL) 감사가 수행 되는 액세스 제어 시도 지정 하는 각 파일에 있습니다.  <xref:System.Security.AccessControl.FileSystemAccessRule> 및 <xref:System.Security.AccessControl.FileSystemAuditRule> 클래스는 Dacl과 Sacl을 구성 하는 액세스 제어 항목 (Ace)의 추상화 합니다.  
  
 <xref:System.Security.AccessControl.FileSecurity> 클래스를 숨기는 대부분의 Dacl과 Sacl 세부; ACE 순서를 지정 하거나 null DACL 걱정할 필요가 없습니다.  
  
 사용 하 여 <xref:System.Security.AccessControl.FileSecurity> 검색, 추가, DACL 및 파일의 SACL을 나타내는 액세스 규칙을 변경 하는 클래스입니다.  
  
 를 새로 추가 되거나 변경에 대 한 액세스를 유지 하거나 감사 파일에 대 한 규칙은 <xref:System.IO.FileInfo.SetAccessControl%2A> 메서드. 기존 파일에서 액세스 또는 감사 규칙을 검색하려면 <xref:System.IO.FileInfo.GetAccessControl%2A> 메서드를 사용합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Security.AccessControl.FileSecurity> 클래스를 추가 하 고 파일에서 액세스 제어 목록 (ACL) 항목을 제거 하십시오.  이 예제를 실행하려면 유효한 사용자 또는 그룹 계정을 제공해야 합니다.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Security.AccessControl.FileSecurity" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Security.AccessControl.FileSecurity" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 빈을 만들려고 할 때이 생성자를 사용 하 여 <xref:System.Security.AccessControl.FileSecurity> 기존 파일을 기반으로 하지 않는 개체입니다.  다음 파일에 적용을 액세스 제어 정보를 사용 하 여 개체를 채울 수 있습니다.  
  
 액세스 권한을 추가 하거나 감사 규칙 수는 <xref:System.Security.AccessControl.FileSecurity> 를 사용 하 여 개체는 <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> 메서드. 액세스 권한을 제거 하거나 감사를 사용 하 여 규칙 수는 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> 메서드.  
  
 를 새로 추가 되거나 변경에 대 한 액세스를 유지 하거나 감사 파일에 대 한 규칙은 <xref:System.IO.File.SetAccessControl%2A> 또는 <xref:System.IO.FileInfo.SetAccessControl%2A> 메서드.  액세스 또는 검색 하려면 감사 기존 파일에서 규칙을 사용 하 여는 <xref:System.IO.File.GetAccessControl%2A> 또는 <xref:System.IO.FileInfo.GetAccessControl%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Microsoft Windows 2000 이상이 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity (string fileName, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity(System::String ^ fileName, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <see cref="T:System.Security.AccessControl.FileSecurity" /> 개체를 만드는 데 사용할 파일의 위치입니다.</param>
        <param name="includeSections">검색할 ACL(액세스 제어 목록) 정보의 형식을 지정하는 <see cref="T:System.Security.AccessControl.AccessControlSections" /> 값 중 하나입니다.</param>
        <summary>
          <see cref="T:System.Security.AccessControl.FileSecurity" /> 열거형의 지정된 값을 사용하여 지정된 파일에서 <see cref="T:System.Security.AccessControl.AccessControlSections" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 지정된 된 파일에 대 한 액세스 제어 정보를 검색 하 고 다음 만듭니다는 <xref:System.Security.AccessControl.FileSecurity> 해당 정보를 캡슐화 하는 개체입니다.  있습니다 수 다음 검사, 추가 또는 지정된 된 파일에 대 한 액세스 제어 정보를 삭제 합니다.  
  
 액세스 권한을 추가 하거나 감사 규칙 수는 <xref:System.Security.AccessControl.FileSecurity> 를 사용 하 여 개체는 <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> 메서드. 액세스 권한을 제거 하거나 감사를 사용 하 여 규칙 수는 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> 메서드.  
  
 를 새로 추가 되거나 변경에 대 한 액세스를 유지 하거나 감사 파일에 대 한 규칙은 <xref:System.IO.File.SetAccessControl%2A> 또는 <xref:System.IO.FileInfo.SetAccessControl%2A> 메서드.  액세스 또는 검색 하려면 감사 기존 파일에서 규칙을 사용 하 여는 <xref:System.IO.File.GetAccessControl%2A> 또는 <xref:System.IO.FileInfo.GetAccessControl%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileName" /> 매개 변수가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="fileName" /> 매개 변수에 지정한 파일을 찾을 수 없는 경우</exception>
        <exception cref="T:System.IO.IOException">파일을 여는 동안 I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="path" />의 형식이 잘못되었습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.SEHException">
          <paramref name="fileName" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.PlatformNotSupportedException">현재 운영 체제가 Microsoft Windows 2000 이상이 아닌 경우</exception>
        <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다. 예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException">현재 시스템 계정에 관리자 권한이 없습니다.</exception>
        <exception cref="T:System.SystemException">파일을 찾을 수 없습니다.</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <paramref name="fileName" /> 매개 변수가 읽기 전용 파일을 지정합니다.  
  
 또는  
  
 현재 플랫폼이 해당 작업을 지원하지 않는 경우  
  
 또는  
  
 <paramref name="fileName" /> 매개 변수가 디렉터리를 지정합니다.  
  
 또는  
  
 호출자에게 필요한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">지정한 파일에 액세스할 수 있는 권한는 <paramref name="name" /> 매개 변수입니다. 연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> , <see cref="F:System.Security.AccessControl.AccessControlActions.View" />  
  
 보안 동작: 요청</permission>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" /> 생성자를 사용 하려면 현재 계정에 관리자 권한이 있어야 합니다. 새 인스턴스를 만드는 <see cref="T:System.Security.AccessControl.FileSecurity" /> 관리 권한이 사용 하지 않는 계정을 사용 하 여 특정 파일에 대 한 클래스는 <see cref="M:System.IO.FileStream.GetAccessControl" /> 메서드.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>