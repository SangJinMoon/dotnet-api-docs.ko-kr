<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObjectSecurity.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac528cc68a06a77599b75fdfa8d46df2264d5bccda9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28cc68a06a77599b75fdfa8d46df2264d5bccda9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs).</source>
          <target state="translated">ACL(액세스 제어 목록)을 직접 조작하지 않고 개체에 대한 액세스를 제어하는 기능을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>This class is the abstract base class for the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonObjectSecurity" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.DirectoryObjectSecurity" /&gt;</ph> classes.</source>
          <target state="translated">이 클래스는  <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonObjectSecurity" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.DirectoryObjectSecurity" /&gt;</ph> 클래스에 대한 추상 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> of the new <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonObjectSecurity" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonObjectSecurity" /&gt;</ph> 인스턴스의 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a container object.</source>
          <target state="translated">새 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체가 컨테이너 개체이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)">
          <source>True if the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a directory object.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체가 디렉터리 개체이면 true입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRightType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the securable object associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 보안 개체의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRightType">
          <source>The type of the securable object associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 보안 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The identity to which the access rule applies.</source>
          <target state="translated">액세스 규칙이 적용되는 ID입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>It must be an object that can be cast as a <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>으로 캐스팅할 수 있는 개체여야 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The access mask of this rule.</source>
          <target state="translated">이 규칙의 액세스 마스크입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</source>
          <target state="translated">액세스 마스크는 개별 통합자가 정의하는 의미에 해당하는 익명 비트의 32비트 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>true if this rule is inherited from a parent container.</source>
          <target state="translated">이 규칙이 부모 컨테이너에서 상속되면 true입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Specifies the inheritance properties of the access rule.</source>
          <target state="translated">액세스 규칙의 상속 속성을 지정합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Specifies whether inherited access rules are automatically propagated.</source>
          <target state="translated">상속된 액세스 규칙의 자동 전파 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The propagation flags are ignored if <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> is set to <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept>가 <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>으로 설정되면 전파 플래그는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Specifies the valid access control type.</source>
          <target state="translated">유효한 액세스 제어 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> class with the specified values.</source>
          <target state="translated">지정된 값을 사용하여 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> object that this method creates.</source>
          <target state="translated">이 메서드가 만드는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified">
          <source>Gets or sets a Boolean value that specifies whether the access rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object have been modified.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 액세스 규칙이 수정되었는지 여부를 지정하는 부울 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the access rules associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object have been modified; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 액세스 규칙이 수정되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 수정되지 않았으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object associated with the access rules of this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체의 액세스 규칙과 연결된 개체의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object must be an object that can be cast as a <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 개체는 <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> 개체로 캐스팅할 수 있는 개체여야 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType">
          <source>The type of the object associated with the access rules of this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체의 액세스 규칙과 연결된 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical">
          <source>Gets a Boolean value that specifies whether the access rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object are in canonical order.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 액세스 규칙이 정식 순서대로 되어 있는지 여부를 지정하는 부울 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the access rules are in canonical order; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">액세스 규칙이 정식 순서대로 되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않은 경우 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected">
          <source>Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is protected.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 DACL(임의 액세스 제어 목록)이 보호되는지 여부를 지정하는 부울 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the DACL is protected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">DACL 보호될 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 보호되지 않을 경우 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical">
          <source>Gets a Boolean value that specifies whether the audit rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object are in canonical order.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 감사 규칙이 정식 순서대로 되어 있는지 여부를 지정하는 부울 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the audit rules are in canonical order; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">감사 규칙이 정식 순서대로 되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않은 경우 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected">
          <source>Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is protected.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 SACL(시스템 액세스 제어 목록)이 보호되는지 여부를 지정하는 부울 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SACL is protected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">SACL 보호될 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 보호되지 않을 경우 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The identity to which the audit rule applies.</source>
          <target state="translated">감사 규칙이 적용되는 ID입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>It must be an object that can be cast as a <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>으로 캐스팅할 수 있는 개체여야 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The access mask of this rule.</source>
          <target state="translated">이 규칙의 액세스 마스크입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</source>
          <target state="translated">액세스 마스크는 개별 통합자가 정의하는 의미에 해당하는 익명 비트의 32비트 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this rule is inherited from a parent container.</source>
          <target state="translated">이 규칙이 부모 컨테이너에서 상속되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Specifies the inheritance properties of the audit rule.</source>
          <target state="translated">감사 규칙의 상속 속성을 지정합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Specifies whether inherited audit rules are automatically propagated.</source>
          <target state="translated">상속된 감사 규칙의 자동 전파 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The propagation flags are ignored if <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> is set to <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept>가 <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>으로 설정되면 전파 플래그는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Specifies the conditions for which the rule is audited.</source>
          <target state="translated">규칙의 감사 조건을 지정합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> class with the specified values.</source>
          <target state="translated">지정된 값을 사용하여 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> object that this method creates.</source>
          <target state="translated">이 메서드가 만드는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified">
          <source>Gets or sets a Boolean value that specifies whether the audit rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object have been modified.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 감사 규칙이 수정되었는지 여부를 지정하는 부울 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the audit rules associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object have been modified; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 감사 규칙이 수정되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 수정되지 않았으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object associated with the audit rules of this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체의 감사 규칙과 연결된 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object must be an object that can be cast as a <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 개체는 <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> 개체로 캐스팅할 수 있는 개체여야 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType">
          <source>The type of the object associated with the audit rules of this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체의 감사 규칙과 연결된 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)">
          <source>The owner for which to get the primary group.</source>
          <target state="translated">주 그룹을 가져올 소유자입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)">
          <source>Gets the primary group associated with the specified owner.</source>
          <target state="translated">지정된 소유자와 연결된 주 그룹을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)">
          <source>The primary group associated with the specified owner.</source>
          <target state="translated">지정된 소유자와 연결된 주 그룹입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source>The primary group for which to get the owner.</source>
          <target state="translated">소유자를 가져올 기본 그룹입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source>Gets the owner associated with the specified primary group.</source>
          <target state="translated">지정된 기본 그룹과 연결된 소유자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source>The owner associated with the specified group.</source>
          <target state="translated">지정된 그룹과 연결된 소유자입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source><ph id="ph1">&lt;paramref name="targetType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetType" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source><ph id="ph1">&lt;paramref name="targetType" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetType" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> 형식이 아닙니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source>Some or all identity references could not be translated.</source>
          <target state="translated">ID 참조의 일부 또는 전부를 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source>A Win32 error code was returned.</source>
          <target state="translated">Win32 오류 코드가 반환되었습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm">
          <source>Returns an array of byte values that represents the security descriptor information for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체에 대한 보안 설명자 정보를 나타내는 바이트 값 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm">
          <source>An array of byte values that represents the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체에 대한 보안 설명자를 나타내는 바이트 값 배열입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm">
          <source>This method returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no security information in this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체에 대한 보안 정보가 없으면 이 메서드는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm">
          <source>This method returns the security descriptor information currently in memory.</source>
          <target state="translated">이 메서드는 보안 설명자 정보가 메모리에 현재 반환합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm">
          <source>It does not retrieve information saved in permanent storage.</source>
          <target state="translated">영구 저장소에 저장 된 정보를 검색 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)">
          <source>Specifies which sections (access rules, audit rules, primary group, owner) of the security descriptor to get.</source>
          <target state="translated">가져올 보안 설명자의 섹션(액세스 규칙, 감사 규칙, 주 그룹, 소유자)을 지정합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)">
          <source>Returns the Security Descriptor Definition Language (SDDL) representation of the specified sections of the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 보안 설명자의 지정된 섹션의 SDDL(Security Descriptor Definition Language) 표시를 반환합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)">
          <source>The SDDL representation of the specified sections of the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 지정된 보안 설명자 섹션의 SDDL 표시입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.GroupModified">
          <source>Gets or sets a Boolean value that specifies whether the group associated with the securable object has been modified.</source>
          <target state="translated">보안 가능한 개체와 관련된 그룹이 수정되었는지 여부를 지정하는 부울 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.GroupModified">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the group associated with the securable object has been modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">보안 가능한 개체와 관련된 그룹이 수정되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.IsContainer">
          <source>Gets a Boolean value that specifies whether this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a container object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체가 컨테이너 개체인지 여부를 지정하는 부울 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.IsContainer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a container object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체가 컨테이너 개체이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 컨테이너 개체가 아니면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.IsDS">
          <source>Gets a Boolean value that specifies whether this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a directory object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체가 디렉터리 개체인지 여부를 지정하는 부울 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.IsDS">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a directory object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체가 디렉터리 개체이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported">
          <source>Returns a Boolean value that specifies whether the security descriptor associated with this  <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object can be converted to the Security Descriptor Definition Language (SDDL) format.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 보안 설명자를 SDDL(Security Descriptor Definition Language) 형식으로 변환할 수 있는지 여부를 지정하는 부울 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the security descriptor associated with this  <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object can be converted to the Security Descriptor Definition Language (SDDL) format; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 보안 설명자를 SDDL(Security Descriptor Definition Language) 형식으로 변환할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 변환할 수 없으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>The modification to apply to the DACL.</source>
          <target state="translated">DACL에 적용할 수정 내용입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>The access rule to modify.</source>
          <target state="translated">수정할 액세스 규칙입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the DACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">DACL이 수정되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체에 연결된 DACL(임의 Access Control 목록)에 지정된 수정 내용을 적용합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the DACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">DACL이 수정되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</source>
          <target state="translated">잘못 보안 주체에 대 한 액세스를 허용할를 방지 하려면 응용 프로그램 확인 해야 허용의 존재 여부에 대 한 모든 사용자 (ACE) 액세스 (AEFA) 액세스 제어 항목 전체 및 DACL을 수정 하기 전에 제거 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>The modification to apply to the DACL.</source>
          <target state="translated">DACL에 적용할 수정 내용입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>The access rule to modify.</source>
          <target state="translated">수정할 액세스 규칙입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the DACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">DACL이 수정되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체에 연결된 DACL(임의 Access Control 목록)에 지정된 수정 내용을 적용합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the DACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">DACL이 수정되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</source>
          <target state="translated">잘못 보안 주체에 대 한 액세스를 허용할를 방지 하려면 응용 프로그램 확인 해야 허용의 존재 여부에 대 한 모든 사용자 (ACE) 액세스 (AEFA) 액세스 제어 항목 전체 및 DACL을 수정 하기 전에 제거 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>The modification to apply to the SACL.</source>
          <target state="translated">SACL에 적용할 수정 내용입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>The audit rule to modify.</source>
          <target state="translated">수정할 감사 규칙입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">SACL이 성공적으로 수정되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>Applies the specified modification to the System Access Control List (SACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체에 연결된 SACL(시스템 액세스 제어 목록)에 지정된 수정 내용을 적용합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">SACL이 성공적으로 수정되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>The modification to apply to the SACL.</source>
          <target state="translated">SACL에 적용할 수정 내용입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>The audit rule to modify.</source>
          <target state="translated">수정할 감사 규칙입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">SACL이 성공적으로 수정되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>Applies the specified modification to the System Access Control List (SACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체에 연결된 SACL(시스템 액세스 제어 목록)에 지정된 수정 내용을 적용합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">SACL이 성공적으로 수정되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.OwnerModified">
          <source>Gets or sets a Boolean value that specifies whether the owner of the securable object has been modified.</source>
          <target state="translated">보안 개체의 소유자가 수정되었는지 여부를 지정하는 부울 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.OwnerModified">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the owner of the securable object has been modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">보안 개체의 소유자가 수정되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 수정되지 않았으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Protected methods that save the security descriptor information in this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체의 보안 설명자 정보를 영구 저장소에 저장하는 보호된 메서드입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>The handle used to retrieve the persisted information.</source>
          <target state="translated">보관된 정보를 검색하는 데 사용되는 핸들입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</source>
          <target state="translated">저장할 보안 개체의 보안 설명자(액세스 규칙, 감사 규칙, 소유자, 주 그룹) 섹션을 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>Saves the specified sections of the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 보안 설명자의 지정된 섹션을 영구 저장소에 저장합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>We recommend that the values of the <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> parameters passed to the constructor and persist methods be identical.</source>
          <target state="translated">생성자와 persist 메서드에는 동일한 <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> 매개 변수 값을 전달하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>When persisting a <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, if the value of the <ph id="ph2">`includeSections`</ph> parameter passed to the <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is not identical to the value of the <ph id="ph4">`includeSections`</ph> parameter passed to the constructor used to create that <ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, sections of the persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object can contain unpredictable values.</source>
          <target state="translated">지속할 때는 <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> 경우 개체의 값은 <ph id="ph2">`includeSections`</ph> 에 전달 된 매개 변수는 <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> 방법은의 값과 동일는 <ph id="ph4">`includeSections`</ph> 매개 변수를 만드는 데 생성자에 전달 <ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> 개체, 섹션 유지 되 <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> 개체 예측할 수 없는 값을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>For example, if a constructor is called with an <ph id="ph1">`includeSections`</ph> value of <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>, and later a <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is called on that object with an <ph id="ph4">`includeSections`</ph> value of <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>, the resulting persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object will contain unpredictable values for its audit rules, group, and owner.</source>
          <target state="translated">예를 들어, 생성자로 호출 되 면는 <ph id="ph1">`includeSections`</ph> 값 <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>, 이상는 <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> 메서드가 사용 하 여 개체에서 호출 되는 <ph id="ph4">`includeSections`</ph> 값 <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>, 유지 되는 <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> 개체가 포함 됩니다 감사 규칙, 그룹 및 소유자 예측할 수 없는 값입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The name used to retrieve the persisted information.</source>
          <target state="translated">보관된 정보를 검색하는 데 사용되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</source>
          <target state="translated">저장할 보안 개체의 보안 설명자(액세스 규칙, 감사 규칙, 소유자, 주 그룹) 섹션을 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Saves the specified sections of the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 보안 설명자의 지정된 섹션을 영구 저장소에 저장합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>We recommend that the values of the <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> parameters passed to the constructor and persist methods be identical.</source>
          <target state="translated">생성자와 persist 메서드에는 동일한 <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> 매개 변수 값을 전달하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>When persisting a <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, if the value of the <ph id="ph2">`includeSections`</ph> parameter passed to the <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is not identical to the value of the <ph id="ph4">`includeSections`</ph> parameter passed to the constructor used to create that <ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, sections of the persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object can contain unpredictable values.</source>
          <target state="translated">지속할 때는 <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> 경우 개체의 값은 <ph id="ph2">`includeSections`</ph> 에 전달 된 매개 변수는 <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> 방법은의 값과 동일는 <ph id="ph4">`includeSections`</ph> 매개 변수를 만드는 데 생성자에 전달 <ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> 개체, 섹션 유지 되 <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> 개체 예측할 수 없는 값을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>For example, if a constructor is called with an <ph id="ph1">`includeSections`</ph> value of <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>, and later a <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is called on that object with an <ph id="ph4">`includeSections`</ph> value of <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>, the resulting persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object will contain unpredictable values for its audit rules, group, and owner.</source>
          <target state="translated">예를 들어, 생성자로 호출 되 면는 <ph id="ph1">`includeSections`</ph> 값 <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>, 이상는 <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> 메서드가 사용 하 여 개체에서 호출 되는 <ph id="ph4">`includeSections`</ph> 값 <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>, 유지 되는 <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> 개체가 포함 됩니다 감사 규칙, 그룹 및 소유자 예측할 수 없는 값입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable the privilege that allows the caller to take ownership of the object.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>는 호출자가 개체의 소유권을 가질 수 있는 권한을 사용하도록 설정합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The name used to retrieve the persisted information.</source>
          <target state="translated">보관된 정보를 검색하는 데 사용되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</source>
          <target state="translated">저장할 보안 개체의 보안 설명자(액세스 규칙, 감사 규칙, 소유자, 주 그룹) 섹션을 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Saves the specified sections of the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 보안 설명자의 지정된 섹션을 영구 저장소에 저장합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>We recommend that the values of the <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> parameters passed to the constructor and persist methods be identical.</source>
          <target state="translated">생성자와 persist 메서드에는 동일한 <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> 매개 변수 값을 전달하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>When persisting a <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, if the value of the <ph id="ph2">`includeSections`</ph> parameter passed to the <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is not identical to the value of the <ph id="ph4">`includeSections`</ph> parameter passed to the constructor used to create that <ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, sections of the persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object can contain unpredictable values.</source>
          <target state="translated">지속할 때는 <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> 경우 개체의 값은 <ph id="ph2">`includeSections`</ph> 에 전달 된 매개 변수는 <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> 방법은의 값과 동일는 <ph id="ph4">`includeSections`</ph> 매개 변수를 만드는 데 생성자에 전달 <ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> 개체, 섹션 유지 되 <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> 개체 예측할 수 없는 값을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>For example, if a constructor is called with an <ph id="ph1">`includeSections`</ph> value of <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>, and later a <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is called on that object with an <ph id="ph4">`includeSections`</ph> value of <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>, the resulting persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object will contain unpredictable values for its audit rules, group, and owner.</source>
          <target state="translated">예를 들어, 생성자로 호출 되 면는 <ph id="ph1">`includeSections`</ph> 값 <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>, 이상는 <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> 메서드가 사용 하 여 개체에서 호출 되는 <ph id="ph4">`includeSections`</ph> 값 <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>, 유지 되는 <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> 개체가 포함 됩니다 감사 규칙, 그룹 및 소유자 예측할 수 없는 값입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> for which to remove all access rules.</source>
          <target state="translated">모든 액세스 규칙을 제거할 <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
          <source>Removes all access rules associated with the specified <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>와 연결된 모든 액세스 규칙을 제거합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
          <source>All access rules are not in canonical order.</source>
          <target state="translated">모든 액세스 규칙이 정식 순서로 되어 있는 것은 아닙니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> for which to remove all audit rules.</source>
          <target state="translated">모든 감사 규칙을 제거한 <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
          <source>Removes all audit rules associated with the specified <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>와 연결된 모든 감사 규칙을 제거합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
          <source>All audit rules are not in canonical order.</source>
          <target state="translated">모든 감사 규칙이 정식 순서로 되어 있는 것은 아닙니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ReadLock">
          <source>Locks this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object for read access.</source>
          <target state="translated">읽기 권한을 위해 이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체를 잠급니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ReadUnlock">
          <source>Unlocks this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object for read access.</source>
          <target state="translated">읽기 권한을 위해 이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체의 잠금을 해제합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to protect the access rules associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from inheritance; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to allow inheritance.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 액세스 규칙이 상속되지 않도록 보호하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 상속을 허용하려면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve inherited access rules; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to remove inherited access rules.</source>
          <target state="translated">상속된 액세스 규칙을 보존하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 상속된 액세스 규칙을 제거하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source>This parameter is ignored if <bpt id="p1">&lt;c&gt;</bpt>isProtected<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>isProtected<ept id="p1">&lt;/c&gt;</ept>가 <ph id="ph1">&lt;see langword="false" /&gt;</ph>이면 이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source>Sets or removes protection of the access rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 액세스 규칙의 보호를 설정하거나 제거합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source>Protected access rules cannot be modified by parent objects through inheritance.</source>
          <target state="translated">보호된 액세스 규칙은 상속을 통해 부모 개체에서 수정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source>This method attempts to remove inherited rules from a non-canonical Discretionary Access Control List (DACL).</source>
          <target state="translated">이 메서드는 정식이 아닌 DACL(임의 액세스 제어 목록)에서 상속된 규칙을 제거하려고 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to protect the audit rules associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from inheritance; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to allow inheritance.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 감사 규칙이 상속되지 않도록 보호하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 상속을 허용하려면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve inherited audit rules; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to remove inherited audit rules.</source>
          <target state="translated">상속된 감사 규칙을 보존하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 상속된 감사 규칙을 제거하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source>This parameter is ignored if <bpt id="p1">&lt;c&gt;</bpt>isProtected<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>isProtected<ept id="p1">&lt;/c&gt;</ept>가 <ph id="ph1">&lt;see langword="false" /&gt;</ph>이면 이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source>Sets or removes protection of the audit rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 감사 규칙의 보호를 설정하거나 제거합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source>Protected audit rules cannot be modified by parent objects through inheritance.</source>
          <target state="translated">보호된 감사 규칙은 상속을 통해 부모 개체에서 수정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source>This method attempts to remove inherited rules from a non-canonical System Access Control List (SACL).</source>
          <target state="translated">이 메서드는 정식이 아닌 SACL(시스템 액세스 제어 목록)에서 상속된 규칙을 제거하려고 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)">
          <source>The primary group to set.</source>
          <target state="translated">설정할 주 그룹입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)">
          <source>Sets the primary group for the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 보안 설명자의 주 그룹을 설정합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)">
          <source>The owner to set.</source>
          <target state="translated">설정할 소유자입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)">
          <source>Sets the owner for the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체와 연결된 보안 설명자의 소유자를 설정합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Sets the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified binary data.</source>
          <target state="translated">지정한 이진 데이터에서 이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체의 보안 설명자를 설정합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>If the security descriptor represented by the binary data contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">보안 설명자를 나타내는 이진 데이터를 포함 하는 경우 <ph id="ph1">`null`</ph> 의 임의 액세스 제어 목록 (DACL) 모든 단일 액세스 제어 항목 (ACE)에 대 한 모든 권한 (AEFA) DACL에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">응용 프로그램 AEFA ACE는 추가 된 보안 설명자의 DACL를 수정할 경우 해당 DACL 유지 되 면 AEFA ACE DACL 함께 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">이 의도 하지 않게 보안 주체에 대 한 액세스를 허용 하는 응용 프로그램에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">이 인해 응용 프로그램의 AEFA ACE의 존재 여부 확인 하 고 보안 설명자를 수정 하기 전에 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>The array of bytes from which to set the security descriptor.</source>
          <target state="translated">보안 설명자를 설정할 원본 바이트의 배열입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>Sets the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified array of byte values.</source>
          <target state="translated">지정된 바이트 값 배열에서 이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체에 대한 보안 설명자를 설정합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>If the security descriptor represented by the binary data contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">보안 설명자를 나타내는 이진 데이터를 포함 하는 경우 <ph id="ph1">`null`</ph> 의 임의 액세스 제어 목록 (DACL) 모든 단일 액세스 제어 항목 (ACE)에 대 한 모든 권한 (AEFA) DACL에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">응용 프로그램 AEFA ACE는 추가 된 보안 설명자의 DACL를 수정할 경우 해당 DACL 유지 되 면 AEFA ACE DACL 함께 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">이 의도 하지 않게 보안 주체에 대 한 액세스를 허용 하는 응용 프로그램에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">이 인해 응용 프로그램의 AEFA ACE의 존재 여부 확인 하 고 보안 설명자를 수정 하기 전에 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>The array of bytes from which to set the security descriptor.</source>
          <target state="translated">보안 설명자를 설정할 원본 바이트의 배열입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.</source>
          <target state="translated">설정할 보안 설명자의 섹션(액세스 규칙, 감사 규칙, 소유자, 기본 그룹)입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>Sets the specified sections of the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified array of byte values.</source>
          <target state="translated">지정된 바이트 값 배열에서 이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체에 대한 보안 설명자의 지정된 섹션을 설정합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>If the security descriptor represented by the binary data contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">보안 설명자를 나타내는 이진 데이터를 포함 하는 경우 <ph id="ph1">`null`</ph> 의 임의 액세스 제어 목록 (DACL) 모든 단일 액세스 제어 항목 (ACE)에 대 한 모든 권한 (AEFA) DACL에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">응용 프로그램 AEFA ACE는 추가 된 보안 설명자의 DACL를 수정할 경우 해당 DACL 유지 되 면 AEFA ACE DACL 함께 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">이 의도 하지 않게 보안 주체에 대 한 액세스를 허용 하는 응용 프로그램에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">이 인해 응용 프로그램의 AEFA ACE의 존재 여부 확인 하 고 보안 설명자를 수정 하기 전에 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Sets the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified Security Descriptor Definition Language (SDDL) string.</source>
          <target state="translated">지정된 SDDL(보안 설명자 정의 언어) 문자열이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph>에 대한 보안 설명자의 지정된 섹션을 설정합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>If the security descriptor represented by the SDDL string contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">SDDL 문자열로 표현 된 보안 설명자를 포함 하는 경우 <ph id="ph1">`null`</ph> 의 임의 액세스 제어 목록 (DACL) 모든 단일 액세스 제어 항목 (ACE)에 대 한 모든 권한 (AEFA) DACL에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">응용 프로그램 AEFA ACE는 추가 된 보안 설명자의 DACL를 수정할 경우 해당 DACL 유지 되 면 AEFA ACE DACL 함께 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">이 의도 하지 않게 보안 주체에 대 한 액세스를 허용 하는 응용 프로그램에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">이 인해 응용 프로그램의 AEFA ACE의 존재 여부 확인 하 고 보안 설명자를 수정 하기 전에 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>The SDDL string from which to set the security descriptor.</source>
          <target state="translated">보안 설명자를 설정할 원본 SDDL 문자열입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>Sets the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified Security Descriptor Definition Language (SDDL) string.</source>
          <target state="translated">지정된 SDDL(보안 설명자 정의 언어) 문자열이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph>에 대한 보안 설명자의 지정된 섹션을 설정합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>If the security descriptor represented by the SDDL string contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">SDDL 문자열로 표현 된 보안 설명자를 포함 하는 경우 <ph id="ph1">`null`</ph> 의 임의 액세스 제어 목록 (DACL) 모든 단일 액세스 제어 항목 (ACE)에 대 한 모든 권한 (AEFA) DACL에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">응용 프로그램 AEFA ACE는 추가 된 보안 설명자의 DACL를 수정할 경우 해당 DACL 유지 되 면 AEFA ACE DACL 함께 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">이 의도 하지 않게 보안 주체에 대 한 액세스를 허용 하는 응용 프로그램에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">이 인해 응용 프로그램의 AEFA ACE의 존재 여부 확인 하 고 보안 설명자를 수정 하기 전에 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The SDDL string from which to set the security descriptor.</source>
          <target state="translated">보안 설명자를 설정할 원본 SDDL 문자열입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.</source>
          <target state="translated">설정할 보안 설명자의 섹션(액세스 규칙, 감사 규칙, 소유자, 기본 그룹)입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Sets the specified sections of the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified Security Descriptor Definition Language (SDDL) string.</source>
          <target state="translated">지정된 SDDL(보안 설명자 정의 언어) 문자열이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph>에 대한 보안 설명자의 지정된 섹션을 설정합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>If the security descriptor represented by the SDDL string contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">SDDL 문자열로 표현 된 보안 설명자를 포함 하는 경우 <ph id="ph1">`null`</ph> 의 임의 액세스 제어 목록 (DACL) 모든 단일 액세스 제어 항목 (ACE)에 대 한 모든 권한 (AEFA) DACL에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">응용 프로그램 AEFA ACE는 추가 된 보안 설명자의 DACL를 수정할 경우 해당 DACL 유지 되 면 AEFA ACE DACL 함께 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">이 의도 하지 않게 보안 주체에 대 한 액세스를 허용 하는 응용 프로그램에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">이 인해 응용 프로그램의 AEFA ACE의 존재 여부 확인 하 고 보안 설명자를 수정 하기 전에 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.WriteLock">
          <source>Locks this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object for write access.</source>
          <target state="translated">쓰기 권한용으로 이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체를 잠급니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.WriteUnlock">
          <source>Unlocks this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object for write access.</source>
          <target state="translated">쓰기 권한을 위해 이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 개체의 잠금을 해제합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>