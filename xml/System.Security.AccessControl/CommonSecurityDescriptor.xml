<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CommonSecurityDescriptor.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a5ae9e2a22a909613abf30f4a4f8020972658d7f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5ae9e2a22a909613abf30f4a4f8020972658d7f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.CommonSecurityDescriptor">
          <source>Represents a security descriptor.</source>
          <target state="translated">보안 설명자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.CommonSecurityDescriptor">
          <source>A security descriptor includes an owner, a primary group, a Discretionary Access Control List (DACL), and a System Access Control List (SACL).</source>
          <target state="translated">보안 설명자에 소유자, 기본 그룹, DACL(임의 액세스 제어 목록) 및 SACL(시스템 액세스 제어 목록)이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.CommonSecurityDescriptor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new security descriptor is associated with a container object.</source>
          <target state="translated">새 보안 설명자가 컨테이너 개체와 관련되어 있는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new security descriptor is associated with a directory object.</source>
          <target state="translated">새 보안 설명자가 디렉터리 개체와 관련되어 있는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /&gt;</ph> object from which to create the new <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /&gt;</ph> 개체를 만들 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> class from the specified <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체에서 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)">
          <source>If the underlying security descriptor from which the new <ph id="ph1">&lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</ph> object is created contains <ph id="ph2">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">하는 경우 기본 보안 설명자를 새 <ph id="ph1">&lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</ph> 개체가 만들어질 포함 <ph id="ph2">`null`</ph> 의 임의 액세스 제어 목록 (DACL) 모든 단일 액세스 제어 항목 (ACE)에 대 한 모든 권한 (AEFA) DACL에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">응용 프로그램 AEFA ACE는 추가 된 보안 설명자의 DACL를 수정할 경우 해당 DACL 유지 되 면 AEFA ACE DACL 함께 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">이 의도 하지 않게 보안 주체에 대 한 액세스를 허용 하는 응용 프로그램에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">이 인해 응용 프로그램의 AEFA ACE의 존재 여부 확인 하 고 보안 설명자를 수정 하기 전에 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new security descriptor is associated with a container object.</source>
          <target state="translated">새 보안 설명자가 컨테이너 개체와 관련되어 있는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new security descriptor is associated with a directory object.</source>
          <target state="translated">새 보안 설명자가 디렉터리 개체와 관련되어 있는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)">
          <source>The SDDL string from which to create the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체를 만들 SDDL 문자열입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> class from the specified Security Descriptor Definition Language (SDDL) string.</source>
          <target state="translated">지정한 SDDL(Security Descriptor Definition Language) 문자열에서 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)">
          <source>If the underlying security descriptor from which the new <ph id="ph1">&lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</ph> object is created contains <ph id="ph2">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">하는 경우 기본 보안 설명자를 새 <ph id="ph1">&lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</ph> 개체가 만들어질 포함 <ph id="ph2">`null`</ph> 의 임의 액세스 제어 목록 (DACL) 모든 단일 액세스 제어 항목 (ACE)에 대 한 모든 권한 (AEFA) DACL에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">응용 프로그램 AEFA ACE는 추가 된 보안 설명자의 DACL를 수정할 경우 해당 DACL 유지 되 면 AEFA ACE DACL 함께 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">이 의도 하지 않게 보안 주체에 대 한 액세스를 허용 하는 응용 프로그램에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">이 인해 응용 프로그램의 AEFA ACE의 존재 여부 확인 하 고 보안 설명자를 수정 하기 전에 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new security descriptor is associated with a container object.</source>
          <target state="translated">새 보안 설명자가 컨테이너 개체와 관련되어 있는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new security descriptor is associated with a directory object.</source>
          <target state="translated">새 보안 설명자가 디렉터리 개체와 관련되어 있는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source>The array of byte values from which to create the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체를 만들 바이트 값 배열입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source>The offset in the <bpt id="p1">&lt;c&gt;</bpt>binaryForm<ept id="p1">&lt;/c&gt;</ept> array at which to begin copying.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>binaryForm<ept id="p1">&lt;/c&gt;</ept> 배열에서 복사를 시작할 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> class from the specified array of byte values.</source>
          <target state="translated">지정된 바이트 값 배열을 사용하여 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source>If the underlying security descriptor from which the new <ph id="ph1">&lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</ph> object is created contains <ph id="ph2">`null`</ph> for its discretionary access control list (DACL),a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">하는 경우 기본 보안 설명자를 새 <ph id="ph1">&lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</ph> 개체가 만들어질 포함 <ph id="ph2">`null`</ph> 의 임의 액세스 제어 목록 (DACL) 모든 단일 액세스 제어 항목 (ACE)에 대 한 모든 권한 (AEFA) DACL에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">응용 프로그램 AEFA ACE는 추가 된 보안 설명자의 DACL를 수정할 경우 해당 DACL 유지 되 면 AEFA ACE DACL 함께 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">이 의도 하지 않게 보안 주체에 대 한 액세스를 허용 하는 응용 프로그램에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">이 인해 응용 프로그램의 AEFA ACE의 존재 여부 확인 하 고 보안 설명자를 수정 하기 전에 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new security descriptor is associated with a container object.</source>
          <target state="translated">새 보안 설명자가 컨테이너 개체와 관련되어 있는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new security descriptor is associated with a directory object.</source>
          <target state="translated">새 보안 설명자가 디렉터리 개체와 관련되어 있는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>Flags that specify behavior of the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체의 동작을 지정하는 플래그입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>The owner for the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체의 소유자입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>The primary group for the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체의 주 그룹입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>The System Access Control List (SACL) for the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체의 SACL(시스템 액세스 제어 목록)입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>The Discretionary Access Control List (DACL) for the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체의 DACL(임의 액세스 제어 목록)입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> class from the specified information.</source>
          <target state="translated">지정된 정보에서 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>If the underlying security descriptor from which the new <ph id="ph1">&lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</ph> object is created contains <ph id="ph2">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">하는 경우 기본 보안 설명자를 새 <ph id="ph1">&lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</ph> 개체가 만들어질 포함 <ph id="ph2">`null`</ph> 의 임의 액세스 제어 목록 (DACL) 모든 단일 액세스 제어 항목 (ACE)에 대 한 모든 권한 (AEFA) DACL에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">응용 프로그램 AEFA ACE는 추가 된 보안 설명자의 DACL를 수정할 경우 해당 DACL 유지 되 면 AEFA ACE DACL 함께 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">이 의도 하지 않게 보안 주체에 대 한 액세스를 허용 하는 응용 프로그램에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">이 인해 응용 프로그램의 AEFA ACE의 존재 여부 확인 하 고 보안 설명자를 수정 하기 전에 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)">
          <source>The revision level of the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DiscretionaryAcl" /&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DiscretionaryAcl" /&gt;</ph> 개체의 수정 수준입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)">
          <source>The number of Access Control Entries (ACEs) this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DiscretionaryAcl" /&gt;</ph> object can contain.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DiscretionaryAcl" /&gt;</ph> 개체에 포함될 수 있는 ACE(액세스 제어 항목)의 수입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)">
          <source>This number is to be used only as a hint.</source>
          <target state="translated">이 번호는 힌트로만 사용됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl" /&gt;</ph> property for this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> instance and sets the <ph id="ph3">&lt;see cref="F:System.Security.AccessControl.ControlFlags.DiscretionaryAclPresent" /&gt;</ph> flag.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 인스턴스에 <ph id="ph1">&lt;see cref="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl" /&gt;</ph> 속성을 설정하고 <ph id="ph3">&lt;see cref="F:System.Security.AccessControl.ControlFlags.DiscretionaryAclPresent" /&gt;</ph> 플래그를 설정합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)">
          <source>The constructor for the <ph id="ph1">&lt;xref:System.Security.AccessControl.DiscretionaryAcl&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A&gt;</ph> properties for this <ph id="ph4">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor&gt;</ph>.</source>
          <target state="translated">에 대 한 생성자는 <ph id="ph1">&lt;xref:System.Security.AccessControl.DiscretionaryAcl&gt;</ph> 사용 하 여는 <ph id="ph2">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A&gt;</ph> 이 대 한 속성 <ph id="ph4">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)">
          <source>The revision level of the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SystemAcl" /&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SystemAcl" /&gt;</ph> 개체의 수정 수준입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl" /&gt;</ph> property for this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> instance and sets the <ph id="ph3">&lt;see cref="F:System.Security.AccessControl.ControlFlags.SystemAclPresent" /&gt;</ph> flag.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 인스턴스에 <ph id="ph1">&lt;see cref="P:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl" /&gt;</ph> 속성을 설정하고 <ph id="ph3">&lt;see cref="F:System.Security.AccessControl.ControlFlags.SystemAclPresent" /&gt;</ph> 플래그를 설정합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)">
          <source>The constructor for the <ph id="ph1">&lt;xref:System.Security.AccessControl.SystemAcl&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A&gt;</ph> properties for this <ph id="ph4">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor&gt;</ph>.</source>
          <target state="translated">에 대 한 생성자는 <ph id="ph1">&lt;xref:System.Security.AccessControl.SystemAcl&gt;</ph> 사용 하 여는 <ph id="ph2">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A&gt;</ph> 이 대 한 속성 <ph id="ph4">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags">
          <source>Gets values that specify behavior of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체의 동작을 지정하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags">
          <source>One or more values of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ControlFlags" /&gt;</ph> enumeration combined with a logical OR operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ControlFlags" /&gt;</ph> 열거형의 하나 이상의 값이 논리적 OR 연산에 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl">
          <source>Gets or sets the discretionary access control list (DACL) for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체의 DACL(임의 액세스 제어 목록)을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl">
          <source>The DACL contains access rules.</source>
          <target state="translated">DACL에는 액세스 규칙이 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl">
          <source>The DACL for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체의 DACL입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl">
          <source>If this property is set to <ph id="ph1">`null`</ph>, a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">이 속성은로 설정 하는 경우 <ph id="ph1">`null`</ph>, 모든 권한 (AEFA) DACL에 추가 되 고 모든 단일 액세스 제어 항목 (ACE).</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">응용 프로그램 AEFA ACE는 추가 된 보안 설명자의 DACL를 수정할 경우 해당 DACL 유지 되 면 AEFA ACE DACL 함께 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">이 의도 하지 않게 보안 주체에 대 한 액세스를 허용 하는 응용 프로그램에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">이 인해 응용 프로그램의 AEFA ACE의 존재 여부 확인 하 고 보안 설명자를 수정 하기 전에 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.Group">
          <source>Gets or sets the primary group for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체에 대한 주 그룹을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.Group">
          <source>The primary group for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체에 대한 주 그룹입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer">
          <source>Gets a Boolean value that specifies whether the object associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object is a container object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체와 관련된 개체가 컨테이너 개체인지 여부를 지정하는 부울 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object is a container object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체와 관련된 개체가 컨테이너 개체이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical">
          <source>Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object is in canonical order.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체와 관련된 DACL(임의 액세스 제어 목록)이 정식 순서대로 되어 있는지 여부를 지정하는 부울 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the DACL associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object is in canonical order; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체와 관련된 DACL이 정식 순서대로 되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.IsDS">
          <source>Gets a Boolean value that specifies whether the object associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object is a directory object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체와 관련된 개체가 디렉터리 개체인지 여부를 지정하는 부울 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.IsDS">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object is a directory object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체와 관련된 개체가 디렉터리 개체이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical">
          <source>Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object is in canonical order.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체와 관련된 SACL(시스템 액세스 제어 목록)이 정식 순서대로 되어 있는지 여부를 지정하는 부울 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SACL associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object is in canonical order; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체와 관련된 SACL이 정식 순서대로 되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.Owner">
          <source>Gets or sets the owner of the object associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체와 연결된 개체의 소유자를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.Owner">
          <source>The owner of the object associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체와 연결된 개체의 소유자입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)">
          <source>The security identifier for which to remove access rules.</source>
          <target state="translated">액세스 규칙을 제거할 보안 식별자입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)">
          <source>Removes all access rules for the specified security identifier from the Discretionary Access Control List (DACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체와 관련된 DACL(임의 액세스 제어 목록)에서 지정된 보안 식별자에 대한 모든 액세스 규칙을 제거합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)">
          <source>To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</source>
          <target state="translated">잘못 보안 주체에 대 한 액세스를 허용할를 방지 하려면 응용 프로그램 확인 해야 허용의 존재 여부에 대 한 모든 사용자 (ACE) 액세스 (AEFA) 액세스 제어 항목 전체 및 DACL을 수정 하기 전에 제거 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(System.Security.Principal.SecurityIdentifier)">
          <source>The security identifier for which to remove audit rules.</source>
          <target state="translated">감사 규칙을 제거할 보안 식별자입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(System.Security.Principal.SecurityIdentifier)">
          <source>Removes all audit rules for the specified security identifier from the System Access Control List (SACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체와 관련된 SACL(시스템 액세스 제어 목록)에서 지정된 보안 식별자에 대한 모든 감사 규칙을 제거합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to protect the DACL from inheritance.</source>
          <target state="translated">상속으로부터 DACL을 보호하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to keep inherited access rules in the DACL; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to remove inherited access rules from the DACL.</source>
          <target state="translated">DACL에 상속된 액세스 규칙을 유지하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, DACL에서 상속된 액세스 규칙을 제거하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)">
          <source>Sets the inheritance protection for the Discretionary Access Control List (DACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체와 관련된 DACL(임의 액세스 제어 목록)에 대해 상속 보호를 설정합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)">
          <source>DACLs that are protected do not inherit access rules from parent containers.</source>
          <target state="translated">보호된 DACL은 부모 컨테이너에서 액세스 규칙을 상속하지 않습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to protect the SACL from inheritance.</source>
          <target state="translated">상속으로부터 SACL을 보호하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to keep inherited audit rules in the SACL; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to remove inherited audit rules from the SACL.</source>
          <target state="translated">SACL에 상속된 감사 규칙을 유지하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, SACL에서 상속된 감사 규칙을 제거하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)">
          <source>Sets the inheritance protection for the System Access Control List (SACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체와 관련된 SACL(시스템 액세스 제어 목록)에 대해 상속 보호를 설정합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)">
          <source>SACLs that are protected do not inherit audit rules from parent containers.</source>
          <target state="translated">보호된 SACL은 부모 컨테이너에서 감사 규칙을 상속하지 않습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl">
          <source>Gets or sets the System Access Control List (SACL) for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체의 SACL(시스템 액세스 제어 목록)을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl">
          <source>The SACL contains audit rules.</source>
          <target state="translated">SACL에는 감사 규칙이 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl">
          <source>The SACL for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 개체의 SACL입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>