<Type Name="EventWaitHandleAccessRule" FullName="System.Security.AccessControl.EventWaitHandleAccessRule">
  <TypeSignature Language="C#" Value="public sealed class EventWaitHandleAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventWaitHandleAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.EventWaitHandleAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventWaitHandleAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWaitHandleAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="170b8-101">사용자 또는 그룹에 대해 허용 또는 거부된 액세스 권한 집합을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-101">Represents a set of access rights allowed or denied for a user or group.</span></span> <span data-ttu-id="170b8-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170b8-103"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> 클래스는 명명 된 시스템 이벤트에 대 한 Windows 액세스 제어 보안을 관리 하기 위한.NET Framework가 제공 하는 클래스 집합 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-103">The <xref:System.Security.AccessControl.EventWaitHandleAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system events.</span></span> <span data-ttu-id="170b8-104">이러한 클래스와의 관계는 기본 Windows 액세스 제어 구조를의 개요를 참조 하십시오. <xref:System.Security.AccessControl.EventWaitHandleSecurity>합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.EventWaitHandleSecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="170b8-105">Windows 액세스 제어 보안은 명명 된 시스템 이벤트에 대해서만 의미가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-105">Windows access control security is meaningful only for named system events.</span></span> <span data-ttu-id="170b8-106">경우는 <xref:System.Threading.EventWaitHandle> 개체가 로컬 이벤트를 나타내는 액세스 제어는 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-106">If an <xref:System.Threading.EventWaitHandle> object represents a local event, access control is irrelevant.</span></span>  
  
 <span data-ttu-id="170b8-107">명명된 된 이벤트에 현재 적용 된 규칙 목록이 사용는 <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> 가져올 메서드를 한 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 개체를 사용 하 여 해당 <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> 메서드의 컬렉션을 가져옵니다 <xref:System.Security.AccessControl.EventWaitHandleAccessRule> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-107">To get a list of the rules currently applied to a named event, use the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> method to get an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span>  
  
 <span data-ttu-id="170b8-108"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> 개체가 내부 임의 액세스 제어 목록 (DACL)에서 액세스 제어 항목으로 일대일로 매핑되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-108"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</span></span> <span data-ttu-id="170b8-109">이벤트에 대 한 모든 액세스 규칙 집합이 나타나면 집합은 현재 모든 액세스 제어 항목을 나타내는 데 필요한 규칙의 최소 수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-109">When you get the set of all access rules for an event, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="170b8-110">기본 액세스 제어 항목에 적용 하 고 규칙을 제거 하는 대로 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="170b8-111">규칙의 정보는 액세스 제어 항목의 가장 작은 수를 유지 하기 위해 가능 하면 병합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="170b8-112">따라서 규칙의 현재 목록을 가져오면 유사할 수 있습니다 하지 정확 하 게 사용자가 추가한 모든 규칙의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-112">Thus, when you get the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="170b8-113">사용 하 여 <xref:System.Security.AccessControl.EventWaitHandleAccessRule> 개체를 허용 하거나 거부할 사용자 또는 그룹에 대 한 액세스 권한을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-113">Use <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects to specify the access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="170b8-114"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> 개체는 항상 액세스를 허용 하거나 거부 된 액세스 권한 나타내며 하지 둘 다 합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-114">An <xref:System.Security.AccessControl.EventWaitHandleAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="170b8-115">명명된 된 시스템 이벤트에는 규칙을 적용 하려면 사용 하 여는 <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> 가져올 메서드를는 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-115">To apply a rule to a named system event, use the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span> <span data-ttu-id="170b8-116">수정 된 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 추가 규칙을 사용 하 여 해당 메서드를 사용 하 여 개체는 <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> 메서드를 보안 개체를 다시 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-116">Modify the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="170b8-117">변경 내용은 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 개체를 호출 하기 전에 명명된 된 이벤트의 액세스 수준을 영향을 주지 않습니다는 <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> 명명된 된 이벤트에 변경 된 보안 개체를 할당 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="170b8-117">Changes you make to an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object do not affect the access levels of the named event until you call the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named event.</span></span>  
  
 <span data-ttu-id="170b8-118"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> 개체는 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-118"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects are immutable.</span></span> <span data-ttu-id="170b8-119">이벤트에 대 한 보안의 메서드를 사용 하 여 수정 되는 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 규칙을 추가 하거나 제거 하는 클래스, 이렇게 하면 기본 액세스 제어 항목 수정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-119">Security for an event is modified using the methods of the <xref:System.Security.AccessControl.EventWaitHandleSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="170b8-120">Windows 98 또는 Windows Millennium Edition에 대 한 동기화 개체에 대 한 보안 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-120">Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170b8-121">다음 코드 예제에서는 생성 및 사용 <xref:System.Security.AccessControl.EventWaitHandleAccessRule> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-121">The following code example demonstrates the creation and use of <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span> <span data-ttu-id="170b8-122">이 예에서는 만듭니다는 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 개체를 허용 하 고 현재 사용자에 대 한 다양 한 권한을 거부 하는 규칙을 추가 하 고 결과 쌍 규칙을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-122">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="170b8-123">이 예제에서는 그런 다음 현재 사용자에 대 한 새 권한을 허용 하 고 새 권한이 기존 병합 됩니다 표시 하는 결과 표시 <xref:System.Security.AccessControl.AccessControlType.Allow> 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-123">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="170b8-124">이 예제에 대 한 보안 개체를 연결 하지 않습니다는 <xref:System.Threading.EventWaitHandle> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-124">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="170b8-125">보안 개체를 연결 하는 예제에 나와 있습니다 <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> 및 <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-125">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.EventWaitHandleSecurity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="170b8-126"><see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandleAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.EventWaitHandleRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As EventWaitHandleRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandleAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::EventWaitHandleRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="170b8-127">규칙을 적용할 사용자나 그룹입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-127">The user or group the rule applies to.</span></span> <span data-ttu-id="170b8-128">이 값은 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식이거나 <see cref="T:System.Security.Principal.NTAccount" />와 같이 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식으로 변환할 수 있는 형식이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="eventRights"><span data-ttu-id="170b8-129">허용 또는 거부 권한을 지정하는 <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-129">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="170b8-130">권한 허용 여부를 지정하는 <see cref="T:System.Security.AccessControl.AccessControlType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="170b8-131"><see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 클래스의 새 인스턴스를 초기화하여 규칙을 적용할 사용자 또는 그룹, 액세스 권한 및 지정된 액세스 권한의 허용 또는 거부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170b8-132">대기는 <xref:System.Threading.EventWaitHandle> (호출 하 여는 <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> 또는 <xref:System.Threading.WaitHandle.WaitAll%2A> 메서드), 사용자에 게 있어야 <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-132">To wait on an <xref:System.Threading.EventWaitHandle> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="170b8-133">호출 하 여 이벤트 신호를 보내는 <xref:System.Threading.EventWaitHandle.Set%2A> 메서드를 호출 하 여 신호를 보내지 않은 상태로 되돌리려면는 <xref:System.Threading.EventWaitHandle.Reset%2A> 메서드를 사용자에 게 있어야 <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-133">To signal an event by calling the <xref:System.Threading.EventWaitHandle.Set%2A> method, or to reset it to the unsignaled state by calling the <xref:System.Threading.EventWaitHandle.Reset%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="170b8-134">신호를 보내는 <xref:System.Threading.EventWaitHandle> 개체를 다음 호출 하 여 대기는 <xref:System.Threading.WaitHandle.SignalAndWait%2A> 메서드를 사용자에 게 있어야 <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> 및 <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-134">To signal an <xref:System.Threading.EventWaitHandle> object and then wait on it by calling the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="170b8-135"><paramref name="eventRights" />가 잘못된 값을 지정하는 경우</span><span class="sxs-lookup"><span data-stu-id="170b8-135"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
 <span data-ttu-id="170b8-136">또는</span><span class="sxs-lookup"><span data-stu-id="170b8-136">-or-</span></span>  
  
 <span data-ttu-id="170b8-137"><paramref name="type" />가 잘못된 값을 지정하는 경우</span><span class="sxs-lookup"><span data-stu-id="170b8-137"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="170b8-138"><paramref name="identity" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="170b8-138"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="170b8-139">또는</span><span class="sxs-lookup"><span data-stu-id="170b8-139">-or-</span></span>  
  
 <span data-ttu-id="170b8-140"><paramref name="eventRights" />가 0입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-140"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="170b8-141"><paramref name="identity" />의 형식이 <see cref="T:System.Security.Principal.SecurityIdentifier" />도 아니고 <see cref="T:System.Security.Principal.NTAccount" />와 같이 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식으로 변환할 수 있는 형식도 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="170b8-141"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandleAccessRule (string identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.EventWaitHandleRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As String, eventRights As EventWaitHandleRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandleAccessRule(System::String ^ identity, System::Security::AccessControl::EventWaitHandleRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="170b8-142">규칙을 적용할 사용자나 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-142">The name of the user or group the rule applies to.</span></span></param>
        <param name="eventRights"><span data-ttu-id="170b8-143">허용 또는 거부 권한을 지정하는 <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-143">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="170b8-144">권한 허용 여부를 지정하는 <see cref="T:System.Security.AccessControl.AccessControlType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-144">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="170b8-145"><see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 클래스의 새 인스턴스를 초기화하여 규칙을 적용할 사용자 또는 그룹의 이름, 액세스 권한 및 지정된 액세스 권한의 허용 또는 거부 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-145">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170b8-146">대기는 <xref:System.Threading.EventWaitHandle> (호출 하 여는 <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> 또는 <xref:System.Threading.WaitHandle.WaitAll%2A> 메서드), 사용자에 게 있어야 <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-146">To wait on an <xref:System.Threading.EventWaitHandle> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="170b8-147">호출 하 여 이벤트 신호를 보내는 <xref:System.Threading.EventWaitHandle.Set%2A> 메서드를 호출 하 여 신호를 보내지 않은 상태로 되돌리려면는 <xref:System.Threading.EventWaitHandle.Reset%2A> 메서드를 사용자에 게 있어야 <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-147">To signal an event by calling the <xref:System.Threading.EventWaitHandle.Set%2A> method, or to reset it to the unsignaled state by calling the <xref:System.Threading.EventWaitHandle.Reset%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="170b8-148">신호를 보내는 <xref:System.Threading.EventWaitHandle> 개체를 다음 호출 하 여 대기는 <xref:System.Threading.WaitHandle.SignalAndWait%2A> 메서드를 사용자에 게 있어야 <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> 및 <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-148">To signal an <xref:System.Threading.EventWaitHandle> object and then wait on it by calling the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> access.</span></span>  
  
 <span data-ttu-id="170b8-149">이 생성자는 만들기는 <xref:System.Security.Principal.NTAccount> 개체를 전달 하 여 `identity` 에 <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> 생성자 및 새로 만든 전달 <xref:System.Security.Principal.NTAccount> 개체를 <xref:System.Security.AccessControl.EventWaitHandleAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Security.AccessControl.AccessControlType%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-149">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.EventWaitHandleAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170b8-150">다음 코드 예제를 만들려면이 생성자의 사용을 보여 줍니다. <xref:System.Security.AccessControl.EventWaitHandleAccessRule> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-150">The following code example demonstrates the use of this constructor to create <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span> <span data-ttu-id="170b8-151">이 예에서는 만듭니다는 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 개체를 허용 하 고 현재 사용자에 대 한 다양 한 권한을 거부 하는 규칙을 추가 하 고 결과 쌍 규칙을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-151">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="170b8-152">이 예제에서는 그런 다음 현재 사용자에 대 한 새 권한을 허용 하 고 새 권한이 기존 병합 됩니다 표시 하는 결과 표시 <xref:System.Security.AccessControl.AccessControlType.Allow> 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-152">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="170b8-153">이 예제에 대 한 보안 개체를 연결 하지 않습니다는 <xref:System.Threading.EventWaitHandle> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-153">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="170b8-154">보안 개체를 연결 하는 예제에 나와 있습니다 <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> 및 <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-154">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="170b8-155"><paramref name="eventRights" />가 잘못된 값을 지정하는 경우</span><span class="sxs-lookup"><span data-stu-id="170b8-155"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
 <span data-ttu-id="170b8-156">또는</span><span class="sxs-lookup"><span data-stu-id="170b8-156">-or-</span></span>  
  
 <span data-ttu-id="170b8-157"><paramref name="type" />가 잘못된 값을 지정하는 경우</span><span class="sxs-lookup"><span data-stu-id="170b8-157"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="170b8-158"><paramref name="eventRights" />가 0입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-158"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="170b8-159"><paramref name="identity" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="170b8-159"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="170b8-160">또는</span><span class="sxs-lookup"><span data-stu-id="170b8-160">-or-</span></span>  
  
 <span data-ttu-id="170b8-161"><paramref name="identity" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="170b8-161"><paramref name="identity" /> is a zero-length string.</span></span>  
  
 <span data-ttu-id="170b8-162">또는</span><span class="sxs-lookup"><span data-stu-id="170b8-162">-or-</span></span>  
  
 <span data-ttu-id="170b8-163"><paramref name="identity" />이 512자보다 깁니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-163"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EventWaitHandleRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventWaitHandleRights As EventWaitHandleRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::EventWaitHandleRights EventWaitHandleRights { System::Security::AccessControl::EventWaitHandleRights get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.EventWaitHandleRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="170b8-164">액세스 규칙에 의해 허용 또는 거부된 권한을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-164">Gets the rights allowed or denied by the access rule.</span></span></summary>
        <value><span data-ttu-id="170b8-165">액세스 규칙에 의해 허용되거나 거부된 권한을 나타내는 <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-165">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values indicating the rights allowed or denied by the access rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170b8-166"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> 개체는 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-166"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects are immutable.</span></span> <span data-ttu-id="170b8-167">다른 사용자, 서로 다른 권한을 또는 다른를 나타내는 새 액세스 규칙을 만들 수 있습니다 <xref:System.Security.AccessControl.AccessControlType>, 있지만 기존 액세스 규칙을 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-167">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170b8-168">다음 코드 예제에서는 <xref:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights%2A> 속성에 포함 된 규칙 집합에는 권한을 표시 하는 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-168">The following code example demonstrates the use of the <xref:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights%2A> property to display the rights in the set of rules contained in an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span> <span data-ttu-id="170b8-169">이 예에서는 만듭니다는 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 개체를 허용 하 고 현재 사용자에 대 한 다양 한 권한을 거부 하는 규칙을 추가 하 고 결과 쌍 규칙을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-169">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="170b8-170">이 예제에서는 그런 다음 현재 사용자에 대 한 새 권한을 허용 하 고 새 권한이 기존 병합 됩니다 표시 하는 결과 표시 <xref:System.Security.AccessControl.AccessControlType.Allow> 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-170">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="170b8-171">이 예제에 대 한 보안 개체를 연결 하지 않습니다는 <xref:System.Threading.EventWaitHandle> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-171">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="170b8-172">보안 개체를 연결 하는 예제에 나와 있습니다 <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> 및 <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="170b8-172">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>