<Type Name="IAccessor" FullName="Microsoft.VisualBasic.Compatibility.VB6.IAccessor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62accef1d4257cc06b868a02b2ac02ef051fc4a5" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAccessor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.IAccessor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAccessor" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAccessor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0c733a8c-2a1c-11ce-ade5-00aa0044773d")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9eb13-101">Visual Basic 6.0에서 업그레이드한 응용 프로그램에 사용될 OLE DB <see langword="IAccessor" /> 인터페이스의 구현을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9eb13-101">Provides an implementation of the OLE DB <see langword="IAccessor" /> interface for use by applications upgraded from Visual Basic 6.0.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9eb13-102">함수 및 개체가 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임 스페이스는 Visual Basic 6.0에서 Visual Basic로 업그레이드 하기 위한 도구에서 사용 하기 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9eb13-102">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9eb13-103">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="9eb13-103">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9eb13-104">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9eb13-104">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddRefAccessor">
      <MemberSignature Language="C#" Value="public void AddRefAccessor (int hAccessor, out int cRefCount);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void AddRefAccessor([in]int32 hAccessor, [out] int32&amp; cRefCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRefAccessor (hAccessor As Integer, ByRef cRefCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRefAccessor(int hAccessor, [Runtime::InteropServices::Out] int % cRefCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hAccessor" Type="System.Int32" />
        <Parameter Name="cRefCount" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="hAccessor">
          <span data-ttu-id="9eb13-105">참조 횟수를 증가시킬 접근자의 핸들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-105">The handle of the accessor for which to increment the reference count.</span>
          </span>
        </param>
        <param name="cRefCount">
          <span data-ttu-id="9eb13-106">접근자 핸들의 참조 횟수를 반환할 메모리에 대한 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-106">A pointer to memory in which to return the reference count of the accessor handle.</span>
          </span>
          <span data-ttu-id="9eb13-107">
            <c>cRefCount</c>가 null 포인터인 경우 참조 횟수가 반환되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-107">If <c>cRefCount</c> is a null pointer, no reference count is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9eb13-108">기존 접근자에 참조 횟수를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-108">Adds a reference count to an existing accessor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9eb13-109">함수 및 개체가 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임 스페이스는 Visual Basic 6.0에서 Visual Basic로 업그레이드 하기 위한 도구에서 사용 하기 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9eb13-109">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9eb13-110">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="9eb13-110">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9eb13-111">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9eb13-111">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessor">
      <MemberSignature Language="C#" Value="public void CreateAccessor (int accessorFlags, int cBindings, Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[] bindings, int cbRowSize, out int hAccessor, IntPtr pBindStatus);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void CreateAccessor([in]int32 accessorFlags, [in]int32 cBindings, [in]valuetype Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[] bindings, [in]int32 cbRowSize, [out] int32&amp; hAccessor, [in]native int pBindStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(System.Int32,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[],System.Int32,System.Int32@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateAccessor (accessorFlags As Integer, cBindings As Integer, bindings As DBBINDING(), cbRowSize As Integer, ByRef hAccessor As Integer, pBindStatus As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateAccessor(int accessorFlags, int cBindings, cli::array &lt;Microsoft::VisualBasic::Compatibility::VB6::DBBINDING&gt; ^ bindings, int cbRowSize, [Runtime::InteropServices::Out] int % hAccessor, IntPtr pBindStatus);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessorFlags" Type="System.Int32" />
        <Parameter Name="cBindings" Type="System.Int32" />
        <Parameter Name="bindings" Type="Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[]" />
        <Parameter Name="cbRowSize" Type="System.Int32" />
        <Parameter Name="hAccessor" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="pBindStatus" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="accessorFlags">
          <span data-ttu-id="9eb13-112">접근자의 속성과 접근자를 사용할 수 있는 방법을 설명하는 비트 마스크입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-112">A bitmask that describes the properties of the accessor and how it can be used.</span>
          </span>
        </param>
        <param name="cBindings">
          <span data-ttu-id="9eb13-113">접근자에 있는 바인딩의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-113">The number of bindings in the accessor.</span>
          </span>
        </param>
        <param name="bindings">
          <span data-ttu-id="9eb13-114">
            <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-114">An array of <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> structures.</span>
          </span>
        </param>
        <param name="cbRowSize">
          <span data-ttu-id="9eb13-115">소비자의 버퍼에 있는 매개 변수 또는 조건 값의 단일 집합에 대해 할당되는 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-115">The number of bytes allocated for a single set of parameters or criteria values in the consumer's buffer.</span>
          </span>
        </param>
        <param name="hAccessor">
          <span data-ttu-id="9eb13-116">만들어진 접근자의 핸들을 반환할 메모리에 대한 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-116">A pointer to memory in which to return the handle of the created accessor.</span>
          </span>
        </param>
        <param name="pBindStatus">
          <span data-ttu-id="9eb13-117">
            <see langword="DBBINDSTATUS" /> 값의 배열에 대한 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-117">A pointer to an array of <see langword="DBBINDSTATUS" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9eb13-118">바인딩 집합에서 접근자를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-118">Creates an accessor from a set of bindings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9eb13-119">함수 및 개체가 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임 스페이스는 Visual Basic 6.0에서 Visual Basic로 업그레이드 하기 위한 도구에서 사용 하기 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9eb13-119">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9eb13-120">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="9eb13-120">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9eb13-121">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9eb13-121">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBindings">
      <MemberSignature Language="C#" Value="public void GetBindings (int hAccessor, out int accessorFlags, out int cBindings, out IntPtr rgBindings);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void GetBindings([in]int32 hAccessor, [out] int32&amp; accessorFlags, [out] int32&amp; cBindings, [out] native int&amp; rgBindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(System.Int32,System.Int32@,System.Int32@,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetBindings (hAccessor As Integer, ByRef accessorFlags As Integer, ByRef cBindings As Integer, ByRef rgBindings As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetBindings(int hAccessor, [Runtime::InteropServices::Out] int % accessorFlags, [Runtime::InteropServices::Out] int % cBindings, [Runtime::InteropServices::Out] IntPtr % rgBindings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hAccessor" Type="System.Int32" />
        <Parameter Name="accessorFlags" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="cBindings" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="rgBindings" Type="System.IntPtr&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="hAccessor">
          <span data-ttu-id="9eb13-122">바인딩을 반환할 접근자의 핸들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-122">The handle of the accessor for which to return the bindings.</span>
          </span>
        </param>
        <param name="accessorFlags">
          <span data-ttu-id="9eb13-123">접근자의 속성과 접근자가 사용되는 방법을 설명하는 비트 마스크를 반환할 메모리에 대한 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-123">A pointer to memory in which to return a bitmask that describes the properties of the accessor and how it is intended to be used.</span>
          </span>
        </param>
        <param name="cBindings">
          <span data-ttu-id="9eb13-124">접근자의 바인딩 수를 반환할 메모리에 대한 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-124">A pointer to memory in which to return the number of bindings in the accessor.</span>
          </span>
        </param>
        <param name="rgBindings">
          <span data-ttu-id="9eb13-125">
            <see langword="DBBINDSTATUS" /> 구조체의 배열을 반환할 메모리에 대한 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-125">A pointer to memory in which to return an array of <see langword="DBBINDSTATUS" /> structures.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9eb13-126">접근자에 있는 바인딩을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-126">Returns the bindings in an accessor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9eb13-127">함수 및 개체가 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임 스페이스는 Visual Basic 6.0에서 Visual Basic로 업그레이드 하기 위한 도구에서 사용 하기 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9eb13-127">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9eb13-128">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="9eb13-128">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9eb13-129">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9eb13-129">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAccessor">
      <MemberSignature Language="C#" Value="public void ReleaseAccessor (int hAccessor, out int cRefCount);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void ReleaseAccessor([in]int32 hAccessor, [out] int32&amp; cRefCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAccessor (hAccessor As Integer, ByRef cRefCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAccessor(int hAccessor, [Runtime::InteropServices::Out] int % cRefCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hAccessor" Type="System.Int32" />
        <Parameter Name="cRefCount" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="hAccessor">
          <span data-ttu-id="9eb13-130">해제할 접근자의 핸들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-130">The handle of the accessor to release.</span>
          </span>
        </param>
        <param name="cRefCount">
          <span data-ttu-id="9eb13-131">접근자 핸들의 남은 참조 횟수를 반환할 메모리에 대한 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-131">A pointer to memory in which to return the remaining reference count of the accessor handle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9eb13-132">접근자를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9eb13-132">Releases an accessor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9eb13-133">함수 및 개체가 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임 스페이스는 Visual Basic 6.0에서 Visual Basic로 업그레이드 하기 위한 도구에서 사용 하기 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9eb13-133">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9eb13-134">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="9eb13-134">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9eb13-135">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9eb13-135">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>