<Type Name="ToolBarArray" FullName="Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray">
  <Metadata><Meta Name="ms.openlocfilehash" Value="897fdfcdc2096bffa1d0331c1b61a9a9a7ae9835" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48587400" /></Metadata><TypeSignature Language="C#" Value="public class ToolBarArray : Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray, System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ToolBarArray extends Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray implements class System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolBarArray&#xA;Inherits BaseControlArray&#xA;Implements IExtenderProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolBarArray : Microsoft::VisualBasic::Compatibility::VB6::BaseControlArray, System::ComponentModel::IExtenderProvider" />
  <TypeSignature Language="F#" Value="type ToolBarArray = class&#xA;    inherit BaseControlArray&#xA;    interface IExtenderProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IExtenderProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ProvideProperty("Index", typeof(System.Windows.Forms.ToolBar))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e0bd4-101"><see cref="T:System.Windows.Forms.ToolBar" /> 컨트롤의 컨트롤 배열을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-101">Provides a control array of <see cref="T:System.Windows.Forms.ToolBar" /> controls</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-102">합니다 `ToolBarArray` 클래스는 Visual Basic 6.0의 런타임 기능에 대 한 동일한 제공 `ToolBar` 컨트롤 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-102">The `ToolBarArray` class provides an equivalent for the run-time functionality of a Visual Basic 6.0 `ToolBar` control array.</span></span> <span data-ttu-id="e0bd4-103">Visual Basic 6.0 컨트롤 배열의 디자인 타임 기능을 제공 하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-103">It does not provide the design-time features of a Visual Basic 6.0 control array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-104">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-104">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-105">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-105">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-106">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-106">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e0bd4-107"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-107">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolBarArray();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0bd4-108"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-108">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-109">인스턴스화하는 경우는 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray>에 호출 해야 합니다는 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.SetIndex%2A> 배열에 있는 초기 요소를 만드는 방법.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-109">When you instantiate a <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray>, you must also call the <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.SetIndex%2A> method to create the initial element in the array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-110">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-110">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-111">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-111">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-112">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-112">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarArray (System.ComponentModel.IContainer Container);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer Container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolBarArray(System::ComponentModel::IContainer ^ Container);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray : System.ComponentModel.IContainer -&gt; Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" Usage="new Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray Container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="Container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="Container"><span data-ttu-id="e0bd4-113">컨트롤 배열이 호스팅될 <see cref="T:System.ComponentModel.IContainer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-113">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</span></span></param>
        <summary><span data-ttu-id="e0bd4-114">컨테이너를 지정하여 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-114">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> class, specifying its container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-115">인스턴스화하는 경우는 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray>에 호출 해야 합니다는 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.SetIndex%2A> 배열에 있는 초기 요소를 만드는 방법.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-115">When you instantiate a <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray>, you must also call the <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.SetIndex%2A> method to create the initial element in the array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-116">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-116">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-117">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-117">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-118">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-118">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-119"><see cref="P:System.Windows.Forms.ToolBar.AutoSize" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-119">Occurs when the value of the <see cref="P:System.Windows.Forms.ToolBar.AutoSize" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-120">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.ToolBar.AutoSize%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-120">This event is raised if the <xref:System.Windows.Forms.ToolBar.AutoSize%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-121">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-121">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-122">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-122">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-123">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-123">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-124">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-124">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BindingContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BindingContextChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.BindingContextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event BindingContextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BindingContextChanged;" />
      <MemberSignature Language="F#" Value="member this.BindingContextChanged : EventHandler " Usage="member this.BindingContextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-125"><see cref="P:System.Windows.Forms.Control.BindingContext" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-125">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-126">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.BindingContext%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-126">This event is raised if the <xref:System.Windows.Forms.Control.BindingContext%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-127">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-127">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-128">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-128">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-129">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-129">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-130">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-130">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ButtonClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ToolBarButtonClickEventHandler ButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ToolBarButtonClickEventHandler ButtonClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ButtonClick" />
      <MemberSignature Language="VB.NET" Value="Public Event ButtonClick As ToolBarButtonClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ToolBarButtonClickEventHandler ^ ButtonClick;" />
      <MemberSignature Language="F#" Value="member this.ButtonClick : System.Windows.Forms.ToolBarButtonClickEventHandler " Usage="member this.ButtonClick : System.Windows.Forms.ToolBarButtonClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBarButtonClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-131"><see cref="T:System.Windows.Forms.ToolBarButton" />의 <see cref="T:System.Windows.Forms.ToolBar" />을 클릭할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-131">Occurs when a <see cref="T:System.Windows.Forms.ToolBarButton" /> on the <see cref="T:System.Windows.Forms.ToolBar" /> is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-132">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-132">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-133">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-133">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-134">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-134">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-135">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-135">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ButtonDropDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ToolBarButtonClickEventHandler ButtonDropDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ToolBarButtonClickEventHandler ButtonDropDown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ButtonDropDown" />
      <MemberSignature Language="VB.NET" Value="Public Event ButtonDropDown As ToolBarButtonClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ToolBarButtonClickEventHandler ^ ButtonDropDown;" />
      <MemberSignature Language="F#" Value="member this.ButtonDropDown : System.Windows.Forms.ToolBarButtonClickEventHandler " Usage="member this.ButtonDropDown : System.Windows.Forms.ToolBarButtonClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBarButtonClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-136">드롭다운 스타일의 <see cref="T:System.Windows.Forms.ToolBarButton" /> 또는 아래쪽 화살표를 클릭할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-136">Occurs when a drop-down style <see cref="T:System.Windows.Forms.ToolBarButton" /> or its down arrow is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-137">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-137">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-138">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-138">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-139">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-139">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-140">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-140">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExtend">
      <MemberSignature Language="C#" Value="public bool CanExtend (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance bool CanExtend(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.CanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExtend (target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExtend(System::Object ^ target) = System::ComponentModel::IExtenderProvider::CanExtend;" />
      <MemberSignature Language="F#" Value="abstract member CanExtend : obj -&gt; bool&#xA;override this.CanExtend : obj -&gt; bool" Usage="toolBarArray.CanExtend target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="e0bd4-141"><see cref="T:System.Windows.Forms.ToolBar" /> 컨트롤 하나.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-141">A <see cref="T:System.Windows.Forms.ToolBar" /> control.</span></span></param>
        <summary><span data-ttu-id="e0bd4-142">컨트롤이 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />의 멤버인지 여부를 결정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-142">Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />.</span></span></summary>
        <returns><span data-ttu-id="e0bd4-143"><paramref name="target" />이 컨트롤 배열의 멤버이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-143"><see langword="true" /> if <paramref name="target" /> is a member of the control array; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-144">`CanExtend` 메서드를 사용 하 여 특정 여부를 확인 하려면 수 <xref:System.Windows.Forms.ToolBar> 컨트롤은 다른 요소에서 복제 된 컨트롤 배열의 기본 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-144">The `CanExtend` method can be used to determine whether a specific <xref:System.Windows.Forms.ToolBar> control is the base element of the control array from which the other elements were cloned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-145">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-145">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-146">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-146">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-147">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-147">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CausesValidationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CausesValidationChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.CausesValidationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CausesValidationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CausesValidationChanged;" />
      <MemberSignature Language="F#" Value="member this.CausesValidationChanged : EventHandler " Usage="member this.CausesValidationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-148"><see cref="P:System.Windows.Forms.Control.CausesValidation" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-148">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-149">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.CausesValidation%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-149">This event is raised if the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-150">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-150">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-151">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-151">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-152">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-152">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-153">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-153">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeUICues">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.UICuesEventHandler ChangeUICues;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.UICuesEventHandler ChangeUICues" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ChangeUICues" />
      <MemberSignature Language="VB.NET" Value="Public Event ChangeUICues As UICuesEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::UICuesEventHandler ^ ChangeUICues;" />
      <MemberSignature Language="F#" Value="member this.ChangeUICues : System.Windows.Forms.UICuesEventHandler " Usage="member this.ChangeUICues : System.Windows.Forms.UICuesEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UICuesEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-154">포커스 또는 키보드 UI(사용자 인터페이스) 큐가 변경될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-154">Occurs when the focus or keyboard user interface (UI) cues change.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-155">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-155">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-156">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-156">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-157">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-157">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-158">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-158">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Click" />
      <MemberSignature Language="VB.NET" Value="Public Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-159"><see cref="T:System.Windows.Forms.ToolBar" />의 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />가 클릭될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-159">Occurs when a <see cref="T:System.Windows.Forms.ToolBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-160">`Click` 이벤트를 전달는 <xref:System.EventArgs> 해당 이벤트 처리기에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-160">The `Click` event passes an <xref:System.EventArgs> to its event handler.</span></span> <span data-ttu-id="e0bd4-161">따라서 것만 클릭 되었음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-161">Therefore it only indicates that a click has occurred.</span></span> <span data-ttu-id="e0bd4-162">보다 구체적인 마우스 정보 (단추 클릭 횟수, 휠이 회전 또는 위치)에 필요한 경우 사용 된 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseClick> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-162">If you need more specific mouse information (button, number of clicks, wheel rotation, or location), use the <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseClick> event.</span></span> <span data-ttu-id="e0bd4-163">그러나는 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseClick> 클릭 이외에 ENTER 키를 누르는 등의 마우스 작업으로 발생 하는 경우 이벤트를 발생 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-163">However, the <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseClick> event will not be raised if the click is caused by action other than that of the mouse, such as pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="e0bd4-164">두 번 클릭은 운영 체제의 마우스 설정에 따라 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-164">A double-click is determined by the mouse settings of the user's operating system.</span></span> <span data-ttu-id="e0bd4-165">사용자는 두 번 클릭 하는 대신 두 번 클릭 고려해 야 하는 마우스 단추 클릭 간격을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-165">The user can set the time between clicks of a mouse button that should be considered a double-click instead of two clicks.</span></span> <span data-ttu-id="e0bd4-166">`Click` 컨트롤을 두 번 클릭할 때마다 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-166">The `Click` event is raised every time that a control is double-clicked.</span></span> <span data-ttu-id="e0bd4-167">예를 들어에 대 한 이벤트 처리기가를 `Click` 하 고 <xref:System.Windows.Forms.Control.DoubleClick> 컨트롤의 이벤트를 `Click` 및 <xref:System.Windows.Forms.Control.DoubleClick> 이벤트가 컨트롤을 두 번 클릭 하 고 두 메서드 모두 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-167">For example, if you have event handlers for the `Click` and <xref:System.Windows.Forms.Control.DoubleClick> events of a control, the `Click` and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the control is double-clicked and both methods are called.</span></span> <span data-ttu-id="e0bd4-168">컨트롤을 두 번 클릭 하는 경우 및 컨트롤을 지원 하지 않습니다 합니다 <xref:System.Windows.Forms.Control.DoubleClick> 이벤트는 `Click` 이벤트가 두 번 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-168">If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the `Click` event might be raised two times.</span></span>  
  
 <span data-ttu-id="e0bd4-169">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-169">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-170">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-170">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-171">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-171">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-172">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-172">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ClientSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ClientSizeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ClientSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ClientSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ClientSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.ClientSizeChanged : EventHandler " Usage="member this.ClientSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-173"><see cref="P:System.Windows.Forms.Control.ClientSize" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-173">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-174">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.ClientSize%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-174">This event is raised if the <xref:System.Windows.Forms.Control.ClientSize%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-175">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-175">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-176">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-176">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-177">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-177">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-178">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-178">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ContextMenuChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContextMenuChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ContextMenuChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ContextMenuChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContextMenuChanged;" />
      <MemberSignature Language="F#" Value="member this.ContextMenuChanged : EventHandler " Usage="member this.ContextMenuChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-179"><see cref="P:System.Windows.Forms.Control.ContextMenu" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-179">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-180">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.ContextMenu%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-180">This event is raised if the <xref:System.Windows.Forms.Control.ContextMenu%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-181">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-181">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-182">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-182">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-183">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-183">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-184">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-184">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ContextMenuStripChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ContextMenuStripChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContextMenuStripChanged;" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStripChanged : EventHandler " Usage="member this.ContextMenuStripChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-185"><see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-185">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-186">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-186">This event is raised if the <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-187">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-187">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-188">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-188">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-189">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-189">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-190">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-190">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlAdded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ControlEventHandler ControlAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ControlEventHandler ControlAdded" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ControlAdded" />
      <MemberSignature Language="VB.NET" Value="Public Event ControlAdded As ControlEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ControlEventHandler ^ ControlAdded;" />
      <MemberSignature Language="F#" Value="member this.ControlAdded : System.Windows.Forms.ControlEventHandler " Usage="member this.ControlAdded : System.Windows.Forms.ControlEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-191"><see cref="T:System.Windows.Forms.Control.ControlCollection" />에 새로운 컨트롤이 추가되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-191">Occurs when a new control is added to the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-192">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-192">This event is raised if the <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-193">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-193">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-194">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-194">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-195">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-195">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-196">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-196">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlRemoved">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ControlEventHandler ControlRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ControlEventHandler ControlRemoved" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ControlRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Event ControlRemoved As ControlEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ControlEventHandler ^ ControlRemoved;" />
      <MemberSignature Language="F#" Value="member this.ControlRemoved : System.Windows.Forms.ControlEventHandler " Usage="member this.ControlRemoved : System.Windows.Forms.ControlEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-197"><see cref="T:System.Windows.Forms.Control.ControlCollection" />에서 컨트롤이 제거되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-197">Occurs when a control is removed from the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-198">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-198">This event is raised if the <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-199">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-199">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-200">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-200">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-201">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-201">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-202">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-202">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CursorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CursorChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.CursorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CursorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CursorChanged;" />
      <MemberSignature Language="F#" Value="member this.CursorChanged : EventHandler " Usage="member this.CursorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-203"><see cref="P:System.Windows.Forms.Control.Cursor" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-203">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-204">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.Cursor%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-204">This event is raised if the <xref:System.Windows.Forms.Control.Cursor%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-205">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-205">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-206">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-206">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-207">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-207">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-208">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-208">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DockChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DockChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DockChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DockChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DockChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DockChanged;" />
      <MemberSignature Language="F#" Value="member this.DockChanged : EventHandler " Usage="member this.DockChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-209"><see cref="P:System.Windows.Forms.Control.Dock" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-209">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-210">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.Dock%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-210">This event is raised if the <xref:System.Windows.Forms.Control.Dock%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-211">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-211">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-212">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-212">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-213">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-213">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-214">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-214">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : EventHandler " Usage="member this.DoubleClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-215"><see cref="T:System.Windows.Forms.ToolBar" />의 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> 컨트롤을 두 번 클릭하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-215">Occurs when a <see cref="T:System.Windows.Forms.ToolBar" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> is double-clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-216">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-216">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-217">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-217">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-218">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-218">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-219">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-219">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragDrop" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DragDrop" />
      <MemberSignature Language="VB.NET" Value="Public Event DragDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragDrop;" />
      <MemberSignature Language="F#" Value="member this.DragDrop : System.Windows.Forms.DragEventHandler " Usage="member this.DragDrop : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-220">끌어서 놓기 작업이 완료될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-220">Occurs when a drag-and-drop operation is completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-221">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-221">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-222">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-222">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-223">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-223">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-224">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-224">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.Forms.DragEventHandler " Usage="member this.DragEnter : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-225">개체를 컨트롤의 범위 안으로 끌 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-225">Occurs when an object is dragged into the control's bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-226">`DragEnter` 처음으로 가져왔을 마우스 커서를 컨트롤 위로 끌어서 놓기 작업 중 때 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-226">The `DragEnter` event is raised when the user first drags the mouse cursor over the control during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="e0bd4-227">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-227">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-228">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-228">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-229">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-229">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-230">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-230">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event EventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Event DragLeave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : EventHandler " Usage="member this.DragLeave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-231">컨트롤의 범위 밖으로 개체를 끌 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-231">Occurs when an object is dragged out of the control's bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-232">`DragLeave` 현재의 끌어서 놓기 작업을 취소 하는 사용자 또는 사용자가 컨트롤에서 커서를 끌 때 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-232">The `DragLeave` event is raised when the user drags the cursor out of the control or the user cancels the current drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="e0bd4-233">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-233">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-234">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-234">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-235">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-235">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-236">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-236">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.Forms.DragEventHandler " Usage="member this.DragOver : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-237">개체를 컨트롤의 범위 위로 끌 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-237">Occurs when an object is dragged over the control's bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-238">`DragOver` 이벤트는 끌어서 놓기 작업 중 컨트롤의 범위 내에서 마우스 커서를 이동 하면 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-238">The `DragOver` event is raised when the mouse cursor moves within the bounds of the control during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="e0bd4-239">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-239">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-240">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-240">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-241">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-241">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-242">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-242">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="EnabledChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnabledChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.EnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event EnabledChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.EnabledChanged : EventHandler " Usage="member this.EnabledChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-243"><see cref="P:System.Windows.Forms.Control.Enabled" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-243">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-244">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.Enabled%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-244">This event is raised if the <xref:System.Windows.Forms.Control.Enabled%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-245">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-245">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-246">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-246">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-247">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-247">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-248">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-248">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public event EventHandler Enter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Enter" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Enter" />
      <MemberSignature Language="VB.NET" Value="Public Event Enter As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Enter;" />
      <MemberSignature Language="F#" Value="member this.Enter : EventHandler " Usage="member this.Enter : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-249">컨트롤이 입력되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-249">Occurs when the control is entered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-250">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-250">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-251">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-251">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-252">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-252">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-253">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-253">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FontChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FontChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.FontChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event FontChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FontChanged;" />
      <MemberSignature Language="F#" Value="member this.FontChanged : EventHandler " Usage="member this.FontChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-254"><see cref="P:System.Windows.Forms.Control.Font" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-254">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-255">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.Font%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-255">This event is raised if the <xref:System.Windows.Forms.Control.Font%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-256">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-256">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-257">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-257">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-258">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-258">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-259">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-259">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlInstanceType">
      <MemberSignature Language="C#" Value="protected override Type GetControlInstanceType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type GetControlInstanceType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.GetControlInstanceType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetControlInstanceType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override Type ^ GetControlInstanceType();" />
      <MemberSignature Language="F#" Value="override this.GetControlInstanceType : unit -&gt; Type" Usage="toolBarArray.GetControlInstanceType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0bd4-260"><see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-260">Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</span></span></summary>
        <returns><span data-ttu-id="e0bd4-261"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> 클래스는 Visual Basic 6.0에서 업그레이드된 응용 프로그램에 사용되는 모든 컨트롤 배열의 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-261">The <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="e0bd4-262">이 클래스는 대개 클래스의 인스턴스를 만드는 데 사용되지 않기 때문에 일반적으로 이 <see langword="Protected" /> 메서드는 직접 호출되지 않고 파생 클래스에 의해 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-262">Because this class is not typically used to create an instance of the class, this <see langword="Protected" /> method is usually not called directly but is instead called by a derived class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-263">이 메서드는 응용 프로그램 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-263">This method cannot be called from your application's code.</span></span> <span data-ttu-id="e0bd4-264">대신 <xref:System.Object.GetType%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-264">Use the <xref:System.Object.GetType%2A> method instead.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-265">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-265">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-266">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-266">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-267">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-267">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndex">
      <MemberSignature Language="C#" Value="public short GetIndex (System.Windows.Forms.ToolBar o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 GetIndex(class System.Windows.Forms.ToolBar o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.GetIndex(System.Windows.Forms.ToolBar)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIndex (o As ToolBar) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short GetIndex(System::Windows::Forms::ToolBar ^ o);" />
      <MemberSignature Language="F#" Value="member this.GetIndex : System.Windows.Forms.ToolBar -&gt; int16" Usage="toolBarArray.GetIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.ToolBar" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="e0bd4-268">컨트롤 배열의 <see cref="T:System.Windows.Forms.ToolBar" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-268">A <see cref="T:System.Windows.Forms.ToolBar" /> in the control array.</span></span></param>
        <summary><span data-ttu-id="e0bd4-269"><see cref="T:System.Windows.Forms.ToolBar" />에서 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />의 인덱스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-269">Gets the index of a <see cref="T:System.Windows.Forms.ToolBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />.</span></span></summary>
        <returns><span data-ttu-id="e0bd4-270">지정된 <see cref="T:System.Windows.Forms.ToolBar" />의 인덱스를 나타내는 <see langword="Short" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-270">A <see langword="Short" /> that represents the index of the specified <see cref="T:System.Windows.Forms.ToolBar" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-271">이 메서드를 사용 하 여 지정 된 인덱스를 검색할 수 있습니다 <xref:System.Windows.Forms.ToolBar>합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-271">This method can be used to retrieve the index for the specified <xref:System.Windows.Forms.ToolBar>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-272">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-272">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-273">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-273">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-274">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-274">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-275">끌기 작업을 수행하는 동안 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-275">Occurs during a drag operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-276">`GiveFeedback` 는 끌어서 놓기 작업이 시작 될 때 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-276">The `GiveFeedback` event is raised when a drag-and-drop operation is started.</span></span> <span data-ttu-id="e0bd4-277">사용 하 여는 `GiveFeedback` 이벤트 끌기 이벤트의 소스를 끌어서 놓기 작업 중 사용자의 시각적 피드백을 제공 하기 위해 마우스 포인터의 모양을 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-277">With the `GiveFeedback` event, the source of a drag event can modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="e0bd4-278">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-278">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-279">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-279">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-280">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-280">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-281">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-281">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpRequested">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HelpEventHandler HelpRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HelpEventHandler HelpRequested" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.HelpRequested" />
      <MemberSignature Language="VB.NET" Value="Public Event HelpRequested As HelpEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HelpEventHandler ^ HelpRequested;" />
      <MemberSignature Language="F#" Value="member this.HelpRequested : System.Windows.Forms.HelpEventHandler " Usage="member this.HelpRequested : System.Windows.Forms.HelpEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HelpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-282">사용자가 컨트롤에 대한 도움말을 요청하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-282">Occurs when the user requests help for a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-283">`HelpRequested` 누르면 F1 키를 누르거나 상황에 맞는 도움말 단추를 클릭할 때 이벤트가 일반적으로 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-283">The `HelpRequested` event is typically raised when the user presses the F1 key or an associated context-sensitive Help button is clicked.</span></span>  
  
 <span data-ttu-id="e0bd4-284">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-284">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-285">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-285">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-286">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-286">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-287">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-287">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.HelpRequested" />
      </Docs>
    </Member>
    <Member MemberName="HookUpControlEvents">
      <MemberSignature Language="C#" Value="protected override void HookUpControlEvents (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HookUpControlEvents(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.HookUpControlEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HookUpControlEvents (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HookUpControlEvents(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.HookUpControlEvents : obj -&gt; unit" Usage="toolBarArray.HookUpControlEvents o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="e0bd4-288"><see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-288">An <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="e0bd4-289"><see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-289">Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-290">이 메서드는 응용 프로그램 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-290">This method cannot be called from your application's code.</span></span> <span data-ttu-id="e0bd4-291">사용 하 여 `AddHandler` 를 사용 하 여 추가 되는 모든 컨트롤에 대 한 이벤트를 후크 하는 <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-291">Use `AddHandler` to hook up events for any controls that are added by using the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-292">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-292">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-293">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-293">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-294">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-294">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolBar this[short Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolBar Item(int16)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Item(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Short) As ToolBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolBar ^ default[short] { System::Windows::Forms::ToolBar ^ get(short Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int16) : System.Windows.Forms.ToolBar" Usage="Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="e0bd4-295">컨트롤 배열의 요소 위치를 지정하는 <see langword="Short" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-295">A <see langword="Short" /> that specifies the position of an element of the control array.</span></span></param>
        <summary><span data-ttu-id="e0bd4-296">인덱스에 따라 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />의 특정 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-296">Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> by index.</span></span> <span data-ttu-id="e0bd4-297">읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-297">Read-only.</span></span></summary>
        <value><span data-ttu-id="e0bd4-298">컨트롤 배열에서 지정된 <paramref name="Index" />에 있는 <see cref="T:System.Windows.Forms.ToolBar" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-298">A <see cref="T:System.Windows.Forms.ToolBar" /> at the specified <paramref name="Index" /> in the control array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-299">`Item` 속성은 컨트롤 배열에 대 한 기본 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-299">The `Item` property is the default property for a control array.</span></span> <span data-ttu-id="e0bd4-300">따라서 다음 코드 줄은 동일합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-300">Therefore, the following lines of code are equivalent.</span></span>  
  
```vb  
MsgBox(CStr(ToolBarArray.Item(1).Text))  
MsgBox(CStr(ToolBarArray(1).Text))  
```  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-301">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-301">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-302">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-302">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-303">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-303">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Forms.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Forms.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-304">컨트롤에 포커스가 있을 때 키를 누르면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-304">Occurs when a key is pressed and the control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-305">키 이벤트가 다음 순서 대로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-305">Key events occur in the following order:</span></span>  
  
 `KeyDown`  
  
 <xref:System.Windows.Forms.Control.KeyPress>  
  
 <xref:System.Windows.Forms.Control.KeyUp>  
  
 <span data-ttu-id="e0bd4-306">폼 수준 에서만 키보드 이벤트를 처리 하 고 키보드 이벤트를 수신 하는 컨트롤을 사용 하도록 설정 하지를 설정 합니다 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> 폼의 속성 <xref:System.Windows.Forms.Control.KeyPress> 이벤트 처리 메서드를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-306">To handle keyboard events only at the form level and not enable controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property in the form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`.</span></span>  
  
 <span data-ttu-id="e0bd4-307">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-307">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-308">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-308">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-309">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-309">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-310">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-310">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyPress">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyPressEventHandler KeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyPressEventHandler KeyPress" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.KeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Event KeyPress As KeyPressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyPressEventHandler ^ KeyPress;" />
      <MemberSignature Language="F#" Value="member this.KeyPress : System.Windows.Forms.KeyPressEventHandler " Usage="member this.KeyPress : System.Windows.Forms.KeyPressEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyPressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-311">컨트롤에 포커스가 있을 때 키를 누르면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-311">Occurs when a key is pressed and the control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-312">키 이벤트가 다음 순서 대로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-312">Key events occur in the following order:</span></span>  
  
 <xref:System.Windows.Forms.Control.KeyDown>  
  
 `KeyPress`  
  
 <xref:System.Windows.Forms.Control.KeyUp>  
  
 <span data-ttu-id="e0bd4-313">그러나 `KeyPress` 문자가 아닌 키를 기준으로 이벤트가 발생 하지 않습니다; 문자가 아닌 키를 일으키지 합니다 <xref:System.Windows.Forms.Control.KeyDown> 및 <xref:System.Windows.Forms.Control.KeyUp> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-313">The `KeyPress` event is not raised by noncharacter keys; however, the noncharacter keys do raise the <xref:System.Windows.Forms.Control.KeyDown> and <xref:System.Windows.Forms.Control.KeyUp> events.</span></span>  
  
 <span data-ttu-id="e0bd4-314">사용 된 <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> 샘플 키 입력을 런타임에 하 고 선택적으로 사용 하거나 공통 키 입력의 하위 집합을 수정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-314">Use the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to sample keystrokes at run time and to consume or modify a subset of common keystrokes.</span></span>  
  
 <span data-ttu-id="e0bd4-315">폼 수준 에서만 키보드 이벤트를 처리 하 고 키보드 이벤트를 수신 하는 컨트롤을 사용 하도록 설정 하지를 설정 합니다 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> 폼의 속성 <xref:System.Windows.Forms.Control.KeyPress> 이벤트 처리 메서드를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-315">To handle keyboard events only at the form level and not enable controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property in the form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`.</span></span>  
  
 <span data-ttu-id="e0bd4-316">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-316">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-317">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-317">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-318">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-318">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-319">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-319">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Forms.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Forms.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-320">컨트롤에 포커스가 있을 때 키를 놓으면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-320">Occurs when a key is released and the control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-321">키 이벤트가 다음 순서 대로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-321">Key events occur in the following order:</span></span>  
  
 <xref:System.Windows.Forms.Control.KeyDown>  
  
 <xref:System.Windows.Forms.Control.KeyPress>  
  
 `KeyUp`  
  
 <span data-ttu-id="e0bd4-322">폼 수준 에서만 키보드 이벤트를 처리 하 고 키보드 이벤트를 수신 하는 컨트롤을 사용 하도록 설정 하지를 설정 합니다 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> 폼의 속성 <xref:System.Windows.Forms.Control.KeyPress> 이벤트 처리 메서드를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-322">To handle keyboard events only at the form level and not enable controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property in the form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`.</span></span>  
  
 <span data-ttu-id="e0bd4-323">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-323">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-324">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-324">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-325">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-325">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-326">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-326">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LayoutEventHandler Layout;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LayoutEventHandler Layout" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Layout" />
      <MemberSignature Language="VB.NET" Value="Public Event Layout As LayoutEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LayoutEventHandler ^ Layout;" />
      <MemberSignature Language="F#" Value="member this.Layout : System.Windows.Forms.LayoutEventHandler " Usage="member this.Layout : System.Windows.Forms.LayoutEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LayoutEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-327">컨트롤이 자식 컨트롤의 위치를 변경하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-327">Occurs when a control should reposition its child controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-328">`Layout` 자식 컨트롤을 추가 하거나 범위 컨트롤 변경 하 고 있는 다른 변경 내용이 있을 수는 컨트롤의 레이아웃에 영향을 받는 경우 제거 하면 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-328">The `Layout` event occurs when child controls are added or removed, when the bounds of the control changes, and when other changes occur that can affect the layout of the control.</span></span> <span data-ttu-id="e0bd4-329">레이아웃 이벤트를 사용 하 여 표시 하지 않을 수 있습니다 합니다 <xref:System.Windows.Forms.Control.SuspendLayout%2A> 고 <xref:System.Windows.Forms.Control.ResumeLayout%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-329">The layout event can be suppressed by using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods.</span></span> <span data-ttu-id="e0bd4-330">레이아웃을 일시 중단을 사용 하면 각 변경에 대 한 레이아웃을 수행 하지 않고 컨트롤에 여러 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-330">Suspending layout enables you to perform multiple actions on a control without having to perform a layout for each change.</span></span> <span data-ttu-id="e0bd4-331">예를 들어, 크기를 조정 하는 컨트롤을 이동 하는 경우 각 작업 발생을 `Layout` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-331">For example, if you resize and move a control, each operation would raise a `Layout` event.</span></span>  
  
 <span data-ttu-id="e0bd4-332">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-332">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-333">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-333">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-334">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-334">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-335">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-335">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public event EventHandler Leave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Leave" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Event Leave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Leave;" />
      <MemberSignature Language="F#" Value="member this.Leave : EventHandler " Usage="member this.Leave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-336">입력 포커스가 컨트롤을 벗어나면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-336">Occurs when the input focus leaves the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-337">키보드 (TAB, SHIFT + TAB 등)를 사용 하 여 또는 호출 하 여 포커스를 변경 하면 합니다 <xref:System.Windows.Forms.Control.Select%2A> 또는 <xref:System.Windows.Forms.Control.SelectNextControl%2A> 메서드 포커스 이벤트가 다음 순서 대로 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-337">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), or by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> method, focus events occur in the following order:</span></span>  
  
 <xref:System.Windows.Forms.Control.Enter>  
  
 <xref:System.Windows.Forms.Control.GotFocus>  
  
 `Leave`  
  
 <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="e0bd4-338">마우스를 사용 하 여 또는 호출 하 여 포커스를 변경 하면를 <xref:System.Windows.Forms.Control.Focus%2A> 메서드 포커스 이벤트가 다음 순서 대로 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-338">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
 <xref:System.Windows.Forms.Control.Enter>  
  
 <xref:System.Windows.Forms.Control.GotFocus>  
  
 <xref:System.Windows.Forms.Control.LostFocus>  
  
 `Leave`  
  
 <span data-ttu-id="e0bd4-339">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-339">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-340">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-340">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-341">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-341">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-342">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-342">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Leave" />
      </Docs>
    </Member>
    <Member MemberName="LocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LocationChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.LocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event LocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LocationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocationChanged : EventHandler " Usage="member this.LocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-343"><see cref="P:System.Windows.Forms.Control.Location" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-343">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-344">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.Location%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-344">This event is raised if the <xref:System.Windows.Forms.Control.Location%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-345">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-345">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-346">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-346">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-347">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-347">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-348">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-348">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarginChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MarginChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MarginChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MarginChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event MarginChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MarginChanged;" />
      <MemberSignature Language="F#" Value="member this.MarginChanged : EventHandler " Usage="member this.MarginChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-349"><see cref="P:System.Windows.Forms.Control.Margin" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-349">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-350">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.Margin%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-350">This event is raised if the <xref:System.Windows.Forms.Control.Margin%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-351">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-351">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-352">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-352">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-353">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-353">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-354">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-354">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseCaptureChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MouseCaptureChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseCaptureChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseCaptureChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event MouseCaptureChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseCaptureChanged;" />
      <MemberSignature Language="F#" Value="member this.MouseCaptureChanged : EventHandler " Usage="member this.MouseCaptureChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-355">컨트롤이 마우스 캡처를 잃거나 얻을 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-355">Occurs when the control loses or gains mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-356">일반적으로 포인터가 모양 위에 있을 때 마우스 단추를 클릭 하면 다음 일련을의 컨트롤에서 이벤트를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-356">Clicking a mouse button when the pointer is over a shape typically raises the following series of events from the control:</span></span>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseDown>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Click>  
  
 `MouseClick`  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseUp>  
  
 <span data-ttu-id="e0bd4-357">두 닫기 발생 하는 시간 내에 사용자의 운영 체제의 마우스 설정에 의해 결정 되는 차례를 <xref:System.Windows.Forms.Control.MouseDoubleClick> 두 번째 대신 이벤트 `MouseClick` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-357">Two clicks that occur close enough in time, as determined by the mouse settings of the user's operating system, will generate an <xref:System.Windows.Forms.Control.MouseDoubleClick> event instead of the second `MouseClick` event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-358"><xref:System.Windows.Forms.Control.Click> 이벤트는 컨트롤의 논리적으로 상위 수준 이벤트.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-358"><xref:System.Windows.Forms.Control.Click> events are logically higher-level events of a control.</span></span> <span data-ttu-id="e0bd4-359">이러한 이벤트는 대개 컨트롤에 포커스가 있을 때 ENTER 키를 누르는 것과 같은 다른 작업에 의해 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-359">They are often raised by other actions, such as pressing the ENTER key when the control has focus.</span></span>  
  
 <span data-ttu-id="e0bd4-360">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-360">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-361">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-361">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-362">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-362">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-363">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-363">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberSignature Language="F#" Value="member this.MouseClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-364">컨트롤을 마우스로 클릭할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-364">Occurs when the control is clicked by the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-365">일반적으로 포인터가 모양 위에 있을 때 마우스 단추를 클릭 하면 다음 일련을의 컨트롤에서 이벤트를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-365">Clicking a mouse button when the pointer is over a shape typically raises the following series of events from the control:</span></span>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseDown>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Click>  
  
 `MouseClick`  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseUp>  
  
 <span data-ttu-id="e0bd4-366">두 닫기 발생 하는 시간 내에 사용자의 운영 체제의 마우스 설정에 의해 결정 되는 차례를 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseDoubleClick> 이벤트 대신 두 번째 `MouseClick` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-366">Two clicks that occur close enough in time, as determined by the mouse settings of the user's operating system, will generate a <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseDoubleClick> event instead of the second `MouseClick` event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-367"><xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Click> 이벤트는 논리적으로 더 높은 수준의 이벤트 셰이프입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-367"><xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Click> events are logically higher-level events of a shape.</span></span> <span data-ttu-id="e0bd4-368">이러한 이벤트는 대개 모양에 포커스가 있을 때 ENTER 키를 누르는 것과 같은 다른 작업에 의해 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-368">They are often raised by other actions, such as pressing the ENTER key when the shape has focus.</span></span>  
  
 <span data-ttu-id="e0bd4-369">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-369">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-370">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-370">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-371">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-371">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-372">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-372">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Event MouseDoubleClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-373">컨트롤을 마우스로 두 번 클릭하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-373">Occurs when the control is double-clicked by the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-374">일반적으로 포인터가 모양 위에 있을 때 마우스 단추를 클릭 하면 다음 일련을의 컨트롤에서 이벤트를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-374">Clicking a mouse button when the pointer is over a shape typically raises the following series of events from the control:</span></span>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseDown>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Click>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseClick>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseUp>  
  
 <span data-ttu-id="e0bd4-375">두 닫기 발생 하는 시간 내에 사용자의 운영 체제의 마우스 설정에 의해 결정 되는 차례를 `DoubleClick` 이벤트 대신 두 번째 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseClick> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-375">Two clicks that occur close enough in time, as determined by the mouse settings of the user's operating system, will generate a `DoubleClick` event instead of the second <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseClick> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-376"><xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Click> 이벤트는 논리적으로 더 높은 수준의 이벤트 셰이프입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-376"><xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Click> events are logically higher-level events of a shape.</span></span> <span data-ttu-id="e0bd4-377">이러한 이벤트는 대개 모양에 포커스가 있을 때 ENTER 키를 누르는 것과 같은 다른 작업에 의해 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-377">They are often raised by other actions, such as pressing the ENTER key when the shape has focus.</span></span>  
  
 <span data-ttu-id="e0bd4-378">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-378">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-379">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-379">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-380">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-380">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-381">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-381">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Event MouseDown As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDown : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-382">마우스 포인터가 컨트롤 위에 있을 때 마우스 단추를 클릭하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-382">Occurs when the mouse pointer is over the control and a mouse button is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-383">마우스 이벤트는 다음 순서대로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-383">Mouse events occur in the following order:</span></span>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseEnter>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseMove>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseHover> / `MouseDown` / <xref:System.Windows.Forms.Control.MouseWheel>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseUp>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseLeave>  
  
 <span data-ttu-id="e0bd4-384">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-384">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-385">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-385">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-386">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-386">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-387">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-387">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event EventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Event MouseEnter As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : EventHandler " Usage="member this.MouseEnter : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-388">마우스 포인터가 컨트롤에 들어가면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-388">Occurs when the mouse pointer enters the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-389">마우스 이벤트는 다음 순서대로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-389">Mouse events occur in the following order:</span></span>  
  
 `MouseEnter`  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseMove>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseHover> / <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseUp>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseLeave>  
  
 <span data-ttu-id="e0bd4-390">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-390">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-391">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-391">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-392">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-392">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-393">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-393">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="MouseHover">
      <MemberSignature Language="C#" Value="public event EventHandler MouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseHover" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Event MouseHover As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseHover;" />
      <MemberSignature Language="F#" Value="member this.MouseHover : EventHandler " Usage="member this.MouseHover : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-394">마우스 포인터가 컨트롤 위에 있을 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-394">Occurs when the mouse pointer rests on the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-395">일반적인 사용 `MouseHover` 컨트롤 ("호버 사각형")으로 지정 된 영역 내에서 컨트롤에 마우스를 놓을 때 도구 설명 표시 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-395">A typical use of `MouseHover` is to display a tool tip when the mouse pauses on a control within a specified area around the control (the "hover rectangle").</span></span> <span data-ttu-id="e0bd4-396">이 이벤트를 발생 하는 데 필요한 일시 중지 하 여 밀리초 단위로 지정 된 된 <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-396">The pause required for this event to be raised is specified in milliseconds by the <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> property.</span></span>  
  
 <span data-ttu-id="e0bd4-397">합니다 `MouseHover` 이벤트 정의 되 고 연결 하 여 검색 합니다 <xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A> 및 <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-397">The `MouseHover` event is defined and detected in connection with the <xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A> and <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> properties.</span></span>  
  
 <span data-ttu-id="e0bd4-398">마우스 이벤트는 다음 순서대로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-398">Mouse events occur in the following order:</span></span>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseEnter>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseMove>  
  
 `MouseHover` / <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseUp>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseLeave>  
  
 <span data-ttu-id="e0bd4-399">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-399">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-400">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-400">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-401">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-401">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-402">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-402">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseHover" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event EventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Event MouseLeave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : EventHandler " Usage="member this.MouseLeave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-403">마우스 포인터가 컨트롤을 벗어나면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-403">Occurs when the mouse pointer leaves the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-404">마우스 이벤트는 다음 순서대로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-404">Mouse events occur in the following order:</span></span>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseEnter>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseMove>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseHover> / <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseUp>  
  
 `MouseLeave`  
  
 <span data-ttu-id="e0bd4-405">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-405">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-406">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-406">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-407">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-407">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-408">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-408">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-409">마우스 포인터를 컨트롤 위로 이동하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-409">Occurs when the mouse pointer is moved over the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-410">마우스 이벤트는 다음 순서대로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-410">Mouse events occur in the following order:</span></span>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseEnter>  
  
 `MouseMove`  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseHover> / <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseUp>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseLeave>  
  
 <span data-ttu-id="e0bd4-411">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-411">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-412">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-412">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-413">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-413">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-414">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-414">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Event MouseUp As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseUp : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-415">마우스 포인터가 컨트롤 위에 있을 때 마우스 단추를 눌렀다 놓으면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-415">Occurs when the mouse pointer is over the control and a mouse button is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-416">마우스 이벤트는 다음 순서대로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-416">Mouse events occur in the following order:</span></span>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseEnter>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseMove>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseHover> / <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
 `MouseUp`  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseLeave>  
  
 <span data-ttu-id="e0bd4-417">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-417">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-418">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-418">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-419">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-419">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-420">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-420">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public event EventHandler Move;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Move" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Move" />
      <MemberSignature Language="VB.NET" Value="Public Event Move As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Move;" />
      <MemberSignature Language="F#" Value="member this.Move : EventHandler " Usage="member this.Move : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-421">컨트롤이 이동하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-421">Occurs when the control is moved.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-422">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-422">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-423">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-423">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-424">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-424">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-425">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-425">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Move" />
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-426">컨트롤의 <see cref="P:System.Windows.Forms.Control.Padding" /> 속성이 변경될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-426">Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-427">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.Padding%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-427">This event is raised if the <xref:System.Windows.Forms.Control.Padding%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-428">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-428">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-429">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-429">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-430">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-430">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-431">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-431">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ParentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ParentChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ParentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ParentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ParentChanged;" />
      <MemberSignature Language="F#" Value="member this.ParentChanged : EventHandler " Usage="member this.ParentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-432">컨트롤의 <see cref="P:System.Windows.Forms.Control.Parent" /> 속성이 변경될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-432">Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-433">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.Parent%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-433">This event is raised if the <xref:System.Windows.Forms.Control.Parent%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-434">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-434">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-435">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-435">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-436">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-436">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-437">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-437">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryAccessibilityHelp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.QueryAccessibilityHelp" />
      <MemberSignature Language="VB.NET" Value="Public Event QueryAccessibilityHelp As QueryAccessibilityHelpEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QueryAccessibilityHelpEventHandler ^ QueryAccessibilityHelp;" />
      <MemberSignature Language="F#" Value="member this.QueryAccessibilityHelp : System.Windows.Forms.QueryAccessibilityHelpEventHandler " Usage="member this.QueryAccessibilityHelp : System.Windows.Forms.QueryAccessibilityHelpEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryAccessibilityHelpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-438"><see cref="T:System.Windows.Forms.AccessibleObject" />에서 내게 필요한 옵션 지원 응용 프로그램에 대한 도움말을 제공할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-438">Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-439">기능을 사용할지는 <xref:System.Windows.Forms.HelpProvider> 클래스를 사용 하는 사용자가 F1 키를 눌러 액세스할 수 있는 개체의 도움말을 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-439">You should use the <xref:System.Windows.Forms.HelpProvider> class to enable users to invoke Help on your accessible object by pressing the F1 key.</span></span> <span data-ttu-id="e0bd4-440">합니다 <xref:System.Windows.Forms.HelpProvider> 전체 정보를 제공 합니다 <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-440">The <xref:System.Windows.Forms.HelpProvider> gives you complete information in the <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs>.</span></span>  
  
 <span data-ttu-id="e0bd4-441">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-441">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-442">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-442">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-443">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-443">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-444">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-444">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-445">끌어서 놓기 작업 중에 발생하며 끌기 소스가 끌어서 놓기 작업을 취소해야 할지를 결정하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-445">Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-446">`QueryContinueDrag` 이벤트는 끌어서 놓기 작업 중 키보드 또는 마우스 단추 상태가 변경 될 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-446">The `QueryContinueDrag` event is raised when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span> <span data-ttu-id="e0bd4-447">`QueryContinueDrag` 이벤트 끌기 소스가 끌어서 놓기 작업을 취소 해야 하는지 여부를 결정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-447">The `QueryContinueDrag` event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-448">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-448">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-449">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-449">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-450">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-450">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="RegionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RegionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RegionChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.RegionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event RegionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RegionChanged;" />
      <MemberSignature Language="F#" Value="member this.RegionChanged : EventHandler " Usage="member this.RegionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-451"><see cref="P:System.Windows.Forms.Control.Region" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-451">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-452">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.Region%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-452">This event is raised if the <xref:System.Windows.Forms.Control.Region%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-453">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-453">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-454">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-454">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-455">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-455">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-456">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-456">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetIndex">
      <MemberSignature Language="C#" Value="public void ResetIndex (System.Windows.Forms.ToolBar o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void ResetIndex(class System.Windows.Forms.ToolBar o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ResetIndex(System.Windows.Forms.ToolBar)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetIndex (o As ToolBar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetIndex(System::Windows::Forms::ToolBar ^ o);" />
      <MemberSignature Language="F#" Value="member this.ResetIndex : System.Windows.Forms.ToolBar -&gt; unit" Usage="toolBarArray.ResetIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.ToolBar" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="e0bd4-457"><see cref="T:System.Windows.Forms.Control" /></span><span class="sxs-lookup"><span data-stu-id="e0bd4-457">A <see cref="T:System.Windows.Forms.Control" />.</span></span></param>
        <summary><span data-ttu-id="e0bd4-458"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> 클래스는 <see langword="ResetIndex" /> 메서드를 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-458">The <see langword="ResetIndex" /> method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-459">이 메서드가 지원 되지 않습니다 하 고 호출에서 예외가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-459">This method is not supported, and calling it does not raise an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-460">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-460">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-461">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-461">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-462">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-462">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public event EventHandler Resize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Resize" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Resize" />
      <MemberSignature Language="VB.NET" Value="Public Event Resize As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Resize;" />
      <MemberSignature Language="F#" Value="member this.Resize : EventHandler " Usage="member this.Resize : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-463">컨트롤의 크기를 조정하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-463">Occurs when the control is resized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-464">결정할를 <xref:System.Windows.Forms.Control.Size%2A> 크기가 조정 된 컨트롤의 캐스팅할 수 있습니다 합니다 `sender` 의 매개 변수를 <xref:System.EventArgs> 데이터를를 <xref:System.Windows.Forms.Control> 받고 해당 <xref:System.Windows.Forms.Control.Size%2A> 속성 (또는 <xref:System.Windows.Forms.Control.Height%2A> 및 <xref:System.Windows.Forms.Control.Width%2A> 속성 개별적으로).</span><span class="sxs-lookup"><span data-stu-id="e0bd4-464">To determine the <xref:System.Windows.Forms.Control.Size%2A> of the resized control, you can cast the `sender` parameter of the <xref:System.EventArgs> data to a <xref:System.Windows.Forms.Control> and get its <xref:System.Windows.Forms.Control.Size%2A> property (or <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually).</span></span>  
  
 <span data-ttu-id="e0bd4-465">사용자 지정 레이아웃을 처리 하려면 합니다 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Layout> 이벤트 대신는 `Resize` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-465">To handle custom layouts, use the <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Layout> event instead of the `Resize` event.</span></span> <span data-ttu-id="e0bd4-466"><xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Layout> 대 한 응답으로 이벤트 발생을 `Resize` 컨트롤의 레이아웃에 영향을 주는 다른 변경에 대 한 응답 뿐만 아니라 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-466">The <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Layout> event is raised in response to a `Resize` event, but also in response to other changes that affect the layout of the control.</span></span>  
  
 <span data-ttu-id="e0bd4-467">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-467">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-468">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-468">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-469">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-469">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-470">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-470">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
      </Docs>
    </Member>
    <Member MemberName="SetIndex">
      <MemberSignature Language="C#" Value="public void SetIndex (System.Windows.Forms.ToolBar o, short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetIndex(class System.Windows.Forms.ToolBar o, int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.SetIndex(System.Windows.Forms.ToolBar,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIndex (o As ToolBar, Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIndex(System::Windows::Forms::ToolBar ^ o, short Index);" />
      <MemberSignature Language="F#" Value="member this.SetIndex : System.Windows.Forms.ToolBar * int16 -&gt; unit" Usage="toolBarArray.SetIndex (o, Index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.ToolBar" />
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="e0bd4-471">컨트롤 배열의 <see cref="T:System.Windows.Forms.ToolBar" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-471">A <see cref="T:System.Windows.Forms.ToolBar" /> in the control array.</span></span></param>
        <param name="Index"><span data-ttu-id="e0bd4-472">지정된 <see cref="T:System.Windows.Forms.ToolBar" />의 인덱스를 나타내는 <see langword="Short" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-472">A <see langword="Short" /> that represents the index of the specified <see cref="T:System.Windows.Forms.ToolBar" />.</span></span></param>
        <summary><span data-ttu-id="e0bd4-473"><see cref="T:System.Windows.Forms.ToolBar" />에서 초기 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />의 인덱스를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-473">Sets the index of the initial <see cref="T:System.Windows.Forms.ToolBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-474">`SetIndex` 컨트롤 배열에서 초기 요소를 만들 때만 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-474">The `SetIndex` method should only be called when you are creating the initial element in the control array.</span></span> <span data-ttu-id="e0bd4-475">후속 요소를 추가 하려면 다음을 호출 합니다 <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> 메서드 지정는 `Index`합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-475">To add subsequent elements, call the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> method and specify the `Index`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-476">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-476">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-477">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-477">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-478">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-478">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeIndex">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeIndex (System.Windows.Forms.ToolBar o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ShouldSerializeIndex(class System.Windows.Forms.ToolBar o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ShouldSerializeIndex(System.Windows.Forms.ToolBar)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeIndex (o As ToolBar) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeIndex(System::Windows::Forms::ToolBar ^ o);" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeIndex : System.Windows.Forms.ToolBar -&gt; bool" Usage="toolBarArray.ShouldSerializeIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.ToolBar" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="e0bd4-479">컨트롤 배열의 <see cref="T:System.Windows.Forms.ToolBar" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-479">A <see cref="T:System.Windows.Forms.ToolBar" /> in the control array.</span></span></param>
        <summary><span data-ttu-id="e0bd4-480"><see cref="T:System.Windows.Forms.ToolBar" />가 이 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />의 멤버인지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-480">Returns a value that indicates whether a <see cref="T:System.Windows.Forms.ToolBar" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />.</span></span></summary>
        <returns><span data-ttu-id="e0bd4-481"><paramref name="o" />가 이 컨트롤 배열의 멤버이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-481"><see langword="true" /> if <paramref name="o" /> is a member of this control array; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-482">지정된 <xref:System.Windows.Forms.ToolBar>가 다른 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray>의 멤버이면 `ShouldSerializeIndex`는 `false`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-482">If the specified <xref:System.Windows.Forms.ToolBar> is a member of a different <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray>, `ShouldSerializeIndex` returns `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-483">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-483">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-484">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-484">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-485">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-485">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SizeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.SizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SizeChanged;" />
      <MemberSignature Language="F#" Value="member this.SizeChanged : EventHandler " Usage="member this.SizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-486"><see cref="P:System.Windows.Forms.Control.Size" /> 속성 값이 변경될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-486">Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-487">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.Size%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-487">This event is raised if the <xref:System.Windows.Forms.Control.Size%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-488">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-488">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-489">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-489">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-490">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-490">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-491">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-491">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StyleChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.StyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StyleChanged;" />
      <MemberSignature Language="F#" Value="member this.StyleChanged : EventHandler " Usage="member this.StyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-492">컨트롤 스타일이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-492">Occurs when the control style changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-493">`StyleChanged` 이벤트가 발생할 때 <xref:System.Windows.Forms.ControlStyles> 추가 되거나 변경 된 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-493">The `StyleChanged` event occurs when <xref:System.Windows.Forms.ControlStyles> flags have been added or changed.</span></span>  
  
 <span data-ttu-id="e0bd4-494">이 이벤트는 컨트롤의 스타일을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 되 면 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-494">This event is raised if the control style is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-495">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-495">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-496">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-496">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-497">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-497">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-498">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-498">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemColorsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SystemColorsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SystemColorsChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.SystemColorsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SystemColorsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SystemColorsChanged;" />
      <MemberSignature Language="F#" Value="member this.SystemColorsChanged : EventHandler " Usage="member this.SystemColorsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-499">시스템 색이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-499">Occurs when the system colors change.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-500">이 이벤트가 발생 하는 경우는 <xref:System.Drawing.SystemColors> 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-500">This event is raised if the <xref:System.Drawing.SystemColors> is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-501">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-501">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-502">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-502">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-503">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-503">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-504">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-504">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.SystemColorsChanged" />
      </Docs>
    </Member>
    <Member MemberName="TabIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabIndexChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.TabIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event TabIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.TabIndexChanged : EventHandler " Usage="member this.TabIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-505"><see cref="P:System.Windows.Forms.Control.TabIndex" /> 속성 값이 변경될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-505">Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-506">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.TabIndex%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-506">This event is raised if the <xref:System.Windows.Forms.Control.TabIndex%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-507">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-507">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-508">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-508">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-509">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-509">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-510">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-510">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStopChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabStopChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabStopChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.TabStopChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event TabStopChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabStopChanged;" />
      <MemberSignature Language="F#" Value="member this.TabStopChanged : EventHandler " Usage="member this.TabStopChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-511"><see cref="P:System.Windows.Forms.Control.TabStop" /> 속성 값이 변경될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-511">Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-512">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.TabStop%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-512">This event is raised if the <xref:System.Windows.Forms.Control.TabStop%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-513">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-513">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-514">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-514">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-515">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-515">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-516">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-516">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validated">
      <MemberSignature Language="C#" Value="public event EventHandler Validated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Validated" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validated" />
      <MemberSignature Language="VB.NET" Value="Public Event Validated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Validated;" />
      <MemberSignature Language="F#" Value="member this.Validated : EventHandler " Usage="member this.Validated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-517">컨트롤의 유효성 검사가 완료되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-517">Occurs when the control is finished validating.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-518">호출 하 여 키보드 (TAB, SHIFT + TAB 등)를 사용 하 여 포커스를 변경 하면 합니다 <xref:System.Windows.Forms.Control.Select%2A> 또는 <xref:System.Windows.Forms.Control.SelectNextControl%2A> 메서드를 설정 하거나를 <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> 속성을 현재 폼에 포커스 이벤트가 다음 순서 대로 발생:</span><span class="sxs-lookup"><span data-stu-id="e0bd4-518">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property to the current form, focus events occur in the following order:</span></span>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Enter>  
  
 <xref:System.Windows.Forms.Control.GotFocus>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Leave>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating>  
  
 `Validated`  
  
 <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="e0bd4-519">마우스를 사용 하 여 또는 호출 하 여 포커스를 변경 하면를 <xref:System.Windows.Forms.Control.Focus%2A> 메서드 포커스 이벤트가 다음 순서 대로 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-519">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Enter>  
  
 <xref:System.Windows.Forms.Control.GotFocus>  
  
 <xref:System.Windows.Forms.Control.LostFocus>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Leave>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating>  
  
 `Validated`  
  
 <span data-ttu-id="e0bd4-520">경우는 <xref:System.Windows.Forms.Control.CausesValidation%2A> 속성이 `false`의 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating> 및 `Validated` 이벤트는 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-520">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating> and `Validated` events are suppressed.</span></span>  
  
 <span data-ttu-id="e0bd4-521">경우는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.ComponentModel.CancelEventArgs> 로 설정 되어 `true` 에 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating> 이벤트 대리자, 후 일반적으로 발생 하는 모든 이벤트는 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating> 이벤트는 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-521">If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating> event delegate, all events that would usually occur after the <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating> event are suppressed.</span></span>  
  
 <span data-ttu-id="e0bd4-522">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-522">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-523">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-523">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-524">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-524">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-525">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-525">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Validated" />
      </Docs>
    </Member>
    <Member MemberName="Validating">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Validating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Validating" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating" />
      <MemberSignature Language="VB.NET" Value="Public Event Validating As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Validating;" />
      <MemberSignature Language="F#" Value="member this.Validating : System.ComponentModel.CancelEventHandler " Usage="member this.Validating : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-526">컨트롤의 유효성을 검사할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-526">Occurs when the control is validating.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-527">호출 하 여 키보드 (TAB, SHIFT + TAB 등)를 사용 하 여 포커스를 변경 하면 합니다 <xref:System.Windows.Forms.Control.Select%2A> 또는 <xref:System.Windows.Forms.Control.SelectNextControl%2A> 메서드를 설정 하거나를 <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> 속성을 현재 폼에 포커스 이벤트가 다음 순서 대로 발생:</span><span class="sxs-lookup"><span data-stu-id="e0bd4-527">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property to the current form, focus events occur in the following order:</span></span>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Enter>  
  
 <xref:System.Windows.Forms.Control.GotFocus>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Leave>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validated>  
  
 <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="e0bd4-528">마우스를 사용 하 여 또는 호출 하 여 포커스를 변경 하면를 <xref:System.Windows.Forms.Control.Focus%2A> 메서드 포커스 이벤트가 다음 순서 대로 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-528">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Enter>  
  
 <xref:System.Windows.Forms.Control.GotFocus>  
  
 <xref:System.Windows.Forms.Control.LostFocus>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Leave>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validated>  
  
 <span data-ttu-id="e0bd4-529">경우는 <xref:System.Windows.Forms.Control.CausesValidation%2A> 속성이 `false`의 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating> 및 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validated> 이벤트는 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-529">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating> and <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="e0bd4-530">경우는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.ComponentModel.CancelEventArgs> 로 설정 되어 `true` 에 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating> 이벤트 대리자, 후 일반적으로 발생 하는 모든 이벤트는 <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating> 이벤트는 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-530">If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating> event delegate, all events that would usually occur after the <xref:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating> event are suppressed.</span></span>  
  
 <span data-ttu-id="e0bd4-531">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-531">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-532">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-532">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-533">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-533">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-534">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-534">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
      </Docs>
    </Member>
    <Member MemberName="VisibleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler VisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler VisibleChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.VisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event VisibleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ VisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.VisibleChanged : EventHandler " Usage="member this.VisibleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bd4-535"><see cref="P:System.Windows.Forms.Control.Visible" /> 속성 값이 변경될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-535">Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bd4-536">이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.Control.Visible%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-536">This event is raised if the <xref:System.Windows.Forms.Control.Visible%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="e0bd4-537">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-537">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0bd4-538">Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-538">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="e0bd4-539">이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로</span><span class="sxs-lookup"><span data-stu-id="e0bd4-539">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e0bd4-540">이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bd4-540">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>