<Type Name="Support" FullName="Microsoft.VisualBasic.Compatibility.VB6.Support">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf3f6528db2650c38792c479c7a16921f9d0b376" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
    <Meta Name="ms.locfileid" Value="32088985" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Support" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Support extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.Support" />
  <TypeSignature Language="VB.NET" Value="Public Module Support" />
  <TypeSignature Language="C++ CLI" Value="public ref class Support sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="59f2c-101">Visual Basic 6.0과의 이전 버전 호환성을 제공하기 위한 다양한 유틸리티 함수를 포함합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="59f2c-101">Contains various utility functions for backward compatibility with Visual Basic 6.0.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-102">이 클래스의 함수는 Visual Basic 6.0 프로젝트를 Visual Basic로 업그레이드 하는 동안 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-102">The functions in this class are used during the upgrade of Visual Basic 6.0 projects to Visual Basic.</span></span> <span data-ttu-id="59f2c-103">일부 함수는 Visual basic; 더 이상 지원 되지 않는 Visual Basic 6.0 함수를 바꿀 다른 사용자의 개체 모델의 차이 대 한 보정 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-103">Some functions replace Visual Basic 6.0 functions that are no longer supported in Visual Basic; others compensate for differences in the object models.</span></span>  
  
 <span data-ttu-id="59f2c-104">Visual Basic 프로젝트에서이 클래스의 함수를 사용 하려면 추가에 대 한 참조는 `Microsoft.VisualBasic.Compatibility.VB6` 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-104">To use functions in this class in a Visual Basic project, add a reference to the `Microsoft.VisualBasic.Compatibility.VB6` namespace.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyArray">
      <MemberSignature Language="C#" Value="public static Array CopyArray (Array SourceArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Array CopyArray(class System.Array SourceArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(System.Array)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyArray (SourceArray As Array) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CopyArray(Array ^ SourceArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="SourceArray">
          <span data-ttu-id="59f2c-105">
            <see cref="T:System.Array" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-105">A <see cref="T:System.Array" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-106">
            <see langword="Array" />를 <see langword="Variant" />에 할당하는 Visual Basic 6.0의 기능과 동일합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-106">Duplicates Visual Basic 6.0 functionality of assigning an <see langword="Array" /> to a <see langword="Variant" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-107">복사할 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-107">The array to copy.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-108">Visual Basic 6.0 `Variant` Visual Basic의 데이터 형식이 더 이상 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-108">The Visual Basic 6.0 `Variant` data type is no longer supported in Visual Basic.</span></span> <span data-ttu-id="59f2c-109">`CopyArray` 함수를 사용 하는 업그레이드 도구에서 복사 하는 `Array` 간에 `Variant` 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-109">The `CopyArray` function is used by the upgrade tools to copy an `Array` to or from a `Variant` array.</span></span>  
  
 <span data-ttu-id="59f2c-110">Visual Basic의 배열을 복사 하려면 사용 하 여는 <xref:System.Array.Clone%2A>, <xref:System.Array.Copy%2A> 또는 <xref:System.Array.CopyTo%2A> 의 메서드는 <xref:System.Array> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-110">To copy an array in Visual Basic, use the <xref:System.Array.Clone%2A>, <xref:System.Array.Copy%2A> or <xref:System.Array.CopyTo%2A> methods of the <xref:System.Array> class.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorToIPicture">
      <MemberSignature Language="C#" Value="public static object CursorToIPicture (System.Windows.Forms.Cursor curs);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CursorToIPicture(class System.Windows.Forms.Cursor curs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(System.Windows.Forms.Cursor)" />
      <MemberSignature Language="VB.NET" Value="Public Function CursorToIPicture (curs As Cursor) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CursorToIPicture(System::Windows::Forms::Cursor ^ curs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curs" Type="System.Windows.Forms.Cursor" />
      </Parameters>
      <Docs>
        <param name="curs">
          <span data-ttu-id="59f2c-111">변환할 <see cref="T:System.Windows.Forms.Cursor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-111">The <see cref="T:System.Windows.Forms.Cursor" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-112">지정된 <see cref="T:System.Windows.Forms.Cursor" />에 해당하는 OLE <see langword="IPicture" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-112">Returns an OLE <see langword="IPicture" /> object that corresponds to the specified <see cref="T:System.Windows.Forms.Cursor" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-113">OLE <see langword="IPicture" /> 개체를 나타내는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-113">An <see cref="T:System.Object" /> that represents the OLE <see langword="IPicture" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-114">Visual Basic 6.0에서의 `MouseIcon` 사용자 지정을 로드 하는 폼 이나 컨트롤의 속성을 사용할 수 `MousePointer` (커서).</span><span class="sxs-lookup"><span data-stu-id="59f2c-114">In Visual Basic 6.0, the `MouseIcon` property of a form or control could be used to load a custom `MousePointer` (cursor).</span></span> <span data-ttu-id="59f2c-115">이미지에 대 한 일부 경우에는 `MouseIcon` 로 저장 한 `stdOle.IPicture`; 업그레이드 도구에 의해 변환 하려면이 함수는 사용는 <xref:System.Windows.Forms.Cursor> 에 `stdOle.IPicture`합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-115">In some cases, the image for the `MouseIcon` was stored as a `stdOle.IPicture`; this function is used by the upgrade tool to convert a <xref:System.Windows.Forms.Cursor> to a `stdOle.IPicture`.</span></span>  
  
 <span data-ttu-id="59f2c-116">변환 하는 <xref:System.Windows.Forms.Cursor> Visual Basic에서 사용 하 여는 <xref:System.Windows.Forms.AxHost.GetIPictureFromCursor%2A> 의 메서드는 <xref:System.Windows.Forms.AxHost> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-116">To convert a <xref:System.Windows.Forms.Cursor> in Visual Basic, use the <xref:System.Windows.Forms.AxHost.GetIPictureFromCursor%2A> method of the <xref:System.Windows.Forms.AxHost> class.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Eqv">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59f2c-117">두 식에서 논리적 동치를 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-117">Performs a logical equivalence on two expressions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static bool Eqv (bool a, bool b);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool Eqv(bool a, bool b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Boolean, b As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Eqv(bool a, bool b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean" />
        <Parameter Name="b" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="59f2c-118">@FSHO2@비교할 <see cref="T:System.Boolean" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-118">A <see cref="T:System.Boolean" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="59f2c-119">@FSHO2@비교할 <see cref="T:System.Boolean" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-119">A <see cref="T:System.Boolean" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-120">두 <see cref="T:System.Boolean" /> 식에서 논리적 동치를 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-120">Performs a logical equivalence on two <see cref="T:System.Boolean" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-121">두 식이 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-121">
              <see langword="true" /> if the two expressions are equal; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-122">식 중 하나가 `Null`, 결과도 `Null`합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-122">If either expression is `Null`, result is also `Null`.</span></span> <span data-ttu-id="59f2c-123">두 식 모두 `Null`, 다음 표에 따라 결과가 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-123">When neither expression is `Null`, result is determined according to the following table:</span></span>  
  
|<span data-ttu-id="59f2c-124">Expression1 경우</span><span class="sxs-lookup"><span data-stu-id="59f2c-124">If expression1 is</span></span>|<span data-ttu-id="59f2c-125">Expression2 이며</span><span class="sxs-lookup"><span data-stu-id="59f2c-125">And expression2 is</span></span>|<span data-ttu-id="59f2c-126">결과</span><span class="sxs-lookup"><span data-stu-id="59f2c-126">The result is</span></span>|  
|-----------------------|------------------------|-------------------|  
|`true`|`true`|`true`|  
|`true`|`false`|`false`|  
|`false`|`true`|`false`|  
|`false`|`false`|`true`|  
  
 <span data-ttu-id="59f2c-127">Visual Basic의 경우에 `Eqv` 연산자는 더 이상 Visual Basic 언어의 일부로; 대신 등호 (=) 비교 연산자를 사용 하 여 `Eqv` 논리에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-127">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; use the equals (=) comparison operator in place of `Eqv` for logical evaluations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static byte Eqv (byte a, byte b);" />
      <MemberSignature Language="ILAsm" Value=".method public static unsigned int8 Eqv(unsigned int8 a, unsigned int8 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Byte, b As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Eqv(System::Byte a, System::Byte b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte" />
        <Parameter Name="b" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="59f2c-128">@FSHO2@비교할 <see cref="T:System.Byte" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-128">A <see cref="T:System.Byte" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="59f2c-129">@FSHO2@비교할 <see cref="T:System.Byte" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-129">A <see cref="T:System.Byte" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-130">두 <see cref="T:System.Byte" /> 식에서 논리적 동치를 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-130">Performs a logical equivalence on two <see cref="T:System.Byte" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-131">비트 비교의 결과가 포함된 <see cref="T:System.Byte" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-131">A <see cref="T:System.Byte" /> that contains the result of the bitwise comparison.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-132">`Eqv` 연산자는 두 숫자 식의 동일한 위치의 비트 비트 비교를 수행 하 고 해당 다음 표에 따라 비트 설정:</span><span class="sxs-lookup"><span data-stu-id="59f2c-132">The `Eqv` operator performs a bitwise comparison of identically positioned bits in two numeric expressions and sets the corresponding bit according to the following table:</span></span>  
  
|<span data-ttu-id="59f2c-133">Expression1에서 비트가</span><span class="sxs-lookup"><span data-stu-id="59f2c-133">If bit in expression1 is</span></span>|<span data-ttu-id="59f2c-134">Expression2에서 비트가 및</span><span class="sxs-lookup"><span data-stu-id="59f2c-134">And bit in expression2 is</span></span>|<span data-ttu-id="59f2c-135">결과</span><span class="sxs-lookup"><span data-stu-id="59f2c-135">The result is</span></span>|  
|------------------------------|-------------------------------|-------------------|  
|<span data-ttu-id="59f2c-136">0</span><span class="sxs-lookup"><span data-stu-id="59f2c-136">0</span></span>|<span data-ttu-id="59f2c-137">0</span><span class="sxs-lookup"><span data-stu-id="59f2c-137">0</span></span>|<span data-ttu-id="59f2c-138">1</span><span class="sxs-lookup"><span data-stu-id="59f2c-138">1</span></span>|  
|<span data-ttu-id="59f2c-139">0</span><span class="sxs-lookup"><span data-stu-id="59f2c-139">0</span></span>|<span data-ttu-id="59f2c-140">1</span><span class="sxs-lookup"><span data-stu-id="59f2c-140">1</span></span>|<span data-ttu-id="59f2c-141">0</span><span class="sxs-lookup"><span data-stu-id="59f2c-141">0</span></span>|  
|<span data-ttu-id="59f2c-142">1</span><span class="sxs-lookup"><span data-stu-id="59f2c-142">1</span></span>|<span data-ttu-id="59f2c-143">0</span><span class="sxs-lookup"><span data-stu-id="59f2c-143">0</span></span>|<span data-ttu-id="59f2c-144">0</span><span class="sxs-lookup"><span data-stu-id="59f2c-144">0</span></span>|  
|<span data-ttu-id="59f2c-145">1</span><span class="sxs-lookup"><span data-stu-id="59f2c-145">1</span></span>|<span data-ttu-id="59f2c-146">1</span><span class="sxs-lookup"><span data-stu-id="59f2c-146">1</span></span>|<span data-ttu-id="59f2c-147">1</span><span class="sxs-lookup"><span data-stu-id="59f2c-147">1</span></span>|  
  
 <span data-ttu-id="59f2c-148">Visual basic의 경우는 `Eqv` 연산자는 더 이상; 비트 평가 사용에 대 한 Visual Basic 언어의 일부는 `Not` 및 `XOr` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-148">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static short Eqv (short a, short b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int16 Eqv(int16 a, int16 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Short, b As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Eqv(short a, short b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16" />
        <Parameter Name="b" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="59f2c-149">@FSHO2@비교할 <see cref="T:System.Int16" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-149">A <see cref="T:System.Int16" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="59f2c-150">@FSHO2@비교할 <see cref="T:System.Int16" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-150">A <see cref="T:System.Int16" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-151">두 <see cref="T:System.Int16" /> 식에서 논리적 동치를 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-151">Performs a logical equivalence on two <see cref="T:System.Int16" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-152">비교의 결과가 포함된 <see cref="T:System.Int16" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-152">A <see cref="T:System.Int16" /> that contains the result of the comparison.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-153">Visual basic의 경우는 `Eqv` 연산자는 더 이상; 비트 평가 사용에 대 한 Visual Basic 언어의 일부는 `Not` 및 `XOr` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-153">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static int Eqv (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Eqv(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Integer, b As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Eqv(int a, int b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="59f2c-154">@FSHO2@비교할 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-154">A <see cref="T:System.Int32" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="59f2c-155">@FSHO2@비교할 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-155">A <see cref="T:System.Int32" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-156">두 <see cref="T:System.Int32" /> 식에서 논리적 동치를 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-156">Performs a logical equivalence on two <see cref="T:System.Int32" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-157">비교의 결과가 포함된 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-157">A <see cref="T:System.Int32" /> that contains the result of the comparison.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-158">Visual basic의 경우는 `Eqv` 연산자는 더 이상; 비트 평가 사용에 대 한 Visual Basic 언어의 일부는 `Not` 및 `XOr` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-158">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static long Eqv (long a, long b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Eqv(int64 a, int64 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Long, b As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Eqv(long a, long b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="59f2c-159">@FSHO2@비교할 <see cref="T:System.Int64" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-159">A <see cref="T:System.Int64" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="59f2c-160">@FSHO2@비교할 <see cref="T:System.Int64" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-160">A <see cref="T:System.Int64" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-161">두 <see cref="T:System.Int64" /> 식에서 논리적 동치를 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-161">Performs a logical equivalence on two <see cref="T:System.Int64" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-162">비교의 결과가 포함된 <see cref="T:System.Int64" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-162">A <see cref="T:System.Int64" /> that contains the result of the comparison.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-163">Visual basic의 경우는 `Eqv` 연산자는 더 이상; 비트 평가 사용에 대 한 Visual Basic 언어의 일부는 `Not` 및 `XOr` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-163">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static object Eqv (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public static object Eqv(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Object, b As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Eqv(System::Object ^ a, System::Object ^ b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="59f2c-164">@FSHO2@비교할 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-164">A <see cref="T:System.Object" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="59f2c-165">@FSHO2@비교할 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-165">A <see cref="T:System.Object" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-166">두 <see cref="T:System.Object" /> 식에서 논리적 동치를 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-166">Performs a logical equivalence on two <see cref="T:System.Object" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-167">비교의 결과가 포함된 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-167">A <see cref="T:System.Object" /> that contains the result of the comparison.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-168">Visual basic의 경우는 `Eqv` 연산자는 더 이상; 비트 평가 사용에 대 한 Visual Basic 언어의 일부는 `Not` 및 `XOr` 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-168">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeBold">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeBold (System.Drawing.Font CurrentFont, bool Bold);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeBold(class System.Drawing.Font CurrentFont, bool Bold) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeBold (CurrentFont As Font, Bold As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeBold(System::Drawing::Font ^ CurrentFont, bool Bold);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Bold" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="59f2c-169">
            <see cref="T:System.Drawing.Font" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-169">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Bold">
          <span data-ttu-id="59f2c-170">
            <see cref="F:System.Drawing.FontStyle.Bold" /> 스타일 비트를 설정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-170">
              <see langword="true" /> to set the <see cref="F:System.Drawing.FontStyle.Bold" /> style bit; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-171">글꼴의 <see cref="F:System.Drawing.FontStyle.Bold" /> 스타일 비트를 변경합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-171">Changes the <see cref="F:System.Drawing.FontStyle.Bold" /> style bit for a font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-172">새 스타일이 적용된 <see cref="T:System.Drawing.Font" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-172">A <see cref="T:System.Drawing.Font" /> with the new style applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-173">Visual Basic 6.0에서 글꼴 스타일 속성을 설정 하 여 적용 된 사용 하 여 Visual Basic 글꼴 스타일을 적용 한 <xref:System.Drawing.FontStyle> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-173">In Visual Basic 6.0, font styles were applied by setting properties; in Visual Basic font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration.</span></span> <span data-ttu-id="59f2c-174">이 함수는 Visual Basic 6.0 속성을 새 열거형 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-174">This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeGdiCharSet">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeGdiCharSet (System.Drawing.Font CurrentFont, byte GdiCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeGdiCharSet(class System.Drawing.Font CurrentFont, unsigned int8 GdiCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(System.Drawing.Font,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeGdiCharSet (CurrentFont As Font, GdiCharSet As Byte) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeGdiCharSet(System::Drawing::Font ^ CurrentFont, System::Byte GdiCharSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="GdiCharSet" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="59f2c-175">
            <see cref="T:System.Drawing.Font" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-175">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="GdiCharSet">
          <span data-ttu-id="59f2c-176">사용할 GDI 문자 집합을 지정하는 바이트 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-176">A byte value that specifies the GDI character set to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-177">지정된 GDI 문자 집합에 대한 글꼴을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-177">Returns a font for a specified GDI character set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-178">지정된 GDI 문자 집합에 대한 <see cref="T:System.Drawing.Font" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-178">A <see cref="T:System.Drawing.Font" /> for the specified GDI character set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-179">Visual Basic 6.0에서의 `stdFont` 한 개체는 `CharSet` GDI 지정 속성을 문자 집합 글꼴에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-179">In Visual Basic 6.0, the `stdFont` object had a `CharSet` property that specified the GDI character set for a font.</span></span> <span data-ttu-id="59f2c-180">Visual Basic의 경우 문자 집합의 선택적 요소로 지정 된 <xref:System.Drawing.Font> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-180">In Visual Basic, the character set is specified as an optional of a <xref:System.Drawing.Font> constructor.</span></span> <span data-ttu-id="59f2c-181">변환할 업그레이드 도구에서이 함수는 사용 된 `stdFont` 에 <xref:System.Drawing.Font>합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-181">This function is used by the upgrade tools to convert a `stdFont` to a <xref:System.Drawing.Font>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Font.GdiCharSet" />
      </Docs>
    </Member>
    <Member MemberName="FontChangeItalic">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeItalic (System.Drawing.Font CurrentFont, bool Italic);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeItalic(class System.Drawing.Font CurrentFont, bool Italic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeItalic (CurrentFont As Font, Italic As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeItalic(System::Drawing::Font ^ CurrentFont, bool Italic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Italic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="59f2c-182">
            <see cref="T:System.Drawing.Font" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-182">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Italic">
          <span data-ttu-id="59f2c-183">
            <see cref="F:System.Drawing.FontStyle.Italic" /> 스타일 비트를 설정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-183">
              <see langword="true" /> to set the <see cref="F:System.Drawing.FontStyle.Italic" /> style bit; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-184">글꼴의 <see cref="F:System.Drawing.FontStyle.Italic" /> 스타일 비트를 변경합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-184">Changes the <see cref="F:System.Drawing.FontStyle.Italic" /> style bit for a font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-185">새 스타일이 적용된 <see cref="T:System.Drawing.Font" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-185">A <see cref="T:System.Drawing.Font" /> with the new style applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-186">Visual Basic 6.0에서 글꼴 스타일 속성을 설정 하 여 적용 된 사용 하 여 Visual Basic 글꼴 스타일을 적용 한 <xref:System.Drawing.FontStyle> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-186">In Visual Basic 6.0, font styles were applied by setting properties; in Visual Basic font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration.</span></span> <span data-ttu-id="59f2c-187">이 함수는 Visual Basic 6.0 속성을 새 열거형 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-187">This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeName">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeName (System.Drawing.Font CurrentFont, string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeName(class System.Drawing.Font CurrentFont, string Name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(System.Drawing.Font,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeName (CurrentFont As Font, Name As String) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeName(System::Drawing::Font ^ CurrentFont, System::String ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="59f2c-188">
            <see cref="T:System.Drawing.Font" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-188">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Name">
          <span data-ttu-id="59f2c-189">Visual Basic 6.0 <see langword="String" /> 속성을 나타내는 <see langword="Font" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-189">A <see langword="String" /> that represents the Visual Basic 6.0 <see langword="Font" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-190">지정된 Visual Basic 6.0 <see langword="Font" />에 대한 새 <see cref="T:System.Drawing.Font" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-190">Returns a new <see cref="T:System.Drawing.Font" /> for a given Visual Basic 6.0 <see langword="Font" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-191">Visual Basic 6.0 <see langword="Font" />와 일치하는 <see cref="T:System.Drawing.Font" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-191">A <see cref="T:System.Drawing.Font" /> that matches the Visual Basic 6.0 <see langword="Font" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-192">Visual Basic 6.0에서 글꼴의 이름으로 지정 되었습니다는 `Font` 속성, Visual Basic의 <xref:System.Drawing.Font.Name%2A> 의 속성인는 <xref:System.Drawing.Font> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-192">In Visual Basic 6.0, the name of a font was specified by the `Font` property; in Visual Basic, <xref:System.Drawing.Font.Name%2A> is a property of the <xref:System.Drawing.Font> object.</span></span> <span data-ttu-id="59f2c-193">Visual Basic 6.0 변환할 업그레이드 도구에서이 함수는 사용 `Font` 에 <xref:System.Drawing.Font>합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-193">This function is used by the upgrade tools to convert a Visual Basic 6.0 `Font` to a <xref:System.Drawing.Font>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeSize (System.Drawing.Font CurrentFont, float Size);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeSize(class System.Drawing.Font CurrentFont, float32 Size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(System.Drawing.Font,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeSize (CurrentFont As Font, Size As Single) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeSize(System::Drawing::Font ^ CurrentFont, float Size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Size" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="59f2c-194">
            <see cref="T:System.Drawing.Font" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-194">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Size">
          <span data-ttu-id="59f2c-195">Visual Basic 6.0 <see langword="Single" /> 속성을 나타내는 <see langword="FontSize" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-195">A <see langword="Single" /> that represents the Visual Basic 6.0 <see langword="FontSize" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-196">글꼴의 <see cref="P:System.Drawing.Font.Size" /> 속성을 변경합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-196">Changes the <see cref="P:System.Drawing.Font.Size" /> property for a font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-197">Visual Basic 6.0 <see langword="FontSize" />와 일치하는 <see cref="T:System.Drawing.Font" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-197">A <see cref="T:System.Drawing.Font" /> that matches the Visual Basic 6.0 <see langword="FontSize" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-198">Visual Basic 6.0 글꼴의 크기에 의해 지정 된는 `FontSize` 속성, Visual Basic의 <xref:System.Drawing.Font.Size%2A> 의 속성인는 <xref:System.Drawing.Font> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-198">In Visual Basic 6.0, the size of a font was specified by the `FontSize` property; in Visual Basic, <xref:System.Drawing.Font.Size%2A> is a property of the <xref:System.Drawing.Font> object.</span></span> <span data-ttu-id="59f2c-199">Visual Basic 6.0 변환할 업그레이드 도구에서이 함수는 사용 `Font` 에 <xref:System.Drawing.Font>합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-199">This function is used by the upgrade tools to convert a Visual Basic 6.0 `Font` to a <xref:System.Drawing.Font>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeStrikeout">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeStrikeout (System.Drawing.Font CurrentFont, bool Strikeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeStrikeout(class System.Drawing.Font CurrentFont, bool Strikeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeStrikeout (CurrentFont As Font, Strikeout As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeStrikeout(System::Drawing::Font ^ CurrentFont, bool Strikeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Strikeout" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="59f2c-200">
            <see cref="T:System.Drawing.Font" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-200">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Strikeout">
          <span data-ttu-id="59f2c-201">
            <see cref="F:System.Drawing.FontStyle.Strikeout" /> 스타일 비트를 설정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-201">
              <see langword="true" /> to set the <see cref="F:System.Drawing.FontStyle.Strikeout" /> style bit; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-202">글꼴의 <see cref="F:System.Drawing.FontStyle.Strikeout" /> 스타일 비트를 변경합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-202">Changes the <see cref="F:System.Drawing.FontStyle.Strikeout" /> style bit for a font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-203">새 스타일이 적용된 <see cref="T:System.Drawing.Font" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-203">A <see cref="T:System.Drawing.Font" /> with the new style applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-204">Visual Basic 6.0에서 글꼴 스타일 속성을 설정 하 여 적용 된 사용 하 여 Visual Basic 글꼴 스타일을 적용 한 <xref:System.Drawing.FontStyle> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-204">In Visual Basic 6.0, font styles were applied by setting properties; in Visual Basic font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration.</span></span> <span data-ttu-id="59f2c-205">이 함수는 Visual Basic 6.0 속성을 새 열거형 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-205">This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeUnderline">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeUnderline (System.Drawing.Font CurrentFont, bool Underline);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeUnderline(class System.Drawing.Font CurrentFont, bool Underline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeUnderline (CurrentFont As Font, Underline As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeUnderline(System::Drawing::Font ^ CurrentFont, bool Underline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Underline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="59f2c-206">
            <see cref="T:System.Drawing.Font" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-206">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Underline">
          <span data-ttu-id="59f2c-207">
            <see cref="F:System.Drawing.FontStyle.Underline" /> 스타일 비트를 설정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-207">
              <see langword="true" /> to set the <see cref="F:System.Drawing.FontStyle.Underline" /> style bit; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-208">글꼴의 <see cref="F:System.Drawing.FontStyle.Underline" /> 스타일 비트를 변경합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-208">Changes the <see cref="F:System.Drawing.FontStyle.Underline" /> style bit for a font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-209">새 스타일이 적용된 <see cref="T:System.Drawing.Font" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-209">A <see cref="T:System.Drawing.Font" /> with the new style applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-210">Visual Basic 6.0에서 글꼴 스타일 속성을 설정 하 여 적용 된 사용 하 여 Visual Basic 글꼴 스타일을 적용 한 <xref:System.Drawing.FontStyle> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-210">In Visual Basic 6.0, font styles were applied by setting properties; in Visual Basic font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration.</span></span> <span data-ttu-id="59f2c-211">이 함수는 Visual Basic 6.0 속성을 새 열거형 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-211">This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontToIFont">
      <MemberSignature Language="C#" Value="public static object FontToIFont (System.Drawing.Font fnt);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FontToIFont(class System.Drawing.Font fnt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont(System.Drawing.Font)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontToIFont (fnt As Font) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FontToIFont(System::Drawing::Font ^ fnt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fnt" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="fnt">
          <span data-ttu-id="59f2c-212">변환할 <see cref="T:System.Drawing.Font" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-212">The <see cref="T:System.Drawing.Font" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-213">
            <see cref="T:System.Drawing.Font" />를 Visual Basic 6.0 <see langword="stdFont" /> 개체로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-213">Converts a <see cref="T:System.Drawing.Font" /> to a Visual Basic 6.0 <see langword="stdFont" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-214">
            <see langword="stdFont" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-214">A <see langword="stdFont" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-215">Visual Basic 6.0 `stdFont` 개체가 COM 기반 되 고 Visual Basic에서는 동일한 요소 없음이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-215">The Visual Basic 6.0 `stdFont` object was COM-based and has no equivalent in Visual Basic.</span></span> <span data-ttu-id="59f2c-216">사이 변환할 업그레이드 도구에서이 함수는 사용 된 <xref:System.Drawing.Font> 및 `stdFont` 프로젝트 업그레이드 중입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-216">This function is used by the upgrade tools to convert between a <xref:System.Drawing.Font> and a `stdFont` during project upgrade.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (object Expression, string Style = &quot;&quot;, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = 1, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Format(object Expression, string Style, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function Format (Expression As Object, Optional Style As String = &quot;&quot;, Optional DayOfWeek As FirstDayOfWeek = 1, Optional WeekOfYear As FirstWeekOfYear = 1) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="Style" Type="System.String" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="59f2c-217">변환할 <see cref="T:System.Object" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-217">The <see cref="T:System.Object" /> expression to convert.</span>
          </span>
        </param>
        <param name="Style">
          <span data-ttu-id="59f2c-218">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-218">Optional.</span>
          </span>
          <span data-ttu-id="59f2c-219">날짜 서식을 나타내는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-219">A <see cref="T:System.String" /> that represents a date format.</span>
          </span>
        </param>
        <param name="DayOfWeek">
          <span data-ttu-id="59f2c-220">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-220">Optional.</span>
          </span>
          <span data-ttu-id="59f2c-221">
            <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-221">A <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration.</span>
          </span>
        </param>
        <param name="WeekOfYear">
          <span data-ttu-id="59f2c-222">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-222">Optional.</span>
          </span>
          <span data-ttu-id="59f2c-223">
            <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-223">A <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-224">Visual Basic과 호환될 수 있도록 Visual Basic 6.0 <see langword="Format" /> 함수를 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-224">Converts the Visual Basic 6.0 <see langword="Format" /> function to be compatible with Visual Basic.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-225">서식이 지정된 데이터가 포함된 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-225">A <see cref="T:System.String" /> that contains the formatted data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-226">Visual Basic 6.0 `Format` 함수에서 작동할 수는 `Variant` 데이터 형식, Visual Basic의는 `Variant` 데이터 형식이 더 이상 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-226">The Visual Basic 6.0 `Format` function could operate on a `Variant` data type; in Visual Basic the `Variant` data type no longer exists.</span></span> <span data-ttu-id="59f2c-227">변환할 업그레이드 도구에서이 함수는 사용 된 `Variant` 을 사용 하 여는 `Format` 공용 언어 런타임 규격 형식 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-227">This function is used by the upgrade tools to convert a `Variant` formatted by using the `Format` function to a common language runtime-compliant type.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserHeight">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserHeight (double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserHeight(float64 Height, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserHeight (Height As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserHeight(double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Height" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Height">
          <span data-ttu-id="59f2c-228">높이를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-228">A <see cref="T:System.Double" /> that represents the height.</span>
          </span>
        </param>
        <param name="ScaleHeight">
          <span data-ttu-id="59f2c-229">현재 <see langword="ScaleHeight" />에 대한 Visual Basic 6.0 <see langword="ScaleMode" />를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-229">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleHeight" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalHeightInPixels">
          <span data-ttu-id="59f2c-230">높이(픽셀)를 나타내는 <see langword="Integer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-230">An <see langword="Integer" /> that represents the height in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-231">픽셀 단위를 Visual Basic 6.0 <see langword="ScaleHeight" /> 단위로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-231">Converts a pixel measurement to a Visual Basic 6.0 <see langword="ScaleHeight" /> measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-232">변환된 Visual Basic 6.0 <see langword="ScaleHeight" />가 포함된 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-232">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleHeight" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-233">Visual Basic 6.0 지원에 정의 된 여러 좌표계는 `ScaleMode` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-233">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="59f2c-234">사용자 정의 값이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-234">This included a user-defined value.</span></span> <span data-ttu-id="59f2c-235">Visual Basic만 픽셀을 기반으로 하는 좌표계를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-235">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="59f2c-236">이 함수는 픽셀과 배율 사용자 정의 값 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-236">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserWidth">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserWidth (double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserWidth(float64 Width, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserWidth (Width As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserWidth(double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Width" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Width">
          <span data-ttu-id="59f2c-237">너비를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-237">A <see cref="T:System.Double" /> that represents the width.</span>
          </span>
        </param>
        <param name="ScaleWidth">
          <span data-ttu-id="59f2c-238">현재 <see langword="ScaleWidth" />에 대한 Visual Basic 6.0 <see langword="ScaleMode" />를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-238">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleWidth" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalWidthInPixels">
          <span data-ttu-id="59f2c-239">너비(픽셀)를 나타내는 <see langword="Integer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-239">An <see langword="Integer" /> that represents the width in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-240">픽셀 단위를 Visual Basic 6.0 <see langword="ScaleWidth" /> 단위로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-240">Converts a pixel measurement to a Visual Basic 6.0 <see langword="ScaleWidth" /> measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-241">변환된 Visual Basic 6.0 <see langword="ScaleWidth" />가 포함된 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-241">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleWidth" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-242">Visual Basic 6.0 지원에 정의 된 여러 좌표계는 `ScaleMode` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-242">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="59f2c-243">사용자 정의 값이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-243">This included a user-defined value.</span></span> <span data-ttu-id="59f2c-244">Visual Basic만 픽셀을 기반으로 하는 좌표계를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-244">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="59f2c-245">이 함수는 픽셀과 배율 사용자 정의 값 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-245">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserX">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserX (double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserX(float64 X, float64 ScaleLeft, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserX (X As Double, ScaleLeft As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserX(double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="ScaleLeft" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="59f2c-246">X 좌표를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-246">A <see cref="T:System.Double" /> that represents the X coordinate.</span>
          </span>
        </param>
        <param name="ScaleLeft">
          <span data-ttu-id="59f2c-247">현재 <see langword="ScaleLeft" />에 대한 Visual Basic 6.0 <see langword="ScaleMode" />를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-247">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleLeft" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="ScaleWidth">
          <span data-ttu-id="59f2c-248">현재 <see langword="ScaleWidth" />에 대한 Visual Basic 6.0 <see langword="ScaleMode" />를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-248">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleWidth" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalWidthInPixels">
          <span data-ttu-id="59f2c-249">너비(픽셀)를 나타내는 <see langword="Integer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-249">An <see langword="Integer" /> that represents the width in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-250">픽셀 단위를 Visual Basic 6.0 <see langword="ScaleLeft" /> 단위로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-250">Converts a pixel measurement to a Visual Basic 6.0 <see langword="ScaleLeft" /> measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-251">변환된 Visual Basic 6.0 <see langword="ScaleLeft" />가 포함된 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-251">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleLeft" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-252">Visual Basic 6.0 지원에 정의 된 여러 좌표계는 `ScaleMode` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-252">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="59f2c-253">사용자 정의 값이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-253">This included a user-defined value.</span></span> <span data-ttu-id="59f2c-254">Visual Basic만 픽셀을 기반으로 하는 좌표계를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-254">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="59f2c-255">이 함수는 픽셀과 배율 사용자 정의 값 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-255">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserY">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserY (double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserY(float64 Y, float64 ScaleTop, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserY (Y As Double, ScaleTop As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserY(double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="ScaleTop" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="59f2c-256">X 좌표를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-256">A <see cref="T:System.Double" /> that represents the X coordinate.</span>
          </span>
        </param>
        <param name="ScaleTop">
          <span data-ttu-id="59f2c-257">현재 <see langword="ScaleTop" />에 대한 Visual Basic 6.0 <see langword="ScaleMode" />를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-257">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleTop" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="ScaleHeight">
          <span data-ttu-id="59f2c-258">현재 <see langword="ScaleHeight" />에 대한 Visual Basic 6.0 <see langword="ScaleMode" />를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-258">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleHeight" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalHeightInPixels">
          <span data-ttu-id="59f2c-259">높이(픽셀)를 나타내는 <see langword="Integer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-259">An <see langword="Integer" /> that represents the height in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-260">픽셀 단위를 Visual Basic 6.0 <see langword="ScaleTop" /> 단위로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-260">Converts a pixel measurement to a Visual Basic 6.0 <see langword="ScaleTop" /> measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-261">변환된 Visual Basic 6.0 <see langword="ScaleTop" />가 포함된 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-261">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleTop" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-262">Visual Basic 6.0 지원에 정의 된 여러 좌표계는 `ScaleMode` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-262">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="59f2c-263">사용자 정의 값이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-263">This included a user-defined value.</span></span> <span data-ttu-id="59f2c-264">Visual Basic만 픽셀을 기반으로 하는 좌표계를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-264">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="59f2c-265">이 함수는 픽셀과 배율 사용자 정의 값 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-265">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsX">
      <MemberSignature Language="C#" Value="public static double FromPixelsX (double X, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsX(float64 X, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsX (X As Double, ToScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsX(double X, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode ToScale);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="ToScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="59f2c-266">X 좌표(픽셀)를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-266">A <see cref="T:System.Double" /> that represents the X coordinate in pixels.</span>
          </span>
        </param>
        <param name="ToScale">
          <span data-ttu-id="59f2c-267">변환할 Visual Basic 6.0 <see langword="ScaleMode" />를 나타내는 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-267">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 <see langword="ScaleMode" /> to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-268">지정된 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />에 대한 픽셀 단위를 Visual Basic 6.0 단위로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-268">Converts a pixel measurement to a Visual Basic 6.0 measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-269">지정된 <see langword="ScaleMode" />에 대한 Visual Basic 6.0 값이 포함된 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-269">A <see cref="T:System.Double" /> that contains the Visual Basic 6.0 value for the specified <see langword="ScaleMode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-270">Visual Basic 6.0 지원에 정의 된 여러 좌표계는 `ScaleMode` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-270">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="59f2c-271">사용자 정의 값이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-271">This included a user-defined value.</span></span> <span data-ttu-id="59f2c-272">Visual Basic만 픽셀을 기반으로 하는 좌표계를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-272">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="59f2c-273">이 함수는 픽셀과 배율 사용자 정의 값 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-273">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsY">
      <MemberSignature Language="C#" Value="public static double FromPixelsY (double Y, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsY(float64 Y, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsY (Y As Double, ToScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsY(double Y, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode ToScale);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="ToScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="59f2c-274">Y 좌표(픽셀)를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-274">A <see cref="T:System.Double" /> that represents the Y coordinate in pixels.</span>
          </span>
        </param>
        <param name="ToScale">
          <span data-ttu-id="59f2c-275">변환할 Visual Basic 6.0 <see langword="ScaleMode" />를 나타내는 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-275">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 <see langword="ScaleMode" /> to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-276">지정된 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />에 대한 픽셀 단위를 Visual Basic 6.0 단위로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-276">Converts a pixel measurement to a Visual Basic 6.0 measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-277">지정된 <see langword="ScaleMode" />에 대한 Visual Basic 6.0 값이 포함된 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-277">A <see cref="T:System.Double" /> that contains the Visual Basic 6.0 value for the specified <see langword="ScaleMode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-278">Visual Basic 6.0 지원에 정의 된 여러 좌표계는 `ScaleMode` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-278">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="59f2c-279">사용자 정의 값이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-279">This included a user-defined value.</span></span> <span data-ttu-id="59f2c-280">Visual Basic만 픽셀을 기반으로 하는 좌표계를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-280">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="59f2c-281">이 함수는 픽셀과 배율 사용자 정의 값 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-281">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveControl">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Control GetActiveControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Windows.Forms.Control GetActiveControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActiveControl () As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::Control ^ GetActiveControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59f2c-282">현재 포커스가 있는 컨트롤을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-282">Gets the control that currently has focus.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-283">현재 포커스를 갖는 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-283">The control that currently has focus.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-284">Visual Basic 6.0을 바꾸려면 업그레이드 도구에서이 함수는 사용 `Screen.ActiveControl` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-284">This function is used by the upgrade tools to replace the Visual Basic 6.0 `Screen.ActiveControl` property.</span></span> <span data-ttu-id="59f2c-285">호출에 해당 하는 것이 <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-285">It is the equivalent of calling <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> in Visual Basic.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCancel">
      <MemberSignature Language="C#" Value="public static bool GetCancel (System.Windows.Forms.Button btn);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool GetCancel(class System.Windows.Forms.Button btn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel(System.Windows.Forms.Button)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCancel (btn As Button) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetCancel(System::Windows::Forms::Button ^ btn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
      </Parameters>
      <Docs>
        <param name="btn">
          <span data-ttu-id="59f2c-286">
            <see cref="T:System.Windows.Forms.Button" /> 컨트롤 하나.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-286">A <see cref="T:System.Windows.Forms.Button" /> control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-287">
            <see cref="T:System.Windows.Forms.Button" />이 폼의 취소 단추인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-287">Gets a value that indicates whether a <see cref="T:System.Windows.Forms.Button" /> is the cancel button on a form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-288">
            <paramref name="btn" />이 취소 단추이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-288">
              <see langword="true" /> if <paramref name="btn" /> is the cancel button; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-289">이 함수는 해당 하는 검사는 <xref:System.Windows.Forms.Form.CancelButton%2A> 속성은 <xref:System.Windows.Forms.Form>합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-289">This function is the equivalent of checking the <xref:System.Windows.Forms.Form.CancelButton%2A> property of a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefault">
      <MemberSignature Language="C#" Value="public static bool GetDefault (System.Windows.Forms.Button btn);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool GetDefault(class System.Windows.Forms.Button btn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault(System.Windows.Forms.Button)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefault (btn As Button) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetDefault(System::Windows::Forms::Button ^ btn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
      </Parameters>
      <Docs>
        <param name="btn">
          <span data-ttu-id="59f2c-290">
            <see cref="T:System.Windows.Forms.Button" /> 컨트롤 하나.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-290">A <see cref="T:System.Windows.Forms.Button" /> control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-291">
            <see cref="T:System.Windows.Forms.Button" /> 컨트롤이 폼의 기본 단추인지 여부를 결정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-291">Gets sets a value that determines whether a <see cref="T:System.Windows.Forms.Button" /> control is the default button on a form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-292">
            <paramref name="btn" />이 기본 단추이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-292">
              <see langword="true" /> if <paramref name="btn" /> is the default button; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-293">이 함수는 해당 하는 검사는 <xref:System.Windows.Forms.Form.AcceptButton%2A> 속성은 <xref:System.Windows.Forms.Form>합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-293">This function is the equivalent of checking the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEXEName">
      <MemberSignature Language="C#" Value="public static string GetEXEName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetEXEName() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEXEName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEXEName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59f2c-294">현재 응용 프로그램의 실행 파일(.exe) 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-294">Gets the name of the executable file (.exe) for the current application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-295">확장명을 제외한 파일 이름이 포함된 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-295">A <see cref="T:System.String" /> that contains the name without a file name extension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHInstance">
      <MemberSignature Language="C#" Value="public static IntPtr GetHInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public static native int GetHInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHInstance () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetHInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59f2c-296">현재 응용 프로그램의 인스턴스 핸들(HINSTANCE)을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-296">Gets the instance handle (HINSTANCE) for the current application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-297">현재 응용 프로그램 인스턴스<see cref="T:System.IntPtr" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-297">An <see cref="T:System.IntPtr" /> for the current application instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-298">이 함수는 호출에 해당 하는 <xref:System.Runtime.InteropServices.Marshal.GetHINSTANCE%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-298">This function is the equivalent of calling <xref:System.Runtime.InteropServices.Marshal.GetHINSTANCE%2A>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemData">
      <MemberSignature Language="C#" Value="public static int GetItemData (System.Windows.Forms.Control Control, int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 GetItemData(class System.Windows.Forms.Control Control, int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetItemData(System::Windows::Forms::Control ^ Control, int Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control">
          <span data-ttu-id="59f2c-299">
            <see cref="T:System.Windows.Forms.ListBox" /> 또는 <see cref="T:System.Windows.Forms.ComboBox" /> 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-299">A <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</span>
          </span>
        </param>
        <param name="Index">
          <span data-ttu-id="59f2c-300">
            <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />의 인덱스를 나타내는 <see langword="Integer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-300">An <see langword="Integer" /> that represents the index of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-301">
            <see cref="T:System.Windows.Forms.ListBox" /> 또는 <see cref="T:System.Windows.Forms.ComboBox" /> 항목과 연결된 <see langword="Integer" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-301">Gets an <see langword="Integer" /> associated with a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-302">지정된 <see langword="Integer" />와 연결된 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-302">The <see langword="Integer" /> associated with the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-303">Visual Basic 6.0에서의 `ItemData` 속성에 대 한는 `ListBox` 또는 `ComboBox` 에서 디자인 타임에 컨트롤을 설정할 수는 **속성** 창 연결 하는 `Integer` 와 `ListBox` 또는 `ComboBox` 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-303">In Visual Basic 6.0, the `ItemData` property for a `ListBox` or `ComboBox` control could be set at design time in the **Properties** window to associate an `Integer` with a `ListBox` or `ComboBox` item.</span></span> <span data-ttu-id="59f2c-304">Visual Basic의 경우에 `ItemData` 속성이 더 이상 존재 하지 않으면는 `GetItemData` 및 <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A> 메서드의 동작을 에뮬레이트하는 데 사용할 수 `ItemData`합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-304">In Visual Basic, the `ItemData` property no longer exists; the `GetItemData` and <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A> methods can be used to emulate the behavior of `ItemData`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemString">
      <MemberSignature Language="C#" Value="public static string GetItemString (System.Windows.Forms.Control Control, int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetItemString(class System.Windows.Forms.Control Control, int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetItemString(System::Windows::Forms::Control ^ Control, int Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control">
          <span data-ttu-id="59f2c-305">
            <see cref="T:System.Windows.Forms.ListBox" /> 또는 <see cref="T:System.Windows.Forms.ComboBox" /> 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-305">A <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</span>
          </span>
        </param>
        <param name="Index">
          <span data-ttu-id="59f2c-306">
            <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />의 인덱스를 나타내는 <see langword="Integer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-306">An <see langword="Integer" /> that represents the index of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-307">
            <see cref="T:System.String" /> 또는 <see cref="T:System.Windows.Forms.ListBox" /> 항목과 연결된 <see cref="T:System.Windows.Forms.ComboBox" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-307">Gets a <see cref="T:System.String" /> associated with a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-308">지정된 <see cref="T:System.String" />와 연결된 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-308">The <see cref="T:System.String" /> associated with the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-309">Visual Basic 6.0을 에뮬레이션 하기 위해 업그레이드 도구에서이 함수는 사용 `List` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-309">This function is used by the upgrade tools to emulate the Visual Basic 6.0 `List` property.</span></span> <span data-ttu-id="59f2c-310">Visual Basic에서 사용 하 여는 <xref:System.Windows.Forms.ComboBox.Items%2A> 또는 <xref:System.Windows.Forms.ListBox.Items%2A> 속성 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-310">In Visual Basic, use the <xref:System.Windows.Forms.ComboBox.Items%2A> or <xref:System.Windows.Forms.ListBox.Items%2A> property instead.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPath">
      <MemberSignature Language="C#" Value="public static string GetPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPath();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59f2c-311">응용 프로그램에 대한 현재 경로를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-311">Gets the current path for the application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-312">현재 실행 중인 어셈블리의 경로가 포함된 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-312">A <see cref="T:System.String" /> that contains the path of the currently executing assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconToIPicture">
      <MemberSignature Language="C#" Value="public static object IconToIPicture (System.Drawing.Icon ico);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IconToIPicture(class System.Drawing.Icon ico) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture(System.Drawing.Icon)" />
      <MemberSignature Language="VB.NET" Value="Public Function IconToIPicture (ico As Icon) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IconToIPicture(System::Drawing::Icon ^ ico);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ico" Type="System.Drawing.Icon" />
      </Parameters>
      <Docs>
        <param name="ico">
          <span data-ttu-id="59f2c-313">
            <see cref="T:System.Drawing.Icon" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-313">A <see cref="T:System.Drawing.Icon" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-314">지정된 <see cref="T:System.Drawing.Icon" />의 OLE <see langword="IPicture" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-314">Gets an OLE <see langword="IPicture" /> object for a given <see cref="T:System.Drawing.Icon" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-315">OLE <see langword="IPicture" /> 개체를 나타내는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-315">An <see cref="T:System.Object" /> representing the OLE <see langword="IPicture" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-316">Visual Basic 6.0에서는 OLE `IPicture` ; 아이콘을 지정 하려면 개체를 사용할 수 있었습니다 Visual basic에서는 OLE `IPicture` 형식을 더 이상 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-316">In Visual Basic 6.0, an OLE `IPicture` object could be used to specify an icon; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="59f2c-317">사이 변환할 업그레이드 도구에서이 함수는 사용 된 `IPicture` 및 <xref:System.Drawing.Icon>합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-317">This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Icon>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IFontToFont">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font IFontToFont (object objFnt);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font IFontToFont(object objFnt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IFontToFont (objFnt As Object) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ IFontToFont(System::Object ^ objFnt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objFnt" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objFnt">
          <span data-ttu-id="59f2c-318">Visual Basic 6.0 <see langword="stdFont" />가 포함된 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-318">An <see cref="T:System.Object" /> that contains a Visual Basic 6.0 <see langword="stdFont" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-319">Visual Basic 6.0 <see langword="stdFont" /> 개체를 <see cref="T:System.Drawing.Font" />로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-319">Converts a Visual Basic 6.0 <see langword="stdFont" /> object to a <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-320">변환할 지정 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-320">A specified object to convert.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-321">Visual Basic 6.0 `stdFont` 개체가 COM 기반 되 고 Visual Basic에서는 동일한 요소 없음이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-321">The Visual Basic 6.0 `stdFont` object was COM-based and has no equivalent in Visual Basic.</span></span> <span data-ttu-id="59f2c-322">사이 변환할 업그레이드 도구에서이 함수는 사용 된 <xref:System.Drawing.Font> 및 `stdFont` 프로젝트 업그레이드 중입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-322">This function is used by the upgrade tools to convert between a <xref:System.Drawing.Font> and a `stdFont` during project upgrade.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageToIPicture">
      <MemberSignature Language="C#" Value="public static object ImageToIPicture (System.Drawing.Image img);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ImageToIPicture(class System.Drawing.Image img) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImageToIPicture (img As Image) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ImageToIPicture(System::Drawing::Image ^ img);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="img" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="img">
          <span data-ttu-id="59f2c-323">
            <see cref="T:System.Drawing.Image" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-323">A <see cref="T:System.Drawing.Image" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-324">지정된 <see cref="T:System.Drawing.Image" />의 OLE <see langword="IPicture" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-324">Gets an OLE <see langword="IPicture" /> object for a given <see cref="T:System.Drawing.Image" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-325">OLE <see langword="IPicture" /> 개체를 나타내는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-325">An <see cref="T:System.Object" /> representing the OLE <see langword="IPicture" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-326">Visual Basic 6.0에서는 OLE `IPicture` 이미지;를 지정 하는 개체를 사용할 수 있었습니다 Visual basic에서는 OLE `IPicture` 형식을 더 이상 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-326">In Visual Basic 6.0, an OLE `IPicture` object could be used to specify an image; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="59f2c-327">사이 변환할 업그레이드 도구에서이 함수는 사용 된 `IPicture` 및 <xref:System.Drawing.Image>합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-327">This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Image>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageToIPictureDisp">
      <MemberSignature Language="C#" Value="public static object ImageToIPictureDisp (System.Drawing.Image img);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ImageToIPictureDisp(class System.Drawing.Image img) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImageToIPictureDisp (img As Image) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ImageToIPictureDisp(System::Drawing::Image ^ img);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="img" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="img">
          <span data-ttu-id="59f2c-328">
            <see cref="T:System.Drawing.Image" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-328">A <see cref="T:System.Drawing.Image" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-329">지정된 <see cref="T:System.Drawing.Image" />의 OLE <see langword="IPictureDisp" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-329">Gets an OLE <see langword="IPictureDisp" /> object for a given <see cref="T:System.Drawing.Image" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-330">OLE <see langword="IPictureDisp" /> 개체를 나타내는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-330">An <see cref="T:System.Object" /> representing the OLE <see langword="IPictureDisp" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-331">Visual Basic 6.0에서는 OLE `IPictureDisp` 이미지;를 지정 하는 개체를 사용할 수 있었습니다 Visual basic에서는 OLE `IPicture` 형식을 더 이상 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-331">In Visual Basic 6.0, an OLE `IPictureDisp` object could be used to specify an image; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="59f2c-332">사이 변환할 업그레이드 도구에서이 함수는 사용 된 `IPicture` 및 <xref:System.Drawing.Image>합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-332">This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Image>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Imp">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59f2c-333">두 식에서 논리적 포함을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-333">Performs a logical implication on two expressions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static bool Imp (bool a, bool b);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool Imp(bool a, bool b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Boolean, b As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Imp(bool a, bool b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean" />
        <Parameter Name="b" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="59f2c-334">
            <see cref="T:System.Boolean" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-334">A <see cref="T:System.Boolean" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="59f2c-335">
            <see cref="T:System.Boolean" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-335">A <see cref="T:System.Boolean" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-336">두 <see cref="T:System.Boolean" /> 식에서 논리적 포함을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-336">Performs a logical implication on two <see cref="T:System.Boolean" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-337">결과가 포함된 <see cref="T:System.Boolean" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-337">A <see cref="T:System.Boolean" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-338">Visual Basic 6.0 `Imp` 연산자는 더 이상 Visual Basic에서 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-338">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="59f2c-339">이 함수는 업그레이드 도구에서 바꾸는 데 사용 되는 `Imp` 프로젝트 업그레이드 중 연산자.</span><span class="sxs-lookup"><span data-stu-id="59f2c-339">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="59f2c-340">Visual Basic에서 사용 하 여 `Not` 및 `XOr` 대신 `Imp`합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-340">In Visual Basic, use `Not` and `XOr` instead of `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static byte Imp (byte a, byte b);" />
      <MemberSignature Language="ILAsm" Value=".method public static unsigned int8 Imp(unsigned int8 a, unsigned int8 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Byte, b As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Imp(System::Byte a, System::Byte b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte" />
        <Parameter Name="b" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="59f2c-341">
            <see cref="T:System.Byte" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-341">A <see cref="T:System.Byte" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="59f2c-342">
            <see cref="T:System.Byte" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-342">A <see cref="T:System.Byte" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-343">두 <see cref="T:System.Byte" /> 식에서 논리적 포함을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-343">Performs a logical implication on two <see cref="T:System.Byte" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-344">결과가 포함된 <see cref="T:System.Byte" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-344">A <see cref="T:System.Byte" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-345">Visual Basic 6.0 `Imp` 연산자는 더 이상 Visual Basic에서 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-345">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="59f2c-346">이 함수는 업그레이드 도구에서 바꾸는 데 사용 되는 `Imp` 프로젝트 업그레이드 중 연산자.</span><span class="sxs-lookup"><span data-stu-id="59f2c-346">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="59f2c-347">Visual Basic에서 사용 하 여 `Not` 및 `XOr` 바꾸려면 `Imp`합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-347">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static short Imp (short a, short b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int16 Imp(int16 a, int16 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Short, b As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Imp(short a, short b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16" />
        <Parameter Name="b" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="59f2c-348">
            <see langword="Short" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-348">A <see langword="Short" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="59f2c-349">
            <see langword="Short" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-349">A <see langword="Short" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-350">두 <see cref="T:System.Int16" /> 식에서 논리적 포함을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-350">Performs a logical implication on two <see cref="T:System.Int16" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-351">결과가 포함된 <see langword="Short" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-351">A <see langword="Short" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-352">Visual Basic 6.0 `Imp` 연산자는 더 이상 Visual Basic에서 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-352">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="59f2c-353">이 함수는 업그레이드 도구에서 바꾸는 데 사용 되는 `Imp` 프로젝트 업그레이드 중 연산자.</span><span class="sxs-lookup"><span data-stu-id="59f2c-353">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="59f2c-354">Visual Basic에서 사용 하 여 `Not` 및 `XOr` 바꾸려면 `Imp`합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-354">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static int Imp (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Imp(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Integer, b As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Imp(int a, int b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="59f2c-355">
            <see langword="Integer" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-355">An <see langword="Integer" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="59f2c-356">
            <see langword="Integer" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-356">An <see langword="Integer" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-357">두 <see cref="T:System.Int32" /> 식에서 논리적 포함을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-357">Performs a logical implication on two <see cref="T:System.Int32" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-358">결과가 포함된 <see langword="Integer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-358">An <see langword="Integer" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-359">Visual Basic 6.0 `Imp` 연산자는 더 이상 Visual Basic에서 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-359">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="59f2c-360">이 함수는 업그레이드 도구에서 바꾸는 데 사용 되는 `Imp` 프로젝트 업그레이드 중 연산자.</span><span class="sxs-lookup"><span data-stu-id="59f2c-360">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="59f2c-361">Visual Basic에서 사용 하 여 `Not` 및 `XOr` 바꾸려면 `Imp`합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-361">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static long Imp (long a, long b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Imp(int64 a, int64 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Long, b As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Imp(long a, long b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="59f2c-362">
            <see langword="Long" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-362">A <see langword="Long" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="59f2c-363">
            <see langword="Long" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-363">A <see langword="Long" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-364">두 <see cref="T:System.Int64" /> 식에서 논리적 포함을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-364">Performs a logical implication on two <see cref="T:System.Int64" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-365">결과가 포함된 <see langword="Long" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-365">A <see langword="Long" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-366">Visual Basic 6.0 `Imp` 연산자는 더 이상 Visual Basic에서 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-366">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="59f2c-367">이 함수는 업그레이드 도구에서 바꾸는 데 사용 되는 `Imp` 프로젝트 업그레이드 중 연산자.</span><span class="sxs-lookup"><span data-stu-id="59f2c-367">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="59f2c-368">Visual Basic에서 사용 하 여 `Not` 및 `XOr` 바꾸려면 `Imp`합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-368">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static object Imp (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public static object Imp(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Object, b As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Imp(System::Object ^ a, System::Object ^ b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="59f2c-369">
            <see cref="T:System.Object" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-369">An <see cref="T:System.Object" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="59f2c-370">
            <see cref="T:System.Object" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-370">An <see cref="T:System.Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-371">두 <see cref="T:System.Object" /> 식에서 논리적 포함을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-371">Performs a logical implication on two <see cref="T:System.Object" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-372">결과가 포함된 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-372">An <see cref="T:System.Object" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-373">Visual Basic 6.0 `Imp` 연산자는 더 이상 Visual Basic에서 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-373">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="59f2c-374">이 함수는 업그레이드 도구에서 바꾸는 데 사용 되는 `Imp` 프로젝트 업그레이드 중 연산자.</span><span class="sxs-lookup"><span data-stu-id="59f2c-374">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span> <span data-ttu-id="59f2c-375">업그레이드 하는 동안 Variant 데이터 형식으로 업그레이드 됩니다 <xref:System.Object>합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-375">During upgrade, the Variant data type is upgraded to <xref:System.Object>.</span></span>  
  
 <span data-ttu-id="59f2c-376">Visual Basic에서 사용 하 여 `Not` 및 `XOr` 바꾸려면 `Imp`합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-376">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IPictureDispToImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image IPictureDispToImage (object pict);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Image IPictureDispToImage(object pict) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IPictureDispToImage (pict As Object) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ IPictureDispToImage(System::Object ^ pict);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pict" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pict">
          <span data-ttu-id="59f2c-377">OLE <see langword="IPictureDisp" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-377">An OLE <see langword="IPictureDisp" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-378">지정된 OLE <see langword="IPictureDisp" /> 개체에 대한 <see cref="T:System.Drawing.Image" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-378">Gets an <see cref="T:System.Drawing.Image" /> for a given OLE <see langword="IPictureDisp" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-379">이미지 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-379">An image object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-380">Visual Basic 6.0에서는 OLE `IPictureDisp` 이미지;를 지정 하는 개체를 사용할 수 있었습니다 Visual basic에서는 OLE `IPicture` 형식을 더 이상 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-380">In Visual Basic 6.0, an OLE `IPictureDisp` object could be used to specify an image; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="59f2c-381">사이 변환할 업그레이드 도구에서이 함수는 사용 된 `IPictureDisp` 및 <xref:System.Drawing.Image>합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-381">This function is used by the upgrade tools to convert between an `IPictureDisp` and a <xref:System.Drawing.Image>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IPictureToImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image IPictureToImage (object pict);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Image IPictureToImage(object pict) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IPictureToImage (pict As Object) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ IPictureToImage(System::Object ^ pict);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pict" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pict">
          <span data-ttu-id="59f2c-382">OLE <see langword="IPicture" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-382">An OLE <see langword="IPicture" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-383">지정된 OLE <see langword="IPicture" /> 개체에 대한 <see cref="T:System.Drawing.Image" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-383">Gets an <see cref="T:System.Drawing.Image" /> for a given OLE <see langword="IPicture" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-384">이미지로 변환된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-384">A converted object to image.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-385">Visual Basic 6.0에서는 OLE `IPicture` 이미지;를 지정 하는 개체를 사용할 수 있었습니다 Visual basic에서는 OLE `IPicture` 형식을 더 이상 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-385">In Visual Basic 6.0, an OLE `IPicture` object could be used to specify an image; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="59f2c-386">사이 변환할 업그레이드 도구에서이 함수는 사용 된 `IPicture` 및 <xref:System.Drawing.Image>합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-386">This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Image>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadResData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59f2c-387">리소스 파일(.res)에서 몇 가지 가능한 형식의 데이터를 로드하고 <see cref="T:System.Byte" /> 배열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-387">Loads data of several possible types from a resource (.res) file and returns a <see cref="T:System.Byte" /> array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadResData">
      <MemberSignature Language="C#" Value="public static object LoadResData (object ID, object restype);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResData(object ID, object restype) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResData (ID As Object, restype As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResData(System::Object ^ ID, System::Object ^ restype);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="59f2c-388">리소스 파일의 데이터를 지정하는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-388">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <param name="restype">
          <span data-ttu-id="59f2c-389">리소스 형식을 지정하는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-389">An <see cref="T:System.Object" /> that specifies the resource type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-390">리소스 파일(.res)에서 몇 가지 가능한 형식의 데이터를 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-390">Loads data of several possible types from a resource (.res) file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-391">리소스가 포함된 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-391">An <see cref="T:System.Object" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-392">Visual Basic 6.0 응용 프로그램의 국가별 버전 각 언어에 대 한 별도 리소스 (.res) 파일에 문자열과 같은 모든 지역화할 수 있는 정보를 입력 하 여 만들어졌습니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-392">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="59f2c-393">런타임 시 로캘별 리소스 로드 된 리소스 파일에서 호출 하 여는 `LoadResString`, `LoadResPicture`, 및 `LoadResData` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-393">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="59f2c-394">Visual Basic의 경우 응용 프로그램의 국가별 버전을 변경 하 여 생성 됩니다는 `Language` 디자인 타임에 폼의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-394">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="59f2c-395">선택한 각 로캘에 대해 별도 리소스 파일 (.resx) 자동으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-395">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="59f2c-396">코드에서 리소스를 명시적으로 로드 해야 하는 더 이상 리소스는 사용자의 로캘에 따라 자동으로 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-396">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="59f2c-397">자세한 내용은 참조 [Windows Forms 전역화](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-397">For more information, see [Globalizing Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadResData">
      <MemberSignature Language="C#" Value="public static object LoadResData (object ID, object restype, System.Globalization.CultureInfo Culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResData(object ID, object restype, class System.Globalization.CultureInfo Culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResData (ID As Object, restype As Object, Culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResData(System::Object ^ ID, System::Object ^ restype, System::Globalization::CultureInfo ^ Culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="System.Object" />
        <Parameter Name="Culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="59f2c-398">리소스 파일의 데이터를 지정하는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-398">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <param name="restype">
          <span data-ttu-id="59f2c-399">리소스 형식을 지정하는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-399">An <see cref="T:System.Object" /> that specifies the resource type.</span>
          </span>
        </param>
        <param name="Culture">
          <span data-ttu-id="59f2c-400">로캘을 지정하는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-400">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-401">로캘을 지정하여 리소스 파일(.res)에서 몇 가지 가능한 형식의 데이터를 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-401">Loads data of several possible types from a resource (.res) file, specifying a locale.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-402">리소스가 포함된 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-402">An <see cref="T:System.Object" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-403">Visual Basic 6.0 응용 프로그램의 국가별 버전 각 언어에 대 한 별도 리소스 (.res) 파일에 문자열과 같은 모든 지역화할 수 있는 정보를 입력 하 여 만들어졌습니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-403">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="59f2c-404">런타임 시 로캘별 리소스 로드 된 리소스 파일에서 호출 하 여는 `LoadResString`, `LoadResPicture`, 및 `LoadResData` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-404">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="59f2c-405">Visual Basic의 경우 응용 프로그램의 국가별 버전을 변경 하 여 생성 됩니다는 `Language` 디자인 타임에 폼의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-405">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="59f2c-406">선택한 각 로캘에 대해 별도 리소스 파일 (.resx) 자동으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-406">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="59f2c-407">코드에서 리소스를 명시적으로 로드 해야 하는 더 이상 리소스는 사용자의 로캘에 따라 자동으로 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-407">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="59f2c-408">자세한 내용은 참조 [Windows Forms 전역화](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-408">For more information, see [Globalizing Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadResPicture">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59f2c-409">리소스 파일(.res)에서 비트맵, 아이콘 또는 커서를 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-409">Loads a bitmap, icon, or cursor from a resource (.res) file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadResPicture">
      <MemberSignature Language="C#" Value="public static object LoadResPicture (object ID, Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResPicture(object ID, valuetype Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResPicture (ID As Object, restype As LoadResConstants) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResPicture(System::Object ^ ID, Microsoft::VisualBasic::Compatibility::VB6::LoadResConstants restype);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="59f2c-410">리소스 파일의 데이터를 지정하는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-410">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <param name="restype">
          <span data-ttu-id="59f2c-411">리소스 형식을 지정하는 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-411">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> enumeration that specifies the resource type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-412">리소스 파일(.res)에서 비트맵, 아이콘 또는 커서를 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-412">Loads a bitmap, icon, or cursor from a resource (.res) file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-413">리소스가 포함된 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-413">An <see cref="T:System.Object" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-414">Visual Basic 6.0 응용 프로그램의 국가별 버전 각 언어에 대 한 별도 리소스 (.res) 파일에 문자열과 같은 모든 지역화할 수 있는 정보를 입력 하 여 만들어졌습니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-414">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="59f2c-415">런타임 시 로캘별 리소스 로드 된 리소스 파일에서 호출 하 여는 `LoadResString`, `LoadResPicture`, 및 `LoadResData` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-415">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="59f2c-416">Visual Basic의 경우 응용 프로그램의 국가별 버전을 변경 하 여 생성 됩니다는 `Language` 디자인 타임에 폼의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-416">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="59f2c-417">선택한 각 로캘에 대해 별도 리소스 파일 (.resx) 자동으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-417">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="59f2c-418">코드에서 리소스를 명시적으로 로드 해야 하는 더 이상 리소스는 사용자의 로캘에 따라 자동으로 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-418">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="59f2c-419">자세한 내용은 참조 [Windows Forms 전역화](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-419">For more information, see [Globalizing Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadResPicture">
      <MemberSignature Language="C#" Value="public static object LoadResPicture (object ID, Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype, System.Globalization.CultureInfo Culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResPicture(object ID, valuetype Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype, class System.Globalization.CultureInfo Culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResPicture (ID As Object, restype As LoadResConstants, Culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResPicture(System::Object ^ ID, Microsoft::VisualBasic::Compatibility::VB6::LoadResConstants restype, System::Globalization::CultureInfo ^ Culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" />
        <Parameter Name="Culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="59f2c-420">리소스 파일의 데이터를 지정하는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-420">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <param name="restype">
          <span data-ttu-id="59f2c-421">리소스 형식을 지정하는 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-421">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> enumeration that specifies the resource type.</span>
          </span>
        </param>
        <param name="Culture">
          <span data-ttu-id="59f2c-422">로캘을 지정하는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-422">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-423">로캘을 지정하여 리소스 파일(.res)에서 비트맵, 아이콘 또는 커서를 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-423">Loads a bitmap, icon, or cursor from a resource (.res) file, specifying a locale.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-424">리소스가 포함된 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-424">An <see cref="T:System.Object" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-425">Visual Basic 6.0 응용 프로그램의 국가별 버전 각 언어에 대 한 별도 리소스 (.res) 파일에 문자열과 같은 모든 지역화할 수 있는 정보를 입력 하 여 만들어졌습니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-425">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="59f2c-426">런타임 시 로캘별 리소스 로드 된 리소스 파일에서 호출 하 여는 `LoadResString`, `LoadResPicture`, 및 `LoadResData` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-426">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="59f2c-427">Visual Basic의 경우 응용 프로그램의 국가별 버전을 변경 하 여 생성 됩니다는 `Language` 디자인 타임에 폼의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-427">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="59f2c-428">선택한 각 로캘에 대해 별도 리소스 파일 (.resx) 자동으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-428">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="59f2c-429">코드에서 리소스를 명시적으로 로드 해야 하는 더 이상 리소스는 사용자의 로캘에 따라 자동으로 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-429">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="59f2c-430">자세한 내용은 참조 [Windows Forms 전역화](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-430">For more information, see [Globalizing Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadResString">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59f2c-431">리소스 파일(.res)에서 문자열을 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-431">Loads a string from a resource (.res) file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadResString">
      <MemberSignature Language="C#" Value="public static string LoadResString (int ID);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LoadResString(int32 ID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResString (ID As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LoadResString(int ID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="59f2c-432">리소스 파일의 데이터를 지정하는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-432">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-433">리소스 파일(.res)에서 문자열을 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-433">Loads a string from a resource (.res) file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-434">리소스가 포함된 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-434">A <see cref="T:System.String" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-435">Visual Basic 6.0 응용 프로그램의 국가별 버전 각 언어에 대 한 별도 리소스 (.res) 파일에 문자열과 같은 모든 지역화할 수 있는 정보를 입력 하 여 만들어졌습니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-435">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="59f2c-436">런타임 시 로캘별 리소스 로드 된 리소스 파일에서 호출 하 여는 `LoadResString`, `LoadResPicture`, 및 `LoadResData` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-436">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="59f2c-437">Visual Basic의 경우 응용 프로그램의 국가별 버전을 변경 하 여 생성 됩니다는 `Language` 디자인 타임에 폼의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-437">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="59f2c-438">선택한 각 로캘에 대해 별도 리소스 파일 (.resx) 자동으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-438">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="59f2c-439">코드에서 리소스를 명시적으로 로드 해야 하는 더 이상 리소스는 사용자의 로캘에 따라 자동으로 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-439">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="59f2c-440">자세한 내용은 참조 [Windows Forms 전역화](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-440">For more information, see [Globalizing Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadResString">
      <MemberSignature Language="C#" Value="public static string LoadResString (int ID, System.Globalization.CultureInfo Culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LoadResString(int32 ID, class System.Globalization.CultureInfo Culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResString (ID As Integer, Culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LoadResString(int ID, System::Globalization::CultureInfo ^ Culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Int32" />
        <Parameter Name="Culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="59f2c-441">리소스 파일의 데이터를 지정하는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-441">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <param name="Culture">
          <span data-ttu-id="59f2c-442">로캘을 지정하는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-442">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-443">로캘을 지정하여 리소스 파일(.res)에서 문자열을 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-443">Loads a string from a resource (.res) file, specifying a locale.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-444">리소스가 포함된 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-444">A <see cref="T:System.String" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-445">Visual Basic 6.0 응용 프로그램의 국가별 버전 각 언어에 대 한 별도 리소스 (.res) 파일에 문자열과 같은 모든 지역화할 수 있는 정보를 입력 하 여 만들어졌습니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-445">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="59f2c-446">런타임 시 로캘별 리소스 로드 된 리소스 파일에서 호출 하 여는 `LoadResString`, `LoadResPicture`, 및 `LoadResData` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-446">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="59f2c-447">Visual Basic의 경우 응용 프로그램의 국가별 버전을 변경 하 여 생성 됩니다는 `Language` 디자인 타임에 폼의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-447">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="59f2c-448">선택한 각 로캘에 대해 별도 리소스 파일 (.resx) 자동으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-448">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="59f2c-449">코드에서 리소스를 명시적으로 로드 해야 하는 더 이상 리소스는 사용자의 로캘에 따라 자동으로 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-449">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="59f2c-450">자세한 내용은 참조 [Windows Forms 전역화](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-450">For more information, see [Globalizing Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsToTwipsX">
      <MemberSignature Language="C#" Value="public static double PixelsToTwipsX (double X);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PixelsToTwipsX(float64 X) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function PixelsToTwipsX (X As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double PixelsToTwipsX(double X);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="59f2c-451">변환할 X 좌표가 포함된 <see langword="Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-451">A <see langword="Double" /> that contains the X coordinate to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-452">X 좌표를 픽셀에서 트윕으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-452">Converts an X coordinate from pixels to twips.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-453">트윕으로 표현된 X 좌표가 포함된 <see langword="Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-453">A <see langword="Double" /> that contains the X coordinate expressed in twips.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-454">Visual Basic 6.0에서 좌표는 트윕;에 표시 된 Visual Basic의 픽셀 단위로 표현 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-454">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="59f2c-455">이 함수는 두 개의 좌표 시스템 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-455">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsToTwipsY">
      <MemberSignature Language="C#" Value="public static double PixelsToTwipsY (double Y);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PixelsToTwipsY(float64 Y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function PixelsToTwipsY (Y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double PixelsToTwipsY(double Y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="59f2c-456">변환할 Y 좌표가 포함된 <see langword="Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-456">A <see langword="Double" /> that contains the Y coordinate to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-457">Y 좌표를 픽셀에서 트윕으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-457">Converts a Y coordinate from pixels to twips.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-458">트윕으로 표현된 Y 좌표가 포함된 <see langword="Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-458">A <see langword="Double" /> that contains the Y coordinate expressed in twips.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-459">Visual Basic 6.0에서 좌표는 트윕;에 표시 된 Visual Basic의 픽셀 단위로 표현 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-459">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="59f2c-460">이 함수는 두 개의 좌표 시스템 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-460">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public static void SendKeys (string Keys, bool Wait = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SendKeys(string Keys, bool Wait) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (Keys As String, Optional Wait As Boolean = false)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Keys" Type="System.String" />
        <Parameter Name="Wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Keys">
          <span data-ttu-id="59f2c-461">키 값이 포함된 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-461">A <see cref="T:System.String" /> that contains the key values.</span>
          </span>
        </param>
        <param name="Wait">
          <span data-ttu-id="59f2c-462">프로시저로 제어가 반환되기 전에 키 입력을 처리하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-462">
              <see langword="true" /> to process keystrokes before control is returned to the procedure; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-463">키보드에서 입력된 것처럼 하나 이상의 키 입력을 활성 창에 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-463">Sends one or more keystrokes to the active window as if typed at the keyboard.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-464">Visual Basic 6.0을 에뮬레이션 하기 위해 업그레이드 도구에서이 함수는 사용 `SendKeys` 메서드.</span><span class="sxs-lookup"><span data-stu-id="59f2c-464">This function is used by the upgrade tools to emulate the Visual Basic 6.0 `SendKeys` method.</span></span> <span data-ttu-id="59f2c-465">Visual Basic에서 사용 하 여는 `My.Computer.Keyboard.SendKeys` 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-465">In Visual Basic, use the `My.Computer.Keyboard.SendKeys` method instead.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCancel">
      <MemberSignature Language="C#" Value="public static void SetCancel (System.Windows.Forms.Button btn, bool Cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetCancel(class System.Windows.Forms.Button btn, bool Cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(System.Windows.Forms.Button,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCancel (btn As Button, Cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCancel(System::Windows::Forms::Button ^ btn, bool Cancel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
        <Parameter Name="Cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="btn">
          <span data-ttu-id="59f2c-466">
            <see cref="T:System.Windows.Forms.Button" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-466">A <see cref="T:System.Windows.Forms.Button" />.</span>
          </span>
        </param>
        <param name="Cancel">
          <span data-ttu-id="59f2c-467">Visual Basic 6.0 <see langword="true" /> 컨트롤의 <see langword="CommandButton" /> 속성이 <see langword="Cancel" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-467">
              <see langword="true" /> if the Visual Basic 6.0 <see langword="CommandButton" /> control's <see langword="Cancel" /> property is <see langword="true" />; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-468">
            <see cref="P:System.Windows.Forms.Form.CancelButton" />의 <see cref="T:System.Windows.Forms.Form" /> 속성을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-468">Sets the <see cref="P:System.Windows.Forms.Form.CancelButton" /> property of a <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-469">Visual Basic 6.0에서는 부울 `Default` 및 `Cancel` 의 속성을 `CommandButton` 컨트롤 컨트롤에 응답할지 여부를 ENTER 또는 ESC 키를 각각를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-469">In Visual Basic 6.0, the Boolean `Default` and `Cancel` properties of a `CommandButton` control determine whether the control responds to the ENTER or ESC keys, respectively.</span></span> <span data-ttu-id="59f2c-470">Visual Basic의 경우에 <xref:System.Windows.Forms.Button> 컨트롤에 더 이상 `Default` 또는 `Cancel` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-470">In Visual Basic, the <xref:System.Windows.Forms.Button> control no longer has `Default` or `Cancel` properties.</span></span> <span data-ttu-id="59f2c-471"><xref:System.Windows.Forms.Form> 개체에 <xref:System.Windows.Forms.Form.AcceptButton%2A> 및 <xref:System.Windows.Forms.Form.CancelButton%2A> 속성 같은 기능을 제공 하 고 이러한 속성의 이름을 라인으로 전환는 <xref:System.Windows.Forms.Button> 인수로 서 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-471">The <xref:System.Windows.Forms.Form> object has <xref:System.Windows.Forms.Form.AcceptButton%2A> and <xref:System.Windows.Forms.Form.CancelButton%2A> properties that provide the same functionality; these properties take the name of a <xref:System.Windows.Forms.Button> control as an argument.</span></span>  
  
 <span data-ttu-id="59f2c-472">설정 하려면 업그레이드 도구에서이 함수는 사용는 <xref:System.Windows.Forms.Form.CancelButton%2A> 속성은 <xref:System.Windows.Forms.Form>속성을 기반으로 `Cancel` 는 업그레이드 된 Visual Basic 6.0의 속성 `CommandButton` 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-472">This function is used by the upgrade tools to set the <xref:System.Windows.Forms.Form.CancelButton%2A> property of a <xref:System.Windows.Forms.Form>.based on the `Cancel` property of an upgraded Visual Basic 6.0 `CommandButton` control.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefault">
      <MemberSignature Language="C#" Value="public static void SetDefault (System.Windows.Forms.Button btn, bool Default);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetDefault(class System.Windows.Forms.Button btn, bool Default) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(System.Windows.Forms.Button,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefault (btn As Button, Default As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDefault(System::Windows::Forms::Button ^ btn, bool Default);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
        <Parameter Name="Default" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="btn">
          <span data-ttu-id="59f2c-473">
            <see cref="T:System.Windows.Forms.Button" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-473">A <see cref="T:System.Windows.Forms.Button" />.</span>
          </span>
        </param>
        <param name="Default">
          <span data-ttu-id="59f2c-474">Visual Basic 6.0 <see langword="true" /> 컨트롤의 <see langword="CommandButton" /> 속성이 <see langword="Default" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-474">
              <see langword="true" /> if the Visual Basic 6.0 <see langword="CommandButton" /> control's <see langword="Default" /> property is <see langword="true" />; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-475">
            <see cref="P:System.Windows.Forms.Form.AcceptButton" />의 <see cref="T:System.Windows.Forms.Form" /> 속성을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-475">Sets the <see cref="P:System.Windows.Forms.Form.AcceptButton" /> property of a <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-476">Visual Basic 6.0에서는 부울 `Default` 및 `Cancel` 의 속성을 `CommandButton` 컨트롤 컨트롤에 응답할지 여부를 ENTER 또는 ESC 키를 각각를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-476">In Visual Basic 6.0, the Boolean `Default` and `Cancel` properties of a `CommandButton` control determine whether the control responds to the ENTER or ESC keys, respectively.</span></span> <span data-ttu-id="59f2c-477">Visual Basic의 경우에 <xref:System.Windows.Forms.Button> 컨트롤에 더 이상 `Default` 또는 `Cancel` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-477">In Visual Basic, the <xref:System.Windows.Forms.Button> control no longer has `Default` or `Cancel` properties.</span></span> <span data-ttu-id="59f2c-478"><xref:System.Windows.Forms.Form> 개체에 <xref:System.Windows.Forms.Form.AcceptButton%2A> 및 <xref:System.Windows.Forms.Form.CancelButton%2A> 속성 같은 기능을 제공 하 고 이러한 속성의 이름을 라인으로 전환는 <xref:System.Windows.Forms.Button> 인수로 서 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-478">The <xref:System.Windows.Forms.Form> object has <xref:System.Windows.Forms.Form.AcceptButton%2A> and <xref:System.Windows.Forms.Form.CancelButton%2A> properties that provide the same functionality; these properties take the name of a <xref:System.Windows.Forms.Button> control as an argument.</span></span>  
  
 <span data-ttu-id="59f2c-479">설정 하려면 업그레이드 도구에서이 함수는 사용는 <xref:System.Windows.Forms.Form.AcceptButton%2A> 속성은 <xref:System.Windows.Forms.Form>속성을 기반으로 `Default` 는 업그레이드 된 Visual Basic 6.0의 속성 `CommandButton` 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-479">This function is used by the upgrade tools to set the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of a <xref:System.Windows.Forms.Form>.based on the `Default` property of an upgraded Visual Basic 6.0 `CommandButton` control.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemData">
      <MemberSignature Language="C#" Value="public static void SetItemData (System.Windows.Forms.Control Control, int Index, int ItemData);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetItemData(class System.Windows.Forms.Control Control, int32 Index, int32 ItemData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(System.Windows.Forms.Control,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetItemData(System::Windows::Forms::Control ^ Control, int Index, int ItemData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
        <Parameter Name="ItemData" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control">
          <span data-ttu-id="59f2c-480">
            <see cref="T:System.Windows.Forms.ListBox" /> 또는 <see cref="T:System.Windows.Forms.ComboBox" /> 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-480">A <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</span>
          </span>
        </param>
        <param name="Index">
          <span data-ttu-id="59f2c-481">
            <see langword="Index" />의 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-481">The <see langword="Index" /> of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </param>
        <param name="ItemData">
          <span data-ttu-id="59f2c-482">
            <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> 속성에 할당할 <see langword="Integer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-482">An <see langword="Integer" /> to assign to the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-483">
            <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" />의 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> 속성을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-483">Sets the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> property for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-484">Visual Basic 6.0에서의 `ItemData` 속성에 대 한는 `ListBox` 또는 `ComboBox` 에서 디자인 타임에 컨트롤을 설정할 수는 **속성** 창 연결 하는 `Integer` 와 `ListBox` 또는 `ComboBox` 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-484">In Visual Basic 6.0, the `ItemData` property for a `ListBox` or `ComboBox` control could be set at design time in the **Properties** window to associate an `Integer` with a `ListBox` or `ComboBox` item.</span></span> <span data-ttu-id="59f2c-485">Visual Basic의 경우에 `ItemData` 속성이 더 이상 존재 하지 않으면는 <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> 및 `SetItemData` 메서드의 동작을 에뮬레이트하는 데 사용할 수 `ItemData`합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-485">In Visual Basic, the `ItemData` property no longer exists; the <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> and `SetItemData` methods can be used to emulate the behavior of `ItemData`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemString">
      <MemberSignature Language="C#" Value="public static void SetItemString (System.Windows.Forms.Control Control, int Index, string ItemString);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetItemString(class System.Windows.Forms.Control Control, int32 Index, string ItemString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(System.Windows.Forms.Control,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetItemString(System::Windows::Forms::Control ^ Control, int Index, System::String ^ ItemString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
        <Parameter Name="ItemString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Control">
          <span data-ttu-id="59f2c-486">
            <see cref="T:System.Windows.Forms.ListBox" />
            <see cref="T:System.Windows.Forms.ListBox" /> 또는 <see cref="T:System.Windows.Forms.ComboBox" /> 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-486">A <see cref="T:System.Windows.Forms.ListBox" /><see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</span>
          </span>
        </param>
        <param name="Index">
          <span data-ttu-id="59f2c-487">
            <see langword="Index" />의 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-487">The <see langword="Index" /> of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </param>
        <param name="ItemString">
          <span data-ttu-id="59f2c-488">
            <see cref="T:System.String" /> 속성에 할당할 <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-488">A <see cref="T:System.String" /> to assign to the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-489">
            <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" />의 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> 속성을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-489">Sets the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /> property for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-490">Visual Basic 6.0을 에뮬레이션 하기 위해 업그레이드 도구에서이 함수는 사용 `List` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-490">This function is used by the upgrade tools to emulate the Visual Basic 6.0 `List` property.</span></span> <span data-ttu-id="59f2c-491">Visual Basic에서 사용 하 여는 <xref:System.Windows.Forms.ComboBox.Items%2A> 또는 <xref:System.Windows.Forms.ListBox.Items%2A> 속성 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-491">In Visual Basic, use the <xref:System.Windows.Forms.ComboBox.Items%2A> or <xref:System.Windows.Forms.ListBox.Items%2A> property instead.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetResourceBaseName">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59f2c-492">Visual Basic 6.0 리소스 파일의 이름을 Visual Basic 프로젝트 네임스페이스에 할당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-492">Assigns the name of a Visual Basic 6.0 resource file to the Visual Basic project namespace.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetResourceBaseName">
      <MemberSignature Language="C#" Value="public static void SetResourceBaseName (string BaseFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetResourceBaseName(string BaseFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceBaseName (BaseFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetResourceBaseName(System::String ^ BaseFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BaseFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="BaseFileName">
          <span data-ttu-id="59f2c-493">리소스 파일(.res)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-493">A resource file (.res).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-494">Visual Basic 6.0 리소스 파일의 이름을 현재 Visual Basic 프로젝트 네임스페이스에 할당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-494">Assigns the name of a Visual Basic 6.0 resource file to the current Visual Basic project namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-495">리소스 처리는 Visual Basic 및 Visual Basic 6.0에서 서로 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-495">Resource handling is different for Visual Basic 6.0 and Visual Basic.</span></span> <span data-ttu-id="59f2c-496">이 함수는 Visual Basic 6.0 리소스 파일을 프로젝트에 추가 하려면 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-496">This function is used by the upgrade tools to add a Visual Basic 6.0 resource file to a project.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResourceBaseName">
      <MemberSignature Language="C#" Value="public static void SetResourceBaseName (string ProjectNamespace, string BaseFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetResourceBaseName(string ProjectNamespace, string BaseFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceBaseName (ProjectNamespace As String, BaseFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetResourceBaseName(System::String ^ ProjectNamespace, System::String ^ BaseFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProjectNamespace" Type="System.String" />
        <Parameter Name="BaseFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ProjectNamespace">
          <span data-ttu-id="59f2c-497">리소스 파일의 <see langword="Namespace" />가 포함된 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-497">A <see cref="T:System.String" /> that contains the <see langword="Namespace" /> for the resource file.</span>
          </span>
        </param>
        <param name="BaseFileName">
          <span data-ttu-id="59f2c-498">리소스 파일(.res)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-498">A resource file (.res).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-499">Visual Basic 6.0 리소스 파일의 이름을 Visual Basic 프로젝트 네임스페이스에 할당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-499">Assigns the name of a Visual Basic 6.0 resource file to a Visual Basic project namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-500">리소스 처리는 Visual Basic 및 Visual Basic 6.0에서 서로 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-500">Resource handling is different for Visual Basic 6.0 and Visual Basic.</span></span> <span data-ttu-id="59f2c-501">이 함수는 Visual Basic 6.0 리소스 파일을 프로젝트에 추가 하려면 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-501">This function is used by the upgrade tools to add a Visual Basic 6.0 resource file to a project.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowForm">
      <MemberSignature Language="C#" Value="public static void ShowForm (System.Windows.Forms.Form Form, int Modal = 0, System.Windows.Forms.Form OwnerForm = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ShowForm(class System.Windows.Forms.Form Form, int32 Modal, class System.Windows.Forms.Form OwnerForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Form" Type="System.Windows.Forms.Form" />
        <Parameter Name="Modal" Type="System.Int32" />
        <Parameter Name="OwnerForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="Form">
          <span data-ttu-id="59f2c-502">표시할 <see cref="T:System.Windows.Forms.Form" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-502">The <see cref="T:System.Windows.Forms.Form" /> to display.</span>
          </span>
        </param>
        <param name="Modal">
          <span data-ttu-id="59f2c-503">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-503">Optional.</span>
          </span>
          <span data-ttu-id="59f2c-504">모달을 지정하는 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-504">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants" /> enumeration that specifies modality.</span>
          </span>
        </param>
        <param name="OwnerForm">
          <span data-ttu-id="59f2c-505">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-505">Optional.</span>
          </span>
          <span data-ttu-id="59f2c-506">
            <see cref="M:System.Windows.Forms.Form.ShowDialog" /> 메서드의 <c>owner</c> 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-506">The <c>owner</c> parameter of the <see cref="M:System.Windows.Forms.Form.ShowDialog" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-507">
            <see cref="M:System.Windows.Forms.Control.Show" /> 또는 <see cref="M:System.Windows.Forms.Form.ShowDialog" /> 메서드를 호출하여 폼을 표시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-507">Displays a form by calling either the <see cref="M:System.Windows.Forms.Control.Show" /> or <see cref="M:System.Windows.Forms.Form.ShowDialog" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-508">Visual Basic 6.0에서의 `Show` 메서드 폼은 모달 형식으로 표시 여부를 지정 되었습니다; 대체 될 Visual Basic의는 <xref:System.Windows.Forms.Control.Show%2A> 및 <xref:System.Windows.Forms.Form.ShowDialog%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="59f2c-508">In Visual Basic 6.0, the `Show` method specified whether a Form would be displayed modally; in Visual Basic it is replaced by the <xref:System.Windows.Forms.Control.Show%2A> and <xref:System.Windows.Forms.Form.ShowDialog%2A> methods.</span></span> <span data-ttu-id="59f2c-509">Visual Basic 6.0 매핑할 업그레이드 도구에서이 함수는 사용 `Show` 메서드 중 하나를 <xref:System.Windows.Forms.Control.Show%2A> 또는 <xref:System.Windows.Forms.Form.ShowDialog%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="59f2c-509">This function is used by the upgrade tools to map the Visual Basic 6.0 `Show` method to either the <xref:System.Windows.Forms.Control.Show%2A> or <xref:System.Windows.Forms.Form.ShowDialog%2A> method.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabLayout">
      <MemberSignature Language="C#" Value="public static string TabLayout (params object[] Args);" />
      <MemberSignature Language="ILAsm" Value=".method public static string TabLayout(object[] Args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TabLayout (ParamArray Args As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TabLayout(... cli::array &lt;System::Object ^&gt; ^ Args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Args">
          <span data-ttu-id="59f2c-510">출력할 식 또는 식 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-510">An expression or list of expressions to print.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-511">Visual Basic 6.0 <see langword="Debug.Print" /> 기능을 시뮬레이션하도록 문자열 형식을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-511">Formats strings to simulate the Visual Basic 6.0 <see langword="Debug.Print" /> functionality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-512">형식이 지정된 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-512">A formatted <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-513">Visual Basic 6.0에서의 `Debug.Print` 메서드에 `outputlist` 출력의 형식을 지정 하는 매개 변수는 **직접 실행** 창.</span><span class="sxs-lookup"><span data-stu-id="59f2c-513">In Visual Basic 6.0, the `Debug.Print` method had an `outputlist` parameter that specified how output was formatted in the **Immediate** window.</span></span> <span data-ttu-id="59f2c-514">변환할 업그레이드 도구에서이 함수는 사용 된 `outputlist` 에 표시 하기 위해 문자열에 매개 변수는 **직접 실행** 창.</span><span class="sxs-lookup"><span data-stu-id="59f2c-514">This function is used by the upgrade tools to translate the `outputlist` parameter into a string for display in the **Immediate** window.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserHeight">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserHeight (double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserHeight(float64 Height, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserHeight (Height As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserHeight(double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Height" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Height">
          <span data-ttu-id="59f2c-515">높이를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-515">A <see cref="T:System.Double" /> that represents the height.</span>
          </span>
        </param>
        <param name="ScaleHeight">
          <span data-ttu-id="59f2c-516">현재 <see langword="ScaleHeight" />에 대한 Visual Basic 6.0 <see langword="ScaleMode" />를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-516">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleHeight" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalHeightInPixels">
          <span data-ttu-id="59f2c-517">높이(픽셀)를 나타내는 <see langword="Integer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-517">An <see langword="Integer" /> that represents the height in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-518">Visual Basic 6.0 <see langword="ScaleHeight" /> 단위를 픽셀 단위로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-518">Converts a Visual Basic 6.0 <see langword="ScaleHeight" /> measurement to a pixel measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-519">변환된 Visual Basic 6.0 <see langword="ScaleHeight" />가 포함된 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-519">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleHeight" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-520">Visual Basic 6.0 지원에 정의 된 여러 좌표계는 `ScaleMode` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-520">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="59f2c-521">사용자 정의 값이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-521">This included a user-defined value.</span></span> <span data-ttu-id="59f2c-522">Visual Basic만 픽셀을 기반으로 하는 좌표계를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-522">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="59f2c-523">이 함수는 픽셀과 배율 사용자 정의 값 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-523">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserWidth">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserWidth (double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserWidth(float64 Width, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserWidth (Width As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserWidth(double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Width" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Width">
          <span data-ttu-id="59f2c-524">너비를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-524">A <see cref="T:System.Double" /> that represents the width.</span>
          </span>
        </param>
        <param name="ScaleWidth">
          <span data-ttu-id="59f2c-525">현재 <see langword="ScaleWidth" />에 대한 Visual Basic 6.0 <see langword="ScaleMode" />를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-525">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleWidth" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalWidthInPixels">
          <span data-ttu-id="59f2c-526">너비(픽셀)를 나타내는 <see langword="Integer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-526">An <see langword="Integer" /> that represents the width in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-527">Visual Basic 6.0 <see langword="ScaleWidth" /> 단위를 픽셀 단위로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-527">Converts a Visual Basic 6.0 <see langword="ScaleWidth" /> measurement to a pixel measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-528">변환된 Visual Basic 6.0 <see langword="ScaleWidth" />가 포함된 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-528">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleWidth" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-529">Visual Basic 6.0 지원에 정의 된 여러 좌표계는 `ScaleMode` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-529">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="59f2c-530">사용자 정의 값이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-530">This included a user-defined value.</span></span> <span data-ttu-id="59f2c-531">Visual Basic만 픽셀을 기반으로 하는 좌표계를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-531">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="59f2c-532">이 함수는 픽셀과 배율 사용자 정의 값 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-532">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserX">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserX (double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserX(float64 X, float64 ScaleLeft, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserX (X As Double, ScaleLeft As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserX(double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="ScaleLeft" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="59f2c-533">X 좌표를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-533">A <see cref="T:System.Double" /> that represents the X coordinate.</span>
          </span>
        </param>
        <param name="ScaleLeft">
          <span data-ttu-id="59f2c-534">현재 <see langword="ScaleLeft" />에 대한 Visual Basic 6.0 <see langword="ScaleMode" />를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-534">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleLeft" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="ScaleWidth">
          <span data-ttu-id="59f2c-535">현재 <see langword="ScaleWidth" />에 대한 Visual Basic 6.0 <see langword="ScaleMode" />를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-535">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleWidth" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalWidthInPixels">
          <span data-ttu-id="59f2c-536">너비(픽셀)를 나타내는 <see langword="Integer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-536">An <see langword="Integer" /> that represents the width in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-537">Visual Basic 6.0 <see langword="ScaleLeft" /> 단위를 픽셀 단위로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-537">Converts a Visual Basic 6.0 <see langword="ScaleLeft" /> measurement to a pixel measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-538">변환된 Visual Basic 6.0 <see langword="ScaleLeft" />가 포함된 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-538">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleLeft" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-539">Visual Basic 6.0 지원에 정의 된 여러 좌표계는 `ScaleMode` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-539">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="59f2c-540">사용자 정의 값이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-540">This included a user-defined value.</span></span> <span data-ttu-id="59f2c-541">Visual Basic만 픽셀을 기반으로 하는 좌표계를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-541">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="59f2c-542">이 함수는 픽셀과 배율 사용자 정의 값 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-542">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserY">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserY (double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserY(float64 Y, float64 ScaleTop, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserY (Y As Double, ScaleTop As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserY(double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="ScaleTop" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="59f2c-543">Y 좌표를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-543">A <see cref="T:System.Double" /> that represents the Y coordinate.</span>
          </span>
        </param>
        <param name="ScaleTop">
          <span data-ttu-id="59f2c-544">현재 <see langword="ScaleTop" />에 대한 Visual Basic 6.0 <see langword="ScaleMode" />를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-544">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleTop" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="ScaleHeight">
          <span data-ttu-id="59f2c-545">현재 <see langword="ScaleHeight" />에 대한 Visual Basic 6.0 <see langword="ScaleMode" />를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-545">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleHeight" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalHeightInPixels">
          <span data-ttu-id="59f2c-546">높이(픽셀)를 나타내는 <see langword="Integer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-546">An <see langword="Integer" /> that represents the height in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-547">Visual Basic 6.0 <see langword="ScaleTop" /> 단위를 픽셀 단위로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-547">Converts a Visual Basic 6.0 <see langword="ScaleTop" /> measurement to a pixel measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-548">변환된 Visual Basic 6.0 <see langword="ScaleLeft" />가 포함된 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-548">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleLeft" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-549">Visual Basic 6.0 지원에 정의 된 여러 좌표계는 `ScaleMode` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-549">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="59f2c-550">사용자 정의 값이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-550">This included a user-defined value.</span></span> <span data-ttu-id="59f2c-551">Visual Basic만 픽셀을 기반으로 하는 좌표계를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-551">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="59f2c-552">이 함수는 픽셀과 배율 사용자 정의 값 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-552">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsX">
      <MemberSignature Language="C#" Value="public static double ToPixelsX (double X, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsX(float64 X, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsX (X As Double, FromScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsX(double X, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode FromScale);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="FromScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="59f2c-553">X 좌표를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-553">A <see cref="T:System.Double" /> that represents the X coordinate.</span>
          </span>
        </param>
        <param name="FromScale">
          <span data-ttu-id="59f2c-554">변환할 Visual Basic 6.0 <see langword="ScaleMode" />를 나타내는 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-554">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 <see langword="ScaleMode" /> to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-555">Visual Basic 6.0 측정값을 지정된 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />에 대한 픽셀 측정값으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-555">Converts a Visual Basic 6.0 measurement to a pixel measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-556">지정된 <see langword="ScaleMode" />에 대한 픽셀 값을 포함하는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-556">A <see cref="T:System.Double" /> that contains the pixel value for the specified <see langword="ScaleMode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-557">Visual Basic 6.0 지원에 정의 된 여러 좌표계는 `ScaleMode` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-557">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="59f2c-558">사용자 정의 값이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-558">This included a user-defined value.</span></span> <span data-ttu-id="59f2c-559">Visual Basic만 픽셀을 기반으로 하는 좌표계를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-559">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="59f2c-560">이 함수는 픽셀과 배율 사용자 정의 값 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-560">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsY">
      <MemberSignature Language="C#" Value="public static double ToPixelsY (double Y, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsY(float64 Y, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsY (Y As Double, FromScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsY(double Y, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode FromScale);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="FromScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="59f2c-561">Y 좌표를 나타내는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-561">A <see cref="T:System.Double" /> that represents the Y coordinate.</span>
          </span>
        </param>
        <param name="FromScale">
          <span data-ttu-id="59f2c-562">변환할 Visual Basic 6.0 <see langword="ScaleMode" />를 나타내는 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-562">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 <see langword="ScaleMode" /> to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-563">Visual Basic 6.0 측정값을 지정된 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />에 대한 픽셀 측정값으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-563">Converts a Visual Basic 6.0 measurement to a pixel measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-564">지정된 <see langword="ScaleMode" />에 대한 픽셀 값을 포함하는 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-564">A <see cref="T:System.Double" /> that contains the pixel value for the specified <see langword="ScaleMode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-565">Visual Basic 6.0 지원에 정의 된 여러 좌표계는 `ScaleMode` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-565">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="59f2c-566">사용자 정의 값이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-566">This included a user-defined value.</span></span> <span data-ttu-id="59f2c-567">Visual Basic만 픽셀을 기반으로 하는 좌표계를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-567">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="59f2c-568">이 함수는 픽셀과 배율 사용자 정의 값 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-568">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsPerPixelX">
      <MemberSignature Language="C#" Value="public static float TwipsPerPixelX ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 TwipsPerPixelX() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsPerPixelX () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float TwipsPerPixelX();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59f2c-569">화면 설정을 기반으로 트윕을 픽셀로 변환하는 데 사용되는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-569">Gets a value that is used to convert twips to pixels based on screen settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-570">변환 인수가 포함된 <see langword="Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-570">A <see langword="Double" /> that contains the conversion factor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-571">Visual Basic 6.0에서 좌표는 트윕;에 표시 된 Visual Basic의 픽셀 단위로 표현 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-571">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="59f2c-572">이 함수는 두 개의 좌표 시스템 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-572">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsPerPixelY">
      <MemberSignature Language="C#" Value="public static float TwipsPerPixelY ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 TwipsPerPixelY() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsPerPixelY () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float TwipsPerPixelY();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59f2c-573">화면 설정을 기반으로 트윕을 픽셀로 변환하는 데 사용되는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-573">Gets a value that is used to convert twips to pixels based on screen settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-574">변환 인수가 포함된 <see langword="Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-574">A <see langword="Double" /> that contains the conversion factor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-575">Visual Basic 6.0에서 좌표는 트윕;에 표시 된 Visual Basic의 픽셀 단위로 표현 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-575">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="59f2c-576">이 함수는 두 개의 좌표 시스템 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-576">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsToPixelsX">
      <MemberSignature Language="C#" Value="public static double TwipsToPixelsX (double X);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 TwipsToPixelsX(float64 X) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsToPixelsX (X As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double TwipsToPixelsX(double X);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="59f2c-577">변환할 X 좌표가 포함된 <see langword="Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-577">A <see langword="Double" /> that contains the X coordinate to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-578">X 좌표를 트윕에서 픽셀로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-578">Converts an X coordinate from twips to pixels.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-579">픽셀로 표현된 X 좌표가 포함된 <see langword="Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-579">A <see langword="Double" /> that contains the X coordinate expressed in pixels.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-580">Visual Basic 6.0에서 좌표는 트윕;에 표시 된 Visual Basic의 픽셀 단위로 표현 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-580">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="59f2c-581">이 함수는 두 개의 좌표 시스템 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-581">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsToPixelsY">
      <MemberSignature Language="C#" Value="public static double TwipsToPixelsY (double Y);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 TwipsToPixelsY(float64 Y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsToPixelsY (Y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double TwipsToPixelsY(double Y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="59f2c-582">변환할 X 좌표가 포함된 <see langword="Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-582">A <see langword="Double" /> that contains the X coordinate to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-583">Y 좌표를 트윕에서 픽셀로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-583">Converts a Y coordinate from twips to pixels.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59f2c-584">픽셀로 표현된 Y 좌표가 포함된 <see langword="Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-584">A <see langword="Double" /> that contains the Y coordinate expressed in pixels.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-585">Visual Basic 6.0에서 좌표는 트윕;에 표시 된 Visual Basic의 픽셀 단위로 표현 합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-585">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="59f2c-586">이 함수는 두 개의 좌표 시스템 사이 변환할 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-586">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateControls">
      <MemberSignature Language="C#" Value="public static void ValidateControls (System.Windows.Forms.ContainerControl Form);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ValidateControls(class System.Windows.Forms.ContainerControl Form) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls(System.Windows.Forms.ContainerControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateControls (Form As ContainerControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateControls(System::Windows::Forms::ContainerControl ^ Form);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Form" Type="System.Windows.Forms.ContainerControl" />
      </Parameters>
      <Docs>
        <param name="Form">
          <span data-ttu-id="59f2c-587">컨트롤이 부모로 지정되는 <see cref="T:System.Windows.Forms.ContainerControl" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-587">The <see cref="T:System.Windows.Forms.ContainerControl" /> where the control is parented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-588">Visual Basic 6.0 <see langword="ValidateControls" /> 메서드의 동작을 에뮬레이트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-588">Emulates the behavior of the Visual Basic 6.0 <see langword="ValidateControls" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-589">Visual Basic 6.0에서의 `ValidateControls` 메서드를 사용 하 여를 강제로 `Validate` 때 포커스가 있는 폼을 닫은 경우 컨트롤에 대 한 이벤트는 `Validate` 이벤트 실패, 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-589">In Visual Basic 6.0, the `ValidateControls` method was used to force the `Validate` event for the control that has focus when a form is closed; if the `Validate` event fails, an error was raised.</span></span> <span data-ttu-id="59f2c-590">Visual basic의 경우는 `ValidateControls` 메서드도 대체 되는 <xref:System.Windows.Forms.ContainerControl.Validate%2A> 반환 하는 메서드 `true` 또는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-590">In Visual Basic, the `ValidateControls` method is replaced by the <xref:System.Windows.Forms.ContainerControl.Validate%2A> method, which returns `true` or `false`.</span></span>  
  
 <span data-ttu-id="59f2c-591">이 함수는 Visual Basic 6.0의 동작을 에뮬레이션 하기 위해 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-591">This function is used by the upgrade tools to emulate the Visual Basic 6.0 behavior.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhatsThisMode">
      <MemberSignature Language="C#" Value="public static void WhatsThisMode (System.Windows.Forms.Form Form);" />
      <MemberSignature Language="ILAsm" Value=".method public static void WhatsThisMode(class System.Windows.Forms.Form Form) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode(System.Windows.Forms.Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WhatsThisMode(System::Windows::Forms::Form ^ Form);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Form" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="Form">
          <span data-ttu-id="59f2c-592">
            <see cref="T:System.Windows.Forms.Form" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-592">A <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-593">Visual Basic 6.0에서 업그레이드된 폼에 대해 팝업 도움말을 표시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-593">Displays pop-up Help for a form upgraded from Visual Basic 6.0.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-594">팝업 도움말 Visual Basic 6.0에서 사용 하 여 구현 되었습니다는 `WhatsThisButton` 및 `WhatsThisHelp` 폼의 속성을 하 고 팝업 도움말 Visual Basic에서 사용 하 여 구현 됩니다는 <xref:System.Windows.Forms.Form.HelpButton%2A> 폼의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-594">Pop-up Help in Visual Basic 6.0 was implemented by using the `WhatsThisButton` and `WhatsThisHelp` properties of a form; pop-up Help in Visual Basic is implemented by using the <xref:System.Windows.Forms.Form.HelpButton%2A> property of a form.</span></span> <span data-ttu-id="59f2c-595">이 함수는 업그레이드 된 응용 프로그램에 팝업 도움말 표시 방법을 변경 하려면 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-595">This function is used by the upgrade tools to change the method of displaying pop-up Help in an upgraded application.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrder">
      <MemberSignature Language="C#" Value="public static void ZOrder (System.Windows.Forms.Control Control, int Position);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ZOrder(class System.Windows.Forms.Control Control, int32 Position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZOrder(System::Windows::Forms::Control ^ Control, int Position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control">
          <span data-ttu-id="59f2c-596">
            <see cref="T:System.Windows.Forms.Control" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-596">A <see cref="T:System.Windows.Forms.Control" />.</span>
          </span>
        </param>
        <param name="Position">
          <span data-ttu-id="59f2c-597">
            <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-597">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59f2c-598">Visual Basic에서 사용할 수 있도록 Visual Basic <see langword="ZOrder" /> 메서드를 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59f2c-598">Converts the Visual Basic <see langword="ZOrder" /> method for use in Visual Basic.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f2c-599">Visual Basic 6.0에서의 `ZOrder` 메서드 레이어 컨트롤의 위치를 지정 하는 데 사용한; 바인딩하기 바뀝니다 Visual Basic의는 <xref:System.Windows.Forms.Control.BringToFront%2A> 및 <xref:System.Windows.Forms.Control.SendToBack%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="59f2c-599">In Visual Basic 6.0, the `ZOrder` method was used to specify the layering of controls; in Visual Basic .it is replaced by the <xref:System.Windows.Forms.Control.BringToFront%2A> and <xref:System.Windows.Forms.Control.SendToBack%2A> methods.</span></span> <span data-ttu-id="59f2c-600">이 함수에 매핑하는 방법 간의 업그레이드 도구에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59f2c-600">This function is used by the upgrade tools to map between the methods.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>