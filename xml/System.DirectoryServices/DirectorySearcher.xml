<Type Name="DirectorySearcher" FullName="System.DirectoryServices.DirectorySearcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="60ca9bce94a4ced2477b60db30873134987b9325" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36671286" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DirectorySearcher : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DirectorySearcher extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.DirectorySearcher" />
  <TypeSignature Language="VB.NET" Value="Public Class DirectorySearcher&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectorySearcher : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type DirectorySearcher = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.DirectoryServices.DSDescription("DirectorySearcherDesc")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Active Directory 도메인 서비스에 대한 쿼리를 수행합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 한 <xref:System.DirectoryServices.DirectorySearcher> 개체를 검색 하 고 LDAP Lightweight Directory Access Protocol ()를 사용 하는 Active Directory 도메인 서비스 계층에 대 한 쿼리를 수행 합니다. LDAP은 디렉터리 검색을 지 원하는 시스템 제공의 유일한 서비스 인터페이스 ADSI (Active Directory) 공급자는입니다. 관리자가 확인 하 고 변경 하 고 계층에 있는 개체를 삭제할 수 있습니다. 자세한 내용은 참조 [를 사용 하 여 System.DirectoryServices](http://msdn.microsoft.com/library/ffa2f003-3a9a-4e2a-815e-825c8ddd7949)합니다.  
  
 인스턴스를 만들 때 <xref:System.DirectoryServices.DirectorySearcher>, 검색할 루트 및 검색할 속성의 선택적는 목록을 지정 하 합니다. <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A> 속성을 사용 하면 다음 작업을 수행 하는 추가 속성을 설정할 수 있습니다.  
  
-   로컬 컴퓨터에서 검색 결과 캐시 합니다. 설정의 <xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A> 속성을 `true` 를 로컬 컴퓨터에 디렉터리 정보를 저장 합니다. 업데이트를이 로컬 캐시에 적용 하 여 Active Directory 도메인 서비스에 커밋된 경우에만 <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=nameWithType> 메서드를 호출 합니다.  
  
-   사용 하 여 시간을 검색 하려면 지정 된 <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> 속성입니다.  
  
-   특성 이름만 검색 합니다. 설정의 <xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A> 속성을 `true` 할당 된 값을 특성의 이름만 검색 하려면.  
  
-   페이지 단위 검색을 수행 합니다. 설정의 <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> 속성 페이지 된 검색에서 반환 되는 개체의 최대 수를 지정 합니다. 페이지 된 검색을 수행 하지 않을 경우에 설정 된 <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> 속성을 기본값인 0입니다.  
  
-   사용 하 여 반환할 항목의 최대 수를 지정 된 <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> 속성입니다. 설정 하는 경우는 <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> 속성을 서버 기본값이 0의 기본값은 1000 개 항목입니다.  
  
> [!NOTE]
>  반환 된 항목 및 시간 제한의 최대 수의 서버에 설정 된 한계를 초과 하는 경우 서버 설정 구성 요소 설정을 재정의 합니다.  
  
 <xref:System.DirectoryServices.DirectorySearcher> 클래스의 인스턴스에 대한 초기 속성 값 목록은 <xref:System.DirectoryServices.DirectorySearcher.%23ctor> 생성자를 참조하십시오.  
  
> [!NOTE]
>  이 클래스를 사용 하기 전에 Active Directory 도메인 서비스에 대 한 기본적인 지식이 있다고 가정 합니다. 자세한 내용은 참조는 <xref:System.DirectoryServices?displayProperty=nameWithType> 개요입니다.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
      <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
    </permission>
    <altmember cref="T:System.DirectoryServices.DirectoryEntries" />
    <altmember cref="T:System.DirectoryServices.DirectoryEntry" />
    <altmember cref="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
    <altmember cref="T:System.DirectoryServices.DirectorySearcher" />
    <altmember cref="T:System.DirectoryServices.PropertyCollection" />
    <altmember cref="T:System.DirectoryServices.PropertyValueCollection" />
    <altmember cref="T:System.DirectoryServices.ReferralChasingOption" />
    <altmember cref="T:System.DirectoryServices.SearchResultCollection" />
    <altmember cref="T:System.DirectoryServices.SearchResult" />
    <altmember cref="T:System.DirectoryServices.ResultPropertyValueCollection" />
    <altmember cref="T:System.DirectoryServices.SearchScope" />
    <altmember cref="T:System.DirectoryServices.SortDirection" />
    <altmember cref="T:System.DirectoryServices.SortOption" />
    <altmember cref="N:System.DirectoryServices" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.DirectoryServices.DirectorySearcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>기본값을 사용하여 <see cref="T:System.DirectoryServices.DirectorySearcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서의 초기 속성 값이 표시는 <xref:System.DirectoryServices.DirectorySearcher> 개체입니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|null 참조(Visual Basic의 경우 `Nothing`)|  
|<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|"(objectClass=*)"|  
|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|빈 <xref:System.Collections.Specialized.StringCollection> 개체|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.DirectoryEntry searchRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (searchRoot As DirectoryEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::DirectoryServices::DirectoryEntry ^ searchRoot);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : System.DirectoryServices.DirectoryEntry -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher searchRoot" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="searchRoot" Type="System.DirectoryServices.DirectoryEntry" />
      </Parameters>
      <Docs>
        <param name="searchRoot">Active Directory 도메인 서비스 계층 구조에서 검색이 시작되는 노드입니다. <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> 속성은 이 값으로 초기화됩니다.</param>
        <summary>지정된 검색 루트를 사용하여 <see cref="T:System.DirectoryServices.DirectorySearcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서의 초기 속성 값이 표시는 <xref:System.DirectoryServices.DirectorySearcher> 개체입니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|"(objectClass=*)"|  
|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|빈 <xref:System.Collections.Specialized.StringCollection> 개체|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::String ^ filter);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : string -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher filter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filter">LDAP(Lightweight Directory Access Protocol) 형식의 검색 필터 문자열입니다. <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> 속성은 이 값으로 초기화됩니다.</param>
        <summary>지정된 검색 필터를 사용하여 <see cref="T:System.DirectoryServices.DirectorySearcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서의 초기 속성 값이 표시는 <xref:System.DirectoryServices.DirectorySearcher> 개체입니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|null 참조(Visual Basic의 경우 `Nothing`)|  
|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|빈 <xref:System.Collections.Specialized.StringCollection> 개체|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.DirectoryEntry searchRoot, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (searchRoot As DirectoryEntry, filter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::DirectoryServices::DirectoryEntry ^ searchRoot, System::String ^ filter);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : System.DirectoryServices.DirectoryEntry * string -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher (searchRoot, filter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="searchRoot" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchRoot">Active Directory 도메인 서비스 계층 구조에서 검색이 시작되는 노드입니다. <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> 속성은 이 값으로 초기화됩니다.</param>
        <param name="filter">LDAP(Lightweight Directory Access Protocol) 형식의 검색 필터 문자열입니다. <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> 속성은 이 값으로 초기화됩니다.</param>
        <summary>지정된 검색 루트와 검색 필터를 사용하여 <see cref="T:System.DirectoryServices.DirectorySearcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서의 초기 속성 값이 표시는 <xref:System.DirectoryServices.DirectorySearcher> 개체입니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|빈 <xref:System.Collections.Specialized.StringCollection> 개체입니다.|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (string filter, string[] propertiesToLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filter, string[] propertiesToLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filter As String, propertiesToLoad As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::String ^ filter, cli::array &lt;System::String ^&gt; ^ propertiesToLoad);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : string * string[] -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher (filter, propertiesToLoad)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="propertiesToLoad" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filter">LDAP(Lightweight Directory Access Protocol) 형식의 검색 필터 문자열입니다. <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> 속성은 이 값으로 초기화됩니다.</param>
        <param name="propertiesToLoad">검색 과정에서 검색할 속성 집합입니다. <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> 속성은 이 값으로 초기화됩니다.</param>
        <summary>지정된 검색 필터와 검색할 속성을 사용하여 <see cref="T:System.DirectoryServices.DirectorySearcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서의 초기 속성 값이 표시는 <xref:System.DirectoryServices.DirectorySearcher> 개체입니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|null 참조(Visual Basic의 경우 `Nothing`)|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (searchRoot As DirectoryEntry, filter As String, propertiesToLoad As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::DirectoryServices::DirectoryEntry ^ searchRoot, System::String ^ filter, cli::array &lt;System::String ^&gt; ^ propertiesToLoad);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : System.DirectoryServices.DirectoryEntry * string * string[] -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher (searchRoot, filter, propertiesToLoad)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="searchRoot" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="propertiesToLoad" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="searchRoot">Active Directory 도메인 서비스 계층 구조에서 검색이 시작되는 노드입니다. <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> 속성은 이 값으로 초기화됩니다.</param>
        <param name="filter">LDAP(Lightweight Directory Access Protocol) 형식의 검색 필터 문자열입니다. <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> 속성은 이 값으로 초기화됩니다.</param>
        <param name="propertiesToLoad">검색 과정에서 검색된 속성 집합입니다. <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> 속성은 이 값으로 초기화됩니다.</param>
        <summary>지정된 검색 루트, 검색 필터 및 검색할 속성을 사용하여 <see cref="T:System.DirectoryServices.DirectorySearcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서의 초기 속성 값이 표시는 <xref:System.DirectoryServices.DirectorySearcher> 개체입니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filter, string[] propertiesToLoad, valuetype System.DirectoryServices.SearchScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filter As String, propertiesToLoad As String(), scope As SearchScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::String ^ filter, cli::array &lt;System::String ^&gt; ^ propertiesToLoad, System::DirectoryServices::SearchScope scope);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : string * string[] * System.DirectoryServices.SearchScope -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher (filter, propertiesToLoad, scope)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="propertiesToLoad" Type="System.String[]" />
        <Parameter Name="scope" Type="System.DirectoryServices.SearchScope" />
      </Parameters>
      <Docs>
        <param name="filter">LDAP(Lightweight Directory Access Protocol) 형식의 검색 필터 문자열입니다. <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> 속성은 이 값으로 초기화됩니다.</param>
        <param name="propertiesToLoad">검색 과정에서 검색할 속성 집합입니다. <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> 속성은 이 값으로 초기화됩니다.</param>
        <param name="scope">서버에서 관찰하는 검색 범위입니다. <see cref="T:System.DirectoryServices.SearchScope" /> 속성은 이 값으로 초기화됩니다.</param>
        <summary>지정된 검색 필터, 검색할 속성 및 검색 범위를 사용하여 <see cref="T:System.DirectoryServices.DirectorySearcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서의 초기 속성 값이 표시는 <xref:System.DirectoryServices.DirectorySearcher> 개체입니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|null 참조(Visual Basic의 경우 `Nothing`)|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad, valuetype System.DirectoryServices.SearchScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (searchRoot As DirectoryEntry, filter As String, propertiesToLoad As String(), scope As SearchScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::DirectoryServices::DirectoryEntry ^ searchRoot, System::String ^ filter, cli::array &lt;System::String ^&gt; ^ propertiesToLoad, System::DirectoryServices::SearchScope scope);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : System.DirectoryServices.DirectoryEntry * string * string[] * System.DirectoryServices.SearchScope -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher (searchRoot, filter, propertiesToLoad, scope)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="searchRoot" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="propertiesToLoad" Type="System.String[]" />
        <Parameter Name="scope" Type="System.DirectoryServices.SearchScope" />
      </Parameters>
      <Docs>
        <param name="searchRoot">Active Directory 도메인 서비스 계층 구조에서 검색이 시작되는 노드입니다. <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> 속성은 이 값으로 초기화됩니다.</param>
        <param name="filter">LDAP(Lightweight Directory Access Protocol) 형식의 검색 필터 문자열입니다. <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> 속성은 이 값으로 초기화됩니다.</param>
        <param name="propertiesToLoad">검색 과정에서 검색할 속성 집합입니다. <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> 속성은 이 값으로 초기화됩니다.</param>
        <param name="scope">서버에서 관찰하는 검색 범위입니다. <see cref="T:System.DirectoryServices.SearchScope" /> 속성은 이 값으로 초기화됩니다.</param>
        <summary>지정된 검색 루트, 검색 필터, 검색할 속성 및 검색 범위를 사용하여 <see cref="T:System.DirectoryServices.DirectorySearcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName="Asynchronous">
      <MemberSignature Language="C#" Value="public bool Asynchronous { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Asynchronous" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.Asynchronous" />
      <MemberSignature Language="VB.NET" Value="Public Property Asynchronous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Asynchronous { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Asynchronous : bool with get, set" Usage="System.DirectoryServices.DirectorySearcher.Asynchronous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSAsynchronous")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>검색이 비동기적으로 수행되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>검색이 비동기이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추가 결과 대 한 동시에 검색 하는 동안 발견 된 대로 비동기 검색 결과 표시할 수 있습니다. 목록 상자 채우기 등의 작업에 유용 합니다.  
  
 이 속성의 기본 설정은 `false`입니다.  
  
   
  
## Examples  
 다음 C# 예제에는 비동기 검색을 만드는 방법을 보여 줍니다.  
  
```csharp  
using System.DirectoryServices;  
...  
// Bind to the users container.  
DirectoryEntry entry = new DirectoryEntry("LDAP://CN=users,DC=fabrikam,DC=com");  
// Create a DirectorySearcher object.  
DirectorySearcher mySearcher = new DirectorySearcher(entry);  
//Set the Asynchronous property to true.  
src.Asynchronous = true;  
//Use the FindAll method to get search results.  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeScopeQuery">
      <MemberSignature Language="C#" Value="public string AttributeScopeQuery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeScopeQuery" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributeScopeQuery As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AttributeScopeQuery { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AttributeScopeQuery : string with get, set" Usage="System.DirectoryServices.DirectorySearcher.AttributeScopeQuery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSAttributeQuery")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>검색할 고유 이름 특성의 LDAP 표시 이름을 가져오거나 설정합니다. 이 형식의 검색에는 특성을 하나만 사용할 수 있습니다.</summary>
        <value>검색을 수행할 특성의 LDAP 표시 이름이거나, 특성 범위 쿼리가 설정되어 있지 않으면 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은로 설정 하는 특성 멤버 또는 장치 등의 고유 이름 특성 이어야 합니다. 단일 또는 다중 값 특성 수 있습니다. 자세한 내용은 adschema 항목을 참조 하십시오. "[멤버](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_member.asp)"및"[관리에서](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_managedby.asp)" MSDN library에서 [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)합니다.  
  
 검색 기준 개체의 특성에 지정 된 고유 이름으로 식별 되는 개체에 대해 수행 됩니다. 예를 들어, 기본 개체는 adschema 그룹 클래스와 <xref:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery%2A> 그룹의 구성원 인 모든 개체에 대해서는 검색이 수행 "member"로 설정 되어 있습니다. 자세한 내용은 MSDN library에서 adschema "그룹" 클래스 항목을 참조 [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)합니다.  
  
 경우는 <xref:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery%2A> 속성은 사용 되는 <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> 속성으로 설정 되어 있어야 <xref:System.DirectoryServices.SearchScope.Base>합니다. 경우는 <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> 속성 설정, 다른 값으로는 <xref:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery%2A> 속성 throw 됩니다는 <xref:System.ArgumentException>합니다.  
  
 자세한 내용은 MSDN library에서 "수행 하는 특성 범위 쿼리" 항목을 참조 하십시오. [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)).  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery%2A> 속성 그룹의 멤버를 가져올 멤버 특성을 사용 합니다. 그런 다음 멤버와 해당 전화 번호의 첫 번째 및 마지막 이름을 출력 합니다.  
  
```csharp  
using System.DirectoryServices;  
DirectoryEntry group = new DirectoryEntry("LDAP://CN=MyGroup, …");  
DirectorySearcher src = new DirectorySearcher(group "(&(objectClass=user)(objectCategory=Person))");  
src.AttributeScopedQuery = "member";  
src.PropertiesToLoad.Add("sn");  
src.PropertiesToLoad.Add("givenName");  
src.PropertiesToLoad.Add("telephoneNumber");  
foreach(SearchResult res in src.FindAll())  
{  
    Console.WriteLine("…");  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" /> 속성이 <see cref="F:System.DirectoryServices.SearchScope.Base" />가 아닌 값으로 설정된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CacheResults">
      <MemberSignature Language="C#" Value="public bool CacheResults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CacheResults" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.CacheResults" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheResults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CacheResults { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CacheResults : bool with get, set" Usage="System.DirectoryServices.DirectorySearcher.CacheResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSCacheResults")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클라이언트 컴퓨터에 결과를 캐시할 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>클라이언트 컴퓨터에 결과를 캐시하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 큰 결과 집합을 반환 하는 검색을 검색이 속성을 설정 하면 보다 효율적으로 됩니다 `false` 결과 집합을 클라이언트 컴퓨터의 전송을 방지 하기 위해 합니다.  그러나 이렇게 하면 됩니다을 두 번 결과 열거할 수 있으므로 <xref:System.DirectoryServices.SearchResultCollection> 개체를 호출할 때마다 새 열거자 개체를 만듭니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ClientTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ClientTimeout" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ClientTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ClientTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ClientTimeout : TimeSpan with get, set" Usage="System.DirectoryServices.DirectorySearcher.ClientTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSClientTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버에서 결과가 반환될 때까지 클라이언트가 기다리는 최대 시간을 가져오거나 설정합니다. 이 시간 내에 서버 응답이 없으면 검색이 중단되고 결과가 반환되지 않습니다.</summary>
        <value>클라이언트가 서버에서 결과가 반환될 때까지 기다리는 최대 시간을 포함하는 <see cref="T:System.TimeSpan" /> 구조체입니다.  기본값은 무한히 기다리는 것을 나타내는 -1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 최소 해상도 1 초입니다. 소수 단위 초를 무시 됩니다.  
  
 경우는 <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> 클라이언트 시간 초과, 그 결과 반환 하는 서버 및 클라이언트 대기를 중지 하기 전에 도달 합니다. 최대 서버 시간 제한을 120 초입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="DerefAlias">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DereferenceAlias DerefAlias { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.DereferenceAlias DerefAlias" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.DerefAlias" />
      <MemberSignature Language="VB.NET" Value="Public Property DerefAlias As DereferenceAlias" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DereferenceAlias DerefAlias { System::DirectoryServices::DereferenceAlias get(); void set(System::DirectoryServices::DereferenceAlias value); };" />
      <MemberSignature Language="F#" Value="member this.DerefAlias : System.DirectoryServices.DereferenceAlias with get, set" Usage="System.DirectoryServices.DirectorySearcher.DerefAlias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSDerefAlias")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DereferenceAlias</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>검색 과정에서 검색한 개체의 별칭을 확인하는 방법을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>별칭이 역참조되는 동작을 지정하는 <see cref="T:System.DirectoryServices.DereferenceAlias" /> 값입니다. 이 속성의 기본 설정은 <see cref="F:System.DirectoryServices.DereferenceAlias.Never" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 C# 예제에서는 설정 하는 방법을 보여 줍니다.는 <xref:System.DirectoryServices.DirectorySearcher.DerefAlias%2A> 속성을 <xref:System.DirectoryServices.DereferenceAlias.Always> 기본 개체를 검색 하 고 찾기 때 별칭을 역참조 되도록 합니다.  
  
```  
using System.DirectoryServices;  
...  
// Bind to the users container.  
DirectoryEntry entry = new DirectoryEntry("LDAP://CN=users,DC=fabrikam,DC=com");  
// Create a DirectorySearcher object.  
DirectorySearcher mySearcher = new DirectorySearcher(entry);  
// Set DerefAlias to Always.  
src.DerefAlias = DerefenceAlias.Always;  
//Use the FindAll method to get search results.  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DirectoryServices.DereferenceAlias" />
      </Docs>
    </Member>
    <Member MemberName="DirectorySynchronization">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectorySynchronization DirectorySynchronization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectorySynchronization DirectorySynchronization" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.DirectorySynchronization" />
      <MemberSignature Language="VB.NET" Value="Public Property DirectorySynchronization As DirectorySynchronization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectorySynchronization ^ DirectorySynchronization { System::DirectoryServices::DirectorySynchronization ^ get(); void set(System::DirectoryServices::DirectorySynchronization ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DirectorySynchronization : System.DirectoryServices.DirectorySynchronization with get, set" Usage="System.DirectoryServices.DirectorySearcher.DirectorySynchronization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSDirectorySynchronization")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectorySynchronization</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>검색에 사용할 디렉터리 동기화 컨트롤을 나타내는 개체를 가져오거나 설정합니다.</summary>
        <value>검색에 사용할 <see cref="T:System.DirectoryServices.DirectorySynchronization" /> 개체입니다. 디렉터리 동기화 컨트롤을 사용하지 않아야 하면 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 DirSync 컨트롤을 라고 디렉터리 동기화 컨트롤에는 이전 상태로 이후 변경 된 개체에 대 한 검색에 사용 되는 LDAP 컨트롤이입니다.  
  
 자세한 내용은 항목을 참조 하십시오. "[에서 DirSync 컨트롤을 사용 하 여 변경 내용에 대 한 폴링](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ad/ad/polling_for_changes_using_the_dirsync_control.asp)" MSDN library에서 [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="directorySearcher.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">이 메서드가 관리되는 리소스와 관리되지 않는 리소스를 모두 해제하면 <see langword="true" />이고, 관리되지 않는 리소스만 해제하면 <see langword="false" />입니다.</param>
        <summary>
          <see cref="T:System.DirectoryServices.DirectorySearcher" /> 개체에서 사용하는 관리되는 리소스를 해제하고 관리되지 않는 리소스를 선택적으로 해제합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedDN">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ExtendedDN ExtendedDN { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.ExtendedDN ExtendedDN" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ExtendedDN" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedDN As ExtendedDN" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ExtendedDN ExtendedDN { System::DirectoryServices::ExtendedDN get(); void set(System::DirectoryServices::ExtendedDN value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedDN : System.DirectoryServices.ExtendedDN with get, set" Usage="System.DirectoryServices.DirectorySearcher.ExtendedDN" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSExtendedDn")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ExtendedDN</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>고유 이름의 형식을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.DirectoryServices.ExtendedDN" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 16 진수 형식의 고유 이름의 컬렉션을 반환 하는 방법을 보여 줍니다.  
  
```csharp  
using System.DirectoryServices;  
...  
DirectorySearcher src = new DirectorySearcher("…");  
src.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  
src.ExtendedDN = ExtendedDN.HexString;  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string with get, set" Usage="System.DirectoryServices.DirectorySearcher.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("(objectClass=*)")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSFilter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>LDAP(Lightweight Directory Access Protocol) 형식의 필터 문자열을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>"(objectClass=user)"와 같은 LDAP 형식의 검색 필터 문자열입니다. 기본값은 모든 개체 검색을 나타내는 "(objectClass=*)"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 필터는 다음과 같은 지침을 사용합니다.  
  
1.  문자열은 괄호로 묶어야 합니다.  
  
2.  식은 관계 연산자를 사용할 수 있습니다: <, \<=, =, > =, 및 >입니다. 예로 "(objectClass=user)"입니다. 또 다른 예로 "(lastName > = Davis)"입니다.  
  
3.  복합 식은 접두사 연산자로 구성 됩니다 & 및 &#124;합니다. 예로 "(&(objectClass=user) (lastName Davis =))"입니다. 또 다른 예로 "(&(objectClass=printer) (&#124;(building=42)(building=43)))"입니다.  
  
 필터 ADS_UTC_TIME 형식의 특성을 포함 된 경우 해당 값 형식 이어야 합니다는 yyyymmddhhmmssZ y, m, d, h, m, 및 연도, 월, 일, 시에 대 한 s 독립, 분 및 두 번째, 각각. 초 (ss) 값은 선택 사항입니다. 마지막 문자 Z 차등 시간은 의미 합니다. 이 형식에서 "오전 10 시 20:00 13, 있습니다 1999""19990513102000Z"됩니다. Active Directory 도메인 서비스 날짜 및 시간 Coordinated Universal Time (그리니치 표준시)으로 저장 하는 참고 합니다. 사용 가능한 시간 차이와 시간을 지정 하는 경우 GMT 시간에서 시간을 지정 됩니다.  
  
 가 아닌 표준시 표준 시간대에 하는 경우 Z 지정) (대신 Coordinated Universal Time로 차등 가치를 추가할 수 있습니다 프로그램 시간대에 따른 시간을 지정 합니다. 차등 기반으로 다음: 차등 세계시-로컬 = 합니다. 를 지정 하려면 다음 형식을 사용 합니다. [+ /-] hhmm yyyymmddhhmmss 합니다. 예를 들어 "오후 8시 52분: 58 3 월 23 1999"뉴질랜드 표준시 (차등은 12 시간)" 19990323205258.0 + 1200 "로 지정 됩니다  
  
 LDAP 검색 문자열 형식에 대 한 자세한 내용은 MSDN library에서 "검색 필터 구문"을 참조 하십시오. [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SearchResultCollection FindAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.SearchResultCollection FindAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.FindAll" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAll () As SearchResultCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::SearchResultCollection ^ FindAll();" />
      <MemberSignature Language="F#" Value="member this.FindAll : unit -&gt; System.DirectoryServices.SearchResultCollection" Usage="directorySearcher.FindAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SearchResultCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>검색을 실행하고 검색한 엔트리 컬렉션을 반환합니다.</summary>
        <returns>검색 결과를 포함하는 <see cref="T:System.DirectoryServices.SearchResultCollection" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 구현 제한으로 인해는 <xref:System.DirectoryServices.SearchResultCollection> 클래스 때 가비지가 수집 되는 관리 되지 않는 리소스를 모두 해제할 수 없습니다. 메모리 누수를 방지 하려면 호출 해야 합니다는 <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> 메서드 때는 <xref:System.DirectoryServices.SearchResultCollection> 개체가 더 이상 필요 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">지정된 <see cref="T:System.DirectoryServices.DirectoryEntry" />가 컨테이너가 아닌 경우</exception>
        <exception cref="T:System.NotSupportedException">현재 사용하고 있는 공급자가 검색을 지원하지 않는 경우</exception>
        <altmember cref="M:System.DirectoryServices.DirectorySearcher.FindOne" />
      </Docs>
    </Member>
    <Member MemberName="FindOne">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SearchResult FindOne ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.SearchResult FindOne() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.FindOne" />
      <MemberSignature Language="VB.NET" Value="Public Function FindOne () As SearchResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::SearchResult ^ FindOne();" />
      <MemberSignature Language="F#" Value="member this.FindOne : unit -&gt; System.DirectoryServices.SearchResult" Usage="directorySearcher.FindOne " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SearchResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>검색을 실행하고 첫 번째로 검색한 엔트리만 반환합니다.</summary>
        <returns>검색 과정에서 첫 번째로 검색한 엔트리를 포함하는 <see cref="T:System.DirectoryServices.SearchResult" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 검색 하는 동안 여러 개 항목이 발견 되 면 첫 번째 항목만 반환 됩니다. Null 참조 검색 조건과 일치 항목이 없는 없으면 (`Nothing` Visual basic에서)이 반환 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DirectoryServices.DirectorySearcher.FindAll" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.PageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property PageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageSize : int with get, set" Usage="System.DirectoryServices.DirectorySearcher.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSPageSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지 단위 검색의 페이지 크기를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>페이지 단위 검색을 수행했을 때 서버에서 반환할 수 있는 개체의 최대 수입니다. 기본값은 페이지 단위 검색을 수행하지 않음을 나타내는 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서버에서 지정 된 개체의 수를 찾으면는 <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> 속성 검색을 중지 하 고 클라이언트에 결과 반환 합니다. 클라이언트가 더 많은 데이터를 요청 하면 중지 된 지점을 선택할 검색 서버에 다시 시작 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">새 값이 0보다 작은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="PropertiesToLoad">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection PropertiesToLoad { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection PropertiesToLoad" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertiesToLoad As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringCollection ^ PropertiesToLoad { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertiesToLoad : System.Collections.Specialized.StringCollection" Usage="System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSPropertiesToLoad")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>검색 과정에서 검색할 속성의 목록을 나타내는 값을 가져옵니다.</summary>
        <value>검색 과정에서 검색할 속성의 집합을 포함하는 <see cref="T:System.Collections.Specialized.StringCollection" /> 개체입니다.  기본값은 모든 속성 검색을 나타내는 빈 <see cref="T:System.Collections.Specialized.StringCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 특정 속성을 검색 하려면이 컬렉션에 추가이 검색을 시작 하기 전에 합니다. 예를 들어 `searcher.PropertiesToLoad.Add("phone");` 전화 속성이 검색에서 검색 속성 목록에 추가 됩니다.  
  
 속성 "ADsPath"는 검색 하는 동안 항상 검색 됩니다. [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)] 및 이전 버전의 운영 체제 검색을 수행 하는 계정은 ntSecurityDescriptor 속성을 검색 하려면 Administrators 그룹의 구성원 이어야 합니다. NtSecurityDescriptor에 대해 반환 되는 속성 값 수는 없는 경우 `null`합니다. 자세한 내용은에서 "NT-보안-설명자" MSDN 라이브러리에서 항목을 참조 하십시오. [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
      </Docs>
    </Member>
    <Member MemberName="PropertyNamesOnly">
      <MemberSignature Language="C#" Value="public bool PropertyNamesOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PropertyNamesOnly" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyNamesOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PropertyNamesOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PropertyNamesOnly : bool with get, set" Usage="System.DirectoryServices.DirectorySearcher.PropertyNamesOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSPropertyNamesOnly")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>값이 할당된 특성의 이름만 검색할 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>값이 할당된 특성의 이름만 검색하려면 <see langword="true" />이고, 모든 요청된 특성의 이름과 값을 검색하려면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferralChasing">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ReferralChasingOption ReferralChasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.ReferralChasingOption ReferralChasing" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ReferralChasing" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferralChasing As ReferralChasingOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ReferralChasingOption ReferralChasing { System::DirectoryServices::ReferralChasingOption get(); void set(System::DirectoryServices::ReferralChasingOption value); };" />
      <MemberSignature Language="F#" Value="member this.ReferralChasing : System.DirectoryServices.ReferralChasingOption with get, set" Usage="System.DirectoryServices.DirectorySearcher.ReferralChasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSReferralChasing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ReferralChasingOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>조회를 추적하는 방법을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.DirectoryServices.ReferralChasingOption" /> 값 중 하나입니다. 기본값은 <see cref="F:System.DirectoryServices.ReferralChasingOption.External" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서버는 클라이언트 수 있거나 클라이언트에 조회 메시지를 보냅니다 루트 검색 서버의 명명 컨텍스트 또는 검색 결과 (예: 부모 도메인에 하위 도메인 및 검색 하는 경우) 명명 컨텍스트를 벗어나는 하는 경우에 지정 되지 않은 경우  무시 하거나 추적할 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">값이 <see cref="T:System.DirectoryServices.ReferralChasingOption" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="T:System.DirectoryServices.ReferralChasingOption" />
      </Docs>
    </Member>
    <Member MemberName="SearchRoot">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry SearchRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryEntry SearchRoot" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchRoot As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryEntry ^ SearchRoot { System::DirectoryServices::DirectoryEntry ^ get(); void set(System::DirectoryServices::DirectoryEntry ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SearchRoot : System.DirectoryServices.DirectoryEntry with get, set" Usage="System.DirectoryServices.DirectorySearcher.SearchRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSearchRoot")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Active Directory 도메인 서비스 계층 구조에서 검색이 시작되는 노드를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>Active Directory 도메인 서비스 계층 구조에서 검색이 시작되는 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 개체입니다. 기본값은 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A> 가 null 참조 (`Nothing` Visual basic에서), 검색 루트 서버에서 현재 사용 하는 도메인의 루트에 설정 됩니다.  
  
 글로벌 카탈로그에서 검색 하는 방법은 여러 가지가 있습니다.  
  
-   글로벌 카탈로그를 열거 하 고 첫 번째 자식을 선택 합니다.  
  
-   서버 이름을 지정 합니다. 글로벌 카탈로그를 찾을 DsGetDcName 함수를 사용 합니다.  DsGetDcName 함수에 대 한 자세한 내용은 MSDN library에서 "DsGetDcName" 항목을 참조 [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)합니다.  
  
-   글로벌 카탈로그의 RootDSE 가져오고 "rootNamingContext"에 게 요청 합니다.  
  
-   LDAP를 사용 하는 경우에 검색 경로 지정 하는 글로벌 카탈로그를 사용 합니다. 예를 들어 "GC: / / OU =..., DC =..., DC =...".  
  
-   다음 C# 코드에는 글로벌 카탈로그를 열거 하 고 첫 번째 자식을 선택 하는 방법을 보여 줍니다.  
  
    ```csharp  
    DirectoryEntry entry = new DirectoryEntry("GC://forestname");  
    IEnumerator ie = entry.Children.GetEnumerator();  
    ie.MoveNext();  
    entry = (DirectoryEntry)ie.Current;  
    DirectorySearcher search = new DirectorySearcher(entry);  
    ```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchScope">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SearchScope SearchScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.SearchScope SearchScope" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchScope As SearchScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::SearchScope SearchScope { System::DirectoryServices::SearchScope get(); void set(System::DirectoryServices::SearchScope value); };" />
      <MemberSignature Language="F#" Value="member this.SearchScope : System.DirectoryServices.SearchScope with get, set" Usage="System.DirectoryServices.DirectorySearcher.SearchScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSearchScope")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SearchScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버에서 관찰하는 검색 범위를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.DirectoryServices.SearchScope" /> 값 중 하나입니다. 기본값은 <see cref="F:System.DirectoryServices.SearchScope.Subtree" />입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">값이 <see cref="T:System.DirectoryServices.SearchScope" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="T:System.DirectoryServices.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName="SecurityMasks">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SecurityMasks SecurityMasks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.SecurityMasks SecurityMasks" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.SecurityMasks" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityMasks As SecurityMasks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::SecurityMasks SecurityMasks { System::DirectoryServices::SecurityMasks get(); void set(System::DirectoryServices::SecurityMasks value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityMasks : System.DirectoryServices.SecurityMasks with get, set" Usage="System.DirectoryServices.DirectorySearcher.SecurityMasks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSecurityMasks")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SecurityMasks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>검색을 수행하여 반환할 지정된 특성의 보안 액세스 정보를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.DirectoryServices.SecurityMasks" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
using System.DirectoryServices;  
...  
DirectorySearcher src = new DirectorySearcher("…");  
src.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  
src.SecurityMasks = SecurityMasks.Dacl | SecurityMasks.Owner;  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DirectoryServices.SecurityMasks" />
      </Docs>
    </Member>
    <Member MemberName="ServerPageTimeLimit">
      <MemberSignature Language="C#" Value="public TimeSpan ServerPageTimeLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ServerPageTimeLimit" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerPageTimeLimit As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ServerPageTimeLimit { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ServerPageTimeLimit : TimeSpan with get, set" Usage="System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSServerPageTimeLimit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버에서 개별 결과 페이지를 검색할 최대 시간을 나타내는 값을 가져오거나 설정합니다. 이 시간은 전체 검색에 대한 시간 제한과 같지 않습니다.</summary>
        <value>서버에서 결과 페이지를 검색할 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.  기본값은 검색 시간에 제한이 없음을 나타내는 -1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 최소 해상도 1 초입니다. 소수 단위 초를 무시 됩니다.  
  
 시간 제한에 도달 하면 서버 검색을 중지 하 고 검색을 다시 시작할 수 있는 위치에 대 한 정보를 포함 하는 쿠키와 함께 가리키는 누적 된 결과 반환 합니다.  
  
> [!NOTE]
>  이 속성 검색에만 적용 되며 여기서 <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> 기본값-1 하지 않은 값으로 설정 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PageSize" />
      </Docs>
    </Member>
    <Member MemberName="ServerTimeLimit">
      <MemberSignature Language="C#" Value="public TimeSpan ServerTimeLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ServerTimeLimit" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerTimeLimit As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ServerTimeLimit { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ServerTimeLimit : TimeSpan with get, set" Usage="System.DirectoryServices.DirectorySearcher.ServerTimeLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSServerTimeLimit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit" /> 속성은 서버에서 검색을 수행하는 데 걸리는 최대 시간을 나타내는 값을 가져오거나 설정합니다. 시간 제한에 도달하면 그때까지 검색한 엔트리만 반환됩니다.</summary>
        <value>서버에서 검색할 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.  기본값은 서버 기본값인 120초를 사용함을 나타내는 -1초입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 최소 해상도 1 초입니다. 소수 단위 초를 무시 됩니다.  
  
 와 달리는 <xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A> 속성은 <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> 속성 검색 결과에 서버 작업에 소요 되는 시간의 양을 총 나타냅니다. 시간 제한에 도달 하면 서버 검색을 중지 하 고 해당 시점까지 누적 된 결과 반환 합니다.  
  
 설정 <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> 를-1로 서버 기본값을 사용 하도록 합니다.  
  
> [!NOTE]
>  설정한 경우 <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> 서버에 의해 결정 된 기본값은 120 초 보다 큰 값으로 서버 기본값이 사용 됩니다. 서버 시간 제한에 도달 하면 중단 된 위치에서 검색을 계속할 수 없습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
      </Docs>
    </Member>
    <Member MemberName="SizeLimit">
      <MemberSignature Language="C#" Value="public int SizeLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SizeLimit" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.SizeLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SizeLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SizeLimit : int with get, set" Usage="System.DirectoryServices.DirectorySearcher.SizeLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSizeLimit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>검색을 수행했을 때 서버에서 반환하는 최대 개체 수를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>검색을 수행했을 때 서버에서 반환하는 최대 개체 수입니다. 기본값은 서버의 기본 크기 제한인 1000개의 엔트리까지 반환됨을 나타내는 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 크기 제한에 도달 하 고 결과 반환 하는 후 검색 서버가 중지 되는 해당 시점까지 누적 합니다.  
  
> [!NOTE]
>  설정한 경우 <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> 서버 기본값인 1000 개 항목 보다 큰 값으로 서버 기본값이 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">새 값이 0보다 작은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SortOption Sort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.SortOption Sort" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Property Sort As SortOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::SortOption ^ Sort { System::DirectoryServices::SortOption ^ get(); void set(System::DirectoryServices::SortOption ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Sort : System.DirectoryServices.SortOption with get, set" Usage="System.DirectoryServices.DirectorySearcher.Sort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSort")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SortOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>결과가 정렬되는 속성을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>검색 결과가 정렬되는 속성과 방향을 지정하는 <see cref="T:System.DirectoryServices.SortOption" /> 개체입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">속성 값이 <see langword="null" />(Visual Basic의 경우 Nothing)인 경우</exception>
        <altmember cref="T:System.DirectoryServices.SortOption" />
      </Docs>
    </Member>
    <Member MemberName="Tombstone">
      <MemberSignature Language="C#" Value="public bool Tombstone { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Tombstone" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.Tombstone" />
      <MemberSignature Language="VB.NET" Value="Public Property Tombstone As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Tombstone { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Tombstone : bool with get, set" Usage="System.DirectoryServices.DirectorySearcher.Tombstone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSTombstone")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>검색을 수행하여 검색 필터와 일치하는 삭제된 개체도 반환할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>삭제된 개체가 검색에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 C# 예제에서는 설정 하는 방법을 보여 줍니다.는 <xref:System.DirectoryServices.DirectorySearcher.Tombstone%2A> 속성을 `true`합니다.  
  
```csharp  
using System.DirectoryServices;  
...  
// Create a DirectorySearcher object.  
DirectorySearcher src = new DirectorySearcher("(isDeleted=true)");  
//Set the Tombstone property to true.  
src.Tombstone = true;  
//Use the FindAll method to get search results.  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualListView">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryVirtualListView VirtualListView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryVirtualListView VirtualListView" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.VirtualListView" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualListView As DirectoryVirtualListView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryVirtualListView ^ VirtualListView { System::DirectoryServices::DirectoryVirtualListView ^ get(); void set(System::DirectoryServices::DirectoryVirtualListView ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualListView : System.DirectoryServices.DirectoryVirtualListView with get, set" Usage="System.DirectoryServices.DirectorySearcher.VirtualListView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSVirtualListView")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryVirtualListView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>검색에 대한 가상 목록 보기 옵션을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>가상 목록 보기 검색 정보를 포함하는 <see cref="T:System.DirectoryServices.DirectoryVirtualListView" /> 개체입니다. 이 속성의 기본값은 가상 목록 보기 검색 옵션을 사용하지 않음을 나타내는 <see langword="null" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.DirectoryServices.DirectoryVirtualListView" />
      </Docs>
    </Member>
  </Members>
</Type>