<Type Name="TempFileCollection" FullName="System.CodeDom.Compiler.TempFileCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="884ead5b18a7d8ad1c5ff71b2c95eff4bb8cc9a7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30360427" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TempFileCollection : IDisposable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TempFileCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.TempFileCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class TempFileCollection&#xA;Implements ICollection, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TempFileCollection : IDisposable, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c7ef8-101">임시 파일의 컬렉션을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c7ef8-101">Represents a collection of temporary files.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ef8-102"><xref:System.CodeDom.Compiler.TempFileCollection> 고유한 파일 이름을 생성 하 고 파일의 목록을 추적 하기 위해 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-102"><xref:System.CodeDom.Compiler.TempFileCollection> can be used to generate unique file names and to keep track of a list of files.</span></span> <span data-ttu-id="c7ef8-103">이에 게 유용할 수 <xref:System.CodeDom.Compiler.ICodeCompiler> 구현자 컴파일러에서 생성 된 중간 파일, 경우에 따라 사용 후 삭제 되는 목록을 관리 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-103">This can be useful to <xref:System.CodeDom.Compiler.ICodeCompiler> implementers when managing a list of compiler-generated intermediate files, which are sometimes deleted after use.</span></span>  
  
 <span data-ttu-id="c7ef8-104">에 고유한 임시 파일 이름을 생성 하는 디렉터리를 지정 하는 적절 하 게 오버 로드 된 생성자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-104">To specify a directory to generate unique temporary file names in, use an appropriately overloaded constructor.</span></span> <span data-ttu-id="c7ef8-105">생성자 오버 로드 여부를 컬렉션에 추가 된 파일은 있어야 다르게 지정 되지 않으면 사용 하는 경우를 나타내기 위해 사용할 수도 있습니다는 <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> 또는 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 메서드, 컬렉션이 삭제 될 때 삭제 또는 <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-105">You can also use a constructor overload to indicate whether files added to the collection should, if not specified otherwise when using the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> or <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> methods, be deleted when the collection is disposed or the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called.</span></span>  
  
 <span data-ttu-id="c7ef8-106">인스턴스에 모든 디렉터리의 파일에에서 추가할 수 <xref:System.CodeDom.Compiler.TempFileCollection> 를 사용 하는 <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-106">A file in any directory can be added to an instance of <xref:System.CodeDom.Compiler.TempFileCollection> using the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> method.</span></span>  
  
 <span data-ttu-id="c7ef8-107">특정 파일 확장명의 임시 파일에 대 한 고유한 이름의 생성 하려면 호출 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 및 생성 하는 파일 이름 확장명을 지정 하십시오.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-107">To generate a unique name for a temporary file of a particular file extension, call <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> and specifiy the extension of the file name to generate.</span></span> <span data-ttu-id="c7ef8-108"><xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 메서드는 전체 경로를 파일 이름으로 지정 된 디렉터리에서 지정된 된 확장으로 구성 된 문자열을 반환 된 <xref:System.CodeDom.Compiler.TempFileCollection.TempDir%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-108">The <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method will return a string consisting of a full path to a file name of the specified extension in the directory specified by the <xref:System.CodeDom.Compiler.TempFileCollection.TempDir%2A> property.</span></span> <span data-ttu-id="c7ef8-109"><xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 메서드는 파일 이름 확장명 별로 하나의 고유한 파일 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-109">The <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method will only return one unique file name per file name extension.</span></span>  
  
 <span data-ttu-id="c7ef8-110">둘 다는 <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> 및 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 메서드 컬렉션 삭제 될 때 파일을 삭제할지 여부를 지정할 수 있도록 하는 오버 로드를 갖고 또는 <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-110">Both the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> and <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> methods have overloads that allow you to specify whether the files should be deleted when the collection is disposed or the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called.</span></span>  
  
 <span data-ttu-id="c7ef8-111"><xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> 메서드는 제외 하 고 유지 하는 것으로 표시 된 컬렉션의 모든 파일이 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-111">The <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method will delete all the files in the collection except those that are marked to be kept.</span></span>  
  
 <span data-ttu-id="c7ef8-112"><xref:System.CodeDom.Compiler.TempFileCollection.BasePath%2A> 속성에서 반환 된 파일 이름을 생성 하는 데 사용 하는 파일 이름 확장명 없이 기본 파일 이름에 전체 경로 나타냅니다는 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-112">The <xref:System.CodeDom.Compiler.TempFileCollection.BasePath%2A> property indicates a full path to the base file name, without a file name extension, used to generate the file names returned by the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c7ef8-113">이 클래스는 모든 멤버에 적용 되는 클래스 수준에 상속 요청과 링크 요청을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-113">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="c7ef8-114">A <xref:System.Security.SecurityException> 직접 실행 호출자 또는 파생된 클래스 중 하나에 완전 신뢰 권한이 없는 경우에 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-114">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span> <span data-ttu-id="c7ef8-115">보안 요청에 대 한 세부 정보를 참조 하십시오. [링크 요청](~/docs/framework/misc/link-demands.md) 및 [상속 요청](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-115">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ef8-116">다음 예제에서는 사용을 보여 줍니다.는 <xref:System.CodeDom.Compiler.TempFileCollection> 클래스 및 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 및 <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-116">The following example shows the use of the <xref:System.CodeDom.Compiler.TempFileCollection> class and the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> and <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> methods.</span></span>  
  
 [!code-csharp[System.CodeDom.Compiler.TempFileCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.Compiler.TempFileCollection/CS/program.cs#1)]
 [!code-vb[System.CodeDom.Compiler.TempFileCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.Compiler.TempFileCollection/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="c7ef8-117">파생 된 <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c7ef8-117">for deriving from the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> class.</span>
      </span>
      <span data-ttu-id="c7ef8-118">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; <see cref="T:System.Security.PermissionSet" />: <see langword="FullTrust" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c7ef8-118">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; <see cref="T:System.Security.PermissionSet" />: <see langword="FullTrust" />.</span>
      </span>
    </permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="c7ef8-119">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-119">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="c7ef8-120">이 클래스는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-120">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <summary>
          <span data-ttu-id="c7ef8-121">
            <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-121">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TempFileCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TempFileCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7ef8-122">기본값을 사용하여 <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-122">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> class with default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ef8-123">이것이 기본 설정 사용 하 여 컬렉션을 초기화 하는 기본 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-123">This is a default constructor that initializes the collection with default settings.</span></span> <span data-ttu-id="c7ef8-124">기본적으로이 임시 파일 컬렉션 기본 임시 디렉터리에 파일을 저장 하 고 생성 되 고 사용한 후 임시 파일을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-124">By default, this temporary files collection will store the files in a default temporary directory and will delete the temporary files after they have been generated and used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TempFileCollection (string tempDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tempDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tempDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TempFileCollection(System::String ^ tempDir);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tempDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tempDir">
          <span data-ttu-id="c7ef8-125">임시 파일을 저장하는 데 사용할 임시 디렉터리에 대한 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-125">A path to the temporary directory to use for storing the temporary files.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7ef8-126">기본적으로, 임시 파일을 생성하고 사용한 후에 해당 임시 파일을 삭제하도록 설정한 지정된 임시 디렉터리를 사용하여 <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-126">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> class using the specified temporary directory that is set to delete the temporary files after their generation and use, by default.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="c7ef8-127">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-127">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="c7ef8-128">이 클래스는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-128">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TempFileCollection (string tempDir, bool keepFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tempDir, bool keepFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tempDir As String, keepFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TempFileCollection(System::String ^ tempDir, bool keepFiles);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tempDir" Type="System.String" />
        <Parameter Name="keepFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tempDir">
          <span data-ttu-id="c7ef8-129">임시 파일을 저장하는 데 사용할 임시 디렉터리에 대한 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-129">A path to the temporary directory to use for storing the temporary files.</span>
          </span>
        </param>
        <param name="keepFiles">
          <span data-ttu-id="c7ef8-130">임시 파일을 사용한 후에 유지해야 한다면 <see langword="true" />이고 삭제해야 한다면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-130">
              <see langword="true" /> if the temporary files should be kept after use; <see langword="false" /> if the temporary files should be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7ef8-131">기본적으로, 임시 파일을 생성하고사용한 후에 해당 임시 파일을 유지할 것인지 또는 삭제할 것인지 여부를 나타내는 지정된 값과 지정된 임시 디렉터리를 사용하여 <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-131">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> class using the specified temporary directory and specified value indicating whether to keep or delete the temporary files after their generation and use, by default.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ef8-132">값 `keepFiles` 설정 하는 데 사용 되는 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-132">The value of `keepFiles` is used to set the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> parameter.</span></span> <span data-ttu-id="c7ef8-133">컬렉션에서 임시 파일이 유지 되거나 값에 따라 컴파일 작업이 완료 될 때 삭제는 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 컬렉션에서 속성이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-133">The temporary files in the collection are retained or deleted upon the completion of compiler activity based on the value of the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property in the collection.</span></span> <span data-ttu-id="c7ef8-134">각 파일의 현재 값 컬렉션에 추가 되므로 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 표시 되지 않으면 연결 되어 있는 방법으로 추가 됩니다 한 `keepFile` 매개 변수 값은 해당 특정 파일에 사용 하는 경우에서.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-134">As each file is added to the collection, the current value of <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> is associated with it, unless it is added with a method that has a `keepFile` parameter, in which case that value is used for that specific file.</span></span> <span data-ttu-id="c7ef8-135">경우는 <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> 메서드를 호출 하는 경우 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 은 `true`와 함께 추가 하는 것을 비롯 한 모든 파일이 삭제 됩니다는 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 값 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-135">When the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called, if <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> is `true`, all files are deleted, including those added with a <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> value of `true`.</span></span> <span data-ttu-id="c7ef8-136">그러면 식별을 일시적으로 오류 보고 등의 용도로 컴파일 후 유지 한 다음 더 이상 필요 없는 경우 삭제 될 파일 유지 되는 특정 파일.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-136">This allows specific files, those identified as being keep files, to be temporarily retained after compilation for purposes such as error reporting, then deleted when they are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="c7ef8-137">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-137">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="c7ef8-138">이 클래스는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-138">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddExtension">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c7ef8-139">지정된 파일 확장명의 파일 이름을 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-139">Adds a file name with the specified file name extension to the collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddExtension">
      <MemberSignature Language="C#" Value="public string AddExtension (string fileExtension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string AddExtension(string fileExtension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddExtension (fileExtension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ AddExtension(System::String ^ fileExtension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileExtension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileExtension">
          <span data-ttu-id="c7ef8-140">컬렉션에 추가할 자동으로 생성된 임시 파일 이름의 파일 확장명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-140">The file name extension for the auto-generated temporary file name to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7ef8-141">지정된 파일 확장명의 파일 이름을 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-141">Adds a file name with the specified file name extension to the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7ef8-142">방금 컬렉션에 추가된 지정된 확장명의 파일 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-142">A file name with the specified extension that was just added to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ef8-143">이 메서드는 임시 파일 컬렉션에 추가 된 지정한 확장명을 가진 파일 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-143">This method returns a file name with the specified extension that has been added to the temporary files collection.</span></span> <span data-ttu-id="c7ef8-144">다른 코드가 여전히 파일을 만들어야 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-144">Other code must still create the file before it can be used.</span></span>  
  
 <span data-ttu-id="c7ef8-145">이 메서드는 동일한 확장명으로 호출 하는 경우 이름이 같은 반환 하므로 각 파일 이름 확장명에 대해 한 번만 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-145">This method can be called only once for each file name extension, because it will return the same name if it is called with the same extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExtension">
      <MemberSignature Language="C#" Value="public string AddExtension (string fileExtension, bool keepFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string AddExtension(string fileExtension, bool keepFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddExtension (fileExtension As String, keepFile As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ AddExtension(System::String ^ fileExtension, bool keepFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileExtension" Type="System.String" />
        <Parameter Name="keepFile" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileExtension">
          <span data-ttu-id="c7ef8-146">컬렉션에 추가할 자동으로 생성된 임시 파일 이름의 파일 확장명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-146">The file name extension for the auto-generated temporary file name to add to the collection.</span>
          </span>
        </param>
        <param name="keepFile">
          <span data-ttu-id="c7ef8-147">파일을 사용한 후에 유지하려면 <see langword="true" />로 설정하고, 삭제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-147">
              <see langword="true" /> if the file should be kept after use; <see langword="false" /> if the file should be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7ef8-148">파일을 삭제해야 하는지 유지해야 하는지를 나타내는 지정된 값을 사용하여 지정된 파일 확장명의 파일 이름을 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-148">Adds a file name with the specified file name extension to the collection, using the specified value indicating whether the file should be deleted or retained.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7ef8-149">방금 컬렉션에 추가된 지정된 확장명의 파일 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-149">A file name with the specified extension that was just added to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ef8-150">이 메서드는 임시 파일 컬렉션에 추가 된 지정한 확장명을 가진 파일 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-150">This method returns a file name with the specified extension that has been added to the temporary files collection.</span></span> <span data-ttu-id="c7ef8-151">다른 코드가 여전히 파일을 만들어야 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-151">Other code must still create the file before it can be used.</span></span>  
  
 <span data-ttu-id="c7ef8-152">이 메서드는 동일한 확장명으로 호출 하는 경우 이름이 같은 반환 하므로 각 파일 이름 확장명에 대해 한 번만 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-152">This method can be called only once for each file name extension, because it will return the same name if it is called with the same extension.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c7ef8-153">
            <paramref name="fileExtension" />이 <see langword="null" /> 또는 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-153">
              <paramref name="fileExtension" /> is <see langword="null" /> or an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFile">
      <MemberSignature Language="C#" Value="public void AddFile (string fileName, bool keepFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFile(string fileName, bool keepFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFile (fileName As String, keepFile As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFile(System::String ^ fileName, bool keepFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="keepFile" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="c7ef8-154">컬렉션에 추가할 파일 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-154">The name of the file to add to the collection.</span>
          </span>
        </param>
        <param name="keepFile">
          <span data-ttu-id="c7ef8-155">파일을 사용한 후에 유지하려면 <see langword="true" />로 설정하고, 삭제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-155">
              <see langword="true" /> if the file should be kept after use; <see langword="false" /> if the file should be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7ef8-156">컬렉션이 삭제되거나  <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" /> 메서드가 호출될 때 파일을 보관할 것인지 여부를 나타내는 특정 값을 사용하여 지정된 파일을 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-156">Adds the specified file to the collection, using the specified value indicating whether to keep the file after the collection is disposed or when the <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" /> method is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c7ef8-157">다음 예제에서는 사용을 보여 줍니다.는 <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%28System.String%2CSystem.Boolean%29> 메서드 컬렉션을 유지 해야 하는 파일을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-157">The following example shows the use of the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%28System.String%2CSystem.Boolean%29> method to add a file that is to be kept to the collection.</span></span> <span data-ttu-id="c7ef8-158">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.TempFileCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-158">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.TempFileCollection> class.</span></span>  
  
 [!code-csharp[System.CodeDom.Compiler.TempFileCollection#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.Compiler.TempFileCollection/CS/program.cs#2)]
 [!code-vb[System.CodeDom.Compiler.TempFileCollection#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.Compiler.TempFileCollection/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c7ef8-159">
            <paramref name="fileName" />이 <see langword="null" /> 또는 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-159">
              <paramref name="fileName" /> is <see langword="null" /> or an empty string.</span>
          </span>
          <span data-ttu-id="c7ef8-160">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-160">-or-</span>
          </span>
          <span data-ttu-id="c7ef8-161">
            <paramref name="fileName" />은(는) 중복됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-161">
              <paramref name="fileName" /> is a duplicate.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BasePath">
      <MemberSignature Language="C#" Value="public string BasePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BasePath" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.BasePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BasePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BasePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7ef8-162">컬렉션의 임시 파일 이름을 생성하는 데 사용되는 임시 디렉터리 경로의 기본 파일 이름(파일 확장명 제외)에 대한 전체 경로를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-162">Gets the full path to the base file name, without a file name extension, on the temporary directory path, that is used to generate temporary file names for the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7ef8-163">컬렉션의 임시 파일 이름을 생성하는 데 사용되는 임시 디렉터리 경로의 기본 파일 이름(파일 확장명 제외)에 대한 전체 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-163">The full path to the base file name, without a file name extension, on the temporary directory path, that is used to generate temporary file names for the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c7ef8-164">
            <see cref="P:System.CodeDom.Compiler.TempFileCollection.BasePath" /> 속성이 <see langword="null" />로 설정된 적이 없거나 설정되어 있지 않고 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" />가 <see cref="P:System.CodeDom.Compiler.TempFileCollection.TempDir" /> 속성에서 나타내는 임시 디렉터리에 부여되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-164">If the <see cref="P:System.CodeDom.Compiler.TempFileCollection.BasePath" /> property has not been set or is set to <see langword="null" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> is not granted for the temporary directory indicated by the <see cref="P:System.CodeDom.Compiler.TempFileCollection.TempDir" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (string[] fileNames, int start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(string[] fileNames, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (fileNames As String(), start As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::String ^&gt; ^ fileNames, int start);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileNames" Type="System.String[]" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileNames">
          <span data-ttu-id="c7ef8-165">복사할 대상 문자열의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-165">The array of strings to copy to.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="c7ef8-166">복사를 시작할 대상 배열의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-166">The index of the array to begin copying to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7ef8-167">지정된 인덱스에서 시작하여 지정된 문자열에 컬렉션의 멤버를 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-167">Copies the members of the collection to the specified string, beginning at the specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7ef8-168">컬렉션에 있는 파일의 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-168">Gets the number of files in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7ef8-169">컬렉션의 파일 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-169">The number of files in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7ef8-170">이 컬렉션 내에서 보관하도록 표시되지 않은 임시 파일을 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-170">Deletes the temporary files within this collection that were not marked to be kept.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ef8-171"><xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> 메서드를 개별적으로 유지 되거나 삭제 될 파일 인지를 확인 하려면 컬렉션의 각 파일을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-171">The <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method examines each file in the collection to determine, on an individual basis, whether the file is to be kept or deleted.</span></span> <span data-ttu-id="c7ef8-172">파일을 보관 되는 추가 메서드를 사용 하 여 컬렉션에 추가 될 때 명시적으로 표시할 수 있습니다는 `keepFile` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-172">Files can be explicitly marked to be kept when added to the collection using add methods that take a `keepFile` parameter.</span></span> <span data-ttu-id="c7ef8-173">파일을 사용 하 여 컬렉션에 추가할 때의 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 맺지 않은 오버 로드는 `keepFile` 매개 변수 값의는 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 속성 기본 유지 파일 표시기로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-173">When adding a file to the collection using the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> overload that does not have a `keepFile` parameter the value of the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property is used as the default keep file indicator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="c7ef8-174">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-174">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7ef8-175">
            <see cref="T:System.CodeDom.Compiler.TempFileCollection" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-175">Releases the unmanaged resources used by the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ef8-176">이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-176">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="c7ef8-177">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-177">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="c7ef8-178"><xref:System.Object.Finalize%2A> 호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-178"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="c7ef8-179">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.CodeDom.Compiler.TempFileCollection>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-179">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.CodeDom.Compiler.TempFileCollection> references.</span></span> <span data-ttu-id="c7ef8-180">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-180">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c7ef8-181">
              <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c7ef8-181">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="c7ef8-182">
              <see langword="Dispose(Boolean)" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c7ef8-182">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="c7ef8-183">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c7ef8-183">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="c7ef8-184">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c7ef8-184">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TempFileCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TempFileCollection ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7ef8-185">가비지 수집에서 이 개체를 회수하기 전에 임시 파일을 삭제하려고 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-185">Attempts to delete the temporary files before this object is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ef8-186">이 메서드를 재정의 <xref:System.Object.Finalize%2A?displayProperty=nameWithType> 호출 하 여 리소스를 정리 하 고 `Dispose(false)`합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-186">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType> and cleans up resources by calling `Dispose(false)`.</span></span> <span data-ttu-id="c7ef8-187">`Dispose(Boolean)`를 재정의하여 정리 작업을 사용자 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-187">Override `Dispose(Boolean)` to customize the cleanup.</span></span>  
  
 <span data-ttu-id="c7ef8-188">응용 프로그램 코드,이 메서드를 호출 하지 않아야 개체의 `Finalize` 메서드를 호출 하 여 가비지 수집기의 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지 수집 중 호출 됩니다는 <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-188">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="c7ef8-189">자세한 내용은 참조 [Finalize 메서드 및 소멸자](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md), 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-189">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7ef8-190">컬렉션의 멤버를 열거할 수 있는 열거자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-190">Gets an enumerator that can enumerate the members of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7ef8-191">컬렉션의 멤버를 포함하는 <see cref="T:System.Collections.IEnumerator" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-191">An <see cref="T:System.Collections.IEnumerator" /> that contains the collection's members.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepFiles">
      <MemberSignature Language="C#" Value="public bool KeepFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepFiles" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.KeepFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepFiles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7ef8-192">
            <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" /> 메서드가 호출되거나 컬렉션이 삭제될 때 기본적으로 파일을 유지하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-192">Gets or sets a value indicating whether to keep the files, by default, when the <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" /> method is called or the collection is disposed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7ef8-193">파일을 유지해야 한다면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-193">
              <see langword="true" /> if the files should be kept; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ef8-194">값은 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 속성은 기본으로 사용 경우이 값은 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 맺지 않은 오버 로드는 `keepFile` 매개 변수 컬렉션에 임시 파일을 추가 하기 위해 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-194">The value of the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property is used as the default value when the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> overload that does not have a `keepFile` parameter is called to add a temporary file to the collection.</span></span> <span data-ttu-id="c7ef8-195">컬렉션의 각 임시 파일에 유지 되거나 삭제 될 파일 인지 파일 단위로에서 결정 하는 연결된 유지 파일 플래그가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-195">Each temporary file in the collection has an associated keep file flag that determines, on a per-file basis, whether that file is to be kept or deleted.</span></span> <span data-ttu-id="c7ef8-196">파일을 자동으로 유지 또는 연결된 유지 파일 값에 따라 컴파일 완료에서 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-196">Files are automatically kept or deleted on completion of the compilation based on their associated keep files value.</span></span> <span data-ttu-id="c7ef8-197">그러나 컴파일 완료 되 면 유지 된 파일을 해제할 수를 설정 하 여 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> false로 호출 된 <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-197">However, after compilation is complete, files that were kept can be released by setting <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> false and calling the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method.</span></span>  <span data-ttu-id="c7ef8-198">이렇게 하면 모든 파일이 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-198">This will result in all files being deleted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int start);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int start) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="c7ef8-199">
            <see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Collections.ICollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-199">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="c7ef8-200">
            <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-200">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="c7ef8-201">배열에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-201">The zero-based index in array at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7ef8-202">컬렉션의 요소를 대상 배열의 지정한 인덱스에서 시작하는 배열에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-202">Copies the elements of the collection to an array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ef8-203">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="c7ef8-203">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c7ef8-204"><xref:System.CodeDom.Compiler.TempFileCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-204">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7ef8-205">컬렉션에 포함된 요소 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-205">Gets the number of elements contained in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7ef8-206">
            <see cref="T:System.Collections.ICollection" />에 포함된 요소의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-206">The number of elements contained in the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ef8-207">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="c7ef8-207">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c7ef8-208"><xref:System.CodeDom.Compiler.TempFileCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-208">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7ef8-209">해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-209">Gets a value indicating whether access to the collection is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7ef8-210">
            <see langword="true" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see cref="T:System.Collections.ICollection" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-210">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ef8-211">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="c7ef8-211">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c7ef8-212"><xref:System.CodeDom.Compiler.TempFileCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-212">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7ef8-213">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-213">Gets an object that can be used to synchronize access to the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7ef8-214">
            <see cref="T:System.Collections.ICollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-214">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ef8-215">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="c7ef8-215">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c7ef8-216"><xref:System.CodeDom.Compiler.TempFileCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-216">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7ef8-217">컬렉션을 반복하는 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-217">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7ef8-218">컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-218">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ef8-219">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="c7ef8-219">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c7ef8-220"><xref:System.CodeDom.Compiler.TempFileCollection> 인스턴스가 <xref:System.Collections.IEnumerable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-220">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7ef8-221">관리되지 않는 리소스의 확보, 해제 또는 다시 설정과 관련된 응용 프로그램 정의 작업을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-221">Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ef8-222">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="c7ef8-222">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c7ef8-223"><xref:System.CodeDom.Compiler.TempFileCollection> 인스턴스가 <xref:System.IDisposable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c7ef8-223">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.IDisposable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IDisposable.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="TempDir">
      <MemberSignature Language="C#" Value="public string TempDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TempDir" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.TempDir" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TempDir As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TempDir { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7ef8-224">임시 파일을 저장할 임시 디렉터리를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-224">Gets the temporary directory to store the temporary files in.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7ef8-225">임시 파일을 저장할 임시 디렉터리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7ef8-225">The temporary directory to store the temporary files in.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>