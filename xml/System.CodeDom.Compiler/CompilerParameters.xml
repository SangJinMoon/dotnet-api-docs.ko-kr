<Type Name="CompilerParameters" FullName="System.CodeDom.Compiler.CompilerParameters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ad30b59e17093683b1fcc60cde054e6174c16ca7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CompilerParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CompilerParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CompilerParameters" />
  <TypeSignature Language="VB.NET" Value="Public Class CompilerParameters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompilerParameters" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="cac36-101">컴파일러를 호출하는 데 사용되는 매개 변수를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cac36-101">Represents the parameters used to invoke a compiler.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac36-102">A <xref:System.CodeDom.Compiler.CompilerParameters> 개체 설정을 나타내며에 대 한 옵션는 <xref:System.CodeDom.Compiler.ICodeCompiler> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-102">A <xref:System.CodeDom.Compiler.CompilerParameters> object represents the settings and options for an <xref:System.CodeDom.Compiler.ICodeCompiler> interface.</span></span>  
  
 <span data-ttu-id="cac36-103">실행 프로그램을 컴파일하는 경우 설정 해야는 <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-103">If you are compiling an executable program, you must set the <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> property to `true`.</span></span> <span data-ttu-id="cac36-104">경우는 <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> 로 설정 된 `false`, 컴파일러는 클래스 라이브러리를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-104">When the <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> is set to `false`, the compiler will generate a class library.</span></span> <span data-ttu-id="cac36-105">기본적으로 새 <xref:System.CodeDom.Compiler.CompilerParameters> 사용 하 여 초기화 해당 <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> 속성이로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-105">By default, a new <xref:System.CodeDom.Compiler.CompilerParameters> is initialized with its <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> property set to `false`.</span></span> <span data-ttu-id="cac36-106">CodeDOM 그래프에서 실행 파일을 컴파일하는 경우 <xref:System.CodeDom.CodeEntryPointMethod>가 그래프에 정의되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-106">If you are compiling an executable from a CodeDOM graph, a <xref:System.CodeDom.CodeEntryPointMethod> must be defined in the graph.</span></span> <span data-ttu-id="cac36-107">여러 코드 진입점을 클래스의 이름을 설정 하 여 사용 하도록 진입점을 정의 하는 클래스를 지정할 수 있습니다는 <xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-107">If there are multiple code entry points, you can indicate the class that defines the entry point to use by setting the name of the class to the <xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A> property.</span></span>  
  
 <span data-ttu-id="cac36-108">출력 어셈블리에 대 한 파일 이름을 지정할 수 있습니다는 <xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-108">You can specify a file name for the output assembly in the <xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A> property.</span></span> <span data-ttu-id="cac36-109">지정하지 않으면 기본 출력 파일 이름이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-109">Otherwise, a default output file name will be used.</span></span> <span data-ttu-id="cac36-110">생성된 된 어셈블리에 디버그 정보를 포함 하려면 설정는 <xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-110">To include debug information in a generated assembly, set the <xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A> property to `true`.</span></span> <span data-ttu-id="cac36-111">어셈블리 이름에 항목으로 지정 해야 모든 어셈블리를 프로젝트에서 참조 하는 경우는 <xref:System.Collections.Specialized.StringCollection> 로 설정는 <xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A> 의 속성은 <xref:System.CodeDom.Compiler.CompilerParameters> 컴파일을 호출할 때 사용 되 합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-111">If your project references any assemblies, you must specify the assembly names as items in a <xref:System.Collections.Specialized.StringCollection> set to the <xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A> property of the <xref:System.CodeDom.Compiler.CompilerParameters> used when invoking compilation.</span></span>  
  
 <span data-ttu-id="cac36-112">설정 하 여 디스크를 사용 하지 않고 메모리에 기록 되는 어셈블리를 컴파일할 수는 <xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-112">You can compile an assembly that is written to memory rather than disk by setting the <xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A> property to `true`.</span></span> <span data-ttu-id="cac36-113">어셈블리가 메모리에 생성되면 코드에서 <xref:System.CodeDom.Compiler.CompilerResults>의 <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> 속성을 통해 생성된 어셈블리에 대한 참조를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-113">When an assembly is generated in memory, your code can obtain a reference to the generated assembly from the <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> property of a <xref:System.CodeDom.Compiler.CompilerResults>.</span></span> <span data-ttu-id="cac36-114">어셈블리에 기록 되는 경우 디스크에서 생성 된 어셈블리 경로 가져올 수는 <xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A> 속성은 <xref:System.CodeDom.Compiler.CompilerResults>합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-114">If an assembly is written to disk, you can obtain the path to the generated assembly from the <xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A> property of a <xref:System.CodeDom.Compiler.CompilerResults>.</span></span>  
  
 <span data-ttu-id="cac36-115">컴파일을 중단할 경고 수준을 지정하려면 컴파일을 중단할 경고 수준을 나타내는 정수로 <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A> 속성을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-115">To specify a warning level at which to halt compilation, set the <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A> property to an integer that represents the warning level at which to halt compilation.</span></span> <span data-ttu-id="cac36-116">컴파일러에 설정 하 여 경고가 발생 한 경우 컴파일을 중단을 구성할 수도 있습니다는 <xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-116">You can also configure the compiler to halt compilation if warnings are encountered by setting the <xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="cac36-117">컴파일 프로세스를 호출할 때 사용할 사용자 지정 명령줄 인수 문자열을 지정하려면 <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A> 속성에 문자열을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-117">To specify a custom command-line arguments string to use when invoking the compilation process, set the string in the <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A> property.</span></span> <span data-ttu-id="cac36-118">컴파일러 프로세스를 호출하는 데 Win32 보안 토큰이 필요한 경우 <xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A> 속성에 토큰을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-118">If a Win32 security token is required to invoke the compiler process, specify the token in the <xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A> property.</span></span> <span data-ttu-id="cac36-119">컴파일된 어셈블리에서.NET Framework 리소스 파일을 포함 시키려면에 리소스 파일의 이름을 추가 <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-119">To include .NET Framework resource files in the compiled assembly, add the names of the resource files to the <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A> property.</span></span> <span data-ttu-id="cac36-120">다른 어셈블리의.NET Framework 리소스를 참조 하려면에 리소스 파일의 이름을 추가 하는 <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-120">To reference .NET Framework resources in another assembly, add the names of the resource files to the <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> property.</span></span> <span data-ttu-id="cac36-121">컴파일된 어셈블리에 Win32 리소스 파일을 포함 시키려면에서 Win32 리소스 파일의 이름을 지정는 <xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-121">To include a Win32 resource file in the compiled assembly, specify the name of the Win32 resource file in the <xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cac36-122">이 클래스는 모든 멤버에 적용 되는 클래스 수준에 상속 요청과 링크 요청을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-122">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="cac36-123">A <xref:System.Security.SecurityException> 직접 실행 호출자 또는 파생된 클래스 중 하나에 완전 신뢰 권한이 없는 경우에 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-123">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span> <span data-ttu-id="cac36-124">보안 요청에 대 한 세부 정보를 참조 하십시오. [링크 요청](~/docs/framework/misc/link-demands.md) 및 [상속 요청](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-124">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cac36-125">다음 예제에서는 간단한 Hello World 프로그램에 대 한 CodeDOM 원본 그래프를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-125">The following example builds a CodeDOM source graph for a simple Hello World program.</span></span>  <span data-ttu-id="cac36-126">그런 다음 소스는 실행 파일로 컴파일 및 실행 파일에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-126">The source is then saved to a file, compiled into an executable, and run.</span></span> <span data-ttu-id="cac36-127">`CompileCode` 메서드를 사용 하는 방법을 보여 줍니다는 <xref:System.CodeDom.Compiler.CompilerParameters> 다양 한 컴파일러 설정 및 옵션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-127">The `CompileCode` method illustrates how to use the <xref:System.CodeDom.Compiler.CompilerParameters> class to specify various compiler settings and options.</span></span>  
  
 [!code-cpp[CompilerParametersExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#1)]
 [!code-csharp[CompilerParametersExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#1)]
 [!code-vb[CompilerParametersExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <span data-ttu-id="cac36-128">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cac36-128">for full trust for the immediate caller.</span>
      </span>
      <span data-ttu-id="cac36-129">이 클래스는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cac36-129">This class cannot be used by partially trusted code.</span>
      </span>
    </permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="cac36-130">상속자에 대 한 완전 신뢰 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cac36-130">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="cac36-131">부분적으로 신뢰할 수 있는 코드에서이 클래스는 상속 될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cac36-131">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cac36-132">
            <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-132">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompilerParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompilerParameters();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cac36-133">
            <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-133">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cac36-134">다음 예제에서는 사용 하 여 <xref:System.CodeDom.Compiler.CompilerParameters> 다양 한 컴파일러 설정 및 옵션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-134">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="cac36-135">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerParameters> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-135">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="cac36-136">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-136">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="cac36-137">이 클래스는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-137">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompilerParameters (string[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompilerParameters(cli::array &lt;System::String ^&gt; ^ assemblyNames);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">
          <span data-ttu-id="cac36-138">참조할 어셈블리의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-138">The names of the assemblies to reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cac36-139">지정된 어셈블리 이름을 사용하여 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-139">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> class using the specified assembly names.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="cac36-140">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-140">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="cac36-141">이 클래스는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-141">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompilerParameters (string[] assemblyNames, string outputName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames, string outputName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String(), outputName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompilerParameters(cli::array &lt;System::String ^&gt; ^ assemblyNames, System::String ^ outputName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
        <Parameter Name="outputName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">
          <span data-ttu-id="cac36-142">참조할 어셈블리의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-142">The names of the assemblies to reference.</span>
          </span>
        </param>
        <param name="outputName">
          <span data-ttu-id="cac36-143">출력 파일 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-143">The output file name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cac36-144">지정된 어셈블리 이름 및 출력 파일 이름을 사용하여 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-144">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> class using the specified assembly names and output file name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="cac36-145">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-145">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="cac36-146">이 클래스는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-146">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompilerParameters (string[] assemblyNames, string outputName, bool includeDebugInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames, string outputName, bool includeDebugInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String(), outputName As String, includeDebugInformation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompilerParameters(cli::array &lt;System::String ^&gt; ^ assemblyNames, System::String ^ outputName, bool includeDebugInformation);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
        <Parameter Name="outputName" Type="System.String" />
        <Parameter Name="includeDebugInformation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">
          <span data-ttu-id="cac36-147">참조할 어셈블리의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-147">The names of the assemblies to reference.</span>
          </span>
        </param>
        <param name="outputName">
          <span data-ttu-id="cac36-148">출력 파일 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-148">The output file name.</span>
          </span>
        </param>
        <param name="includeDebugInformation">
          <span data-ttu-id="cac36-149">디버그 정보를 포함하려면 <see langword="true" />이고 디버그 정보를 제외하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-149">
              <see langword="true" /> to include debug information; <see langword="false" /> to exclude debug information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cac36-150">지정된 어셈블리 이름, 출력 이름 및 디버그 정보 포함 여부를 나타내는 값을 사용하여 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-150">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> class using the specified assembly names, output name, and a value indicating whether to include debug information.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="cac36-151">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-151">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="cac36-152">이 클래스는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-152">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CompilerOptions">
      <MemberSignature Language="C#" Value="public string CompilerOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompilerOptions" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.CompilerOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property CompilerOptions As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompilerOptions { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cac36-153">컴파일러를 호출할 때 사용할 선택적인 명령줄 인수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-153">Gets or sets optional command-line arguments to use when invoking the compiler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cac36-154">컴파일러에 대한 추가적인 명령줄 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-154">Any additional command-line arguments for the compiler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac36-155"><xref:System.CodeDom.Compiler.ICodeCompiler> 일반적으로 명령줄 컴파일러를 호출할 때 명령줄에서이 문자열을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-155">An <xref:System.CodeDom.Compiler.ICodeCompiler> typically includes this string on the command line when invoking a command-line compiler.</span></span> <span data-ttu-id="cac36-156">기본적으로이 속성은 빈 문자열을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-156">By default, this property contains an empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cac36-157">다음 예제에서는 사용 하 여 <xref:System.CodeDom.Compiler.CompilerParameters> 다양 한 컴파일러 설정 및 옵션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-157">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="cac36-158">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerParameters> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-158">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CoreAssemblyFileName">
      <MemberSignature Language="C#" Value="public string CoreAssemblyFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CoreAssemblyFileName" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property CoreAssemblyFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CoreAssemblyFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cac36-159">
            <see cref="T:System.Object" />, <see cref="T:System.String" /> 또는 <see cref="T:System.Int32" />와 같은 기본 형식을 포함하는 핵심 또는 표준 어셈블리의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-159">Gets or sets the name of the core or standard assembly that contains basic types such as <see cref="T:System.Object" />, <see cref="T:System.String" />, or <see cref="T:System.Int32" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cac36-160">기본 형식이 포함된 핵심 어셈블리의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-160">The name of the core assembly that contains basic types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac36-161">이 속성의 값은 빈 문자열 하는 경우 또는 `null`, 컴파일러는 기본 핵심 어셈블리를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-161">If the value of this property is an empty string or `null`, the compiler uses the default core assembly.</span></span> <span data-ttu-id="cac36-162">컴파일러 버전에 따라 기본 핵심 어셈블리가 mscorlib.dll 또는 System.Runtime.dll 프레임 워크 디렉터리 또는 참조 어셈블리 디렉터리에 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-162">Depending on the compiler version, the default core assembly may be mscorlib.dll or System.Runtime.dll in a Framework directory or reference assembly directory.</span></span> <span data-ttu-id="cac36-163">이 속성의 값에 비어 있지 않으면 코드 문서 개체 모델 (CodeDOM) 명시적으로 지정된 된 어셈블리 참조 및이 컴파일러 옵션을 사용 하면 컴파일하는 동안 모든 어셈블리를 암시적으로 참조 하지 컴파일러가 내보냅니다...</span><span class="sxs-lookup"><span data-stu-id="cac36-163">If the value of this property is not empty, the Code Document Object Model (CodeDOM) explicitly references the specified assembly and emits compiler options that cause the compiler to not reference any assemblies implicitly during compilation..</span></span> <span data-ttu-id="cac36-164">컴파일러에 의해 암시적으로 코어 또는 표준 어셈블리를 참조 하는 기본에 대 한 자체적으로이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-164">For compilers that reference the core or standard assembly only implicitly by default, this property can be used on its own.</span></span> <span data-ttu-id="cac36-165">암시적으로 어셈블리를 또한 코어 또는 표준 어셈블리를 참조 하는 컴파일러에 대 한이 옵션을 사용 하 여 필요할 수 있습니다에 추가 항목이 지정 하는 <xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-165">For compilers that implicitly reference assemblies in addition to the core or standard assembly, using this option may require specifying additional entries in the <xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cac36-166"><xref:System.CodeDom.Compiler.ICodeCompiler> 또는 <xref:System.CodeDom.Compiler.CodeDomProvider> 구현에서이 속성을 무시 하도록 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-166">An <xref:System.CodeDom.Compiler.ICodeCompiler> or <xref:System.CodeDom.Compiler.CodeDomProvider> implementation may choose to ignore this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmbeddedResources">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection EmbeddedResources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection EmbeddedResources" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmbeddedResources As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringCollection ^ EmbeddedResources { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cac36-167">어셈블리 출력을 컴파일할 때 포함할 .NET Framework 리소스 파일을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-167">Gets the .NET Framework resource files to include when compiling the assembly output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cac36-168">생성된 어셈블리에 포함할 .NET Framework 리소스의 파일 경로가 포함된 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-168">A collection that contains the file paths of .NET Framework resources to include in the generated assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac36-169">포함된 리소스는 생성된 어셈블리 출력 파일에 작성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-169">Embedded resources are built into the generated assembly output file.</span></span> <span data-ttu-id="cac36-170">이 속성을 통해 파일을 포함 하는 비슷합니다는 `/resource` 다양 한.NET Framework 컴파일러에서 지 원하는 명령줄 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-170">Including files through this property is similar to the `/resource` command-line argument supported by many of the .NET Framework compilers.</span></span>  
  
 <span data-ttu-id="cac36-171">이 지원을 위해 호출 하 여 테스트 해야 하므로 일부 컴파일러는.NET Framework 리소스 파일을 지원는 <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> 플래그로 메서드 <xref:System.CodeDom.Compiler.GeneratorSupport.Resources>합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-171">Not all compilers support .NET Framework resource files, so you should test for this support by calling the <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> method with the flag <xref:System.CodeDom.Compiler.GeneratorSupport.Resources>.</span></span>  
  
 <span data-ttu-id="cac36-172">하나 이상의.NET Framework 리소스 파일 경로를 반환 된 추가 <xref:System.Collections.Specialized.StringCollection> 컴파일된 어셈블리에서 파일 리소스를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-172">Add one or more .NET Framework resource file paths to the returned <xref:System.Collections.Specialized.StringCollection> to embed the file resources in the compiled assembly.</span></span> <span data-ttu-id="cac36-173">컴파일 오류;에서 중복 또는 잘못 된 파일 경로 결과 추가합니다. 각 문자열 유효한.NET Framework 리소스 파일에 고유한 경로 지정 하는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-173">Adding a duplicate or invalid file path results in compilation errors; ensure that each string specifies a unique path to a valid .NET Framework resource file.</span></span>  
  
 <span data-ttu-id="cac36-174">사용 하 여 <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A> ; 어셈블리에 대 한 기본 또는 중립 문화권.NET Framework 리소스를 포함 하도록 사용 된 <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> 위성 어셈블리의.NET Framework 리소스를 참조 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-174">Use <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A> to include default or neutral culture .NET Framework resources for an assembly; use the <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> property to reference .NET Framework resources in satellite assemblies.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cac36-175">다음 예제에서는 사용 하 여 <xref:System.CodeDom.Compiler.CompilerParameters> 다양 한 컴파일러 설정 및 옵션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-175">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="cac36-176">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerParameters> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-176">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.Win32Resource" />
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence Evidence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); void set(System::Security::Policy::Evidence ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("CAS policy is obsolete and will be removed in a future release of the .NET Framework. Please see http://go2.microsoft.com/fwlink/?LinkId=131738 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cac36-177">컴파일된 어셈블리에 부여할 보안 정책 권한을 나타내는 증명 정보 개체를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-177">Specifies an evidence object that represents the security policy permissions to grant the compiled assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cac36-178">컴파일된 어셈블리에 부여할 보안 정책 권한을 나타내는  개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-178">An  object that represents the security policy permissions to grant the compiled assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cac36-179">에 대 한 기능 제어 증명 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-179">for the ability control evidence.</span>
          </span>
          <span data-ttu-id="cac36-180">권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /> 보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-180">Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="GenerateExecutable">
      <MemberSignature Language="C#" Value="public bool GenerateExecutable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateExecutable" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateExecutable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateExecutable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cac36-181">실행 파일의 생성 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-181">Gets or sets a value indicating whether to generate an executable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cac36-182">실행 파일을 생성해야 한다면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-182">
              <see langword="true" /> if an executable should be generated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac36-183">이 속성의 값이 `false`, DLL이 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-183">If the value of this property is `false`, a DLL will be generated.</span></span> <span data-ttu-id="cac36-184">기본적으로 이 속성 값은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-184">By default, the value of this property is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cac36-185">다음 예제에서는 사용 하 여 <xref:System.CodeDom.Compiler.CompilerParameters> 다양 한 컴파일러 설정 및 옵션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-185">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="cac36-186">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerParameters> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-186">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateInMemory">
      <MemberSignature Language="C#" Value="public bool GenerateInMemory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateInMemory" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateInMemory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateInMemory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cac36-187">출력을 메모리에 생성할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-187">Gets or sets a value indicating whether to generate the output in memory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cac36-188">컴파일러에서 출력을 메모리에 생성해야 한다면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-188">
              <see langword="true" /> if the compiler should generate the output in memory; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cac36-189">다음 예제에서는 사용 하 여 <xref:System.CodeDom.Compiler.CompilerParameters> 다양 한 컴파일러 설정 및 옵션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-189">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="cac36-190">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerParameters> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-190">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeDebugInformation">
      <MemberSignature Language="C#" Value="public bool IncludeDebugInformation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeDebugInformation" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeDebugInformation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeDebugInformation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cac36-191">컴파일된 실행 파일에 디버그 정보가 포함될지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-191">Gets or sets a value indicating whether to include debug information in the compiled executable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cac36-192">디버그 정보를 생성해야 한다면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-192">
              <see langword="true" /> if debug information should be generated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkedResources">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection LinkedResources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection LinkedResources" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinkedResources As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringCollection ^ LinkedResources { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cac36-193">현재 소스에서 참조되는 .NET Framework 리소스 파일을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-193">Gets the .NET Framework resource files that are referenced in the current source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cac36-194">소스에서 참조되는 .NET Framework 리소스의 파일 경로가 포함된 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-194">A collection that contains the file paths of .NET Framework resources that are referenced by the source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac36-195">링크 된 리소스 파일에 어셈블리를 어셈블리의 실제 리소스를 포함 하지 않고.NET Framework 리소스를 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-195">Linked resource files allow your assembly to reference .NET Framework resources without embedding the actual resources in the assembly.</span></span> <span data-ttu-id="cac36-196">이 속성을 통해 파일을 참조 하는 비슷합니다는 `/linkresource` 다양 한.NET Framework 컴파일러에서 지 원하는 명령줄 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-196">Referencing files through this property is similar to the `/linkresource` command-line argument supported by many of the .NET Framework compilers.</span></span>  
  
 <span data-ttu-id="cac36-197">이 지원을 위해 호출 하 여 테스트 해야 하므로 일부 컴파일러는.NET Framework 리소스 파일을 지원는 <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> 플래그로 메서드 <xref:System.CodeDom.Compiler.GeneratorSupport.Resources>합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-197">Not all compilers support .NET Framework resource files, so you should test for this support by calling the <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> method with the flag <xref:System.CodeDom.Compiler.GeneratorSupport.Resources>.</span></span>  
  
 <span data-ttu-id="cac36-198">하나 이상의.NET Framework 리소스 파일 경로를 반환 된 추가 <xref:System.Collections.Specialized.StringCollection> 컴파일된 어셈블리에서 리소스에 대 한 링크를 합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-198">Add one or more .NET Framework resource file paths to the returned <xref:System.Collections.Specialized.StringCollection> to create links for the resources in the compiled assembly.</span></span> <span data-ttu-id="cac36-199">컴파일 오류;에서 중복 또는 잘못 된 파일 경로 결과 추가합니다. 각 문자열 유효한.NET Framework 리소스 파일에 고유한 경로 지정 하는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-199">Adding a duplicate or invalid file path results in compilation errors; ensure that each string specifies a unique path to a valid .NET Framework resource file.</span></span>  
  
 <span data-ttu-id="cac36-200">사용 하 여 <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> 특정 문화권에 대 한 지역화 된 위성 어셈블리의.NET Framework 리소스를 참조 합니다; 사용 된 <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A> 컴파일된 어셈블리에 리소스를 포함 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-200">Use <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> to reference .NET Framework resources in satellite assemblies, localized for a particular culture; use the <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A> property to embed the resources into the compiled assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cac36-201">다음 예제에서는 사용 하 여 <xref:System.CodeDom.Compiler.CompilerParameters> 다양 한 컴파일러 설정 및 옵션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-201">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="cac36-202">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerParameters> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-202">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.Win32Resource" />
      </Docs>
    </Member>
    <Member MemberName="MainClass">
      <MemberSignature Language="C#" Value="public string MainClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MainClass" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.MainClass" />
      <MemberSignature Language="VB.NET" Value="Public Property MainClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MainClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cac36-203">기본 클래스의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-203">Gets or sets the name of the main class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cac36-204">기본 클래스의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-204">The name of the main class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac36-205">프로그램에 대 한 진입점을 포함 하는 주 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-205">The main class contains the entry point for the program.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cac36-206">다음 예제에서는 사용 하 여 <xref:System.CodeDom.Compiler.CompilerParameters> 다양 한 컴파일러 설정 및 옵션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-206">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="cac36-207">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerParameters> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-207">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputAssembly">
      <MemberSignature Language="C#" Value="public string OutputAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OutputAssembly" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.OutputAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputAssembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OutputAssembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cac36-208">출력 어셈블리의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-208">Gets or sets the name of the output assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cac36-209">출력 어셈블리의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-209">The name of the output assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cac36-210">다음 예제에서는 사용 하 여 <xref:System.CodeDom.Compiler.CompilerParameters> 다양 한 컴파일러 설정 및 옵션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-210">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="cac36-211">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerParameters> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-211">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedAssemblies As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringCollection ^ ReferencedAssemblies { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cac36-212">현재 프로젝트에서 참조하는 어셈블리를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-212">Gets the assemblies referenced by the current project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cac36-213">컴파일할 소스에서 참조되는 어셈블리 이름을 포함하는 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-213">A collection that contains the assembly names that are referenced by the source to compile.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac36-214">문자열 컬렉션을 구성 하거나 현재 프로젝트에서 참조 어셈블리를 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-214">The string collection should consist of, or include, the assemblies referenced by the current project.</span></span> <span data-ttu-id="cac36-215">반환 된 어셈블리 파일 이름을 추가 <xref:System.Collections.Specialized.StringCollection> 를 어셈블리 매니페스트에 가져온 현재 프로젝트에 어셈블리 유형 정보를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-215">Add assembly file names to the returned <xref:System.Collections.Specialized.StringCollection> to import the assembly manifest and reference the assembly type information in the current project.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cac36-216">다음 예제에서는 사용 하 여 <xref:System.CodeDom.Compiler.CompilerParameters> 다양 한 컴파일러 설정 및 옵션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-216">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="cac36-217">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerParameters> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-217">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
      </Docs>
    </Member>
    <Member MemberName="TempFiles">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.TempFileCollection TempFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.TempFileCollection TempFiles" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.TempFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property TempFiles As TempFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::TempFileCollection ^ TempFiles { System::CodeDom::Compiler::TempFileCollection ^ get(); void set(System::CodeDom::Compiler::TempFileCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.TempFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cac36-218">임시 파일이 포함된 컬렉션을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-218">Gets or sets the collection that contains the temporary files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cac36-219">임시 파일을 포함하는 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-219">A collection that contains the temporary files.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac36-220">컬렉션에서 임시 파일이 유지 되거나 값에 따라 컴파일 작업이 완료 될 때 삭제는 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 컬렉션에서 속성이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-220">The temporary files in the collection are retained or deleted upon the completion of compiler activity based on the value of the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property in the collection.</span></span> <span data-ttu-id="cac36-221"><xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 에서는 컬렉션을 사용 하 여 만든 경우 속성은 설정는 <xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29> 생성자는 `keepFiles` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-221">The <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property is set if the collection is created using the <xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29> constructor with the `keepFiles` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cac36-222">이 클래스는 모든 멤버에 적용 되는 클래스 수준에 상속 요청과 링크 요청을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-222">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="cac36-223">A <xref:System.Security.SecurityException> 직접 실행 호출자 또는 파생된 클래스 중 하나에 완전 신뢰 권한이 없는 경우에 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-223">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span> <span data-ttu-id="cac36-224">보안 요청에 대 한 세부 정보를 참조 하십시오. [링크 요청](~/docs/framework/misc/link-demands.md) 및 [상속 요청](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-224">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cac36-225">다음 예제에서는 사용 하 여 <xref:System.CodeDom.Compiler.CompilerParameters> 다양 한 컴파일러 설정 및 옵션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-225">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="cac36-226">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerParameters> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-226">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="cac36-227">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-227">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="cac36-228">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-228">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TreatWarningsAsErrors">
      <MemberSignature Language="C#" Value="public bool TreatWarningsAsErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TreatWarningsAsErrors" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property TreatWarningsAsErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TreatWarningsAsErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cac36-229">경고를 오류로 간주해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-229">Gets or sets a value indicating whether to treat warnings as errors.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cac36-230">경고를 오류로 간주해야 한다면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-230">
              <see langword="true" /> if warnings should be treated as errors; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cac36-231">다음 예제에서는 사용 하 여 <xref:System.CodeDom.Compiler.CompilerParameters> 다양 한 컴파일러 설정 및 옵션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-231">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="cac36-232">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerParameters> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-232">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserToken">
      <MemberSignature Language="C#" Value="public IntPtr UserToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int UserToken" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.UserToken" />
      <MemberSignature Language="VB.NET" Value="Public Property UserToken As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr UserToken { IntPtr get(); void set(IntPtr value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cac36-233">컴파일러 프로세스를 만들 때 사용할 사용자 토큰을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-233">Gets or sets the user token to use when creating the compiler process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cac36-234">사용할 사용자 토큰입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-234">The user token to use.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WarningLevel">
      <MemberSignature Language="C#" Value="public int WarningLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WarningLevel" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.WarningLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property WarningLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WarningLevel { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cac36-235">컴파일러에서 컴파일이 중단되는 경고 수준을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-235">Gets or sets the warning level at which the compiler aborts compilation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cac36-236">컴파일러에서 컴파일이 중단되는 경고 수준입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-236">The warning level at which the compiler aborts compilation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cac36-237">다음 예제에서는 사용 하 여 <xref:System.CodeDom.Compiler.CompilerParameters> 다양 한 컴파일러 설정 및 옵션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-237">The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options.</span></span> <span data-ttu-id="cac36-238">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerParameters> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-238">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.</span></span>  
  
 [!code-cpp[CompilerParametersExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerParametersExample/CPP/source.cpp#2)]
 [!code-csharp[CompilerParametersExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerParametersExample/CS/source.cs#2)]
 [!code-vb[CompilerParametersExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerParametersExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win32Resource">
      <MemberSignature Language="C#" Value="public string Win32Resource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Win32Resource" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerParameters.Win32Resource" />
      <MemberSignature Language="VB.NET" Value="Public Property Win32Resource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Win32Resource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cac36-239">컴파일된 어셈블리에 연결할 Win32 리소스 파일의 파일 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-239">Gets or sets the file name of a Win32 resource file to link into the compiled assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cac36-240">컴파일된 어셈블리에 연결할 Win32 리소스 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cac36-240">A Win32 resource file that will be linked into the compiled assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac36-241">이 속성을 통해 파일에 연결 하는 비슷합니다는 `/winres` 및 `/winresource` 다양 한.NET Framework 컴파일러에서 지 원하는 명령줄 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-241">Linking files through this property is similar to the `/winres` and `/winresource` command-line arguments supported by many of the .NET Framework compilers.</span></span>  
  
 <span data-ttu-id="cac36-242">사용 하 여 <xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A> 어셈블리에 Win32 리소스 파일을 컴파일할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-242">Use <xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A> to compile a Win32 resource file into the assembly.</span></span> <span data-ttu-id="cac36-243">사용 하 여 <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A> 또는 <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> .NET Framework 리소스 파일에 대해 컴파일할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-243">Use <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A> or <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> to compile with .NET Framework resource files.</span></span>  
  
 <span data-ttu-id="cac36-244">일부 컴파일러는 Win32 리소스 파일, 지원 리소스 파일을 호출 하 여 연결 하기 전에이 지원에 대 한 코드 생성기를 테스트 해야 하므로 <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> 플래그로 메서드 <xref:System.CodeDom.Compiler.GeneratorSupport.Win32Resources>합니다.</span><span class="sxs-lookup"><span data-stu-id="cac36-244">Not all compilers support Win32 resource files, so you should test a code generator for this support before linking a resource file by calling the <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> method with the flag <xref:System.CodeDom.Compiler.GeneratorSupport.Win32Resources>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources" />
      </Docs>
    </Member>
  </Members>
</Type>