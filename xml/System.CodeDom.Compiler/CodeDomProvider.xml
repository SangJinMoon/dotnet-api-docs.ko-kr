<Type Name="CodeDomProvider" FullName="System.CodeDom.Compiler.CodeDomProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76e1c10af9bc52b1c139e5e4706c9601f70ed474" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
    <Meta Name="ms.locfileid" Value="31781354" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CodeDomProvider : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomProvider extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomProvider&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomProvider abstract : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9aa6b-101">
        <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 구현을 위한 기본 클래스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9aa6b-101">Provides a base class for <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations.</span>
      </span>
      <span data-ttu-id="9aa6b-102">이 클래스는 추상 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9aa6b-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aa6b-103">A <xref:System.CodeDom.Compiler.CodeDomProvider> 코드 생성기 및 코드 컴파일러의 인스턴스를 검색 하 고 만드는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-103">A <xref:System.CodeDom.Compiler.CodeDomProvider> can be used to create and retrieve instances of code generators and code compilers.</span></span> <span data-ttu-id="9aa6b-104">코드 생성기를 사용하여 코드를 특정 언어로 생성하고, 코드 컴파일러를 사용하여 코드를 어셈블리로 컴파일할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-104">Code generators can be used to generate code in a particular language, and code compilers can be used to compile code into assemblies.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-105">에 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], 만든 코드 생성기에서 사용할 수 있는 메서드 및 코드 컴파일러는 코드 공급자에서 직접 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-105">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the methods made available in the code generator and code compiler are available directly from the code provider.</span></span> <span data-ttu-id="9aa6b-106">호출할 필요가 없습니다 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 또는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> 에 액세스 하려면 메서드와 이러한 메서드가 사용 되지 않음으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-106">You do not need to call <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> or <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> to access the methods, and those methods are marked as obsolete.</span></span> <span data-ttu-id="9aa6b-107">이 새 코드 공급자 구현을 뿐만 아니라 기존에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-107">This applies to preexisting as well as new code provider implementations.</span></span>  
  
 <span data-ttu-id="9aa6b-108">A <xref:System.CodeDom.Compiler.CodeDomProvider> 구현 일반적으로 코드 생성 및 코드 컴파일에서는 인터페이스 제공 코드를 생성 하 고 단일 프로그래밍 언어에 대 한 컴파일을 관리 하기 위한 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-108">A <xref:System.CodeDom.Compiler.CodeDomProvider> implementation typically provides code generation and/or code compilation interfaces for generating code and managing compilation for a single programming language.</span></span> <span data-ttu-id="9aa6b-109">지 원하는 여러 가지 언어 <xref:System.CodeDom.Compiler.CodeDomProvider> 구현을 함께 제공 되는 [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-109">Several languages are supported by <xref:System.CodeDom.Compiler.CodeDomProvider> implementations that ship with the [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)].</span></span> <span data-ttu-id="9aa6b-110">이러한 언어는 C#, Visual Basic, c + + 및 JScript를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-110">These languages include C#, Visual Basic, C++, and JScript.</span></span> <span data-ttu-id="9aa6b-111">개발자 또는 컴파일러 공급 업체 구현할 수 있습니다는 <xref:System.CodeDom.Compiler.ICodeGenerator> 및 <xref:System.CodeDom.Compiler.ICodeCompiler> 인터페이스를 만들고 제공는 <xref:System.CodeDom.Compiler.CodeDomProvider> 다른 프로그래밍 언어에 CodeDOM 지원을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-111">Developers or compiler vendors can implement the <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> interfaces and provide a <xref:System.CodeDom.Compiler.CodeDomProvider> that extends CodeDOM support to other programming languages.</span></span>  
  
 <span data-ttu-id="9aa6b-112">[ &lt;system.codedom&gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 컴퓨터 구성에서 파일 (Machine.config) 추가대한구성설정을추가하는개발자및컴파일러공급업체에대한메커니즘을제공<xref:System.CodeDom.Compiler.CodeDomProvider>구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-112">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) provides a mechanism for developers and compiler vendors to add configuration settings for additional <xref:System.CodeDom.Compiler.CodeDomProvider> implementations.</span></span>  
  
 <span data-ttu-id="9aa6b-113"><xref:System.CodeDom.Compiler.CodeDomProvider> 검색 하 고 열거할 정적 메서드를 제공 하는 클래스는 <xref:System.CodeDom.Compiler.CodeDomProvider> 컴퓨터에서 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-113">The <xref:System.CodeDom.Compiler.CodeDomProvider> class provides static methods to discover and enumerate the <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer.</span></span> <span data-ttu-id="9aa6b-114"><xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> 메서드 모두에 대 한 설정을 반환 <xref:System.CodeDom.Compiler.CodeDomProvider> 컴퓨터에서 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-114">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method returns the settings for all <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer.</span></span> <span data-ttu-id="9aa6b-115"><xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> 메서드는 특정 설정을 반환 <xref:System.CodeDom.Compiler.CodeDomProvider> 프로그래밍 언어 이름을 기반으로 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-115">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method returns the settings for a specific <xref:System.CodeDom.Compiler.CodeDomProvider> implementation, based on the programming language name.</span></span> <span data-ttu-id="9aa6b-116"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 의 인스턴스를 반환 하는 메서드는 <xref:System.CodeDom.Compiler.CodeDomProvider> 특정 언어에 대 한 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-116">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns an instance of a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a specific language.</span></span>  
  
 <span data-ttu-id="9aa6b-117">언어 공급자 설정 구성 파일에 대 한 자세한 내용은 참조 하십시오. [컴파일러 및 언어 공급자 설정 스키마](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8)합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-117">For more details on language provider settings in the configuration file, see [Compiler and Language Provider Settings Schema](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-118">이 클래스는 클래스 수준에 상속 요청과 링크 요청을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-118">This class makes a link demand and an inheritance demand at the class level.</span></span> <span data-ttu-id="9aa6b-119">A <xref:System.Security.SecurityException> 직접 실행 호출자 또는 파생된 클래스 중 하나에 완전 신뢰 권한이 없는 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-119">A <xref:System.Security.SecurityException> is thrown if either the immediate caller or the derived class does not have full trust permission.</span></span> <span data-ttu-id="9aa6b-120">보안 요청에 대 한 세부 정보를 참조 하십시오. [링크 요청](~/docs/framework/misc/link-demands.md) 및 [상속 요청](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-120">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aa6b-121">다음 예제 프로그램에서 생성 하 고 "Hello World"를 사용 하 여 인쇄 하는 프로그램의 CodeDOM 모델을 기반으로 하는 소스 코드를 컴파일할 수는 <xref:System.Console> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-121">The following example program can generate and compile source code based on a CodeDOM model of a program that prints "Hello World" using the <xref:System.Console> class.</span></span> <span data-ttu-id="9aa6b-122">Windows Forms 사용자 인터페이스 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-122">A Windows Forms user interface is provided.</span></span> <span data-ttu-id="9aa6b-123">대상 프로그래밍 언어에서 여러 개의 선택 영역을 선택할 수 있는: C#, Visual Basic 및 JScript입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-123">The user can select the target programming language from several selections: C#, Visual Basic, and JScript.</span></span>  
  
 [!code-cpp[CodeDomExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#1)]
 [!code-csharp[CodeDomExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#1)]
 [!code-vb[CodeDomExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <span data-ttu-id="9aa6b-124">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9aa6b-124">for full trust for the immediate caller.</span>
      </span>
      <span data-ttu-id="9aa6b-125">이 클래스는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9aa6b-125">This class cannot be used by partially trusted code.</span>
      </span>
    </permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="9aa6b-126">상속자에 대 한 완전 신뢰 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9aa6b-126">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="9aa6b-127">부분적으로 신뢰할 수 있는 코드에서이 클래스는 상속 될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9aa6b-127">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="9aa6b-128">.NET Framework 버전 1.0 및 1.1에서는 코드 공급자의 구현을 구성 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, <see cref="T:System.CodeDom.Compiler.ICodeParser" />, 및 <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />합니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="9aa6b-128">In the .NET Framework versions 1.0 and 1.1, code providers consist of implementations of <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, <see cref="T:System.CodeDom.Compiler.ICodeParser" />, and <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />.</span>
        </span>
        <span data-ttu-id="9aa6b-129">에 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />, <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />, 및 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> 메서드는 사용 되지의 메서드와 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 및 <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> 에서 직접 사용할 수는 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 클래스입니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="9aa6b-129">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />, <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />, and <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> methods are obsolete, and the methods of <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> and <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> are directly available in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class.</span>
        </span>
        <span data-ttu-id="9aa6b-130">코드 공급자 구현에서 이러한 메서드를 재정의 하 고 기본 메서드를 호출 하지 해야 합니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="9aa6b-130">You should override those methods in your code provider implementation and not call the base methods.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
    <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
    <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
    <altmember cref="T:Microsoft.JScript.JScriptCodeProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeDomProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeDomProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9aa6b-131">
            <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-131">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="9aa6b-132">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-132">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9aa6b-133">이 클래스는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-133">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromDom">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom (System.CodeDom.Compiler.CompilerParameters options, params System.CodeDom.CodeCompileUnit[] compilationUnits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit[] compilationUnits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromDom (options As CompilerParameters, ParamArray compilationUnits As CodeCompileUnit()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromDom(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::CodeDom::CodeCompileUnit ^&gt; ^ compilationUnits);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="compilationUnits" Type="System.CodeDom.CodeCompileUnit[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="9aa6b-134">컴파일 설정을 나타내는 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-134">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation.</span>
          </span>
        </param>
        <param name="compilationUnits">
          <span data-ttu-id="9aa6b-135">컴파일할 코드를 나타내는 <see cref="T:System.CodeDom.CodeCompileUnit" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-135">An array of type <see cref="T:System.CodeDom.CodeCompileUnit" /> that indicates the code to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-136">지정된 컴파일러 설정을 사용하여 <see cref="N:System.CodeDom" /> 개체의 지정된 배열에 포함된 <see cref="T:System.CodeDom.CodeCompileUnit" /> 트리에 따라 어셈블리를 컴파일합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-136">Compiles an assembly based on the <see cref="N:System.CodeDom" /> trees contained in the specified array of <see cref="T:System.CodeDom.CodeCompileUnit" /> objects, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-137">컴파일 결과를 나타내는 <see cref="T:System.CodeDom.Compiler.CompilerResults" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-137">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of the compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-138">.NET Framework 버전 1.0 및 1.1에서는이 방법을 통해 제공 됩니다는 <xref:System.CodeDom.Compiler.ICodeCompiler> 구현에서 반환 하는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> 공급자의입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-138">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="9aa6b-139">버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-139">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="9aa6b-140">코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeCompiler> 구현을 기본 클래스에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-140">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9aa6b-141">이 메서드와 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> 메서드가 파생 클래스에서 재정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-141">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9aa6b-142">이 메서드를 재정의 하는 경우에 기본 클래스의 해당 메서드를 호출 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-142">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="9aa6b-143">기본 클래스 메서드는 사용 되지 않는 사용 하 여 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> 코드 컴파일러를 사용 하는 기존 공급자와의 호환성에 대 한 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-143">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers.</span>
            </span>
            <span data-ttu-id="9aa6b-144">기본 클래스 메서드 다음 해당 하는 메서드를 호출의 <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> 이 기능을 수행 하려면 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-144">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="9aa6b-145">받아볼 수는 <see cref="T:System.NotImplementedException" /> 코드 컴파일러를 사용 하지 않는 코드 공급자에서 기본 클래스 메서드를 호출 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-145">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromFile">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile (System.CodeDom.Compiler.CompilerParameters options, params string[] fileNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile(class System.CodeDom.Compiler.CompilerParameters options, string[] fileNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromFile (options As CompilerParameters, ParamArray fileNames As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromFile(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ fileNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="fileNames" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="9aa6b-146">컴파일 설정을 나타내는 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-146">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation.</span>
          </span>
        </param>
        <param name="fileNames">
          <span data-ttu-id="9aa6b-147">컴파일할 파일 이름의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-147">An array of the names of the files to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-148">지정된 컴파일러 설정을 사용하여 지정된 파일에 포함된 소스 코드에서 어셈블리를 컴파일합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-148">Compiles an assembly from the source code contained in the specified files, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-149">컴파일 결과를 나타내는 <see cref="T:System.CodeDom.Compiler.CompilerResults" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-149">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-150">.NET Framework 버전 1.0 및 1.1에서는이 방법을 통해 제공 됩니다는 <xref:System.CodeDom.Compiler.ICodeCompiler> 구현에서 반환 하는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> 공급자의입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-150">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="9aa6b-151">버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-151">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="9aa6b-152">코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeCompiler> 구현을 기본 클래스에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-152">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9aa6b-153">이 메서드와 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> 메서드가 파생 클래스에서 재정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-153">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9aa6b-154">이 메서드를 재정의 하는 경우에 기본 클래스의 해당 메서드를 호출 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-154">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="9aa6b-155">기본 클래스 메서드는 사용 되지 않는 사용 하 여 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> 코드 컴파일러를 사용 하는 기존 공급자와의 호환성에 대 한 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-155">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers.</span>
            </span>
            <span data-ttu-id="9aa6b-156">기본 클래스 메서드 다음 해당 하는 메서드를 호출의 <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> 이 기능을 수행 하려면 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-156">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="9aa6b-157">받아볼 수는 <see cref="T:System.NotImplementedException" /> 코드 컴파일러를 사용 하지 않는 코드 공급자에서 기본 클래스 메서드를 호출 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-157">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromSource">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource (System.CodeDom.Compiler.CompilerParameters options, params string[] sources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource(class System.CodeDom.Compiler.CompilerParameters options, string[] sources) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromSource (options As CompilerParameters, ParamArray sources As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromSource(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ sources);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="sources" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="9aa6b-158">이 컴파일에 대한 컴파일러 설정을 나타내는 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-158">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler settings for this compilation.</span>
          </span>
        </param>
        <param name="sources">
          <span data-ttu-id="9aa6b-159">컴파일할 소스 코드 문자열의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-159">An array of source code strings to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-160">지정된 컴파일러 설정을 사용하여 소스 코드가 포함된 지정된 문자열 배열에서 어셈블리를 컴파일합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-160">Compiles an assembly from the specified array of strings containing source code, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-161">컴파일 결과를 나타내는 <see cref="T:System.CodeDom.Compiler.CompilerResults" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-161">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-162">.NET Framework 버전 1.0 및 1.1에서는이 방법을 통해 제공 됩니다는 <xref:System.CodeDom.Compiler.ICodeCompiler> 구현에서 반환 하는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> 공급자의입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-162">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="9aa6b-163">버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-163">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="9aa6b-164">코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeCompiler> 구현을 기본 클래스에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-164">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9aa6b-165">이 메서드와 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> 메서드가 파생 클래스에서 재정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-165">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9aa6b-166">이 메서드를 재정의 하는 경우에 기본 클래스의 해당 메서드를 호출 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-166">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="9aa6b-167">기본 클래스 메서드는 사용 되지 않는 사용 하 여 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> 코드 컴파일러를 사용 하는 기존 공급자와의 호환성에 대 한 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-167">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers.</span>
            </span>
            <span data-ttu-id="9aa6b-168">기본 클래스 메서드 다음 해당 하는 메서드를 호출의 <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> 이 기능을 수행 하려면 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-168">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="9aa6b-169">받아볼 수는 <see cref="T:System.NotImplementedException" /> 코드 컴파일러를 사용 하지 않는 코드 공급자에서 기본 클래스 메서드를 호출 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-169">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CreateCompiler">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeCompiler CreateCompiler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCompiler () As ICodeCompiler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeCompiler ^ CreateCompiler();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeCompiler is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeCompiler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9aa6b-170">파생 클래스에서 재정의될 때 새 코드 컴파일러를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-170">When overridden in a derived class, creates a new code compiler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-171">
            <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> 기준 소스 코드 표현을 컴파일하는 데 사용할 수 있는 <see cref="N:System.CodeDom" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-171">An <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> that can be used for compilation of <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aa6b-172">이 메서드는에서 사용 되지 않는 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-172">This method is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="9aa6b-173">메서드 대신 호출 하는 것은 <xref:System.CodeDom.Compiler.ICodeCompiler> 코드 공급자에서 직접 사용할 수 있는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-173">The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeCompiler> methods that are directly available in the code provider.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9aa6b-174">에 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]를 구현 해야는 <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> 의 멤버는 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 클래스 선언 하 고 throw는 <see cref="T:System.NotSupportedException" /> 이 메서드가 호출 될 때입니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-174">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], you should implement the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> members in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class and throw a <see cref="T:System.NotSupportedException" /> when this method is called.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateEscapedIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateEscapedIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateEscapedIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEscapedIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateEscapedIdentifier(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9aa6b-175">이스케이프된 식별자를 만들 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-175">The string for which to create an escaped identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-176">지정된 값의 이스케이프된 식별자를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-176">Creates an escaped identifier for the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-177">해당 값의 이스케이프된 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-177">The escaped identifier for the value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aa6b-178"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A> 테스트 예약 된 식별자 충돌 하는지 여부 또는 언어 키워드 및 그렇다면 언어별 이스케이프 코드 서식을 사용 하 여 동일한 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-178"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A> tests whether the identifier conflicts with any reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting.</span></span> <span data-ttu-id="9aa6b-179">이스케이프 된 식별자 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-179">This is referred to an escaped identifier.</span></span> <span data-ttu-id="9aa6b-180">이스케이프 된 식별자를 포함 하는 동일한 `value` 되지만 키워드에서 식별자를 구분 하기 위해 추가 이스케이프 코드 서식 지정 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-180">The escaped identifier contains the same `value` but has escape-code formatting added to differentiate the identifier from the keyword.</span></span> <span data-ttu-id="9aa6b-181">두 가지 구현 예는 앞의 `value` 으로 "@" 붙이거나는 `value` 와 "[" 및 "]"입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-181">Two implementation examples are preceding the `value` with "@" or bracketing the `value` with "[" and "]".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-182">.NET Framework 버전 1.0 및 1.1에서는이 방법을 통해 제공 됩니다는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 하는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-182">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="9aa6b-183">버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-183">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="9aa6b-184">코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현을 기본 클래스에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-184">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9aa6b-185">이 메서드와 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드가 파생 클래스에서 재정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-185">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9aa6b-186">이 메서드를 재정의 하는 경우에 기본 클래스의 해당 메서드를 호출 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-186">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="9aa6b-187">기본 클래스 메서드는 사용 되지 않는 사용 하 여 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 코드 생성기를 사용 하는 기존 공급자와의 호환성에 대 한 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-187">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="9aa6b-188">기본 클래스 메서드 다음 해당 하는 메서드를 호출의 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 이 기능을 수행 하려면 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-188">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="9aa6b-189">받아볼 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자에서 기본 클래스 메서드를 호출 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-189">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateGenerator">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9aa6b-190">파생 클래스에서 재정의될 때 새 코드 생성기를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-190">When overridden in a derived class, creates a new code generator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateGenerator () As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeGenerator is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9aa6b-191">파생 클래스에서 재정의될 때 새 코드 생성기를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-191">When overridden in a derived class, creates a new code generator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-192">
            <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 기준 소스 코드 표현을 생성하는 데 사용할 수 있는 <see cref="N:System.CodeDom" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-192">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aa6b-193">이 메서드는에서 사용 되지 않는 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-193">This method is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="9aa6b-194">메서드 대신 호출 하는 것은 <xref:System.CodeDom.Compiler.ICodeGenerator> 에서 직접 사용할 수 있는 메서드는 <xref:System.CodeDom.Compiler.CodeDomProvider> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-194">The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeGenerator> methods that are directly available in the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9aa6b-195">에 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]를 구현 해야는 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 의 멤버는 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 클래스 선언 하 고 throw는 <see cref="T:System.NotSupportedException" /> 이 메서드가 호출 될 때입니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-195">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], you should implement the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> members in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class and throw a <see cref="T:System.NotSupportedException" /> when this method is called.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (output As TextWriter) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="9aa6b-196">출력에 사용할 <see cref="T:System.IO.TextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-196">A <see cref="T:System.IO.TextWriter" /> to use to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-197">파생 클래스에서 재정의될 때 지정된 <see cref="T:System.IO.TextWriter" />를 출력에 사용하여 새 코드 생성기를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-197">When overridden in a derived class, creates a new code generator using the specified <see cref="T:System.IO.TextWriter" /> for output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-198">
            <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 기준 소스 코드 표현을 생성하는 데 사용할 수 있는 <see cref="N:System.CodeDom" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-198">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aa6b-199">이 메서드를 사용 하 여 지정 된 <xref:System.IO.TextWriter> 출력에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-199">This method uses the specified <xref:System.IO.TextWriter> for output.</span></span> <span data-ttu-id="9aa6b-200">이 메서드는 소스 코드를 증분 업데이트 하는 더 많은 최적화 된 코드 생성을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-200">This method supports more optimized code generation that incrementally updates the source code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-201">기본 클래스 구현 호출은 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 에서 사용 되지 않는 메서드는 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 남습니다는 <xref:System.NotSupportedException> 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 개체가 반환 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-201">The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (fileName As String) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="9aa6b-202">출력할 파일 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-202">The file name to output to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-203">파생 클래스에서 재정의될 때 지정된 파일 이름을 출력으로 사용하여 새 코드 생성기를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-203">When overridden in a derived class, creates a new code generator using the specified file name for output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-204">
            <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 기준 소스 코드 표현을 생성하는 데 사용할 수 있는 <see cref="N:System.CodeDom" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-204">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aa6b-205">이 메서드는 출력에 대 한 지정 된 파일 이름을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-205">This method uses the specified file name for output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-206">기본 클래스 구현 호출은 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 에서 사용 되지 않는 메서드는 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 남습니다는 <xref:System.NotSupportedException> 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 개체가 반환 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-206">The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParser">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeParser CreateParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeParser CreateParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParser () As ICodeParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeParser ^ CreateParser();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeParser is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9aa6b-207">파생 클래스에서 재정의될 때 새 코드 파서를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-207">When overridden in a derived class, creates a new code parser.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-208">소스 코드를 구문 분석하는 데 사용할 수 있는 <see cref="T:System.CodeDom.Compiler.ICodeParser" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-208">An <see cref="T:System.CodeDom.Compiler.ICodeParser" /> that can be used to parse source code.</span>
          </span>
          <span data-ttu-id="9aa6b-209">기본 구현은 항상 <see langword="null" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-209">The base implementation always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProvider">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9aa6b-210">지정된 언어에 대한 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 인스턴스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-210">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="9aa6b-211">언어 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-211">The language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-212">지정된 언어에 대한 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 인스턴스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-212">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-213">지정된 언어 이름에 대해 구현된 CodeDOM 공급자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-213">A CodeDOM provider that is implemented for the specified language name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-214">이 메서드는 여러 공급자 중 하나를 선택적으로 사용할 수 있는 응용 프로그램에서 코드 공급자의 인스턴스를 만드는 데 가장 일반적으로.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-214">This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</span></span> <span data-ttu-id="9aa6b-215"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 런타임 시 인스턴스화할 하려는 코드 공급자를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-215"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> allows you to specify at run time the code provider you wish to instantiate.</span></span> <span data-ttu-id="9aa6b-216">사용할 수 있는 코드 공급자가 디자인 타임에 알고 있는 경우 해당 코드 공급자의 인스턴스를 만들고 대신 해야 사용는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-216">If you know at design time which code provider is to be used, you should create an instance of that code provider rather than use the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method.</span></span>  
  
 <span data-ttu-id="9aa6b-217"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 메서드가 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider> 특정 언어 이름에 대 한 인스턴스; 호출 하는 것과 비슷합니다는 <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> 메서드 언어 공급자 형식 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-217">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns a <xref:System.CodeDom.Compiler.CodeDomProvider> instance for a specific language name; it is similar to calling the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method with the language provider type.</span></span> <span data-ttu-id="9aa6b-218">사용 하 여 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 동적 찾을 언어 이름에 대해 구성 된 공급자 구현 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-218">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> when you want to dynamically find a configured provider implementation for a language name.</span></span>  
  
 <span data-ttu-id="9aa6b-219">둘 이상의 공급자 구현을 언어 이름에 대해 구성 된 경우 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 마지막 일치 하는 구성 요소에 대 한 공급자 인스턴스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-219">If more than one provider implementation is configured for the language name, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> returns a provider instance for the last matching configuration element.</span></span>  
  
 <span data-ttu-id="9aa6b-220">사용 하 여 <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> 메서드 오버 로드는 특정 언어 공급자 구현 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-220">Use the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> method overload when you want a specific language provider implementation.</span></span> <span data-ttu-id="9aa6b-221">예를 들어 사용는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 를 지 원하는 언어 이름 공급자 인스턴스를 가져오는 메서드입니다. `"CSharp"`; 사용 하 여는 <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> 메서드 오버 로드를 위해 특별히 공급자 인스턴스를 가져옵니다는 <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-221">For example, use the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method to get a provider instance that supports the language name `"CSharp"`; use the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> method overload to get a provider instance specifically for the <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="9aa6b-222">사용 해야는 [\], CultureInfo, 개체\<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D% 2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%29?displayProperty=nameWithType >는 언어에 대 한 여러 코드 공급자 있고를 특정 코드 공급자를 인스턴스화하려면 메서드.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-222">You should use the [\], CultureInfo, Object\<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method if you have multiple code providers for a language and you desire to instantiate a specific code provider.</span></span>  
  
 <span data-ttu-id="9aa6b-223"><xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> 메서드는 공급자를 하나 이상 구현 특정 언어를 지원 하는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-223">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language.</span></span> <span data-ttu-id="9aa6b-224">사용 하 여 언어 이름을 확인할 수 있습니다. <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> 전달 하기 전에 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-224">You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A>.</span></span> <span data-ttu-id="9aa6b-225">지원 되지 않는 언어 이름을 전달 하는 경우 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 는 <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-225">If you pass an unsupported language name to <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> is thrown.</span></span>  
  
 <span data-ttu-id="9aa6b-226"><xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> 메서드를 사용 하 여 모든 확인 수 <xref:System.CodeDom.Compiler.CodeDomProvider> 구현 개발자 및에서 식별 되는 컴파일러 공급 업체에서 제공 하는 추가 구현을 비롯 하 여 컴퓨터에는 [ &lt;system.codedom &gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 컴퓨터 구성 파일 (Machine.config)에서.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-226">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method can be used to determine all <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer, including additional implementations provided by developers and compiler vendors that are identified in the [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config).</span></span>  
  
 <span data-ttu-id="9aa6b-227"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 의 인스턴스를 반환 하는 메서드는 <xref:System.CodeDom.Compiler.CodeDomProvider> 특정 언어에 대 한 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-227">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns an instance of a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a specific language.</span></span>  
  
 <span data-ttu-id="9aa6b-228">언어 이름은 대/소문자를 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-228">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aa6b-229">다음 코드 예제에서는 확인 된 <xref:System.CodeDom.Compiler.CodeDomProvider> 언어 공급자에 대 한 구성된 설정 표시 및 입력된 언어에 대 한 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-229">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="9aa6b-230">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-230">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="9aa6b-231">
            <paramref name="language" />에 대한 공급자가 이 컴퓨터에 구성되어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-231">The <paramref name="language" /> does not have a configured provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9aa6b-232">
            <paramref name="language" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-232">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9aa6b-233">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-233">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="9aa6b-234">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-234">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9aa6b-235">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-235">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language, System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String, providerOptions As IDictionary(Of String, String)) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="9aa6b-236">언어 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-236">The language name.</span>
          </span>
        </param>
        <param name="providerOptions">
          <span data-ttu-id="9aa6b-237">구성 파일의 공급자 옵션 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-237">A collection of provider options from the configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-238">지정된 언어와 공급자 옵션에 대한 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 인스턴스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-238">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language and provider options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-239">지정된 언어 이름과 옵션에 대해 구현된 CodeDOM 공급자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-239">A CodeDOM provider that is implemented for the specified language name and options.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-240">이 메서드는 여러 공급자 중 하나를 선택적으로 사용할 수 있는 응용 프로그램에서 코드 공급자의 인스턴스를 만드는 데 가장 일반적으로.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-240">This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</span></span> <span data-ttu-id="9aa6b-241"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> 런타임 시 코드 공급자를 인스턴스화하 려의 버전을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-241"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> enables you to specify at run time the version of the code provider you want to instantiate.</span></span> <span data-ttu-id="9aa6b-242">사용 하는 대신 해당 코드 공급자의 인스턴스를 사용할 수 있는 코드 공급자가 디자인 타임에 알고 있는 경우 만들어야는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-242">If you know at design time which code provider is to be used, you should create an instance of that code provider instead of using the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> method.</span></span>  
  
 <span data-ttu-id="9aa6b-243">사용 하 여 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> 특정 언어 및 옵션에 대 한 구성된 된 공급자 구현을 동적으로 찾으려고 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-243">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> when you want to dynamically find a configured provider implementation for a specific language and options.</span></span> <span data-ttu-id="9aa6b-244">언어 이름은 대/소문자를 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-244">Language names are case-insensitive.</span></span> <span data-ttu-id="9aa6b-245">지원 되는 공급자 옵션에 대 한 정보에 대 한 특정 CodeDOM 공급자 설명서를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-245">For information about supported provider options, see the specific CodeDOM provider documentation.</span></span>  
  
 <span data-ttu-id="9aa6b-246">유효성을 검사 하는 공급자 및 둘 이상의 공급자 구현을 언어 이름에 대해 구성 된 경우 공급자를 호출 하는 방법에 대 한 내용은의 설명 섹션을 참조 하십시오.는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-246">For information about validating a provider and calling a provider if more than one provider implementation is configured for the language name, see the Remarks section of the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aa6b-247">사용 하 여 공급자의 인스턴스를 만드는 방법을 보여 주는 다음 예제는 `providerOptions` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-247">The following example shows how to create an instance of a provider by using the `providerOptions` parameter.</span></span>  
  
 [!code-csharp[CodeDomProvider.ProviderOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR/codedomprovider.provideroptions/cs/program.cs#1)]
 [!code-vb[CodeDomProvider.ProviderOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/codedomprovider.provideroptions/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateValidIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateValidIdentifier(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9aa6b-248">유효한 식별자를 생성할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-248">The string for which to generate a valid identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-249">지정된 값의 유효한 식별자를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-249">Creates a valid identifier for the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-250">지정된 값의 유효한 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-250">A valid identifier for the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aa6b-251"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A> 예약 된 식별자 충돌 하는지 여부를 테스트 하거나 언어 키워드 경우, 올바른 식별자를 반환 하려고 이름을 지정 하는 충돌 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-251"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A> tests whether the identifier conflicts with reserved or language keywords, and if so, attempts to return a valid identifier name that does not conflict.</span></span> <span data-ttu-id="9aa6b-252">일반적으로 반환 된 식별자만 조금 수정 되어; 키워드에서 식별자를 구분 합니다. 예를 들어 이름 앞에 밑줄 ("_") 문자 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-252">Usually the returned identifier is only slightly modified to differentiate the identifier from the keyword; for example, the name might be preceded by the underscore ("_") character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-253">.NET Framework 버전 1.0 및 1.1에서는이 방법을 통해 제공 됩니다는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 하는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-253">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="9aa6b-254">버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-254">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="9aa6b-255">코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현을 기본 클래스에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-255">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9aa6b-256">이 메서드와 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드가 파생 클래스에서 재정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-256">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9aa6b-257">이 메서드를 재정의 하는 경우에 기본 클래스의 해당 메서드를 호출 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-257">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="9aa6b-258">기본 클래스 메서드는 사용 되지 않는 사용 하 여 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 코드 생성기를 사용 하는 기존 공급자와의 호환성에 대 한 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-258">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="9aa6b-259">기본 클래스 메서드 다음 해당 하는 메서드를 호출의 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 이 기능을 수행 하려면 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-259">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="9aa6b-260">받아볼 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자에서 기본 클래스 메서드를 호출 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-260">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FileExtension">
      <MemberSignature Language="C#" Value="public virtual string FileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtension" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FileExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FileExtension { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9aa6b-261">현재 언어의 소스 코드 파일에 사용할 기본 확장명을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-261">Gets the default file name extension to use for source code files in the current language.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9aa6b-262">현재 언어의 소스 코드 확장명에 해당하는 확장명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-262">A file name extension corresponding to the extension of the source files of the current language.</span>
          </span>
          <span data-ttu-id="9aa6b-263">기본 구현은 항상 <see cref="F:System.String.Empty" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-263">The base implementation always returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aa6b-264">이 속성은 코드 생성기 및 코드 컴파일러에서 생성 하거나 사용 하는 파일 확장명을 나타내기 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-264">This property is used by code generators and code compilers to indicate what file extensions should be generated or used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aa6b-265">다음 코드 예제에서는의 인스턴스를 만듭니다. <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-265">The following code example creates an instance of <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9aa6b-266">이 예제에서는 공급자 이름, 새 공급자 인스턴스에 대 한 해시 코드와 기본 파일 이름 확장명을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-266">The example displays the provider name, hash code and default file name extension for the new provider instance.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#3)]
 [!code-csharp[CodeDom_CompilerInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#3)]
 [!code-vb[CodeDom_CompilerInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromCompileUnit">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit compileUnit, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromCompileUnit(class System.CodeDom.CodeCompileUnit compileUnit, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromCompileUnit (compileUnit As CodeCompileUnit, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromCompileUnit(System::CodeDom::CodeCompileUnit ^ compileUnit, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="compileUnit">
          <span data-ttu-id="9aa6b-267">코드를 생성할 <see cref="T:System.CodeDom.CodeCompileUnit" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-267">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="9aa6b-268">출력 코드가 전달될 <see cref="T:System.IO.TextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-268">The <see cref="T:System.IO.TextWriter" /> to which the output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9aa6b-269">코드를 생성하기 위해 사용할 옵션을 나타내는 <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-269">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-270">지정된 CodeDOM(코드 문서 개체 모델) 컴파일 단위에 대한 코드를 생성한 다음 지정된 옵션을 사용하여 지정된 텍스트 작성기에 해당 코드를 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-270">Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-271">.NET Framework 버전 1.0 및 1.1에서는이 방법을 통해 제공 됩니다는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 하는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-271">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="9aa6b-272">버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-272">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="9aa6b-273">코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현을 기본 클래스에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-273">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aa6b-274">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A> 에서 "Hello World" 응용 프로그램에 대 한 코드를 생성 하는 <xref:System.CodeDom.CodeCompileUnit>합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-274">The following code example shows the use of the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A> method to generate code for a "Hello World" application from a <xref:System.CodeDom.CodeCompileUnit>.</span></span> <span data-ttu-id="9aa6b-275">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CodeDomProvider> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-275">This example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 [!code-cpp[CodeDomExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#3)]
 [!code-csharp[CodeDomExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#3)]
 [!code-vb[CodeDomExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9aa6b-276">이 메서드와 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드가 파생 클래스에서 재정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-276">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9aa6b-277">이 메서드를 재정의 하는 경우에 기본 클래스의 해당 메서드를 호출 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-277">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="9aa6b-278">기본 클래스 메서드는 사용 되지 않는 사용 하 여 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 코드 생성기를 사용 하는 기존 공급자와의 호환성에 대 한 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-278">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="9aa6b-279">기본 클래스 메서드 다음 해당 하는 메서드를 호출의 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 이 기능을 수행 하려면 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-279">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="9aa6b-280">받아볼 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자에서 기본 클래스 메서드를 호출 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-280">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromExpression">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromExpression (System.CodeDom.CodeExpression expression, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromExpression(class System.CodeDom.CodeExpression expression, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromExpression (expression As CodeExpression, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromExpression(System::CodeDom::CodeExpression ^ expression, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="9aa6b-281">코드를 생성할 식을 나타내는 <see cref="T:System.CodeDom.CodeExpression" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-281">A <see cref="T:System.CodeDom.CodeExpression" /> object that indicates the expression for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="9aa6b-282">출력 코드가 전달될 <see cref="T:System.IO.TextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-282">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9aa6b-283">코드를 생성하기 위해 사용할 옵션을 나타내는 <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-283">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-284">지정된 CodeDOM(코드 문서 개체 모델) 식에 대한 코드를 생성한 다음 지정된 옵션을 사용하여 지정된 텍스트 작성기에 해당 코드를 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-284">Generates code for the specified Code Document Object Model (CodeDOM) expression and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-285">.NET Framework 버전 1.0 및 1.1에서는이 방법을 통해 제공 됩니다는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 하는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-285">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="9aa6b-286">버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-286">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="9aa6b-287">코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현을 기본 클래스에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-287">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9aa6b-288">이 메서드와 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드가 파생 클래스에서 재정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-288">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9aa6b-289">이 메서드를 재정의 하는 경우에 기본 클래스의 해당 메서드를 호출 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-289">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="9aa6b-290">기본 클래스 메서드는 사용 되지 않는 사용 하 여 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 코드 생성기를 사용 하는 기존 공급자와의 호환성에 대 한 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-290">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="9aa6b-291">기본 클래스 메서드 다음 해당 하는 메서드를 호출의 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 이 기능을 수행 하려면 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-291">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="9aa6b-292">받아볼 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자에서 기본 클래스 메서드를 호출 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-292">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromMember">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromMember (member As CodeTypeMember, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromMember(System::CodeDom::CodeTypeMember ^ member, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="9aa6b-293">코드를 생성할 멤버를 나타내는 <see cref="T:System.CodeDom.CodeTypeMember" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-293">A <see cref="T:System.CodeDom.CodeTypeMember" /> object that indicates the member for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="9aa6b-294">출력 코드가 전달될 <see cref="T:System.IO.TextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-294">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9aa6b-295">코드를 생성하기 위해 사용할 옵션을 나타내는 <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-295">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-296">지정된 CodeDOM(코드 문서 개체 모델) 멤버 선언에 대한 코드를 생성한 다음 지정된 옵션을 사용하여 지정된 텍스트 작성기에 해당 코드를 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-296">Generates code for the specified Code Document Object Model (CodeDOM) member declaration and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aa6b-297">기본 클래스 구현을 throw 한 <xref:System.NotImplementedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-297">The base class implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="9aa6b-298">참조 <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType> 이 메서드의 구현을 설명 하는 설명서에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-298">See <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType> for documentation describing an implementation of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aa6b-299">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> 에 의해 구현 된 메서드는 <xref:Microsoft.CSharp.CSharpCodeProvider> 및 <xref:Microsoft.VisualBasic.VBCodeProvider> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-299">The following code example shows the use of the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> method as implemented by the <xref:Microsoft.CSharp.CSharpCodeProvider> and <xref:Microsoft.VisualBasic.VBCodeProvider> classes.</span></span>  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#1)]
 [!code-vb[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9aa6b-300">이 메서드가 파생 클래스에서 재정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-300">This method is not overridden in a derived class.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromNamespace">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromNamespace (System.CodeDom.CodeNamespace codeNamespace, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromNamespace(class System.CodeDom.CodeNamespace codeNamespace, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromNamespace(System::CodeDom::CodeNamespace ^ codeNamespace, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">
          <span data-ttu-id="9aa6b-301">코드를 생성할 네임스페이스를 나타내는 <see cref="T:System.CodeDom.CodeNamespace" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-301">A <see cref="T:System.CodeDom.CodeNamespace" /> object that indicates the namespace for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="9aa6b-302">출력 코드가 전달될 <see cref="T:System.IO.TextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-302">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9aa6b-303">코드를 생성하기 위해 사용할 옵션을 나타내는 <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-303">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-304">지정된 CodeDOM(코드 문서 개체 모델) 네임스페이스에 대한 코드를 생성한 다음 지정된 옵션을 사용하여 지정된 텍스트 작성기에 해당 코드를 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-304">Generates code for the specified Code Document Object Model (CodeDOM) namespace and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-305">.NET Framework 버전 1.0 및 1.1에서는이 방법을 통해 제공 됩니다는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 하는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-305">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="9aa6b-306">버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-306">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="9aa6b-307">코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현을 기본 클래스에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-307">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9aa6b-308">이 메서드와 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드가 파생 클래스에서 재정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-308">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9aa6b-309">이 메서드를 재정의 하는 경우에 기본 클래스의 해당 메서드를 호출 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-309">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="9aa6b-310">기본 클래스 메서드는 사용 되지 않는 사용 하 여 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 코드 생성기를 사용 하는 기존 공급자와의 호환성에 대 한 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-310">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="9aa6b-311">기본 클래스 메서드 다음 해당 하는 메서드를 호출의 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 이 기능을 수행 하려면 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-311">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="9aa6b-312">받아볼 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자에서 기본 클래스 메서드를 호출 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-312">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeNamespace" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromStatement">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromStatement (System.CodeDom.CodeStatement statement, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromStatement(class System.CodeDom.CodeStatement statement, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromStatement (statement As CodeStatement, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromStatement(System::CodeDom::CodeStatement ^ statement, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="statement">
          <span data-ttu-id="9aa6b-313">코드를 생성할 CodeDOM 요소가 포함된 <see cref="T:System.CodeDom.CodeStatement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-313">A <see cref="T:System.CodeDom.CodeStatement" /> containing the CodeDOM elements for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="9aa6b-314">출력 코드가 전달될 <see cref="T:System.IO.TextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-314">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9aa6b-315">코드를 생성하기 위해 사용할 옵션을 나타내는 <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-315">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-316">지정된 CodeDOM(코드 문서 개체 모델) 문에 대한 코드를 생성한 다음 지정된 옵션을 사용하여 지정된 텍스트 작성기에 해당 코드를 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-316">Generates code for the specified Code Document Object Model (CodeDOM) statement and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-317">.NET Framework 버전 1.0 및 1.1에서는이 방법을 통해 제공 됩니다는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 하는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-317">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="9aa6b-318">버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-318">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="9aa6b-319">코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현을 기본 클래스에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-319">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9aa6b-320">이 메서드와 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드가 파생 클래스에서 재정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-320">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9aa6b-321">이 메서드를 재정의 하는 경우에 기본 클래스의 해당 메서드를 호출 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-321">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="9aa6b-322">기본 클래스 메서드는 사용 되지 않는 사용 하 여 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 코드 생성기를 사용 하는 기존 공급자와의 호환성에 대 한 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-322">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="9aa6b-323">기본 클래스 메서드 다음 해당 하는 메서드를 호출의 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 이 기능을 수행 하려면 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-323">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="9aa6b-324">받아볼 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자에서 기본 클래스 메서드를 호출 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-324">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromType">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration codeType, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromType(class System.CodeDom.CodeTypeDeclaration codeType, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromType (codeType As CodeTypeDeclaration, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromType(System::CodeDom::CodeTypeDeclaration ^ codeType, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="codeType">
          <span data-ttu-id="9aa6b-325">코드를 생성할 형식을 나타내는 <see cref="T:System.CodeDom.CodeTypeDeclaration" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-325">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object that indicates the type for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="9aa6b-326">출력 코드가 전달될 <see cref="T:System.IO.TextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-326">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9aa6b-327">코드를 생성하기 위해 사용할 옵션을 나타내는 <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-327">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-328">지정된 CodeDOM(코드 문서 개체 모델) 형식 선언에 대한 코드를 생성한 다음 지정된 옵션을 사용하여 지정된 텍스트 작성기에 해당 코드를 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-328">Generates code for the specified Code Document Object Model (CodeDOM) type declaration and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-329">.NET Framework 버전 1.0 및 1.1에서는이 방법을 통해 제공 됩니다는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 하는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-329">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="9aa6b-330">버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-330">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="9aa6b-331">코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현을 기본 클래스에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-331">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9aa6b-332">이 메서드와 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드가 파생 클래스에서 재정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-332">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9aa6b-333">이 메서드를 재정의 하는 경우에 기본 클래스의 해당 메서드를 호출 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-333">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="9aa6b-334">기본 클래스 메서드는 사용 되지 않는 사용 하 여 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 코드 생성기를 사용 하는 기존 공급자와의 호환성에 대 한 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-334">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="9aa6b-335">기본 클래스 메서드 다음 해당 하는 메서드를 호출의 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 이 기능을 수행 하려면 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-335">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="9aa6b-336">받아볼 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자에서 기본 클래스 메서드를 호출 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-336">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GetAllCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllCompilerInfo () As CompilerInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::CodeDom::Compiler::CompilerInfo ^&gt; ^ GetAllCompilerInfo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9aa6b-337">이 컴퓨터의 언어 공급자 및 컴파일러 구성 설정을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-337">Returns the language provider and compiler configuration settings for this computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-338">구성된 모든 <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> 구현의 설정을 나타내는 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-338">An array of type <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> representing the settings of all configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aa6b-339">사용 하 여 <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> 메서드를 열거 하는 컴퓨터에 언어 공급자 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-339">Use the <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method to enumerate the language provider settings on a computer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-340">에 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)],.NET Framework에서 제공 하는 기본 언어 공급자에 지정 되지 않은 [ &lt;system.codedom&gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 컴파일러 구성 섹션 및 제거할 수 없습니다 되므로이 메서드는 기본 공급자와 구성 파일에 지정 된 모든 하는 방법에 대 한 정보를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-340">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the default language providers supplied by the .NET Framework are not specified in the [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) compiler configuration section and cannot be removed, so this method returns information about the default providers and any specified in the configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aa6b-341">다음 코드 예제에서는 컴퓨터의 언어 공급자를 열거 하 고 각 언어 공급자에 대 한 구성 및 컴파일러 설정을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-341">The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider.</span></span> <span data-ttu-id="9aa6b-342">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-342">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9aa6b-343">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-343">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="9aa6b-344">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-344">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9aa6b-345">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-345">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo GetCompilerInfo (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo GetCompilerInfo(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompilerInfo (language As String) As CompilerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CompilerInfo ^ GetCompilerInfo(System::String ^ language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="9aa6b-346">언어 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-346">A language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-347">지정된 언어에 대한 언어 공급자 및 컴파일러 구성 설정을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-347">Returns the language provider and compiler configuration settings for the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-348">구성된 <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> 구현의 설정으로 채워진 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-348">A <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> object populated with settings of the configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aa6b-349">[ &lt;system.codedom&gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 컴퓨터 구성 파일 각각에 대해 언어 공급자 및 컴파일러 구성 설정이 포함 <xref:System.CodeDom.Compiler.CodeDomProvider> 컴퓨터에서 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-349">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="9aa6b-350">컴퓨터 구성 파일 섹션을 참조 컴퓨터 구성 파일에 대 한 내용은 [구성 앱](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f)합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-350">For information about machine configuration files, see the Machine Configuration Files section in [Configuring Apps](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f).</span></span> <span data-ttu-id="9aa6b-351"><xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> 메서드는 지정 된 언어 이름에 대 한 각 공급자 구성 요소를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-351">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method searches each provider configuration element for the specified language name.</span></span> <span data-ttu-id="9aa6b-352">반환 된 <xref:System.CodeDom.Compiler.CompilerInfo> 인스턴스에 구성 된 언어 공급자 및 컴파일러 설정을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-352">The returned <xref:System.CodeDom.Compiler.CompilerInfo> instance contains the configured language provider and compiler settings.</span></span>  
  
 <span data-ttu-id="9aa6b-353"><xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> 메서드는 공급자를 하나 이상 구현 특정 언어를 지원 하는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-353">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language.</span></span> <span data-ttu-id="9aa6b-354">사용 하 여 언어 이름을 확인할 수 있습니다. <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> 전달 하기 전에 <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-354">You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>.</span></span> <span data-ttu-id="9aa6b-355">이렇게 하면 시 키 지는 <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> 액세스 하는 경우는 <xref:System.CodeDom.Compiler.CompilerInfo> 인스턴스는 지원 되지 않는 언어 이름에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-355">This prevents throwing a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> when you access the <xref:System.CodeDom.Compiler.CompilerInfo> instance for an unsupported language name.</span></span>  
  
 <span data-ttu-id="9aa6b-356">둘 이상의 공급자 구현이 입력된 언어 이름에 대해 구성 된 경우 <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> 구성 요소에서 마지막으로 일치 하는 공급자의 설정을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-356">If more than one provider implementation is configured for the input language name, <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> returns the settings from the last matching provider configuration element.</span></span>  
  
 <span data-ttu-id="9aa6b-357">언어 이름은 대/소문자를 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-357">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aa6b-358">다음 코드 예제에서는 확인 된 <xref:System.CodeDom.Compiler.CodeDomProvider> 언어 공급자에 대 한 구성된 설정 표시 및 입력된 언어에 대 한 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-358">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="9aa6b-359">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-359">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">
          <span data-ttu-id="9aa6b-360">
            <paramref name="language" />에 대한 공급자가 이 컴퓨터에 구성되어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-360">The <paramref name="language" /> does not have a configured provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="9aa6b-361">
            <paramref name="language" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-361">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9aa6b-362">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-362">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="9aa6b-363">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-363">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9aa6b-364">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-364">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="9aa6b-365">형식 변환기를 검색할 개체의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-365">The type of object to retrieve a type converter for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-366">지정된 데이터 형식에 대한 <see cref="T:System.ComponentModel.TypeConverter" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-366">Gets a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-367">지정된 형식에 대한 <see cref="T:System.ComponentModel.TypeConverter" />이거나, 지정된 형식에 대한 <see cref="T:System.ComponentModel.TypeConverter" />를 찾을 수 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-367">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type, or <see langword="null" /> if a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aa6b-368">파생된 클래스는 특정 데이터 형식에 대 한 특정 유형의 형식 변환기를 제공 하려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-368">A derived class can override this method to provide specific types of type converters for specific data types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguageFromExtension">
      <MemberSignature Language="C#" Value="public static string GetLanguageFromExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLanguageFromExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLanguageFromExtension (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetLanguageFromExtension(System::String ^ extension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="9aa6b-369">파일 이름 확장명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-369">A file name extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-370">
            <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 컴파일러 구성 섹션에 구성되어 있는 대로, 지정된 파일 이름 확장명과 연결된 언어 이름을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-370">Returns a language name associated with the specified file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration section.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-371">
            <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 컴파일러 구성 설정에 구성되어 있는 대로, 파일 이름 확장명과 연결된 언어 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-371">A language name associated with the file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration settings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aa6b-372">[ &lt;system.codedom&gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 컴퓨터 구성 파일 (Machine.config) 각각에 대해 언어 공급자 및 컴파일러 구성 설정이 포함 <xref:System.CodeDom.Compiler.CodeDomProvider> 구현에는 컴퓨터입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-372">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="9aa6b-373"><xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> 메서드는 지정 된 파일 이름 확장명에 대 한 각 공급자 구성 요소를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-373">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> method searches each provider configuration element for the specified file name extension.</span></span>  
  
 <span data-ttu-id="9aa6b-374"><xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> 메서드는 공급자를 하나 이상 구현 특정 파일 이름 확장명을 지원 하는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-374">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> method checks whether at least one provider implementation supports a specific file name extension.</span></span> <span data-ttu-id="9aa6b-375">사용 하 여 파일 이름 확장명을 확인할 수 있습니다. <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> 전달 하기 전에 <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-375">You can validate a file name extension using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A>.</span></span> <span data-ttu-id="9aa6b-376">이렇게 하면 <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> 에서 throw 한 <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> 지원 되지 않는 파일 이름 확장명에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-376">This prevents <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> from throwing a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> for an unsupported file name extension.</span></span>  
  
 <span data-ttu-id="9aa6b-377">공급자 구현 입력된 파일 이름 확장명을 지원 하 고 해당 공급자에 대 한 다음 구성 하는 여러 지원 되는 언어는 <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> 해당 공급자에 대 한 첫 번째 언어 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-377">If a provider implementation supports the input file name extension, and there are multiple supported languages configured for that provider, then <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> returns the first language name for that provider.</span></span> <span data-ttu-id="9aa6b-378">둘 이상의 공급자 구현이 입력된 파일 이름 확장명에 대해 구성 된 경우 <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> 구성 요소의 마지막 일치 하는 공급자에서 언어 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-378">If more than one provider implementation is configured for the input file name extension, <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> returns the language name from the last matching provider configuration element.</span></span>  
  
 <span data-ttu-id="9aa6b-379">언어 이름 및 파일 이름 확장명은 대/소문자 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-379">Language names and file name extensions are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aa6b-380">다음 코드 예제에서는 확인 된 <xref:System.CodeDom.Compiler.CodeDomProvider> 언어 공급자에 대 한 구성된 설정 표시 및 입력된 파일 이름 확장명에 대 한 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-380">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider.</span></span> <span data-ttu-id="9aa6b-381">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-381">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">
          <span data-ttu-id="9aa6b-382">
            <paramref name="extension" />에 대한 언어 공급자가 이 컴퓨터에 구성되어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-382">The <paramref name="extension" /> does not have a configured language provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="9aa6b-383">
            <paramref name="extension" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-383">The <paramref name="extension" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9aa6b-384">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-384">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="9aa6b-385">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-385">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9aa6b-386">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-386">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeOutput">
      <MemberSignature Language="C#" Value="public virtual string GetTypeOutput (System.CodeDom.CodeTypeReference type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTypeOutput(class System.CodeDom.CodeTypeReference type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeOutput (type As CodeTypeReference) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetTypeOutput(System::CodeDom::CodeTypeReference ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="9aa6b-387">반환할 형식을 나타내는 <see cref="T:System.CodeDom.CodeTypeReference" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-387">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-388">지정된 <see cref="T:System.CodeDom.CodeTypeReference" />에서 나타내는 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-388">Gets the type indicated by the specified <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-389">지정된 형식의 텍스트 표현으로, 이 코드 생성기가 생성하는 코드에 대한 언어로 서식이 지정되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-389">A text representation of the specified type, formatted for the language in which code is generated by this code generator.</span>
          </span>
          <span data-ttu-id="9aa6b-390">예를 들어, Visual Basic에서 <see cref="T:System.CodeDom.CodeTypeReference" /> 형식에 대한 <see cref="T:System.Int32" />를 전달하면 "Integer"가 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-390">In Visual Basic, for example, passing in a <see cref="T:System.CodeDom.CodeTypeReference" /> for the <see cref="T:System.Int32" /> type will return "Integer".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-391">.NET Framework 버전 1.0 및 1.1에서는이 방법을 통해 제공 됩니다는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 하는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-391">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="9aa6b-392">버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-392">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="9aa6b-393">코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현을 기본 클래스에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-393">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9aa6b-394">이 메서드와 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드가 파생 클래스에서 재정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-394">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9aa6b-395">이 메서드를 재정의 하는 경우에 기본 클래스의 해당 메서드를 호출 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-395">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="9aa6b-396">기본 클래스 메서드는 사용 되지 않는 사용 하 여 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 코드 생성기를 사용 하는 기존 공급자와의 호환성에 대 한 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-396">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="9aa6b-397">기본 클래스 메서드 다음 해당 하는 메서드를 호출의 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 이 기능을 수행 하려면 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-397">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="9aa6b-398">받아볼 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자에서 기본 클래스 메서드를 호출 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-398">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDefinedExtension">
      <MemberSignature Language="C#" Value="public static bool IsDefinedExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedExtension (extension As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedExtension(System::String ^ extension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="9aa6b-399">파일 이름 확장명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-399">A file name extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-400">파일 이름 확장명과 연결된 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 구현이 컴퓨터에 구성되어 있는지 여부를 테스트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-400">Tests whether a file name extension has an associated <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-401">
            <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 구현이 지정된 파일 이름 확장명에 대해 구성되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-401">
              <see langword="true" /> if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified file name extension; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aa6b-402">[ &lt;system.codedom&gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 컴퓨터 구성 파일 (Machine.config) 각각에 대해 언어 공급자 및 컴파일러 구성 설정이 포함 <xref:System.CodeDom.Compiler.CodeDomProvider> 구현에는 컴퓨터입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-402">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="9aa6b-403"><xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> 메서드는 지정 된 파일 이름 확장명에 대 한 공급자 구성 요소를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-403">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> method searches the provider configuration elements for the specified file name extension.</span></span>  
  
 <span data-ttu-id="9aa6b-404">파일 이름 확장명 대/소문자를 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-404">File name extensions are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aa6b-405">다음 코드 예제에서는 확인 된 <xref:System.CodeDom.Compiler.CodeDomProvider> 언어 공급자에 대 한 구성된 설정 표시 및 입력된 파일 이름 확장명에 대 한 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-405">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider.</span></span> <span data-ttu-id="9aa6b-406">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-406">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9aa6b-407">
            <paramref name="extension" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-407">The <paramref name="extension" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9aa6b-408">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-408">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="9aa6b-409">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-409">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9aa6b-410">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-410">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsDefinedLanguage">
      <MemberSignature Language="C#" Value="public static bool IsDefinedLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedLanguage (language As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedLanguage(System::String ^ language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="9aa6b-411">언어 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-411">The language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-412">언어에 대한 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 구현이 컴퓨터에 구성되어 있는지 여부를 테스트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-412">Tests whether a language has a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-413">
            <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 구현이 지정된 언어에 대해 구성되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-413">
              <see langword="true" /> if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified language; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aa6b-414">[ &lt;system.codedom&gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 컴퓨터 구성 파일 (Machine.config) 각각에 대해 언어 공급자 및 컴파일러 구성 설정이 포함 <xref:System.CodeDom.Compiler.CodeDomProvider> 구현에는 컴퓨터입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-414">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="9aa6b-415"><xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> 메서드는 지정 된 언어 이름에 대 한 공급자 구성 요소를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-415">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method searches the provider configuration elements for the specified language name.</span></span>  
  
 <span data-ttu-id="9aa6b-416">언어 이름은 대/소문자를 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-416">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aa6b-417">다음 코드 예제에서는 확인 된 <xref:System.CodeDom.Compiler.CodeDomProvider> 언어 공급자에 대 한 구성된 설정 표시 및 입력된 언어에 대 한 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-417">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="9aa6b-418">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-418">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9aa6b-419">
            <paramref name="language" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-419">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9aa6b-420">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-420">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="9aa6b-421">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-421">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9aa6b-422">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-422">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual bool IsValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidIdentifier (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidIdentifier(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9aa6b-423">유효한 식별자인지 확인할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-423">The value to verify as a valid identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-424">지정된 값이 현재 언어에 유효한 식별자인지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-424">Returns a value that indicates whether the specified value is a valid identifier for the current language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-425">
            <paramref name="value" /> 매개 변수가 유효한 식별자이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-425">
              <see langword="true" /> if the <paramref name="value" /> parameter is a valid identifier; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aa6b-426">이 메서드는 식별자가 유효한 지 여부를 테스트 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-426">This method tests whether an identifier is valid.</span></span> <span data-ttu-id="9aa6b-427"><xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A> 메서드는 특정 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-427">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A> method is provider specific.</span></span> <span data-ttu-id="9aa6b-428">하나 이상의 공급자에 대해 유효한 식별자는 다른 공급자에 대 한 일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-428">Identifiers that are valid for one provider might not be valid for other providers.</span></span> <span data-ttu-id="9aa6b-429">경우 `value` 문자가 ASCII 문자 범위 외부에서 코드를 컴파일하는 데 사용할 수 있는 모든 언어에 대 한 식별자를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-429">If `value` contains characters outside of the ASCII character range, check the identifier for all the languages that might be used to compile the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-430">.NET Framework 버전 1.0 및 1.1에서는이 방법을 통해 제공 됩니다는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 하는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-430">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="9aa6b-431">버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-431">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="9aa6b-432">코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현을 기본 클래스에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-432">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9aa6b-433">이 메서드와 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드가 파생 클래스에서 재정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-433">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9aa6b-434">재정의 하는 경우 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /> 파생된 클래스에서 반환 하는 메서드를 디자인 <see langword="true" /> 값 언어의 규칙에 맞는 키워드와 충돌 하지 않는 하는 경우에 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-434">When overriding <see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /> in a derived class, design the method to return <see langword="true" /> only if the value fits the rules of the language and does not conflict with a keyword.</span>
            </span>
            <span data-ttu-id="9aa6b-435">이 메서드를 재정의 하는 경우에 기본 클래스의 해당 메서드를 호출 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-435">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="9aa6b-436">기본 클래스 메서드는 사용 되지 않는 사용 하 여 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 코드 생성기를 사용 하는 기존 공급자와의 호환성에 대 한 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-436">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="9aa6b-437">기본 클래스 메서드 다음 해당 하는 메서드를 호출의 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 이 기능을 수행 하려면 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-437">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="9aa6b-438">받아볼 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자에서 기본 클래스 메서드를 호출 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-438">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="LanguageOptions">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.LanguageOptions LanguageOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.Compiler.LanguageOptions LanguageOptions" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.LanguageOptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LanguageOptions As LanguageOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::CodeDom::Compiler::LanguageOptions LanguageOptions { System::CodeDom::Compiler::LanguageOptions get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.LanguageOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9aa6b-439">언어 기능 식별자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-439">Gets a language features identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9aa6b-440">언어의 특수 기능을 나타내는 <see cref="T:System.CodeDom.Compiler.LanguageOptions" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-440">A <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> that indicates special features of the language.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeCompileUnit Parse (System.IO.TextReader codeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit Parse(class System.IO.TextReader codeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Parse (codeStream As TextReader) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ Parse(System::IO::TextReader ^ codeStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeStream" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="codeStream">
          <span data-ttu-id="9aa6b-441">구문 분석될 코드를 읽는 데 사용되는 <see cref="T:System.IO.TextReader" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-441">A <see cref="T:System.IO.TextReader" /> object that is used to read the code to be parsed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aa6b-442">지정된 텍스트 스트림에서 읽은 코드를 <see cref="T:System.CodeDom.CodeCompileUnit" />으로 컴파일합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-442">Compiles the code read from the specified text stream into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-443">구문 분석된 코드를 나타내는 <see cref="T:System.CodeDom.CodeCompileUnit" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-443">A <see cref="T:System.CodeDom.CodeCompileUnit" /> that contains a representation of the parsed code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-444">.NET Framework 버전 1.0 및 1.1에서는이 방법을 통해 제공 됩니다는 <xref:System.CodeDom.Compiler.ICodeParser> 구현에서 반환 하는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> 공급자의입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-444">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeParser> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> method of the provider.</span></span> <span data-ttu-id="9aa6b-445">버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-445">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="9aa6b-446">코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeParser> 구현을 기본 클래스에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-446">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeParser> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9aa6b-447">이 메서드와 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드가 파생 클래스에서 재정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-447">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9aa6b-448">이 메서드를 재정의 하는 경우에 기본 클래스의 해당 메서드를 호출 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-448">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="9aa6b-449">기본 클래스 메서드는 사용 되지 않는 사용 하 여 파생된 클래스에서 파서를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /> 코드 파서를 사용 하는 기존 공급자와의 호환성에 대 한 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-449">The base-class method creates a parser in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /> method for compatibility with preexisting providers that use code parsers.</span>
            </span>
            <span data-ttu-id="9aa6b-450">기본 클래스 메서드 다음 해당 하는 메서드를 호출의 <see cref="T:System.CodeDom.Compiler.ICodeParser" /> 이 기능을 수행 하려면 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-450">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeParser" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="9aa6b-451">받아볼 수는 <see cref="T:System.NotImplementedException" /> 코드 파서를 사용 하지 않는 코드 공급자에서 기본 클래스 메서드를 호출 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-451">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code parser.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport generatorSupport) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport supports) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (supports As GeneratorSupport) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorSupport" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="supports" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="generatorSupport">To be added.</param>
        <param name="supports">To be added.</param>
        <summary>
          <span data-ttu-id="9aa6b-452">지정된 코드 생성이 지원되는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-452">Returns a value indicating whether the specified code generation support is provided.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aa6b-453">지정된 코드 생성이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-453">
              <see langword="true" /> if the specified code generation support is provided; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aa6b-454">이 메서드는 여러 가지 <xref:System.CodeDom.Compiler.GeneratorSupport> 플래그를 이진 플래그 적절 한 기능 집합을 조인 하 여 기능 집합에 대 한 테스트를 한 번에 `OR` 연산자 (&#124;).</span><span class="sxs-lookup"><span data-stu-id="9aa6b-454">This method can be called with a number of <xref:System.CodeDom.Compiler.GeneratorSupport> flags at once to test for a set of capabilities by joining a set of appropriate capability flags together with a binary `OR` operator (&#124;).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9aa6b-455">.NET Framework 버전 1.0 및 1.1에서는이 방법을 통해 제공 됩니다는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 하는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-455">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="9aa6b-456">버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-456">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="9aa6b-457">코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현을 기본 클래스에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9aa6b-457">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9aa6b-458">이 메서드와 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드가 파생 클래스에서 재정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aa6b-458">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9aa6b-459">이 메서드를 재정의 하는 경우에 기본 클래스의 해당 메서드를 호출 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-459">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="9aa6b-460">기본 클래스 메서드는 사용 되지 않는 사용 하 여 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 코드 생성기를 사용 하는 기존 공급자와의 호환성에 대 한 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-460">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="9aa6b-461">기본 클래스 메서드 다음 해당 하는 메서드를 호출의 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 이 기능을 수행 하려면 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-461">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="9aa6b-462">받아볼 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자에서 기본 클래스 메서드를 호출 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9aa6b-462">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
      </Docs>
    </Member>
  </Members>
</Type>