<Type Name="Polyline" FullName="System.Windows.Shapes.Polyline">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df9eac654dc5e418efbbd6f6b1fa9655569da1f4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30667407" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Polyline : System.Windows.Shapes.Shape" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Polyline extends System.Windows.Shapes.Shape" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shapes.Polyline" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Polyline&#xA;Inherits Shape" />
  <TypeSignature Language="C++ CLI" Value="public ref class Polyline sealed : System::Windows::Shapes::Shape" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Shapes.Shape</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>일련의 연결된 직선을 그립니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 개체는 비슷합니다는 <xref:System.Windows.Shapes.Polygon> 개체를 제외 하 고이 개체는 닫힌된 셰이프를 사용할 필요가 없습니다.  
  
   
  
## Examples  
 만드는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Shapes.Polyline> 를 사용 하 여 해당 속성의 코드 요소 및 설정 합니다.  
  
 [!code-cpp[shapesprocedural#ShapesProceduralPolyline](~/samples/snippets/cpp/VS_Snippets_Wpf/ShapesProcedural/CPP/ShapesProcedural.cpp#shapesproceduralpolyline)]
 [!code-csharp[shapesprocedural#ShapesProceduralPolyline](~/samples/snippets/csharp/VS_Snippets_Wpf/ShapesProcedural/Csharp/ShapesProcedural.cs#shapesproceduralpolyline)]
 [!code-vb[shapesprocedural#ShapesProceduralPolyline](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ShapesProcedural/VisualBasic/ShapesProceduralVB.vb#shapesproceduralpolyline)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Polyline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shapes.Polyline.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Polyline();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Shapes.Polyline" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefiningGeometry">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Geometry DefiningGeometry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Geometry DefiningGeometry" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shapes.Polyline.DefiningGeometry" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefiningGeometry As Geometry" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Media::Geometry ^ DefiningGeometry { System::Windows::Media::Geometry ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillRule">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FillRule FillRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.FillRule FillRule" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shapes.Polyline.FillRule" />
      <MemberSignature Language="VB.NET" Value="Public Property FillRule As FillRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FillRule FillRule { System::Windows::Media::FillRule get(); void set(System::Windows::Media::FillRule value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FillRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>도형의 내부를 채우는 방법을 지정하는 <see cref="T:System.Windows.Media.FillRule" /> 열거형을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.Media.FillRule" /> 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Media.FillRule.EvenOdd" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.FillRule.EvenOdd> 열거형 값 "점인지" 셰이프에 지점을 결정 합니다. 지점에서 임의의 방향으로 무한대로 광선을 그려 하 고 광선이 교차 하는 지정 된 도형에서 경로 세그먼트의 수를 계산 합니다. 안에 있고 숫자가 홀수 이면 짝수 이면 지점이 벗어납니다.  
  
 <xref:System.Windows.Media.FillRule.Nonzero> 열거형 값 "점인지" 셰이프에 지점을 결정 합니다. 지점에서 임의의 방향으로 무한대로 광선을 먼저 그려 하 고 도형의 세그먼트가 광선과 교차 하는 위치를 확인 합니다. 을 0으로 시작 오른쪽에서 왼쪽으로 광선과 교차할 왼쪽에서 오른쪽으로 광선과 세그먼트 교차 때마다 1 및 1을 뺀 시간는 경로 세그먼트를 추가 합니다. 결과가 0 이면 점이, 계산, 후 점이 경로의 밖에 합니다. 그렇지 않으면 점이 내부에 있습니다.  
  
 ![채우기 규칙 설명](~/add/media/ref-mil-fillrule-stars.PNG "채우기 규칙 설명")  
FillRule 예제  
  
<a name="dependencyPropertyInfo_FillRule"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Shapes.Polyline.FillRuleProperty>|  
|로 메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.FillRule" />
      </Docs>
    </Member>
    <Member MemberName="FillRuleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FillRuleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FillRuleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shapes.Polyline.FillRuleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FillRuleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FillRuleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Shapes.Polyline.FillRule" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Shapes.Polyline.FillRule" />
      </Docs>
    </Member>
    <Member MemberName="Points">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PointCollection Points { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.PointCollection Points" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shapes.Polyline.Points" />
      <MemberSignature Language="VB.NET" Value="Public Property Points As PointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::PointCollection ^ Points { System::Windows::Media::PointCollection ^ get(); void set(System::Windows::Media::PointCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Shapes.Polyline" />의 꼭짓점을 포함하는 컬렉션을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.Point" />의 꼭짓점을 설명하는 <see cref="T:System.Windows.Shapes.Polyline" /> 구조체 컬렉션입니다. 기본값은 null 참조 (<see langword="Nothing" /> Visual basic에서).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]를 공백으로 구분 된 목록을 쉼표로 구분 된 x 및 y 좌표 쌍을 사용 하 여이 특성을 설정 합니다. 사용 하 여 간단한 시간, 즉, `x1,y1 x2,y2 ... xn,yn`합니다.  
  
<a name="dependencyPropertyInfo_Points"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Shapes.Polyline.PointsProperty>|  
|로 메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 만드는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Shapes.Polyline> 요소는 <xref:System.Windows.Shapes.Polyline.Points%2A> 코드를 사용 하 여 속성입니다.  
  
 [!code-cpp[shapesprocedural#ShapesProceduralPolyline](~/samples/snippets/cpp/VS_Snippets_Wpf/ShapesProcedural/CPP/ShapesProcedural.cpp#shapesproceduralpolyline)]
 [!code-csharp[shapesprocedural#ShapesProceduralPolyline](~/samples/snippets/csharp/VS_Snippets_Wpf/ShapesProcedural/Csharp/ShapesProcedural.cs#shapesproceduralpolyline)]
 [!code-vb[shapesprocedural#ShapesProceduralPolyline](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ShapesProcedural/VisualBasic/ShapesProceduralVB.vb#shapesproceduralpolyline)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Point" />
      </Docs>
    </Member>
    <Member MemberName="PointsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PointsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PointsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shapes.Polyline.PointsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PointsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PointsProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Shapes.Polyline.Points" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Shapes.Polyline.Points" />
      </Docs>
    </Member>
  </Members>
</Type>