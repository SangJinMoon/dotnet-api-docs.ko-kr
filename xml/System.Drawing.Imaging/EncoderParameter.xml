<Type Name="EncoderParameter" FullName="System.Drawing.Imaging.EncoderParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7fa3c9ef7dc933c24824bcd4b1c3e28f0eaebcc" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52907738" /></Metadata><TypeSignature Language="C#" Value="public sealed class EncoderParameter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit EncoderParameter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.EncoderParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncoderParameter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderParameter sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type EncoderParameter = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>값 또는 값 배열을 이미지 인코더에 전달 하는 데 사용 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수도 있습니다는 <xref:System.Drawing.Imaging.EncoderParameter> 특정 매개 변수에 특정 이미지 인코더에서 지 원하는 가능한 값 목록의 받을 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 만드는 방법을 보여 줍니다는 <xref:System.Drawing.Imaging.EncoderParameter> 를 사용 하는 <xref:System.Drawing.Imaging.EncoderParameter.%23ctor%2A> 생성자입니다. 이 예제를 실행 하려면 코드를 붙여넣고 호출을 Windows Form을 `VaryQualityLevel` 폼의 생성자에서 메서드. 이 예제에서는 라는 이미지 파일로 `TestPhoto.jpg` 위치한 **c:\\**합니다.  
  
 [!code-csharp[UsingImageEncodersDecoders#8](~/samples/snippets/csharp/VS_Snippets_Winforms/UsingImageEncodersDecoders/CS/Form1.cs#8)]
 [!code-vb[UsingImageEncodersDecoders#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/UsingImageEncodersDecoders/VB/Form1.vb#8)]  
[!code-csharp[UsingImageEncodersDecoders#6](~/samples/snippets/csharp/VS_Snippets_Winforms/UsingImageEncodersDecoders/CS/Form1.cs#6)]
[!code-vb[UsingImageEncodersDecoders#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/UsingImageEncodersDecoders/VB/Form1.vb#6)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/0e838ea1-4e7e-4334-b882-ab25df607b8b">관리 GDI+에서 이미지 인코더 및 디코더 사용</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 지정 된 클래스 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 값입니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, System::Byte value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * byte -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="encoder">매개 변수 범주의 GUID(Globally Unique Identifier)를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
        <param name="value">에 저장 된 값을 지정 하는 8 비트 부호 없는 정수는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</param>
        <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 지정 된 클래스 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 부호 없는 8 비트 정수 하나입니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성을 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />로 설정하고 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성을 1로 설정합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * byte[] -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encoder">매개 변수 범주의 GUID(Globally Unique Identifier)를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
        <param name="value">저장 된 값을 지정 하는 8 비트 부호 없는 정수의 배열을 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</param>
        <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 지정 된 클래스 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 부호 없는 8 비트 정수의 배열입니다. 설정 합니다 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성을 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />, 설정 및는 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성 배열에서 요소의 수.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, short value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int16 -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="encoder">매개 변수 범주의 GUID(Globally Unique Identifier)를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
        <param name="value">에 저장 된 값을 지정 하는 16 비트 정수를 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다. 음수가 아니어야 합니다.</param>
        <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 지정 된 클래스 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체와 1 개의 16 비트 정수입니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성을 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" />로 설정하고 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성을 1로 설정합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, short[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int16[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, cli::array &lt;short&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int16[] -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="encoder">매개 변수 범주의 GUID(Globally Unique Identifier)를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
        <param name="value">저장 된 값을 지정 하는 16 비트 정수의 배열은 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다. 배열에서 정수는 음수가 아니어야 합니다.</param>
        <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 지정 된 클래스 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 16 비트 정수의 배열입니다. 설정 합니다 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성을 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" />, 설정 및는 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성 배열에서 요소의 수.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, long value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int64 -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="encoder">매개 변수 범주의 GUID(Globally Unique Identifier)를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
        <param name="value"><see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장된 값을 지정하는 64비트 정수로, 음수가 아니어야 합니다. 에 저장 되기 전에이 매개 변수는 32 비트 정수로 변환할는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</param>
        <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 지정 된 클래스 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 64 비트 정수 하나입니다. 설정 합니다 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성을 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" /> (32 비트)을 설정 및는 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성을 1로 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에는 만드는 방법을 보여 줍니다는 <xref:System.Drawing.Imaging.EncoderParameter> 를 사용 하는 <xref:System.Drawing.Imaging.EncoderParameter.%23ctor%2A> 생성자입니다. 이 예제를 실행 하려면 코드를 붙여넣고 호출을 Windows Form을 `VaryQualityLevel` 폼의 생성자에서 메서드. 이 예제에서는 라는 이미지 파일로 `TestPhoto.jpg` 위치한 **c:\\**합니다.  
  
 [!code-csharp[UsingImageEncodersDecoders#8](~/samples/snippets/csharp/VS_Snippets_Winforms/UsingImageEncodersDecoders/CS/Form1.cs#8)]
 [!code-vb[UsingImageEncodersDecoders#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/UsingImageEncodersDecoders/VB/Form1.vb#8)]  
[!code-csharp[UsingImageEncodersDecoders#6](~/samples/snippets/csharp/VS_Snippets_Winforms/UsingImageEncodersDecoders/CS/Form1.cs#6)]
[!code-vb[UsingImageEncodersDecoders#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/UsingImageEncodersDecoders/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int64[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, cli::array &lt;long&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int64[] -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="encoder">매개 변수 범주의 GUID(Globally Unique Identifier)를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
        <param name="value"><see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장된 값을 지정하는 64비트 정수의 배열입니다. 배열에서 정수는 음수가 아니어야 합니다. 64 비트 정수는 32 비트 정수로 변환에 저장 되기 전에 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 64비트 정수의 배열을 사용하여 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 클래스의 새 인스턴스를 초기화합니다. 설정 합니다 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성을 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" /> (32 비트), 설정 및를 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성 배열에서 요소의 수.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * string -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encoder">매개 변수 범주의 GUID(Globally Unique Identifier)를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
        <param name="value">A <see cref="T:System.String" /> 에 저장 된 값을 지정 하는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</param>
        <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 지정 된 클래스 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 문자열입니다. 문자열에 저장 되기 전에 null로 끝나는 ASCII 문자열로 변환 되는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다. 설정 합니다 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성을 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii" />, 설정 및는 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> NULL 종결자를 포함 하는 ASCII 문자열의 길이 속성입니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte value, bool undefined);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, unsigned int8 value, bool undefined) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, System::Byte value, bool undefined);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * byte * bool -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value, undefined)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="undefined" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoder">매개 변수 범주의 GUID(Globally Unique Identifier)를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
        <param name="value">에 저장 된 값을 지정 하는 바이트는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</param>
        <param name="undefined">경우 <see langword="true" />, <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성이로 설정 되어 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />이 고, 그렇지 않으면를 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성이 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />합니다.</param>
        <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 지정 된 클래스 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 8 비트 값입니다. 설정 합니다 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성을 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> 또는 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />, 설정 및는 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성을 1로 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte[] value, bool undefined);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, unsigned int8[] value, bool undefined) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, cli::array &lt;System::Byte&gt; ^ value, bool undefined);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * byte[] * bool -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value, undefined)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="undefined" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoder">매개 변수 범주의 GUID(Globally Unique Identifier)를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
        <param name="value">저장 된 값을 지정 하는 바이트 배열은 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</param>
        <param name="undefined">경우 <see langword="true" />, <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성이로 설정 되어 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />이 고, 그렇지 않으면를 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성이 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />합니다.</param>
        <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 지정 된 클래스 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 바이트 배열입니다. 설정 합니다 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성을 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> 또는 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />, 설정 및는 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성 배열에서 요소의 수.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int[] numerator, int[] denominator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32[] numerator, int32[] denominator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, cli::array &lt;int&gt; ^ numerator, cli::array &lt;int&gt; ^ denominator);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int[] * int[] -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, numerator, denominator)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="numerator" Type="System.Int32[]" />
        <Parameter Name="denominator" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="encoder">매개 변수 범주의 GUID(Globally Unique Identifier)를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
        <param name="numerator">분수의 분자를 지정 하는 32 비트 정수의 배열입니다. 배열에서 정수는 음수가 아니어야 합니다.</param>
        <param name="denominator">분수의 분모를 지정 하는 32 비트 정수의 배열입니다. 배열에서 정수는 음수가 아니어야 합니다. 지정된 된 인덱스의 분모는 동일한 인덱스의 분자와 쌍을 이룹니다.</param>
        <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 지정 된 클래스 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 32 비트 정수의 두 배열을 합니다. 두 배열은 분수의 배열을 나타냅니다. 설정 합니다 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성을 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" />, 설정 및는 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성에 있는 요소의 개수로 <paramref name="numerator" /> 배열 요소의 수와 동일 해야에서 <paramref name="denominator" /> 배열.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long rangebegin, long rangeend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int64 rangebegin, int64 rangeend) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, long rangebegin, long rangeend);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int64 * int64 -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, rangebegin, rangeend)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="rangebegin" Type="System.Int64" />
        <Parameter Name="rangeend" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="encoder">매개 변수 범주의 GUID(Globally Unique Identifier)를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
        <param name="rangebegin">정수 범위에서 가장 작은 수를 나타내는 64 비트 정수입니다. 음수가 아니어야 합니다. 에 저장 되기 전에이 매개 변수는 32 비트 정수로 변환할는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</param>
        <param name="rangeend">정수 범위에서 가장 큰 수를 나타내는 64 비트 정수입니다. 음수가 아니어야 합니다. 에 저장 되기 전에이 매개 변수는 32 비트 정수로 변환할는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 64비트 정수 쌍을 사용하여 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 클래스의 새 인스턴스를 초기화합니다. 쌍은 정수의 정수와 첫째 정수는 범위의 가장 작은 수는 둘째 정수는 범위의 가장 큰 수의 범위를 나타냅니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성을 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" />로 설정하고 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성을 1로 설정합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long[] rangebegin, long[] rangeend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int64[] rangebegin, int64[] rangeend) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, cli::array &lt;long&gt; ^ rangebegin, cli::array &lt;long&gt; ^ rangeend);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int64[] * int64[] -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, rangebegin, rangeend)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="rangebegin" Type="System.Int64[]" />
        <Parameter Name="rangeend" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="encoder">매개 변수 범주의 GUID(Globally Unique Identifier)를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
        <param name="rangebegin">정수 범위의 최소값을 지정 하는 64 비트 정수의 배열입니다. 배열에서 정수는 음수가 아니어야 합니다. 64 비트 정수는 32 비트 정수로 변환에 저장 되기 전에 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</param>
        <param name="rangeend">정수 범위의 최대값을 지정 하는 64 비트 정수의 배열입니다. 배열에서 정수는 음수가 아니어야 합니다. 64 비트 정수는 32 비트 정수로 변환에 저장 되기 전에 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 개체입니다. 동일한 인덱스의 최소값을 사용 하 여 지정된 된 인덱스의 최대 값 쌍을 이룹니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 64비트 정수의 두 배열을 사용하여 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 클래스의 새 인스턴스를 초기화합니다. 두 배열은 배열의 정수 범위를 나타냅니다. 설정 합니다 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성을 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" />, 설정 및는 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성에 있는 요소의 개수로 <paramref name="rangebegin" /> 배열 요소의 수와 동일 해야에서 <paramref name="rangeend" /> 배열.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numberValues, System.Drawing.Imaging.EncoderParameterValueType type, IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32 numberValues, valuetype System.Drawing.Imaging.EncoderParameterValueType type, native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, int numberValues, System::Drawing::Imaging::EncoderParameterValueType type, IntPtr value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int * System.Drawing.Imaging.EncoderParameterValueType * nativeint -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, numberValues, type, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="numberValues" Type="System.Int32" />
        <Parameter Name="type" Type="System.Drawing.Imaging.EncoderParameterValueType" />
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="encoder">매개 변수 범주의 GUID(Globally Unique Identifier)를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
        <param name="numberValues">에 저장 된 값의 수를 지정 하는 정수를 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성이이 값으로 설정 됩니다.</param>
        <param name="type">멤버를 <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 데이터 형식의 저장 된 값을 지정 하는 열거형을 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체. 합니다 <see cref="T:System.Type" /> 고 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은이 값으로 설정 합니다.</param>
        <param name="value">지정 된 형식의 값 배열에 대 한 포인터를 <paramref name="Type" /> 매개 변수입니다.</param>
        <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 지정 된 클래스 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체, 값의 수, 데이터 형식, 값 및 저장 된 값에 대 한 포인터를 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int NumberOfValues, int Type, int Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32 NumberOfValues, int32 Type, int32 Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, int NumberOfValues, int Type, int Value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int * int * int -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, NumberOfValues, Type, Value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.Obsolete("This constructor has been deprecated. Use EncoderParameter(Encoder encoder, int numberValues, EncoderParameterValueType type, IntPtr value) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="NumberOfValues" Type="System.Int32" />
        <Parameter Name="Type" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encoder">매개 변수 범주의 GUID(Globally Unique Identifier)를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
        <param name="NumberOfValues">에 저장 된 값의 수를 지정 하는 정수를 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성이이 값으로 설정 됩니다.</param>
        <param name="Type">멤버를 <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 데이터 형식의 저장 된 값을 지정 하는 열거형을 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체. 합니다 <see cref="T:System.Type" /> 고 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은이 값으로 설정 합니다.</param>
        <param name="Value">지정 된 형식의 값 배열에 대 한 포인터를 <paramref name="Type" /> 매개 변수입니다.</param>
        <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 지정 된 클래스 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 값 데이터 형식의 값에 대 한 포인터에 저장 된 값의 수를 지정 하는 세 개의 정수는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">유형은 유효한 <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" />합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator, int demoninator);" FrameworkAlternate="netframework-1.1;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32 numerator, int32 demoninator) cil managed" FrameworkAlternate="netframework-1.1;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, int numerator, int demoninator);" FrameworkAlternate="netframework-1.1;netframework-4.0" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int * int -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, numerator, demoninator)" FrameworkAlternate="dotnet-plat-ext-2.2;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator, int denominator);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32 numerator, int32 denominator) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, int numerator, int denominator);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int * int -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, numerator, denominator)" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netframework-2.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" Index="0" />
        <Parameter Name="numerator" Type="System.Int32" Index="1" />
        <Parameter Name="demoninator" Type="System.Int32" Index="2" FrameworkAlternate="netframework-1.1;netframework-4.0" />
        <Parameter Name="denominator" Type="System.Int32" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      </Parameters>
      <Docs>
        <param name="encoder">매개 변수 범주의 GUID(Globally Unique Identifier)를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
        <param name="denominator">분수의 분모를 나타내는 32비트 정수입니다. 음수가 아니어야 합니다.</param>
        <param name="numerator">분수의 분자를 나타내는 32비트 정수입니다. 음수가 아니어야 합니다.</param>
        <param name="demoninator">To be added.</param>
        <summary>지정된 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 32비트 정수 쌍을 사용하여 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 클래스의 새 인스턴스를 초기화합니다. 정수 쌍은 분수를 나타내며 첫 번째 정수가 분자, 두 번째 정수가 분모입니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성을 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" />로 설정하고 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성을 1로 설정합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator1, int demoninator1, int numerator2, int demoninator2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32 numerator1, int32 demoninator1, int32 numerator2, int32 demoninator2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, int numerator1, int demoninator1, int numerator2, int demoninator2);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int * int * int * int -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, numerator1, demoninator1, numerator2, demoninator2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="numerator1" Type="System.Int32" />
        <Parameter Name="demoninator1" Type="System.Int32" />
        <Parameter Name="numerator2" Type="System.Int32" />
        <Parameter Name="demoninator2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encoder">매개 변수 범주의 GUID(Globally Unique Identifier)를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
        <param name="numerator1">범위의 최소 분수 값의 분자를 나타내는 32 비트 정수입니다. 음수가 아니어야 합니다.</param>
        <param name="demoninator1">범위의 최소 분수 값의 분모를 나타내는 32 비트 정수입니다. 음수가 아니어야 합니다.</param>
        <param name="numerator2">범위의 최소 분수 값의 분모를 나타내는 32 비트 정수입니다. 음수가 아니어야 합니다.</param>
        <param name="demoninator2">범위의 최대 분수의 분자를 나타내는 32 비트 정수입니다. 음수가 아니어야 합니다.</param>
        <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 지정 된 클래스 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체와 4 개의 32 비트 정수입니다. 네 개의 정수는 분수의 범위를 나타냅니다. 처음 두 정수 범위의 최소 분수 값을 나타내며 나머지 두 정수는 범위의 최대 분수 값을 나타냅니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성을 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" />로 설정하고 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성을 1로 설정합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int[] numerator1, int[] denominator1, int[] numerator2, int[] denominator2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32[] numerator1, int32[] denominator1, int32[] numerator2, int32[] denominator2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, cli::array &lt;int&gt; ^ numerator1, cli::array &lt;int&gt; ^ denominator1, cli::array &lt;int&gt; ^ numerator2, cli::array &lt;int&gt; ^ denominator2);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int[] * int[] * int[] * int[] -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, numerator1, denominator1, numerator2, denominator2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="numerator1" Type="System.Int32[]" />
        <Parameter Name="denominator1" Type="System.Int32[]" />
        <Parameter Name="numerator2" Type="System.Int32[]" />
        <Parameter Name="denominator2" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="encoder">매개 변수 범주의 GUID(Globally Unique Identifier)를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
        <param name="numerator1">최소 범위 값의 분자를 지정 하는 32 비트 정수의 배열입니다. 배열에서 정수는 음수가 아니어야 합니다.</param>
        <param name="denominator1">최소 범위 값의 분모를 지정 하는 32 비트 정수의 배열입니다. 배열에서 정수는 음수가 아니어야 합니다.</param>
        <param name="numerator2">최대 범위 값의 분자를 지정 하는 32 비트 정수의 배열입니다. 배열에서 정수는 음수가 아니어야 합니다.</param>
        <param name="denominator2">최대 범위 값의 분모를 지정 하는 32 비트 정수의 배열입니다. 배열에서 정수는 음수가 아니어야 합니다.</param>
        <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 지정 된 클래스 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 32 비트 정수의 네 배열을 합니다. 네 배열은 배열의 유리수 범위를 나타냅니다. 유리수 범위는 최대 소수 자릿수 값을 통해 최소 분수 값의 모든 분수 집합입니다. 설정 합니다 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성을 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" />, 설정 및는 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성에 있는 요소의 개수로 <paramref name="numerator1" /> 세 가지 다른 배열의 요소 수가 같아야 하는 배열.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Numerator1에서 모든 소수 자릿수와 범위 구성 [i] / denominator1 [i] numerator2 통해 [i] / denominator2 [i].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="encoderParameter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 <xref:System.Drawing.Imaging.EncoderParameter.Dispose%2A> 이 사용 하는 리소스 <xref:System.Drawing.Imaging.EncoderParameter> 개체를 다른 용도로 다시 할당 될 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoder">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.Encoder Encoder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Imaging.Encoder Encoder" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.EncoderParameter.Encoder" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoder As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Imaging::Encoder ^ Encoder { System::Drawing::Imaging::Encoder ^ get(); void set(System::Drawing::Imaging::Encoder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoder : System.Drawing.Imaging.Encoder with get, set" Usage="System.Drawing.Imaging.EncoderParameter.Encoder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.Encoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>가져오거나 설정 합니다 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체와 연결 된 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다. 합니다 <see cref="T:System.Drawing.Imaging.Encoder" /> 범주를 지정 하는 전역적으로 고유 식별자 (GUID)를 캡슐화 하는 개체 (예를 들어 <see cref="F:System.Drawing.Imaging.Encoder.Quality" />를 <see cref="F:System.Drawing.Imaging.Encoder.ColorDepth" />, 또는 <see cref="F:System.Drawing.Imaging.Encoder.Compression" />)이 저장 된 매개 변수의 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</summary>
        <value><see cref="T:System.Drawing.Imaging.Encoder" /> 이 저장 된 매개 변수의 범주를 지정 하는 GUID를 캡슐화 하는 개체 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~EncoderParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!EncoderParameter ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="encoderParameter.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>수는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체가 리소스를 해제 하기 전에 다른 정리 작업을 수행 하는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 가비지 수집에서 개체를 회수 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfValues">
      <MemberSignature Language="C#" Value="public int NumberOfValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfValues" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberOfValues As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberOfValues { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfValues : int" Usage="System.Drawing.Imaging.EncoderParameter.NumberOfValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 저장 된 값의 배열에서 요소 수를 가져옵니다 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</summary>
        <value>이 저장 된 값의 배열에 있는 요소의 수를 나타내는 정수 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.EncoderParameterValueType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Imaging.EncoderParameterValueType Type" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.EncoderParameter.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As EncoderParameterValueType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Imaging::EncoderParameterValueType Type { System::Drawing::Imaging::EncoderParameterValueType get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Drawing.Imaging.EncoderParameterValueType" Usage="System.Drawing.Imaging.EncoderParameter.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.EncoderParameterValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 저장 된 값의 데이터 형식을 가져옵니다 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</summary>
        <value>멤버는 <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 이 저장 된 값의 데이터 형식을 나타내는 열거형 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.EncoderParameterValueType ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Imaging.EncoderParameterValueType ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.EncoderParameter.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueType As EncoderParameterValueType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Imaging::EncoderParameterValueType ValueType { System::Drawing::Imaging::EncoderParameterValueType get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : System.Drawing.Imaging.EncoderParameterValueType" Usage="System.Drawing.Imaging.EncoderParameter.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.EncoderParameterValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 저장 된 값의 데이터 형식을 가져옵니다 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</summary>
        <value>멤버는 <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 이 저장 된 값의 데이터 형식을 나타내는 열거형 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>