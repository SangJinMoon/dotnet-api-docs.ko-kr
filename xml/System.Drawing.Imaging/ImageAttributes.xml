<Type Name="ImageAttributes" FullName="System.Drawing.Imaging.ImageAttributes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b9b2e1c4e566c6435f9d002b5a5315e86a75aef4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30410757" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImageAttributes : ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ImageAttributes extends System.Object implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.ImageAttributes" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImageAttributes&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageAttributes sealed : ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>렌더링하는 동안 비트맵과 메타파일 색을 조작하는 방법에 대한 정보가 들어 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 여러 가지 색 조정 설정, 색 조정 매트릭스, 회색조 조정 매트릭스, 감마 보정 값, 색 매핑 테이블 및 색-임계값 값 포함을 유지 합니다. 렌더링 하는 동안 색 수정, 어 두, 밝게, 하 고 제거할 수 있습니다. 이러한 조작을 적용 하려면 초기화는 <xref:System.Drawing.Imaging.ImageAttributes> 개체를 전달 하는 경로의 <xref:System.Drawing.Imaging.ImageAttributes> 개체 (의 경로 함께 <xref:System.Drawing.Image>)에 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 모두 같은 색 (0.2, 0.0, 0.4, 1.0)가 있는 이미지 및에 빨강 요소가 0.2 빨강, 녹색 및 파랑 구성 요소에 추가 합니다.  
  
 다음 그림에서는 오른쪽에서 왼쪽의 원래 이미지 및 변형 된 이미지를 보여 줍니다.  
  
 ![색](~/add/media/colortrans1.png "색")  
  
 다음 예제에서 코드는 다음 단계를 사용 하 여 다시 칠하기는 수행:  
  
1.  초기화는 <xref:System.Drawing.Imaging.ColorMatrix> 개체입니다.  
  
2.  만들기는 <xref:System.Drawing.Imaging.ImageAttributes> 개체를 전달는 <xref:System.Drawing.Imaging.ColorMatrix> 개체는 <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> 의 메서드는 <xref:System.Drawing.Imaging.ImageAttributes> 개체입니다.  
  
3.  전달 된 <xref:System.Drawing.Imaging.ImageAttributes> 개체를 <xref:System.Drawing.Graphics.DrawImage%2A> 의 메서드는 <xref:System.Drawing.Graphics> 개체입니다.  
  
 [!code-csharp[System.Drawing.RecoloringImages#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RecoloringImages/CS/Class1.cs#21)]
 [!code-vb[System.Drawing.RecoloringImages#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RecoloringImages/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBrushRemapTable">
      <MemberSignature Language="C#" Value="public void ClearBrushRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearBrushRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearBrushRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearBrushRemapTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 개체의 브러시 색 다시 매핑 테이블을 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 색 다시 매핑 테이블, 비트맵 범주에 대 한 서로 다른 색 다시 매핑 테이블 및 브러시 범주에 대 한 서로 다른 색 다시 매핑 테이블을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 브러시 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 브러시 범주에 적용 합니다.  
  
 색 조정 또는 회색조 조정 설정을 특정 범주를 지정 하는 즉시 기본 조정 설정이 더 이상에 해당 범주에 적용 합니다. 예를 들어, 녹색, 빨강을 변환 하는 기본 다시 매핑 테이블을 지정 하 고 1.8 기본 감마 값을 지정 합니다. 호출 하는 경우는 <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> 방법, 기본 다시 매핑 테이블 (빨강, 녹색) 및 기본 감마 값 (1.8) 브러시에 적용 되지 것입니다. 나중에 호출 하는 경우는 <xref:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable%2A> 메서드를 기본 매핑 변경 테이블에 브러시 범주는 전환 되지 않습니다; 대신, 브러시 범주는 다시 매핑 테이블이 없습니다. 마찬가지로, 브러시 범주는 전환 되지 않고 기본 감마 값입니다. 대신, 브러시 범주 감마 값을 갖습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>색상 키(투명도 범위)를 지웁니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 범주에 대한 색상 키(투명도 범위)를 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 색상 키, 비트맵 범주에 대 한 서로 다른 색상 키 및 펜 범주에 대 한 서로 다른 색 키를 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">색상 키가 지워지는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
        <summary>지정된 범주에 대한 색상 키(투명도 범위)를 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 색상 키, 비트맵 범주에 대 한 서로 다른 색상 키 및 펜 범주에 대 한 서로 다른 색 키를 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
 색 조정 또는 회색조 조정 설정을 특정 범주를 지정 하는 즉시 기본 조정 설정이 더 이상에 해당 범주에 적용 합니다. 예를 들어, 색상 200에서 255 까지의 빨강 구성을 투명 하 게 만드는 기본 색상 키를 지정 하 고 1.8 기본 감마 값을 지정 합니다. 호출 하 여 범주에 속하는 펜 색 키를 설정 하는 경우는 <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> 메서드, 기본 색상 키 및 기본 감마 값 펜에 적용 되지 것입니다. 나중에 펜 색 키를 호출 하 여 선택을 취소 하는 경우는 <xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A> 메서드를 펜 범주는 기본 색 키를 다시 되지 않습니다; 대신, 펜 범주는 색상 키입니다. 마찬가지로, 펜 범주는 전환 되지 않고 기본 감마 값입니다. 대신, 펜 범주 감마 값을 갖습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>색 조정 매트릭스를 지웁니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 범주에 대한 색 조정 매트릭스를 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 색 조정 매트릭스, 비트맵 범주에 대 한 서로 다른 색 조정 매트릭스 및 여전히 펜 범주에 대 한 서로 다른 색 조정 매트릭스를 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정은 펜 범주에 적용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">색 조정 매트릭스가 지워지는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
        <summary>지정된 범주에 대한 색 조정 매트릭스를 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 색 조정 매트릭스, 비트맵 범주에 대 한 서로 다른 색 조정 매트릭스 및 여전히 펜 범주에 대 한 서로 다른 색 조정 매트릭스를 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정은 펜 범주에 적용 합니다.  
  
 색 조정 또는 회색조 조정 설정을 특정 범주를 지정 하는 즉시 기본 조정 설정이 더 이상에 해당 범주에 적용 합니다. 예를 들어 색 조정 매트릭스와 기본 범주에 대 한 감마 값을 지정 합니다. 호출 하 여 펜 범주에 대 한 색 조정 매트릭스를 설정 하는 경우는 <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> 메서드를 기본 색 조정 매트릭스 펜에 적용 되지 것입니다. 펜 색 조정 매트릭스를 호출 하 여 나중에 지우기는 <xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A> 메서드를 기본 조정 매트릭스를 펜 범주는 전환 되지 않습니다; 대신, 펜 범주는 없는 조정 매트릭스입니다. 마찬가지로, 펜 범주는 전환 되지 않고 기본 감마 값입니다. 대신, 펜 범주 감마 값을 갖습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>감마 보정을 사용하지 않도록 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 범주에 대한 감마 보정을 사용하지 않도록 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 감마 값, 비트맵 범주에 대 한 다른 감마 값 및 여전히 펜 범주에 대 한 다른 감마 값을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">감마 보정이 사용하지 않도록 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
        <summary>지정된 범주에 대한 감마 보정을 사용하지 않도록 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 감마 값, 비트맵 범주에 대 한 다른 감마 값 및 여전히 펜 범주에 대 한 다른 감마 값을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정은 펜 범주에 적용 합니다.  
  
 색 조정 또는 회색조 조정 설정을 특정 범주를 지정 하는 즉시 기본 조정 설정이 더 이상에 해당 범주에 적용 합니다. 예를 들어 한 감마 값과 기본 범주에 대 한 색 조정 매트릭스를 지정 합니다. 호출 하 여 펜 범주에 대 한 감마 값을 설정 하는 경우는 <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> 메서드를 기본 감마 값 펜에 적용 되지 것입니다. 호출 하 여 나중에 펜 감마 값을 지우면는 <xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A> 메서드를 펜 범주는 기본 감마 값으로 전환 되지 않습니다; 대신, 펜 범주는 감마 값이 없습니다. 마찬가지로, 펜 범주는 전환 되지 않고 기본 색 조정 매트릭스입니다. 대신, 펜 범주 없는 색 조정 매트릭스를 갖습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see langword="NoOp" /> 설정을 지웁니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 범주에 대한 <see langword="NoOp" /> 설정을 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 감마 값, 비트맵 범주에 대 한 다른 감마 값 및 여전히 펜 범주에 대 한 다른 감마 값을 지정할 수 있습니다.  
  
 호출 하 여 기본 범주에 대 한 색 조정을 사용 하지 않도록 설정할 수는 <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> 메서드. 호출 하 여 기본 범주에 대 한 색 조정의 복원할 수 있으며 나중의 <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> 메서드. 색을 호출 하기 전의 상태로 복원 돌아갑니다 <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">
          <see langword="NoOp" /> 설정이 지워지는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
        <summary>지정된 범주에 대한 <see langword="NoOp" /> 설정을 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 감마 값, 비트맵 범주에 대 한 다른 감마 값 및 여전히 펜 범주에 대 한 다른 감마 값을 지정할 수 있습니다.  
  
 호출 하 여 특정 범주에 대 한 색 조정을 사용 하지 않도록 설정할 수는 <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> 메서드. 호출 하 여 해당 범주에 대 한 색 조정의 복원할 수 있으며 나중의 <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> 메서드. 색을 호출 하기 전의 상태로 복원 돌아갑니다 <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>CMYK(녹청, 자홍, 노랑, 검정) 출력 채널 설정을 지웁니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 범주에 대한 CMYK(녹청, 자홍, 노랑, 검정) 출력 채널 설정을 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 출력 채널 및 비트맵 범주에 대 한 다양 한 출력 채널을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 비트맵 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 비트맵 범주에 적용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">출력 채널 설정이 지워지는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
        <summary>지정된 범주에 대한 CMYK(녹청, 자홍, 노랑, 검정) 출력 채널 설정을 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 출력 채널 및 비트맵 범주에 대 한 다양 한 출력 채널을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 비트맵 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 비트맵 범주에 적용 합니다.  
  
 색 조정 또는 회색조 조정 설정을 특정 범주를 지정 하는 즉시 기본 조정 설정이 더 이상에 해당 범주에 적용 합니다. 예를 들어 출력 채널 및 기본 범주에 대 한 조정 매트릭스를 지정 합니다. 호출 하 여 비트맵 범주에 대 한 출력 채널을 설정 하는 경우는 <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> 메서드를 기본 출력 채널 비트맵에 적용 되지 것입니다. 나중에 비트맵의 선택을 취소 하는 경우 호출 하 여 출력 채널에서 <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A> 메서드를 기본 출력 채널에 비트맵 범주는 전환 되지 않습니다; 대신, 비트맵 범주는 출력 채널 설정이 없습니다. 마찬가지로, 비트맵 범주는 전환 되지 않고 기본 색 조정 매트릭스입니다. 대신, 비트맵 범주 없는 색 조정 매트릭스를 갖습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>출력 채널 색 프로필 설정을 지웁니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 범주에 대한 출력 채널 색 프로필 설정을 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 출력 채널 프로필 및 비트맵 범주에 대 한 다양 한 출력 채널 프로필을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 비트맵 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 비트맵 범주에 적용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">출력 채널 프로필 설정이 지워지는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
        <summary>지정된 범주에 대한 출력 채널 색 프로필 설정을 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 출력 채널 프로필 및 비트맵 범주에 대 한 다양 한 출력 채널 프로필을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 비트맵 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 비트맵 범주에 적용 합니다.  
  
 색 조정 또는 회색조 조정 설정을 특정 범주를 지정 하는 즉시 기본 조정 설정이 더 이상에 해당 범주에 적용 합니다. 예를 들어 출력 채널 프로필 및 기본 범주에 대 한 조정 매트릭스를 지정 합니다. 호출 하 여 비트맵 범주에 대 한 출력 채널 프로필을 설정 하는 경우는 <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> 메서드를 기본 출력 채널 프로필 비트맵에 적용 되지 것입니다. 나중에 비트맵의 선택을 취소 하는 경우 호출 하 여 출력 채널 프로필은 <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A> 메서드를 기본 출력 채널 프로필 비트맵 범주는 전환 되지 않습니다; 대신, 비트맵 범주는 출력 채널 프로필 설정이 없습니다. 마찬가지로, 비트맵 범주는 전환 되지 않고 기본 색 조정 매트릭스입니다. 대신, 비트맵 범주 없는 색 조정 매트릭스를 갖습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>색 다시 매핑 테이블을 지웁니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 범주에 대한 색 다시 매핑 테이블을 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 다시 매핑 테이블, 비트맵 범주에 대 한 서로 다른 매핑 변경 테이블 및 펜 범주에 대 한 서로 다른 매핑 변경 테이블을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">다시 매핑 테이블이 지워지는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
        <summary>지정된 범주에 대한 색 다시 매핑 테이블을 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 다시 매핑 테이블, 비트맵 범주에 대 한 서로 다른 매핑 변경 테이블 및 펜 범주에 대 한 서로 다른 매핑 변경 테이블을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정은 펜 범주에 적용 합니다.  
  
 색 조정 또는 회색조 조정 설정을 특정 범주를 지정 하는 즉시 기본 조정 설정이 더 이상에 해당 범주에 적용 합니다. 예를 들어, 다시 매핑 테이블 및 기본 범주에 대 한 감마 값을 지정 합니다. 호출 하 여 펜 범주에 대 한 다시 매핑 테이블을 설정 하는 경우는 <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> 메서드를 기본 매핑 변경 테이블 펜에 적용 되지 것입니다. 호출 하 여 나중에 펜 다시 매핑 테이블 선택을 취소 하면는 <xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A> 메서드를 펜 범주는 기본 다시 매핑 테이블에는 전환 되지 않습니다; 대신, 펜 범주는 다시 매핑 테이블이 없습니다. 마찬가지로, 펜 범주는 전환 되지 않고 기본 감마 값입니다. 대신, 펜 범주 감마 값을 갖습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>임계값을 지웁니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 범주에 대한 임계값을 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 임계값은 0k 각 색상 구성 요소에 대 한 구분 지점을 지정 하는 1에서에서 값입니다. 예를 들어 임계값 0.7로 설정 되 고 렌더링 하는 색을 가진 빨간색, 녹색 및 파랑 구성 요소는 230, 50, 및 220 각각 가정 합니다. 빨강 구성 230 보다 크면 0.7x255, 빨강 구성 요소를 255 (전체 강도)로 변경 됩니다. 녹색 구성 요소를 0으로 변경 됩니다 (50) 녹색 구성 0.7x255, 보다 작습니다. 파랑 구성 요소 (220) 보다 크면 0.7x255, 파랑 구성 요소를 255로 변경 됩니다.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 임계값, 비트맵 범주에 대 한 서로 다른 임계값 및 펜 범주에 대 한 서로 다른 임계값을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">임계값이 지워지는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
        <summary>지정된 범주에 대한 임계값을 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 임계값은 0k 각 색상 구성 요소에 대 한 구분 지점을 지정 하는 1에서에서 값입니다. 예를 들어 임계값 0.7로 설정 되 고 렌더링 하는 색을 가진 빨간색, 녹색 및 파랑 구성 요소는 230, 50, 및 220 각각 가정 합니다. 빨강 구성 230 보다 크면 0.7x55, 빨강 구성 요소를 255 (전체 강도)로 변경 됩니다. 녹색 구성 요소를 0으로 변경 됩니다 (50) 녹색 구성 0.7x255, 보다 작습니다. 파랑 구성 요소 (220) 보다 크면 0.7x255, 파랑 구성 요소를 255로 변경 됩니다.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 임계값, 비트맵 범주에 대 한 서로 다른 임계값 및 펜 범주에 대 한 서로 다른 임계값을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
 색 조정 또는 회색조 조정 설정을 특정 범주를 지정 하는 즉시 기본 조정 설정이 더 이상에 해당 범주에 적용 합니다. 예를 들어, 임계값 및 기본 범주에 대 한 감마 값을 지정 합니다. 호출 하 여 펜 범주에 대 한 임계값을 설정 하는 경우는 <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> 메서드를 기본 임계값 펜에 적용 되지 것입니다. 호출 하 여 나중에 펜 임계값 선택을 취소 하면는 <xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A> 메서드를 기본 임계값이 펜 범주는 전환 되지 않습니다; 대신, 펜 범주는 임계값이 없는 합니다. 마찬가지로, 펜 범주는 전환 되지 않고 기본 감마 값입니다. 대신, 펜 범주 감마 값을 갖습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 개체의 정확한 복사본을 만듭니다.</summary>
        <returns>이 클래스가 만드는 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 개체는 임의의 개체로 캐스팅됩니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> 사용을 마치면 <xref:System.Drawing.Imaging.ImageAttributes>를 호출합니다. <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> 메서드를 사용하면 <xref:System.Drawing.Imaging.ImageAttributes>를 사용할 수 없게 됩니다. 호출한 후 <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A>에 대 한 모든 참조를 해제 해야는 <xref:System.Drawing.Imaging.ImageAttributes> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.Drawing.Imaging.ImageAttributes> 차지한 합니다. 자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
> [!NOTE]
>  <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Drawing.Imaging.ImageAttributes>를 호출하십시오. 이렇게 하지 않으면 가비지 수집기가 <xref:System.Drawing.Imaging.ImageAttributes> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ImageAttributes ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdjustedPalette">
      <MemberSignature Language="C#" Value="public void GetAdjustedPalette (System.Drawing.Imaging.ColorPalette palette, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetAdjustedPalette(class System.Drawing.Imaging.ColorPalette palette, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetAdjustedPalette (palette As ColorPalette, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetAdjustedPalette(System::Drawing::Imaging::ColorPalette ^ palette, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="palette" Type="System.Drawing.Imaging.ColorPalette" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="palette">입력할 때 조정될 색상표를 포함하고 출력할 때 조정된 색상표를 포함하는 <see cref="T:System.Drawing.Imaging.ColorPalette" />입니다.</param>
        <param name="type">해당 조정 설정이 색상표에 적용되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
        <summary>지정된 범주의 조정 설정에 따라 색상표에서 색을 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 색 다시 매핑 테이블, 비트맵 범주에 대 한 서로 다른 색 다시 매핑 테이블 및 펜 범주에 대 한 서로 다른 색 다시 매핑 테이블을 지정할 수 있습니다.  
  
 호출 하는 경우는 <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> 메서드를 색상표 색을 조정 하는 데 사용 되는 조정 범주를 지정할 수 있습니다. 예를 들어, 전달 하는 경우 <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> 에 <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> 메서드, 조정 설정은 비트맵 범주의 색상표 색을 조정 하는 데 사용 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBrushRemapTable">
      <MemberSignature Language="C#" Value="public void SetBrushRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBrushRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBrushRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBrushRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">
          <see cref="T:System.Drawing.Imaging.ColorMap" /> 개체의 배열입니다.</param>
        <summary>브러시 범주에 대한 색 다시 매핑 테이블을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 색 다시 매핑 테이블은 배열을 <xref:System.Drawing.Imaging.ColorMap> 구조입니다. 각 <xref:System.Drawing.Imaging.ColorMap> 구조에는 두 개의 <xref:System.Drawing.Color> 개체: 이전 색 및 해당 새 색을 지정 하는 지정 하는 하나입니다. 색 다시 매핑 테이블에서 오래 된 색 중 하 나와 일치 하는 렌더링 하는 동안 해당 새로운 색으로 변경 됩니다.  
  
 호출의 <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> 메서드 전달 것과 동일한 결과가 <xref:System.Drawing.Imaging.ColorAdjustType.Brush> 에 <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> 메서드. 지정 된 다시 매핑 테이블 브러시로 채워진 메타 파일의 항목에 적용 됩니다.  
  
 이 메서드를 사용 하 여 메타 파일 에서만 사용할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
1.  단일 요소를 만듭니다 <xref:System.Drawing.Imaging.ColorMap> 이전 색으로 빨강, 녹색을 새 색을 보유 하는 배열입니다.  
  
2.  새로 만든이 배열을 전달 <xref:System.Drawing.Imaging.ImageAttributes> 개체입니다.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>색상 키(투명도 범위)를 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="colorLow">로우 컬러 키 값입니다.</param>
        <param name="colorHigh">하이 컬러 키 값입니다.</param>
        <summary>기본 범주에 대한 색상 키를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 다양 한 색 투명 하 게 설정할 수 있도록 고가 저가의 하이 컬러 키 값을 설정 합니다. 모든 색 세 구성 요소 (빨강, 녹색, 파랑) 및 로우 컬러 키의 해당 구성 요소 간의 각을 투명 하 게 합니다.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 색상 키, 비트맵 범주에 대 한 서로 다른 색상 키 및 펜 범주에 대 한 서로 다른 색 키를 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
   
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%28System.Drawing.Color%2CSystem.Drawing.Color%2CSystem.Drawing.Imaging.ColorAdjustType%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorLow">로우 컬러 키 값입니다.</param>
        <param name="colorHigh">하이 컬러 키 값입니다.</param>
        <param name="type">색상 키가 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
        <summary>지정된 범주에 대한 색상 키(투명도 범위)를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 다양 한 색 투명 하 게 설정할 수 있도록 고가 저가의 하이 컬러 키 값을 설정 합니다. 모든 색 세 구성 요소 (빨강, 녹색, 파랑) 및 로우 컬러 키의 해당 구성 요소 간의 각을 투명 하 게 합니다.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 색상 키, 비트맵 범주에 대 한 서로 다른 색상 키 및 펜 범주에 대 한 서로 다른 색 키를 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
 색 조정 또는 회색조 조정 설정을 특정 범주를 지정 하는 즉시 기본 조정 설정이 더 이상에 해당 범주에 적용 합니다. 예를 들어 기본 범주에 대 한 조정 설정의 컬렉션을 지정 한다고 가정해 보겠습니다. 전달 하 여 펜 범주에 대 한 색상 키를 설정 하는 경우 <xref:System.Drawing.Imaging.ColorAdjustType.Pen> 에 <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> 메서드를 기본 조정 설정이 적용 되지 것입니다 펜에 있습니다.  
  
   
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
1.  열립니다는 <xref:System.Drawing.Image> Circle.bmp 파일을 사용 하 고 화면에 그립니다.  
  
2.  만듭니다는 <xref:System.Drawing.Imaging.ImageAttributes> 개체를 호출 하 여 해당 색 키를 설정 된 <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> 메서드.  
  
3.  색 키를 사용 하 여 화면에 이미지를 그립니다는 <xref:System.Drawing.Imaging.ImageAttributes> 개체입니다.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrices">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>색 조정 매트릭스와 회색조 조정 매트릭스를 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">색 조정 매트릭스입니다.</param>
        <param name="grayMatrix">회색조 조정 매트릭스입니다.</param>
        <summary>기본 범주에 대한 색 조정 매트릭스와 회색조 조정 매트릭스를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 조정 매트릭스, 비트맵 범주에 대 한 서로 다른 조정 매트릭스 및 펜 범주에 서로 다른 조정 매트릭스를 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
 호출의 <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> 호출 하는 것과 같습니다는 <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> 메서드와 전달 <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> 에 대 한는 `flags` 매개 변수입니다. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> (회색 포함)는 모든 색이 색 조정 매트릭스를 회색조 조정 매트릭스 하지에 의해 조정 지정 합니다. 따라서이 메서드에 전달 된 회색조 조정 매트릭스는 영향을 주지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">색 조정 매트릭스입니다.</param>
        <param name="grayMatrix">회색조 조정 매트릭스입니다.</param>
        <param name="flags">색 조정 및 회색조 조정 매트릭스의 영향을 받을 색과 이미지의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" />의 요소입니다.</param>
        <summary>기본 범주에 대한 색 조정 매트릭스와 회색조 조정 매트릭스를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 조정 매트릭스, 비트맵 범주에 대 한 서로 다른 조정 매트릭스 및 펜 범주에 서로 다른 조정 매트릭스를 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">색 조정 매트릭스입니다.</param>
        <param name="grayMatrix">회색조 조정 매트릭스입니다.</param>
        <param name="mode">색 조정 및 회색조 조정 매트릭스의 영향을 받을 색과 이미지의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" />의 요소입니다.</param>
        <param name="type">색 조정 및 회색조 조정 매트릭스가 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
        <summary>지정된 범주에 대한 색 조정 매트릭스와 회색조 조정 매트릭스를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 조정 매트릭스, 비트맵 범주에 대 한 서로 다른 조정 매트릭스 및 펜 범주에 서로 다른 조정 매트릭스를 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
 색 조정 또는 회색조 조정 설정을 특정 범주를 지정 하는 즉시 기본 조정 설정이 더 이상에 해당 범주에 적용 합니다. 예를 들어 기본 범주에 대 한 조정 설정의 컬렉션을 지정 한다고 가정해 보겠습니다. 전달 하 여 펜 범주에 대 한 색 조정 및 회색조 조정 매트릭스를 설정 하면 <xref:System.Drawing.Imaging.ColorAdjustType.Pen> 에 <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A> 메서드를 기본 조정 설정이 적용 되지 것입니다 펜에 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>색 조정 매트릭스를 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">색 조정 매트릭스입니다.</param>
        <summary>기본 범주에 대한 색 조정 매트릭스를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 색 조정 매트릭스, 비트맵 범주에 대 한 서로 다른 색 조정 매트릭스 및 여전히 펜 범주에 대 한 서로 다른 색 조정 매트릭스를 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
 호출의 <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> 호출 하는 것과 같습니다는 <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> 메서드와 전달 <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> 에 대 한는 `flags` 매개 변수입니다. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> (회색 포함)는 모든 색이 색 조정 매트릭스에 의해 조정 지정  
  
   
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
1.  값이 128 보통 회색 단색으로 채워진 사각형으로 설정 하는 모든 색 사각형 이미지를 만듭니다. 다음 코드는 화면에이 사각형 이미지를 그립니다.  
  
2.  만듭니다는 <xref:System.Drawing.Imaging.ColorMatrix> 설정 하 고 해당 <xref:System.Drawing.Drawing2D.Matrix> 1.75 이미지의 빨간색 구성 요소를 강조 하는 위치입니다.  
  
3.  만듭니다는 <xref:System.Drawing.Imaging.ImageAttributes> 개체와 호출 된 <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> 메서드.  
  
4.  사용 하 여 화면에 (두 번째 사각형) 이미지를 그립니다는 <xref:System.Drawing.Imaging.ColorMatrix> 에 설정 된 <xref:System.Drawing.Imaging.ImageAttributes> 개체입니다.  
  
 두 번째 사각형에는 빨간색 강조 색을 참고 합니다.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">색 조정 매트릭스입니다.</param>
        <param name="flags">색 조정 매트릭스의 영향을 받을 색과 이미지의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" />의 요소입니다.</param>
        <summary>기본 범주에 대한 색 조정 매트릭스를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 색 조정 매트릭스, 비트맵 범주에 대 한 서로 다른 색 조정 매트릭스 및 여전히 펜 범주에 대 한 서로 다른 색 조정 매트릭스를 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
   
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">색 조정 매트릭스입니다.</param>
        <param name="mode">색 조정 매트릭스의 영향을 받을 색과 이미지의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" />의 요소입니다.</param>
        <param name="type">색 조정 매트릭스가 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
        <summary>지정된 범주에 대한 색 조정 매트릭스를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 색 조정 매트릭스, 비트맵 범주에 대 한 서로 다른 색 조정 매트릭스 및 여전히 펜 범주에 대 한 서로 다른 색 조정 매트릭스를 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
 색 조정 또는 회색조 조정 설정을 특정 범주를 지정 하는 즉시 기본 조정 설정이 더 이상에 해당 범주에 적용 합니다. 예를 들어 기본 범주에 대 한 조정 설정의 컬렉션을 지정 한다고 가정해 보겠습니다. 전달 하 여 펜 범주에 대 한 색 조정 매트릭스를 설정 하면 <xref:System.Drawing.Imaging.ColorAdjustType.Pen> 에 <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> 메서드를 기본 조정 설정이 적용 되지 것입니다 펜에 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> 메서드를 사용하는 방법을 보여 줍니다. 이 예제를 실행 하려면 Windows Form과 호출에 코드를 붙여 `RotateColors` 폼의 <xref:System.Windows.Forms.Control.Paint> 전달 하는 이벤트 처리 메서드를 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.  
  
 [!code-csharp[System.Drawing.RotateColors#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RotateColors/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.RotateColors#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RotateColors/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>감마 값을 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="gamma">감마 보정 값입니다.</param>
        <summary>기본 범주에 대한 감마 값을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 일반적인 값은 `gamma` 를 2.2 1.0에서 매개 변수는; 그러나 5.0 값 0.1에서 유용한 경우도 중일 합니다.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 감마 값, 비트맵 범주에 대 한 다른 감마 값 및 여전히 펜 범주에 대 한 다른 감마 값을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
 일반적인 범위를 벗어난 감마 값은 이전 CRT 모니터에 대 한 또는 비정상적인 조명 상황의 예: 산업 환경 또는 디스플레이 창에 있는 모니터에 대 한 유용할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 또한를 시스템에서 사용할 경로 이미지 이름에 이미지 파일 경로 변경 해야 합니다. 이 코드에서는 다음 작업을 수행합니다.  
  
1.  열립니다는 <xref:System.Drawing.Image> Camera.jpg 파일을 사용 하 고 감마에 대 한 기본값을 사용 하 여 화면에 그립니다.  
  
2.  만듭니다는 <xref:System.Drawing.Imaging.ImageAttributes> 개체를 호출 하 여 해당 감마 2.2에 설정 된 <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> 메서드.  
  
3.  설정할 감마 값을 사용 하 여 화면에 (두 번째 카메라) 이미지를 그립니다는 <xref:System.Drawing.Imaging.ImageAttributes> 개체입니다.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="gamma">감마 보정 값입니다.</param>
        <param name="type">감마 값이 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 열거형의 요소입니다.</param>
        <summary>지정된 범주에 대한 감마 값을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 일반적인 값은 `gamma` 를 2.2 1.0에서 매개 변수는; 그러나 5.0 값 0.1에서 유용한 경우도 중일 합니다.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 감마 값, 비트맵 범주에 대 한 다른 감마 값 및 여전히 펜 범주에 대 한 다른 감마 값을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
 색 조정 또는 회색조 조정 설정을 특정 범주를 지정 하는 즉시 기본 조정 설정이 더 이상에 해당 범주에 적용 합니다. 예를 들어 기본 범주에 대 한 조정 설정의 컬렉션을 지정 한다고 가정해 보겠습니다. 전달 하 여 펜 범주에 대 한 감마 값을 설정 하면 <xref:System.Drawing.Imaging.ColorAdjustType.Pen> 에 <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> 메서드를 기본 조정 설정이 적용 되지 것입니다 펜에 있습니다.  
  
 일반적인 범위를 벗어난 감마 값은 이전 CRT 모니터에 대 한 또는 비정상적인 조명 상황의 예: 산업 환경 또는 디스플레이 창에 있는 모니터에 대 한 유용할 수 있습니다.  
  
   
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%28System.Single%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>색 조정을 해제합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 범주에 대한 색 조정을 해제합니다. <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> 메서드를 호출하기 전의 상태로 색 조정 설정을 복구하려면 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> 메서드를 호출합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 감마 값, 비트맵 범주에 대 한 다른 감마 값 및 여전히 펜 범주에 대 한 다른 감마 값을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
   
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
1.  열립니다는 <xref:System.Drawing.Image> Camera.jpg 파일을 사용 하는 합니다.  
  
2.  감마 값을 설정 하는 <xref:System.Drawing.Imaging.ImageAttributes> 0.25 개체입니다.  
  
3.  화면에 이미지를 그립니다.  
  
4.  <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> 메서드를 호출합니다.  
  
5.  화면에 이미지 (두 번째 카메라)을 그립니다. 그러나 때문에 <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> 1.0 및 이미지의 값으로 기본값 설정 감마 기본 감마 설정 사용 하 여 화면에 그려지는, 메서드를 호출 했습니다.  
  
 왼쪽 이미지의 크기는 매우 (0.25 감마) 희미하게 및 오른쪽 이미지에 더 많은 대비 (1.0 감마) note 합니다.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">색 보정 기능이 해제되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
        <summary>지정된 범주에 대한 색 조정을 해제합니다. <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> 메서드를 호출하기 전의 상태로 색 조정 설정을 복구하려면 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> 메서드를 호출합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 감마 값, 비트맵 범주에 대 한 다른 감마 값 및 여전히 펜 범주에 대 한 다른 감마 값을 지정할 수 있습니다.  
  
   
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>CMYK(녹청, 자홍, 노랑, 검정) 출력 채널을 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
      </Parameters>
      <Docs>
        <param name="flags">출력 채널을 지정하는 <see cref="T:System.Drawing.Imaging.ColorChannelFlag" />의 요소입니다.</param>
        <summary>기본 범주에 대한 CMYK(녹청, 자홍, 노랑, 검정) 출력 채널을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> 이미지 CMYK 색 공간을 변환 하 여 CMYK 색 채널의 농도 검사할 메서드. 예를 들어 다음과 같이 가정는 <xref:System.Drawing.Imaging.ImageAttributes> 비트맵 출력 채널을 설정 하 고 개체 <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC>합니다. 경로 전달 하는 경우 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드 각 픽셀의 녹청 요소는 계산 필드 및 렌더링된 된 이미지의 각 픽셀은 녹청 채널의 강도 나타내는 회색가 됩니다. 마찬가지로, 자홍, 노랑 및 검은색 채널의 강도 나타내는 이미지를 렌더링할 수 있습니다.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 출력 채널 및 비트맵 범주에 대 한 다양 한 출력 채널을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 비트맵 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 비트맵 범주에 적용 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> 메서드를 사용하는 방법을 보여 줍니다. 이 예제를 실행 하려면 Windows Form에 다음 코드를 붙여 넣습니다. 폼의 처리 <xref:System.Windows.Forms.Control.Paint> 이벤트 및 호출 `ShowOutputChannels`전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="flags">출력 채널을 지정하는 <see cref="T:System.Drawing.Imaging.ColorChannelFlag" />의 요소입니다.</param>
        <param name="type">출력 채널이 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
        <summary>지정된 범주에 대한 CMYK(녹청, 자홍, 노랑, 검정) 출력 채널을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> 이미지 CMYK 색 공간을 변환 하 여 CMYK 색 채널의 농도 검사할 메서드. 예를 들어 다음과 같이 가정는 <xref:System.Drawing.Imaging.ImageAttributes> 비트맵 출력 채널을 설정 하 고 개체 <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC>합니다. 경로 전달 하는 경우 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드 각 픽셀의 녹청 요소는 계산 필드 및 렌더링된 된 이미지의 각 픽셀은 녹청 채널의 강도 나타내는 회색가 됩니다. 마찬가지로, 자홍, 노랑 및 검은색 채널의 강도 나타내는 이미지를 렌더링할 수 있습니다.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 출력 채널 및 비트맵 범주에 대 한 다양 한 출력 채널을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 비트맵 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 비트맵 범주에 적용 합니다.  
  
 색 조정 또는 회색조 조정 설정을 특정 범주를 지정 하는 즉시 기본 조정 설정이 더 이상에 해당 범주에 적용 합니다. 예를 들어 기본 범주에 대 한 조정 설정의 컬렉션을 지정 한다고 가정해 보겠습니다. 전달 하 여 비트맵 범주에 대 한 출력 채널을 설정 하는 경우 <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> 에 <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> 메서드를 기본 조정 설정이 적용 되지 것입니다 비트맵에 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> 메서드를 사용하는 방법을 보여 줍니다. 이 예제를 실행 하려면 Windows Form에 다음 코드를 붙여 넣습니다. 폼의 처리 <xref:System.Windows.Forms.Control.Paint> 이벤트 및 호출 `ShowOutputChannels`전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>출력 채널 색 프로필 파일을 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">색 프로필 파일의 경로 이름입니다. 색 프로필 파일이 %SystemRoot%\System32\Spool\Drivers\Color 디렉터리에 있으면 이 매개 변수는 파일 이름이 될 수 있습니다. 그렇지 않으면 이 매개 변수는 정규화된 경로 이름이어야 합니다.</param>
        <summary>기본 범주에 대한 출력 채널 색 프로필 파일을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> 및 <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> 색 채널을 CMYK (녹청, 자홍-노랑-검정) 색상 공간 이미지를 변환 하 고 cmyk의 농도 검사할 메서드. 예를 들어, 다음 단계를 수행 하는 코드를 작성 합니다.  
  
1.  만들기는 <xref:System.Drawing.Image>합니다.  
  
2.  만들기는 <xref:System.Drawing.Imaging.ImageAttributes> 개체입니다.  
  
3.  전달 <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> 에 <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> 의 메서드는 <xref:System.Drawing.Imaging.ImageAttributes> 개체입니다.  
  
4.  색 프로필 파일의 경로 이름을 전달 하는 <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> 의 메서드는 <xref:System.Drawing.Imaging.ImageAttributes> 개체입니다.  
  
5.  전달에 대 한 경로 <xref:System.Drawing.Image> 및 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드.  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 색 프로필 파일을 사용 하 여는 이미지의 각 픽셀의 녹청 요소를 계산 하는 하 고 렌더링된 된 이미지의 각 픽셀은 녹청 채널의 강도 나타내는 회색이 됩니다.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 출력 채널 색 프로필 파일 및 비트맵 범주에 대 한 다양 한 출력 채널 색 프로필 파일을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 비트맵 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 비트맵 범주에 적용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">색 프로필 파일의 경로 이름입니다. 색 프로필 파일이 %SystemRoot%\System32\Spool\Drivers\Color 디렉터리에 있으면 이 매개 변수는 파일 이름이 될 수 있습니다. 그렇지 않으면 이 매개 변수는 정규화된 경로 이름이어야 합니다.</param>
        <param name="type">출력 채널 색 프로필 파일이 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
        <summary>지정된 범주에 대한 출력 채널 색 프로필 파일을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> 및 <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> 색 채널을 CMYK (녹청, 자홍-노랑-검정) 색상 공간 이미지를 변환 하 고 cmyk의 농도 검사할 메서드. 예를 들어, 다음 단계를 수행 하는 코드를 작성 합니다.  
  
1.  만들기는 <xref:System.Drawing.Image>합니다.  
  
2.  만들기는 <xref:System.Drawing.Imaging.ImageAttributes> 개체입니다.  
  
3.  전달 <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> 에 <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> 의 메서드는 <xref:System.Drawing.Imaging.ImageAttributes> 개체입니다.  
  
4.  색 프로필 파일의 경로 이름을 전달 하는 <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> 의 메서드는 <xref:System.Drawing.Imaging.ImageAttributes> 개체입니다.  
  
5.  전달에 대 한 경로 <xref:System.Drawing.Image> 및 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드.  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 색 프로필 파일을 사용 하 여는 이미지의 각 픽셀의 녹청 요소를 계산 하는 하 고 렌더링된 된 이미지의 각 픽셀은 녹청 채널의 강도 나타내는 회색이 됩니다.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 출력 채널 색 프로필 파일 및 비트맵 범주에 대 한 다양 한 출력 채널 색 프로필 파일을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 비트맵 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 비트맵 범주에 적용 합니다.  
  
 색 조정 또는 회색조 조정 설정을 특정 범주를 지정 하는 즉시 기본 조정 설정이 더 이상에 해당 범주에 적용 합니다. 예를 들어 기본 범주에 대 한 조정 설정의 컬렉션을 지정 한다고 가정해 보겠습니다. 비트맵 범주에 대 한 출력 채널 색 프로필 파일을 전달 하 여 설정 하는 경우 <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> 에 <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> 메서드를 기본 조정 설정이 적용 되지 것입니다 비트맵에 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>색 다시 매핑 테이블을 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">
          <see cref="T:System.Drawing.Imaging.ColorMap" /> 형식의 색 쌍 배열입니다. 각 색 쌍은 기존 색(첫째 값)과 매핑될 색(둘째 값)으로 구성됩니다.</param>
        <summary>기본 범주에 대한 색 다시 매핑 테이블을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 색 다시 매핑 테이블은 배열을 <xref:System.Drawing.Imaging.ColorMap> 구조입니다. 각 <xref:System.Drawing.Imaging.ColorMap> 구조에는 두 개의 <xref:System.Drawing.Color> 개체: 이전 색 및 해당 새 색을 지정 하는 지정 하는 하나입니다. 색 다시 매핑 테이블에서 오래 된 색 중 하 나와 일치 하는 렌더링 하는 동안 해당 새로운 색으로 변경 됩니다.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주, 비트맵 범주에 대 한 색 다시 매핑 테이블 및 펜 범주에 대 한 서로 다른 색 다시 매핑 테이블에 대 한 색 다시 매핑을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
   
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
1.  이미지 (빨간색 원), Circle2.jpg로 저장, 해당 이미지를 만들고 화면에 그립니다.  
  
2.  녹색에서 빨간색 매핑되는 색 맵을 만듭니다.  
  
3.  마찬가지로 이번 색 맵을 사용 하 여 화면에 앞서 만든 이미지를 그립니다.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap(), type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="map">
          <see cref="T:System.Drawing.Imaging.ColorMap" /> 형식의 색 쌍 배열입니다. 각 색 쌍은 기존 색(첫째 값)과 매핑될 색(둘째 값)으로 구성됩니다.</param>
        <param name="type">색 다시 매핑 테이블이 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
        <summary>지정된 범주에 대한 색 다시 매핑 테이블을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 색 다시 매핑 테이블은 배열을 <xref:System.Drawing.Imaging.ColorMap> 구조입니다. 각 <xref:System.Drawing.Imaging.ColorMap> 구조에는 두 개의 <xref:System.Drawing.Color> 개체: 이전 색 및 해당 새 색을 지정 하는 지정 하는 하나입니다. 색 다시 매핑 테이블에서 오래 된 색 중 하 나와 일치 하는 렌더링 하는 동안 해당 새로운 색으로 변경 됩니다.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주, 비트맵 범주에 대 한 색 다시 매핑 테이블 및 펜 범주에 대 한 서로 다른 색 다시 매핑 테이블에 대 한 색 다시 매핑을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
 색 조정 또는 회색조 조정 설정을 특정 범주를 지정 하는 즉시 기본 조정 설정이 더 이상에 해당 범주에 적용 합니다. 예를 들어 기본 범주에 대 한 조정 설정의 컬렉션을 지정 한다고 가정해 보겠습니다. 전달 하 여 펜 범주에 대 한 색 다시 매핑 테이블을 설정 하면 <xref:System.Drawing.Imaging.ColorAdjustType.Pen> 에 <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> 메서드를 기본 조정 설정이 적용 되지 것입니다 펜에 있습니다.  
  
   
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%28System.Drawing.Imaging.ColorMap%5B%5D%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>임계값(투명도 범위)을 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="threshold">임계값을 지정하는 실수입니다.</param>
        <summary>기본 범주에 대한 임계값(투명도 범위)을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 임계값은 0k 각 색상 구성 요소에 대 한 구분 지점을 지정 하는 1에서에서 값입니다. 예를 들어 임계값 0.7로 설정 되 고 렌더링 하는 색을 가진 빨간색, 녹색 및 파랑 구성 요소는 230, 50, 및 220 각각 가정 합니다. 빨강 구성 230 보다 크면 0.7x255, 빨강 구성 요소를 255 (전체 강도)로 변경 됩니다. 녹색 구성 요소를 0으로 변경 됩니다 (50) 녹색 구성 0.7x255, 보다 작습니다. 파랑 구성 요소 (220) 보다 크면 0.7x255, 파랑 구성 요소를 255로 변경 됩니다.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 임계값, 비트맵 범주에 대 한 임계값 및 펜 범주에 대 한 서로 다른 임계값을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
   
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
1.  열립니다는 <xref:System.Drawing.Image> 화면에 그립니다.  
  
2.  만듭니다는 <xref:System.Drawing.Imaging.ImageAttributes> 개체를 사용 하 여 해당 임계값을 설정는 <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> 메서드.  
  
3.  임계값을 사용 하 여 화면에 이미지를 그립니다는 <xref:System.Drawing.Imaging.ImageAttributes> 개체입니다.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="threshold">최대값 또는 최소값으로 매핑될 색을 정렬하기 위해 중단점으로 사용되는 0.0~1.0 사이의 임계값입니다.</param>
        <param name="type">색 임계값이 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
        <summary>지정된 범주에 대한 임계값(투명도 범위)을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 임계값은 0k 각 색상 구성 요소에 대 한 구분 지점을 지정 하는 1에서에서 값입니다. 예를 들어 임계값 0.7로 설정 되 고 렌더링 하는 색을 가진 빨간색, 녹색 및 파랑 구성 요소는 230, 50, 및 220 각각 가정 합니다. 빨강 구성 230 보다 크면 0.7x255, 빨강 구성 요소를 255 (전체 강도)로 변경 됩니다. 녹색 구성 요소를 0으로 변경 됩니다 (50) 녹색 구성 0.7x255, 보다 작습니다. 파랑 구성 요소 (220) 보다 크면 0.7x255, 파랑 구성 요소를 255로 변경 됩니다.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> 개체는 5 개의 조정 범주에 대 한 색 및 회색조 설정을 유지: default, 비트맵, 브러시, 펜, 및 텍스트입니다. 예를 들어 기본 범주에 대 한 임계값, 비트맵 범주에 대 한 임계값 및 펜 범주에 대 한 서로 다른 임계값을 지정할 수 있습니다.  
  
 기본 색 조정 및 회색조 조정 설정은 자체의 조정 설정 되지 않은 모든 범주에 적용 합니다. 예를 들어 펜 범주에 대 한 조정 설정을 지정 하지 않으면 기본 설정이 펜 범주에 적용 합니다.  
  
 색 조정 또는 회색조 조정 설정을 특정 범주를 지정 하는 즉시 기본 조정 설정이 더 이상에 해당 범주에 적용 합니다. 예를 들어 기본 범주에 대 한 조정 설정의 컬렉션을 지정 한다고 가정해 보겠습니다. 전달 하 여 펜 범주에 대 한 임계값을 설정 하면 <xref:System.Drawing.Imaging.ColorAdjustType.Pen> 에 <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> 메서드를 기본 조정 설정이 적용 되지 것입니다 펜에 있습니다.  
  
   
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%28System.Single%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetWrapMode">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>래핑 모드를 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWrapMode (mode As WrapMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="mode">이미지의 반복 복사본을 사용하여 영역을 바둑판식으로 배열하는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.WrapMode" />의 요소입니다.</param>
        <summary>질감을 도형 전체에 또는 도형 경계에 바둑판식으로 배열하는 방법을 결정하는 데 사용되는 래핑 모드를 설정합니다. 질감이 채우려는 도형보다 작은 경우에는 채울 도형 전체에 질감이 바둑판식으로 배열됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출의 <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> 호출 하는 것과 같습니다 <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29> 전달과 <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> 에 대 한는 `color` 매개 변수입니다. <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> 렌더링된 된 이미지 외부의 픽셀 색을 지정합니다. 이 색은 모드 매개 변수가 설정 된 경우 <xref:System.Drawing.Drawing2D.WrapMode.Clamp> 에 전달 된 원본 사각형이 및는 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드 이미지 자체 보다 큽니다.  
  
   
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
1.  열립니다는 <xref:System.Drawing.Image> Circle3.jpg에서 (소규모, 빨강 채워진 원) 파일을 화면에 그립니다.  
  
2.  만듭니다는 <xref:System.Drawing.Imaging.ImageAttributes> 개체 및 집합은 <xref:System.Drawing.Drawing2D.WrapMode> 열거형을 <xref:System.Drawing.Drawing2D.WrapMode.Tile>합니다.  
  
3.  만듭니다는 <xref:System.Drawing.TextureBrush> Circle3.jpg 파일에서 이미지를 사용 하 여 합니다.  
  
4.  작은, 빨강 채워진 원으로 채워진 화면에 사각형을 그립니다.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="mode">이미지의 반복 복사본을 사용하여 영역을 바둑판식으로 배열하는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.WrapMode" />의 요소입니다.</param>
        <param name="color">렌더링된 이미지 외부의 픽셀 색을 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 개체입니다. 이 색은 모드 매개 변수가 <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" />로 설정되어 있고, <see cref="Overload:System.Drawing.Graphics.DrawImage" />에 전달된 원본 사각형이 이미지 자체보다 큰 경우 표시됩니다.</param>
        <summary>질감을 도형 전체에 또는 도형 경계에 바둑판식으로 배열하는 방법을 결정하는 데 사용되는 래핑 모드 및 색을 설정합니다. 질감이 채우려는 도형보다 작은 경우에는 채울 도형 전체에 질감이 바둑판식으로 배열됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color, bool clamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color, bool clamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color, bool clamp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="clamp" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mode">이미지의 반복 복사본을 사용하여 영역을 바둑판식으로 배열하는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.WrapMode" />의 요소입니다.</param>
        <param name="color">렌더링된 이미지 외부의 픽셀 색을 지정하는 색 개체입니다. 이 색은 모드 매개 변수가 <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" />로 설정되어 있고, <see cref="Overload:System.Drawing.Graphics.DrawImage" />에 전달된 원본 사각형이 이미지 자체보다 큰 경우 표시됩니다.</param>
        <param name="clamp">이 매개 변수는 아무런 영향을 주지 않습니다. <see langword="false" />로 설정합니다.</param>
        <summary>질감을 도형 전체에 또는 도형 경계에 바둑판식으로 배열하는 방법을 결정하는 데 사용되는 래핑 모드 및 색을 설정합니다. 질감이 채우려는 도형보다 작은 경우에는 채울 도형 전체에 질감이 바둑판식으로 배열됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>