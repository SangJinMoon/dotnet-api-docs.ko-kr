<Type Name="SerialPort" FullName="System.IO.Ports.SerialPort">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="edb46f25768209ef7558903ea96c655667e2e21a" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
    <Meta Name="ms.locfileid" Value="31781045" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SerialPort : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SerialPort extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.IO.Ports.SerialPort" />
  <TypeSignature Language="VB.NET" Value="Public Class SerialPort&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class SerialPort : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Ports</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>직렬 포트 리소스를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 클래스를 사용 하 여 직렬 포트 파일 리소스를 제어 합니다. 이 클래스는 동기 및 이벤트 기반 I/O, pin 및 중단 상태에 대 한 액세스 및 직렬 드라이버 속성에 대 한 액세스를 제공합니다. 또한이 클래스의 기능 줄 바꿈 가능 내부 <xref:System.IO.Stream> 개체를 통해 액세스할 수는 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 속성을 래핑하거나 스트림을 사용 하는 클래스에 전달 합니다.  
  
 <xref:System.IO.Ports.SerialPort> 클래스에는 다음 인코딩을 지원: <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF32Encoding>, 및 코드 페이지는 50000 보다 작은 코드 페이지는 54936 위치나 mscorlib.dll에 정의 된 인코딩.  대체 인코딩을 사용할 수 있지만 사용 해야 합니다는 <xref:System.IO.Ports.SerialPort.ReadByte%2A> 또는 <xref:System.IO.Ports.SerialPort.Write%2A> 메서드 하 고 사용자가 직접 인코딩을 수행 합니다.  
  
 사용 된 <xref:System.IO.Ports.SerialPort.GetPortNames%2A> 현재 컴퓨터에 대 한 유효한 포트를 검색 하는 메서드입니다.  
  
 경우는 <xref:System.IO.Ports.SerialPort> 개체는 읽기 작업 중에 차단 됩니다, 스레드를 중단 하지 않습니다. 대신 기본 하거나 닫을 스트림 또는 삭제는 <xref:System.IO.Ports.SerialPort> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.IO.Ports.SerialPort> 두 사용자 null 모뎀 케이블을 통해 연결 하는 두 개의 별도 컴퓨터에서 채팅할 수 있도록 하는 클래스입니다. 이 예제에서는 사용자는 사용자 이름 및 포트 설정에 대 한 채팅 전에 라는 메시지가 표시 됩니다. 두 컴퓨터 모두이 예제의 전체 기능을 얻기 위해 프로그램을 실행 해야 합니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#10)]
 [!code-csharp[System.IO.Ports.SerialPort#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#10)]
 [!code-vb[System.IO.Ports.SerialPort#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#10)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출할 수 있습니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.IO.Ports.SerialPort" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.IO.Ports.SerialPort" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 지정 되지 않으면 기본 속성 값을 사용 합니다. 예를 들어는 <xref:System.IO.Ports.SerialPort.DataBits%2A> 속성의 기본값 8는 <xref:System.IO.Ports.SerialPort.Parity%2A> 속성의 기본값은 `None` 열거형 값의 <xref:System.IO.Ports.SerialPort.StopBits%2A> 1, 및 c o m 1의 기본 포트 이름 속성의 기본값입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.IO.Ports.SerialPort> 두 사용자 null 모뎀 케이블을 통해 연결 하는 두 개의 별도 컴퓨터에서 채팅할 수 있도록 하는 클래스입니다. 이 예제에서는 사용자는 사용자 이름 및 포트 설정에 대 한 채팅 전에 라는 메시지가 표시 됩니다. 이 코드 예제는에 대해 제공 되는 큰 코드 예제의의 일부는 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::ComponentModel::IContainer ^ container);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">컨테이너에 대한 인터페이스입니다.</param>
        <summary>지정된 <see cref="T:System.ComponentModel.IContainer" /> 개체를 사용하여 <see cref="T:System.IO.Ports.SerialPort" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 지정 되지 않으면 기본 속성 값을 사용 합니다. 예를 들어는 <xref:System.IO.Ports.SerialPort.DataBits%2A> 속성의 기본값 8는 <xref:System.IO.Ports.SerialPort.Parity%2A> 속성의 기본값은 `None` 열거형 값의 <xref:System.IO.Ports.SerialPort.StopBits%2A> 1, 및 c o m 1의 기본 포트 이름 속성의 기본값입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">지정한 포트를 찾거나 열 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="portName">사용할 포트(예:  COM1)입니다.</param>
        <summary>지정된 포트 이름을 사용하여 <see cref="T:System.IO.Ports.SerialPort" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자의 새 인스턴스를 사용 하 여 <xref:System.IO.Ports.SerialPort> 포트 이름을 지정 하려는 경우 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">지정한 포트를 찾거나 열 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String, baudRate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName">사용할 포트(예:  COM1)입니다.</param>
        <param name="baudRate">전송 속도입니다.</param>
        <summary>지정된 포트 이름 및 전송 속도를 사용하여 <see cref="T:System.IO.Ports.SerialPort" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자의 새 인스턴스를 사용 하 여 <xref:System.IO.Ports.SerialPort> 포트 이름 및 전송 속도 지정 하려면 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">지정한 포트를 찾거나 열 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
      </Parameters>
      <Docs>
        <param name="portName">사용할 포트(예:  COM1)입니다.</param>
        <param name="baudRate">전송 속도입니다.</param>
        <param name="parity">
          <see cref="P:System.IO.Ports.SerialPort.Parity" /> 값 중 하나입니다.</param>
        <summary>지정된 포트 이름, 전송 속도 및 패리티 비트를 사용하여 <see cref="T:System.IO.Ports.SerialPort" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자의 새 인스턴스를 사용 하 여 <xref:System.IO.Ports.SerialPort> 포트 이름, 전송 속도 및 패리티 비트를 지정 하려면 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">지정한 포트를 찾거나 열 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName">사용할 포트(예:  COM1)입니다.</param>
        <param name="baudRate">전송 속도입니다.</param>
        <param name="parity">
          <see cref="P:System.IO.Ports.SerialPort.Parity" /> 값 중 하나입니다.</param>
        <param name="dataBits">데이터 비트 값입니다.</param>
        <summary>지정된 포트 이름, 전송 속도, 패리티 비트 및 데이터 비트를 사용하여 <see cref="T:System.IO.Ports.SerialPort" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자의 새 인스턴스를 사용 하 여 <xref:System.IO.Ports.SerialPort> 포트 이름, 전송 속도, 패리티 비트 및 데이터 비트를 지정 하려면 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">지정한 포트를 찾거나 열 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits, valuetype System.IO.Ports.StopBits stopBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits, System::IO::Ports::StopBits stopBits);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
        <Parameter Name="stopBits" Type="System.IO.Ports.StopBits" />
      </Parameters>
      <Docs>
        <param name="portName">사용할 포트(예:  COM1)입니다.</param>
        <param name="baudRate">전송 속도입니다.</param>
        <param name="parity">
          <see cref="P:System.IO.Ports.SerialPort.Parity" /> 값 중 하나입니다.</param>
        <param name="dataBits">데이터 비트 값입니다.</param>
        <param name="stopBits">
          <see cref="P:System.IO.Ports.SerialPort.StopBits" /> 값 중 하나입니다.</param>
        <summary>지정된 포트 이름, 전송 속도, 패리티 비트, 데이터 비트 및 정지 비트를 사용하여 <see cref="T:System.IO.Ports.SerialPort" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자의 새 인스턴스를 사용 하는 <xref:System.IO.Ports.SerialPort> 포트 이름, 전송 속도, 패리티 비트, 데이터 비트를 지정 하 고 비트를 중지 하려는 경우 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">지정한 포트를 찾거나 열 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.IO.Ports.SerialPort" /> 개체의 내부 <see cref="T:System.IO.Stream" /> 개체를 가져옵니다.</summary>
        <value>
          <see cref="T:System.IO.Stream" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명시적 비동기 I/O 작업에 대 한 또는 전달 하려면이 속성을 사용 하는 <xref:System.IO.Ports.SerialPort> 개체는 <xref:System.IO.Stream> 와 같은 래퍼 클래스 <xref:System.IO.StreamWriter>합니다.  
  
 직렬 포트의 열려 있는 모든 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 추상에서 파생 되는 개체를 반환 하는 속성 <xref:System.IO.Stream> 클래스 및 구현 읽기 및 쓰기에서 상속 되며, 프로토타입 사용 하는 메서드는 <xref:System.IO.Stream> 클래스: <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.BeginWrite%2A>, <xref:System.IO.Stream.Read%2A> <xref:System.IO.Stream.ReadByte%2A>, <xref:System.IO.Stream.Write%2A>, 및 <xref:System.IO.Stream.WriteByte%2A>합니다. 이러한 메서드는 래핑된 직렬 리소스를 전달 하는 경우 유용할 수 있습니다는 <xref:System.IO.Stream> 래퍼 클래스입니다.  
  
 래핑된 파일 핸들에 액세스할 수 없으므로 <xref:System.IO.Stream.Length%2A> 및 <xref:System.IO.Stream.Position%2A> 속성이 지원 되지 않습니다 및 <xref:System.IO.Stream.Seek%2A> 및 <xref:System.IO.Stream.SetLength%2A> 메서드가 지원 되지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">스트림이 닫혔습니다. 이런 경우는 <see cref="M:System.IO.Ports.SerialPort.Open" /> 메서드를 호출하지 않았거나 <see cref="M:System.IO.Ports.SerialPort.Close" /> 메서드를 호출했기 때문에 발생할 수 있습니다.</exception>
        <exception cref="T:System.NotSupportedException">스트림이 .NET Compact Framework 응용 프로그램에 있고 다음 메서드 중 하나가 호출된 경우  
  
 <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /><see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /><see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)" /><see cref="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />  
  
 .NET Compact Framework에서 기본 스트림의 비동기 모델을 지원하지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="BaudRate">
      <MemberSignature Language="C#" Value="public int BaudRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BaudRate" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BaudRate" />
      <MemberSignature Language="VB.NET" Value="Public Property BaudRate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BaudRate { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(9600)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>직렬 전송 속도를 가져오거나 설정합니다.</summary>
        <value>전송 속도입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전송 속도 사용자의 직렬 드라이버에서 지원 되어야 합니다. 기본값은 9600 비트 / 초 (초)입니다.  
  
   
  
## Examples  
 설정 하는 방법을 보여 주는 다음 예제는 <xref:System.IO.Ports.SerialPort.BaudRate%2A> 속성을 `9600`합니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#20)]
 [!code-csharp[System.IO.Ports.SerialPort#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#20)]
 [!code-vb[System.IO.Ports.SerialPort#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#20)]  
  
 다음 예제에서는 <xref:System.IO.Ports.SerialPort> 두 사용자 null 모뎀 케이블을 통해 연결 하는 두 개의 별도 컴퓨터에서 채팅할 수 있도록 하는 클래스입니다. 이 예제에서는 사용자는 사용자 이름 및 포트 설정에 대 한 채팅 전에 라는 메시지가 표시 됩니다. 이 코드 예제는에 대해 제공 되는 큰 코드 예제의의 일부는 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 전송 속도가 0보다 작거나 같은 경우 또는 장치에 허용되는 최대 전송 속도보다 큰 경우</exception>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="BreakState">
      <MemberSignature Language="C#" Value="public bool BreakState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BreakState" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BreakState" />
      <MemberSignature Language="VB.NET" Value="Public Property BreakState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BreakState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>중단 신호 상태를 가져오거나 설정합니다.</summary>
        <value>
          포트가 중단 상태에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 중단 신호 상태는 전송을 일시 중단 하 고 줄은 중단 상태 (모든 낮음, 정지 비트 없음)에 배치 하는 경우 발생 해제 될 때까지 합니다. 중단 상태를 입력 하려면이 속성을 설정 `true`합니다. 포트가 중단 상태에 이미 있으면이 속성을 다시 한 번 설정 `true` 예외 되지는지 않습니다. 에 쓸 수 없으면는 <xref:System.IO.Ports.SerialPort> 하는 동안 개체 <xref:System.IO.Ports.SerialPort.BreakState%2A> 은 `true`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
        <exception cref="T:System.InvalidOperationException">스트림이 닫혔습니다. 이런 경우는 <see cref="M:System.IO.Ports.SerialPort.Open" /> 메서드를 호출하지 않았거나 <see cref="M:System.IO.Ports.SerialPort.Close" /> 메서드를 호출했기 때문에 발생할 수 있습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="BytesToRead">
      <MemberSignature Language="C#" Value="public int BytesToRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesToRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BytesToRead" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesToRead As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesToRead { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>수신 버퍼에 있는 데이터의 바이트 수를 가져옵니다.</summary>
        <value>수신 버퍼에 있는 데이터의 바이트 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 직렬 드라이버의 수신 버퍼 뿐만 아니라의 내부 버퍼가 수신 버퍼에 포함 되어는 <xref:System.IO.Ports.SerialPort> 개체 자체입니다.  
  
 때문에 <xref:System.IO.Ports.SerialPort.BytesToRead%2A> 속성은 둘 다 나타냅니다는 <xref:System.IO.Ports.SerialPort> 보다 큰 값을 반환할 수 버퍼와 Windows에서 만든 버퍼는 <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> 만 Windows 만든 버퍼를 나타내는 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">포트가 열려 있지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="BytesToWrite">
      <MemberSignature Language="C#" Value="public int BytesToWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesToWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BytesToWrite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesToWrite As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesToWrite { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>송신 버퍼에 있는 데이터의 바이트 수를 가져옵니다.</summary>
        <value>송신 버퍼에 있는 데이터의 바이트 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 직렬 드라이버의 전송 버퍼 뿐만 아니라의 내부 버퍼가 송신 버퍼에 포함 되어는 <xref:System.IO.Ports.SerialPort> 개체 자체입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우</exception>
        <exception cref="T:System.InvalidOperationException">스트림이 닫혔습니다. 이런 경우는 <see cref="M:System.IO.Ports.SerialPort.Open" /> 메서드를 호출하지 않았거나 <see cref="M:System.IO.Ports.SerialPort.Close" /> 메서드를 호출했기 때문에 발생할 수 있습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="CDHolding">
      <MemberSignature Language="C#" Value="public bool CDHolding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CDHolding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.CDHolding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CDHolding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CDHolding { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>포트의 CD(Carrier Detect) 선 상태를 가져옵니다.</summary>
        <value>
          캐리어가 감지되면 <see langword="true" />이고,  감지되지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 포트에 대해 반송파 감지 줄의 상태를 모니터링 하려면이 속성을 사용할 수 있습니다. 응답 없음 일반적으로 나타내며의 수신기 연결이 끊 캐리어가 삭제 되었습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
        <exception cref="T:System.InvalidOperationException">스트림이 닫혔습니다. 이런 경우는 <see cref="M:System.IO.Ports.SerialPort.Open" /> 메서드를 호출하지 않았거나 <see cref="M:System.IO.Ports.SerialPort.Close" /> 메서드를 호출했기 때문에 발생할 수 있습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>포트 연결을 닫고, <see cref="P:System.IO.Ports.SerialPort.IsOpen" /> 속성을 <see langword="false" />로 설정하고, 내부 <see cref="T:System.IO.Stream" /> 개체를 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 호출을 닫습니다는 <xref:System.IO.Ports.SerialPort> 개체 및 지웁니다에서 수신 및 송신 버퍼입니다. 이 메서드를 호출는 <xref:System.ComponentModel.Component.Dispose?displayProperty=nameWithType> 메서드를 호출 하 여 보호 된 <xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=nameWithType> 메서드는 `disposing` 매개 변수 설정 `true`합니다.  
  
 일부 시간 동안 호출한 후 대기 하는 모든 응용 프로그램에 대 한 모범 사례는 <xref:System.IO.Ports.SerialPort.Close%2A> 메서드를 호출 하기 전에 <xref:System.IO.Ports.SerialPort.Open%2A> 메서드를 포트로 수 닫히지 즉시 적용 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.IO.Ports.SerialPort> 두 사용자 null 모뎀 케이블을 통해 연결 하는 두 개의 별도 컴퓨터에서 채팅할 수 있도록 하는 클래스입니다. 이 예제에서는 사용자는 사용자 이름 및 포트 설정에 대 한 채팅 전에 라는 메시지가 표시 됩니다. 이 코드 예제는에 대해 제공 되는 큰 코드 예제의의 일부는 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="CtsHolding">
      <MemberSignature Language="C#" Value="public bool CtsHolding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CtsHolding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.CtsHolding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CtsHolding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CtsHolding { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>CTS(Clear to Send) 선의 상태를 가져옵니다.</summary>
        <value>
          CTS(Clear to Send) 선이 감지되면 <see langword="true" />이고, 감지되지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Clear to Send CTS () 줄 (RTS/CTS) 하드웨어 핸드셰이킹 보낼 송신/지우기로 요청에 사용 됩니다. CTS 줄은 데이터를 보내기 전에 포트를 통해 쿼리 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
        <exception cref="T:System.InvalidOperationException">스트림이 닫혔습니다. 이런 경우는 <see cref="M:System.IO.Ports.SerialPort.Open" /> 메서드를 호출하지 않았거나 <see cref="M:System.IO.Ports.SerialPort.Close" /> 메서드를 호출했기 때문에 발생할 수 있습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="DataBits">
      <MemberSignature Language="C#" Value="public int DataBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataBits" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DataBits" />
      <MemberSignature Language="VB.NET" Value="Public Property DataBits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataBits { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>바이트 당 데이터 비트의 표준 길이를 가져오거나 설정합니다.</summary>
        <value>데이터 비트 길이입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 대 한 값 범위는 5부터 8입니다. 기본값은 8입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.IO.Ports.SerialPort> 두 사용자 null 모뎀 케이블을 통해 연결 하는 두 개의 별도 컴퓨터에서 채팅할 수 있도록 하는 클래스입니다. 이 예제에서는 사용자는 사용자 이름 및 포트 설정에 대 한 채팅 전에 라는 메시지가 표시 됩니다. 이 코드 예제는에 대해 제공 되는 큰 코드 예제의의 일부는 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">데이터 비트 값이 5보다 작거나 8보다 큰 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="DataReceived">
      <MemberSignature Language="C#" Value="public event System.IO.Ports.SerialDataReceivedEventHandler DataReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Ports.SerialDataReceivedEventHandler DataReceived" />
      <MemberSignature Language="DocId" Value="E:System.IO.Ports.SerialPort.DataReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataReceived As SerialDataReceivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Ports::SerialDataReceivedEventHandler ^ DataReceived;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialDataReceivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.IO.Ports.SerialPort" /> 개체가 나타내는 포트를 통해 데이터를 수신했음을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 이벤트의 항목 중 하나로 인해 발생할 수 있습니다는 <xref:System.IO.Ports.SerialData> 열거형입니다. 운영 체제를 여부이 이벤트를 발생시킬지 여부를 확인 하는 경우 때문에 일부 패리티 오류가 보고 될 수 있습니다.  
  
 <xref:System.IO.Ports.SerialPort.DataReceived> 이벤트는 내부 입력된 버퍼의 바이트 수 및의 값에 관계 없이 Eof 문자 수신 되는 <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> 속성입니다.  
  
 <xref:System.IO.Ports.SerialPort.PinChanged><xref:System.IO.Ports.SerialPort.DataReceived>, 및 <xref:System.IO.Ports.SerialPort.ErrorReceived> 이벤트는 순서 대로 호출 될 수 있고 내부 스트림에 오류를 보고 하는 때와 이벤트 처리기가 실행 하는 경우 사이 약간의 지연이 있을 수 있습니다. 한 번에 하나의 이벤트 처리기를 실행할 수 있습니다.  
  
 <xref:System.IO.Ports.SerialPort.DataReceived> 이벤트를 수신 하는 모든 바이트에 대해 발생 보장 되지 않습니다. 사용 하 여는 <xref:System.IO.Ports.SerialPort.BytesToRead%2A> 버퍼에서 읽을 남아 데이터의 양을 결정 하는 속성입니다.  
  
 <xref:System.IO.Ports.SerialPort.DataReceived> 에서 데이터를 받을 때 보조 스레드에서 이벤트가 발생 된 <xref:System.IO.Ports.SerialPort> 개체입니다. 이 이벤트는 보조 스레드에서 발생 되므로 하지 주 스레드를 주 스레드에서 UI 요소와 같은 일부 요소를 수정 하는 스레딩 예외를 발생 시킬 수 있습니다. 기본에서 요소를 수정 하는 데 필요한 경우 <xref:System.Windows.Forms.Form> 또는 <xref:System.Windows.Forms.Control>, 변경 요청을 사용 하 여 포스트백 <xref:System.Windows.Forms.Control.Invoke%2A>는 적절 한 스레드에에서 작업을 수행 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 이 예제에서는 추가 <xref:System.IO.Ports.SerialDataReceivedEventHandler> 를 <xref:System.IO.Ports.SerialPort.DataReceived> COM1 포트에서 받은 모든 사용 가능한 데이터를 읽을 수 있습니다. 이 코드를 테스트 하려면 it 부서는 데이터를 전송 하는 c o m 1에 연결 된 하드웨어가 note 합니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#06](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#06)]
 [!code-csharp[System.IO.Ports.SerialPort#06](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#06)]
 [!code-vb[System.IO.Ports.SerialPort#06](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#06)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardInBuffer">
      <MemberSignature Language="C#" Value="public void DiscardInBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DiscardInBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.DiscardInBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardInBuffer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardInBuffer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>직렬 드라이버의 수신 버퍼에서 데이터를 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 다음 Visual Basic 코드에 해당: `MSComm1.InBufferCount = 0`합니다. 수신 버퍼 지워지지만 전송 버퍼에는 영향을 주지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
        <exception cref="T:System.InvalidOperationException">스트림이 닫혔습니다. 이런 경우는 <see cref="M:System.IO.Ports.SerialPort.Open" /> 메서드를 호출하지 않았거나 <see cref="M:System.IO.Ports.SerialPort.Close" /> 메서드를 호출했기 때문에 발생할 수 있습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="DiscardNull">
      <MemberSignature Language="C#" Value="public bool DiscardNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DiscardNull" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DiscardNull" />
      <MemberSignature Language="VB.NET" Value="Public Property DiscardNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DiscardNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>포트와 수신 버퍼 간의 전송 시 null 바이트를 무시할지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          null 바이트가 무시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 값은 일반적으로로 설정 `false`, 이진 전송에 적합 합니다.  이 속성을 설정 `true` UTF32 및 u t f 16으로 인코딩된 바이트에 대 한 예기치 않은 결과가 발생할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
        <exception cref="T:System.InvalidOperationException">스트림이 닫혔습니다. 이런 경우는 <see cref="M:System.IO.Ports.SerialPort.Open" /> 메서드를 호출하지 않았거나 <see cref="M:System.IO.Ports.SerialPort.Close" /> 메서드를 호출했기 때문에 발생할 수 있습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="DiscardOutBuffer">
      <MemberSignature Language="C#" Value="public void DiscardOutBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DiscardOutBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.DiscardOutBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardOutBuffer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardOutBuffer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>직렬 드라이버의 전송 버퍼에서 데이터를 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 다음 Visual Basic 코드에 해당: `MSComm1.OutBufferCount = 0`합니다. 전송 버퍼 지워지지만 수신 버퍼에는 영향을 주지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
        <exception cref="T:System.InvalidOperationException">스트림이 닫혔습니다. 이런 경우는 <see cref="M:System.IO.Ports.SerialPort.Open" /> 메서드를 호출하지 않았거나 <see cref="M:System.IO.Ports.SerialPort.Close" /> 메서드를 호출했기 때문에 발생할 수 있습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary>
          <see cref="T:System.IO.Ports.SerialPort" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 public <xref:System.ComponentModel.Component.Dispose%2A> 메서드 및 <xref:System.Object.Finalize%2A> 메서드. <xref:System.ComponentModel.Component.Dispose%2A> 보호 된 호출 <xref:System.IO.Ports.SerialPort.Dispose%2A> 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A> 호출 <xref:System.IO.Ports.SerialPort.Dispose%2A> 와 `disposing` 로 설정 `false`합니다.  
  
 `disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.IO.Ports.SerialPort>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다. 이 메서드는 참조되는 각 개체의 <xref:System.ComponentModel.Component.Dispose%2A> 메서드를 호출합니다.  
  
 이 메서드를 플러시하고 스트림 개체 닫습니다는 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.ComponentModel.Component.Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다. <see cref="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" />를 재정의할 때 이전 <see cref="M:System.ComponentModel.Component.Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오. 구현 하는 방법에 대 한 자세한 내용은 <see cref="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" />, 참조 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
 에 대 한 자세한 내용은 <see cref="M:System.ComponentModel.Component.Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md)합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DsrHolding">
      <MemberSignature Language="C#" Value="public bool DsrHolding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DsrHolding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DsrHolding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DsrHolding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DsrHolding { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>DSR(Data Set Ready) 신호의 상태를 가져옵니다.</summary>
        <value>
          DSR(Data Set Ready) 신호가 포트에 보내진 경우 <see langword="true" />이고, 보내지지 않은 경우 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 데이터 집합 준비/데이터 터미널 준비 DSR/DTR () 핸드셰이킹에 사용 됩니다. 데이터 집합 DSR (Ready) 신호가 일반적으로 전송 하 모뎀이 포트에 데이터 전송 또는 수신 데이터에 대 한 준비가 되었음을 나타냅니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
        <exception cref="T:System.InvalidOperationException">스트림이 닫혔습니다. 이런 경우는 <see cref="M:System.IO.Ports.SerialPort.Open" /> 메서드를 호출하지 않았거나 <see cref="M:System.IO.Ports.SerialPort.Close" /> 메서드를 호출했기 때문에 발생할 수 있습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="DtrEnable">
      <MemberSignature Language="C#" Value="public bool DtrEnable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DtrEnable" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DtrEnable" />
      <MemberSignature Language="VB.NET" Value="Public Property DtrEnable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DtrEnable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>직렬 통신 동안 DTR(Data Terminal Ready) 신호를 사용할 수 있는지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          DTR(Data Terminal Ready)를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 DTR data Terminal Ready ()는 일반적으로 XON/XOFF 소프트웨어 핸드셰이킹 및 (RTS/CTS) 하드웨어 핸드셰이킹 및 모뎀 정보를 보내는 송신/지우기로 요청 하는 동안 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>텍스트의 전송 전 및 전송 후 변환을 위한 바이트 인코딩을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Text.Encoding" /> 개체입니다. 기본값은 <see cref="T:System.Text.ASCIIEncoding" />입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.IO.Ports.SerialPort.Encoding" /> 속성이 <see langword="null" />로 설정된 경우</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.IO.Ports.SerialPort.Encoding" /> 속성에 설정된 인코딩이 <see cref="T:System.Text.ASCIIEncoding" />, <see cref="T:System.Text.UTF8Encoding" />, <see cref="T:System.Text.UTF32Encoding" />, <see cref="T:System.Text.UnicodeEncoding" />, Windows 싱글바이트 인코딩 중 하나 또는 Windows 더블바이트 인코딩 중 하나가 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ErrorReceived">
      <MemberSignature Language="C#" Value="public event System.IO.Ports.SerialErrorReceivedEventHandler ErrorReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Ports.SerialErrorReceivedEventHandler ErrorReceived" />
      <MemberSignature Language="DocId" Value="E:System.IO.Ports.SerialPort.ErrorReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ErrorReceived As SerialErrorReceivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Ports::SerialErrorReceivedEventHandler ^ ErrorReceived;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialErrorReceivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.IO.Ports.SerialPort" /> 개체가 나타내는 포트에서 오류가 발생했음을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 오류 이벤트에 있는 항목 중 하나로 인해 발생할 수 있습니다는 <xref:System.IO.Ports.SerialError> 열거형입니다. 운영 체제를 여부이 이벤트를 발생시킬지 여부를 확인 하는 경우 때문에 일부 패리티 오류가 보고 될 수 있습니다.  
  
 <xref:System.IO.Ports.SerialPort.PinChanged><xref:System.IO.Ports.SerialPort.DataReceived>, 및 <xref:System.IO.Ports.SerialPort.ErrorReceived> 이벤트는 순서 대로 호출 될 수 있고 내부 스트림에 오류를 보고 하는 때와 이벤트 처리기가 실행 하는 경우 코드 있습니다 하는 경우 사이 약간의 지연이 있을 수 있습니다. 한 번에 하나의 이벤트 처리기를 실행할 수 있습니다.  
  
 스트림의 후행 바이트에서 패리티 오류가 발생 하는 경우 추가 바이트가 126의 값을 사용 하 여 입력된 버퍼에 추가 됩니다.  
  
 <xref:System.IO.Ports.SerialPort.ErrorReceived> 이벤트는에서 오류를 받을 때 보조 스레드에서 발생 된 <xref:System.IO.Ports.SerialPort> 개체입니다. 이 이벤트는 보조 스레드에서 발생 되므로 하지 주 스레드를 주 스레드에서 UI 요소와 같은 일부 요소를 수정 하는 스레딩 예외를 발생 시킬 수 있습니다. 기본에서 요소를 수정 하는 데 필요한 경우 <xref:System.Windows.Forms.Form> 또는 <xref:System.Windows.Forms.Control>, 변경 요청을 사용 하 여 포스트백 <xref:System.Windows.Forms.Control.Invoke%2A>는 적절 한 스레드에에서 작업을 수행 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPortNames">
      <MemberSignature Language="C#" Value="public static string[] GetPortNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetPortNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.GetPortNames" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPortNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetPortNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 컴퓨터의 직렬 포트 이름이 포함된 배열을 가져옵니다.</summary>
        <returns>현재 컴퓨터의 직렬 포트 이름이 포함된 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 된 포트 이름 순서 <xref:System.IO.Ports.SerialPort.GetPortNames%2A> 지정 되지 않았습니다.  
  
 사용 하 여는 <xref:System.IO.Ports.SerialPort.GetPortNames%2A> 올바른 직렬 포트 이름 목록에 대 한 현재 컴퓨터를 쿼리 하는 메서드. 예를 들어, COM1 및 COM2 현재 컴퓨터에 대 한 올바른 직렬 포트 되는지 확인 하려면이 메서드를 사용할 수 있습니다.  
  
 시스템 레지스트리 (예를 들어 HKEY_LOCAL_MACHINE\HARDWARE\DEVICEMAP\SERIALCOMM)에서 포트 이름은 가져옵니다. 레지스트리 부실 나 잘못 된 데이터를 포함 하는 경우 하면 <xref:System.IO.Ports.SerialPort.GetPortNames%2A> 메서드는 잘못 된 데이터를 반환 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.IO.Ports.SerialPort.GetPortNames%2A> 메서드를 직렬 포트 이름을 콘솔에 표시 합니다.  
  
 [!code-cpp[IO.Ports.GetPortNames#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.Ports.GetPortNames/cpp/example.cpp#1)]
 [!code-csharp[IO.Ports.GetPortNames#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Ports.GetPortNames/CS/example.cs#1)]
 [!code-vb[IO.Ports.GetPortNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Ports.GetPortNames/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">직렬 포트 이름을 쿼리하지 못한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Handshake">
      <MemberSignature Language="C#" Value="public System.IO.Ports.Handshake Handshake { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Ports.Handshake Handshake" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.Handshake" />
      <MemberSignature Language="VB.NET" Value="Public Property Handshake As Handshake" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Ports::Handshake Handshake { System::IO::Ports::Handshake get(); void set(System::IO::Ports::Handshake value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.Handshake</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.IO.Ports.Handshake" />의 값을 사용하여 데이터의 직렬 포트 전송을 위한 핸드셰이킹 프로토콜을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.IO.Ports.Handshake" /> 값 중 하나입니다. 기본값은 <see langword="None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 핸드셰이킹 사용 되는 경우 장치에 연결 하는 <xref:System.IO.Ports.SerialPort> 개체 이상 없을 때 데이터 전송을 중지 하도록 지시 (<xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>-1024) 버퍼의 바이트입니다. 장치는 버퍼에 1024 바이트 있을 때 데이터를 다시 보내기 시작 하도록 지시 합니다. 장치 1024 바이트를 초과 하는 블록에 데이터를 보내고 버퍼 오버플로가 발생할 수 있습니다.  
  
 경우는 <xref:System.IO.Ports.SerialPort.Handshake%2A> 속성이 <xref:System.IO.Ports.Handshake.RequestToSendXOnXOff> 및 <xref:System.IO.Ports.SerialPort.CtsHolding%2A> 로 설정 된 `false`, XOff 문자 전송 되지 것입니다. 경우 <xref:System.IO.Ports.SerialPort.CtsHolding%2A> 으로 설정 됩니다 `true`, XOff 문자 받게 될 전에 더 많은 데이터를 보내야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.IO.Ports.SerialPort> 두 사용자 null 모뎀 케이블을 통해 연결 하는 두 개의 별도 컴퓨터에서 채팅할 수 있도록 하는 클래스입니다. 이 예제에서는 사용자는 사용자 이름 및 포트 설정에 대 한 채팅 전에 라는 메시지가 표시 됩니다. 이 코드 예제는에 대해 제공 되는 큰 코드 예제의의 일부는 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 값이 올바른 <see cref="T:System.IO.Ports.Handshake" /> 열거형 값이 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="InfiniteTimeout">
      <MemberSignature Language="C#" Value="public const int InfiniteTimeout = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 InfiniteTimeout = (-1)" />
      <MemberSignature Language="DocId" Value="F:System.IO.Ports.SerialPort.InfiniteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Const InfiniteTimeout As Integer  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: int InfiniteTimeout = -1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>시간 초과가 발생하지 않아야 함을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 값은 함께 사용 되는 <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> 및 <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.IsOpen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOpen { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.IO.Ports.SerialPort" /> 개체의 열림 또는 닫힘 상태를 나타내는 값을 가져옵니다.</summary>
        <value>
          직렬 포트가 열려 있으면 <see langword="true" />이고, 닫혀 있으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.IsOpen%2A> 속성 추적 하는 포트는 호출자가 사용 하기 위해 열려 있는지 여부를 하지 포트 인지 컴퓨터에서 모든 응용 프로그램에서 열려 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">전달된 <see cref="P:System.IO.Ports.SerialPort.IsOpen" />값은 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException">전달된 <see cref="P:System.IO.Ports.SerialPort.IsOpen" /> 값은 빈 문자열("")입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("\n")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="M:System.IO.Ports.SerialPort.ReadLine" /> 및 <see cref="M:System.IO.Ports.SerialPort.WriteLine(System.String)" /> 메서드의 호출 끝을 해석하는 데 사용되는 값을 가져오거나 설정합니다.</summary>
        <value>줄 끝을 나타내는 값입니다. 기본값은 줄 바꿈(<see cref="P:System.Environment.NewLine" />)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 대 한 줄의 끝을 정의 하는 어떤 값 (바이트)를 결정은 <xref:System.IO.Ports.SerialPort.ReadLine%2A> 및 <xref:System.IO.Ports.SerialPort.WriteLine%2A> 메서드. 기본적으로 줄의 끝 값은 <xref:System.Environment.NewLine%2A>합니다. 변경 하면이 다른 값으로 작업할 때 특정 직렬 장치에 같은 목적을 위해 다른 값을 사용 하는 경우.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">속성 값이 비어 있는 경우</exception>
        <exception cref="T:System.ArgumentNullException">속성 값이 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>새 직렬 포트 연결을 엽니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 열린 연결을 하나만 하나만 있을 수 <xref:System.IO.Ports.SerialPort> 개체입니다.  
  
 일부 시간 동안 호출한 후 대기 하는 모든 응용 프로그램에 대 한 모범 사례는 <xref:System.IO.Ports.SerialPort.Close%2A> 메서드를 호출 하기 전에 <xref:System.IO.Ports.SerialPort.Open%2A> 메서드를 포트로 수 닫히지 즉시 적용 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.IO.Ports.SerialPort> 두 사용자 null 모뎀 케이블을 통해 연결 하는 두 개의 별도 컴퓨터에서 채팅할 수 있도록 하는 클래스입니다. 이 예제에서는 사용자는 사용자 이름 및 포트 설정에 대 한 채팅 전에 라는 메시지가 표시 됩니다. 이 코드 예제는에 대해 제공 되는 큰 코드 예제의의 일부는 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">포트에 대한 액세스가 거부된 경우  
  
 \- 또는 -  
  
 현재 프로세스 또는 시스템의 다른 프로세스가 이미 <see cref="T:System.IO.Ports.SerialPort" /> 인스턴스에 의해 또는 관리되지 않는 코드에서 지정된 COM 포트가 열려 있습니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">이 인스턴스의 속성 중 하나 이상이 올바르지 않은 경우. 예를 들어, <see cref="P:System.IO.Ports.SerialPort.Parity" />, <see cref="P:System.IO.Ports.SerialPort.DataBits" /> 또는 <see cref="P:System.IO.Ports.SerialPort.Handshake" /> 속성이 올바른 값이 아니거나, <see cref="P:System.IO.Ports.SerialPort.BaudRate" />가 0 이하거나, <see cref="P:System.IO.Ports.SerialPort.ReadTimeout" /> 또는 <see cref="P:System.IO.Ports.SerialPort.WriteTimeout" /> 속성이 0보다 작고 <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />이 아닌 경우에 해당합니다.</exception>
        <exception cref="T:System.ArgumentException">포트 이름이 "COM"으로 시작하지 않는 경우  
  
 \- 또는 -  
  
 포트의 파일 형식이 지원되지 않는 경우</exception>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.IO.Ports.SerialPort" />의 현재 인스턴스에 지정된 포트가 이미 열려 있습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> 보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Parity">
      <MemberSignature Language="C#" Value="public System.IO.Ports.Parity Parity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Ports.Parity Parity" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.Parity" />
      <MemberSignature Language="VB.NET" Value="Public Property Parity As Parity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Ports::Parity Parity { System::IO::Ports::Parity get(); void set(System::IO::Ports::Parity value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.Parity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>패리티 검사 프로토콜을 가져오거나 설정합니다.</summary>
        <value>패리티 검사 프로토콜을 나타내는 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.IO.Ports.Parity.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 패리티를 1의 개수가 항상 동일 해야 하는 오류 검사 프로시저는-짝수 또는 홀수 인지-비트 오류 없이 전송 되는 각 그룹에 대 한 합니다. 모뎀 간 통신에서는 패리티가에 동의 해야 파티를 전송 하 고 수신 파티 수 있습니다를 배치 하는 매개 변수 중 하나.  
  
 스트림의 후행 바이트에서 패리티 오류가 발생 하는 경우 추가 바이트가 126의 값을 사용 하 여 입력된 버퍼에 추가 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.IO.Ports.SerialPort> 두 사용자 null 모뎀 케이블을 통해 연결 하는 두 개의 별도 컴퓨터에서 채팅할 수 있도록 하는 클래스입니다. 이 예제에서는 사용자는 사용자 이름 및 포트 설정에 대 한 채팅 전에 라는 메시지가 표시 됩니다. 이 코드 예제는에 대해 제공 되는 큰 코드 예제의의 일부는 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 <see cref="P:System.IO.Ports.SerialPort.Parity" /> 값이 올바른 <see cref="T:System.IO.Ports.Parity" /> 열거형 값이 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ParityReplace">
      <MemberSignature Language="C#" Value="public byte ParityReplace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 ParityReplace" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ParityReplace" />
      <MemberSignature Language="VB.NET" Value="Public Property ParityReplace As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte ParityReplace { System::Byte get(); void set(System::Byte value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(63)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>패리티 오류가 발생할 때 데이터 스트림의 잘못된 바이트를 바꾸는 바이트를 가져오거나 설정합니다.</summary>
        <value>잘못된 바이트를 바꾸는 바이트입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 null 문자로 설정 패리티를 바꿀 사용할 수 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="PinChanged">
      <MemberSignature Language="C#" Value="public event System.IO.Ports.SerialPinChangedEventHandler PinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Ports.SerialPinChangedEventHandler PinChanged" />
      <MemberSignature Language="DocId" Value="E:System.IO.Ports.SerialPort.PinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PinChanged As SerialPinChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Ports::SerialPinChangedEventHandler ^ PinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPinChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.IO.Ports.SerialPort" /> 개체가 나타내는 포트에서 데이터가 아닌 신호 이벤트가 발생했음을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 직렬 pin 변경 이벤트의 항목 중 하나로 인해 발생할 수 있습니다는 <xref:System.IO.Ports.SerialPinChange> 열거형입니다. 운영 체제를 여부이 이벤트를 발생시킬지 여부를 확인 하는 경우 때문에 일부 패리티 오류가 보고 될 수 있습니다. 이벤트의 일환으로, pin의 새 값이 설정 됩니다.  
  
 <xref:System.IO.Ports.SerialPort.PinChanged> 이벤트가 때는 <xref:System.IO.Ports.SerialPort> 개체가 <xref:System.IO.Ports.SerialPort.BreakState%2A>, 포트 종료 때 하지는 <xref:System.IO.Ports.SerialPort.BreakState%2A>합니다. 이 동작의 다른 값에 적용 되지 않습니다는 <xref:System.IO.Ports.SerialPinChange> 열거형입니다.  
  
 <xref:System.IO.Ports.SerialPort.PinChanged><xref:System.IO.Ports.SerialPort.DataReceived>, 및 <xref:System.IO.Ports.SerialPort.ErrorReceived> 이벤트는 순서 대로 호출 될 수 있고 내부 스트림에 오류를 보고 하는 때와 이벤트 처리기가 실행 하는 경우 사이 약간의 지연이 있을 수 있습니다. 한 번에 하나의 이벤트 처리기를 실행할 수 있습니다.  
  
 <xref:System.IO.Ports.SerialPort.PinChanged> 보조 스레드에서 이벤트가 발생 합니다. 이 이벤트는 보조 스레드에서 발생 되므로 하지 주 스레드를 주 스레드에서 UI 요소와 같은 일부 요소를 수정 하는 스레딩 예외를 발생 시킬 수 있습니다. 기본에서 요소를 수정 하는 데 필요한 경우 <xref:System.Windows.Forms.Form> 또는 <xref:System.Windows.Forms.Control>, 변경 요청을 사용 하 여 포스트백 <xref:System.Windows.Forms.Control.Invoke%2A>는 적절 한 스레드에에서 작업을 수행 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PortName">
      <MemberSignature Language="C#" Value="public string PortName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PortName" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.PortName" />
      <MemberSignature Language="VB.NET" Value="Public Property PortName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PortName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("COM1")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용할 수 있는 모든 COM 포트를 비롯한 통신 포트를 가져오거나 설정합니다.</summary>
        <value>통신 포트입니다. 기본값은 COM1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 올바른 포트 이름의 목록을 가져올 수 있습니다는 <xref:System.IO.Ports.SerialPort.GetPortNames%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.IO.Ports.SerialPort> 두 사용자 null 모뎀 케이블을 통해 연결 하는 두 개의 별도 컴퓨터에서 채팅할 수 있도록 하는 클래스입니다. 이 예제에서는 사용자는 사용자 이름 및 포트 설정에 대 한 채팅 전에 라는 메시지가 표시 됩니다. 이 코드 예제는에 대해 제공 되는 큰 코드 예제의의 일부는 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.IO.Ports.SerialPort.PortName" /> 속성이 길이가 0인 값으로 설정된 경우  
  
 또는  
  
 <see cref="P:System.IO.Ports.SerialPort.PortName" /> 속성이 "\\\\"로 시작하는 값으로 설정된 경우  
  
 또는  
  
 포트 이름이 잘못된 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.IO.Ports.SerialPort.PortName" /> 속성이 <see langword="null" />로 설정된 경우</exception>
        <exception cref="T:System.InvalidOperationException">지정한 포트가 열려 있는 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.IO.Ports.SerialPort" /> 입력 버퍼를 읽습니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">입력 내용을 쓸 바이트 배열입니다.</param>
        <param name="offset">바이트를 쓸 <c>버퍼</c>의 오프셋입니다.</param>
        <param name="count">읽을 최대 바이트 수입니다. <c>카운트</c>가 입력 버퍼의 바이트 수보다 크면 더 작은 수의 바이트를 읽습니다.</param>
        <summary>
          <see cref="T:System.IO.Ports.SerialPort" /> 입력 버퍼에서 여러 바이트를 읽고 해당 바이트를 바이트 배열의 지정된 오프셋에 씁니다.</summary>
        <returns>읽은 바이트 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트를 읽고 스트림에서 이진 데이터를 읽는 사이 전환 해야 하는 경우 수동으로 바이트를 읽은 데이터를 디코딩하는 같은 이진 데이터와 텍스트 사이의 경계를 신중 하 게 정의 하는 프로토콜을 선택 합니다.  
  
 때문에 <xref:System.IO.Ports.SerialPort> 데이터를 버퍼링 하는 클래스 및에 포함 된 스트림에 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 속성이 없는는 읽을 수 있는 바이트 수에 대 한 충돌할 수 있습니다.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> 바이트를 읽을 수 있지만 이러한 접두사 바이트에 포함 된 스트림에 액세스할 수 없는 속성이 나타낼 수는 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 속성에 버퍼링 되었기 때문에 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 <xref:System.IO.Ports.SerialPort.Read%2A> 메서드 바이트 수가 equals를 읽을 때 다른 작업을 차단 하지 않습니다 `count` 있지만 직렬 포트에서 아직 읽지 않은 바이트는 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">전달된 버퍼가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">지정한 포트가 열려 있지 않은 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> 또는 <paramref name="count" /> 매개 변수가 전달된 <paramref name="buffer" />의 올바른 영역 밖에 있는 경우 <paramref name="offset" /> 또는 <paramref name="count" />가 0보다 작은 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="offset" />과 <paramref name="count" />의 합이 <paramref name="buffer" />의 길이보다 큰 경우</exception>
        <exception cref="T:System.TimeoutException">바이트를 읽을 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public int Read (char[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Read(char[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (buffer As Char(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Read(cli::array &lt;char&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">입력 내용을 쓸 문자 배열입니다.</param>
        <param name="offset">문자를 쓸 <c>버퍼</c>의 오프셋입니다.</param>
        <param name="count">읽을 최대 문자 수입니다. <c>카운트</c>가 입력 버퍼의 문자 수보다 크면 더 작은 수의 문자를 읽습니다.</param>
        <summary>
          <see cref="T:System.IO.Ports.SerialPort" /> 입력 버퍼에서 여러 문자를 읽고 해당 문자를 문자 배열의 지정된 오프셋에 씁니다.</summary>
        <returns>읽을 문자 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 직렬 포트에서 문자 읽기에 대 한이 방법을 사용 합니다.  
  
 텍스트를 읽고 스트림에서 이진 데이터를 읽는 사이 전환 해야 하는 경우 수동으로 바이트를 읽은 데이터를 디코딩하는 같은 이진 데이터와 텍스트 사이의 경계를 신중 하 게 정의 하는 프로토콜을 선택 합니다.  
  
 때문에 <xref:System.IO.Ports.SerialPort> 데이터를 버퍼링 하는 클래스 및에 포함 된 스트림에 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 속성이 없는, 읽을 수 있는 문자 수에 대 한 충돌할 수 있습니다.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> 읽을 문자가 있지만 이러한 문자에 포함 된 스트림에 액세스할 수 없는 속성이 나타낼 수는 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 속성에 버퍼링 되었기 때문에 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 <xref:System.IO.Ports.SerialPort.Read%2A> 메서드 바이트 수가 equals를 읽을 때 다른 작업을 차단 하지 않습니다 `count` 있지만 직렬 포트에서 아직 읽지 않은 바이트는 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="offset" />과 <paramref name="count" />의 합이 버퍼의 길이보다 큰 경우  
  
 \- 또는 -  
  
 <paramref name="count" />가 1이고 버퍼에 서로게이트 문자가 있는 경우</exception>
        <exception cref="T:System.ArgumentNullException">전달된 <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> 또는 <paramref name="count" /> 매개 변수가 전달된 <paramref name="buffer" />의 올바른 영역 밖에 있는 경우 <paramref name="offset" /> 또는 <paramref name="count" />가 0보다 작은 경우</exception>
        <exception cref="T:System.InvalidOperationException">지정한 포트가 열려 있지 않은 경우</exception>
        <exception cref="T:System.TimeoutException">문자를 읽을 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBufferSize">
      <MemberSignature Language="C#" Value="public int ReadBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ReadBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(4096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.IO.Ports.SerialPort" /> 입력 버퍼의 크기를 가져오거나 설정합니다.</summary>
        <value>버퍼 크기(바이트)입니다. 기본값은 4096이며, 최대값은 양의 정수 또는 2147483647입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> 속성은 4096 보다 작은 모든 값을 무시 합니다.  
  
 때문에 <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> 속성은 Windows에서 만든 버퍼만 나타냅니다, 보다 작은 값을 반환할 수 있습니다는 <xref:System.IO.Ports.SerialPort.BytesToRead%2A> 모두 나타내는 속성의 <xref:System.IO.Ports.SerialPort> 버퍼와 Windows 만든 버퍼입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">설정된 <see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> 값이 0 이하인 경우</exception>
        <exception cref="T:System.InvalidOperationException">스트림이 열려 있을 때 <see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> 속성이 설정된 경우</exception>
        <exception cref="T:System.IO.IOException">
          <see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> 속성이 홀수 정수 값으로 설정된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadByte();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.IO.Ports.SerialPort" /> 입력 버퍼에서 1바이트를 동기적으로 읽습니다.</summary>
        <returns>
          <see cref="T:System.Int32" />로 캐스팅된 바이트이거나 스트림의 끝을 읽은 경우 -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 1 바이트를 읽습니다.  
  
 사용 하 여 주의 기울여야 <xref:System.IO.Ports.SerialPort.ReadByte%2A> 및 <xref:System.IO.Ports.SerialPort.ReadChar%2A> 함께 합니다. 바이트를 읽고 문자 읽기 간 전환 추가 데이터를 읽을 수 및/또는 기타 의도 하지 않은 동작이 발생할 수 있습니다. 텍스트를 읽고 스트림에서 이진 데이터를 읽는 사이 전환 해야 하는 경우 수동으로 바이트를 읽은 데이터를 디코딩하는 같은 이진 데이터와 텍스트 사이의 경계를 신중 하 게 정의 하는 프로토콜을 선택 합니다.  
  
> [!NOTE]
>  때문에 <xref:System.IO.Ports.SerialPort> 데이터를 버퍼링 하는 클래스 및에 포함 된 스트림에 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 속성이 없는는 읽을 수 있는 바이트 수에 대 한 충돌할 수 있습니다.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> 바이트를 읽을 수 있지만 이러한 접두사 바이트에 포함 된 스트림에 액세스할 수 없는 속성이 나타낼 수는 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 속성에 버퍼링 되었기 때문에 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">지정한 포트가 열려 있지 않은 경우</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">시간 제한이 끝나기 전에 작업이 완료되지 않은 경우  
  
 \- 또는 -  
  
 읽은 바이트가 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadChar">
      <MemberSignature Language="C#" Value="public int ReadChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadChar" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadChar () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadChar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.IO.Ports.SerialPort" /> 입력 버퍼에서 하나의 문자를 동기적으로 읽습니다.</summary>
        <returns>읽은 문자입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 인코딩에 따라 하나의 전체 문자를 읽습니다.  
  
 사용 하 여 주의 기울여야 <xref:System.IO.Ports.SerialPort.ReadByte%2A> 및 <xref:System.IO.Ports.SerialPort.ReadChar%2A> 함께 합니다. 바이트를 읽고 문자 읽기 간 전환 추가 데이터를 읽을 수 및/또는 기타 의도 하지 않은 동작이 발생할 수 있습니다. 텍스트를 읽고 스트림에서 이진 데이터를 읽는 사이 전환 해야 하는 경우 수동으로 바이트를 읽은 데이터를 디코딩하는 같은 이진 데이터와 텍스트 사이의 경계를 신중 하 게 정의 하는 프로토콜을 선택 합니다.  
  
> [!NOTE]
>  때문에 <xref:System.IO.Ports.SerialPort> 데이터를 버퍼링 하는 클래스 및에 포함 된 스트림에 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 속성이 없는는 읽을 수 있는 바이트 수에 대 한 충돌할 수 있습니다.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> 바이트를 읽을 수 있지만 이러한 접두사 바이트에 포함 된 스트림에 액세스할 수 없는 속성이 나타낼 수는 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 속성에 버퍼링 되었기 때문에 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">지정한 포트가 열려 있지 않은 경우</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">시간 제한이 끝나기 전에 작업이 완료되지 않은 경우  
  
 \- 또는 -  
  
 할당된 제한 시간 안에 사용할 수 있는 문자가 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadExisting">
      <MemberSignature Language="C#" Value="public string ReadExisting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadExisting() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadExisting" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadExisting () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadExisting();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>인코딩을 기준으로 <see cref="T:System.IO.Ports.SerialPort" /> 개체의 스트림 및 입력 버퍼 모두에서 즉시 사용할 수 있는 모든 바이트를 읽습니다.</summary>
        <returns>
          <see cref="T:System.IO.Ports.SerialPort" /> 개체의 스트림 및 입력 버퍼 내용입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 반환 된 스트림과의 내부 버퍼의 내용을 <xref:System.IO.Ports.SerialPort> 문자열 개체입니다. 이 메서드는 제한 시간을 사용 하지 않습니다. 이 메서드가 후행 바이트 낮추는 내부 버퍼에 유지할 수 참고는 <xref:System.IO.Ports.SerialPort.BytesToRead%2A> 0 보다 큰 값입니다.  
  
 텍스트를 읽고 스트림에서 이진 데이터를 읽는 사이 전환 해야 하는 경우 수동으로 바이트를 읽은 데이터를 디코딩하는 같은 이진 데이터와 텍스트 사이의 경계를 신중 하 게 정의 하는 프로토콜을 선택 합니다.  
  
> [!NOTE]
>  <xref:System.IO.Ports.SerialPort> 스트림 개체에 포함 된 하지만 데이터를 버퍼링 하는 클래스는 <xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=nameWithType> 속성은 그렇지 않습니다. 따라서는 <xref:System.IO.Ports.SerialPort> 개체 및 스트림 개체에서 읽을 수 있는 바이트 수가 달라질 수 있습니다. 바이트에 버퍼링 된 경우는 <xref:System.IO.Ports.SerialPort> 개체는 <xref:System.IO.Ports.SerialPort.BytesToRead%2A> 해당 값의 이러한 바이트를 포함 하는 속성, 이러한 바이트를에 포함 된 스트림에 액세스할 수 없는 반면는 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">지정한 포트가 열려 있지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadLine();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>입력 버퍼에서 <see cref="P:System.IO.Ports.SerialPort.NewLine" /> 값까지 읽습니다.</summary>
        <returns>처음 발견되는 <see cref="P:System.IO.Ports.SerialPort.NewLine" /> 값까지의 입력 버퍼 내용입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 반환 하지 않는 없지만 <xref:System.IO.Ports.SerialPort.NewLine%2A> 값의 <xref:System.IO.Ports.SerialPort.NewLine%2A> 입력된 버퍼에서 값을 제거 합니다.  
  
 기본적으로는 <xref:System.IO.Ports.SerialPort.ReadLine%2A> 메서드는 줄을 받을 때까지 차단 됩니다. 이 동작이 필요 없는 경우 설정의 <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> 속성을 0이 아닌 값을 적용할는 <xref:System.IO.Ports.SerialPort.ReadLine%2A> throw 하는 메서드는 <xref:System.TimeoutException> 포트에서 줄을 사용할 수 없는 경우.  
  
 텍스트를 읽고 스트림에서 이진 데이터를 읽는 사이 전환 해야 하는 경우 수동으로 바이트를 읽은 데이터를 디코딩하는 같은 이진 데이터와 텍스트 사이의 경계를 신중 하 게 정의 하는 프로토콜을 선택 합니다.  
  
> [!NOTE]
>  때문에 <xref:System.IO.Ports.SerialPort> 데이터를 버퍼링 하는 클래스 및에 포함 된 스트림에 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 속성이 없는는 읽을 수 있는 바이트 수에 대 한 충돌할 수 있습니다.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> 바이트를 읽을 수 있지만 이러한 접두사 바이트에 포함 된 스트림에 액세스할 수 없는 속성이 나타낼 수는 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 속성에 버퍼링 되었기 때문에 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.IO.Ports.SerialPort> 두 사용자 null 모뎀 케이블을 통해 연결 하는 두 개의 별도 컴퓨터에서 채팅할 수 있도록 하는 클래스입니다. 이 코드 예제는에 대해 제공 되는 큰 코드 예제의의 일부는 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">지정한 포트가 열려 있지 않은 경우</exception>
        <exception cref="T:System.TimeoutException">시간 제한이 끝나기 전에 작업이 완료되지 않은 경우  
  
 \- 또는 -  
  
 읽은 바이트가 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>읽기 작업을 마쳐야 하는 제한 시간(밀리초)을 가져오거나 설정합니다.</summary>
        <value>읽기 작업을 마쳐야 하는 제한 시간(밀리초)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 읽기 제한 시간 값이 원래 Win32 통신 API에서 500 밀리초로 설정 됩니다. 이 속성을 사용 하면이 값을 설정할 수 있습니다. 제한 시간을 0 보다 큰 값으로 설정 또는 설정할 수 <xref:System.IO.Ports.SerialPort.InfiniteTimeout>,이 경우 제한 시간 없음을 발생 합니다. 기본값은 <xref:System.IO.Ports.SerialPort.InfiniteTimeout>입니다.  
  
> [!NOTE]
>  관리 되지 않는 사용자 `COMMTIMEOUTS` 구조 제한 시간을 표시 하지 않으려면 0으로 제한 시간 값을 설정 하려는 경우가 있습니다. 인 제한 시간을 표시 하지 않으려면는 <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> 속성, 이때 지정 해야 <xref:System.IO.Ports.SerialPort.InfiniteTimeout>합니다.  
  
 이 속성에 영향을 주지 않는 <xref:System.IO.Stream.BeginRead%2A> 에서 반환 된 스트림의 메서드는 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.IO.Ports.SerialPort> 두 사용자 null 모뎀 케이블을 통해 연결 하는 두 개의 별도 컴퓨터에서 채팅할 수 있도록 하는 클래스입니다. 이 예제에서는 사용자는 사용자 이름 및 포트 설정에 대 한 채팅 전에 라는 메시지가 표시 됩니다. 이 코드 예제는에 대해 제공 되는 큰 코드 예제의의 일부는 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">읽기 제한 시간 값이 0보다 작고 <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />과 같지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTo">
      <MemberSignature Language="C#" Value="public string ReadTo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadTo(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTo (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadTo(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">읽기 작업을 중지할 위치를 나타내는 값입니다.</param>
        <summary>입력 버퍼에서 지정된 <paramref name="value" />까지의 문자열을 읽습니다.</summary>
        <returns>지정된 <paramref name="value" />까지의 입력 버퍼 내용입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 지정 된 문자열을 읽어 `value`합니다. 반환 된 문자열을 포함 하지 않는 동안는 `value`, `value` 입력된 버퍼에서 제거 됩니다.  
  
 텍스트를 읽고 스트림에서 이진 데이터를 읽는 사이 전환 해야 하는 경우 수동으로 바이트를 읽은 데이터를 디코딩하는 같은 이진 데이터와 텍스트 사이의 경계를 신중 하 게 정의 하는 프로토콜을 선택 합니다.  
  
> [!NOTE]
>  때문에 <xref:System.IO.Ports.SerialPort> 데이터를 버퍼링 하는 클래스 및에 포함 된 스트림에 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 속성이 없는는 읽을 수 있는 바이트 수에 대 한 충돌할 수 있습니다.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> 바이트를 읽을 수 있지만 이러한 접두사 바이트에 포함 된 스트림에 액세스할 수 없는 속성이 나타낼 수는 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 속성에 버퍼링 되었기 때문에 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> 매개 변수의 길이가 0인 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">지정한 포트가 열려 있지 않은 경우</exception>
        <exception cref="T:System.TimeoutException">시간 제한이 끝나기 전에 작업이 완료되지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceivedBytesThreshold">
      <MemberSignature Language="C#" Value="public int ReceivedBytesThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceivedBytesThreshold" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceivedBytesThreshold As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceivedBytesThreshold { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.IO.Ports.SerialPort.DataReceived" /> 이벤트가 발생하기 전 내부 입력 버퍼의 바이트 수를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="E:System.IO.Ports.SerialPort.DataReceived" /> 이벤트가 발생하기 전 내부 입력 버퍼의 바이트 수입니다. 기본값은 1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.DataReceived> 하는 경우에 이벤트는 발생 한 <xref:System.IO.Ports.SerialData.Eof> 문자 수신 되 면 내부 입력된 버퍼의 바이트 수 및의 값에 관계 없이 <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> 속성.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold" /> 값이 0 이하인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RtsEnable">
      <MemberSignature Language="C#" Value="public bool RtsEnable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RtsEnable" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.RtsEnable" />
      <MemberSignature Language="VB.NET" Value="Public Property RtsEnable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RtsEnable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>직렬 통신에 RTS(Request to Send) 신호를 사용할 수 있는지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          RTS(Request to Send)를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전송 (RTS) 신호를 요청은 일반적으로 (RTS/CTS) 하드웨어 핸드셰이킹 보낼 송신/지우기 요청에 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.IO.Ports.SerialPort.RtsEnable" /> 속성이 <see cref="P:System.IO.Ports.SerialPort.Handshake" /> 값 또는 <see cref="F:System.IO.Ports.Handshake.RequestToSend" /> 값으로 설정되어 있는데 <see cref="F:System.IO.Ports.Handshake.RequestToSendXOnXOff" /> 속성의 값을 설정하거나 검색한 경우</exception>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="StopBits">
      <MemberSignature Language="C#" Value="public System.IO.Ports.StopBits StopBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Ports.StopBits StopBits" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.StopBits" />
      <MemberSignature Language="VB.NET" Value="Public Property StopBits As StopBits" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Ports::StopBits StopBits { System::IO::Ports::StopBits get(); void set(System::IO::Ports::StopBits value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.StopBits</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>바이트 당 정지 비트의 표준 개수를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.IO.Ports.StopBits" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.StopBits%2A>의 기본값은 <xref:System.IO.Ports.StopBits.One>입니다.  
  
 <xref:System.IO.Ports.StopBits.None?displayProperty=nameWithType> 값 지원 되지 않습니다.  
  
   
  
## Examples  
 설정 하는 방법을 보여 주는 다음 예제는 <xref:System.IO.Ports.SerialPort.StopBits%2A> 속성을 `One`합니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#20)]
 [!code-csharp[System.IO.Ports.SerialPort#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#20)]
 [!code-vb[System.IO.Ports.SerialPort#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#20)]  
  
 다음 예제에서는 <xref:System.IO.Ports.SerialPort> 두 사용자 null 모뎀 케이블을 통해 연결 하는 두 개의 별도 컴퓨터에서 채팅할 수 있도록 하는 클래스입니다. 이 예제에서는 사용자는 사용자 이름 및 포트 설정에 대 한 채팅 전에 라는 메시지가 표시 됩니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.IO.Ports.SerialPort.StopBits" /> 값이 <see cref="F:System.IO.Ports.StopBits.None" />입니다.</exception>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>데이터를 직렬 포트 출력 버퍼에 씁니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string text);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string text) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (text As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ text);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void Write (string str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string str) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Write(System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (str As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="str">To be added.</param>
        <summary>직렬 포트에 지정된 문자열을 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 직렬 포트 출력으로 문자열을 작성 하려는 경우이 메서드를 사용 합니다.  
  
 출력 버퍼에 너무 많은 바이트가 경우 및 <xref:System.IO.Ports.SerialPort.Handshake%2A> 로 설정 된 <xref:System.IO.Ports.Handshake.XOnXOff> 하면 <xref:System.IO.Ports.SerialPort> 개체를 발생 시킬 수는 <xref:System.ServiceProcess.TimeoutException> 장치를 추가 데이터를 받아들일 준비가 될 때까지 대기 하는 동안 합니다.  
  
 기본적으로 <xref:System.IO.Ports.SerialPort> 사용 하 여 <xref:System.Text.ASCIIEncoding> 에 문자를 인코딩합니다. <xref:System.Text.ASCIIEncoding> 모든 문자가 127 보다 큰 인코딩하는 방법 (char) 63으로 또는 '?'입니다. 범위 내에서 추가 문자를 지원 하려면 설정 <xref:System.IO.Ports.SerialPort.Encoding%2A> 를 <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, 또는 <xref:System.Text.UnicodeEncoding>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">지정한 포트가 열려 있지 않은 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">시간 제한이 끝나기 전에 작업이 완료되지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">포트에 쓸 데이터가 포함된 바이트 배열입니다.</param>
        <param name="offset">포트로 바이트 복사를 시작할 <c>buffer</c> 매개 변수의 0부터 시작하는 바이트 오프셋입니다.</param>
        <param name="count">쓸 바이트 수입니다.</param>
        <summary>버퍼의 데이터를 사용하여 지정된 수의 바이트를 직렬 포트에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 직렬 포트에 대 한 출력을 만들려면 바이트 버퍼에 작성 하려는 경우이 메서드를 사용 합니다.  
  
 출력 버퍼에 너무 많은 바이트가 경우 및 <xref:System.IO.Ports.SerialPort.Handshake%2A> 로 설정 된 <xref:System.IO.Ports.Handshake.XOnXOff> 하면 <xref:System.IO.Ports.SerialPort> 개체를 발생 시킬 수는 <xref:System.ServiceProcess.TimeoutException> 장치를 추가 데이터를 받아들일 준비가 될 때까지 대기 하는 동안 합니다.  
  
 기본적으로 <xref:System.IO.Ports.SerialPort> 사용 하 여 <xref:System.Text.ASCIIEncoding> 에 문자를 인코딩합니다. <xref:System.Text.ASCIIEncoding> 모든 문자가 127 보다 큰 인코딩하는 방법 (char) 63으로 또는 '?'입니다. 범위 내에서 추가 문자를 지원 하려면 설정 <xref:System.IO.Ports.SerialPort.Encoding%2A> 를 <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, 또는 <xref:System.Text.UnicodeEncoding>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">전달된 <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">지정한 포트가 열려 있지 않은 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> 또는 <paramref name="count" /> 매개 변수가 전달된 <paramref name="buffer" />의 올바른 영역 밖에 있는 경우 <paramref name="offset" /> 또는 <paramref name="count" />가 0보다 작은 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="offset" />과 <paramref name="count" />의 합이 <paramref name="buffer" />의 길이보다 큰 경우</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">시간 제한이 끝나기 전에 작업이 완료되지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (char[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(char[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Char(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;char&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">포트에 쓸 데이터가 포함된 문자 배열입니다.</param>
        <param name="offset">포트로 바이트 복사를 시작할 <c>buffer</c> 매개 변수의 0부터 시작하는 바이트 오프셋입니다.</param>
        <param name="count">쓸 문자 수입니다.</param>
        <summary>버퍼의 데이터를 사용하여 지정된 수의 문자를 직렬 포트에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 직렬 포트에 대 한 출력을 만들려면 문자 버퍼에 작성 하려는 경우이 메서드를 사용 합니다.  
  
 출력 버퍼에 너무 많은 바이트가 경우 및 <xref:System.IO.Ports.SerialPort.Handshake%2A> 로 설정 된 <xref:System.IO.Ports.Handshake.XOnXOff> 하면 <xref:System.IO.Ports.SerialPort> 개체를 발생 시킬 수는 <xref:System.ServiceProcess.TimeoutException> 장치를 추가 데이터를 받아들일 준비가 될 때까지 대기 하는 동안 합니다.  
  
 기본적으로 <xref:System.IO.Ports.SerialPort> 사용 하 여 <xref:System.Text.ASCIIEncoding> 에 문자를 인코딩합니다. <xref:System.Text.ASCIIEncoding> 모든 문자가 127 보다 큰 인코딩하는 방법 (char) 63으로 또는 '?'입니다. 범위 내에서 추가 문자를 지원 하려면 설정 <xref:System.IO.Ports.SerialPort.Encoding%2A> 를 <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, 또는 <xref:System.Text.UnicodeEncoding>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">전달된 <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">지정한 포트가 열려 있지 않은 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> 또는 <paramref name="count" /> 매개 변수가 전달된 <paramref name="buffer" />의 올바른 영역 밖에 있는 경우 <paramref name="offset" /> 또는 <paramref name="count" />가 0보다 작은 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="offset" />과 <paramref name="count" />의 합이 <paramref name="buffer" />의 길이보다 큰 경우</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">시간 제한이 끝나기 전에 작업이 완료되지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBufferSize">
      <MemberSignature Language="C#" Value="public int WriteBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.WriteBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WriteBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2048)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>직렬 포트 출력 버퍼의 크기를 가져오거나 설정합니다.</summary>
        <value>출력 버퍼의 크기입니다. 기본값은 2048입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.WriteBufferSize%2A> 속성은 2048 보다 작은 모든 값을 무시 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> 값이 0 이하인 경우</exception>
        <exception cref="T:System.InvalidOperationException">스트림이 열려 있을 때 <see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> 속성이 설정된 경우</exception>
        <exception cref="T:System.IO.IOException">
          <see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> 속성이 홀수 정수 값으로 설정된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public void WriteLine (string text);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLine(string text) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (text As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLine(System::String ^ text);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void WriteLine (string str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLine(string str) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.WriteLine(System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (str As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLine(System::String ^ str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="str">To be added.</param>
        <summary>지정한 문자열 및 <see cref="P:System.IO.Ports.SerialPort.NewLine" /> 값을 출력 버퍼에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 입력된 버퍼에서 너무 많은 바이트가 하는 경우 및 <xref:System.IO.Ports.SerialPort.Handshake%2A> 로 설정 된 <xref:System.IO.Ports.Handshake.XOnXOff> 하면 <xref:System.IO.Ports.SerialPort> 개체를 발생 시킬 수는 <xref:System.ServiceProcess.TimeoutException> 장치를 추가 데이터를 받아들일 준비가 될 때까지 대기 하는 동안 합니다.  
  
 서 면된 출력은 포함 된 <xref:System.IO.Ports.SerialPort.NewLine%2A> 문자열입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.IO.Ports.SerialPort> 두 사용자 null 모뎀 케이블을 통해 연결 하는 두 개의 별도 컴퓨터에서 채팅할 수 있도록 하는 클래스입니다. 이 코드 예제는에 대해 제공 되는 큰 코드 예제의의 일부는 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">지정한 포트가 열려 있지 않은 경우</exception>
        <exception cref="T:System.TimeoutException">
          <see cref="M:System.IO.Ports.SerialPort.WriteLine(System.String)" /> 메서드가 스트림에 쓰지 못한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WriteTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>쓰기 작업을 마쳐야 하는 제한 시간(밀리초)을 가져오거나 설정합니다.</summary>
        <value>시간 초과가 발생하기 전의 밀리초 수입니다. 기본값은 <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 쓰기 제한 시간 값이 원래 Win32 통신 API에서 500 밀리초로 설정 됩니다. 이 속성을 사용 하면이 값을 설정할 수 있습니다. 제한 시간을 0 보다 큰 값으로 설정 또는 설정할 수 <xref:System.IO.Ports.SerialPort.InfiniteTimeout>,이 경우 제한 시간 없음을 발생 합니다. 기본값은 <xref:System.IO.Ports.SerialPort.InfiniteTimeout>입니다.  
  
> [!NOTE]
>  관리 되지 않는 사용자 `COMMTIMEOUTS` 구조 제한 시간을 표시 하지 않으려면 0으로 제한 시간 값을 설정 하려는 경우가 있습니다. 인 제한 시간을 표시 하지 않으려면는 <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> 속성, 이때 지정 해야 <xref:System.IO.Ports.SerialPort.InfiniteTimeout>합니다.  
  
 이 속성에 영향을 주지 않는 <xref:System.IO.Stream.BeginWrite%2A> 에서 반환 된 스트림의 메서드는 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.IO.Ports.SerialPort> 두 사용자 null 모뎀 케이블을 통해 연결 하는 두 개의 별도 컴퓨터에서 채팅할 수 있도록 하는 클래스입니다. 이 예제에서는 사용자는 사용자 이름 및 포트 설정에 대 한 채팅 전에 라는 메시지가 표시 됩니다. 이 코드 예제는에 대해 제공 되는 큰 코드 예제의의 일부는 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">포트의 상태가 올바르지 않은 경우  
  
 \- 또는 -  
  
 내부 포트 상태를 설정하지 못한 경우. 예를 들어, 이 <see cref="T:System.IO.Ports.SerialPort" /> 개체에서 전달된 매개 변수가 잘못된 경우입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.IO.Ports.SerialPort.WriteTimeout" /> 값이 0보다 작고 <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />과 같지 않은 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>