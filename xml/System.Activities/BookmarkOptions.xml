<Type Name="BookmarkOptions" FullName="System.Activities.BookmarkOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e140aba976df1dcda6d21a6657acdb13d444732a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36649159" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum BookmarkOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BookmarkOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Activities.BookmarkOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum BookmarkOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class BookmarkOptions" />
  <TypeSignature Language="F#" Value="type BookmarkOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d5067-101">
        <see cref="T:System.Activities.Bookmark" />의 옵션을 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d5067-101">Specifies the options for a <see cref="T:System.Activities.Bookmark" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="MultipleResume">
      <MemberSignature Language="C#" Value="MultipleResume" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.BookmarkOptions MultipleResume = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Activities.BookmarkOptions.MultipleResume" />
      <MemberSignature Language="VB.NET" Value="MultipleResume" />
      <MemberSignature Language="C++ CLI" Value="MultipleResume" />
      <MemberSignature Language="F#" Value="MultipleResume = 1" Usage="System.Activities.BookmarkOptions.MultipleResume" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5067-102">여러 번 다시 시작할 수 있는 <see cref="T:System.Activities.Bookmark" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5067-102">A <see cref="T:System.Activities.Bookmark" /> that can be resumed multiple times.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5067-103">기본적으로 워크플로 런타임은 책갈피를 다시 시작할 때 해당 책갈피 테이블에서 보류 중인 책갈피를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="d5067-103">By default, the workflow runtime removes a pending bookmark from its bookmarks table when resuming the bookmark.</span></span> <span data-ttu-id="d5067-104">그러나 책갈피를 MultipleResume로 지정 하는 경우 다음 테이블에서 책갈피가 제거 되지 않습니다 및 동일한 책갈피 여러 번 다시 시작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5067-104">However if the bookmark is specified as MultipleResume, then the bookmark is not removed from the table and the same bookmark can be resumed multiple times.</span></span> <span data-ttu-id="d5067-105">와 같은 작업을 반복할 MultipleResume의 사용 예제는 <xref:System.Activities.While>, <xref:System.Activities.ForEach%601>, 및 <xref:System.Activities.Flowchart>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5067-105">An example usage of MultipleResume is by looping activities such as <xref:System.Activities.While>, <xref:System.Activities.ForEach%601>, and <xref:System.Activities.Flowchart>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NonBlocking">
      <MemberSignature Language="C#" Value="NonBlocking" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.BookmarkOptions NonBlocking = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Activities.BookmarkOptions.NonBlocking" />
      <MemberSignature Language="VB.NET" Value="NonBlocking" />
      <MemberSignature Language="C++ CLI" Value="NonBlocking" />
      <MemberSignature Language="F#" Value="NonBlocking = 2" Usage="System.Activities.BookmarkOptions.NonBlocking" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkOptions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5067-106">워크플로를 차단하지 않는 <see cref="T:System.Activities.Bookmark" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5067-106">A <see cref="T:System.Activities.Bookmark" /> that does not block the workflow.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5067-107">기본적으로 워크플로 런타임에서는 보류 중인 책갈피가 있는 경우 작업의 실행을 완료한 것으로 간주하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5067-107">By default, the workflow runtime does not consider an activity to have completed execution if it has pending bookmarks.</span></span> <span data-ttu-id="d5067-108">그러나 책갈피를 만들 때 차단 되지 않는로 지정 된 경우 워크플로 런타임에서 작업 수 있습니다 실행을 완료 경우에 보류 중인 차단 되지 않는 책갈피가 다른 보류 중인 작업에 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5067-108">However, if a bookmark is specified as NonBlocking at creation time, the workflow runtime allows the activity to complete execution even if it has pending NonBlocking bookmarks,  provided it has no other pending work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.BookmarkOptions None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Activities.BookmarkOptions.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Activities.BookmarkOptions.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5067-109">기본 <see cref="T:System.Activities.Bookmark" /> 옵션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5067-109">Default <see cref="T:System.Activities.Bookmark" /> options,</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>