<Type Name="UnhandledExceptionAction" FullName="System.Activities.UnhandledExceptionAction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="90beb3de2eb7f379bd39d06382a58e66536329a0" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36716525" /></Metadata><TypeSignature Language="C#" Value="public enum UnhandledExceptionAction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UnhandledExceptionAction extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Activities.UnhandledExceptionAction" />
  <TypeSignature Language="VB.NET" Value="Public Enum UnhandledExceptionAction" />
  <TypeSignature Language="C++ CLI" Value="public enum class UnhandledExceptionAction" />
  <TypeSignature Language="F#" Value="type UnhandledExceptionAction = " />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="7da94-101">예외에서 워크플로 루트를 이스케이프할 때 수행되는 동작을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-101">Specifies the action that occurs when an exception escapes the root of a workflow.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7da94-102">예외에서 워크플로 루트를 이스케이프할 때 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 함수가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-102">The <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> function is invoked if an exception escapes the root of the workflow.</span></span> <span data-ttu-id="7da94-103">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs>는 예외에 대한 액세스는 물론 예외를 생성한 <xref:System.Activities.Activity>에 대한 포인터를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-103">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> provides access to the exception as well as a pointer to the <xref:System.Activities.Activity> that generated the exception.</span></span> <span data-ttu-id="7da94-104">종료 되지 않은 경우이 기본 동작 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 처리기가 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-104">Terminate is the default action if no <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7da94-105">다음 예제에서는 예외를 throw하는 워크플로를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-105">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="7da94-106">이 예외는 워크플로에서 처리되지 않으며 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-106">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="7da94-107"><xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs>를 검사하여 예외에 대한 정보를 제공하고 워크플로가 종료됩니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-107">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#6](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="Abort" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.UnhandledExceptionAction Abort = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Activities.UnhandledExceptionAction.Abort" />
      <MemberSignature Language="VB.NET" Value="Abort" />
      <MemberSignature Language="C++ CLI" Value="Abort" />
      <MemberSignature Language="F#" Value="Abort = 0" Usage="System.Activities.UnhandledExceptionAction.Abort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.UnhandledExceptionAction</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="7da94-108"><see cref="T:System.Activities.WorkflowApplication" />에서 워크플로를 중단하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-108">Specifies that the <see cref="T:System.Activities.WorkflowApplication" /> should abort the workflow.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7da94-109">이렇게 하면 중단 프로세스가 완료될 때 <xref:System.Activities.WorkflowApplication.Aborted%2A>가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-109">This results in <xref:System.Activities.WorkflowApplication.Aborted%2A> being called when the abort process is complete.</span></span> <span data-ttu-id="7da94-110">처리되지 않은 예외가 중단 이유로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-110">The unhandled exception is used as the abort reason.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7da94-111">다음 예제에서는 예외를 throw하는 워크플로를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-111">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="7da94-112">이 예외는 워크플로에서 처리되지 않으며 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-112">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="7da94-113">예외에 대한 정보를 제공하기 위해 <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs>가 검사되며 워크플로가 중단됩니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-113">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is aborted.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#7](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="Cancel" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.UnhandledExceptionAction Cancel = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Activities.UnhandledExceptionAction.Cancel" />
      <MemberSignature Language="VB.NET" Value="Cancel" />
      <MemberSignature Language="C++ CLI" Value="Cancel" />
      <MemberSignature Language="F#" Value="Cancel = 1" Usage="System.Activities.UnhandledExceptionAction.Cancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.UnhandledExceptionAction</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="7da94-114"><see cref="T:System.Activities.WorkflowApplication" />에서 루트 활동 취소를 예약하고 실행을 다시 시작하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-114">Specifies that the <see cref="T:System.Activities.WorkflowApplication" /> should schedule the cancellation of the root activity and resume execution.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7da94-115">이렇게 하면 취소 프로세스가 완료될 때 <xref:System.Activities.WorkflowApplication.Completed%2A>가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-115">This results in <xref:System.Activities.WorkflowApplication.Completed%2A> being called when the cancellation process is complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7da94-116">다음 예제에서는 예외를 throw하는 워크플로를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-116">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="7da94-117">이 예외는 워크플로에서 처리되지 않으며 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-117">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="7da94-118">예외에 대한 정보를 제공하기 위해 <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs>가 검사되며 워크플로가 취소됩니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-118">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is cancelled.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#8](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="Terminate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.UnhandledExceptionAction Terminate = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Activities.UnhandledExceptionAction.Terminate" />
      <MemberSignature Language="VB.NET" Value="Terminate" />
      <MemberSignature Language="C++ CLI" Value="Terminate" />
      <MemberSignature Language="F#" Value="Terminate = 2" Usage="System.Activities.UnhandledExceptionAction.Terminate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.UnhandledExceptionAction</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="7da94-119"><see cref="T:System.Activities.WorkflowApplication" />에서 루트 활동 종료를 예약하고 실행을 다시 시작하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-119">Specifies that the <see cref="T:System.Activities.WorkflowApplication" /> should schedule termination of the root activity and resume execution.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7da94-120">이렇게 하면 종료 프로세스가 완료될 때 <xref:System.Activities.WorkflowApplication.Completed%2A>가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-120">This results in <xref:System.Activities.WorkflowApplication.Completed%2A> being called when the termination process is complete.</span></span> <span data-ttu-id="7da94-121">처리되지 않은 예외가 종료 이유로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-121">The unhandled exception is used as the termination reason.</span></span> <span data-ttu-id="7da94-122">종료 되지 않은 경우이 기본 동작 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 처리기가 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-122">Terminate is the default action if no <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7da94-123">다음 예제에서는 예외를 throw하는 워크플로를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-123">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="7da94-124">이 예외는 워크플로에서 처리되지 않으며 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-124">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="7da94-125"><xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs>를 검사하여 예외에 대한 정보를 제공하고 워크플로가 종료됩니다.</span><span class="sxs-lookup"><span data-stu-id="7da94-125">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#6](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>