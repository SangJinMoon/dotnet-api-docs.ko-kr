<Type Name="ExecutionProperties" FullName="System.Activities.ExecutionProperties">
  <Metadata><Meta Name="ms.openlocfilehash" Value="04305045deaa17d1561494c14601cbcd9c2a07d0" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51315047" /></Metadata><TypeSignature Language="C#" Value="public sealed class ExecutionProperties : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExecutionProperties extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Activities.ExecutionProperties" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExecutionProperties&#xA;Implements IEnumerable(Of KeyValuePair(Of String, Object))" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExecutionProperties sealed : System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;" />
  <TypeSignature Language="F#" Value="type ExecutionProperties = class&#xA;    interface seq&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="00fb6-101">특정 범위의 속성 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-101">Represents the collection of properties at a particular scope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00fb6-102">CLR은 TLS(스레드 로컬 저장소)를 통해 각 스레드의 실행 컨텍스트를 유지 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-102">Through thread local storage (TLS), the CLR maintains an execution context for each thread.</span></span> <span data-ttu-id="00fb6-103">이 실행 컨텍스트는 스레드 ID, 앰비언트 트랜잭션 및 현재 권한 집합과 같은 잘 알려진 스레드 속성은 물론 명명된 슬롯과 같은 사용자 정의 스레드 속성을 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-103">This execution context governs well-known thread properties such as the thread identity, the ambient transaction, and the current permission set as well as user-defined thread properties like named slots.</span></span>  
  
 <span data-ttu-id="00fb6-104">CLR을 직접 대상으로 지정하는 프로그램과 달리 워크플로 프로그램은 스레드를 알 수 없는 환경에서 실행하는 계층적 범위의 트리입니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-104">Unlike programs directly targeting the CLR, workflow programs are hierarchically-scoped trees that execute in a thread-agnostic environment.</span></span> <span data-ttu-id="00fb6-105">이는 표준 TLS 메커니즘을 직접 사용하여 제공된 작업 항목 범위에 있는 컨텍스트를 확인할 수 없음을 의미합니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-105">This implies that the standard TLS mechanisms cannot directly be used to determine what context is in scope for a given work item.</span></span> <span data-ttu-id="00fb6-106">예를 들어, 실행의 두 병렬 분기는 서로 다른 ID를 사용할 수 있지만 스케줄러는 동일한 CLR 스레드에서 해당 실행을 인터리빙할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-106">For example, two parallel branches of execution might use different identities yet the scheduler might interleave their execution on the same CLR thread.</span></span>  
  
 <span data-ttu-id="00fb6-107">실행 속성을 통해 작업에서 해당 하위 트리 범위에 있는 속성을 선언할 수 있을 뿐만 아니라 CLR 개체와 적절히 상호 작용할 수 있도록 TLS를 설정하고 중지하는 데 필요한 후크를 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-107">Execution properties allow an activity to declare which properties are in scope for its sub-tree as well as provide hooks for setting up and tearing down TLS to properly interoperate with CLR objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00fb6-108">새 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-108">Registers a new property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExecutionProperties.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, property As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ property);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj -&gt; unit" Usage="executionProperties.Add (name, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="property" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="00fb6-109">속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-109">The name of the property.</span></span></param>
        <param name="property"><span data-ttu-id="00fb6-110">속성을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-110">The object that represents the property.</span></span></param>
        <summary><span data-ttu-id="00fb6-111">지정한 이름을 사용하여 새 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-111">Registers a new property using the specified name.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object property, bool onlyVisibleToPublicChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, object property, bool onlyVisibleToPublicChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, property As Object, onlyVisibleToPublicChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ property, bool onlyVisibleToPublicChildren);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj * bool -&gt; unit" Usage="executionProperties.Add (name, property, onlyVisibleToPublicChildren)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="onlyVisibleToPublicChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="00fb6-112">속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-112">The name of the property.</span></span></param>
        <param name="property"><span data-ttu-id="00fb6-113">속성을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-113">The object that represents the property.</span></span></param>
        <param name="onlyVisibleToPublicChildren"><span data-ttu-id="00fb6-114">이 속성이 소유 작업의 자식에 표시되는지 여부를 확인하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-114">A value that determines whether this property is visible to the children of the owning activity.</span></span></param>
        <summary><span data-ttu-id="00fb6-115">지정한 이름 및 자식 표시 유형을 사용하여 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-115">Registers a property using the specified name and child visibility.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public object Find (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Find(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExecutionProperties.Find(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Find(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Find : string -&gt; obj" Usage="executionProperties.Find name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="00fb6-116">속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-116">The name of the property.</span></span></param>
        <summary><span data-ttu-id="00fb6-117">지정한 이름의 가장 가까운 속성을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-117">Returns the nearest property of the given name.</span></span></summary>
        <returns><span data-ttu-id="00fb6-118">지정한 이름의 가장 가까운 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-118">The nearest property of the given name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00fb6-119"><xref:System.Activities.ExecutionProperties.Find%2A>는 계층적 범위 지정을 사용하여 가장 가까운 표시 가능 속성을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-119"><xref:System.Activities.ExecutionProperties.Find%2A> finds the nearest visible property using hierarchical scoping.</span></span> <span data-ttu-id="00fb6-120">두 속성의 이름이 같으면 부모 범위에서 가장 가까운 속성이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-120">If two properties have the same name, the closest property at the parent scope is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExecutionProperties.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="executionProperties.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00fb6-121">속성 컬렉션을 반복하는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-121">Returns an enumerator that iterates through the collection of properties.</span></span></summary>
        <returns><span data-ttu-id="00fb6-122">속성 컬렉션을 반복하는 열거자입니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-122">An enumerator that iterates through the collection of properties.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Activities.ExecutionProperties.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Activities.ExecutionProperties.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00fb6-123">현재 범위에서 등록된 속성이 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-123">Gets a value that indicates whether there are properties registered at the current scope.</span></span></summary>
        <value><span data-ttu-id="00fb6-124">등록된 속성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-124"><see langword="true" /> if there are properties registered; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExecutionProperties.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; bool" Usage="executionProperties.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="00fb6-125">등록을 취소할 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-125">The name of the property to unregister.</span></span></param>
        <summary><span data-ttu-id="00fb6-126">지정한 이름을 사용하여 속성의 등록을 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-126">Unregisters the property with the specified name.</span></span></summary>
        <returns><span data-ttu-id="00fb6-127">속성이 등록되지 않았으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-127"><see langword="true" /> if the property was unregistered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00fb6-128">작업이 완료될 때 자동으로 속성의 등록이 취소됩니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-128">Properties are automatically unregistered when the activity completes.</span></span> <span data-ttu-id="00fb6-129">이 메서드를 사용하면 작업을 완료하기 전에 속성의 등록을 취소할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-129">This method can be used to unregister a property before the activity completes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00fb6-130">속성 컬렉션을 반복하는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-130">Returns an enumerator that iterates through the collection of properties.</span></span></summary>
        <returns><span data-ttu-id="00fb6-131">속성 컬렉션을 반복하는 열거자입니다.</span><span class="sxs-lookup"><span data-stu-id="00fb6-131">An enumerator that iterates through the collection of properties.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>