<Type Name="WorkflowApplication" FullName="System.Activities.WorkflowApplication">
  <TypeSignature Language="C#" Value="public sealed class WorkflowApplication : System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowApplication extends System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowApplication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowApplication&#xA;Inherits WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowApplication sealed : System::Activities::Hosting::WorkflowInstance" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Hosting.WorkflowInstance</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c98bf-101">워크플로의 단일 인스턴스에 대한 호스트를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-101">Provides a host for a single instance of a workflow.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-102"><xref:System.Activities.WorkflowApplication> 클래스는 단일 워크플로 인스턴스에 대한 호스트를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-102">The <xref:System.Activities.WorkflowApplication> class provides a host for a single workflow instance.</span></span> <span data-ttu-id="c98bf-103">이는 워크플로 런타임에서 관리하는 실제 워크플로 인스턴스에 대한 프록시입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-103">It is a proxy to the actual workflow instance that is managed by the workflow runtime.</span></span> <span data-ttu-id="c98bf-104"><xref:System.Activities.WorkflowApplication> 사용자는 <xref:System.Activities.WorkflowApplication> 개체의 적합한 메서드를 호출하여 워크플로 런타임에서 워크플로 인스턴스에 대한 동작을 수행하도록 지시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-104">Users of <xref:System.Activities.WorkflowApplication> can instruct the workflow runtime to perform actions on a workflow instance by calling the appropriate methods on a <xref:System.Activities.WorkflowApplication> object.</span></span> <span data-ttu-id="c98bf-105">요청된 동작이 올바르지 않으면 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-105">If a requested action is not valid, an exception is thrown.</span></span>  
  
 <span data-ttu-id="c98bf-106"><xref:System.Activities.WorkflowApplication>을 사용하여 다음 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-106">Using <xref:System.Activities.WorkflowApplication> you can perform the following tasks:</span></span>  
  
1.  <span data-ttu-id="c98bf-107">새 워크플로 인스턴스를 만들거나 인스턴스 저장소에서 워크플로 인스턴스를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-107">Create a new workflow instance, or load a workflow instance from an instance store.</span></span>  
  
2.  <span data-ttu-id="c98bf-108">워크플로 인스턴스 내의 작업에서 사용할 확장을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-108">Provide extensions to be used by activities within a workflow instance.</span></span>  
  
3.  <span data-ttu-id="c98bf-109">워크플로 인스턴스의 실행을 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-109">Control the execution of a workflow instance.</span></span>  
  
4.  <span data-ttu-id="c98bf-110">워크플로 인스턴스 내의 작업에서 만든 책갈피를 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-110">Resume a bookmark created by an activity within a workflow instance.</span></span>  
  
5.  <span data-ttu-id="c98bf-111">워크플로 인스턴스를 지속하거나 언로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-111">Persist or unload a workflow instance.</span></span>  
  
6.  <span data-ttu-id="c98bf-112">워크플로 인스턴스 수명 주기 이벤트 알림을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-112">Be notified of workflow instance lifecycle events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-113">다음 예제에서는 <xref:System.Activities.WorkflowApplication>을 사용하여 워크플로를 호스트합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-113">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="c98bf-114">지정한 워크플로 정의를 사용하여 <xref:System.Activities.WorkflowApplication> 인스턴스가 생성되고, 원하는 워크플로 수명 주기 이벤트가 처리되고, <xref:System.Activities.WorkflowApplication.Run%2A>을 호출하여 워크플로가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-114">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="c98bf-115">워크플로가 완료되면 다음 출력이 콘솔에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-115">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-116">
          <see cref="T:System.Activities.WorkflowApplication" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-116">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="c98bf-117">워크플로 정의입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-117">The workflow definition.</span></span></param>
        <summary><span data-ttu-id="c98bf-118">지정한 워크플로 정의를 사용하여 <see cref="T:System.Activities.WorkflowApplication" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-118">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class with the specified workflow definition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c98bf-119">다음 예제에서는 <xref:System.Activities.WorkflowApplication>을 사용하여 워크플로를 호스트합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-119">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="c98bf-120">단일 <xref:System.Activities.WorkflowApplication> 활동으로 구성된 워크플로 정의를 사용하여 `DiceRoll` 인스턴스가 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-120">A <xref:System.Activities.WorkflowApplication> instance is constructed using using a workflow definition consisting of a single `DiceRoll` activity.</span></span> <span data-ttu-id="c98bf-121">`DiceRoll` 활동에는 주사위 굴리기 작업의 결과를 나타내는 두 개의 출력 인수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-121">The `DiceRoll` activity has two output arguments that represent the results of the dice roll operation.</span></span> <span data-ttu-id="c98bf-122">워크플로가 완료되면 <xref:System.Activities.WorkflowApplication.Completed%2A> 처리기에서 출력이 검색되고 다음 출력이 콘솔에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-122">When the workflow completes, the outputs are retrieved in the <xref:System.Activities.WorkflowApplication.Completed%2A> handler, and the following output is displayed to the console.</span></span>  
  
```Output  
Workflow aae3fb48-7229-4737-b969-d63e131b96b3 Completed.   
The two dice are 1 and 5.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#130](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#130)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#21](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="c98bf-123">워크플로 정의입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-123">The workflow definition.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="c98bf-124">정의 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-124">The definition identity.</span></span></param>
        <summary><span data-ttu-id="c98bf-125">지정된 워크플로 정의 및 정의 ID를 사용하여 <see cref="T:System.Activities.WorkflowApplication" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-125">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class with the specified workflow definition and definition identity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="c98bf-126">워크플로 정의입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-126">The workflow definition.</span></span></param>
        <param name="inputs"><span data-ttu-id="c98bf-127">인수 이름으로 키가 지정된 워크플로 정의의 루트 활동에 대해 정의된 인수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-127">The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</span></span></param>
        <summary><span data-ttu-id="c98bf-128">지정한 워크플로 정의 및 인수 값을 사용하는 <see cref="T:System.Activities.WorkflowApplication" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-128">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class that uses the specified workflow definition and argument values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c98bf-129">다음 예제에서는 <xref:System.Activities.WorkflowApplication>을 사용하여 워크플로를 호스트합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-129">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="c98bf-130"><xref:System.Activities.WorkflowApplication> 인스턴스는 두 개의 입력 인수를 사용하는 단일 `Divide` 활동과 인수 이름으로 키가 지정된 전달할 두 값을 포함하는 입력 인수 사전으로 구성된 워크플로 정의를 사용하여 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-130">A <xref:System.Activities.WorkflowApplication> instance is constructed using using a workflow definition consisting of a single `Divide` activity that takes two input arguments, and a dictionary of input arguments containing the two values to be passed, keyed by argument name.</span></span> <span data-ttu-id="c98bf-131">원하는 워크플로 수명 주기 이벤트가 처리되고 <xref:System.Activities.WorkflowApplication.Run%2A>을 호출하여 워크플로가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-131">The desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="c98bf-132">워크플로가 완료되면 다음 출력이 콘솔에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-132">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Completed  
500 / 36 = 13 Remainder 32  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#120](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#120)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#10](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object), definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="c98bf-133">워크플로 정의입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-133">The workflow definition.</span></span></param>
        <param name="inputs"><span data-ttu-id="c98bf-134">정의 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-134">The definition identity.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="c98bf-135">인수 이름으로 키가 지정된 워크플로 정의의 루트 활동에 대해 정의된 인수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-135">The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</span></span></param>
        <summary><span data-ttu-id="c98bf-136">지정한 워크플로 정의, 인수 값 및 정의 ID을 사용하는 <see cref="T:System.Activities.WorkflowApplication" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-136">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class that uses the specified workflow definition and argument values, and definition identity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Abort">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-137">이 워크플로 인스턴스가 중단되어야 함을 워크플로 런타임에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-137">Notifies the workflow runtime that this workflow instance should abort.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-138"><xref:System.Activities.WorkflowApplication>이 호스팅하는 워크플로가 중단되면 <xref:System.Activities.WorkflowApplication.Aborted%2A> 처리기가 호출되고 <xref:System.Activities.WorkflowApplication.Completed%2A> 처리기가 호출되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-138">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c98bf-139">이 워크플로 인스턴스가 중단되어야 함을 워크플로 런타임에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-139">Notifies the workflow runtime that this workflow instance should abort.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-140"><xref:System.Activities.WorkflowApplication>이 호스팅하는 워크플로가 중단되면 <xref:System.Activities.WorkflowApplication.Aborted%2A> 처리기가 호출되고 <xref:System.Activities.WorkflowApplication.Completed%2A> 처리기가 호출되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-140">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-141">다음 예제에서는 <xref:System.Activities.WorkflowApplication>을 사용하여 워크플로를 호스트합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-141">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="c98bf-142">지정한 워크플로 정의를 사용하여 <xref:System.Activities.WorkflowApplication> 인스턴스가 생성되고, 원하는 워크플로 수명 주기 이벤트가 처리되고, <xref:System.Activities.WorkflowApplication.Run%2A>을 호출하여 워크플로가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-142">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="c98bf-143">워크플로가 시작된 후에 <xref:System.Activities.WorkflowApplication.Abort%2A>가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-143">After the workflow is started, <xref:System.Activities.WorkflowApplication.Abort%2A> is called.</span></span> <span data-ttu-id="c98bf-144">워크플로가 중단되면 다음 출력이 콘솔에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-144">When the workflow is aborted, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Idle.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The workflow has been aborted.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(System::String ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="c98bf-145">요청 중단의 원인입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-145">The reason for the request to abort.</span></span></param>
        <summary><span data-ttu-id="c98bf-146">지정한 원인에 대해 이 워크플로 인스턴스를 중단해야 함을 워크플로 런타임에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-146">Notifies the workflow runtime that this workflow instance should abort for the specified reason.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-147"><xref:System.Activities.WorkflowApplication>이 호스팅하는 워크플로가 중단되면 <xref:System.Activities.WorkflowApplication.Aborted%2A> 처리기가 호출되고 <xref:System.Activities.WorkflowApplication.Completed%2A> 처리기가 호출되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-147">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-148">다음 예제에서는 <xref:System.Activities.WorkflowApplication>을 사용하여 워크플로를 호스트합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-148">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="c98bf-149">지정한 워크플로 정의를 사용하여 <xref:System.Activities.WorkflowApplication> 인스턴스가 생성되고, 원하는 워크플로 수명 주기 이벤트가 처리되고, <xref:System.Activities.WorkflowApplication.Run%2A>을 호출하여 워크플로가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-149">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="c98bf-150">워크플로가 시작된 후에 <xref:System.Activities.WorkflowApplication.Abort%2A>가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-150">After the workflow is started, <xref:System.Activities.WorkflowApplication.Abort%2A> is called.</span></span> <span data-ttu-id="c98bf-151">워크플로가 중단되면 다음 출력이 콘솔에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-151">When the workflow is aborted, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Idle.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The reason for aborting the workflow.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Aborted" />
      <MemberSignature Language="VB.NET" Value="Public Property Aborted As Action(Of WorkflowApplicationAbortedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ Aborted { Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c98bf-152">워크플로 인스턴스가 중단될 때 호출되는 <see cref="T:System.Action`1" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-152">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance is aborted.</span></span></summary>
        <value><span data-ttu-id="c98bf-153">워크플로 인스턴스가 중단될 때 호출되는 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-153">The action that is invoked when the workflow instance is aborted.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-154"><xref:System.Activities.WorkflowApplication>이 호스팅하는 워크플로가 중단되면 <xref:System.Activities.WorkflowApplication.Aborted%2A> 처리기가 호출되고 <xref:System.Activities.WorkflowApplication.Completed%2A> 처리기가 호출되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-154">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-155">다음 코드 예제에서는 <xref:System.Activities.WorkflowApplicationAbortedEventArgs> 인스턴스의 <xref:System.Activities.WorkflowApplication.Aborted%2A> 처리기로 전달된 <xref:System.Activities.WorkflowApplication>를 검사하고 워크플로가 중단된 이유에 대한 정보를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-155">The following code example inspects the <xref:System.Activities.WorkflowApplicationAbortedEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about why workflow was aborted.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#5](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInitialInstanceValues">
      <MemberSignature Language="C#" Value="public void AddInitialInstanceValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddInitialInstanceValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInitialInstanceValues (writeOnlyValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddInitialInstanceValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="writeOnlyValues"><span data-ttu-id="c98bf-156">첫 번째 지속성에 포함할 메타데이터 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-156">The metadata values to be included with the first persistence.</span></span></param>
        <summary><span data-ttu-id="c98bf-157">새 인스턴스의 첫 번째 지속성에 포함된 인스턴스 메타데이터 값을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-157">Specifies instance metadata values that are included with the first persistence of a new instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-158">
          <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 워크플로를 비동기적으로 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-158">Cancels a workflow asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-159">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-159">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="c98bf-160">취소 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-160">The method to be called when the cancel operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-161">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-161">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-162">지정한 <see cref="T:System.AsyncCallback" /> 및 사용자가 제공한 상태를 사용하여 워크플로 인스턴스를 비동기적으로 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-162">Cancels a workflow instance asynchronously using the specified <see cref="T:System.AsyncCallback" /> and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-163">비동기 취소 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-163">A reference to the asynchronous cancel operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-164">취소 작업이 성공했는지 확인하려면 <xref:System.Activities.WorkflowApplication.EndCancel%2A>을 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-164">To determine whether the cancel operation was successful, call <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span> <span data-ttu-id="c98bf-165"><xref:System.Activities.WorkflowApplication.EndCancel%2A>는 `callback` 메서드 내부 또는 외부에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-165"><xref:System.Activities.WorkflowApplication.EndCancel%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="c98bf-166">취소 작업이 완료되기 전에 <xref:System.Activities.WorkflowApplication.EndCancel%2A>을 호출하면 취소 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-166">If <xref:System.Activities.WorkflowApplication.EndCancel%2A> is called before the cancel operation completes, it blocks until the cancel operation completes.</span></span> <span data-ttu-id="c98bf-167">기본적으로 취소 작업은 30초 내에 완료되어야 하며, 그렇지 않으면 <xref:System.TimeoutException>에서 <xref:System.Activities.WorkflowApplication.EndCancel%2A>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-167">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span>  
  
 <span data-ttu-id="c98bf-168">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 워크플로를 비동기적으로 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-168">This method cancels a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-169">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-169">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="c98bf-170">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 취소 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-170">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-171">취소 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-171">The method to be called when the cancel operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-172">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-172">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-173">지정한 시간 제한 간격, <see cref="T:System.AsyncCallback" /> 및 사용자가 제공한 상태를 사용하여 워크플로 인스턴스를 비동기적으로 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-173">Cancels a workflow instance asynchronously using the specified time-out interval, <see cref="T:System.AsyncCallback" />, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-174">비동기 취소 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-174">A reference to the asynchronous cancel operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-175">취소 작업이 성공했는지 확인하려면 <xref:System.Activities.WorkflowApplication.EndCancel%2A>을 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-175">To determine whether the cancel operation was successful, call <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span> <span data-ttu-id="c98bf-176"><xref:System.Activities.WorkflowApplication.EndCancel%2A>은 `callback` 매개 변수에 지정된 메서드 내부 또는 외부에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-176"><xref:System.Activities.WorkflowApplication.EndCancel%2A> can be called from inside or outside of the method specified in the `callback` parameter.</span></span> <span data-ttu-id="c98bf-177">취소 작업이 완료되기 전에 <xref:System.Activities.WorkflowApplication.EndCancel%2A>을 호출하면 취소 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-177">If <xref:System.Activities.WorkflowApplication.EndCancel%2A> is called before the cancel operation completes, it blocks until the cancel operation completes.</span></span> <span data-ttu-id="c98bf-178">취소 작업이 `timeOut` 매개 변수에 의해 지정한 간격 내에 완료되지 않으면 <xref:System.TimeoutException>에서 <xref:System.Activities.WorkflowApplication.EndCancel%2A>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-178">If the cancel operation does not complete in the interval specified by the `timeOut` parameter, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span>  
  
 <span data-ttu-id="c98bf-179">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 워크플로를 비동기적으로 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-179">This method cancels a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-180">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-180">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-181"><see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 기본 인스턴스 소유자를 비동기적으로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-181">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="c98bf-182">워크플로 응용 프로그램의 현재 인스턴스의 지속 상태에 대한 액세스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-182">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="c98bf-183">정의 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-183">The definition identity.</span></span></param>
        <param name="identityFilter"><span data-ttu-id="c98bf-184">ID 필터입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-184">The identity filter.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-185">로드 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-185">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-186">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-186">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-187">지정된 인스턴스 저장소, 정의 ID, ID 필터, 콜백 및 상태를 사용하는 <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 기본 인스턴스 소유자를 비동기적으로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-187">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, definition identity, identity filter, callback and state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-188">비동기 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-188">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="c98bf-189">워크플로 응용 프로그램의 현재 인스턴스의 지속 상태에 대한 액세스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-189">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="c98bf-190">정의 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-190">The definition identity.</span></span></param>
        <param name="identityFilter"><span data-ttu-id="c98bf-191">ID 필터입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-191">The identity filter.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-192">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 로드 시작 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-192">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-193">로드 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-193">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-194">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-194">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-195">지정된 인스턴스 저장소, 정의 ID, ID 필터, 제한 시간 간격, 콜백 및 상태를 사용하는 <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 기본 인스턴스 소유자를 비동기적으로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-195">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, definition identity, identity filter, timeout interval, callback and state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-196">비동기 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-196">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginDeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-197"><see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 기본 인스턴스 소유자를 비동기적으로 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-197">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="c98bf-198">워크플로 응용 프로그램의 현재 인스턴스의 지속 상태에 대한 액세스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-198">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-199">로드 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-199">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-200">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-200">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-201">지정된 인스턴스 저장소, 콜백 및 상태를 사용하는 <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 기본 인스턴스 소유자를 비동기적으로 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-201">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-202">비동기 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-202">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="c98bf-203">워크플로 응용 프로그램의 현재 인스턴스의 지속 상태에 대한 액세스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-203">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-204">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 로드 시작 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-204">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-205">로드 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-205">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-206">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-206">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-207">지정된 인스턴스 저장소, 제한 시간 간격, 콜백 및 상태를 사용하는 <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 기본 인스턴스 소유자를 비동기적으로 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-207">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-208">비동기 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-208">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-209"><see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 인스턴스 소유자를 비동기적으로 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-209">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="c98bf-210">인스턴스 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-210">The instance identifier.</span></span></param>
        <param name="instanceStore"><span data-ttu-id="c98bf-211">워크플로 응용 프로그램의 현재 인스턴스의 지속 상태에 대한 액세스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-211">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-212">로드 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-212">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-213">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-213">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-214">지정한 인스턴스 식별자, 인스턴스 저장소, 콜백 및 상태를 통해 <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 인스턴스 소유자를 비동기적으로 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-214">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance identifier, instance store, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-215">비동기 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-215">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="c98bf-216">인스턴스 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-216">The instance identifier.</span></span></param>
        <param name="instanceStore"><span data-ttu-id="c98bf-217">워크플로 응용 프로그램의 현재 인스턴스의 지속 상태에 대한 액세스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-217">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-218">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 로드 시작 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-218">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-219">로드 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-219">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-220">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-220">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-221">지정한 인스턴스 식별자, 인스턴스 저장소, 시간 제한 간격, 콜백 및 상태를 통해 <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 인스턴스 소유자를 비동기적으로 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-221">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance identifier, instance store, timeout interval, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-222">비동기 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-222">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-223"><see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 실행할 수 있는 인스턴스 소유자를 비동기적으로 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-223">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="c98bf-224">워크플로 응용 프로그램의 현재 인스턴스의 지속 상태에 대한 액세스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-224">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-225">로드 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-225">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-226">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-226">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-227">지정한 인스턴스 저장소, 콜백 및 상태를 통해 <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 실행 가능한 인스턴스 소유자를 비동기적으로 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-227">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-228">비동기 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-228">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="c98bf-229">워크플로 응용 프로그램의 현재 인스턴스의 지속 상태에 대한 액세스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-229">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-230">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 로드 시작 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-230">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-231">로드 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-231">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-232">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-232">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-233">지정한 인스턴스 저장소, 시간 제한 간격, 콜백 및 상태를 통해 <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 실행 가능한 인스턴스 소유자를 비동기적으로 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-233">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-234">비동기 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-234">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-235">
          <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 인스턴스 저장소에서 워크플로를 비동기적으로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-235">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-236">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-236">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c98bf-237">인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-237">The instance.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-238">로드 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-238">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-239">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-239">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-240">지정된 인스턴스, 콜백 및 상태를 사용하는 <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 인스턴스 저장소에서 워크플로를 비동기적으로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-240">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, callback and state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-241">비동기 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-241">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="c98bf-242">워크플로 인스턴스의 128비트 GUID(Globally Unique Identifier)입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-242">A globally unique 128-bit identifier for the workflow instance.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-243">로드 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-243">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-244">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-244">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-245">지정한 인스턴스 식별자, 콜백 메서드 및 사용자가 제공한 상태를 사용하여 인스턴스 저장소에서 워크플로를 비동기적으로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-245">Loads a workflow asynchronously from an instance store using the specified instance identifier, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-246">비동기 작업의 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-246">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c98bf-247">인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-247">The instance.</span></span></param>
        <param name="updateMap"><span data-ttu-id="c98bf-248">업데이트 맵입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-248">The update map.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-249">로드 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-249">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-250">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-250">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-251">지정한 인스턴스, 업데이트 맵, 콜백 및 상태를 통해 <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 인스턴스 저장소에서 워크플로를 비동기적으로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-251">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, update map, callback and state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-252">비동기 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-252">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c98bf-253">인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-253">The instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-254">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 로드 시작 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-254">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-255">로드 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-255">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-256">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-256">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-257">지정된 인스턴스, 제한 시간 간격, 콜백 및 상태를 사용하는 <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 인스턴스 저장소에서 워크플로를 비동기적으로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-257">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, timeout interval, callback and state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-258">비동기 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-258">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="c98bf-259">워크플로 인스턴스의 128비트 GUID(Globally Unique Identifier)입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-259">A globally unique 128-bit identifier for the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-260">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 로드 시작 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-260">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-261">로드 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-261">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-262">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-262">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-263">지정한 인스턴스 식별자, 시간 제한 기간, 콜백 메서드 및 사용자가 제공한 상태를 사용하여 인스턴스 저장소에서 워크플로를 비동기적으로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-263">Loads a workflow asynchronously from an instance store using the specified instance identifier, timeout period, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-264">비동기 작업의 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-264">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c98bf-265">인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-265">The instance.</span></span></param>
        <param name="updateMap"><span data-ttu-id="c98bf-266">업데이트 맵입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-266">The update map.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-267">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 로드 시작 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-267">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-268">로드 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-268">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-269">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-269">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-270">지정한 인스턴스, 업데이트 맵, 시간 제한 간격, 콜백 및 상태를 통해 <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 인스턴스 저장소에서 워크플로를 비동기적으로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-270">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, update map, timeout interval, callback and state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-271">비동기 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-271">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-272">
          <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />에서 실행 가능한 워크플로 인스턴스를 로드하는 비동기 프로세스를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-272">Initiates the asynchronous process of loading a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-273">실행 가능한 인스턴스는 타이머 또는 인스턴스 잠금이 만료된 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-273">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="c98bf-274">작업이 완료될 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-274">The method to be called when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-275">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-275">An optional application-specific object containing information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-276"><see cref="P:System.Activities.WorkflowApplication.InstanceStore" />에서 실행 가능한 워크플로 인스턴스를 로드하기 위한 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-276">Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span></span></summary>
        <returns><span data-ttu-id="c98bf-277">비동기 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-277">A reference to the asynchronous operation</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-278">실행 가능한 인스턴스는 타이머 또는 인스턴스 잠금이 만료된 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-278">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="c98bf-279">로드 작업이 성공했는지 확인하려면 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-279">To determine if the load operation was successful, call <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span> <span data-ttu-id="c98bf-280"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>는 `callback` 메서드 내부 또는 외부에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-280"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="c98bf-281">다시 시작 작업이 완료되기 전에 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>를 호출하면 다시 시작 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-281">If <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="c98bf-282">기본적으로 다시 시작 작업은 30초 내에 완료되어야 하며, 그렇지 않으면 <xref:System.TimeoutException>에서 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-282">By default, the resume operation must complete in 30 seconds or else a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span>  
  
 <span data-ttu-id="c98bf-283">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 워크플로를 비동기적으로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-283">This method loads a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-284">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-284">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="c98bf-285">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 로드 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-285">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-286">작업이 완료될 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-286">The method to be called when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-287">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-287">An optional application-specific object containing information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-288">지정한 시간 제한 간격을 사용하여 <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />에서 실행 가능한 워크플로 인스턴스를 로드하기 위한 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-288">Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</span></span></summary>
        <returns><span data-ttu-id="c98bf-289">비동기 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-289">A reference to the asynchronous operation</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-290">실행 가능한 인스턴스는 타이머 또는 인스턴스 잠금이 만료된 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-290">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="c98bf-291">로드 작업이 성공했는지 확인하려면 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-291">To determine if the load operation was successful, call <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span> <span data-ttu-id="c98bf-292"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>는 `callback` 메서드 내부 또는 외부에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-292"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="c98bf-293">다시 시작 작업이 완료되기 전에 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>를 호출하면 다시 시작 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-293">If <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="c98bf-294">로드 작업이 지정한 시간 제한 간격 내에 완료되지 않으면 <xref:System.TimeoutException>에서 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-294">If the load operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span>  
  
 <span data-ttu-id="c98bf-295">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 워크플로를 비동기적으로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-295">This method loads a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-296">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-296">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginPersist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-297">
          <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 워크플로 인스턴스를 인스턴스 저장소에 비동기적으로 지속합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-297">Persists a workflow instance to an instance store asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-298">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-298">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 <span data-ttu-id="c98bf-299">이전에 워크플로 인스턴스가 지속성에서 로드되었다면 워크플로를 로드하는 데 사용되는 동일한 <xref:System.Runtime.DurableInstancing.InstanceStore>가 지속성을 위해 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-299">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="c98bf-300">워크플로가 생성되었으나 아직 지속 상태가 아니라면 이 메서드를 호출하기 전에 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>를 구성해야 합니다. 그렇지 않으면 이 메서드를 호출할 때 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-300">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="c98bf-301">지속 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-301">The method to be called when the persist operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-302">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-302">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-303">지정한 콜백 메서드 및 사용자가 제공한 상태를 사용하여 워크플로 인스턴스를 인스턴스 저장소에 비동기적으로 지속합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-303">Persists a workflow instance to an instance store asynchronously using the specified callback method and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-304">비동기 지속 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-304">A reference to the asynchronous persist operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-305">지속 작업이 성공했는지 확인하려면 <xref:System.Activities.WorkflowApplication.EndPersist%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-305">To determine whether the persist operation was successful, call <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span> <span data-ttu-id="c98bf-306"><xref:System.Activities.WorkflowApplication.EndPersist%2A>는 `callback` 매개 변수에 참조된 메서드 내부 또는 외부에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-306"><xref:System.Activities.WorkflowApplication.EndPersist%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="c98bf-307">지속 작업이 완료되기 전에 <xref:System.Activities.WorkflowApplication.EndPersist%2A>를 호출하면 지속 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-307">If <xref:System.Activities.WorkflowApplication.EndPersist%2A> is called before the persist operation completes, it blocks until the persist operation completes.</span></span> <span data-ttu-id="c98bf-308">지속 작업이 30초 내에 완료되지 않으면 <xref:System.TimeoutException>에서 <xref:System.Activities.WorkflowApplication.EndPersist%2A>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-308">If the persist operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span>  
  
 <span data-ttu-id="c98bf-309">이전에 워크플로 인스턴스가 지속성에서 로드되었다면 워크플로를 로드하는 데 사용되는 동일한 <xref:System.Runtime.DurableInstancing.InstanceStore>가 지속성을 위해 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-309">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="c98bf-310">워크플로가 생성되었으나 아직 지속 상태가 아니라면 이 메서드를 호출하기 전에 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>를 구성해야 합니다. 그렇지 않으면 이 메서드를 호출할 때 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-310">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="c98bf-311">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 워크플로를 비동기적으로 지속합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-311">This method persists a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-312">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-312">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="c98bf-313">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 지속 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-313">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-314">지속 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-314">The method to be called when the persist operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-315">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-315">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-316">지정한 시간 제한 간격, 콜백 메서드 및 사용자가 제공한 상태를 사용하여 워크플로 인스턴스를 인스턴스 저장소에 비동기적으로 지속합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-316">Persists a workflow instance to an instance store asynchronously using the specified time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-317">비동기 지속 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-317">A reference to the asynchronous persist operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-318">지속 작업이 성공했는지 확인하려면 <xref:System.Activities.WorkflowApplication.EndPersist%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-318">To determine whether the persist operation was successful, call <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span> <span data-ttu-id="c98bf-319"><xref:System.Activities.WorkflowApplication.EndPersist%2A>는 `callback` 매개 변수에 참조된 메서드 내부 또는 외부에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-319"><xref:System.Activities.WorkflowApplication.EndPersist%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="c98bf-320">지속 작업이 완료되기 전에 <xref:System.Activities.WorkflowApplication.EndPersist%2A>를 호출하면 지속 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-320">If <xref:System.Activities.WorkflowApplication.EndPersist%2A> is called before the persist operation completes, it blocks until the persist operation completes.</span></span> <span data-ttu-id="c98bf-321">지속 작업이 지정한 시간 제한 간격 내에 완료되지 않으면 <xref:System.TimeoutException>에서 <xref:System.Activities.WorkflowApplication.EndPersist%2A>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-321">If the persist operation does not complete within the specified time-out interval, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span>  
  
 <span data-ttu-id="c98bf-322">이전에 워크플로 인스턴스가 지속성에서 로드되었다면 워크플로를 로드하는 데 사용되는 동일한 <xref:System.Runtime.DurableInstancing.InstanceStore>가 지속성을 위해 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-322">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="c98bf-323">워크플로가 생성되었으나 아직 지속 상태가 아니라면 이 메서드를 호출하기 전에 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>를 구성해야 합니다. 그렇지 않으면 이 메서드를 호출할 때 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-323">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="c98bf-324">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 워크플로 인스턴스를 비동기적으로 지속합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-324">This method persists a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-325">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-325">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-326">책갈피를 다시 시작하기 위한 비동기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-326">Initiates an asynchronous operation to resume a bookmark.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="c98bf-327">다시 시작할 책갈피입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-327">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="c98bf-328">책갈피를 다시 시작할 때 호출할 메서드에 대한 매개 변수로 전달되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-328">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-329">다시 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-329">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-330">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-330">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-331">지정한 값, 콜백 메서드 및 상태를 사용하여 책갈피를 다시 시작하기 위한 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-331">Initiates an operation to resume a bookmark using the specified value, callback method, and state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-332">비동기 책갈피 다시 시작 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-332">A reference to the asynchronous bookmark resume operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-333">다시 시작 작업이 성공했는지 확인하려면 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-333">To determine if the resume operation was successful, call <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span> <span data-ttu-id="c98bf-334"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>는 `callback` 메서드 내부 또는 외부에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-334"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="c98bf-335">다시 시작 작업이 완료되기 전에 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>를 호출하면 다시 시작 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-335">If <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="c98bf-336">기본적으로 다시 시작 작업은 30초 내에 완료되어야 하며, 그렇지 않으면 <xref:System.TimeoutException>에서 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-336">By default, the resume operation must complete in 30 seconds or else a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span>  
  
 <span data-ttu-id="c98bf-337">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 책갈피를 비동기적으로 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-337">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-338">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-338">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="c98bf-339">다시 시작할 책갈피의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-339">The name of the bookmark to be resumed.</span></span></param>
        <param name="value"><span data-ttu-id="c98bf-340">책갈피를 다시 시작할 때 호출할 메서드에 대한 매개 변수로 전달되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-340">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-341">비동기 작업이 완료될 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-341">The method that is called when the asynchronous operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-342">비동기 작업이 시작되기 전에 호출 스레드에 의해 유지되었던 워크플로 실행 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-342">The state of execution of a workflow that was preserved by the calling thread before an asynchronous operation began.</span></span></param>
        <summary><span data-ttu-id="c98bf-343">지정한 값, 콜백 메서드 및 상태를 사용하여 지정한 이름의 책갈피를 다시 시작하기 위한 비동기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-343">Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, callback method, and state.</span></span> <span data-ttu-id="c98bf-344">다시 시작할 책갈피는 워크플로 인스턴스 내의 작업에서 이전에 만든 것입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-344">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="c98bf-345">책갈피 다시 시작 작업의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-345">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-346">책갈피 결과는 다시 시작 작업의 성공 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-346">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="c98bf-347">다시 시작할 책갈피입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-347">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="c98bf-348">책갈피를 다시 시작할 때 호출할 메서드에 대한 매개 변수로 전달되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-348">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-349">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 다시 시작 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-349">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-350">다시 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-350">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-351">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-351">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-352">지정한 값, 시간 제한 간격, 콜백 메서드 및 상태를 사용하여 책갈피를 다시 시작하기 위한 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-352">Initiates an operation to resume a bookmark using the specified value, time-out interval, callback method, and state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-353">비동기 책갈피 다시 시작 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-353">A reference to the asynchronous bookmark resume operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-354">다시 시작 작업이 성공했는지 확인하려면 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-354">To determine if the resume operation was successful, call <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span> <span data-ttu-id="c98bf-355"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>는 `callback` 메서드 내부 또는 외부에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-355"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="c98bf-356">다시 시작 작업이 완료되기 전에 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>를 호출하면 다시 시작 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-356">If <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="c98bf-357">다시 시작 작업이 지정한 시간 제한 간격 내에 완료되지 않으면 <xref:System.TimeoutException>에서 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-357">If the resume operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span>  
  
 <span data-ttu-id="c98bf-358">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 책갈피를 비동기적으로 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-358">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-359">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-359">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="c98bf-360">다시 시작할 책갈피의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-360">The name of the bookmark to be resumed.</span></span></param>
        <param name="value"><span data-ttu-id="c98bf-361">책갈피를 다시 시작할 때 호출할 메서드에 대한 매개 변수로 전달되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-361">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-362">책갈피가 다시 시작되어야 하는 시간 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-362">The time interval during which the bookmark must be resumed.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-363">비동기 작업이 완료될 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-363">The method that is called when the asynchronous operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-364">비동기 작업이 시작되기 전에 호출 스레드에 의해 저장되었던 워크플로 실행 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-364">The state of execution of a workflow that was saved by the calling thread before an asynchronous operation began.</span></span></param>
        <summary><span data-ttu-id="c98bf-365">지정한 값, 시간 제한 간격, 콜백 메서드 및 상태를 사용하여 지정한 이름의 책갈피를 다시 시작하기 위한 비동기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-365">Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, time-out interval, callback method, and state.</span></span> <span data-ttu-id="c98bf-366">다시 시작할 책갈피는 워크플로 인스턴스 내의 작업에서 이전에 만든 것입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-366">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="c98bf-367">책갈피 다시 시작 작업의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-367">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-368">책갈피 결과는 다시 시작 작업의 성공 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-368">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginRun">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-369">
          <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 워크플로 인스턴스를 비동기적으로 시작하거나 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-369">Starts or resumes a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-370">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-370">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="c98bf-371">다시 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-371">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-372">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-372">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-373">지정한 콜백 메서드 및 사용자가 제공한 상태를 사용하여 워크플로 인스턴스를 비동기적으로 시작하거나 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-373">Starts or resumes a workflow instance asynchronously using the specified callback method and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-374">비동기 실행 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-374">A reference to the asynchronous run operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-375">실행 작업이 성공했는지 확인하려면 <xref:System.Activities.WorkflowApplication.EndRun%2A>을 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-375">To determine whether the run operation was successful, call <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span> <span data-ttu-id="c98bf-376"><xref:System.Activities.WorkflowApplication.EndRun%2A>는 `callback` 매개 변수에 참조된 메서드 내부 또는 외부에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-376"><xref:System.Activities.WorkflowApplication.EndRun%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="c98bf-377">다시 시작 작업이 완료되기 전에 <xref:System.Activities.WorkflowApplication.EndRun%2A>를 호출하면 다시 시작 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-377">If <xref:System.Activities.WorkflowApplication.EndRun%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="c98bf-378">기본적으로 다시 시작 작업은 30초 내에 완료되어야 하며, 그렇지 않으면 <xref:System.TimeoutException>에서 <xref:System.Activities.WorkflowApplication.EndRun%2A>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-378">By default, the resume operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span>  
  
 <span data-ttu-id="c98bf-379">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 워크플로를 비동기적으로 시작하거나 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-379">This method starts or resumes a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-380">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-380">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="c98bf-381">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 다시 시작 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-381">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-382">다시 시작 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-382">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-383">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-383">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-384">지정한 시간 제한 간격, 콜백 메서드 및 사용자가 제공한 상태를 사용하여 워크플로 인스턴스를 비동기적으로 시작하거나 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-384">Starts or resumes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-385">비동기 실행 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-385">A reference to the asynchronous run operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-386">실행 작업이 성공했는지 확인하려면 <xref:System.Activities.WorkflowApplication.EndRun%2A>을 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-386">To determine whether the run operation was successful, call <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span> <span data-ttu-id="c98bf-387"><xref:System.Activities.WorkflowApplication.EndRun%2A>는 `callback` 매개 변수에 참조된 메서드 내부 또는 외부에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-387"><xref:System.Activities.WorkflowApplication.EndRun%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="c98bf-388">다시 시작 작업이 완료되기 전에 <xref:System.Activities.WorkflowApplication.EndRun%2A>를 호출하면 다시 시작 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-388">If <xref:System.Activities.WorkflowApplication.EndRun%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="c98bf-389">다시 시작 작업이 지정한 시간 제한 간격 내에 완료되지 않으면 <xref:System.TimeoutException>에서 <xref:System.Activities.WorkflowApplication.EndRun%2A>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-389">If the resume operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span>  
  
 <span data-ttu-id="c98bf-390">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 워크플로를 비동기적으로 시작하거나 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-390">This method starts or resumes a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-391">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-391">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTerminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-392">
          <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 워크플로 인스턴스를 비동기적으로 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-392">Terminates a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-393">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-393">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="c98bf-394">워크플로 인스턴스가 종료된 원인입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-394">The reason the workflow instance is terminated.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-395"><see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-395">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-396">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-396">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-397">지정한 예외, 콜백 메서드 및 사용자가 제공한 상태를 사용하여 워크플로 인스턴스를 비동기적으로 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-397">Terminates a workflow instance asynchronously using the specified exception, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-398">현재 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-398">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-399">이 메서드는 워크플로 인스턴스 종료를 예약합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-399">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="c98bf-400">종료가 완료되었을 때 알림을 받으려면 <xref:System.Activities.WorkflowApplication.Completed%2A> 핸들을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-400">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="c98bf-401"><xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 작업이 성공했는지 확인하려면 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-401">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="c98bf-402"><xref:System.Activities.WorkflowApplication.EndTerminate%2A>는 `callback` 매개 변수에 참조된 메서드 내부 또는 외부에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-402"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="c98bf-403"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> 작업이 완료되기 전에 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>를 호출하면 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-403">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="c98bf-404">기본적으로 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 작업은 30초 내에 완료되어야 하며, 그렇지 않으면 <xref:System.TimeoutException>에서 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-404">By default, the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="c98bf-405">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 워크플로를 비동기적으로 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-405">This method terminates a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-406">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-406">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="c98bf-407">워크플로 인스턴스의 종료 원인입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-407">The reason for terminating the workflow instance.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-408"><see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-408">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-409">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-409">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-410">지정한 오류 메시지, 콜백 메서드 및 사용자가 제공한 상태를 사용하여 워크플로 인스턴스를 비동기적으로 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-410">Terminates a workflow instance asynchronously using the specified error message, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-411">현재 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-411">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-412">이 메서드는 워크플로 인스턴스 종료를 예약합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-412">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="c98bf-413">종료가 완료되었을 때 알림을 받으려면 <xref:System.Activities.WorkflowApplication.Completed%2A> 핸들을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-413">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="c98bf-414"><xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 작업이 성공했는지 확인하려면 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-414">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="c98bf-415"><xref:System.Activities.WorkflowApplication.EndTerminate%2A>는 `callback` 매개 변수에 참조된 메서드 내부 또는 외부에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-415"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="c98bf-416"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> 작업이 완료되기 전에 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>를 호출하면 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-416">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="c98bf-417">기본적으로 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 작업은 30초 내에 완료되어야 하며, 그렇지 않으면 <xref:System.TimeoutException>에서 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-417">By default, the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="c98bf-418">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 워크플로 인스턴스를 비동기적으로 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-418">This method terminates a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-419">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-419">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="c98bf-420">워크플로 인스턴스의 종료 원인입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-420">The reason for terminating the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-421">작업이 취소되고 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />이 throw되기 전에 <see cref="T:System.TimeoutException" /> 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-421">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-422"><see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-422">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-423">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-423">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-424">지정한 예외, 시간 제한 간격, 콜백 메서드 및 사용자가 제공한 상태를 사용하여 워크플로 인스턴스를 비동기적으로 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-424">Terminates a workflow instance asynchronously using the specified exception, time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-425">현재 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-425">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-426">이 메서드는 워크플로 인스턴스 종료를 예약합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-426">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="c98bf-427">종료가 완료되었을 때 알림을 받으려면 <xref:System.Activities.WorkflowApplication.Completed%2A> 핸들을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-427">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="c98bf-428"><xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 작업이 성공했는지 확인하려면 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-428">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="c98bf-429"><xref:System.Activities.WorkflowApplication.EndTerminate%2A>는 `callback` 메서드 내부 또는 외부에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-429"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="c98bf-430"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> 작업이 완료되기 전에 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>를 호출하면 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-430">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="c98bf-431"><xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 작업이 지정한 시간 제한 간격 내에 완료되지 않으면 <xref:System.TimeoutException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-431">If the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown.</span></span> <span data-ttu-id="c98bf-432">이 예외 또는 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 프로세스 동안 발생하는 다른 모든 예외가 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>에서 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-432">This or any other exceptions that occur during the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> process is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="c98bf-433">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 워크플로를 비동기적으로 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-433">This method terminates a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-434">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-434">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="c98bf-435">워크플로 인스턴스의 종료 원인입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-435">The reason for terminating the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-436">작업이 취소되고 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />이 throw되기 전에 <see cref="T:System.TimeoutException" /> 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-436">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-437"><see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-437">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-438">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-438">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-439">지정한 오류 메시지, 시간 제한 간격, 콜백 메서드 및 사용자가 제공한 상태를 사용하여 워크플로 인스턴스를 비동기적으로 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-439">Terminates a workflow instance asynchronously using the specified error message, time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-440">비동기 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-440">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-441">이 메서드는 워크플로 인스턴스 종료를 예약합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-441">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="c98bf-442">종료가 완료되었을 때 알림을 받으려면 <xref:System.Activities.WorkflowApplication.Completed%2A> 핸들을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-442">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="c98bf-443"><xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 작업이 성공했는지 확인하려면 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-443">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="c98bf-444"><xref:System.Activities.WorkflowApplication.EndTerminate%2A>는 `callback` 매개 변수에 참조된 메서드 내부 또는 외부에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-444"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="c98bf-445"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> 작업이 완료되기 전에 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>를 호출하면 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-445">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="c98bf-446"><xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 작업이 지정한 시간 제한 간격 내에 완료되지 않으면 <xref:System.TimeoutException>에서 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-446">If the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="c98bf-447">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 워크플로 인스턴스를 비동기적으로 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-447">This method terminates a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-448">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-448">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginUnload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-449">
          <see cref="T:System.IAsyncResult" /> 비동기 디자인 패턴을 사용하여 워크플로 인스턴스를 비동기적으로 지속하고 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-449">Persists and disposes a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-450">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-450">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 <span data-ttu-id="c98bf-451">이전에 워크플로 인스턴스가 지속성에서 로드되었다면 워크플로를 로드하는 데 사용되는 동일한 <xref:System.Runtime.DurableInstancing.InstanceStore>가 지속성을 위해 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-451">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="c98bf-452">워크플로가 생성되었으나 아직 지속 상태가 아니라면 이 메서드를 호출하기 전에 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>를 구성해야 합니다. 그렇지 않으면 이 메서드를 호출할 때 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-452">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="c98bf-453"><see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-453">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-454">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-454">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-455">지정한 콜백 메서드 및 사용자가 제공한 상태를 사용하여 워크플로 인스턴스를 비동기적으로 지속하고 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-455">Persists and disposes a workflow instance asynchronously using the specified callback method and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-456">비동기 <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-456">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-457"><xref:System.Activities.WorkflowApplication.BeginUnload%2A> 작업이 성공했는지 확인하려면 <xref:System.Activities.WorkflowApplication.EndUnload%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-457">To determine whether the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span> <span data-ttu-id="c98bf-458"><xref:System.Activities.WorkflowApplication.EndUnload%2A>는 `callback` 매개 변수에 참조된 메서드 내부 또는 외부에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-458"><xref:System.Activities.WorkflowApplication.EndUnload%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="c98bf-459"><xref:System.Activities.WorkflowApplication.EndUnload%2A> 작업이 완료되기 전에 <xref:System.Activities.WorkflowApplication.BeginUnload%2A>를 호출하면 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-459">If <xref:System.Activities.WorkflowApplication.EndUnload%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes.</span></span> <span data-ttu-id="c98bf-460">기본적으로 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 작업은 30초 내에 완료되어야 하며, 그렇지 않으면 <xref:System.TimeoutException>에서 <xref:System.Activities.WorkflowApplication.EndUnload%2A>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-460">By default, the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span>  
  
 <span data-ttu-id="c98bf-461">이전에 워크플로 인스턴스가 지속성에서 로드되었다면 워크플로를 로드하는 데 사용되는 동일한 <xref:System.Runtime.DurableInstancing.InstanceStore>가 지속성을 위해 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-461">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="c98bf-462">워크플로가 생성되었으나 아직 지속 상태가 아니라면 이 메서드를 호출하기 전에 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>를 구성해야 합니다. 그렇지 않으면 이 메서드를 호출할 때 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-462">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="c98bf-463">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 워크플로 인스턴스를 비동기적으로 지속하고 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-463">This method persists and disposes a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-464">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-464">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="c98bf-465">작업이 취소되고 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />이 throw되기 전에 <see cref="T:System.TimeoutException" /> 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-465">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="c98bf-466"><see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> 작업이 완료되었을 때 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-466">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="c98bf-467">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-467">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-468">지정한 시간 제한 간격, 콜백 메서드 및 사용자가 제공한 상태를 사용하여 워크플로 인스턴스를 비동기적으로 지속하고 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-468">Persists and disposes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="c98bf-469">비동기 <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-469">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-470"><xref:System.Activities.WorkflowApplication.BeginUnload%2A> 작업이 성공했는지 확인하려면 <xref:System.Activities.WorkflowApplication.EndUnload%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-470">To determine whether the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span> <span data-ttu-id="c98bf-471"><xref:System.Activities.WorkflowApplication.EndUnload%2A>는 `callback` 매개 변수에 참조된 메서드 내부 또는 외부에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-471"><xref:System.Activities.WorkflowApplication.EndUnload%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="c98bf-472"><xref:System.Activities.WorkflowApplication.EndUnload%2A> 작업이 완료되기 전에 <xref:System.Activities.WorkflowApplication.BeginUnload%2A>를 호출하면 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-472">If <xref:System.Activities.WorkflowApplication.EndUnload%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes.</span></span> <span data-ttu-id="c98bf-473"><xref:System.Activities.WorkflowApplication.BeginUnload%2A> 작업이 지정한 시간 제한 간격 내에 완료되지 않으면 <xref:System.TimeoutException>에서 <xref:System.Activities.WorkflowApplication.EndUnload%2A>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-473">If the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span>  
  
 <span data-ttu-id="c98bf-474">이전에 워크플로 인스턴스가 지속성에서 로드되었다면 워크플로를 로드하는 데 사용되는 동일한 <xref:System.Runtime.DurableInstancing.InstanceStore>가 지속성을 위해 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-474">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="c98bf-475">워크플로가 생성되었으나 아직 지속 상태가 아니라면 이 메서드를 호출하기 전에 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>를 구성해야 합니다. 그렇지 않으면 이 메서드를 호출할 때 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-475">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="c98bf-476">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 워크플로 인스턴스를 비동기적으로 지속하고 언로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-476">This method persists and unloads a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-477">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-477">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Cancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-478">워크플로 인스턴스를 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-478">Cancels the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-479">이 메서드는 워크플로 인스턴스 취소를 예약합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-479">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="c98bf-480">취소가 완료되었을 때 알림을 받으려면 <xref:System.Activities.WorkflowApplication.Completed%2A> 핸들을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-480">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="c98bf-481">기본적으로 취소 작업은 30초 내에 완료되어야 하며, 그렇지 않으면 <xref:System.TimeoutException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-481">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c98bf-482">워크플로 인스턴스를 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-482">Cancels the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-483">이 메서드는 워크플로 인스턴스 취소를 예약합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-483">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="c98bf-484">취소가 완료되었을 때 알림을 받으려면 <xref:System.Activities.WorkflowApplication.Completed%2A> 처리기를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-484">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handler.</span></span>  
  
 <span data-ttu-id="c98bf-485">기본적으로 취소 작업은 30초 내에 완료되어야 하며, 그렇지 않으면 <xref:System.TimeoutException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-485">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-486">다음 예제에서는 <xref:System.Activities.WorkflowApplication>을 사용하여 워크플로를 호스트합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-486">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="c98bf-487">지정한 워크플로 정의를 사용하여 <xref:System.Activities.WorkflowApplication> 인스턴스가 생성되고, 원하는 워크플로 수명 주기 이벤트가 처리되고, <xref:System.Activities.WorkflowApplication.Run%2A>을 호출하여 워크플로가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-487">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="c98bf-488">워크플로가 시작된 후에 <xref:System.Activities.WorkflowApplication.Cancel%2A>가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-488">After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called.</span></span> <span data-ttu-id="c98bf-489">워크플로가 취소되면 다음 출력이 콘솔에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-489">When the workflow is cancelled, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="c98bf-490">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 취소 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-490">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="c98bf-491">지정한 시간 제한 간격을 사용하여 워크플로 인스턴스를 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-491">Cancels the workflow instance using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-492">이 메서드는 워크플로 인스턴스 취소를 예약합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-492">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="c98bf-493">취소가 완료되었을 때 알림을 받으려면 <xref:System.Activities.WorkflowApplication.Completed%2A> 처리기를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-493">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-494">다음 예제에서는 <xref:System.Activities.WorkflowApplication>을 사용하여 워크플로를 호스트합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-494">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="c98bf-495">지정한 워크플로 정의를 사용하여 <xref:System.Activities.WorkflowApplication> 인스턴스가 생성되고, 원하는 워크플로 수명 주기 이벤트가 처리되고, <xref:System.Activities.WorkflowApplication.Run%2A>을 호출하여 워크플로가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-495">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="c98bf-496">워크플로가 시작된 후에 <xref:System.Activities.WorkflowApplication.Cancel%2A>가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-496">After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called.</span></span> <span data-ttu-id="c98bf-497">워크플로가 취소되면 다음 출력이 콘솔에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-497">When the workflow is cancelled, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Property Completed As Action(Of WorkflowApplicationCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ Completed { Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c98bf-498">워크플로 인스턴스가 완료될 때 호출되는 <see cref="T:System.Action`1" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-498">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance completes.</span></span></summary>
        <value><span data-ttu-id="c98bf-499">워크플로 인스턴스가 완료될 때 호출되는 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-499">The action that is invoked when the workflow instance is complete.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c98bf-500">다음 코드 예제에서는 <xref:System.Activities.WorkflowApplicationCompletedEventArgs> 인스턴스의 <xref:System.Activities.WorkflowApplication.Completed%2A> 처리기로 전달된 <xref:System.Activities.WorkflowApplication>를 검사하고 워크플로가 완료된 방식에 대한 정보를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-500">The following code example inspects the <xref:System.Activities.WorkflowApplicationCompletedEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Completed%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about how the workflow completed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#4](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-501">워크플로의 기본 인스턴스 소유자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-501">Creates a default instance owner for the workflow.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="c98bf-502">워크플로 응용 프로그램의 현재 인스턴스의 지속 상태에 대한 액세스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-502">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="c98bf-503">워크플로의 정의 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-503">The definition identity of the workflow.</span></span></param>
        <param name="identityFilter"><span data-ttu-id="c98bf-504">ID 필터입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-504">The identity filter.</span></span></param>
        <summary><span data-ttu-id="c98bf-505">지정된 인스턴스 저장소, 정의 ID 및 ID 필터를 사용하여 워크플로의 기본 인스턴스 소유자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-505">Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="c98bf-506">워크플로 응용 프로그램의 현재 인스턴스의 지속 상태에 대한 액세스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-506">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="c98bf-507">워크플로의 정의 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-507">The definition identity of the workflow.</span></span></param>
        <param name="identityFilter"><span data-ttu-id="c98bf-508">ID 필터입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-508">The identity filter.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-509">작업이 취소되기 전에 시작 로드 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-509">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="c98bf-510">지정된 인스턴스 저장소, 정의 ID, ID 필터 및 제한 시간 간격을 사용하여 워크플로의 기본 인스턴스 소유자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-510">Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter and timeout interval.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-511">워크플로의 기본 인스턴스 소유자를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-511">Deletes a default instance owner for the workflow.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="c98bf-512">워크플로 응용 프로그램의 현재 인스턴스의 지속 상태에 대한 액세스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-512">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <summary><span data-ttu-id="c98bf-513">지정된 인스턴스 저장소가 있는 워크플로에 대한 기본 인스턴스 소유자를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-513">Deletes a default instance owner for the workflow with specified instance store.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="c98bf-514">워크플로 응용 프로그램의 현재 인스턴스의 지속 상태에 대한 액세스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-514">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-515">작업이 취소되기 전에 시작 로드 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-515">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="c98bf-516">지정된 인스턴스 저장소 및 제한 시간 간격이 있는 워크플로에 대한 기본 인스턴스 소유자를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-516">Deletes a default instance owner for the workflow with specified instance store and timeout interval..</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCancel">
      <MemberSignature Language="C#" Value="public void EndCancel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCancel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCancel (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCancel(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="c98bf-517">비동기 취소 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-517">The asynchronous cancel operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-518">보류 중인 비동기 취소 작업이 완료되기를 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-518">Waits for the pending asynchronous cancel operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-519">이 메서드는 <xref:System.Activities.WorkflowApplication.BeginCancel%2A> 작업의 성공 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-519">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginCancel%2A> operation was successful.</span></span> <span data-ttu-id="c98bf-520">취소 작업이 완료되기 전에 호출하면 취소 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-520">If called before the cancel operation completes, it blocks until the cancel operation is complete.</span></span>  
  
 <span data-ttu-id="c98bf-521">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 비동기 취소 작업을 완료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-521">This method completes the asynchronous cancel operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-522">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-522">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndCreateDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndCreateDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndCreateDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndCreateDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="c98bf-523">비동기 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-523">The asynchronous result.</span></span></param>
        <summary><span data-ttu-id="c98bf-524">기본 인스턴스 소유자 만들기가 완료되기를 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-524">Waits for the creation of default instance owner to complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndDeleteDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndDeleteDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndDeleteDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndDeleteDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="c98bf-525">비동기 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-525">The asynchronous result.</span></span></param>
        <summary><span data-ttu-id="c98bf-526">기본 인스턴스 소유자 삭제가 완료되기를 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-526">Waits for the deletion of default instance owner to complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetInstance(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="c98bf-527">비동기 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-527">The asynchronous result.</span></span></param>
        <summary><span data-ttu-id="c98bf-528">인스턴스 검색이 완료되기를 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-528">Waits for the instance retrieval to complete.</span></span></summary>
        <returns><span data-ttu-id="c98bf-529">작업의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-529">The result of the operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetRunnableInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetRunnableInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetRunnableInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetRunnableInstance(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="c98bf-530">비동기 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-530">The asynchronous result.</span></span></param>
        <summary><span data-ttu-id="c98bf-531">비동기 실행 가능한 인스턴스 검색 작업이 완료되기를 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-531">Waits for the asynchronous retrieval of runnable instance operation to complete.</span></span></summary>
        <returns><span data-ttu-id="c98bf-532">작업의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-532">The result of the operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public void EndLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoad (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoad(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="c98bf-533">비동기 로드 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-533">The asynchronous load operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-534">보류 중인 비동기 로드 작업이 완료되기를 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-534">Waits for the pending asynchronous load operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-535">로드 작업이 완료되기 전에 이 메서드를 호출하면 로드 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-535">If this method is called before the loading operation completes, it blocks until the loading operation is complete.</span></span>  
  
 <span data-ttu-id="c98bf-536">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 비동기 로드 작업을 완료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-536">This method completes the asynchronous load operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-537">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-537">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void EndLoadRunnableInstance (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoadRunnableInstance(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoadRunnableInstance (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoadRunnableInstance(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="c98bf-538">비동기 로드 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-538">A reference to the asynchronous load operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-539">비동기 실행 가능한 인스턴스 로드 작업이 완료되기를 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-539">Waits for the asynchronous load runnable instance operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-540">이 메서드는 <xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> 작업의 성공 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-540">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> operation was successful.</span></span> <span data-ttu-id="c98bf-541">로드 작업이 완료되기 전에 호출하면 해당 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-541">If called before the load operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="c98bf-542">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 워크플로를 비동기적으로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-542">This method loads workflows asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-543">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-543">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPersist">
      <MemberSignature Language="C#" Value="public void EndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndPersist(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="c98bf-544">비동기 지속 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-544">The asynchronous persist operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-545">보류 중인 비동기 지속 작업이 완료되기를 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-545">Waits for the pending asynchronous persist operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-546">이 메서드는 <xref:System.Activities.WorkflowApplication.BeginPersist%2A> 작업의 성공 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-546">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginPersist%2A> operation was successful.</span></span> <span data-ttu-id="c98bf-547">지속 작업이 완료되기 전에 호출하면 지속 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-547">If called before the persist operation completes, it blocks until the persist operation is complete.</span></span>  
  
 <span data-ttu-id="c98bf-548">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 비동기 지속 작업을 완료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-548">This method completes the asynchronous persist operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-549">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-549">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult EndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult EndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult EndResumeBookmark(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="c98bf-550">비동기 책갈피 다시 시작 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-550">A reference to the asynchronous bookmark resume operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-551">책갈피 다시 시작 작업이 완료되기를 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-551">Waits for a bookmark resume operation to complete.</span></span></summary>
        <returns><span data-ttu-id="c98bf-552">책갈피 다시 시작 작업의 결과를 나타내는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-552">One of the enumeration values that indicates the results of a bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-553">이 메서드는 <xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> 작업의 성공 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-553">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> operation was successful.</span></span> <span data-ttu-id="c98bf-554">로드 작업이 완료되기 전에 호출하면 해당 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-554">If called before the load operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="c98bf-555">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 책갈피를 비동기적으로 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-555">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-556">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-556">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRun">
      <MemberSignature Language="C#" Value="public void EndRun (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndRun(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndRun (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndRun(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="c98bf-557">비동기 실행 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-557">The asynchronous run operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-558">보류 중인 비동기 실행 작업이 완료되기를 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-558">Waits for the pending asynchronous run operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-559">이 메서드는 <xref:System.Activities.WorkflowApplication.BeginRun%2A> 작업의 성공 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-559">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginRun%2A> operation was successful.</span></span> <span data-ttu-id="c98bf-560">다시 시작 작업이 완료되기 전에 메서드를 호출하면 다시 시작 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-560">If called before the resume operation completes, it blocks until the resume operation is complete.</span></span>  
  
 <span data-ttu-id="c98bf-561">이 메서드는 <xref:System.IAsyncResult> 비동기 디자인 패턴을 사용하여 비동기 실행 작업을 완료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-561">This method completes an asynchronous run operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-562">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-562">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTerminate">
      <MemberSignature Language="C#" Value="public void EndTerminate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndTerminate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndTerminate (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndTerminate(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="c98bf-563">비동기 종료 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-563">The asynchronous terminate operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-564">보류 중인 비동기 종료 작업이 완료되기를 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-564">Waits for the pending asynchronous terminate operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-565">이 메서드를 호출하여 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 작업의 성공 여부를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-565">This method can be called to determine whether a <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful.</span></span> <span data-ttu-id="c98bf-566">종료 작업이 완료되기 전에 호출하면 해당 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-566">If called before the terminate operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="c98bf-567">이 메서드는 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 비동기 디자인 패턴을 사용하여 비동기 <xref:System.IAsyncResult> 작업을 완료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-567">This method completes an asynchronous <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-568">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-568">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUnload">
      <MemberSignature Language="C#" Value="public void EndUnload (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUnload(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUnload (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUnload(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="c98bf-569">비동기 언로드 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-569">The asynchronous unload operation.</span></span></param>
        <summary><span data-ttu-id="c98bf-570">보류 중인 비동기 언로드 작업이 완료되기를 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-570">Waits for the pending asynchronous unload operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-571">이 메서드를 호출하여 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 작업의 성공 여부를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-571">This method can be called to determine whether a <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful.</span></span> <span data-ttu-id="c98bf-572">언로드 작업이 완료되기 전에 호출하면 해당 작업이 완료될 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-572">If called before the unload operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="c98bf-573">이 메서드는 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 비동기 디자인 패턴을 사용하여 비동기 <xref:System.IAsyncResult> 작업을 완료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-573">This method completes an asynchronous <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="c98bf-574">자세한 내용은 참조 [비동기 프로그래밍 개요](http://go.microsoft.com/fwlink/?LinkId=141764)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-574">For more information, see [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As WorkflowInstanceExtensionManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Hosting::WorkflowInstanceExtensionManager ^ Extensions { System::Activities::Hosting::WorkflowInstanceExtensionManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Hosting.WorkflowInstanceExtensionManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c98bf-575">현재 워크플로 인스턴스에 대한 확장명 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-575">Gets the collection of extensions for the current workflow instance.</span></span></summary>
        <value><span data-ttu-id="c98bf-576">개체 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-576">A collection of objects.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBookmarks">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-577">워크플로 인스턴스의 책갈피 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-577">Returns the collection of bookmarks for the workflow instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks () As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c98bf-578">워크플로 인스턴스의 책갈피 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-578">Returns the collection of bookmarks for the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="c98bf-579">워크플로 인스턴스의 책갈피 읽기 전용 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-579">A read-only collection of bookmarks for the workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-580">이 작업이 30초 내에 완료되지 않으면 <xref:System.TimeoutException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-580">If this operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-581">다음 예제에서는 `ReadLine`를 만드는 <xref:System.Activities.Bookmark> 활동을 사용하는 워크플로를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-581">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="c98bf-582">워크플로가 시작된 다음 <xref:System.Activities.Bookmark>가 만들어지고 워크플로가 유휴 상태가 되면 <xref:System.Activities.WorkflowApplication.GetBookmarks%2A>가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-582">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called.</span></span> <span data-ttu-id="c98bf-583">워크플로가 완료되면 다음 출력이 콘솔에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-583">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks (timeout As TimeSpan) As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="c98bf-584">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 이 메서드를 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-584">The interval in which this method must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="c98bf-585">지정한 시간 제한 간격을 사용하여 워크플로 인스턴스의 책갈피 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-585">Returns the collection of bookmarks for the workflow instance using the specified time-out interval.</span></span></summary>
        <returns><span data-ttu-id="c98bf-586">워크플로 인스턴스의 책갈피 읽기 전용 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-586">A read-only collection of bookmarks for the workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c98bf-587">다음 예제에서는 `ReadLine`를 만드는 <xref:System.Activities.Bookmark> 활동을 사용하는 워크플로를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-587">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="c98bf-588">워크플로가 시작된 다음 <xref:System.Activities.Bookmark>가 만들어지고 워크플로가 유휴 상태가 되면 <xref:System.Activities.WorkflowApplication.GetBookmarks%2A>가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-588">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called.</span></span> <span data-ttu-id="c98bf-589">워크플로가 완료되면 다음 출력이 콘솔에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-589">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-590">워크플로 인스턴스를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-590">Retrieves the workflow instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="c98bf-591">인스턴스 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-591">The instance identifier.</span></span></param>
        <param name="instanceStore"><span data-ttu-id="c98bf-592">워크플로 응용 프로그램의 현재 인스턴스의 지속 상태에 대한 액세스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-592">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <summary><span data-ttu-id="c98bf-593">지정된 인스턴스 ID 및 인스턴스 저장소를 사용하여 워크플로 인스턴스를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-593">Retrieves the workflow instance using specified instance identifier and instance store.</span></span></summary>
        <returns><span data-ttu-id="c98bf-594">검색된 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-594">The retrieved instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="c98bf-595">인스턴스 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-595">The instance identifier.</span></span></param>
        <param name="instanceStore"><span data-ttu-id="c98bf-596">워크플로 응용 프로그램의 현재 인스턴스의 지속 상태에 대한 액세스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-596">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-597">작업이 취소되기 전에 시작 로드 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-597">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="c98bf-598">지정된 인스턴스 ID, 인스턴스 저장소 및 시간 제한 간격을 사용하여 워크플로 인스턴스를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-598">Retrieves the workflow instance using specified instance identifier, instance store and timeout interval.</span></span></summary>
        <returns><span data-ttu-id="c98bf-599">비동기 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-599">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-600">워크플로의 실행 가능한 인스턴스를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-600">Retrieves the runnable instance of the workflow.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="c98bf-601">워크플로 응용 프로그램의 현재 인스턴스의 지속 상태에 대한 액세스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-601">The access to the persisted state of the current instance of the workflow application</span></span></param>
        <summary><span data-ttu-id="c98bf-602">지정된 인스턴스 저장소가 있는 워크플로의 실행 가능한 인스턴스를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-602">Retrieves the runnable instance of the workflow with specified instance store.</span></span></summary>
        <returns><span data-ttu-id="c98bf-603">실행 가능한 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-603">The runnable instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="c98bf-604">워크플로 응용 프로그램의 현재 인스턴스의 지속 상태에 대한 액세스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-604">The access to the persisted state of the current instance of the workflow application</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-605">작업이 취소되기 전에 시작 로드 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-605">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="c98bf-606">지정된 인스턴스 저장소 및 제한 시간 간격이 있는 워크플로의 실행 가능한 인스턴스를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-606">Retrieves the runnable instance of the workflow with specified instance store and timeout interval.</span></span></summary>
        <returns><span data-ttu-id="c98bf-607">실행 가능한 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-607">The runnable instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid Id { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c98bf-608">현재 워크플로 응용 프로그램 인스턴스의 128비트 GUID 식별자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-608">Gets the 128-bit GUID identifier of the current workflow application instance.</span></span></summary>
        <value><span data-ttu-id="c98bf-609">128비트 GUID 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-609">A 128-bit GUID identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c98bf-610">다음 예제에서는 <xref:System.Activities.WorkflowApplication> 인스턴스를 만든 다음 <xref:System.Activities.WorkflowApplication.Id%2A> 값을 콘솔에 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-610">The following example creates a <xref:System.Activities.WorkflowApplication> instance and then displays the <xref:System.Activities.WorkflowApplication.Id%2A> value to the console.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Idle">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Idle" />
      <MemberSignature Language="VB.NET" Value="Public Property Idle As Action(Of WorkflowApplicationIdleEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ Idle { Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c98bf-611">현재 워크플로 인스턴스가 유휴 상태가 될 때 호출되는 <see cref="T:System.Action`1" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-611">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow instance becomes idle.</span></span></summary>
        <value><span data-ttu-id="c98bf-612">워크플로 인스턴스가 유휴 상태가 될 때 실행하는 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-612">An action that executes when a workflow instance becomes idle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c98bf-613">다음 코드 예제에서는 <xref:System.Activities.WorkflowApplicationIdleEventArgs> 인스턴스의 <xref:System.Activities.WorkflowApplication.Idle%2A> 처리기로 전달된 <xref:System.Activities.WorkflowApplication>를 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-613">The following code example inspects the <xref:System.Activities.WorkflowApplicationIdleEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Idle%2A> handler of a <xref:System.Activities.WorkflowApplication> instance.</span></span> <span data-ttu-id="c98bf-614">이 예제에서는 유휴 상태로 전환되는 워크플로에 이름이 <xref:System.Activities.Bookmark>이고 `EnterGuess` 활동이 소유하는 `ReadInt` 한 개가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-614">In this example the workflow going idle has one <xref:System.Activities.Bookmark> with a name of `EnterGuess`, owned by an activity named `ReadInt`.</span></span> <span data-ttu-id="c98bf-615">이 코드 예제는에 기반을 둔 [하는 방법: 워크플로 실행](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md)의 일부인는 [초보자를 위한 자습서 &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-615">This code example is based off of [How to: Run a Workflow](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span></span> <span data-ttu-id="c98bf-616">이 단계에서 <xref:System.Activities.WorkflowApplication.Idle%2A> 처리기가 이 예제 코드를 포함하도록 수정되면 다음과 같은 출력이 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-616">If the <xref:System.Activities.WorkflowApplication.Idle%2A> handler in that step is modified to contain the code from this example, the following output is displayed.</span></span>  
  
```Output  
BookmarkName: EnterGuess - OwnerDisplayName: ReadInt  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#2](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceStore">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceStore InstanceStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceStore InstanceStore" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.InstanceStore" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceStore As InstanceStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceStore ^ InstanceStore { System::Runtime::DurableInstancing::InstanceStore ^ get(); void set(System::Runtime::DurableInstancing::InstanceStore ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c98bf-617">워크플로 응용 프로그램의 현재 인스턴스에 대한 지속 상태에 액세스할 수 있는 개체를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-617">Gets or sets an object that provides access to the persisted state of the current instance of the workflow application.</span></span></summary>
        <value><span data-ttu-id="c98bf-618">인스턴스 저장소입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-618">An instance store.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c98bf-619">다음 예제에서는 WorkflowApplication 인스턴스를 만든 다음 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>를 사용하여 <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>를 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-619">The following example creates a WorkflowApplication instance and then configures the <xref:System.Activities.WorkflowApplication.InstanceStore%2A> using a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="c98bf-620">이 코드 예제는 [하는 방법: 만들기 및 장기 실행 워크플로 실행](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md)의 일부인는 [초보자를 위한 자습서 &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-620">This code example is part of [How to: Create and Run a Long Running Workflow](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-621">인스턴스 저장소에서 워크플로 인스턴스를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-621">Loads a workflow instance from an instance store.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c98bf-622">인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-622">The instance.</span></span></param>
        <summary><span data-ttu-id="c98bf-623">지정된 인스턴스를 사용하여 인스턴스 저장소에서 워크플로 인스턴스를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-623">Loads a workflow instance from an instance store with specified instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="c98bf-624">워크플로 인스턴스의 128비트 GUID(Globally Unique Identifier)입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-624">A globally unique 128-bit identifier for the workflow instance.</span></span></param>
        <summary><span data-ttu-id="c98bf-625">인스턴스 저장소에서 지정한 워크플로 인스턴스를 메모리에 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-625">Loads the specified workflow instance into memory from an instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c98bf-626">다음 예제에서는 <xref:System.Activities.WorkflowApplication.Load%2A>를 호출하여 <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>에서 지속된 워크플로 인스턴스를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-626">The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="c98bf-627">이 예제에서는 `LoadAndCompleteInstance` 에서 메서드는 [워크플로 응용 프로그램 유지](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) 샘플.</span><span class="sxs-lookup"><span data-stu-id="c98bf-627">This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c98bf-628">인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-628">The instance.</span></span></param>
        <param name="updateMap"><span data-ttu-id="c98bf-629">업데이트 맵입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-629">The update map.</span></span></param>
        <summary><span data-ttu-id="c98bf-630">지정된 인스턴스 및 업데이트 맵을 사용하여 인스턴스 저장소에서 워크플로 인스턴스를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-630">Loads a workflow instance from an instance store with specified instance and update map.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c98bf-631">인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-631">The instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-632">작업이 취소되기 전에 시작 로드 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-632">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="c98bf-633">지정된 인스턴스 및 제한 시간 간격을 사용하여 인스턴스 저장소에서 워크플로 인스턴스를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-633">Loads a workflow instance from an instance store with specified instance and timeout interval.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="c98bf-634">워크플로 인스턴스의 128비트 GUID(Globally Unique Identifier)입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-634">A globally unique 128-bit identifier for the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-635">로드 작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 로드 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-635">The interval in which the load operation must complete before the load operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="c98bf-636">지정한 시간 제한 간격을 사용하여 인스턴스 저장소에서 지정한 워크플로 인스턴스를 메모리에 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-636">Loads the specified workflow instance into memory from an instance store using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c98bf-637">다음 예제에서는 <xref:System.Activities.WorkflowApplication.Load%2A>를 호출하여 <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>에서 지속된 워크플로 인스턴스를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-637">The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="c98bf-638">이 예제에서는 `LoadAndCompleteInstance` 에서 메서드는 [워크플로 응용 프로그램 유지](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) 샘플.</span><span class="sxs-lookup"><span data-stu-id="c98bf-638">This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c98bf-639">인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-639">The instance.</span></span></param>
        <param name="updateMap"><span data-ttu-id="c98bf-640">업데이트 맵입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-640">The update map.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-641">작업이 취소되기 전에 시작 로드 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-641">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="c98bf-642">지정된 인스턴스, 업데이트 맵 및 제한 시간 간격을 사용하여 인스턴스 저장소에서 워크플로 인스턴스를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-642">Loads a workflow instance from an instance store with specified instance, update map and timeout interval.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-643"><see cref="P:System.Activities.WorkflowApplication.InstanceStore" />에서 실행 가능한 워크플로 인스턴스를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-643">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-644">실행 가능한 인스턴스는 타이머 또는 인스턴스 잠금이 만료된 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-644">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c98bf-645"><see cref="P:System.Activities.WorkflowApplication.InstanceStore" />에서 실행 가능한 워크플로 인스턴스를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-645">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-646">실행 가능한 인스턴스는 타이머 또는 인스턴스 잠금이 만료된 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-646">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="c98bf-647">기본적으로 로드 작업은 30초 내에 완료되어야 하며, 그렇지 않으면 <xref:System.TimeoutException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-647">By default, the load operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="c98bf-648">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 로드 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-648">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="c98bf-649">지정한 시간 제한 간격을 사용하여 <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />에서 실행 가능한 워크플로 인스턴스를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-649">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-650">실행 가능한 인스턴스는 타이머 또는 인스턴스 잠금이 만료된 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-650">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginAssociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginAssociateKeys (keys As ICollection(Of InstanceKey), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginAssociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginPersist">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">To be added.</param>
        <param name="value">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisassociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnDisassociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnDisassociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnDisassociateKeys (keys As ICollection(Of InstanceKey))" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnDisassociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnEndAssociateKeys (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndAssociateKeys(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndAssociateKeys(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndAssociateKeys (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndAssociateKeys(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndPersist">
      <MemberSignature Language="C#" Value="protected internal override void OnEndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndPersist(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Activities.BookmarkResumptionResult OnEndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnEndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Activities::BookmarkResumptionResult OnEndResumeBookmark(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyPaused">
      <MemberSignature Language="C#" Value="protected override void OnNotifyPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyPaused" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnNotifyPaused ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyPaused();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyUnhandledException">
      <MemberSignature Language="C#" Value="protected override void OnNotifyUnhandledException (Exception exception, System.Activities.Activity exceptionSource, string exceptionSourceInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyUnhandledException(class System.Exception exception, class System.Activities.Activity exceptionSource, string exceptionSourceInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyUnhandledException(Exception ^ exception, System::Activities::Activity ^ exceptionSource, System::String ^ exceptionSourceInstanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="exceptionSource" Type="System.Activities.Activity" />
        <Parameter Name="exceptionSourceInstanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception">To be added.</param>
        <param name="exceptionSource">To be added.</param>
        <param name="exceptionSourceInstanceId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRequestAbort">
      <MemberSignature Language="C#" Value="protected internal override void OnRequestAbort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRequestAbort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnRequestAbort(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRequestAbort (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRequestAbort(Exception ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnhandledException">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt; OnUnhandledException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationUnhandledExceptionEventArgs, valuetype System.Activities.UnhandledExceptionAction&gt; OnUnhandledException" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.OnUnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Property OnUnhandledException As Func(Of WorkflowApplicationUnhandledExceptionEventArgs, UnhandledExceptionAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ OnUnhandledException { Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c98bf-651">현재 워크플로 인스턴스에서 처리되지 않은 예외가 발생할 때 호출되는 <see cref="T:System.Func`2" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-651">Gets or sets the <see cref="T:System.Func`2" /> that is invoked when the current workflow instance encounters an unhandled exception.</span></span></summary>
        <value><span data-ttu-id="c98bf-652">워크플로 인스턴스에서 처리되지 않은 예외가 발생할 때 호출되는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-652">The delegate that is invoked when a workflow instance encounters an unhandled exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-653">예외가 워크플로에서 처리되지 않으면 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>과 <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior>는 런타임 동작을 지정합니다. 그러나 <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior>에는 지속성 저장소의 일시 중지된 워크플로를 끝낼 수 있는 옵션이 있지만 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>에는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-653">Both <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> and <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> dictate the behavior of the runtime when an exception is not handled in the workflow; however, <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> has the option of leaving a suspended workflow in the persistence store, while <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> does not.</span></span> <span data-ttu-id="c98bf-654">이러한 이유로 일시 중지된 워크플로는 호스트별로 발생하게 되며 <xref:System.Activities.WorkflowApplication>은 그렇지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-654">The reason for this is that what happens to a suspended workflow is host-specific, and <xref:System.Activities.WorkflowApplication> is not.</span></span> <span data-ttu-id="c98bf-655"><xref:System.Activities.WorkflowApplication>을 사용하여 이 기능을 구현하려면 이 동작을 가진 사용자 지정 <xref:System.Activities.Persistence.PersistenceParticipant>를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-655">To implement this functionality using <xref:System.Activities.WorkflowApplication>, create a custom <xref:System.Activities.Persistence.PersistenceParticipant> that has this behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-656">다음 예제에서는 예외를 throw하는 워크플로를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-656">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="c98bf-657">이 예외는 워크플로에서 처리되지 않으며 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-657">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="c98bf-658"><xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs>를 검사하여 예외에 대한 정보를 제공하고 워크플로가 종료됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-658">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Persist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-659">워크플로 인스턴스를 인스턴스 저장소에 지속합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-659">Persists a workflow instance to an instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-660">이전에 워크플로 인스턴스가 지속성에서 로드되었다면 워크플로를 로드하는 데 사용되는 동일한 <xref:System.Runtime.DurableInstancing.InstanceStore>가 지속성을 위해 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-660">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="c98bf-661">워크플로가 생성되었으나 아직 지속 상태가 아니라면 이 메서드를 호출하기 전에 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>를 구성해야 합니다. 그렇지 않으면 이 메서드를 호출할 때 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-661">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c98bf-662">워크플로 인스턴스를 인스턴스 저장소에 지속합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-662">Persists a workflow instance to an instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-663">지속 작업이 30초 내에 완료되지 않으면 <xref:System.TimeoutException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-663">If the persist operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="c98bf-664">이전에 워크플로 인스턴스가 지속성에서 로드되었다면 워크플로를 로드하는 데 사용되는 동일한 <xref:System.Runtime.DurableInstancing.InstanceStore>가 지속성을 위해 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-664">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="c98bf-665">워크플로가 생성되었으나 아직 지속 상태가 아니라면 이 메서드를 호출하기 전에 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>를 구성해야 합니다. 그렇지 않으면 이 메서드를 호출할 때 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-665">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-666">다음 예제에서는 <xref:System.Activities.WorkflowApplication.Persist%2A>를 호출하여 워크플로가 시작되기 전에 워크플로 인스턴스를 지속합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-666">The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started.</span></span> <span data-ttu-id="c98bf-667">이 예제는의 일부는 `StartAndUnloadInstance` 에서 메서드는 [워크플로 응용 프로그램을 지속할](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) 샘플.</span><span class="sxs-lookup"><span data-stu-id="c98bf-667">This example is part of the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="c98bf-668">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 지속 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-668">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="c98bf-669">지정한 시간 제한 간격을 사용하여 워크플로 인스턴스를 인스턴스 저장소에 지속합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-669">Persists a workflow instance to an instance store using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-670">이전에 워크플로 인스턴스가 지속성에서 로드되었다면 워크플로를 로드하는 데 사용되는 동일한 <xref:System.Runtime.DurableInstancing.InstanceStore>가 지속성을 위해 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-670">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="c98bf-671">워크플로가 생성되었으나 아직 지속 상태가 아니라면 이 메서드를 호출하기 전에 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>를 구성해야 합니다. 그렇지 않으면 이 메서드를 호출할 때 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-671">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-672">다음 예제에서는 <xref:System.Activities.WorkflowApplication.Persist%2A>를 호출하여 워크플로가 시작되기 전에 워크플로 인스턴스를 지속합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-672">The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started.</span></span> <span data-ttu-id="c98bf-673">이 예제에서는 `StartAndUnloadInstance` 에서 메서드는 [워크플로 응용 프로그램 유지](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) 샘플.</span><span class="sxs-lookup"><span data-stu-id="c98bf-673">This example is from the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistableIdle">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt; PersistableIdle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationIdleEventArgs, valuetype System.Activities.PersistableIdleAction&gt; PersistableIdle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.PersistableIdle" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistableIdle As Func(Of WorkflowApplicationIdleEventArgs, PersistableIdleAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ PersistableIdle { Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c98bf-674">현재 워크플로 인스턴스가 유휴 상태가 될 때 호출되고 지속될 수 있는 <see cref="T:System.Activities.ActivityFunc" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-674">Gets or sets the <see cref="T:System.Activities.ActivityFunc" /> that is invoked when the current workflow instance is idle and can be persisted.</span></span></summary>
        <value><span data-ttu-id="c98bf-675">현재 워크플로 인스턴스가 유휴 상태가 될 때 호출되고 지속될 수 있는 <see cref="T:System.Activities.ActivityFunc" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-675">The <see cref="T:System.Activities.ActivityFunc" /> that is invoked when the current workflow instance is idle and can be persisted.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-676">워크플로가 유휴 상태가 되어 지속 가능하게 되면 <xref:System.Activities.WorkflowApplication.Idle%2A>과 <xref:System.Activities.WorkflowApplication.PersistableIdle%2A>이 순서대로 모두 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-676">When a workflow becomes idle and can be persisted, both <xref:System.Activities.WorkflowApplication.Idle%2A> and <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> are invoked, in that order.</span></span> <span data-ttu-id="c98bf-677"><xref:System.Activities.WorkflowApplication.PersistableIdle%2A> 처리기는 <xref:System.Activities.PersistableIdleAction>, <xref:System.Activities.PersistableIdleAction.None>, <xref:System.Activities.PersistableIdleAction.Persist> 중 하나의 <xref:System.Activities.PersistableIdleAction.Unload> 열거형 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-677">The <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> handler returns one of the <xref:System.Activities.PersistableIdleAction> enumeration values of <xref:System.Activities.PersistableIdleAction.None>, <xref:System.Activities.PersistableIdleAction.Persist>, or <xref:System.Activities.PersistableIdleAction.Unload>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-678">다음 예제에서는 <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> 처리기를 처리하고 워크플로를 지속 및 언로드하도록 런타임에 지시합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-678">The following example handles the <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> handler and instructs the runtime to persist and unload the workflow.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#26](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-679">책갈피를 다시 시작하기 위한 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-679">Initiates an operation to resume a bookmark.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="c98bf-680">다시 시작할 책갈피입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-680">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="c98bf-681">책갈피를 다시 시작할 때 호출할 메서드에 대한 매개 변수로 전달되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-681">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <summary><span data-ttu-id="c98bf-682">지정한 값을 사용하여 지정한 책갈피를 다시 시작하기 위한 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-682">Initiates an operation to resume the specified bookmark, using the specified value.</span></span> <span data-ttu-id="c98bf-683">다시 시작할 책갈피는 워크플로 인스턴스 내의 작업에서 이전에 만든 것입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-683">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="c98bf-684">책갈피 다시 시작 작업의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-684">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-685">책갈피 결과는 다시 시작 작업의 성공 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-685">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-686">다음 예제에서는 `ReadLine`를 만드는 <xref:System.Activities.Bookmark> 활동을 사용하는 워크플로를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-686">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="c98bf-687">워크플로가 시작된 다음 <xref:System.Activities.Bookmark>가 만들어지고 워크플로가 유휴 상태가 되면 사용자 입력이 수집되고 책갈피가 다시 시작됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-687">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#24](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="c98bf-688">다시 시작할 책갈피의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-688">The name of the bookmark to be resumed.</span></span></param>
        <param name="value"><span data-ttu-id="c98bf-689">책갈피를 다시 시작할 때 호출할 메서드에 대한 매개 변수로 전달되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-689">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <summary><span data-ttu-id="c98bf-690">지정한 값을 사용하여 지정한 이름의 책갈피를 다시 시작하기 위한 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-690">Initiates an operation to resume the bookmark with the specified name, using the specified value.</span></span> <span data-ttu-id="c98bf-691">다시 시작할 책갈피는 워크플로 인스턴스 내의 작업에서 이전에 만든 것입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-691">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="c98bf-692">책갈피 다시 시작 작업의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-692">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-693">책갈피 결과는 다시 시작 작업의 성공 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-693">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-694">다음 예제에서는 `ReadLine`를 만드는 <xref:System.Activities.Bookmark> 활동을 사용하는 워크플로를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-694">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="c98bf-695">워크플로가 시작된 다음 <xref:System.Activities.Bookmark>가 만들어지고 워크플로가 유휴 상태가 되면 사용자 입력이 수집되고 책갈피가 다시 시작됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-695">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="c98bf-696">다시 시작할 책갈피입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-696">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="c98bf-697">책갈피를 다시 시작할 때 호출할 메서드에 대한 매개 변수로 전달되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-697">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-698">책갈피가 다시 시작되어야 하는 시간 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-698">The time interval during which the bookmark must be resumed.</span></span></param>
        <summary><span data-ttu-id="c98bf-699">지정한 값 및 시간 제한 간격을 사용하여 지정한 책갈피를 다시 시작하기 위한 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-699">Initiates an operation to resume the specified bookmark, using the specified value and time-out interval.</span></span> <span data-ttu-id="c98bf-700">다시 시작할 책갈피는 워크플로 인스턴스 내의 작업에서 이전에 만든 것입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-700">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="c98bf-701">책갈피 다시 시작 작업의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-701">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-702">책갈피 결과는 다시 시작 작업의 성공 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-702">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-703">다음 예제에서는 `ReadLine`를 만드는 <xref:System.Activities.Bookmark> 활동을 사용하는 워크플로를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-703">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="c98bf-704">워크플로가 시작된 다음 <xref:System.Activities.Bookmark>가 만들어지고 워크플로가 유휴 상태가 되면 사용자 입력이 수집되고 책갈피가 다시 시작됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-704">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#25](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="c98bf-705">다시 시작할 책갈피의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-705">The name of the bookmark to be resumed.</span></span></param>
        <param name="value"><span data-ttu-id="c98bf-706">책갈피를 다시 시작할 때 호출할 메서드에 대한 매개 변수로 전달되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-706">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-707">책갈피가 다시 시작되어야 하는 시간 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-707">The time interval during which the bookmark must be resumed.</span></span></param>
        <summary><span data-ttu-id="c98bf-708">지정한 값 및 시간 제한 간격을 사용하여 지정한 이름의 책갈피를 다시 시작하기 위한 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-708">Initiates an operation to resume the bookmark with the specified name, using the specified value and time-out interval.</span></span> <span data-ttu-id="c98bf-709">다시 시작할 책갈피는 워크플로 인스턴스 내의 작업에서 이전에 만든 것입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-709">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="c98bf-710">책갈피 다시 시작 작업의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-710">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-711">책갈피 결과는 다시 시작 작업의 성공 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-711">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-712">다음 예제에서는 `ReadLine`를 만드는 <xref:System.Activities.Bookmark> 활동을 사용하는 워크플로를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-712">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="c98bf-713">워크플로가 시작된 다음 <xref:System.Activities.Bookmark>가 만들어지고 워크플로가 유휴 상태가 되면 사용자 입력이 수집되고 책갈피가 다시 시작됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-713">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Run">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-714">워크플로 인스턴스의 실행을 시작하거나 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-714">Begins or resumes the execution of a workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-715">새로 만든 워크플로 인스턴스 실행을 시작하려면 이 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-715">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c98bf-716">워크플로 인스턴스의 실행을 시작하거나 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-716">Begins or resumes the execution of a workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-717">새로 만든 워크플로 인스턴스 실행을 시작하려면 이 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-717">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
 <span data-ttu-id="c98bf-718">실행 작업이 30초 내에 완료되지 않으면 <xref:System.TimeoutException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-718">If the run operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-719">다음 예제에서는 <xref:System.Activities.WorkflowApplication>을 사용하여 워크플로를 호스트합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-719">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="c98bf-720">지정한 워크플로 정의를 사용하여 <xref:System.Activities.WorkflowApplication> 인스턴스가 생성되고, 원하는 워크플로 수명 주기 이벤트가 처리되고, <xref:System.Activities.WorkflowApplication.Run%2A>을 호출하여 워크플로가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-720">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="c98bf-721">워크플로가 완료되면 다음 출력이 콘솔에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-721">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="c98bf-722">새로 만든 워크플로 인스턴스 실행을 시작하려면 이 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-722">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
 <span data-ttu-id="c98bf-723">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 실행 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-723">The interval in which the run operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="c98bf-724">지정한 시간 제한 간격을 사용하여 워크플로 인스턴스 실행을 시작하거나 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-724">Begins or resumes the execution of a workflow instance using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-725"><xref:System.Activities.WorkflowInvoker.Invoke%2A>와 달리 이 메서드는 지정된 시간 내에 완료하는 것이 아닌 지정된 시간 내에 시작하지 않을 경우에만 제한 시간이 초과됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-725">Note that unlike <xref:System.Activities.WorkflowInvoker.Invoke%2A>, this method will time out only if the workflow doesn't start in the specified amount of time, rather than needing to complete in the specified amount of time.</span></span> <span data-ttu-id="c98bf-726"><xref:System.Activities.WorkflowInvoker.Invoke%2A>은 워크플로를 시작하는 데 걸리는 시간에 대해서만 호스트 스레드를 차단하면서 비동기적으로 실행되는 반면 <xref:System.Activities.WorkflowApplication.Run%2A>는 워크플로를 동기적으로 실행(호스트 스레드 차단)하기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-726">The reason for this is that <xref:System.Activities.WorkflowInvoker.Invoke%2A> executes the workflow synchronously (blocking the host thread), while <xref:System.Activities.WorkflowApplication.Run%2A> executes asynchronously, only blocking the host thread for the amount of time it takes the workflow to start.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-727">다음 예제에서는 <xref:System.Activities.WorkflowApplication>을 사용하여 워크플로를 호스트합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-727">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="c98bf-728">지정한 워크플로 정의를 사용하여 <xref:System.Activities.WorkflowApplication> 인스턴스가 생성되고, 원하는 워크플로 수명 주기 이벤트가 처리되고, <xref:System.Activities.WorkflowApplication.Run%2A>을 호출하여 워크플로가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-728">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="c98bf-729">워크플로가 완료되면 다음 출력이 콘솔에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-729">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInstanceKeys">
      <MemberSignature Language="C#" Value="protected internal override bool SupportsInstanceKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInstanceKeys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.SupportsInstanceKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property SupportsInstanceKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool SupportsInstanceKeys { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Terminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-730">워크플로 인스턴스를 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-730">Terminates a workflow instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="c98bf-731">워크플로 인스턴스의 종료 원인입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-731">The reason for terminating the workflow instance.</span></span></param>
        <summary><span data-ttu-id="c98bf-732">지정한 예외를 사용하여 워크플로 인스턴스를 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-732">Terminates a workflow instance using the specified exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-733">이 메서드는 워크플로 인스턴스 종료를 예약합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-733">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="c98bf-734">종료가 완료되었을 때 알림을 받으려면 <xref:System.Activities.WorkflowApplication.Completed%2A> 핸들을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-734">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="c98bf-735">기본적으로 <xref:System.Activities.WorkflowApplication.Terminate%2A> 작업은 30초 내에 완료되어야 하며, 그렇지 않으면 <xref:System.TimeoutException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-735">By default, the <xref:System.Activities.WorkflowApplication.Terminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-736">다음 예제에서는 <xref:System.Activities.WorkflowApplication>을 사용하여 워크플로를 호스트합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-736">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="c98bf-737">지정한 워크플로 정의를 사용하여 <xref:System.Activities.WorkflowApplication> 인스턴스가 생성되고, 원하는 워크플로 수명 주기 이벤트가 처리되고, <xref:System.Activities.WorkflowApplication.Run%2A>을 호출하여 워크플로가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-737">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="c98bf-738">워크플로가 시작된 후에 <xref:System.Activities.WorkflowApplication.Terminate%2A>가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-738">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="c98bf-739">워크플로가 종료되면 다음 출력이 콘솔에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-739">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#16](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="c98bf-740">워크플로 인스턴스의 종료 원인입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-740">The reason for terminating the workflow instance.</span></span></param>
        <summary><span data-ttu-id="c98bf-741">지정한 오류 메시지를 사용하여 워크플로 인스턴스를 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-741">Terminates a workflow instance using the specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-742">이 메서드는 워크플로 인스턴스 종료를 예약합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-742">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="c98bf-743">종료가 완료되었을 때 알림을 받으려면 <xref:System.Activities.WorkflowApplication.Completed%2A> 핸들을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-743">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="c98bf-744">기본적으로 <xref:System.Activities.WorkflowApplication.Terminate%2A> 작업은 30초 내에 완료되어야 하며, 그렇지 않으면 <xref:System.TimeoutException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-744">By default, the <xref:System.Activities.WorkflowApplication.Terminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-745">다음 예제에서는 <xref:System.Activities.WorkflowApplication>을 사용하여 워크플로를 호스트합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-745">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="c98bf-746">지정한 워크플로 정의를 사용하여 <xref:System.Activities.WorkflowApplication> 인스턴스가 생성되고, 원하는 워크플로 수명 주기 이벤트가 처리되고, <xref:System.Activities.WorkflowApplication.Run%2A>을 호출하여 워크플로가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-746">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="c98bf-747">워크플로가 시작된 후에 <xref:System.Activities.WorkflowApplication.Terminate%2A>가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-747">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="c98bf-748">워크플로가 종료되면 다음 출력이 콘솔에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-748">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#18](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="c98bf-749">워크플로 인스턴스의 종료 원인입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-749">The reason for terminating the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-750">작업이 취소되고 <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" />이 throw되기 전에 <see cref="T:System.TimeoutException" /> 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-750">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="c98bf-751">지정한 예외 및 시간 제한 간격을 사용하여 워크플로 인스턴스를 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-751">Terminates a workflow instance using the specified exception and time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-752">이 메서드는 워크플로 종료를 예약합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-752">This method schedules the termination of the workflow.</span></span> <span data-ttu-id="c98bf-753">종료가 완료되었을 때 알림을 받으려면 <xref:System.Activities.WorkflowApplication.Completed%2A> 핸들을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-753">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-754">다음 예제에서는 <xref:System.Activities.WorkflowApplication>을 사용하여 워크플로를 호스트합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-754">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="c98bf-755">지정한 워크플로 정의를 사용하여 <xref:System.Activities.WorkflowApplication> 인스턴스가 생성되고, 원하는 워크플로 수명 주기 이벤트가 처리되고, <xref:System.Activities.WorkflowApplication.Run%2A>을 호출하여 워크플로가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-755">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="c98bf-756">워크플로가 시작된 후에 <xref:System.Activities.WorkflowApplication.Terminate%2A>가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-756">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="c98bf-757">워크플로가 종료되면 다음 출력이 콘솔에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-757">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#17](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="c98bf-758">워크플로 인스턴스의 종료 원인입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-758">The reason for terminating the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="c98bf-759">작업이 취소되고 <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" />이 throw되기 전에 <see cref="T:System.TimeoutException" /> 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-759">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="c98bf-760">지정한 오류 메시지 및 시간 제한 간격을 사용하여 워크플로 인스턴스를 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-760">Terminates a workflow instance using the specified error message and time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-761">이 메서드는 워크플로 인스턴스 종료를 예약합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-761">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="c98bf-762">종료가 완료되었을 때 알림을 받으려면 <xref:System.Activities.WorkflowApplication.Completed%2A> 핸들을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-762">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-763">다음 예제에서는 <xref:System.Activities.WorkflowApplication>을 사용하여 워크플로를 호스트합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-763">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="c98bf-764">지정한 워크플로 정의를 사용하여 <xref:System.Activities.WorkflowApplication> 인스턴스가 생성되고, 원하는 워크플로 수명 주기 이벤트가 처리되고, <xref:System.Activities.WorkflowApplication.Run%2A>을 호출하여 워크플로가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-764">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="c98bf-765">워크플로가 시작된 후에 <xref:System.Activities.WorkflowApplication.Terminate%2A>가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-765">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="c98bf-766">워크플로가 종료되면 다음 출력이 콘솔에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-766">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#19](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98bf-767">워크플로 인스턴스를 지속하거나 언로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-767">Persists and unloads a workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-768">기본적으로 언로드 작업은 30초 내에 완료되어야 하며, 그렇지 않으면 <xref:System.TimeoutException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-768">By default, the unload operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="c98bf-769">이전에 워크플로 인스턴스가 지속성에서 로드되었다면 워크플로를 로드하는 데 사용되는 동일한 <xref:System.Runtime.DurableInstancing.InstanceStore>가 지속성을 위해 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-769">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="c98bf-770">워크플로가 생성되었으나 아직 지속 상태가 아니라면 이 메서드를 호출하기 전에 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>를 구성해야 합니다. 그렇지 않으면 이 메서드를 호출할 때 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-770">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c98bf-771">워크플로 인스턴스를 지속하거나 언로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-771">Persists and unloads a workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-772">기본적으로 언로드 작업은 30초 내에 완료되어야 하며, 그렇지 않으면 <xref:System.TimeoutException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-772">By default, the unload operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="c98bf-773">이전에 워크플로 인스턴스가 지속성에서 로드되었다면 워크플로를 로드하는 데 사용되는 동일한 <xref:System.Runtime.DurableInstancing.InstanceStore>가 지속성을 위해 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-773">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="c98bf-774">워크플로가 생성되었으나 아직 지속 상태가 아니라면 이 메서드를 호출하기 전에 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>를 구성해야 합니다. 그렇지 않으면 이 메서드를 호출할 때 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-774">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-775">다음 코드 예제는의 일부는 [NoPersistScope 활동](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) 샘플.</span><span class="sxs-lookup"><span data-stu-id="c98bf-775">The following code example is part of the [NoPersistScope Activity](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) sample.</span></span> <span data-ttu-id="c98bf-776">이 예제에서는 워크플로가 유휴 상태이고 호스트 응용 프로그램이 사용자 입력을 기다리고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-776">In this example, the workflow is idle and the host application is waiting for user input.</span></span> <span data-ttu-id="c98bf-777">사용자가 언로드 작업을 선택하면 <xref:System.Activities.WorkflowApplication.Unload%2A>가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-777">If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called.</span></span> <span data-ttu-id="c98bf-778">이 작업이 성공하면 워크플로가 지속되고 메모리에서 언로드됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-778">If successful, the workflow is persisted and unloaded from memory.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="c98bf-779">작업이 취소되고 <see cref="T:System.TimeoutException" />이 throw되기 전에 언로드 작업을 완료해야 하는 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-779">The interval in which the unload operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="c98bf-780">지정한 시간 제한 간격을 사용하여 워크플로 인스턴스를 지속하고 언로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-780">Persists and unloads a workflow instance using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98bf-781">이전에 워크플로 인스턴스가 지속성에서 로드되었다면 워크플로를 로드하는 데 사용되는 동일한 <xref:System.Runtime.DurableInstancing.InstanceStore>가 지속성을 위해 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-781">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="c98bf-782">워크플로가 생성되었으나 아직 지속 상태가 아니라면 이 메서드를 호출하기 전에 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>를 구성해야 합니다. 그렇지 않으면 이 메서드를 호출할 때 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-782">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98bf-783">다음 코드 예제는의 일부는 [NoPersistScope 활동](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) 샘플.</span><span class="sxs-lookup"><span data-stu-id="c98bf-783">The following code example is part of the [NoPersistScope Activity](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) sample.</span></span> <span data-ttu-id="c98bf-784">이 예제에서는 워크플로가 유휴 상태이고 호스트 응용 프로그램이 사용자 입력을 기다리고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-784">In this example, the workflow is idle and the host application is waiting for user input.</span></span> <span data-ttu-id="c98bf-785">사용자가 언로드 작업을 선택하면 <xref:System.Activities.WorkflowApplication.Unload%2A>가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-785">If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called.</span></span> <span data-ttu-id="c98bf-786">이 작업이 성공하면 워크플로가 지속되고 메모리에서 언로드됩니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-786">If successful, the workflow is persisted and unloaded from memory.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationEventArgs&gt; Unloaded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationEventArgs&gt; Unloaded" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Property Unloaded As Action(Of WorkflowApplicationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ Unloaded { Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c98bf-787">현재 워크플로에서 언로드할 때 호출되는 <see cref="T:System.Action`1" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-787">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow unloads.</span></span></summary>
        <value><span data-ttu-id="c98bf-788">워크플로 인스턴스가 언로드될 때 호출되는 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-788">An action that is invoked when a workflow instance is unloaded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c98bf-789">다음 코드 예제에서는 <xref:System.Activities.WorkflowApplicationEventArgs> 인스턴스의 <xref:System.Activities.WorkflowApplication.Unloaded%2A> 처리기로 전달된 <xref:System.Activities.WorkflowApplication>를 검사하고 언로드된 워크플로의 <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A>를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="c98bf-789">The following code example inspects the <xref:System.Activities.WorkflowApplicationEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Unloaded%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays the <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> of the workflow that was unloaded.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#3](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>