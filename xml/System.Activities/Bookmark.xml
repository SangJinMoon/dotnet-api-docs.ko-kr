<Type Name="Bookmark" FullName="System.Activities.Bookmark">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4417e16e9ada3223a6e4b94160b351f26e619cce" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52607952" /></Metadata><TypeSignature Language="C#" Value="public class Bookmark : IEquatable&lt;System.Activities.Bookmark&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Bookmark extends System.Object implements class System.IEquatable`1&lt;class System.Activities.Bookmark&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Bookmark" />
  <TypeSignature Language="VB.NET" Value="Public Class Bookmark&#xA;Implements IEquatable(Of Bookmark)" />
  <TypeSignature Language="C++ CLI" Value="public ref class Bookmark : IEquatable&lt;System::Activities::Bookmark ^&gt;" />
  <TypeSignature Language="F#" Value="type Bookmark = class&#xA;    interface IEquatable&lt;Bookmark&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Activities.Bookmark&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1de7e-101">워크플로 또는 작업이 다시 시작할 때까지 수동적으로 대기할 수 있는 지점을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-101">Represents a point at which a workflow or activity can passively wait to be resumed.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1de7e-102">활동에서 <xref:System.Activities.Bookmark>를 만들면 유휴 상태가 되고 <xref:System.Activities.Bookmark>가 다시 시작될 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-102">When an activity creates a <xref:System.Activities.Bookmark>, it becomes idle and waits for the <xref:System.Activities.Bookmark> to be resumed.</span></span> <span data-ttu-id="1de7e-103"><xref:System.Activities.Bookmark>를 만든 활동과 병렬 관계인 다른 활동이 있는 경우 실행이 예약됩니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-103">If there are other activities in parallel with the activity that created the <xref:System.Activities.Bookmark>, they will be scheduled for execution.</span></span>  
  
 <span data-ttu-id="1de7e-104"><xref:System.Activities.WorkflowApplication.ResumeBookmark%2A> 오버로드 중 하나를 사용하여 호스트 응용 프로그램을 통해 책갈피를 다시 시작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-104">Bookmarks can be resumed by the host application using one of the <xref:System.Activities.WorkflowApplication.ResumeBookmark%2A> overloads.</span></span>  
  
 <span data-ttu-id="1de7e-105">책갈피에 대 한 자세한 내용은 참조 하세요. [를 사용 하 여 WorkflowInvoker 및 WorkflowApplication](~/docs/framework/windows-workflow-foundation/using-workflowinvoker-and-workflowapplication.md)를 [책갈피](~/docs/framework/windows-workflow-foundation/bookmarks.md), 및 [책갈피 &#91; WF 샘플&#93; ](~/docs/framework/windows-workflow-foundation/samples/bookmarks.md) 하 고 [입력 작업에 대 한 대기 &#91;WF 샘플&#93; ](~/docs/framework/windows-workflow-foundation/samples/wait-for-input-activity.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-105">For more information about bookmarks, see [Using WorkflowInvoker and WorkflowApplication](~/docs/framework/windows-workflow-foundation/using-workflowinvoker-and-workflowapplication.md), [Bookmarks](~/docs/framework/windows-workflow-foundation/bookmarks.md), and the [Bookmarks &#91; WF Samples&#93;](~/docs/framework/windows-workflow-foundation/samples/bookmarks.md) and [Wait For Input Activity &#91;WF Samples&#93;](~/docs/framework/windows-workflow-foundation/samples/wait-for-input-activity.md) samples.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1de7e-106">다음 예제에서는 `ReadLine` 활동을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-106">In the following example, a `ReadLine` activity is created.</span></span> <span data-ttu-id="1de7e-107">`ReadLine` 활동이 실행되면 <xref:System.Activities.Bookmark>를 만들고 콜백을 등록한 다음 <xref:System.Activities.Bookmark>가 다시 시작될 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-107">When executed, the `ReadLine` activity creates a <xref:System.Activities.Bookmark>, registers a callback, and then waits for the <xref:System.Activities.Bookmark> to be resumed.</span></span> <span data-ttu-id="1de7e-108">책갈피가 다시 시작되면 `ReadLine` 활동은 <xref:System.Activities.Bookmark>와 함께 전달된 데이터를 해당 <xref:System.Activities.Activity%601.Result%2A> 인수에 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-108">When it is resumed, the `ReadLine` activity assigns the data that was passed with the <xref:System.Activities.Bookmark> to its <xref:System.Activities.Activity%601.Result%2A> argument.</span></span>  
  
```csharp  
public sealed class ReadLine : NativeActivity<string>  
{  
    [RequiredArgument]  
    public  InArgument<string> BookmarkName { get; set; }  
  
    protected override void Execute(NativeActivityContext context)  
    {  
        // Create a Bookmark and wait for it to be resumed.  
        context.CreateBookmark(BookmarkName.Get(context),   
            new BookmarkCallback(OnResumeBookmark));  
    }  
  
    // NativeActivity derived activities that do asynchronous operations by calling   
    // one of the CreateBookmark overloads defined on System.Activities.NativeActivityContext   
    // must override the CanInduceIdle property and return true.  
    protected override bool CanInduceIdle  
    {  
        get { return true; }  
    }  
  
    public void OnResumeBookmark(NativeActivityContext context, Bookmark bookmark, object obj)  
    {  
        // When the Bookmark is resumed, assign its value to  
        // the Result argument.  
        Result.Set(context, (string)obj);  
    }  
}  
```  
  
 <span data-ttu-id="1de7e-109">다음 예제에서는 워크플로가 만들어질를 사용 하는 `ReadLine` 사용자 이름을 수집 하 여 콘솔 창에 표시 하는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-109">In the following example, a workflow is created that uses the `ReadLine` activity to gather the user's name and display it to the console window.</span></span> <span data-ttu-id="1de7e-110">호스트 애플리케이션에서는 실제로 입력을 수집하는 작업을 수행하고 <xref:System.Activities.Bookmark>를 다시 시작하여 이를 워크플로에 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-110">The host application performs the actual work of gathering the input and passes it to the workflow by resuming the <xref:System.Activities.Bookmark>.</span></span>  
  
```csharp  
Variable<string> name = new Variable<string>  
{  
    Name = "name"  
};  
  
Activity wf = new Sequence  
{  
    Variables =  
    {  
        name  
    },  
    Activities =  
    {  
        new WriteLine()  
        {  
            Text = "What is your name?"  
        },  
        new ReadLine()  
        {  
            BookmarkName = "UserName",  
            Result = name  
        },  
        new WriteLine()  
        {  
            Text = new InArgument<string>((env) => "Hello, " + name.Get(env))  
        }  
    }  
};  
  
AutoResetEvent syncEvent = new AutoResetEvent(false);  
  
// Create the WorkflowApplication using the desired  
// workflow definition.  
WorkflowApplication wfApp = new WorkflowApplication(wf);  
  
// Handle the desired lifecycle events.  
wfApp.Completed = delegate(WorkflowApplicationCompletedEventArgs e)  
{  
    // Signal the host that the workflow is complete.  
    syncEvent.Set();  
};  
  
// Start the workflow.  
wfApp.Run();  
  
// Collect the user's name and resume the bookmark.  
// Bookmark resumption only occurs when the workflow  
// is idle. If a call to ResumeBookmark is made and the workflow  
// is not idle, ResumeBookmark blocks until the workflow becomes  
// idle before resuming the bookmark.  
wfApp.ResumeBookmark("UserName", Console.ReadLine());  
  
// Wait for Completed to arrive and signal that  
// the workflow is complete.  
syncEvent.WaitOne();  
```  
  
 <span data-ttu-id="1de7e-111">`ReadLine` 활동이 실행되면 <xref:System.Activities.Bookmark>이라는 `UserName`를 만든 다음 책갈피가 다시 시작될 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-111">When the `ReadLine` activity is executed, it creates a <xref:System.Activities.Bookmark> named `UserName` and then waits for the bookmark to be resumed.</span></span> <span data-ttu-id="1de7e-112">호스트는 원하는 데이터를 수집한 다음 <xref:System.Activities.Bookmark>를 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-112">The host collects the desired data and then resumes the <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="1de7e-113">워크플로가 다시 시작되고 이름을 표시한 다음 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-113">The workflow resumes, displays the name, and then completes.</span></span> <span data-ttu-id="1de7e-114">책갈피를 다시 시작하는 데는 동기화 코드가 필요 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-114">Note that no synchronization code is required with regard to resuming the bookmark.</span></span> <span data-ttu-id="1de7e-115">워크플로가 유휴 상태일 때만 <xref:System.Activities.Bookmark>를 다시 시작할 수 있습니다. 워크플로가 유휴 상태가 아닌 경우 워크플로가 유휴 상태가 될 때까지 <xref:System.Activities.WorkflowApplication.ResumeBookmark%2A>에 대한 호출이 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-115">A <xref:System.Activities.Bookmark> can only be resumed when the workflow is idle, and if the workflow is not idle, the call to <xref:System.Activities.WorkflowApplication.ResumeBookmark%2A> blocks until the workflow becomes idle.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bookmark (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Bookmark.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bookmark(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Activities.Bookmark : string -&gt; System.Activities.Bookmark" Usage="new System.Activities.Bookmark name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1de7e-116">책갈피를 식별하는 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-116">A name that identifies the bookmark.</span></span></param>
        <summary><span data-ttu-id="1de7e-117">지정한 이름을 사용하여 <see cref="T:System.Activities.Bookmark" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-117">Initializes a new instance of the <see cref="T:System.Activities.Bookmark" /> class using the specified name.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1de7e-118">두 <see cref="T:System.Activities.Bookmark" /> 개체가 워크플로에서 동일한 연속 지점을 참조하는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-118">Determines whether two <see cref="T:System.Activities.Bookmark" /> objects refer to the same continuation point in a workflow.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Activities.Bookmark other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Activities.Bookmark other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Bookmark.Equals(System.Activities.Bookmark)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Bookmark) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Activities::Bookmark ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Activities.Bookmark -&gt; bool" Usage="bookmark.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Activities.Bookmark" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="1de7e-119">비교할 책갈피입니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-119">The bookmark to compare.</span></span></param>
        <summary><span data-ttu-id="1de7e-120">현재 <see cref="T:System.Activities.Bookmark" />와 지정한 <see cref="T:System.Activities.Bookmark" />가 워크플로에서 동일한 연속 지점을 참조하는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-120">Determines whether the current <see cref="T:System.Activities.Bookmark" /> and the specified <see cref="T:System.Activities.Bookmark" /> refer to the same continuation point in a workflow.</span></span></summary>
        <returns><span data-ttu-id="1de7e-121"><see cref="T:System.Activities.Bookmark" /> 개체가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-121"><see langword="true" /> if the <see cref="T:System.Activities.Bookmark" /> objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Bookmark.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="bookmark.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="1de7e-122">비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-122">The object to compare.</span></span></param>
        <summary><span data-ttu-id="1de7e-123">현재 <see cref="T:System.Activities.Bookmark" />와 지정한 개체가 워크플로에서 동일한 연속 지점을 참조하는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-123">Determines whether the current <see cref="T:System.Activities.Bookmark" /> and the specified object refer to the same continuation point in a workflow.</span></span></summary>
        <returns><span data-ttu-id="1de7e-124"><see cref="T:System.Activities.Bookmark" /> 개체가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-124"><see langword="true" /> if the <see cref="T:System.Activities.Bookmark" /> objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Bookmark.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="bookmark.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1de7e-125">이 <see cref="T:System.Activities.Bookmark" /> 인스턴스의 고유 식별자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-125">Returns a unique identifier for this <see cref="T:System.Activities.Bookmark" /> instance.</span></span></summary>
        <returns><span data-ttu-id="1de7e-126">이 <see cref="T:System.Activities.Bookmark" /> 인스턴스의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-126">The unique identifier of this <see cref="T:System.Activities.Bookmark" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Bookmark.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Activities.Bookmark.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1de7e-127">책갈피 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-127">Gets the bookmark name.</span></span></summary>
        <value><span data-ttu-id="1de7e-128">책갈피 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-128">The bookmark name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Bookmark.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bookmark.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1de7e-129">명명된 책갈피의 책갈피 이름 또는 명명되지 않은 책갈피의 책갈피 ID를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-129">Returns the bookmark name for a named bookmark or the bookmark ID for an unnamed bookmark.</span></span></summary>
        <returns><span data-ttu-id="1de7e-130">책갈피 이름 또는 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="1de7e-130">The bookmark name or ID.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>