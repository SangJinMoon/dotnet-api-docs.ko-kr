<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NativeActivity.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50ce88db36b571a7e039e5d935884093379a57d40.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ce88db36b571a7e039e5d935884093379a57d40</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Activities.NativeActivity">
          <source>Abstract base class for custom activities that implement execution logic using the <ph id="ph1">&lt;see cref="M:System.Activities.NativeActivity.Execute(System.Activities.ActivityExecutionContext)" /&gt;</ph> method, which has full access to the runtime’s features.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Activities.NativeActivity.Execute(System.Activities.ActivityExecutionContext)" /&gt;</ph> 메서드를 사용하여 실행 논리를 구현하는 사용자 지정 활동의 추상 기본 클래스로, 런타임 기능에 완전히 액세스할 수 있도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.NativeActivity">
          <source>The following code sample demonstrates creating a class that inherits from <ph id="ph1">&lt;xref:System.Activities.NativeActivity%601&gt;</ph>.</source>
          <target state="translated">다음 코드 샘플에서는 <ph id="ph1">&lt;xref:System.Activities.NativeActivity%601&gt;</ph>에서 상속되는 클래스를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.NativeActivity">
          <source>This example is from the <bpt id="p1">[</bpt>Custom Composite using Native Activity<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md)</ept> sample.</source>
          <target state="translated">이 예제에서는 <bpt id="p1">[</bpt>기본 활동을 사용 하 여 사용자 지정 복합<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.#ctor">
          <source>When implemented in a derived class, creates a new instance of the derived class.</source>
          <target state="translated">파생 클래스에서 구현된 경우 파생 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.NativeActivity.#ctor">
          <source>The following code sample demonstrates creating a class that inherits from <ph id="ph1">&lt;xref:System.Activities.NativeActivity%601&gt;</ph>.</source>
          <target state="translated">다음 코드 샘플에서는 <ph id="ph1">&lt;xref:System.Activities.NativeActivity%601&gt;</ph>에서 상속되는 클래스를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.NativeActivity.#ctor">
          <source>This example is from the <bpt id="p1">[</bpt>Custom Composite using Native Activity<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md)</ept> sample.</source>
          <target state="translated">이 예제에서는 <bpt id="p1">[</bpt>기본 활동을 사용 하 여 사용자 지정 복합<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)">
          <source>The execution context in which the activity executes.</source>
          <target state="translated">활동이 실행되는 실행 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)">
          <source>When implemented in a derived class, takes actions in response to the activity being aborted.</source>
          <target state="translated">파생 클래스에서 구현된 경우 중단 중인 활동에 대한 응답으로 동작을 수행합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Activities.NativeActivity">
          <source>Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.</source>
          <target state="translated">활동의 인수, 변수, 자식 활동 및 작업 대리자에 대한 설명을 만들고 유효성을 검사합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.NativeActivity">
          <source>Custom activity authors can provide validation logic in an activity's <ph id="ph1">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph> override.</source>
          <target state="translated">사용자 지정 활동 작성자는 활동의 <ph id="ph1">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph> 재정의에서 유효성 검사 논리를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.NativeActivity">
          <source>Any exceptions that are thrown from <ph id="ph1">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph> are not treated as validation errors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph>에서 throw되는 모든 예외는 유효성 검사 오류로 처리되지 않습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.NativeActivity">
          <source>These exceptions will escape from the call to <ph id="ph1">&lt;xref:System.Activities.Validation.ActivityValidationServices.Validate%2A&gt;</ph> and must be handled by the caller.</source>
          <target state="translated">이러한 예외는 <ph id="ph1">&lt;xref:System.Activities.Validation.ActivityValidationServices.Validate%2A&gt;</ph>에 대한 호출에서 이스케이프되며 호출자가 처리해야 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
          <source>Not implemented.</source>
          <target state="translated">구현되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
          <source>Not implemented.</source>
          <target state="translated">구현되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)" /&gt;</ph> method instead.</source>
          <target state="translated">대신 <ph id="ph1">&lt;see cref="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)" /&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
          <source>Custom activity authors can provide validation logic in an activity's <ph id="ph1">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph> override.</source>
          <target state="translated">사용자 지정 활동 작성자는 활동의 <ph id="ph1">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph> 재정의에서 유효성 검사 논리를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
          <source>Any exceptions that are thrown from <ph id="ph1">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph> are not treated as validation errors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph>에서 throw되는 모든 예외는 유효성 검사 오류로 처리되지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
          <source>These exceptions will escape from the call to <ph id="ph1">&lt;xref:System.Activities.Validation.ActivityValidationServices.Validate%2A&gt;</ph> and must be handled by the caller.</source>
          <target state="translated">이러한 예외는 <ph id="ph1">&lt;xref:System.Activities.Validation.ActivityValidationServices.Validate%2A&gt;</ph>에 대한 호출에서 이스케이프되며 호출자가 처리해야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)">
          <source>The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.</source>
          <target state="translated">활동의 인수, 변수, 자식 활동 및 활동 대리자를 캡슐화하는 활동의 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)">
          <source>Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.</source>
          <target state="translated">활동의 인수, 변수, 자식 활동 및 작업 대리자에 대한 설명을 만들고 유효성을 검사합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)">
          <source>The workflow runtime uses the default implementation of <ph id="ph1">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph> to ensure correct construction of a workflow as well as to manage run-time relationships and lifetime rules.</source>
          <target state="translated">워크플로 런타임은 <ph id="ph1">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph>의 기본 구현을 사용하여 워크플로의 올바른 생성을 보장함은 물론 런타임 관계 및 수명 규칙을 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph> examines the public members of the activity type using the type’s <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph>의 기본 구현은 형식의 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>를 사용하여 작업 형식의 공용 멤버를 검사합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)">
          <source>These public members are of type <ph id="ph1">&lt;xref:System.Activities.Argument&gt;</ph>, <ph id="ph2">&lt;xref:System.Activities.Variable&gt;</ph>, <bpt id="p1">[</bpt>IEnumerable<ph id="ph3">\&lt;</ph>Variable&gt;<ept id="p1">](xref:System.Collections.Generic.IEnumerable%601)</ept>, <ph id="ph4">&lt;xref:System.Activities.Activity&gt;</ph>, <bpt id="p2">[</bpt>IEnumerable<ph id="ph5">\&lt;</ph>Activity&gt;<ept id="p2">](xref:System.Collections.Generic.IEnumerable%601)</ept>, or <ph id="ph6">&lt;xref:System.Activities.ActivityDelegate&gt;</ph>.</source>
          <target state="translated">이러한 공용 멤버는 형식의 <ph id="ph1">&lt;xref:System.Activities.Argument&gt;</ph>, <ph id="ph2">&lt;xref:System.Activities.Variable&gt;</ph>, <bpt id="p1">[</bpt>a b l e<ph id="ph3">\&lt;</ph>변수 &gt;<ept id="p1">](xref:System.Collections.Generic.IEnumerable%601)</ept>, <ph id="ph4">&lt;xref:System.Activities.Activity&gt;</ph>, <bpt id="p2">[</bpt>IEnumerable<ph id="ph5">\&lt;</ph>활동 &gt;<ept id="p2">](xref:System.Collections.Generic.IEnumerable%601)</ept>, 또는 <ph id="ph6">&lt;xref:System.Activities.ActivityDelegate&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)">
          <source>You can override this method to customize the building of the activity’s run-time description and to provide custom validation logic.</source>
          <target state="translated">활동의 런타임 설명 작성을 사용자 지정하고 사용자 지정 유효성 검사 논리를 제공하도록 이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)">
          <source>Any exceptions that are thrown from <ph id="ph1">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph> are not treated as validation errors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph>에서 throw되는 모든 예외는 유효성 검사 오류로 처리되지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)">
          <source>These exceptions will escape from the call to <ph id="ph1">&lt;xref:System.Activities.Validation.ActivityValidationServices.Validate%2A&gt;</ph> and must be handled by the caller.</source>
          <target state="translated">이러한 예외는 <ph id="ph1">&lt;xref:System.Activities.Validation.ActivityValidationServices.Validate%2A&gt;</ph>에 대한 호출에서 이스케이프되며 호출자가 처리해야 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)">
          <source>The following code sample demonstrates using CacheMetadata in a class that inherits from <ph id="ph1">&lt;xref:System.Activities.NativeActivity%601&gt;</ph>.</source>
          <target state="translated">다음 코드 샘플에서는 <ph id="ph1">&lt;xref:System.Activities.NativeActivity%601&gt;</ph>에서 상속되는 클래스에 CacheMetadata를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)">
          <source>This example is from the <bpt id="p1">[</bpt>Custom Composite using Native Activity<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md)</ept> sample.</source>
          <target state="translated">이 예제에서는 <bpt id="p1">[</bpt>기본 활동을 사용 하 여 사용자 지정 복합<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)">
          <source>The execution context in which the activity executes.</source>
          <target state="translated">활동이 실행되는 실행 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)">
          <source>When implemented in a derived class, runs logic to cause graceful early completion of the activity.</source>
          <target state="translated">파생 클래스에서 구현된 경우 활동을 점진적으로 조기에 완료하도록 논리를 실행합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)">
          <source>The following code sample demonstrates using Cancel in a class that inherits from <ph id="ph1">&lt;xref:System.Activities.NativeActivity%601&gt;</ph>.</source>
          <target state="translated">다음 코드 샘플에서는 <ph id="ph1">&lt;xref:System.Activities.NativeActivity%601&gt;</ph>에서 상속되는 클래스에 Cancel을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)">
          <source>This example is from the <bpt id="p1">[</bpt>Non-Generic ParallelForEach<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md)</ept> sample.</source>
          <target state="translated">이 예제에서는 <bpt id="p1">[</bpt>비 제네릭 ParallelForEach<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Activities.NativeActivity.CanInduceIdle">
          <source>Gets or sets a value that indicates whether the activity can cause the workflow to become idle.</source>
          <target state="translated">활동을 통해 워크플로가 유휴 상태가 될 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.NativeActivity.CanInduceIdle">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the activity can cause the workflow to become idle.</source>
          <target state="translated">작업을 통해 워크플로가 유휴 상태가 될 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.NativeActivity.CanInduceIdle">
          <source>This value is <ph id="ph1">&lt;see langword="false" /&gt;</ph> by default.</source>
          <target state="translated">이 값의 기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)">
          <source>The execution context in which the activity executes.</source>
          <target state="translated">활동이 실행되는 실행 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)">
          <source>When implemented in a derived class, runs the activity’s execution logic.</source>
          <target state="translated">파생 클래스에서 구현된 경우 활동의 실행 논리를 실행합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)">
          <source>The following code sample demonstrates using Cancel in a class that inherits from <ph id="ph1">&lt;xref:System.Activities.NativeActivity%601&gt;</ph>.</source>
          <target state="translated">다음 코드 샘플에서는 <ph id="ph1">&lt;xref:System.Activities.NativeActivity%601&gt;</ph>에서 상속되는 클래스에 Cancel을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)">
          <source>This example is from the <bpt id="p1">[</bpt>Non-Generic ParallelForEach<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md)</ept> sample.</source>
          <target state="translated">이 예제에서는 <bpt id="p1">[</bpt>비 제네릭 ParallelForEach<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Activities.NativeActivity.Implementation">
          <source>The execution logic of the activity.</source>
          <target state="translated">활동의 실행 논리입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.NativeActivity.Implementation">
          <source>The execution logic.</source>
          <target state="translated">실행 논리입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Activities.NativeActivity.ImplementationVersion">
          <source>Gets or sets the implementation version of the activity.</source>
          <target state="translated">작업의 구현 버전을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.NativeActivity.ImplementationVersion">
          <source>The implementation version of the activity.</source>
          <target state="translated">동작의 구현 버전입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="T:System.Activities.NativeActivity">
          <source>Raises an event when creating a map for the dynamic update.</source>
          <target state="translated">동적 업데이트 맵을 만들 때 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)">
          <source>The metadata.</source>
          <target state="translated">메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)">
          <source>The original activity.</source>
          <target state="translated">원래 동작입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)">
          <source>Raises an event when creating a map for the dynamic update.</source>
          <target state="translated">동적 업데이트 맵을 만들 때 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
          <source>The metadata.</source>
          <target state="translated">메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
          <source>The original activity.</source>
          <target state="translated">원래 동작입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
          <source>Raises an event when creating a map for the dynamic update.</source>
          <target state="translated">동적 업데이트 맵을 만들 때 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)">
          <source>The update context.</source>
          <target state="translated">업데이트 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)">
          <source>Updates the instance of <ph id="ph1">&lt;see cref="T:System.Activities.NativeActivity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Activities.NativeActivity" /&gt;</ph>의 인스턴스를 업데이트합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>