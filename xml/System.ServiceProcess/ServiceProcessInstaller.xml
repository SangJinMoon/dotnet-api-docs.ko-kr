<Type Name="ServiceProcessInstaller" FullName="System.ServiceProcess.ServiceProcessInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="79299cc2f8fd9772fbb8c8961ba6f8b4705dbc5a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529837" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProcessInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceProcessInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProcessInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProcessInstaller : System::Configuration::Install::ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b831e-101">
        <see cref="T:System.ServiceProcess.ServiceBase" />를 확장하는 클래스가 포함된 실행 파일을 설치합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b831e-101">Installs an executable containing classes that extend <see cref="T:System.ServiceProcess.ServiceBase" />.</span>
      </span>
      <span data-ttu-id="b831e-102">이 클래스는 서비스 응용 프로그램을 설치할 때 설치 유틸리티(예: InstallUtil.exe)에서 호출됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b831e-102">This class is called by installation utilities, such as InstallUtil.exe, when installing a service application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b831e-103"><xref:System.ServiceProcess.ServiceProcessInstaller> 실행 파일의 모든 서비스에 공통적으로 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-103">The <xref:System.ServiceProcess.ServiceProcessInstaller> does work common to all services in an executable.</span></span> <span data-ttu-id="b831e-104">설치 하려는 서비스와 관련 된 레지스트리 값을 쓸 설치 유틸리티에 의해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-104">It is used by the installation utility to write registry values associated with services you want to install.</span></span>  
  
 <span data-ttu-id="b831e-105">서비스를 설치 하려면에서 상속 되는 프로젝트 설치 관리자 클래스를 만듭니다 <xref:System.Configuration.Install.Installer>를 설정 하 고는 <xref:System.ComponentModel.RunInstallerAttribute> 클래스에 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-105">To install a service, create a project installer class that inherits from <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> on the class to `true`.</span></span> <span data-ttu-id="b831e-106">프로젝트 내에서 하나를 인스턴스화하고 <xref:System.ServiceProcess.ServiceProcessInstaller> 개와 서비스 응용 프로그램 마다 인스턴스 <xref:System.ServiceProcess.ServiceInstaller> 응용 프로그램의 각 서비스에 대 한 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="b831e-106">Within your project, instantiate one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="b831e-107">마지막으로 추가 된 <xref:System.ServiceProcess.ServiceProcessInstaller> 인스턴스 및 <xref:System.ServiceProcess.ServiceInstaller> 인스턴스 프로젝트 설치 관리자 클래스를 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-107">Finally, add the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and the <xref:System.ServiceProcess.ServiceInstaller> instances to your project installer class.</span></span>  
  
 <span data-ttu-id="b831e-108">유틸리티를 사용 하 여 서비스 어셈블리의 클래스를 찾습니다 InstallUtil.exe를 실행 하면는 <xref:System.ComponentModel.RunInstallerAttribute> 로 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-108">When InstallUtil.exe runs, the utility looks for classes in the service assembly with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`.</span></span> <span data-ttu-id="b831e-109">에 추가 하 여 서비스 어셈블리에 클래스 추가 <xref:System.Configuration.Install.Installer.Installers%2A> 프로젝트 설치 관리자와 연결 된 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-109">Add classes to the service assembly by adding them to the <xref:System.Configuration.Install.Installer.Installers%2A> collection associated with your project installer.</span></span> <span data-ttu-id="b831e-110">경우 <xref:System.ComponentModel.RunInstallerAttribute> 은 `false`, 설치 유틸리티 프로젝트 설치 관리자를 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-110">If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the install utility ignores the project installer.</span></span>  
  
 <span data-ttu-id="b831e-111">인스턴스에 대 한 <xref:System.ServiceProcess.ServiceProcessInstaller>, 로그온 한 사용자 이외의 계정으로 서비스 응용 프로그램 실행을 지정 하 여 속성을 수정할 수 있습니다를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-111">For an instance of <xref:System.ServiceProcess.ServiceProcessInstaller>, properties you can modify include specifying that a service application run under an account other than the logged-on user.</span></span> <span data-ttu-id="b831e-112">특정을 지정할 수 있습니다 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 쌍은 서비스를 실행 하거나 사용할 수 있습니다 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> 에서 서비스가 컴퓨터의 시스템 계정, 로컬 또는 네트워크 서비스 계정 또는 사용자 계정에서 실행 되도록 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-112">You can specify a particular <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair under which the service should run, or you can use <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to specify that the service run under the computer's System account, a local or network service account, or a user account.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b831e-113">컴퓨터의 시스템 계정 관리자 계정과 같지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-113">The computer's System account is not the same as the Administrator account.</span></span>  
  
 <span data-ttu-id="b831e-114">일반적으로 메서드를 호출 하지 않으면 <xref:System.ServiceProcess.ServiceInstaller> ; 코드 내에서 일반적으로에서 호출 설치 유틸리티입니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-114">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="b831e-115">설치 유틸리티를 자동으로 호출 된 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> 및 <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> 설치 과정에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="b831e-115">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> and <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> methods during the installation process.</span></span> <span data-ttu-id="b831e-116">백업를 필요에 따라 호출 하 여 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (또는 <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) 이전에 설치 된 모든 구성 요소에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-116">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (or <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) on all previously installed components.</span></span>  
  
 <span data-ttu-id="b831e-117">프로젝트 설치 관리자를 사용 하 여 구성 요소가 이미 설치 되어 자동으로 정보를 유지 하는 응용 프로그램의 설치 루틴 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-117">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b831e-118">이 상태 정보는 지속적으로 업데이트는 <xref:System.ServiceProcess.ServiceProcessInstaller> 인스턴스와 각 <xref:System.ServiceProcess.ServiceInstaller> 유틸리티 인스턴스를 설치 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-118">This state information is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="b831e-119">일반적으로 코드의 명시적으로이 상태 정보를 수정할 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-119">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="b831e-120">인스턴스화하는 <xref:System.ServiceProcess.ServiceProcessInstaller> 하면 기본 클래스 생성자 <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-120">Instantiating a <xref:System.ServiceProcess.ServiceProcessInstaller> causes the base class constructor, <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>, to be called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b831e-121">다음 예제에서는 호출 MyProjectInstaller에서 상속 하는 프로젝트 설치 관리자 <xref:System.Configuration.Install.Installer>합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-121">The following example creates a project installer called MyProjectInstaller, which inherits from <xref:System.Configuration.Install.Installer>.</span></span> <span data-ttu-id="b831e-122">두 서비스에 "Hello World 서비스 1"을 포함 하는 서비스 실행 파일은 가정 및 "2" Hello World 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-122">It is assumed there is a service executable that contains two services, "Hello-World Service 1" and "Hello-World Service 2".</span></span> <span data-ttu-id="b831e-123">(있음 설치 유틸리티에 의해 호출 되는) MyProjectInstaller에 대 한 생성자 내에서 <xref:System.ServiceProcess.ServiceInstaller> 각 서비스에 대해 개체가 만들어집니다 및 <xref:System.ServiceProcess.ServiceProcessInstaller> 실행 파일에 대해 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-123">Within the constructor for MyProjectInstaller (which would be called by the install utility), <xref:System.ServiceProcess.ServiceInstaller> objects are created for each service, and a <xref:System.ServiceProcess.ServiceProcessInstaller> is created for the executable.</span></span> <span data-ttu-id="b831e-124">설치 유틸리티를 유효한 설치 관리자로 MyProjectInstaller를 인식 하는 <xref:System.ComponentModel.RunInstallerAttribute> 특성이로 설정 된 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-124">For the install utility to recognize MyProjectInstaller as a valid installer, the <xref:System.ComponentModel.RunInstallerAttribute> attribute is set to `true`.</span></span>  
  
 <span data-ttu-id="b831e-125">설치 관리자에 추가 되기 전에 프로세스 설치 관리자 및 서비스 설치 관리자에서 선택적 속성이 설정 되어는 <xref:System.Configuration.Install.Installer.Installers%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-125">Optional properties are set on the process installer and the service installers before the installers are added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span> <span data-ttu-id="b831e-126">설치 유틸리티 MyProjectInstaller에 액세스 하면 개체에 추가 된 <xref:System.Configuration.Install.Installer.Installers%2A> 컬렉션에 대 한 호출을 통해 <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> 차례로 설치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-126">When the install utility accesses MyProjectInstaller, the objects added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection through a call to <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> will be installed in turn.</span></span> <span data-ttu-id="b831e-127">과정에서 설치 관리자는 각 개체 되돌릴 수 있습니다 차례로 설치 오류가 발생할 경우 하므로 설치 된 어떤 개체를 나타내는 상태 정보를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-127">During the process, the installer maintains state information indicating which objects have been installed, so each object can be backed out in turn in case of an installation failure.</span></span>  
  
 <span data-ttu-id="b831e-128">일반적으로 프로젝트 설치 관리자 클래스를 명시적으로 인스턴스화하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-128">Normally, you would not instantiate your project installer class explicitly.</span></span> <span data-ttu-id="b831e-129">만들 추가 하는 <xref:System.ComponentModel.RunInstallerAttribute>, 하지만 설치 유틸리티 실제로 호출 하 고 인스턴스화합니다 따라서 클래스.</span><span class="sxs-lookup"><span data-stu-id="b831e-129">You would create it and add the <xref:System.ComponentModel.RunInstallerAttribute>, but the install utility actually calls, and therefore instantiates, the class.</span></span>  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
    <altmember cref="P:System.Configuration.Install.Installer.Installers" />
    <altmember cref="T:System.ServiceProcess.ServiceAccount" />
    <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProcessInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProcessInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b831e-130">
            <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-130">Creates a new instance of the <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Account">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceAccount Account { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceAccount Account" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberSignature Language="VB.NET" Value="Public Property Account As ServiceAccount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceAccount Account { System::ServiceProcess::ServiceAccount get(); void set(System::ServiceProcess::ServiceAccount value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceProcessInstallerAccount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b831e-131">이 서비스 응용 프로그램을 실행할 계정 형식을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-131">Gets or sets the type of account under which to run this service application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b831e-132">시스템에서 이 서비스를 실행하는 계정 형식을 정의하는 <see cref="T:System.ServiceProcess.ServiceAccount" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-132">A <see cref="T:System.ServiceProcess.ServiceAccount" /> that defines the type of account under which the system runs this service.</span>
          </span>
          <span data-ttu-id="b831e-133">기본값은 <see langword="User" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-133">The default is <see langword="User" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b831e-134">경우는 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> 속성은 `User`, <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 속성 서비스 응용 프로그램이 실행 되는 계정을 정의 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-134">When the <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> property is `User`, the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are used to define an account under which the service application runs.</span></span>  
  
 <span data-ttu-id="b831e-135"><xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 쌍 서비스가 시스템 계정 이외의 계정으로 실행 되도록 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-135">The <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="b831e-136">예를 들어 사용자가 로그온 하는 경우 재부팅 시 자동으로 시작 하는 서비스를 허용할 수를이.</span><span class="sxs-lookup"><span data-stu-id="b831e-136">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span> <span data-ttu-id="b831e-137">비워는 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 또는 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 빈 및 설정 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> 를 `User`, 유효한 사용자 이름과 설치 시 암호를 묻는 메시지가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-137">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="b831e-138">지정할 수도 있습니다는 서비스가 로컬 시스템 계정 또는 로컬 실행 또는 네트워크 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-138">You can also specify that the service run under the local system account, or as a local or network service.</span></span> <span data-ttu-id="b831e-139">참조는 <xref:System.ServiceProcess.ServiceAccount> 계정 유형에 대 한 자세한 내용은 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-139">See the <xref:System.ServiceProcess.ServiceAccount> enumeration for details on types of accounts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="T:System.ServiceProcess.ServiceAccount" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (comp As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ comp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">
          <span data-ttu-id="b831e-140">서비스 프로세스를 나타내는 <see cref="T:System.ComponentModel.IComponent" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-140">The <see cref="T:System.ComponentModel.IComponent" /> that represents the service process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b831e-141">
            <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> 클래스 관련 동작이 포함되지 않는 기본 클래스 <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-141">Implements the base class <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> method with no <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class-specific behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b831e-142">이 메서드를 코드 내에서 호출 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-142">This method should not be called within your code.</span></span> <span data-ttu-id="b831e-143">기본 클래스 메서드를 <xref:System.Configuration.Install.ComponentInstaller> 은 `abstract`이므로 파생된 클래스에서 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-143">The base class method on <xref:System.Configuration.Install.ComponentInstaller> is `abstract`, so it is implemented here on the derived class.</span></span> <span data-ttu-id="b831e-144">그러나 없는 <xref:System.ServiceProcess.ServiceProcessInstaller> 클래스 관련 메서드의 구현에서 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-144">However, there is no <xref:System.ServiceProcess.ServiceProcessInstaller> class-specific processing in the method's implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b831e-145">서비스 설치 옵션을 설명하는 도움말 텍스트를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-145">Gets help text displayed for service installation options.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b831e-146">특정 계정에서 서비스를 실행하기 위해 사용자 이름과 암호를 설정하는 단계를 설명하는 도움말 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-146">Help text that provides a description of the steps for setting the user name and password in order to run the service under a particular account.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b831e-147">이 도움말 텍스트는 서비스가 수동으로 시작 될 때 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-147">This help text can be used when a service starts manually.</span></span> <span data-ttu-id="b831e-148">사용자에 게 사용자 이름 및 암호 정보를 입력 하는 방법을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-148">It indicates to the user how to enter user name and password information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">
          <span data-ttu-id="b831e-149">설치와 연관된 컨텍스트 정보를 포함하는 <see cref="T:System.Collections.IDictionary" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-149">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b831e-150">레지스트리에 서비스 응용 프로그램 정보를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-150">Writes service application information to the registry.</span>
          </span>
          <span data-ttu-id="b831e-151">이 메서드는 자동으로 적합한 메서드를 호출하는 설치 도구에서 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-151">This method is meant to be used by installation tools, which call the appropriate methods automatically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b831e-152">일반적으로 메서드를 호출 하지 않으면 <xref:System.ServiceProcess.ServiceProcessInstaller> ; 코드 내에서 일반적으로에서 호출 설치 유틸리티입니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-152">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceProcessInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="b831e-153">설치 유틸리티를 자동으로 호출 된 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> 설치 과정에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="b831e-153">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> method during the installation process.</span></span> <span data-ttu-id="b831e-154">백업를 필요에 따라 호출 하 여 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 이전에 설치 된 모든 구성 요소에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-154">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> on all previously installed components.</span></span> <span data-ttu-id="b831e-155">이 메서드는 설치의 기본 클래스를 전달 <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b831e-155">This method passes the installation to the base class <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b831e-156">일반적으로 메서드를 호출 하지 것입니다 <xref:System.ServiceProcess.ServiceInstaller> ; 코드 내에서 일반적으로에서 호출 설치 유틸리티입니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-156">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="b831e-157">설치 유틸리티를 자동으로 호출 된 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> 및 <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> 설치 과정에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="b831e-157">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> and <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> methods during the installation process.</span></span> <span data-ttu-id="b831e-158">백업를 필요에 따라 호출 하 여 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (또는 <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) 이전에 설치 된 모든 구성 요소에</span><span class="sxs-lookup"><span data-stu-id="b831e-158">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (or <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) on all previously installed components</span></span>  
  
 <span data-ttu-id="b831e-159">프로젝트 설치 관리자를 사용 하 여 구성 요소가 이미 설치 되어 자동으로 정보를 유지 하는 응용 프로그램의 설치 루틴 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-159">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b831e-160">이 상태 정보로 전달 된 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> 로 `stateSaver` 매개 변수를 계속 업데이트 됩니다는 <xref:System.ServiceProcess.ServiceProcessInstaller> 인스턴스와 각 <xref:System.ServiceProcess.ServiceInstaller> 유틸리티 인스턴스를 설치 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-160">This state information, passed into <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="b831e-161">일반적으로 코드의 명시적으로이 상태 정보를 수정할 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-161">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="b831e-162"><xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> 기본 클래스 메서드에 의해 throw 된 예외를 호출 하는 메서드로 전달 또는 <xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-162"><xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> passes to the calling method any exceptions thrown by base class methods or <xref:System.Configuration.Install.Installer.BeforeInstall> / <xref:System.Configuration.Install.Installer.AfterInstall> event handlers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b831e-163">
            <paramref name="stateSaver" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-163">The <paramref name="stateSaver" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b831e-164">서비스 응용 프로그램을 실행하는 사용자 계정과 관련된 암호를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-164">Gets or sets the password associated with the user account under which the service application runs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b831e-165">서비스를 실행하는 계정과 관련된 암호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-165">The password associated with the account under which the service should run.</span>
          </span>
          <span data-ttu-id="b831e-166">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-166">The default is an empty string ("").</span>
          </span>
          <span data-ttu-id="b831e-167">이 속성은 공용이 아니며 serialize되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-167">The property is not public, and is never serialized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b831e-168"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 쌍 서비스가 시스템 계정 이외의 계정으로 실행 되도록 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-168">The <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="b831e-169">예를 들어 사용자가 로그온 하는 경우 재부팅 시 자동으로 시작 하는 서비스를 허용할 수를이.</span><span class="sxs-lookup"><span data-stu-id="b831e-169">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span>  
  
 <span data-ttu-id="b831e-170"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 직렬화 되거나 설치 상태에 저장 되지 안전한 방식으로 처리 됩니다 (프로젝트 설치 관리자의 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) 또는 공용 액세스를 사용 하 여 다른 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-170"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> are handled in a secure manner in that they are never serialized or saved to the install state (the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) or other location with public access.</span></span>  
  
 <span data-ttu-id="b831e-171">설정의 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 계정이 설치 중에 서비스를 자동으로 연결 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-171">Setting the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> allows an account to be associated automatically with the service at install time.</span></span> <span data-ttu-id="b831e-172">비워는 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 또는 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 빈 및 설정 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> 를 `User`, 유효한 사용자 이름과 설치 시 암호를 묻는 메시지가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-172">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="b831e-173">별도 계정에서 서비스를 실행 하기 위한 또 다른 옵션은 컴퓨터의 시스템 계정을 사용 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-173">Another option for running a service under a separate account is to use the computer's System account.</span></span> <span data-ttu-id="b831e-174">관리자 계정 구별 되는 해당 계정에 암호가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-174">That account, which is distinct from the Administrator account, requires no password.</span></span> <span data-ttu-id="b831e-175">시스템 계정 권한이 현재 로그인 한 사용자의 초과 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-175">The System account's privileges may exceed those of the user currently logged in.</span></span> <span data-ttu-id="b831e-176">서비스에서 필요한 권한이 없는 경우 사용자에 게 서 발생 한 문제를 방지 하는 사용자 계정 대신 시스템 계정에서 실행</span><span class="sxs-lookup"><span data-stu-id="b831e-176">Running under the System account rather than a user account avoids problems resulting from the user lacking a permission the service requires</span></span>  
  
 <span data-ttu-id="b831e-177">경우 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> 아닌 다른 값이 `User`, 지정 된 계정 (로컬 또는 네트워크 서비스 또는 로컬 시스템) 사용 하는 경우에는 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 속성이 채워져 있는지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-177">If <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> is any value other than `User`, the specifed account (local or network service, or local system) is used, even if the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are populated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="b831e-178">설치와 연관된 컨텍스트 정보를 포함하는 <see cref="T:System.Collections.IDictionary" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-178">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b831e-179">설치 프로시저에서 레지스트리에 쓴 서비스 응용 프로그램 정보를 롤백합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-179">Rolls back service application information written to the registry by the installation procedure.</span>
          </span>
          <span data-ttu-id="b831e-180">이 메서드는 적절한 메서드를 자동으로 처리하는 설치 도구에서 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-180">This method is meant to be used by installation tools, which process the appropriate methods automatically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b831e-181">일반적으로 메서드를 호출 하지 않으면 <xref:System.ServiceProcess.ServiceProcessInstaller> ; 코드 내에서 일반적으로에서 호출 설치 유틸리티입니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-181">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceProcessInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="b831e-182">설치 유틸리티를 자동으로 호출 된 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> 설치 과정에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="b831e-182">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> method during the installation process.</span></span> <span data-ttu-id="b831e-183">백업를 필요에 따라 호출 하 여 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 예외를 생성 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-183">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> on the object that generated the exception.</span></span>  
  
 <span data-ttu-id="b831e-184">프로젝트 설치 관리자를 사용 하 여 구성 요소가 이미 설치 되어 자동으로 정보를 유지 하는 응용 프로그램의 설치 루틴 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-184">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b831e-185">이 상태 정보로 전달 된 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 로 `savedState` 매개 변수를 계속 업데이트 됩니다는 <xref:System.ServiceProcess.ServiceProcessInstaller> 인스턴스와 각 <xref:System.ServiceProcess.ServiceInstaller> 유틸리티 인스턴스를 설치 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-185">This state information, passed into <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="b831e-186">일반적으로 코드의 명시적으로이 상태 정보를 수정할 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-186">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="b831e-187"><xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 기본 클래스 메서드에 의해 throw 된 예외를 호출 하는 메서드로 전달 또는 <xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-187"><xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> passes to the calling method any exceptions thrown by base class methods or <xref:System.Configuration.Install.Installer.BeforeInstall> / <xref:System.Configuration.Install.Installer.AfterInstall> event handlers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b831e-188">
            <paramref name="savedState" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-188">The <paramref name="savedState" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b831e-189">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-189">-or-</span>
          </span>
          <span data-ttu-id="b831e-190">
            <paramref name="savedState" />가 손상되었거나 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-190">The <paramref name="savedState" /> is corrupted or non-existent.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b831e-191">서비스 응용 프로그램을 실행하는 사용자 계정을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-191">Gets or sets the user account under which the service application will run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b831e-192">서비스를 실행하는 계정입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-192">The account under which the service should run.</span>
          </span>
          <span data-ttu-id="b831e-193">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b831e-193">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b831e-194"><xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 쌍 서비스가 시스템 계정 이외의 계정으로 실행 되도록 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-194">The <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="b831e-195">예를 들어 사용자가 로그온 하는 경우 재부팅 시 자동으로 시작 하는 서비스를 허용할 수를이.</span><span class="sxs-lookup"><span data-stu-id="b831e-195">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span>  
  
 <span data-ttu-id="b831e-196"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 직렬화 되거나 설치 상태에 저장 되지 안전한 방식으로 처리 됩니다 (프로젝트 설치 관리자의 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) 또는 공용 액세스를 사용 하 여 다른 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-196"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> are handled in a secure manner in that they are never serialized or saved to the install state (the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) or other location with public access.</span></span>  
  
 <span data-ttu-id="b831e-197">설정의 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 계정이 설치 중에 서비스를 자동으로 연결 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-197">Setting the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> allows an account to be associated automatically with the service at install time.</span></span> <span data-ttu-id="b831e-198">비워는 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 또는 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 빈 및 설정 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> 를 `User`, 유효한 사용자 이름과 설치 시 암호를 묻는 메시지가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-198">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="b831e-199">별도 계정에서 서비스를 실행 하기 위한 또 다른 옵션은 컴퓨터의 시스템 계정을 사용 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-199">Another option for running a service under a separate account is to use the computer's System account.</span></span> <span data-ttu-id="b831e-200">관리자 계정 구별 되는 해당 계정에 암호가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-200">That account, which is distinct from the Administrator account, requires no password.</span></span> <span data-ttu-id="b831e-201">시스템 계정 권한이 현재 로그인 한 사용자의 초과 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-201">The System account's privileges may exceed those of the user currently logged in.</span></span> <span data-ttu-id="b831e-202">서비스에서 필요한 권한이 없는 경우 사용자에 게 서 발생 한 문제를 방지 하는 사용자 계정 대신 시스템 계정에서 실행</span><span class="sxs-lookup"><span data-stu-id="b831e-202">Running under the System account rather than a user account avoids problems resulting from the user lacking a permission the service requires</span></span>  
  
 <span data-ttu-id="b831e-203">경우 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> 아닌 다른 값이 `User`, 지정 된 계정 (로컬 또는 네트워크 서비스 또는 로컬 시스템) 사용 하는 경우에는 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 속성이 채워져 있는지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b831e-203">If <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> is any value other than `User`, the specified account (local or network service, or local system) is used, even if the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are populated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
  </Members>
</Type>