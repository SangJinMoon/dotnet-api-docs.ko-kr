<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceProcessInstaller.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac579299cc2f8fd9772fbb8c8961ba6f8b4705dbc5a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79299cc2f8fd9772fbb8c8961ba6f8b4705dbc5a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>Installs an executable containing classes that extend <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph>를 확장하는 클래스가 포함된 실행 파일을 설치합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>This class is called by installation utilities, such as InstallUtil.exe, when installing a service application.</source>
          <target state="translated">이 클래스는 서비스 응용 프로그램을 설치할 때 설치 유틸리티(예: InstallUtil.exe)에서 호출됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> does work common to all services in an executable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> 실행 파일의 모든 서비스에 공통적으로 작동 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>It is used by the installation utility to write registry values associated with services you want to install.</source>
          <target state="translated">설치 하려는 서비스와 관련 된 레지스트리 값을 쓸 설치 유틸리티에 의해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>To install a service, create a project installer class that inherits from <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph>, and set the <ph id="ph2">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> on the class to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">서비스를 설치 하려면에서 상속 되는 프로젝트 설치 관리자 클래스를 만듭니다 <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph>를 설정 하 고는 <ph id="ph2">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> 클래스에 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>Within your project, instantiate one <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instance per service application, and one <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instance for each service in the application.</source>
          <target state="translated">프로젝트 내에서 하나를 인스턴스화하고 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> 개와 서비스 응용 프로그램 마다 인스턴스 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> 응용 프로그램의 각 서비스에 대 한 인스턴스.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>Finally, add the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instance and the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instances to your project installer class.</source>
          <target state="translated">마지막으로 추가 된 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> 인스턴스 및 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> 인스턴스 프로젝트 설치 관리자 클래스를 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>When InstallUtil.exe runs, the utility looks for classes in the service assembly with the <ph id="ph1">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">유틸리티를 사용 하 여 서비스 어셈블리의 클래스를 찾습니다 InstallUtil.exe를 실행 하면는 <ph id="ph1">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> 로 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>Add classes to the service assembly by adding them to the <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection associated with your project installer.</source>
          <target state="translated">에 추가 하 여 서비스 어셈블리에 클래스 추가 <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> 프로젝트 설치 관리자와 연결 된 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>If <ph id="ph1">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> is <ph id="ph2">`false`</ph>, the install utility ignores the project installer.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> 은 <ph id="ph2">`false`</ph>, 설치 유틸리티 프로젝트 설치 관리자를 무시 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>For an instance of <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph>, properties you can modify include specifying that a service application run under an account other than the logged-on user.</source>
          <target state="translated">인스턴스에 대 한 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph>, 로그온 한 사용자 이외의 계정으로 서비스 응용 프로그램 실행을 지정 하 여 속성을 수정할 수 있습니다를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>You can specify a particular <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> pair under which the service should run, or you can use <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A&gt;</ph> to specify that the service run under the computer's System account, a local or network service account, or a user account.</source>
          <target state="translated">특정을 지정할 수 있습니다 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> 쌍은 서비스를 실행 하거나 사용할 수 있습니다 <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A&gt;</ph> 에서 서비스가 컴퓨터의 시스템 계정, 로컬 또는 네트워크 서비스 계정 또는 사용자 계정에서 실행 되도록 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>The computer's System account is not the same as the Administrator account.</source>
          <target state="translated">컴퓨터의 시스템 계정 관리자 계정과 같지 않습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>Normally, you do not call the methods on <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> within your code; they are generally called only by the install utility.</source>
          <target state="translated">일반적으로 메서드를 호출 하지 않으면 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> ; 코드 내에서 일반적으로에서 호출 설치 유틸리티입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>The install utility automatically calls the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType&gt;</ph> methods during the installation process.</source>
          <target state="translated">설치 유틸리티를 자동으로 호출 된 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType&gt;</ph> 설치 과정에서 메서드.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>It backs out failures, if necessary, by calling <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A&gt;</ph> (or <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType&gt;</ph>) on all previously installed components.</source>
          <target state="translated">백업를 필요에 따라 호출 하 여 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A&gt;</ph> (또는 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType&gt;</ph>) 이전에 설치 된 모든 구성 요소에 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>An application's install routine maintains information automatically about the components already installed, using the project installer's <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">프로젝트 설치 관리자를 사용 하 여 구성 요소가 이미 설치 되어 자동으로 정보를 유지 하는 응용 프로그램의 설치 루틴 <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>This state information is continuously updated as the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instance and each <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instance is installed by the utility.</source>
          <target state="translated">이 상태 정보는 지속적으로 업데이트는 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> 인스턴스와 각 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> 유틸리티 인스턴스를 설치 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>It is usually unnecessary for your code to modify this state information explicitly.</source>
          <target state="translated">일반적으로 코드의 명시적으로이 상태 정보를 수정할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>Instantiating a <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> causes the base class constructor, <ph id="ph2">&lt;xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A&gt;</ph>, to be called.</source>
          <target state="translated">인스턴스화하는 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> 하면 기본 클래스 생성자 <ph id="ph2">&lt;xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A&gt;</ph>가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>The following example creates a project installer called MyProjectInstaller, which inherits from <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 호출 MyProjectInstaller에서 상속 하는 프로젝트 설치 관리자 <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>It is assumed there is a service executable that contains two services, "Hello-World Service 1" and "Hello-World Service 2".</source>
          <target state="translated">두 서비스에 "Hello World 서비스 1"을 포함 하는 서비스 실행 파일은 가정 및 "2" Hello World 서비스입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>Within the constructor for MyProjectInstaller (which would be called by the install utility), <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> objects are created for each service, and a <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> is created for the executable.</source>
          <target state="translated">(있음 설치 유틸리티에 의해 호출 되는) MyProjectInstaller에 대 한 생성자 내에서 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> 각 서비스에 대해 개체가 만들어집니다 및 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> 실행 파일에 대해 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>For the install utility to recognize MyProjectInstaller as a valid installer, the <ph id="ph1">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> attribute is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">설치 유틸리티를 유효한 설치 관리자로 MyProjectInstaller를 인식 하는 <ph id="ph1">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> 특성이로 설정 된 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>Optional properties are set on the process installer and the service installers before the installers are added to the <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection.</source>
          <target state="translated">설치 관리자에 추가 되기 전에 프로세스 설치 관리자 및 서비스 설치 관리자에서 선택적 속성이 설정 되어는 <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>When the install utility accesses MyProjectInstaller, the objects added to the <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection through a call to <ph id="ph2">&lt;xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType&gt;</ph> will be installed in turn.</source>
          <target state="translated">설치 유틸리티 MyProjectInstaller에 액세스 하면 개체에 추가 된 <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> 컬렉션에 대 한 호출을 통해 <ph id="ph2">&lt;xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType&gt;</ph> 차례로 설치 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>During the process, the installer maintains state information indicating which objects have been installed, so each object can be backed out in turn in case of an installation failure.</source>
          <target state="translated">과정에서 설치 관리자는 각 개체 되돌릴 수 있습니다 차례로 설치 오류가 발생할 경우 하므로 설치 된 어떤 개체를 나타내는 상태 정보를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>Normally, you would not instantiate your project installer class explicitly.</source>
          <target state="translated">일반적으로 프로젝트 설치 관리자 클래스를 명시적으로 인스턴스화하지 않습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceProcessInstaller">
          <source>You would create it and add the <ph id="ph1">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph>, but the install utility actually calls, and therefore instantiates, the class.</source>
          <target state="translated">만들 추가 하는 <ph id="ph1">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph>, 하지만 설치 유틸리티 실제로 호출 하 고 인스턴스화합니다 따라서 클래스.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceProcessInstaller.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceProcessInstaller" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceProcessInstaller" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceProcessInstaller.Account">
          <source>Gets or sets the type of account under which to run this service application.</source>
          <target state="translated">이 서비스 응용 프로그램을 실행할 계정 형식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Account">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceAccount" /&gt;</ph> that defines the type of account under which the system runs this service.</source>
          <target state="translated">시스템에서 이 서비스를 실행하는 계정 형식을 정의하는 <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceAccount" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Account">
          <source>The default is <ph id="ph1">&lt;see langword="User" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="User" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Account">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A&gt;</ph> property is <ph id="ph2">`User`</ph>, the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> properties are used to define an account under which the service application runs.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A&gt;</ph> 속성은 <ph id="ph2">`User`</ph>, <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> 속성 서비스 응용 프로그램이 실행 되는 계정을 정의 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Account">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> pair allows the service to run under an account other than the system account.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> 쌍 서비스가 시스템 계정 이외의 계정으로 실행 되도록 허용 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Account">
          <source>This can, for example, allow the service to start automatically at reboot, when no user is logged on.</source>
          <target state="translated">예를 들어 사용자가 로그온 하는 경우 재부팅 시 자동으로 시작 하는 서비스를 허용할 수를이.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Account">
          <source>If you leave either the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> empty and set <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A&gt;</ph> to <ph id="ph4">`User`</ph>, you will be prompted for a valid user name and password at installation.</source>
          <target state="translated">비워는 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> 빈 및 설정 <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A&gt;</ph> 를 <ph id="ph4">`User`</ph>, 유효한 사용자 이름과 설치 시 암호를 묻는 메시지가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Account">
          <source>You can also specify that the service run under the local system account, or as a local or network service.</source>
          <target state="translated">지정할 수도 있습니다는 서비스가 로컬 시스템 계정 또는 로컬 실행 또는 네트워크 서비스입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Account">
          <source>See the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceAccount&gt;</ph> enumeration for details on types of accounts.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceAccount&gt;</ph> 계정 유형에 대 한 자세한 내용은 열거형입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> that represents the service process.</source>
          <target state="translated">서비스 프로세스를 나타내는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <source>Implements the base class <ph id="ph1">&lt;see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /&gt;</ph> method with no <ph id="ph2">&lt;see cref="T:System.ServiceProcess.ServiceProcessInstaller" /&gt;</ph> class-specific behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /&gt;</ph> 클래스 관련 동작이 포함되지 않는 기본 클래스 <ph id="ph2">&lt;see cref="T:System.ServiceProcess.ServiceProcessInstaller" /&gt;</ph> 메서드를 구현합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <source>This method should not be called within your code.</source>
          <target state="translated">이 메서드를 코드 내에서 호출 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <source>The base class method on <ph id="ph1">&lt;xref:System.Configuration.Install.ComponentInstaller&gt;</ph> is <ph id="ph2">`abstract`</ph>, so it is implemented here on the derived class.</source>
          <target state="translated">기본 클래스 메서드를 <ph id="ph1">&lt;xref:System.Configuration.Install.ComponentInstaller&gt;</ph> 은 <ph id="ph2">`abstract`</ph>이므로 파생된 클래스에서 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <source>However, there is no <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> class-specific processing in the method's implementation.</source>
          <target state="translated">그러나 없는 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> 클래스 관련 메서드의 구현에서 처리 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceProcessInstaller.HelpText">
          <source>Gets help text displayed for service installation options.</source>
          <target state="translated">서비스 설치 옵션을 설명하는 도움말 텍스트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.HelpText">
          <source>Help text that provides a description of the steps for setting the user name and password in order to run the service under a particular account.</source>
          <target state="translated">특정 계정에서 서비스를 실행하기 위해 사용자 이름과 암호를 설정하는 단계를 설명하는 도움말 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.HelpText">
          <source>This help text can be used when a service starts manually.</source>
          <target state="translated">이 도움말 텍스트는 서비스가 수동으로 시작 될 때 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.HelpText">
          <source>It indicates to the user how to enter user name and password information.</source>
          <target state="translated">사용자에 게 사용자 이름 및 암호 정보를 입력 하는 방법을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> that contains the context information associated with the installation.</source>
          <target state="translated">설치와 연관된 컨텍스트 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
          <source>Writes service application information to the registry.</source>
          <target state="translated">레지스트리에 서비스 응용 프로그램 정보를 씁니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
          <source>This method is meant to be used by installation tools, which call the appropriate methods automatically.</source>
          <target state="translated">이 메서드는 자동으로 적합한 메서드를 호출하는 설치 도구에서 사용됩니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
          <source>Normally, you do not call the methods on <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> within your code; they are generally called only by the install utility.</source>
          <target state="translated">일반적으로 메서드를 호출 하지 않으면 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> ; 코드 내에서 일반적으로에서 호출 설치 유틸리티입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
          <source>The install utility automatically calls the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType&gt;</ph> method during the installation process.</source>
          <target state="translated">설치 유틸리티를 자동으로 호출 된 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType&gt;</ph> 설치 과정에서 메서드.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
          <source>It backs out failures, if necessary, by calling <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A&gt;</ph> on all previously installed components.</source>
          <target state="translated">백업를 필요에 따라 호출 하 여 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A&gt;</ph> 이전에 설치 된 모든 구성 요소에 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
          <source>This method passes the installation to the base class <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 메서드는 설치의 기본 클래스를 전달 <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
          <source>Normally, you will not call the methods on <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> within your code; they are generally called only by the install utility.</source>
          <target state="translated">일반적으로 메서드를 호출 하지 것입니다 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> ; 코드 내에서 일반적으로에서 호출 설치 유틸리티입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
          <source>The install utility automatically calls the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType&gt;</ph> methods during the installation process.</source>
          <target state="translated">설치 유틸리티를 자동으로 호출 된 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType&gt;</ph> 설치 과정에서 메서드.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
          <source>It backs out failures, if necessary, by calling <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A&gt;</ph> (or <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType&gt;</ph>) on all previously installed components</source>
          <target state="translated">백업를 필요에 따라 호출 하 여 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A&gt;</ph> (또는 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType&gt;</ph>) 이전에 설치 된 모든 구성 요소에</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
          <source>An application's install routine maintains information automatically about the components already installed, using the project installer's <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">프로젝트 설치 관리자를 사용 하 여 구성 요소가 이미 설치 되어 자동으로 정보를 유지 하는 응용 프로그램의 설치 루틴 <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
          <source>This state information, passed into <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A&gt;</ph> as the <ph id="ph2">`stateSaver`</ph> parameter, is continuously updated as the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instance and each <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instance is installed by the utility.</source>
          <target state="translated">이 상태 정보로 전달 된 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A&gt;</ph> 로 <ph id="ph2">`stateSaver`</ph> 매개 변수를 계속 업데이트 됩니다는 <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> 인스턴스와 각 <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> 유틸리티 인스턴스를 설치 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
          <source>It is usually unnecessary for your code to modify this state information explicitly.</source>
          <target state="translated">일반적으로 코드의 명시적으로이 상태 정보를 수정할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A&gt;</ph> passes to the calling method any exceptions thrown by base class methods or <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.BeforeInstall&gt;</ph><ph id="ph3"> / </ph><ph id="ph4">&lt;xref:System.Configuration.Install.Installer.AfterInstall&gt;</ph> event handlers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A&gt;</ph> 기본 클래스 메서드에 의해 throw 된 예외를 호출 하는 메서드로 전달 또는 <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.BeforeInstall&gt;</ph> <ph id="ph3"> / </ph> <ph id="ph4">&lt;xref:System.Configuration.Install.Installer.AfterInstall&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;paramref name="stateSaver" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stateSaver" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceProcessInstaller.Password">
          <source>Gets or sets the password associated with the user account under which the service application runs.</source>
          <target state="translated">서비스 응용 프로그램을 실행하는 사용자 계정과 관련된 암호를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Password">
          <source>The password associated with the account under which the service should run.</source>
          <target state="translated">서비스를 실행하는 계정과 관련된 암호입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Password">
          <source>The default is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Password">
          <source>The property is not public, and is never serialized.</source>
          <target state="translated">이 속성은 공용이 아니며 serialize되지 않습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Password">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> pair allows the service to run under an account other than the system account.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> 쌍 서비스가 시스템 계정 이외의 계정으로 실행 되도록 허용 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Password">
          <source>This can, for example, allow the service to start automatically at reboot, when no user is logged on.</source>
          <target state="translated">예를 들어 사용자가 로그온 하는 경우 재부팅 시 자동으로 시작 하는 서비스를 허용할 수를이.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Password">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> are handled in a secure manner in that they are never serialized or saved to the install state (the project installer's <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>) or other location with public access.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> 직렬화 되거나 설치 상태에 저장 되지 안전한 방식으로 처리 됩니다 (프로젝트 설치 관리자의 <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>) 또는 공용 액세스를 사용 하 여 다른 위치입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Password">
          <source>Setting the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> allows an account to be associated automatically with the service at install time.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> 계정이 설치 중에 서비스를 자동으로 연결 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Password">
          <source>If you leave either the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> empty and set <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A&gt;</ph> to <ph id="ph4">`User`</ph>, you will be prompted for a valid user name and password at installation.</source>
          <target state="translated">비워는 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> 빈 및 설정 <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A&gt;</ph> 를 <ph id="ph4">`User`</ph>, 유효한 사용자 이름과 설치 시 암호를 묻는 메시지가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Password">
          <source>Another option for running a service under a separate account is to use the computer's System account.</source>
          <target state="translated">별도 계정에서 서비스를 실행 하기 위한 또 다른 옵션은 컴퓨터의 시스템 계정을 사용 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Password">
          <source>That account, which is distinct from the Administrator account, requires no password.</source>
          <target state="translated">관리자 계정 구별 되는 해당 계정에 암호가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Password">
          <source>The System account's privileges may exceed those of the user currently logged in.</source>
          <target state="translated">시스템 계정 권한이 현재 로그인 한 사용자의 초과 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Password">
          <source>Running under the System account rather than a user account avoids problems resulting from the user lacking a permission the service requires</source>
          <target state="translated">서비스에서 필요한 권한이 없는 경우 사용자에 게 서 발생 한 문제를 방지 하는 사용자 계정 대신 시스템 계정에서 실행</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Password">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A&gt;</ph> is any value other than <ph id="ph2">`User`</ph>, the specifed account (local or network service, or local system) is used, even if the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> properties are populated.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A&gt;</ph> 아닌 다른 값이 <ph id="ph2">`User`</ph>, 지정 된 계정 (로컬 또는 네트워크 서비스 또는 로컬 시스템) 사용 하는 경우에는 <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> 속성이 채워져 있는지 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> that contains the context information associated with the installation.</source>
          <target state="translated">설치와 연관된 컨텍스트 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)">
          <source>Rolls back service application information written to the registry by the installation procedure.</source>
          <target state="translated">설치 프로시저에서 레지스트리에 쓴 서비스 응용 프로그램 정보를 롤백합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)">
          <source>This method is meant to be used by installation tools, which process the appropriate methods automatically.</source>
          <target state="translated">이 메서드는 적절한 메서드를 자동으로 처리하는 설치 도구에서 사용됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)">
          <source>Normally, you do not call the methods on <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> within your code; they are generally called only by the install utility.</source>
          <target state="translated">일반적으로 메서드를 호출 하지 않으면 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> ; 코드 내에서 일반적으로에서 호출 설치 유틸리티입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)">
          <source>The install utility automatically calls the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType&gt;</ph> method during the installation process.</source>
          <target state="translated">설치 유틸리티를 자동으로 호출 된 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType&gt;</ph> 설치 과정에서 메서드.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)">
          <source>It backs out failures, if necessary, by calling <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A&gt;</ph> on the object that generated the exception.</source>
          <target state="translated">백업를 필요에 따라 호출 하 여 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A&gt;</ph> 예외를 생성 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)">
          <source>An application's install routine maintains information automatically about the components already installed, using the project installer's <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">프로젝트 설치 관리자를 사용 하 여 구성 요소가 이미 설치 되어 자동으로 정보를 유지 하는 응용 프로그램의 설치 루틴 <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)">
          <source>This state information, passed into <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A&gt;</ph> as the <ph id="ph2">`savedState`</ph> parameter, is continuously updated as the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instance and each <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instance is installed by the utility.</source>
          <target state="translated">이 상태 정보로 전달 된 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A&gt;</ph> 로 <ph id="ph2">`savedState`</ph> 매개 변수를 계속 업데이트 됩니다는 <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> 인스턴스와 각 <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> 유틸리티 인스턴스를 설치 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)">
          <source>It is usually unnecessary for your code to modify this state information explicitly.</source>
          <target state="translated">일반적으로 코드의 명시적으로이 상태 정보를 수정할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A&gt;</ph> passes to the calling method any exceptions thrown by base class methods or <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.BeforeInstall&gt;</ph><ph id="ph3"> / </ph><ph id="ph4">&lt;xref:System.Configuration.Install.Installer.AfterInstall&gt;</ph> event handlers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A&gt;</ph> 기본 클래스 메서드에 의해 throw 된 예외를 호출 하는 메서드로 전달 또는 <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.BeforeInstall&gt;</ph> <ph id="ph3"> / </ph> <ph id="ph4">&lt;xref:System.Configuration.Install.Installer.AfterInstall&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;paramref name="savedState" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="savedState" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;paramref name="savedState" /&gt;</ph> is corrupted or non-existent.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="savedState" /&gt;</ph>가 손상되었거나 없는 경우</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceProcessInstaller.Username">
          <source>Gets or sets the user account under which the service application will run.</source>
          <target state="translated">서비스 응용 프로그램을 실행하는 사용자 계정을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Username">
          <source>The account under which the service should run.</source>
          <target state="translated">서비스를 실행하는 계정입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Username">
          <source>The default is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Username">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> pair allows the service to run under an account other than the system account.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> 쌍 서비스가 시스템 계정 이외의 계정으로 실행 되도록 허용 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Username">
          <source>This can, for example, allow the service to start automatically at reboot, when no user is logged on.</source>
          <target state="translated">예를 들어 사용자가 로그온 하는 경우 재부팅 시 자동으로 시작 하는 서비스를 허용할 수를이.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Username">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> are handled in a secure manner in that they are never serialized or saved to the install state (the project installer's <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>) or other location with public access.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> 직렬화 되거나 설치 상태에 저장 되지 안전한 방식으로 처리 됩니다 (프로젝트 설치 관리자의 <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>) 또는 공용 액세스를 사용 하 여 다른 위치입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Username">
          <source>Setting the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> allows an account to be associated automatically with the service at install time.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> 계정이 설치 중에 서비스를 자동으로 연결 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Username">
          <source>If you leave either the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> empty and set <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A&gt;</ph> to <ph id="ph4">`User`</ph>, you will be prompted for a valid user name and password at installation.</source>
          <target state="translated">비워는 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> 빈 및 설정 <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A&gt;</ph> 를 <ph id="ph4">`User`</ph>, 유효한 사용자 이름과 설치 시 암호를 묻는 메시지가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Username">
          <source>Another option for running a service under a separate account is to use the computer's System account.</source>
          <target state="translated">별도 계정에서 서비스를 실행 하기 위한 또 다른 옵션은 컴퓨터의 시스템 계정을 사용 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Username">
          <source>That account, which is distinct from the Administrator account, requires no password.</source>
          <target state="translated">관리자 계정 구별 되는 해당 계정에 암호가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Username">
          <source>The System account's privileges may exceed those of the user currently logged in.</source>
          <target state="translated">시스템 계정 권한이 현재 로그인 한 사용자의 초과 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Username">
          <source>Running under the System account rather than a user account avoids problems resulting from the user lacking a permission the service requires</source>
          <target state="translated">서비스에서 필요한 권한이 없는 경우 사용자에 게 서 발생 한 문제를 방지 하는 사용자 계정 대신 시스템 계정에서 실행</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceProcessInstaller.Username">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A&gt;</ph> is any value other than <ph id="ph2">`User`</ph>, the specified account (local or network service, or local system) is used, even if the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> properties are populated.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A&gt;</ph> 아닌 다른 값이 <ph id="ph2">`User`</ph>, 지정 된 계정 (로컬 또는 네트워크 서비스 또는 로컬 시스템) 사용 하는 경우에는 <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A&gt;</ph> 속성이 채워져 있는지 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>