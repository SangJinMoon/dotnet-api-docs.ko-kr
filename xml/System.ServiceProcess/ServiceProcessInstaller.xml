<Type Name="ServiceProcessInstaller" FullName="System.ServiceProcess.ServiceProcessInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22ae64a5e07ce6d99f315597d118732a84c3849f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36409891" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProcessInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceProcessInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProcessInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProcessInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type ServiceProcessInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Installs an executable containing classes that extend <see cref="T:System.ServiceProcess.ServiceBase" />. This class is called by installation utilities, such as InstallUtil.exe, when installing a service application.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceProcessInstaller> 실행 파일의 모든 서비스에 공통적으로 작동 합니다. 설치 하려는 서비스와 관련 된 레지스트리 값을 쓸 설치 유틸리티에 의해 사용 됩니다.  
  
 서비스를 설치 하려면에서 상속 되는 프로젝트 설치 관리자 클래스를 만듭니다 <xref:System.Configuration.Install.Installer>를 설정 하 고는 <xref:System.ComponentModel.RunInstallerAttribute> 클래스에 `true`합니다. 프로젝트 내에서 하나를 인스턴스화하고 <xref:System.ServiceProcess.ServiceProcessInstaller> 개와 서비스 응용 프로그램 마다 인스턴스 <xref:System.ServiceProcess.ServiceInstaller> 응용 프로그램의 각 서비스에 대 한 인스턴스. 마지막으로 추가 된 <xref:System.ServiceProcess.ServiceProcessInstaller> 인스턴스 및 <xref:System.ServiceProcess.ServiceInstaller> 인스턴스 프로젝트 설치 관리자 클래스를 합니다.  
  
 유틸리티를 사용 하 여 서비스 어셈블리의 클래스를 찾습니다 InstallUtil.exe를 실행 하면는 <xref:System.ComponentModel.RunInstallerAttribute> 로 설정 `true`합니다. 에 추가 하 여 서비스 어셈블리에 클래스 추가 <xref:System.Configuration.Install.Installer.Installers%2A> 프로젝트 설치 관리자와 연결 된 컬렉션입니다. 경우 <xref:System.ComponentModel.RunInstallerAttribute> 은 `false`, 설치 유틸리티 프로젝트 설치 관리자를 무시 합니다.  
  
 인스턴스에 대 한 <xref:System.ServiceProcess.ServiceProcessInstaller>, 로그온 한 사용자 이외의 계정으로 서비스 응용 프로그램 실행을 지정 하 여 속성을 수정할 수 있습니다를 포함 합니다. 특정을 지정할 수 있습니다 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 쌍은 서비스를 실행 하거나 사용할 수 있습니다 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> 에서 서비스가 컴퓨터의 시스템 계정, 로컬 또는 네트워크 서비스 계정 또는 사용자 계정에서 실행 되도록 지정할 수 있습니다.  
  
> [!NOTE]
>  컴퓨터의 시스템 계정 관리자 계정과 같지 않습니다.  
  
 일반적으로 메서드를 호출 하지 않으면 <xref:System.ServiceProcess.ServiceInstaller> ; 코드 내에서 일반적으로에서 호출 설치 유틸리티입니다. 설치 유틸리티를 자동으로 호출 된 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> 및 <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> 설치 과정에서 메서드. 백업를 필요에 따라 호출 하 여 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (또는 <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) 이전에 설치 된 모든 구성 요소에 있습니다.  
  
 프로젝트 설치 관리자를 사용 하 여 구성 요소가 이미 설치 되어 자동으로 정보를 유지 하는 응용 프로그램의 설치 루틴 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>합니다. 이 상태 정보는 지속적으로 업데이트는 <xref:System.ServiceProcess.ServiceProcessInstaller> 인스턴스와 각 <xref:System.ServiceProcess.ServiceInstaller> 유틸리티 인스턴스를 설치 합니다. 일반적으로 코드의 명시적으로이 상태 정보를 수정할 필요는 없습니다.  
  
 인스턴스화하는 <xref:System.ServiceProcess.ServiceProcessInstaller> 하면 기본 클래스 생성자 <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>가 호출 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 호출 MyProjectInstaller에서 상속 하는 프로젝트 설치 관리자 <xref:System.Configuration.Install.Installer>합니다. 두 서비스에 "Hello World 서비스 1"을 포함 하는 서비스 실행 파일은 가정 및 "2" Hello World 서비스입니다. (있음 설치 유틸리티에 의해 호출 되는) MyProjectInstaller에 대 한 생성자 내에서 <xref:System.ServiceProcess.ServiceInstaller> 각 서비스에 대해 개체가 만들어집니다 및 <xref:System.ServiceProcess.ServiceProcessInstaller> 실행 파일에 대해 생성 됩니다. 설치 유틸리티를 유효한 설치 관리자로 MyProjectInstaller를 인식 하는 <xref:System.ComponentModel.RunInstallerAttribute> 특성이로 설정 된 `true`합니다.  
  
 설치 관리자에 추가 되기 전에 프로세스 설치 관리자 및 서비스 설치 관리자에서 선택적 속성이 설정 되어는 <xref:System.Configuration.Install.Installer.Installers%2A> 컬렉션입니다. 설치 유틸리티 MyProjectInstaller에 액세스 하면 개체에 추가 된 <xref:System.Configuration.Install.Installer.Installers%2A> 컬렉션에 대 한 호출을 통해 <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> 차례로 설치 됩니다. 과정에서 설치 관리자는 각 개체 되돌릴 수 있습니다 차례로 설치 오류가 발생할 경우 하므로 설치 된 어떤 개체를 나타내는 상태 정보를 유지 합니다.  
  
 일반적으로 프로젝트 설치 관리자 클래스를 명시적으로 인스턴스화하지 않습니다. 만들 추가 하는 <xref:System.ComponentModel.RunInstallerAttribute>, 하지만 설치 유틸리티 실제로 호출 하 고 인스턴스화합니다 따라서 클래스.  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
    <altmember cref="P:System.Configuration.Install.Installer.Installers" />
    <altmember cref="T:System.ServiceProcess.ServiceAccount" />
    <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProcessInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProcessInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Account">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceAccount Account { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceAccount Account" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberSignature Language="VB.NET" Value="Public Property Account As ServiceAccount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceAccount Account { System::ServiceProcess::ServiceAccount get(); void set(System::ServiceProcess::ServiceAccount value); };" />
      <MemberSignature Language="F#" Value="member this.Account : System.ServiceProcess.ServiceAccount with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceProcessInstallerAccount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of account under which to run this service application.</summary>
        <value>A <see cref="T:System.ServiceProcess.ServiceAccount" /> 시스템이이 서비스가 실행 되는 계정 유형을 정의 하는 합니다. 기본값은 <see langword="User" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> 속성은 `User`, <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 속성 서비스 응용 프로그램이 실행 되는 계정을 정의 하는 데 사용 됩니다.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 쌍 서비스가 시스템 계정 이외의 계정으로 실행 되도록 허용 합니다. 예를 들어 사용자가 로그온 하는 경우 재부팅 시 자동으로 시작 하는 서비스를 허용할 수를이. 비워는 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 또는 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 빈 및 설정 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> 를 `User`, 유효한 사용자 이름과 설치 시 암호를 묻는 메시지가 표시 됩니다.  
  
 지정할 수도 있습니다는 서비스가 로컬 시스템 계정 또는 로컬 실행 또는 네트워크 서비스입니다. 참조는 <xref:System.ServiceProcess.ServiceAccount> 계정 유형에 대 한 자세한 내용은 열거형입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="T:System.ServiceProcess.ServiceAccount" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (comp As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ comp);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="serviceProcessInstaller.CopyFromComponent comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">The <see cref="T:System.ComponentModel.IComponent" /> that represents the service process.</param>
        <summary>Implements the base class <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> method with no <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class-specific behavior.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 코드 내에서 호출 되어야 합니다. 기본 클래스 메서드를 <xref:System.Configuration.Install.ComponentInstaller> 은 `abstract`이므로 파생된 클래스에서 구현 됩니다. 그러나 없는 <xref:System.ServiceProcess.ServiceProcessInstaller> 클래스 관련 메서드의 구현에서 처리 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets help text displayed for service installation options.</summary>
        <value>도움말 텍스트는 특정 계정에서 서비스를 실행 하는 데 사용자 이름과 암호를 설정 하기 위한 단계에 대 한 설명을 제공 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 도움말 텍스트는 서비스가 수동으로 시작 될 때 사용할 수 있습니다. 사용자에 게 사용자 이름 및 암호 정보를 입력 하는 방법을 나타냅니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</param>
        <summary>Writes service application information to the registry. This method is meant to be used by installation tools, which call the appropriate methods automatically.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 메서드를 호출 하지 않으면 <xref:System.ServiceProcess.ServiceProcessInstaller> ; 코드 내에서 일반적으로에서 호출 설치 유틸리티입니다. 설치 유틸리티를 자동으로 호출 된 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> 설치 과정에서 메서드. 백업를 필요에 따라 호출 하 여 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 이전에 설치 된 모든 구성 요소에 있습니다. 이 메서드는 설치의 기본 클래스를 전달 <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType> 메서드.  
  
 일반적으로 메서드를 호출 하지 것입니다 <xref:System.ServiceProcess.ServiceInstaller> ; 코드 내에서 일반적으로에서 호출 설치 유틸리티입니다. 설치 유틸리티를 자동으로 호출 된 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> 및 <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> 설치 과정에서 메서드. 백업를 필요에 따라 호출 하 여 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (또는 <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) 이전에 설치 된 모든 구성 요소에  
  
 프로젝트 설치 관리자를 사용 하 여 구성 요소가 이미 설치 되어 자동으로 정보를 유지 하는 응용 프로그램의 설치 루틴 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>합니다. 이 상태 정보로 전달 된 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> 로 `stateSaver` 매개 변수를 계속 업데이트 됩니다는 <xref:System.ServiceProcess.ServiceProcessInstaller> 인스턴스와 각 <xref:System.ServiceProcess.ServiceInstaller> 유틸리티 인스턴스를 설치 합니다. 일반적으로 코드의 명시적으로이 상태 정보를 수정할 필요는 없습니다.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> 기본 클래스 메서드에 의해 throw 된 예외를 호출 하는 메서드로 전달 또는 <xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall> 이벤트 처리기입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="stateSaver" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the password associated with the user account under which the service application runs.</summary>
        <value>서비스를 실행 해야 해당 계정과 연결 된 암호입니다. 기본값은 빈 문자열("")입니다. 속성이 공용, 아니며 serialize 되지 않습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 쌍 서비스가 시스템 계정 이외의 계정으로 실행 되도록 허용 합니다. 예를 들어 사용자가 로그온 하는 경우 재부팅 시 자동으로 시작 하는 서비스를 허용할 수를이.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 직렬화 되거나 설치 상태에 저장 되지 안전한 방식으로 처리 됩니다 (프로젝트 설치 관리자의 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) 또는 공용 액세스를 사용 하 여 다른 위치입니다.  
  
 설정의 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 계정이 설치 중에 서비스를 자동으로 연결 될 수 있습니다. 비워는 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 또는 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 빈 및 설정 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> 를 `User`, 유효한 사용자 이름과 설치 시 암호를 묻는 메시지가 표시 됩니다.  
  
 별도 계정에서 서비스를 실행 하기 위한 또 다른 옵션은 컴퓨터의 시스템 계정을 사용 하는 것입니다. 관리자 계정 구별 되는 해당 계정에 암호가 필요 합니다. 시스템 계정 권한이 현재 로그인 한 사용자의 초과 합니다. 서비스에서 필요한 권한이 없는 경우 사용자에 게 서 발생 한 문제를 방지 하는 사용자 계정 대신 시스템 계정에서 실행  
  
 경우 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> 아닌 다른 값이 `User`, 지정 된 계정 (로컬 또는 네트워크 서비스 또는 로컬 시스템) 사용 하는 경우에는 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 속성이 채워져 있는지 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</param>
        <summary>Rolls back service application information written to the registry by the installation procedure. This method is meant to be used by installation tools, which process the appropriate methods automatically.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 메서드를 호출 하지 않으면 <xref:System.ServiceProcess.ServiceProcessInstaller> ; 코드 내에서 일반적으로에서 호출 설치 유틸리티입니다. 설치 유틸리티를 자동으로 호출 된 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> 설치 과정에서 메서드. 백업를 필요에 따라 호출 하 여 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 예외를 생성 하는 개체입니다.  
  
 프로젝트 설치 관리자를 사용 하 여 구성 요소가 이미 설치 되어 자동으로 정보를 유지 하는 응용 프로그램의 설치 루틴 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>합니다. 이 상태 정보로 전달 된 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 로 `savedState` 매개 변수를 계속 업데이트 됩니다는 <xref:System.ServiceProcess.ServiceProcessInstaller> 인스턴스와 각 <xref:System.ServiceProcess.ServiceInstaller> 유틸리티 인스턴스를 설치 합니다. 일반적으로 코드의 명시적으로이 상태 정보를 수정할 필요는 없습니다.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 기본 클래스 메서드에 의해 throw 된 예외를 호출 하는 메서드로 전달 또는 <xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall> 이벤트 처리기입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="savedState" /> is <see langword="null" />.  -or-  The <paramref name="savedState" /> is corrupted or non-existent.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Username : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the user account under which the service application will run.</summary>
        <value>서비스를 실행 하는 계정입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 쌍 서비스가 시스템 계정 이외의 계정으로 실행 되도록 허용 합니다. 예를 들어 사용자가 로그온 하는 경우 재부팅 시 자동으로 시작 하는 서비스를 허용할 수를이.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 직렬화 되거나 설치 상태에 저장 되지 안전한 방식으로 처리 됩니다 (프로젝트 설치 관리자의 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) 또는 공용 액세스를 사용 하 여 다른 위치입니다.  
  
 설정의 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 계정이 설치 중에 서비스를 자동으로 연결 될 수 있습니다. 비워는 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 또는 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 빈 및 설정 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> 를 `User`, 유효한 사용자 이름과 설치 시 암호를 묻는 메시지가 표시 됩니다.  
  
 별도 계정에서 서비스를 실행 하기 위한 또 다른 옵션은 컴퓨터의 시스템 계정을 사용 하는 것입니다. 관리자 계정 구별 되는 해당 계정에 암호가 필요 합니다. 시스템 계정 권한이 현재 로그인 한 사용자의 초과 합니다. 서비스에서 필요한 권한이 없는 경우 사용자에 게 서 발생 한 문제를 방지 하는 사용자 계정 대신 시스템 계정에서 실행  
  
 경우 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> 아닌 다른 값이 `User`, 지정 된 계정 (로컬 또는 네트워크 서비스 또는 로컬 시스템) 사용 하는 경우에는 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 속성이 채워져 있는지 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
  </Members>
</Type>