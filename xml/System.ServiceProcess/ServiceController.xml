<Type Name="ServiceController" FullName="System.ServiceProcess.ServiceController">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9a3b28ab31ae22be9c5d05c1e032e4a25945f287" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30530987" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceController : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceController extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceController" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceController&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceController : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.ServiceProcess.Design.ServiceControllerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceControllerDesc")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows 서비스를 나타내며 이 클래스를 사용하면 실행 중이거나 중지된 서비스에 연결하거나 서비스를 조작하거나 서비스 관련 정보를 가져올 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.ServiceProcess.ServiceController> 클래스에 연결 하 고 기존 서비스의 동작을 제어 합니다. 인스턴스를 만드는 경우는 <xref:System.ServiceProcess.ServiceController> 클래스 속성을 설정 하는 특정 Windows 서비스와 상호 작용 하도록 합니다. 그런 다음 시작, 중지, 그렇지 않으면 서비스를 관리 하는 클래스를 사용할 수 있습니다.  
  
 가장를 사용할 수는 <xref:System.ServiceProcess.ServiceController> 관리 목적에서 구성 요소입니다. 예를 들어 Windows 만들 수도 있고 사용자 지정 전송 하는 웹 응용 프로그램을 통해 서비스에 명령을 <xref:System.ServiceProcess.ServiceController> 인스턴스. 서비스 제어 관리자 (SCM) Microsoft Management Console 스냅인을 사용 하는 사용자 지정 명령의 지원 하지 않으므로 유용 하 게 것.  
  
 인스턴스를 만든 후 <xref:System.ServiceProcess.ServiceController>, 작용할 서비스를 식별 하는 데 두 개의 속성을 설정 해야: 컴퓨터 이름 및 제어 하려는 서비스의 이름입니다.  
  
> [!NOTE]
>  기본적으로 <xref:System.ServiceProcess.ServiceController.MachineName%2A> 로컬 컴퓨터로 설정 되어 있으므로 다른 컴퓨터를 가리키도록 인스턴스 설정 하려는 경우가 아니면 변경할 필요가 없습니다.  
  
 일반적으로 서비스 작성자가 특정 명령과 연결 된 동작을 사용자 지정 코드를 작성 합니다. 예를 들어, 서비스에 응답 하는 코드를 포함할 수 있습니다는 <xref:System.ServiceProcess.ServiceBase.OnPause%2A?displayProperty=nameWithType> 명령입니다. 경우에 대 한 사용자 지정 처리는 <xref:System.ServiceProcess.ServiceController.Pause%2A> 시스템 서비스가 일시 중지 되기 전에 작업을 실행 합니다.  
  
 서비스가 처리할 수 있는 명령 집합이 속성에 따라 다릅니다. 예를 들어, 설정할 수는 <xref:System.ServiceProcess.ServiceController.CanStop%2A> 를 서비스에 대 한 속성 `false`합니다. 이 설정은 렌더링는 `Stop` 해당 서비스에서 사용할 수 없는 명령;에 필요한 단추를 사용 하지 않도록 설정 하 여 SCM에서 서비스를 중지 되지 않도록 합니다. 사용자 코드에서 서비스를 중지 하려고 하면 시스템에서 오류가 발생 하 고 오류 메시지를 표시 "를 중지 하지 못했습니다 `servicename`."  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController> 제어 하는 클래스는 `SimpleService` 서비스 예제입니다.  
  
 [!code-csharp[ServiceControllerClass#1](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#1)]
 [!code-vb[ServiceControllerClass#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="T:System.ServiceProcess.ServiceControllerStatus" />
    <altmember cref="T:System.ServiceProcess.ServiceType" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ServiceProcess.ServiceController" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceController ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceController();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>특정 서비스와 관련되지 않은 <see cref="T:System.ServiceProcess.ServiceController" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceController (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceController(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">시스템에서 서비스를 식별하는 이름입니다. 또한 서비스의 디스플레이 이름일 수도 있습니다.</param>
        <summary>로컬 컴퓨터의 기존 서비스와 관련된 <see cref="T:System.ServiceProcess.ServiceController" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController.%23ctor%28System.String%29?displayProperty=nameWithType> 를 만드는 생성자는 <xref:System.ServiceProcess.ServiceController> 샘플 서비스를 제어 하는 데 사용 되는 개체입니다. 이 예제는 제공 된 큰 예제의 일부는 <xref:System.ServiceProcess.ServiceController> 클래스입니다.  
  
 [!code-csharp[ServiceControllerClass#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#2)]
 [!code-vb[ServiceControllerClass#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" />이 잘못되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceController (string name, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceController(System::String ^ name, System::String ^ machineName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">시스템에서 서비스를 식별하는 이름입니다. 또한 서비스의 디스플레이 이름일 수도 있습니다.</param>
        <param name="machineName">서비스가 상주하는 컴퓨터입니다.</param>
        <summary>지정된 컴퓨터의 기존 서비스와 관련된 <see cref="T:System.ServiceProcess.ServiceController" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한는 `machineName` 사용할 수 있습니다 매개 변수를 "." 로컬 컴퓨터를 나타낼 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" />이 잘못되었습니다.  
  
 또는  
  
 <paramref name="machineName" />이 잘못되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanPauseAndContinue">
      <MemberSignature Language="C#" Value="public bool CanPauseAndContinue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPauseAndContinue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.CanPauseAndContinue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPauseAndContinue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPauseAndContinue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPCanPauseAndContinue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서비스를 일시 중지했다가 다시 시작할 수 있는지를 나타내는 값을 가져옵니다.</summary>
        <value>
          서비스를 일시 중지할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController.CanPauseAndContinue%2A> 속성을 서비스 일시 중지 하 고 계속 수 있는지 여부를 확인 합니다. 이 예제는 제공 된 큰 예제의 일부는 <xref:System.ServiceProcess.ServiceController> 클래스입니다.  
  
 [!code-csharp[ServiceControllerClass#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#2)]
 [!code-vb[ServiceControllerClass#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <exception cref="T:System.InvalidOperationException">서비스를 찾을 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanShutdown">
      <MemberSignature Language="C#" Value="public bool CanShutdown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShutdown" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.CanShutdown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanShutdown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanShutdown { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPCanShutdown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시스템을 종료할 때 서비스에 알릴지를 나타내는 값을 가져옵니다.</summary>
        <value>
          시스템이 종료될 때 서비스에 알리려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController.CanShutdown%2A> 속성을 서비스가 종료 이벤트에 대 한 처리기를 제공 하는지 여부를 확인 합니다. 이 예제는 제공 된 큰 예제의 일부는 <xref:System.ServiceProcess.ServiceController> 클래스입니다.  
  
 [!code-csharp[ServiceControllerClass#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#2)]
 [!code-vb[ServiceControllerClass#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <exception cref="T:System.InvalidOperationException">서비스를 찾을 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanStop">
      <MemberSignature Language="C#" Value="public bool CanStop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanStop" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.CanStop" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanStop { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPCanStop")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시작한 서비스를 중지할 수 있는지의 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          서비스를 중지할 수 있고 <see cref="M:System.ServiceProcess.ServiceBase.OnStop" /> 메서드가 호출되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController.CanStop%2A> 서비스가 중지 이벤트에 대 한 처리기를 제공 하는지 여부를 확인 하는 속성입니다. 이 예제는 제공 된 큰 예제의 일부는 <xref:System.ServiceProcess.ServiceController> 클래스입니다.  
  
 [!code-csharp[ServiceControllerClass#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#2)]
 [!code-vb[ServiceControllerClass#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <exception cref="T:System.InvalidOperationException">서비스를 찾을 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>서비스에서 <see cref="T:System.ServiceProcess.ServiceController" /> 인스턴스의 연결을 끊고 해당 인스턴스가 할당한 리소스를 모두 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceController.Close%2A> 와 연결 된 핸들이 모두 해제는 <xref:System.ServiceProcess.ServiceController> 인스턴스.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="public void Continue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Continue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Continue" />
      <MemberSignature Language="VB.NET" Value="Public Sub Continue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Continue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>일시 중지한 서비스를 계속합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 하는 경우 <xref:System.ServiceProcess.ServiceController.Continue%2A> 는 서비스의 상태 먼저로 변경 됩니다 `ContinuePending` 다음는 <xref:System.ServiceProcess.ServiceController.Continue%2A> 으로 변경 된 메서드가 반환 `Running`합니다.  
  
 호출할 수 없습니다 <xref:System.ServiceProcess.ServiceController.Continue%2A> 서비스 컨트롤러 상태는 해당 서비스에 대해 `Paused`합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController.Continue%2A> 메서드를 일시 중지 된 서비스를 계속 합니다. 이 예제는 제공 된 큰 예제의 일부는 <xref:System.ServiceProcess.ServiceController> 클래스입니다.  
  
 [!code-csharp[ServiceControllerClass#5](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#5)]
 [!code-vb[ServiceControllerClass#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <exception cref="T:System.InvalidOperationException">서비스를 찾을 수 없습니다.</exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">컴퓨터에서 서비스를 제어 합니다. 연결 된 열거형의 경우: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">서비스 정보에 대 한 무제한 액세스 합니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="P:System.ServiceProcess.ServiceController.CanPauseAndContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceController.Pause" />
        <altmember cref="P:System.ServiceProcess.ServiceController.Status" />
      </Docs>
    </Member>
    <Member MemberName="DependentServices">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceController[] DependentServices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceProcess.ServiceController[] DependentServices" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.DependentServices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependentServices As ServiceController()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::ServiceProcess::ServiceController ^&gt; ^ DependentServices { cli::array &lt;System::ServiceProcess::ServiceController ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPDependentServices")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceController[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.ServiceProcess.ServiceController" /> 인스턴스와 관련된 서비스에 종속되는 서비스 집합을 가져옵니다.</summary>
        <value>
          <see cref="T:System.ServiceProcess.ServiceController" /> 인스턴스의 배열입니다. 각 인스턴스는 이 서비스에 종속되는 서비스와 관련되어 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceController.DependentServices%2A> 배열 응용 프로그램에서 호출 하는 경우 시스템을 중지 하는 서비스를 나타내는 <xref:System.ServiceProcess.ServiceController.Stop%2A> 이 서비스에 대 한 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController> 클래스의 이벤트 로그 서비스에 종속 된 서비스의 집합을 표시 합니다.  
  
 [!code-cpp[ServiceController#3](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#3)]
 [!code-csharp[ServiceController#3](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#3)]
 [!code-vb[ServiceController#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <exception cref="T:System.InvalidOperationException">서비스를 찾을 수 없습니다.</exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">컴퓨터에서 기존 서비스에 연결 합니다. 연결 된 열거형의 경우: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPDisplayName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서비스의 이름을 가져오거나 설정합니다.</summary>
        <value>서비스의 이름이며, 서비스를 식별하는 데 사용할 수 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정할 수 있습니다는 <xref:System.ServiceProcess.ServiceController.DisplayName%2A> 빈 문자열 (""),이 속성을 설정 하지만 `null` 예외를 throw 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController> 클래스의 이벤트 로그 서비스에 종속 된 서비스의 집합을 표시 합니다.  
  
 [!code-cpp[ServiceController#3](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#3)]
 [!code-csharp[ServiceController#3](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#3)]
 [!code-vb[ServiceController#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.ServiceProcess.ServiceController.DisplayName" />이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <exception cref="T:System.InvalidOperationException">서비스를 찾을 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary>
          <see cref="T:System.ServiceProcess.ServiceController" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드. `Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A> 호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.  
  
 경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.ServiceProcess.ServiceController> 참조 합니다. 이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다. 재정의 하는 경우 <see langword="Dispose(Boolean)" /> 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <see langword="Dispose" />합니다. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
 에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public void ExecuteCommand (int command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteCommand(int32 command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteCommand (command As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteCommand(int command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command">실행할 사용자 지정 명령을 나타내는 응용 프로그램 정의 명령 플래그입니다. 값은 128 이상 256 이하여야 합니다.</param>
        <summary>서비스에서 사용자 지정 명령을 실행합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 하는 경우 <xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A>, 서비스의 상태가 변경 되지 않습니다. 서비스가 시작 된 경우 상태가 유지 되 고 `Running`합니다. 서비스가 중지 된 상태가 유지 되 고 `Stopped`등입니다. 사용자 지정 명령, 처리 서비스 재정의 해야 합니다는 <xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> 메서드 변수로 지정 된 명령에 대 한 처리기를 제공 하 고는 `command` 매개 변수입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.ServiceProcess.ServiceController.ExecuteCommand%28System.Int32%29?displayProperty=nameWithType> 에 사용자 지정 명령을 실행 하는 메서드는 `SimpleService` 서비스 예제입니다.  
  
 [!code-csharp[ServiceContoller_ExecuteCommand#1](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceContoller_ExecuteCommand/CS/program.cs#1)]
 [!code-vb[ServiceContoller_ExecuteCommand#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceContoller_ExecuteCommand/VB/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <exception cref="T:System.InvalidOperationException">서비스를 찾을 수 없습니다.</exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">컴퓨터에서 서비스를 제어 합니다. 연결 된 열거형의 경우: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">서비스 정보에 대 한 무제한 액세스 합니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDevices">
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>컴퓨터에서 장치 드라이버 서비스를 검색합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDevices">
      <MemberSignature Language="C#" Value="public static System.ServiceProcess.ServiceController[] GetDevices ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceProcess.ServiceController[] GetDevices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.GetDevices" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDevices () As ServiceController()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::ServiceProcess::ServiceController ^&gt; ^ GetDevices();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceController[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>로컬 컴퓨터에서 장치 드라이버 서비스를 검색합니다.</summary>
        <returns>각 요소가 로컬 컴퓨터에 있는 장치 드라이버 서비스와 관련된 <see cref="T:System.ServiceProcess.ServiceController" /> 형식의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceController.GetDevices%2A> 로컬 컴퓨터에서 장치 드라이버 서비스를 반환합니다. 비 장치 드라이버 서비스 또는 드라이버가 아닌 서비스를 검색 하려면 호출 된 <xref:System.ServiceProcess.ServiceController.GetServices%2A> 메서드. 함께 두 메서드는 컴퓨터에서 모든 서비스에 대 한 액세스를 제공합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController> 로컬 컴퓨터에 장치 드라이버 서비스를 표시 하는 클래스입니다.  
  
 [!code-cpp[ServiceController#5](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#5)]
 [!code-csharp[ServiceController#5](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#5)]
 [!code-vb[ServiceController#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceController.GetServices" />
      </Docs>
    </Member>
    <Member MemberName="GetDevices">
      <MemberSignature Language="C#" Value="public static System.ServiceProcess.ServiceController[] GetDevices (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceProcess.ServiceController[] GetDevices(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.GetDevices(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDevices (machineName As String) As ServiceController()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::ServiceProcess::ServiceController ^&gt; ^ GetDevices(System::String ^ machineName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceController[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">장치 드라이버 서비스를 검색할 컴퓨터입니다.</param>
        <summary>지정된 컴퓨터에서 장치 드라이버 서비스를 검색합니다.</summary>
        <returns>각 요소가 지정된 컴퓨터에 있는 장치 드라이버 서비스와 관련된 <see cref="T:System.ServiceProcess.ServiceController" /> 형식의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceController.GetDevices%2A> 지정된 된 컴퓨터에서 장치 드라이버 서비스를 반환합니다. 비 장치 드라이버 서비스 또는 드라이버가 아닌 서비스를 검색 하려면 호출 된 <xref:System.ServiceProcess.ServiceController.GetServices%2A> 메서드. 함께 두 메서드는 컴퓨터에서 모든 서비스에 대 한 액세스를 제공합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="machineName" /> 매개 변수 구문이 잘못된 경우.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceController.GetServices" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetServices">
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>컴퓨터에서 비장치 드라이버 서비스와 드라이버가 아닌 서비스를 검색합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetServices">
      <MemberSignature Language="C#" Value="public static System.ServiceProcess.ServiceController[] GetServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceProcess.ServiceController[] GetServices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.GetServices" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetServices () As ServiceController()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::ServiceProcess::ServiceController ^&gt; ^ GetServices();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceController[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>로컬 컴퓨터에서 장치 드라이버 서비스를 제외한 모든 서비스를 검색합니다.</summary>
        <returns>각 요소가 로컬 컴퓨터에 있는 서비스와 관련된 <see cref="T:System.ServiceProcess.ServiceController" /> 형식의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceController.GetServices%2A> 비 장치 드라이버 서비스와 서비스는 로컬 컴퓨터에서 드라이버를 반환 합니다. 장치 드라이버 서비스를 검색 하려면는 <xref:System.ServiceProcess.ServiceController.GetDevices%2A> 메서드. 함께 두 메서드는 컴퓨터에서 모든 서비스에 대 한 액세스를 제공합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController> 클래스는 로컬 컴퓨터에서 실행 되는 서비스를 표시 합니다.  
  
 [!code-cpp[ServiceController#6](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#6)]
 [!code-csharp[ServiceController#6](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#6)]
 [!code-vb[ServiceController#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceController.GetDevices" />
      </Docs>
    </Member>
    <Member MemberName="GetServices">
      <MemberSignature Language="C#" Value="public static System.ServiceProcess.ServiceController[] GetServices (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceProcess.ServiceController[] GetServices(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.GetServices(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetServices (machineName As String) As ServiceController()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::ServiceProcess::ServiceController ^&gt; ^ GetServices(System::String ^ machineName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceController[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">서비스를 검색할 컴퓨터입니다.</param>
        <summary>지정된 컴퓨터에서 장치 드라이버 서비스를 제외한 모든 서비스를 검색합니다.</summary>
        <returns>각 요소가 지정된 컴퓨터에 있는 서비스와 관련된 <see cref="T:System.ServiceProcess.ServiceController" /> 형식의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceController.GetServices%2A> 지정 된 컴퓨터에서 드라이버가 아닌 서비스와 비 장치 드라이버 서비스에만 반환 합니다. 장치 드라이버 서비스를 검색 하려면는 <xref:System.ServiceProcess.ServiceController.GetDevices%2A> 메서드. 함께 두 메서드는 컴퓨터에서 모든 서비스에 대 한 액세스를 제공합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="machineName" /> 매개 변수 구문이 잘못된 경우.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceController.GetDevices" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPMachineName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 서비스가 상주하는 컴퓨터의 이름을 가져오거나 설정합니다.</summary>
        <value>이 <see cref="T:System.ServiceProcess.ServiceController" /> 인스턴스와 관련된 서비스를 실행하는 컴퓨터의 이름입니다. 기본값은 로컬 컴퓨터(".")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컴퓨터 이름 앞에 백슬래시 문자 없이이 서비스를 실행 하는 서버의 이름인 (\\\\).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.ServiceProcess.ServiceController.MachineName" /> 구문이 잘못된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>서비스 작업을 일시 중단합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출할 수 없습니다 <xref:System.ServiceProcess.ServiceController.Continue%2A> 서비스 컨트롤러 상태는 해당 서비스에 대해 `Paused`합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController.Pause%2A> 메서드는 서비스를 일시 중지 합니다. 이 예제는 제공 된 큰 예제의 일부는 <xref:System.ServiceProcess.ServiceController> 클래스입니다.  
  
 [!code-csharp[ServiceControllerClass#4](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#4)]
 [!code-vb[ServiceControllerClass#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <exception cref="T:System.InvalidOperationException">서비스를 찾을 수 없습니다.</exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">컴퓨터에서 서비스를 제어 합니다. 연결 된 열거형의 경우: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">서비스 정보에 대 한 무제한 액세스 합니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="P:System.ServiceProcess.ServiceController.CanPauseAndContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceController.Continue" />
        <altmember cref="P:System.ServiceProcess.ServiceController.Status" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 값으로 속성을 다시 설정하여 속성 값을 새로 고칩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceController.Refresh%2A> 메서드를 사용 하면은 <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A>, <xref:System.ServiceProcess.ServiceController.DependentServices%2A>, 및 <xref:System.ServiceProcess.ServiceController.Status%2A> 속성이 다음 참조 될 때 현재 값으로 다시 설정 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController.Refresh%2A> 메서드는 서비스의 상태를 가져올 수 있습니다. 코드 서비스를 일시 중지 한 다음 변경 사항을 반영 상태에 대 한 대기 하도록 지시 합니다. 이 예제는 제공 된 큰 예제의 일부는 <xref:System.ServiceProcess.ServiceController> 클래스입니다.  
  
 [!code-csharp[ServiceControllerClass#4](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#4)]
 [!code-vb[ServiceControllerClass#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.SafeHandle ServiceHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.InteropServices.SafeHandle ServiceHandle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.ServiceHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceHandle As SafeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::SafeHandle ^ ServiceHandle { System::Runtime::InteropServices::SafeHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.SafeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서비스에 대한 핸들을 가져옵니다.</summary>
        <value>서비스에 대한 핸들이 포함된 <see cref="T:System.Runtime.InteropServices.SafeHandle" />입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">서비스를 찾을 수 없습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드에 액세스 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceProcess.Design.ServiceNameConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPServiceName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 인스턴스가 참조하는 서비스를 식별하는 이름을 가져오거나 설정합니다.</summary>
        <value>이 <see cref="T:System.ServiceProcess.ServiceController" /> 인스턴스가 참조하는 서비스를 식별하는 이름입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceController.ServiceName%2A> 서비스의 서비스 제어 관리자를 식별 합니다. 이 속성을 변경 하면는 <xref:System.ServiceProcess.ServiceController> 인스턴스 다른 서비스에 바인딩하는 변경 되지 않습니다 어떤 서비스 제어 관리자의 Microsoft Management Console 스냅인에서 표시 합니다.  
  
 이 속성의 값에 서비스에 대 한 기록 된 이름과 동일 해야 하는 사용자 지정 서비스를 구현 하는 경우는 <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> 해당 속성 <xref:System.ServiceProcess.ServiceInstaller> 클래스입니다. 코드에서는 <xref:System.ServiceProcess.ServiceController.ServiceName%2A> 일반적으로 설정의 `main()` 실행 파일의 함수입니다.  
  
 다시 설정 하면는 <xref:System.ServiceProcess.ServiceController.ServiceName%2A> 속성을 속성을 설정 하는 메서드가이 인스턴스의 설정 <xref:System.ServiceProcess.ServiceController.DisplayName%2A> 빈 문자열 ("").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.ServiceProcess.ServiceController.ServiceName" />이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.ServiceProcess.ServiceController.ServiceName" /> 속성의 구문이 잘못된 경우</exception>
        <exception cref="T:System.InvalidOperationException">서비스를 찾을 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServicesDependedOn">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceController[] ServicesDependedOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceProcess.ServiceController[] ServicesDependedOn" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.ServicesDependedOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicesDependedOn As ServiceController()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::ServiceProcess::ServiceController ^&gt; ^ ServicesDependedOn { cli::array &lt;System::ServiceProcess::ServiceController ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPServicesDependedOn")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceController[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 서비스가 결정되는 서비스 집합입니다.</summary>
        <value>
          <see cref="T:System.ServiceProcess.ServiceController" /> 인스턴스의 배열입니다. 각 인스턴스는 이 서비스가 실행되도록 하기 위해 실행해야 하는 서비스와 관련되어 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서비스가 있으면는 <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A> 배열 중이 아님,이 서비스를 시작할 수 없습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController> 클래스 메신저 서비스에 종속 된 서비스의 집합을 표시 합니다.  
  
 [!code-cpp[ServiceController#4](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#4)]
 [!code-csharp[ServiceController#4](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#4)]
 [!code-vb[ServiceController#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <exception cref="T:System.InvalidOperationException">서비스를 찾을 수 없습니다.</exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">컴퓨터에서 기존 서비스에 연결 합니다. 연결 된 열거형의 경우: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ServiceType">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceType ServiceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceType ServiceType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.ServiceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceType As ServiceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceType ServiceType { System::ServiceProcess::ServiceType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPServiceType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 개체가 참조하는 서비스 종류를 가져옵니다.</summary>
        <value>네트워크 서비스 종류를 나타내는 데 사용되는 <see cref="T:System.ServiceProcess.ServiceType" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서비스 유형 시스템에서 서비스 사용 방식을 나타냅니다. 값은 <xref:System.ServiceProcess.ServiceController.ServiceType%2A> 속성 플래그 비트 OR 연산자를 사용 하 여 결합의 집합을 나타냅니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController> 로컬 컴퓨터에 장치 드라이버 서비스를 표시 하는 클래스입니다.  
  
 [!code-cpp[ServiceController#5](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#5)]
 [!code-csharp[ServiceController#5](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#5)]
 [!code-vb[ServiceController#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <exception cref="T:System.InvalidOperationException">서비스를 찾을 수 없습니다.</exception>
        <altmember cref="T:System.ServiceProcess.ServiceType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>서비스를 시작합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>인수를 전달하지 않고 서비스를 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출할 수 없습니다 <xref:System.ServiceProcess.ServiceController.Stop%2A> 서비스 컨트롤러 상태는 해당 서비스에 대해 `Running`합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController> 경고 서비스가 중지 되었는지 여부를 확인 하는 클래스입니다. 이 예제에서는 서비스를 시작 및 서비스의 상태 설정할 때까지 대기는 서비스가 중지 되 면 <xref:System.ServiceProcess.ServiceControllerStatus.Running>합니다.  
  
 [!code-cpp[ServiceController#1](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#1)]
 [!code-csharp[ServiceController#1](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#1)]
 [!code-vb[ServiceController#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <exception cref="T:System.InvalidOperationException">서비스를 찾을 수 없습니다.</exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">컴퓨터에서 서비스를 제어 합니다. 연결 된 열거형의 경우: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">서비스 정보에 대 한 무제한 액세스 합니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="M:System.ServiceProcess.ServiceController.Stop" />
        <altmember cref="P:System.ServiceProcess.ServiceController.Status" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Start(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start (args As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args">서비스를 시작할 때 해당 서비스로 전달할 인수 배열입니다.</param>
        <summary>지정된 인수를 전달하면서 서비스를 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출할 수 없습니다 <xref:System.ServiceProcess.ServiceController.Stop%2A> 서비스 컨트롤러 상태는 해당 서비스에 대해 `Running`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <exception cref="T:System.InvalidOperationException">서비스를 시작할 수 없습니다.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="args" />가 <see langword="null" />인 경우  
  
 또는  
  
 배열의 멤버가 <see langword="null" />인 경우</exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">컴퓨터에서 서비스를 제어 합니다. 연결 된 열거형의 경우: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">서비스 정보에 대 한 무제한 액세스 합니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="M:System.ServiceProcess.ServiceController.Stop" />
        <altmember cref="P:System.ServiceProcess.ServiceController.Status" />
      </Docs>
    </Member>
    <Member MemberName="StartType">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceStartMode StartType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceStartMode StartType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.StartType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartType As ServiceStartMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceStartMode StartType { System::ServiceProcess::ServiceStartMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPStartType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceStartMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.ServiceProcess.ServiceController" /> 개체로 표현된 서비스가 시작하는 방법을 나타내는 값을 가져옵니다.</summary>
        <value>서비스가 시작되는 방법을 나타내는 값입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">컴퓨터에서 서비스를 검색 합니다. 연관된 열거형: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse" /></permission>
        <altmember cref="T:System.ServiceProcess.ServiceStartMode" />
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceControllerStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceControllerStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As ServiceControllerStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceControllerStatus Status { System::ServiceProcess::ServiceControllerStatus get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPStatus")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceControllerStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 인스턴스에서 참조하는 서비스 상태를 가져옵니다.</summary>
        <value>서비스가 실행되고 있는지, 중지되었는지 또는 일시 중지되었는지를 나타내거나 시작, 중지, 일시 중지 또는 계속 명령이 보류 중인지를 나타내는 <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 상태는 서비스의 현재 상태를 나타냅니다. 가능한 값의 집합 상태 변경 명령이 보류 중인지 여부를 나타내는 몇 개가 포함 되어 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController> 텔넷 서비스의 현재 상태를 확인 하는 클래스입니다. 서비스가 중지 된 경우이 예제에서는 서비스를 시작 합니다. 서비스가 실행 중인 경우이 예제에서는 서비스를 중지 합니다.  
  
 [!code-cpp[ServiceController#2](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#2)]
 [!code-csharp[ServiceController#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#2)]
 [!code-vb[ServiceController#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <exception cref="T:System.InvalidOperationException">서비스를 찾을 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 서비스와 이 서비스에 종속되는 서비스를 중지합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 해당 작업에 대 한이 서비스에 종속 된 모든 서비스가이 서비스를 중지 하기 전에 중지 됩니다. <xref:System.ServiceProcess.ServiceController.DependentServices%2A> 속성이이 종속 된 서비스의 집합을 포함 합니다.  
  
 이 서비스에 종속 하는 서비스를 중지 하는 경우 호출 된 <xref:System.ServiceProcess.ServiceController.Stop%2A> 메서드 내에서이 서비스에는 <xref:System.ServiceProcess.ServiceController.Stop%2A> 부모 서비스의 메서드. <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A> 속성이이 서비스에 종속 된 서비스를 포함 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController> 텔넷 서비스의 현재 상태를 확인 하는 클래스입니다. 서비스가 중지 된 경우이 예제에서는 서비스를 시작 합니다. 서비스가 실행 중인 경우이 예제에서는 서비스를 중지 합니다.  
  
 [!code-cpp[ServiceController#2](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#2)]
 [!code-csharp[ServiceController#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#2)]
 [!code-vb[ServiceController#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
        <exception cref="T:System.InvalidOperationException">서비스를 찾을 수 없습니다.</exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">컴퓨터에서 서비스를 제어 합니다. 연결 된 열거형의 경우: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">서비스 정보에 대 한 무제한 액세스 합니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="P:System.ServiceProcess.ServiceController.CanStop" />
        <altmember cref="M:System.ServiceProcess.ServiceController.Start" />
        <altmember cref="P:System.ServiceProcess.ServiceController.Status" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitForStatus">
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>서비스가 지정된 상태에 도달할 때까지 대기합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitForStatus">
      <MemberSignature Language="C#" Value="public void WaitForStatus (System.ServiceProcess.ServiceControllerStatus desiredStatus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WaitForStatus(valuetype System.ServiceProcess.ServiceControllerStatus desiredStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WaitForStatus (desiredStatus As ServiceControllerStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WaitForStatus(System::ServiceProcess::ServiceControllerStatus desiredStatus);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredStatus" Type="System.ServiceProcess.ServiceControllerStatus" />
      </Parameters>
      <Docs>
        <param name="desiredStatus">대기할 상태입니다.</param>
        <summary>서비스가 지정된 상태에 도달할 때까지 무제한 대기합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> 서비스가 필요한 상태에 도달한 될 때까지 처리의 응용 프로그램 일시 중단 합니다.  
  
> [!NOTE]
>  <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> 메서드 간의 각 상태를 확인 하는 약 250 밀리초를 대기 합니다.  <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> 관찰 된 서비스를 변경 하는 대/소문자를 검색할 수 없는 `desiredStatus` 해당 간격에 대 한 다음 다른 상태를 즉시 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.ServiceProcess.ServiceController> 경고 서비스가 중지 되었는지 여부를 확인 하는 클래스입니다. 이 예제에서는 서비스를 시작 및 서비스의 상태 설정할 때까지 대기는 서비스가 중지 되 면 <xref:System.ServiceProcess.ServiceControllerStatus.Running>합니다.  
  
 [!code-cpp[ServiceController#1](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#1)]
 [!code-csharp[ServiceController#1](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#1)]
 [!code-vb[ServiceController#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="desiredStatus" /> 매개 변수가 <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> 열거형에 정의된 값 중 하나가 아닌 경우</exception>
        <altmember cref="P:System.ServiceProcess.ServiceController.Status" />
      </Docs>
    </Member>
    <Member MemberName="WaitForStatus">
      <MemberSignature Language="C#" Value="public void WaitForStatus (System.ServiceProcess.ServiceControllerStatus desiredStatus, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WaitForStatus(valuetype System.ServiceProcess.ServiceControllerStatus desiredStatus, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WaitForStatus (desiredStatus As ServiceControllerStatus, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WaitForStatus(System::ServiceProcess::ServiceControllerStatus desiredStatus, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredStatus" Type="System.ServiceProcess.ServiceControllerStatus" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="desiredStatus">대기할 상태입니다.</param>
        <param name="timeout">서비스가 지정된 상태에 도달할 때까지 대기하는 시간을 지정하는 <see cref="T:System.TimeSpan" /> 개체입니다.</param>
        <summary>서비스가 지정된 상태에 도달하거나 지정된 제한 시간이 만료될 때까지 대기합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> 서비스가 필요한 상태에 도달한 될 때까지 처리의 응용 프로그램 일시 중단 합니다.  
  
> [!NOTE]
>  <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> 메서드 간의 각 상태를 확인 하는 약 250 밀리초를 대기 합니다.  <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> 관찰 된 서비스를 변경 하는 대/소문자를 검색할 수 없는 `desiredStatus` 해당 간격에 대 한 다음 다른 상태를 즉시 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="desiredStatus" /> 매개 변수가 <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> 열거형에 정의된 값 중 하나가 아닌 경우</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">
          <paramref name="timeout" /> 매개 변수에 대해 지정된 값이 만료된 경우</exception>
        <altmember cref="P:System.ServiceProcess.ServiceController.Status" />
      </Docs>
    </Member>
  </Members>
</Type>