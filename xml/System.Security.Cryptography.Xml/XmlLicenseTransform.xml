<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlLicenseTransform.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac536b3cef52db5c23dd1d8ffbfc2acc8bbe2e63459.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36b3cef52db5c23dd1d8ffbfc2acc8bbe2e63459</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>Represents the license transform algorithm used to normalize XrML licenses for signatures.</source>
          <target state="translated">서명을 위한 XrML 라이센스를 정규화하는 데 사용되는 라이센스 변환 알고리즘을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class represents the license transform algorithm as defined in the MPEG Rights Extension Language (MPEG REL).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> MPEG 권한 확장 언어 (MPEG REL)에 정의 된 클래스는 라이센스 변환 알고리즘을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class to transform XrML licenses for signatures.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> 서명 위한 XrML 라이센스 변환 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>The Uniform Resource Identifier (URI) that describes the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class is defined by the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl&gt;</ph> field.</source>
          <target state="translated">식별자 URI (Uniform Resource)를 설명 하는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> 여 클래스를 정의 고 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl&gt;</ph> 필드입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>The following code example shows how to validate an XML digital signature using the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제를 사용 하 여 XML 디지털 서명을 확인 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph> 인터페이스 및 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor">
          <source>Gets or sets the decryptor of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 개체의 decryptor를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor">
          <source>The decryptor of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 개체의 decryptor입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> object uses an <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph> interface to decrypt <ph id="ph3">`&lt;encryptedGrant&gt;`</ph> elements from the current <ph id="ph4">`&lt;license&gt;`</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> 개체에서 사용 하는 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph> 암호를 해독 하는 인터페이스 <ph id="ph3">`&lt;encryptedGrant&gt;`</ph> 요소는 현재에서 <ph id="ph4">`&lt;license&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor">
          <source>The following code example shows how to validate an XML digital signature using the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제를 사용 하 여 XML 디지털 서명을 확인 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph> 인터페이스 및 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml">
          <source>Returns an XML representation of the parameters of an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object that are suitable to be included as subelements of an XMLDSIG <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">XMLDSIG <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> 요소의 하위 요소로 포함하기에 적합한 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 개체의 매개 변수에 대한 XML 표현을 반환합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml">
          <source>A list of the XML nodes that represent the transform-specific content needed to describe the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object in an XMLDSIG <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">XMLDSIG <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> 요소의 현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 개체를 설명하기 위해 필요한 변환 관련 내용을 나타내는 XML 노드 목록입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>Returns the output of an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 개체의 출력을 반환합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput">
          <source>Returns the output of an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 개체의 출력을 반환합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput">
          <source>The output of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 개체의 출력입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput">
          <source>The type of the returned object must be <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</source>
          <target state="translated">반환된 된 개체의 형식은 이어야 <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)">
          <source>The type of the output to return.</source>
          <target state="translated">반환될 출력의 형식입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)">
          <source><ph id="ph1">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> is the only valid type for this parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> 형식만 이 매개 변수에 유효합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)">
          <source>Returns the output of an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 개체의 출력을 반환합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)">
          <source>The output of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 개체의 출력입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is not an <ph id="ph2">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> 개체가 아닌 경우</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes">
          <source>Gets an array of types that are valid inputs to the <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> method of the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> 개체의 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 메서드에 유효한 입력 형식의 배열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes">
          <source>An array of types that are valid inputs to the <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> method of the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object; you can pass only objects of one of these types to the <ph id="ph3">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> method of the current <ph id="ph4">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> 개체의 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 메서드에 유효한 입력 형식의 배열입니다. 현재 <ph id="ph3">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> 개체의 <ph id="ph4">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 메서드에는 이러한 형식 중 하나를 가진 개체만 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes">
          <source>The only valid input type to the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class is <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</source>
          <target state="translated">유효한 입력된 형식에는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> 클래스는 <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> object that encapsulates the transform to load into the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">변환을 캡슐화하여 현재 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> 개체로 로드하는 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)">
          <source>Parses the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> object as transform-specific content of a <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> element; this method is not supported because the <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object has no inner XML elements.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> 개체를 <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> 요소의 변환 관련 내용으로 구문 분석합니다. 이 메서드는 <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 개체에 내부 XML 요소가 없기 때문에 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The input to load into the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 개체로 로드할 입력입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The type of the input object must be <ph id="ph1">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph>.</source>
          <target state="translated">입력 개체의 형식은 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph>이어야 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>Loads the specified input into the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">지정된 입력을 현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 개체로 로드합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The context was not set before this transform was invoked.</source>
          <target state="translated">이 변환이 호출될 때까지 컨텍스트가 설정되지 않은 경우</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The <ph id="ph1">&lt;see langword="&amp;lt;issuer&amp;gt;" /&gt;</ph> element was not set before this transform was invoked.</source>
          <target state="translated">이 변환이 호출될 때까지 <ph id="ph1">&lt;see langword="&amp;lt;issuer&amp;gt;" /&gt;</ph> 요소가 설정되지 않은 경우</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The <ph id="ph1">&lt;see langword="&amp;lt;license&amp;gt;" /&gt;</ph> element was not set before this transform was invoked.</source>
          <target state="translated">이 변환이 호출될 때까지 <ph id="ph1">&lt;see langword="&amp;lt;license&amp;gt;" /&gt;</ph> 요소가 설정되지 않은 경우</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" /&gt;</ph> property was not set before this transform was invoked.</source>
          <target state="translated">이 변환이 호출될 때까지 <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" /&gt;</ph> 속성이 설정되지 않은 경우</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes">
          <source>Gets an array of types that are valid outputs from the <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> method of the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> 개체의 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 메서드에서 유효한 출력 형식의 배열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes">
          <source>An array of valid output types for the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object; only objects of one of these types are returned from the <ph id="ph2">&lt;see cref="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput" /&gt;</ph> methods of the current <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 개체에 유효한 출력 형식의 배열입니다. 이러한 형식 중 하나를 가진 개체만 현재 <ph id="ph2">&lt;see cref="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput" /&gt;</ph> 개체의 <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 메서드에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes">
          <source>The only valid output type to the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class is <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</source>
          <target state="translated">에 유효한 출력 형식은 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> 클래스는 <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>