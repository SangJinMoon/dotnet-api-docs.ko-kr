<Type Name="SignedXml" FullName="System.Security.Cryptography.Xml.SignedXml">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fad12a11d4f0cb6a19b319f5169ee73722eb6e0f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SignedXml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SignedXml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.SignedXml" />
  <TypeSignature Language="VB.NET" Value="Public Class SignedXml" />
  <TypeSignature Language="C++ CLI" Value="public ref class SignedXml" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5a0f0-101">XML 서명을 쉽게 만들도록 하기 위해 핵심 XML 서명 개체에 래퍼를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5a0f0-101">Provides a wrapper on a core XML signature object to facilitate creating XML signatures.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-102"><xref:System.Security.Cryptography.Xml.SignedXml> 클래스는 World Wide Web Consortium (W3C)의.NET Framework 구현은 [XML 서명 구문 및 처리 사양](http://www.w3.org/TR/xmldsig-core/)XMLDSIG (XML 디지털 서명) 라고도 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-102">The <xref:System.Security.Cryptography.Xml.SignedXml> class is the .NET Framework implementation of the World Wide Web Consortium (W3C) [XML Signature Syntax and Processing Specification](http://www.w3.org/TR/xmldsig-core/), also known as XMLDSIG (XML Digital Signature).</span></span>  <span data-ttu-id="5a0f0-103">XMLDSIG 방법은, 상호 운용 가능한 표준 방식으로 서명 하 고 전체 또는 일부 XML 문서 또는 다른 데이터 되에서 식별자 URI (Uniform Resource)에 접근할 수를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-103">XMLDSIG is a standards-based, interoperable way to sign and verify all or part of an XML document or other data that is addressable from a Uniform Resource Identifier (URI).</span></span>  
  
 <span data-ttu-id="5a0f0-104">사용 하 여는 <xref:System.Security.Cryptography.Xml.SignedXml> 표준 방식으로 서명 된 응용 프로그램이 나 조직 간에 XML 데이터를 공유 해야 할 경우에 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-104">Use the <xref:System.Security.Cryptography.Xml.SignedXml> class whenever you need to share signed XML data between applications or organizations in a standard way.</span></span>  <span data-ttu-id="5a0f0-105">이 클래스를 사용 하 여 서명 된 모든 데이터에 따라 XMLDSIG W3C 사양 구현 하 여 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-105">Any data signed using this class can be verified by any conforming implementation of the W3C specification for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-106"><xref:System.Security.Cryptography.Xml.SignedXml> 클래스를 사용 하면 다음과 같은 세 가지 유형의 XML 디지털 서명 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-106">The <xref:System.Security.Cryptography.Xml.SignedXml> class allows you to create the following three kinds of XML digital signatures:</span></span>  
  
|<span data-ttu-id="5a0f0-107">서명 유형</span><span class="sxs-lookup"><span data-stu-id="5a0f0-107">Signature Type</span></span>|<span data-ttu-id="5a0f0-108">설명</span><span class="sxs-lookup"><span data-stu-id="5a0f0-108">Description</span></span>|  
|--------------------|-----------------|  
|<span data-ttu-id="5a0f0-109">엔벌로프된 서명</span><span class="sxs-lookup"><span data-stu-id="5a0f0-109">Enveloped signature</span></span>|<span data-ttu-id="5a0f0-110">서명 중인 XML 요소 내에서 서명이 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-110">The signature is contained within the XML element being signed.</span></span>|  
|<span data-ttu-id="5a0f0-111">상위 서명</span><span class="sxs-lookup"><span data-stu-id="5a0f0-111">Enveloping signature</span></span>|<span data-ttu-id="5a0f0-112">서명된 XML 내에 포함 된 <`Signature`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-112">The signed XML is contained within the <`Signature`> element.</span></span>|  
|<span data-ttu-id="5a0f0-113">분리 된 내부 서명</span><span class="sxs-lookup"><span data-stu-id="5a0f0-113">Internal detached signature</span></span>|<span data-ttu-id="5a0f0-114">서명 및 서명 된 XML에 동일한 문서 있더라도 포함 하지 않고 다른 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-114">The signature and signed XML are in the same document, but neither element contains the other.</span></span>|  
  
 <span data-ttu-id="5a0f0-115">네 번째 종류의 서명이 때 서명을 확인 하 고 데이터는 별도 XML 문서에는 외부 분리 된 서명 이라는 이기도 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-115">There is also a fourth kind of signature called an external detached signature which is when the data and signature are in separate XML documents.</span></span> <span data-ttu-id="5a0f0-116">외부 분리 된 서명은에서 지원 되지 않습니다는 <xref:System.Security.Cryptography.Xml.SignedXml> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-116">External detached signatures are not supported by the <xref:System.Security.Cryptography.Xml.SignedXml> class.</span></span>  
  
## <a name="the-structure-of-an--xml-signature"></a><span data-ttu-id="5a0f0-117">XML 서명의 구조</span><span class="sxs-lookup"><span data-stu-id="5a0f0-117">The structure of an  XML Signature</span></span>  
 <span data-ttu-id="5a0f0-118">XMLDSIG 만듭니다는 <`Signature`> XML 문서 또는 URI에서 주소 지정 가능한 않은 기타 데이터의 디지털 서명을 포함 하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-118">XMLDSIG creates a <`Signature`> element, which contains a digital signature of an XML document or other data that is addressable from a URI.</span></span>  <span data-ttu-id="5a0f0-119"><`Signature`> 요소는 서명을 확인 하는 키를 찾을 수 있는 위치에 대 한 정보를 선택적으로 포함할 수 있습니다 및 서명에 사용 된 암호화 알고리즘입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-119">The <`Signature`> element can optionally contain information about where to find a key that will verify the signature and which cryptographic algorithm was used for signing.</span></span> <span data-ttu-id="5a0f0-120">기본 구조는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-120">The basic structure is as follows:</span></span>  
  
```xml  
  
<Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">  
    <SignedInfo>  
      <CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>  
      <SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>  
      <Reference URI="">  
        <Transforms>  
          <Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>  
        </Transforms>  
        <DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>  
        <DigestValue>Base64EncodedValue==</DigestValue>  
      </Reference>  
    </SignedInfo>  
    <SignatureValue>AnotherBase64EncodedValue===</SignatureValue>  
  </Signature>  
  
```  
  
 <span data-ttu-id="5a0f0-121">이 구조체의 주요 부분은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-121">The main parts of this structure are:</span></span>  
  
 <span data-ttu-id="5a0f0-122"><`CanonicalizationMethod`> 요소</span><span class="sxs-lookup"><span data-stu-id="5a0f0-122">The <`CanonicalizationMethod`> element</span></span>  
 <span data-ttu-id="5a0f0-123">다시 작성 하기 위한 규칙을 지정 된 `Signature` 요소는 XML/텍스트 서명 유효성 검사에 대 한 바이트에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-123">Specifies the rules for rewriting the `Signature` element from XML/text into bytes for signature validation.</span></span> <span data-ttu-id="5a0f0-124">.NET Framework의 기본값은 http://www.w3.org/TR/2001/REC-xml-c14n-20010315, 신뢰할 수 있는 알고리즘을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-124">The default value in the .NET Framework is http://www.w3.org/TR/2001/REC-xml-c14n-20010315, which identifies a trustworthy algorithm.</span></span> <span data-ttu-id="5a0f0-125">이 요소가으로 표시 되는 <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-125">This element is represented by the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="5a0f0-126"><`SignatureMethod`> 요소</span><span class="sxs-lookup"><span data-stu-id="5a0f0-126">The <`SignatureMethod`> element</span></span>  
 <span data-ttu-id="5a0f0-127">서명 생성 및 유효성 검사에 적용 된에 사용 되는 알고리즘을 지정 된 <`Signature`>의 값을 생성 하는 요소 <`SignatureValue`> 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-127">Specifies the algorithm used for signature generation and validation, which was applied to the <`Signature`> element to produce the value in <`SignatureValue`>.</span></span> <span data-ttu-id="5a0f0-128">값 위의 예에서 http://www.w3.org/2000/09/xmldsig#rsa-sha1 RSA PKCS1 sha-1 서명을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-128">In the example above, the value http://www.w3.org/2000/09/xmldsig#rsa-sha1 identifies an RSA PKCS1 SHA-1 signature.</span></span> <span data-ttu-id="5a0f0-129">이 요소가으로 표시 되는 <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-129">This element is represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property.</span></span>  
  
 <span data-ttu-id="5a0f0-130"><`SignatureValue`> 요소</span><span class="sxs-lookup"><span data-stu-id="5a0f0-130">The <`SignatureValue`> element</span></span>  
 <span data-ttu-id="5a0f0-131">에 대 한 암호화 서명을 지정 된 <`Signature`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-131">Specifies the cryptographic signature for the <`Signature`> element.</span></span> <span data-ttu-id="5a0f0-132">경우이 서명을 확인 하지 않습니다, 다음의 몇 가지 부분에서 <`Signature`> 블록 변조 및 문서가 잘못 된 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-132">If this signature does not verify, then some portion of the <`Signature`> block was tampered with, and the document is considered invalid.</span></span> <span data-ttu-id="5a0f0-133">으로 <`CanonicalizationMethod`> 값은 신뢰할 수 있는 경우이 값은 항상 안전 하 게 변조입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-133">As long as the <`CanonicalizationMethod`> value is trustworthy, this value is highly resistant to tampering.</span></span> <span data-ttu-id="5a0f0-134">이 요소가으로 표시 되는 <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-134">This element is represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property.</span></span>  
  
 <span data-ttu-id="5a0f0-135">`URI` 특성에는 <`Reference`> 요소</span><span class="sxs-lookup"><span data-stu-id="5a0f0-135">The `URI` attribute of the <`Reference`> element</span></span>  
 <span data-ttu-id="5a0f0-136">URI 참조를 사용 하 여 데이터 개체를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-136">Specifies a data object using a URI reference.</span></span> <span data-ttu-id="5a0f0-137">이 특성으로 표시 됩니다는 <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-137">This attribute is represented by the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="5a0f0-138">지정 하지 않는 `URI` 특성, 즉, 설정 된 <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=nameWithType> 속성을 `null`, 수신 응용 프로그램 개체의 id를 아는 예상 됨을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-138">Not specifying the `URI` attribute, that is, setting the  <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=nameWithType> property to `null`, means that the receiving application is expected to know the identity of the object.</span></span> <span data-ttu-id="5a0f0-139">대부분의 경우에는 `null` URI 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-139">In most cases, a `null` URI will result in an exception being thrown.</span></span> <span data-ttu-id="5a0f0-140">사용 하지 않는 한 `null` URI, 응용 프로그램에서 필요로 하는 프로토콜와 상호 운용 되는 경우가 아니면 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-140">Do not use a `null` URI, unless your application is interoperating with a protocol which requires it.</span></span>  
  
-   <span data-ttu-id="5a0f0-141">설정의 `URI` 는 문서의 루트 요소가 서명 되는 특성을 빈 문자열로 나타냅니다는 형태의 엔벌로프된 서명 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-141">Setting the `URI` attribute to an empty string indicates that the root element of the document is being signed, a form of enveloped signature.</span></span>  
  
-   <span data-ttu-id="5a0f0-142">하는 경우의 값 `URI` 특성, #로 시작 하 여 다음 값이 현재 문서에서 요소를 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-142">If the value of `URI` attribute starts with #, then the value must resolve to an element in the current document.</span></span> <span data-ttu-id="5a0f0-143">지원 되는 서명 형식 (엔벌로프된 서명, 서명 또는 분리 된 내부 서명을 상위)를 사용 하 여이 폼을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-143">This form can be used with any of the supported signature types (enveloped signature, enveloping signature or internal detached signature).</span></span>  
  
-   <span data-ttu-id="5a0f0-144">분리 하는 외부 리소스 서명 것으로 간주 됩니다 기타 및에서 지원 되지 않습니다는 <xref:System.Security.Cryptography.Xml.SignedXml> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-144">Anything else is considered an external resource detached signature and is not supported by the <xref:System.Security.Cryptography.Xml.SignedXml> class.</span></span>  
  
 <span data-ttu-id="5a0f0-145"><`Transforms`> 요소</span><span class="sxs-lookup"><span data-stu-id="5a0f0-145">The <`Transforms`> element</span></span>  
 <span data-ttu-id="5a0f0-146">정렬된 된 목록을 포함 <`Transform`> 서명자 가져오는 방법을 데이터 개체를 설명 하는 요소가 digested 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-146">Contains an ordered list of <`Transform`> elements that describe how the signer obtained the data object that was digested.</span></span> <span data-ttu-id="5a0f0-147">Transform 알고리즘은 유사한 다시 작성 하지 않고 정형화 메서드에 <`Signature`> 요소인으로 식별 된 콘텐츠가 다시 작성는 `URI` 특성의는 <`Reference`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-147">A transform algorithm is similar to the canonicalization method, but instead of rewriting the <`Signature`> element, it rewrites the content identified by the `URI` attribute of the <`Reference`> element.</span></span> <span data-ttu-id="5a0f0-148"><`Transforms`>에서 요소가 표시 되는 <xref:System.Security.Cryptography.Xml.TransformChain> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-148">The <`Transforms`> element is represented by the <xref:System.Security.Cryptography.Xml.TransformChain> class.</span></span>  
  
-   <span data-ttu-id="5a0f0-149">각 변환 알고리즘은 XML (XPath 노드 집합) 또는 (바이트)를 입력으로 사용 하도록 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-149">Each transform algorithm is defined as taking either XML (an XPath node-set) or bytes as input.</span></span> <span data-ttu-id="5a0f0-150">현재 데이터 형식을 변환 입력된 요구 사항와 다른 경우에 변환 규칙이 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-150">If the format of the current data differs from the transform input requirements, conversion rules are applied.</span></span>  
  
-   <span data-ttu-id="5a0f0-151">각 변환 알고리즘을 XML 또는 바이트 출력으로 생성 하도록 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-151">Each transform algorithm is defined as producing either XML or bytes as the output.</span></span>  
  
-   <span data-ttu-id="5a0f0-152">경우 마지막 변환 알고리즘의 출력 바이트에 정의 되지 않은 (또는 없습니다 변환을 지정 된), 정규화 메서드가 다음 http://www.w3.org/TR/2001/REC-xml-c14n-20010315 암시적 변환으로 사용 됩니다 (다른 알고리즘에 지정 된 경우에는 <`CanonicalizationMethod`> 요소)입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-152">If the output of the last transform algorithm is not defined in bytes (or no transforms were specified), then the canonicalization method http://www.w3.org/TR/2001/REC-xml-c14n-20010315 is used as an implicit transform (even if a different algorithm was specified in the <`CanonicalizationMethod`> element).</span></span>  
  
-   <span data-ttu-id="5a0f0-153">값이 http://www.w3.org/2000/09/xmldsig#enveloped-signature 알고리즘의 변환에 대 한 제거로 해석 되는 규칙을 인코딩하는 <`Signature`> 문서에서 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-153">A value of http://www.w3.org/2000/09/xmldsig#enveloped-signature for the transform algorithm encodes a rule which is interpreted as remove the <`Signature`> element from the document.</span></span> <span data-ttu-id="5a0f0-154">그렇지 않으면, 엔벌로프된 서명 확인자 서명을 포함 하 여 문서를 다이제스트는 있지만 서명자가 있는 digested 문서 서명을 적용 하기 전에 다른 답변을 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-154">Otherwise, a verifier of an enveloped signature will digest the document, including the signature, but the signer would have digested the document before the signature was applied, leading to different answers.</span></span>  
  
 <span data-ttu-id="5a0f0-155"><`DigestMethod`> 요소</span><span class="sxs-lookup"><span data-stu-id="5a0f0-155">The <`DigestMethod`> element</span></span>  
 <span data-ttu-id="5a0f0-156">로 식별 되는 변환 된 내용을 적용 하려면 다이제스트 (암호화 해시) 메서드를 식별는 `URI` 특성에는 <`Reference`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-156">Identifies the digest (cryptographic hash) method to apply on the transformed content identified by the `URI` attribute of the <`Reference`> element.</span></span> <span data-ttu-id="5a0f0-157">표시 되는 <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-157">This is represented by the <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=nameWithType> property.</span></span>  
  
## <a name="choosing-a-canonicalization-method"></a><span data-ttu-id="5a0f0-158">정형화 방법 선택</span><span class="sxs-lookup"><span data-stu-id="5a0f0-158">Choosing a canonicalization method</span></span>  
 <span data-ttu-id="5a0f0-159">다른 값을 사용 해야 하는 사양와의 상호 운용, 없는 경우 해당 값이 XML C14N 1.0 알고리즘에는.NET Framework의 기본 정형화 메서드를 사용 하는 것이 좋습니다 http://www.w3.org/TR/2001/REC-xml-c14n-20010315합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-159">Unless interoperating with a specification which requires the use of a different value, we recommend that you use the default canonicalization method in the .NET Framework which is the XML-C14N 1.0 algorithm, whose value is http://www.w3.org/TR/2001/REC-xml-c14n-20010315.</span></span> <span data-ttu-id="5a0f0-160">암시적 최종 변환을 적용 하 고 있기 때문에 특히 XML C14N 1.0 알고리즘 XMLDSIG, 모든 구현에서 지원 되는 데 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-160">The XML-C14N 1.0 algorithm is required to be supported by all implementations of XMLDSIG, particularly as it is an implicit final transform to apply.</span></span>  
  
 <span data-ttu-id="5a0f0-161">정형화 알고리즘을 유지 하는 주석을 지원의 버전이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-161">There are versions of canonicalization algorithms which support preserving comments.</span></span> <span data-ttu-id="5a0f0-162">주석 유지 정규화 메서드 "기능에 표시 서명" 원칙을 위반 하기 때문에 권장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-162">Comment-preserving canonicalization methods are not recommended because they violate the "sign what is seen" principle.</span></span> <span data-ttu-id="5a0f0-163">에 있는 설명은 코드 즉, 한 <`Signature`> 서명의 수행 하는 방법에 대 한 요소가 처리 논리를 변경 하지 것입니다, 단순히 어떤 서명 값은입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-163">That is, the comments in a <`Signature`> element will not alter the processing logic for how the signature is performed, merely what the signature value is.</span></span> <span data-ttu-id="5a0f0-164">공격자가 불필요 한 자유를 해시 충돌을 강제로 포함된 제공 되도록 주석을 사용 하는 취약 한 서명 알고리즘을 함께 사용 하면 합법적인 표시 변조 된 문서 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-164">When combined with a weak signature algorithm, allowing the comments to be included gives an attacker unnecessary freedom to force a hash collision, making a tampered document appear legitimate.</span></span>  <span data-ttu-id="5a0f0-165">.NET Framework에서 기본 제공 canonicalizers만 기본적으로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-165">In the .NET Framework, only built-in canonicalizers are supported by default.</span></span> <span data-ttu-id="5a0f0-166">참조 추가 또는 사용자 지정 canonicalizers를 지원 하기 위해는 <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-166">To support additional or custom canonicalizers, see the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> property.</span></span> <span data-ttu-id="5a0f0-167">문서에서 표시 되는 컬렉션에 없는 정규화 메서드를 사용 하는 경우는 <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> 속성을 하면 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> 메서드는 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-167">If the document uses a canonicalization method that is not in the collection represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> property, then the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will return `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5a0f0-168">매우 안전한 응용 프로그램에서 사용 하는 서명자는 필요 하지 않은 모든 값을 제거할 수는 <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-168">An extremely defensive application can remove any values it does not expect signers to use from the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> collection.</span></span>  
  
## <a name="are-the-reference-values-safe-from-tampering"></a><span data-ttu-id="5a0f0-169">참조 값 변경 위험이?</span><span class="sxs-lookup"><span data-stu-id="5a0f0-169">Are the Reference values safe from tampering?</span></span>  
 <span data-ttu-id="5a0f0-170">예,는 <`Reference`> 값은 변조 로부터 안전 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-170">Yes, the <`Reference`> values are safe from tampering.</span></span>  <span data-ttu-id="5a0f0-171">.NET framework 확인는 <`SignatureValue`> 중 하나를 처리 하기 전에 계산 된 <`Reference`> 값과 관련 된 제품 및 잠재적으로 악의적인 처리 명령을 방지 하기 위해 초기 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-171">The .NET framework verifies the <`SignatureValue`> computation before processing any of the <`Reference`> values and their associated transforms, and will abort early to avoid potentially malicious processing instructions.</span></span>  
  
## <a name="choosing-the-elements-to-sign"></a><span data-ttu-id="5a0f0-172">서명할 요소를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-172">Choosing the elements to sign</span></span>  
 <span data-ttu-id="5a0f0-173">값을 사용 하는 것이 좋습니다 ""에 대 한는 `URI` 특성 (설정 또는 <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> 속성을 빈 문자열), 가능한 경우.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-173">We recommend that you use the value of "" for the `URI` attribute (or set the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property to an empty string), if possible.</span></span> <span data-ttu-id="5a0f0-174">즉, 전체 문서 전체 문서 변조 되지 않도록 보호 되는 다이제스트 계산에 대 한 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-174">This means the whole document is considered for the digest computation, which means the whole document is protected from tampering.</span></span>  
  
 <span data-ttu-id="5a0f0-175">참조에 매우 일반적 이기 `URI` 앵커 "foo" ID 속성을 가진 요소를 가리키는 #foo 같은 형식의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-175">It is very common to see `URI` values in the form of anchors such as #foo, referring to an element whose ID attribute is "foo".</span></span> <span data-ttu-id="5a0f0-176">그러나이 컨텍스트가 아닌 대상 요소의 내용만 포함 되므로 변조할 수에 대 한 쉽습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-176">Unfortunately, it is easy for this to be tampered with because this includes only the content of the target element, not the context.</span></span> <span data-ttu-id="5a0f0-177">이 차이 아무나 XML 서명 래핑 (XSW)로 알려져 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-177">Abusing this distinction is known as XML Signature Wrapping (XSW).</span></span>  
  
 <span data-ttu-id="5a0f0-178">응용 프로그램에서는 있다고 간주 의미 체계 되도록 주석 (있는 경우에 일반적으로 해당 되지 처리 하는 XML) 하는 경우 사용 해야 합니다 "#xpointer(/)" 대신 "", "#foo" 대신 "#xpointer(id('foo'))" 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-178">If your application considers comments to be semantic (which is not common when dealing with XML), then you should use "#xpointer(/)" instead of "", and "#xpointer(id('foo'))" instead of "#foo".</span></span> <span data-ttu-id="5a0f0-179">#Xpointer 버전 shortname 양식 설명을 제외 하 고는 동안 주석을 포함 한로 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-179">The #xpointer versions are interpreted as including comments, while the shortname forms are excluding comments.</span></span>  
  
 <span data-ttu-id="5a0f0-180">부분적 으로만 보호 되는 문서를 수락 해야 하 고 동일한 콘텐츠를 읽을 수 있도록 하려는 경우 서명을 보호를 사용 하 여는 <xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-180">If you need to accept documents which are only partially protected and you want to ensure that you are reading the same content that the signature protected, use the <xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A> method.</span></span>  
  
## <a name="security-considerations-about-the-keyinfo-element"></a><span data-ttu-id="5a0f0-181">KeyInfo 요소에 대 한 보안 고려 사항</span><span class="sxs-lookup"><span data-stu-id="5a0f0-181">Security considerations about the KeyInfo element</span></span>  
 <span data-ttu-id="5a0f0-182">데이터 선택 사항인 <`KeyInfo`> 요소 (즉,는 <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> 속성)을, 서명의 유효성을 검사 하는 키를 포함 하는 트러스트 해서는 안 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-182">The data in the optional <`KeyInfo`> element (that is, the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> property), which contains a key to validate the signature,  should not be trusted.</span></span>  
  
 <span data-ttu-id="5a0f0-183">특히 때에서는 <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> 완전 RSA, DSA 또는 ECDSA 공개 키를 나타내는 값, 문서와 변조 수 불구 하 고는 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> 메서드 서명이 유효한 지를 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-183">In particular, when the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> value represents a bare RSA, DSA or ECDSA public key,  the document could have been tampered with, despite the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method reporting that the signature is valid.</span></span>  <span data-ttu-id="5a0f0-184">이 변조만 수행 하는 엔터티에 포함 된 새 키를 생성 하 고 다시 해당 새 키가 있는 변조 된 문서를 서명 때문에 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-184">This can happen because the entity doing the tampering just has to generate a new key and re-sign the tampered document with that new key.</span></span> <span data-ttu-id="5a0f0-185">따라서 응용 프로그램를 공개 키가 필요한 값을 확인 하지 않는 한 손상 된 경우에 따라 문서 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-185">So, unless your application verifies that the public key is an expected value, the document should be treated as if it were tampered with.</span></span> <span data-ttu-id="5a0f0-186">이렇게 하려면 응용 프로그램이 문서 내에 포함 된 공개 키를 검사 하 고 문서 컨텍스트에 대 한 알려진된 값의 목록에 대해 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-186">This requires that your application examine the public key embedded within the document and verify it against a list of known values for the document context.</span></span> <span data-ttu-id="5a0f0-187">예를 들어 문서 수 알려진된 사용자가 발급할 인식 되어야 하는 경우 해당 사용자가 사용 되는 알려진된 키의 목록에 대해 키 되었으면 체크 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-187">For example, if the document could be understood to be issued by a known user, you'd check the key against a list of known keys used by that user.</span></span>  
  
 <span data-ttu-id="5a0f0-188">키를 사용 하 여 문서를 처리 한 후 확인할 수 있습니다는 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> 메서드를 사용 하는 대신는 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-188">You can also verify the key after processing the document by using the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> method, instead of using the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method.</span></span> <span data-ttu-id="5a0f0-189">하지만 보안을 최적화에 대 한 키를 미리 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-189">But, for the optimal security, you should verify the key beforehand.</span></span>  
  
 <span data-ttu-id="5a0f0-190">또는 공개 키, 등록 된 사용자의 시도 하는 것이 좋습니다. 대신에 포함 된 내용 읽기는 <`KeyInfo`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-190">Alternately, consider trying the user's registered public keys, rather than reading what's in the <`KeyInfo`> element.</span></span>  
  
## <a name="security-considerations-about-the-x509data-element"></a><span data-ttu-id="5a0f0-191">X509Data 요소에 대 한 보안 고려 사항</span><span class="sxs-lookup"><span data-stu-id="5a0f0-191">Security considerations about the X509Data element</span></span>  
 <span data-ttu-id="5a0f0-192">선택적 <`X509Data`>의 자식인 요소는 <`KeyInfo`> 요소 하나 이상의 X509를 포함 하 고 인증서 또는 X509에 대 한 식별자 인증서.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-192">The optional <`X509Data`> element is a child of the <`KeyInfo`> element and contains one or more X509 certificates or identifiers for X509 certificates.</span></span> <span data-ttu-id="5a0f0-193">데이터는 <`X509Data`> 요소 또한 기본적으로 트러스트 해서는 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-193">The data in the <`X509Data`> element should also not be inherently trusted.</span></span>  
  
 <span data-ttu-id="5a0f0-194">포함 된 문서를 확인 하는 동안 <`X509Data`> 요소를.NET Framework 확인만 데이터 X509 되는지 인증서 유효성을 검사 하 여 문서 서명을 해당 공개 키를 성공적으로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-194">When verifying a document with the embedded <`X509Data`> element, the .NET Framework verifies only that the data resolves to an X509 certificate whose public key can be successfully used to validate the document signature.</span></span> <span data-ttu-id="5a0f0-195">호출 달리는 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> 메서드는 `verifySignatureOnly` 매개 변수 설정 `false`및 체인 트러스트 되지 않은 옵션을 선택 하 고 만료 없이 확인 해지 검사가 수행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-195">Unlike calling the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method with the `verifySignatureOnly` parameter set to `false`, no revocation check is performed, no chain trust is checked, and no expiration is verified.</span></span> <span data-ttu-id="5a0f0-196">응용 프로그램 자체 인증서를 추출 하 고에 전달 하는 경우에는 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> 사용 하 여 메서드는 `verifySignatureOnly` 매개 변수 설정 `false`즉, 문서 변조 되지 않도록 하려면 한 충분 한 유효성 검사를 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-196">Even if your application extracts the certificate itself and passes it to the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method with the `verifySignatureOnly` parameter set to `false`, that is still not sufficient validation to prevent document tampering.</span></span> <span data-ttu-id="5a0f0-197">인증서를 여전히 서명 중인 문서에 대 한 적절 한 것으로 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-197">The certificate still needs to be verified as being appropriate for the document being signed.</span></span>  
  
 <span data-ttu-id="5a0f0-198">포함 된 서명 인증서를 사용 하 여 유용한 키 회전 전략을 여부 제공할 수에 <`X509Data`> 섹션 또는 문서 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-198">Using an embedded signing certificate can provide useful key rotation strategies, whether in the <`X509Data`> section or in the document content.</span></span> <span data-ttu-id="5a0f0-199">이 방법을 사용 하면 응용 프로그램에서 인증서를 수동으로 추출 해야와 비슷한 유효성 검사를 수행:</span><span class="sxs-lookup"><span data-stu-id="5a0f0-199">When using this approach an application should extract the certificate manually and perform validation similar to:</span></span>  
  
-   <span data-ttu-id="5a0f0-200">인증서가 발급 체인을 통해 직접 또는으로 CA (인증 기관) 공용 인증서 응용 프로그램에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-200">The certificate was issued directly or via a chain by a Certificate Authority (CA) whose public certificate is embedded in the application.</span></span>  
  
     <span data-ttu-id="5a0f0-201">에 변조 방지 하기에 충분 하지 않은 알려진된 주체 이름과 같은 추가 검사 하지 않고 운영 체제에서 제공한 트러스트 목록을 사용 하 여 <xref:System.Security.Cryptography.Xml.SignedXml>합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-201">Using the OS-provided trust list without additional checks, such as a known subject name, is not sufficient to prevent tampering in <xref:System.Security.Cryptography.Xml.SignedXml>.</span></span>  
  
-   <span data-ttu-id="5a0f0-202">문서 서명 시 만료 되지 않은 확인 된 인증서 (또는 "현재"에 대 한 실시간 문서 처리 근처).</span><span class="sxs-lookup"><span data-stu-id="5a0f0-202">The certificate is verified to have not been expired at the time of document signing (or "now" for near real-time document processing).</span></span>  
  
-   <span data-ttu-id="5a0f0-203">해지를 지 원하는 CA에서 발급 한 인증서의 수명이 긴 경우 인증서가 해지 되지 않은 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-203">For long-lived certificates issued by a CA which supports revocation, verify the certificate was not revoked.</span></span>  
  
-   <span data-ttu-id="5a0f0-204">인증서 주체는 현재 문서에 적합 한 것으로 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-204">The certificate subject is verified as being appropriate to the current document.</span></span>  
  
## <a name="choosing-the-transform-algorithm"></a><span data-ttu-id="5a0f0-205">변환 알고리즘 선택</span><span class="sxs-lookup"><span data-stu-id="5a0f0-205">Choosing the transform algorithm</span></span>  
 <span data-ttu-id="5a0f0-206">지정 된 특정 값 (예: XrML)가 있는 사양으로 작용할 사양에 따라 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-206">If you are interoperating with a specification which has dictated specific values (such as XrML), then you need to follow the specification.</span></span>  <span data-ttu-id="5a0f0-207">엔벌로프된 서명이 있는 경우 (예를 들어 전체 문서에 서명)를 사용 해야 합니다 http://www.w3.org/2000/09/xmldsig#enveloped-signature (나타내는 <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> 클래스).</span><span class="sxs-lookup"><span data-stu-id="5a0f0-207">If you have an enveloped signature (such as when signing the whole document), then you need to use http://www.w3.org/2000/09/xmldsig#enveloped-signature (represented by the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class).</span></span> <span data-ttu-id="5a0f0-208">암시적 XML C14N 변환도 지정할 수 있지만 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-208">You can specify the implicit XML-C14N transform as well, but it's not necessary.</span></span>  <span data-ttu-id="5a0f0-209">에 엔벌로핑 또는 분리 된 서명이 없는 변환이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-209">For an enveloping or detached signature, no transforms are required.</span></span> <span data-ttu-id="5a0f0-210">암시적 XML C14N 변환 하는 모든 담당합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-210">The implicit XML-C14N transform takes care of everything.</span></span>  
  
 <span data-ttu-id="5a0f0-211">업데이트에 보안을 사용으로 인해는 [Microsoft 보안 공지 MS16-035](https://technet.microsoft.com/en-us/library/security/ms16-035.aspx),.NET Framework가 변환 되는 수를 제한 발생하는신뢰할수없는변환을사용하여기본적으로문서확인에사용되는<xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>항상 반환 하도록 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-211">With the security updated introduced by the [Microsoft Security Bulletin MS16-035](https://technet.microsoft.com/en-us/library/security/ms16-035.aspx), the .NET Framework has restricted what transforms can be used in document verification by default, with untrusted transforms causing <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> to always return `false`.</span></span> <span data-ttu-id="5a0f0-212">특히, 변환 (XML에서 자식 요소로 지정 됨) 하는 추가 입력이 필요 하는 더 이상 악의적인 사용자가 자신의 한 장애의 영향력 남용의 때문 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-212">In particular, transforms which require additional input (specified as child elements in the XML) are no longer allowed due to their susceptibility of abuse by malicious users.</span></span> <span data-ttu-id="5a0f0-213">W3C 있다는 두 가지 주요 변환이 이러한 제한의 영향을 받는 인 XPath 및 XSLT 변환을 방지 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-213">The W3C advises avoiding the XPath and XSLT transforms, which are the two main transforms affected by these restrictions.</span></span>  
  
## <a name="the-problem-with-external-references"></a><span data-ttu-id="5a0f0-214">외부 참조 관련 문제</span><span class="sxs-lookup"><span data-stu-id="5a0f0-214">The problem with external references</span></span>  
 <span data-ttu-id="5a0f0-215">응용 프로그램 외부 참조 현재 컨텍스트에 대 한 적절 한 것 처럼 보일를 확인 하지 않는 경우 이러한 악용 될 수 있습니다 (서비스 거부 된 리플렉션 서비스 거부, 정보를 포함 하는 많은 보안 취약점에 대해 제공 하는 방식 공개, 서명 바이패스 및 원격 코드 실행).</span><span class="sxs-lookup"><span data-stu-id="5a0f0-215">If an application does not verify that external references seem appropriate for the current context, they can be abused in ways that provide for many security vulnerabilities (including Denial of Service, Distributed Reflection Denial of Service, Information Disclosure, Signature Bypass, and Remote Code Execution).</span></span> <span data-ttu-id="5a0f0-216">두 번 로드 되는 리소스의 문제가 남습니다 응용 프로그램 된을 외부 참조 URI의 유효성을 검사 하는 경우에:와 응용 프로그램을 읽을 때 한 번씩 때 <xref:System.Security.Cryptography.Xml.SignedXml> 읽고 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-216">Even if an application were to validate the external reference URI, there would remain a problem of the resource being loaded twice: once when your application reads it, and once when <xref:System.Security.Cryptography.Xml.SignedXml> reads it.</span></span> <span data-ttu-id="5a0f0-217">응용 프로그램 읽기 및 문서 확인 단계는 동일한 콘텐츠를 포함 하도록 보장 되지 않으므로 서명을 신뢰할 수 있는지를 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-217">Since there’s no guarantee that the application read and document verify steps have the same content, the signature does not provide trustworthiness.</span></span>  
  
 <span data-ttu-id="5a0f0-218">외부 참조의 위험 <xref:System.Security.Cryptography.Xml.SignedXml> 외부 참조가 발견 되 면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-218">Given the risks of external references, <xref:System.Security.Cryptography.Xml.SignedXml> will throw an exception when an external reference is encountered.</span></span>  <span data-ttu-id="5a0f0-219">이 문제에 대 한 자세한 내용은 참조 [기술 자료 문서 3148821](https://support.microsoft.com/en-us/kb/3148821)합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-219">For more information about this issue, see [KB article 3148821](https://support.microsoft.com/en-us/kb/3148821).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a0f0-220">다음 코드 예제에는 서명 하 고 엔벌로프된 서명을 사용 하 여 전체 XML 문서를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-220">The following code example shows how to sign and verify an entire XML document using an enveloped signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 <span data-ttu-id="5a0f0-221">다음 코드 예제에는 서명 및 엔벌로핑 서명을 사용 하 여 XML 문서의 단일 요소를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-221">The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-222">
            <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-222">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-223">
            <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-223">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5a0f0-224">다음 코드 예제에는 서명 하 고 엔벌로프된 서명을 사용 하 여 전체 XML 문서를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-224">The following code example shows how to sign and verify an entire XML document using an enveloped signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 <span data-ttu-id="5a0f0-225">다음 코드 예제에는 서명 하 고 분리 된 서명을 사용 하 여 식별자 URI (Uniform Resource) 주소 지정 가능 개체를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-225">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 <span data-ttu-id="5a0f0-226">다음 코드 예제에는 서명 및 엔벌로핑 서명을 사용 하 여 XML 문서의 단일 요소를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-226">The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml (System.Xml.XmlDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (document As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml(System::Xml::XmlDocument ^ document);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="5a0f0-227">
            <see cref="T:System.Xml.XmlDocument" />의 새 인스턴스를 초기화하는 데 사용할 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-227">The <see cref="T:System.Xml.XmlDocument" /> object to use to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a0f0-228">지정된 XML 문서에서 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-228">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> class from the specified XML document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5a0f0-229">다음 코드 예제에는 서명 하 고 엔벌로프된 서명을 사용 하 여 전체 XML 문서를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-229">The following code example shows how to sign and verify an entire XML document using an enveloped signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 <span data-ttu-id="5a0f0-230">다음 코드 예제에는 서명 하 고 분리 된 서명을 사용 하 여 식별자 URI (Uniform Resource) 주소 지정 가능 개체를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-230">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 <span data-ttu-id="5a0f0-231">다음 코드 예제에는 서명 및 엔벌로핑 서명을 사용 하 여 XML 문서의 단일 요소를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-231">The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5a0f0-232">
            <paramref name="document" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-232">The <paramref name="document" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5a0f0-233">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-233">-or-</span>
          </span>
          <span data-ttu-id="5a0f0-234">
            <paramref name="document" /> 매개 변수에 null <see cref="P:System.Xml.XmlDocument.DocumentElement" /> 속성이 포함된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-234">The <paramref name="document" /> parameter contains a null <see cref="P:System.Xml.XmlDocument.DocumentElement" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml (System.Xml.XmlElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elem As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml(System::Xml::XmlElement ^ elem);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elem" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="elem">
          <span data-ttu-id="5a0f0-235">
            <see cref="T:System.Xml.XmlElement" />의 새 인스턴스를 초기화하는 데 사용할 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-235">The <see cref="T:System.Xml.XmlElement" /> object to use to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a0f0-236">지정된 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체에서 <see cref="T:System.Xml.XmlElement" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-236">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> class from the specified <see cref="T:System.Xml.XmlElement" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5a0f0-237">
            <paramref name="elem" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-237">The <paramref name="elem" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public void AddObject (System.Security.Cryptography.Xml.DataObject dataObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddObject(class System.Security.Cryptography.Xml.DataObject dataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddObject(System::Security::Cryptography::Xml::DataObject ^ dataObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataObject" Type="System.Security.Cryptography.Xml.DataObject" />
      </Parameters>
      <Docs>
        <param name="dataObject">
          <span data-ttu-id="5a0f0-238">서명할 개체 목록에 추가할 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-238">The <see cref="T:System.Security.Cryptography.Xml.DataObject" /> object to add to the list of objects to be signed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a0f0-239">서명할 개체 목록에 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 개체를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-239">Adds a <see cref="T:System.Security.Cryptography.Xml.DataObject" /> object to the list of objects to be signed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-240"><xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> 메서드 추가 <`Object`> 로그인 할 수 있는 개체를 나타내는 요소는 <`Signature`> 요소의 XML 디지털 서명 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-240">The <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> method adds an <`Object`> element that represents an object to be signed to the <`Signature`> element of an XML digital signature.</span></span>  
  
 <span data-ttu-id="5a0f0-241"><xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> 메서드를 내부적으로 호출는 <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> 의 메서드는 <xref:System.Security.Cryptography.Xml.Signature> 개체에 의해 캡슐화는 <xref:System.Security.Cryptography.Xml.SignedXml> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-241">The <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> method internally calls the <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> method of the <xref:System.Security.Cryptography.Xml.Signature> object encapsulated by the <xref:System.Security.Cryptography.Xml.SignedXml> object.</span></span>  <span data-ttu-id="5a0f0-242">추가할 수도 있습니다는 <xref:System.Security.Cryptography.Xml.DataObject> 직접 호출 하 여 개체는 <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> 에서 메서드는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-242">You can also add a <xref:System.Security.Cryptography.Xml.DataObject> object by directly calling the <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> method from the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property.</span></span>  
  
 <span data-ttu-id="5a0f0-243">XML 디지털 서명 하는 방법에 대 한 자세한 내용은 www.w3.org/TR/xmldsig-core/ //go.microsoft.com/fwlink/ XMLDSIG 사양을 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-243">For more information about XML digital signatures, see the XMLDSIG specification available at www.w3.org/TR/xmldsig-core/.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a0f0-244">다음 코드 예제에서는 계산 및 XML 서명 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-244">The following code example computes and XML signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/CPP/example.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/CS/example.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddReference">
      <MemberSignature Language="C#" Value="public void AddReference (System.Security.Cryptography.Xml.Reference reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReference(class System.Security.Cryptography.Xml.Reference reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReference(System::Security::Cryptography::Xml::Reference ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Security.Cryptography.Xml.Reference" />
      </Parameters>
      <Docs>
        <param name="reference">
          <span data-ttu-id="5a0f0-245">XML 디지털 서명을 만드는 데 사용할 다이제스트 메서드, 다이제스트 값 및 변환을 설명하는 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-245">The  <see cref="T:System.Security.Cryptography.Xml.Reference" /> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a0f0-246">
            <see cref="T:System.Security.Cryptography.Xml.Reference" /> 개체를 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체에 추가하여 XML 디지털 서명을 만드는 데 사용할 다이제스트 메서드, 다이제스트 값 및 변환을 설명합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-246">Adds a <see cref="T:System.Security.Cryptography.Xml.Reference" /> object to the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-247"><xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> 메서드 추가 <`Reference`> 요소에는 <xref:System.Security.Cryptography.Xml.SignedXml> 다이제스트 방법, 다이제스트 값 및 XML 디지털 서명을 만드는 데 사용할 변환을 설명 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-247">The <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> method adds a <`Reference`> element to the <xref:System.Security.Cryptography.Xml.SignedXml> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.</span></span>  <span data-ttu-id="5a0f0-248"><`Reference`> 요소는 하위 요소는 <`SignedInfo`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-248">The <`Reference`> element is a subelement of the <`SignedInfo`> element.</span></span>  
  
 <span data-ttu-id="5a0f0-249"><xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> 메서드를 내부적으로 호출는 <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> 의 메서드는 <xref:System.Security.Cryptography.Xml.SignedInfo> 개체에 의해 캡슐화는 <xref:System.Security.Cryptography.Xml.SignedXml> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-249">The <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> method internally calls the <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> method of the <xref:System.Security.Cryptography.Xml.SignedInfo> object encapsulated by the <xref:System.Security.Cryptography.Xml.SignedXml> object.</span></span>  <span data-ttu-id="5a0f0-250">추가할 수도 있습니다는 <xref:System.Security.Cryptography.Xml.Reference> 직접 호출 하 여 개체는 <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> 에서 메서드는 <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-250">You can also add a <xref:System.Security.Cryptography.Xml.Reference> object by directly calling the <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> method from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.</span></span>  
  
 <span data-ttu-id="5a0f0-251">XML 디지털 서명 하는 방법에 대 한 자세한 내용은 www.w3.org/TR/xmldsig-core/ //go.microsoft.com/fwlink/ XMLDSIG 사양을 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-251">For more information about XML digital signatures, see the XMLDSIG specification available at www.w3.org/TR/xmldsig-core/.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a0f0-252">다음 코드 예제에는 서명 하 고 엔벌로프된 서명을 사용 하 여 전체 XML 문서를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-252">The following code example shows how to sign and verify an entire XML document using an enveloped signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 <span data-ttu-id="5a0f0-253">다음 코드 예제에는 서명 하 고 분리 된 서명을 사용 하 여 식별자 URI (Uniform Resource) 주소 지정 가능 개체를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-253">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 <span data-ttu-id="5a0f0-254">다음 코드 예제에는 서명 및 엔벌로핑 서명을 사용 하 여 XML 문서의 단일 요소를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-254">The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-255">
            <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 속성이 확인하는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-255">Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-256">
            <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 속성이 서명에 공개 키 사용을 확인하는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-256">Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies using the public key in the signature.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a0f0-257">
            <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 속성이 확인하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-257">
              <see langword="true" /> if the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-258">이 메서드는 또한 서명의 값 및 참조에 대 한 다이제스트를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-258">This method also computes the digest of the references and the value of the signature.</span></span>  
  
 <span data-ttu-id="5a0f0-259">XML 문서는 X.509 서명으로 서명 된 경우는 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> 메서드 확인 작업에 적합 한 인증서에 대 한 "AddressBook" 저장소를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-259">If an XML document was signed with an X.509 signature, the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will search the "AddressBook" store for certificates suitable for the verification.</span></span> <span data-ttu-id="5a0f0-260">예를 들어, 인증서에서 SKI 주체 키 식별자 ()를 참조 하는 경우는 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> 메서드를 선택한 사용해 보십시오. 한 번에 하나씩까지 인증서를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-260">For example, if the certificate is referenced by a Subject Key Identifier (SKI), the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will select certificates with this SKI and try them one after another until it can verify the certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a0f0-261">다음 코드 예제에는 서명 하 고 엔벌로프된 서명을 사용 하 여 전체 XML 문서를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-261">The following code example shows how to sign and verify an entire XML document using an enveloped signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 <span data-ttu-id="5a0f0-262">다음 코드 예제에는 서명 하 고 분리 된 서명을 사용 하 여 식별자 URI (Uniform Resource) 주소 지정 가능 개체를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-262">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 <span data-ttu-id="5a0f0-263">다음 코드 예제에는 서명 및 엔벌로핑 서명을 사용 하 여 XML 문서의 단일 요소를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-263">The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5a0f0-264">서명에서 공개 키의 <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> 속성이 <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> 속성과 일치하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-264">The <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> property of the public key in the signature does not match the <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> property.</span>
          </span>
          <span data-ttu-id="5a0f0-265">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-265">-or-</span>
          </span>
          <span data-ttu-id="5a0f0-266">서명 설명을 만들 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-266">The signature description could not be created.</span>
          </span>
          <span data-ttu-id="5a0f0-267">-또는-</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-267">-or</span>
          </span>
          <span data-ttu-id="5a0f0-268">해시 알고리즘을 만들 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-268">The hash algorithm could not be created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.AsymmetricAlgorithm key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.AsymmetricAlgorithm key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (key As AsymmetricAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::AsymmetricAlgorithm ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="5a0f0-269">
            <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 속성을 확인하는 데 사용할 키를 보유하는 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 속성을 구현한 것입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-269">The implementation of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> property that holds the key to be used to verify the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a0f0-270">
            <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 속성이 지정된 키를 확인하는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-270">Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies for the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a0f0-271">
            <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 속성이 지정된 키를 확인하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-271">
              <see langword="true" /> if the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies for the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5a0f0-272">다음 코드 예제에는 서명 하 고 분리 된 서명을 사용 하 여 식별자 URI (Uniform Resource) 주소 지정 가능 개체를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-272">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 <span data-ttu-id="5a0f0-273">다음 코드 예제에는 서명 하 고 엔벌로프된 서명을 사용 하 여 전체 XML 문서를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-273">The following code example shows how to sign and verify an entire XML document using an enveloped signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5a0f0-274">
            <paramref name="key" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-274">The <paramref name="key" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5a0f0-275">
            <paramref name="key" /> 매개 변수의 <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> 속성이 <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> 속성과 일치하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-275">The <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> property of the <paramref name="key" /> parameter does not match the <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> property.</span>
          </span>
          <span data-ttu-id="5a0f0-276">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-276">-or-</span>
          </span>
          <span data-ttu-id="5a0f0-277">서명 설명을 만들 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-277">The signature description could not be created.</span>
          </span>
          <span data-ttu-id="5a0f0-278">-또는-</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-278">-or</span>
          </span>
          <span data-ttu-id="5a0f0-279">해시 알고리즘을 만들 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-279">The hash algorithm could not be created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.KeyedHashAlgorithm macAlg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (macAlg As KeyedHashAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::KeyedHashAlgorithm ^ macAlg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="macAlg" Type="System.Security.Cryptography.KeyedHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="macAlg">
          <span data-ttu-id="5a0f0-280">
            <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 속성을 확인하는 데 사용할 MAC를 보유하는 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />을 구현한 것입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-280">The implementation of <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> that holds the MAC to be used to verify the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a0f0-281">
            <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 속성이 지정된 MAC(메시지 인증 코드) 알고리즘을 확인하는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-281">Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies for the specified message authentication code (MAC) algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a0f0-282">
            <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 속성이 지정된 MAC를 확인하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-282">
              <see langword="true" /> if the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies for the specified MAC; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5a0f0-283">다음 코드 예제에는 서명 하 고 분리 된 서명을 사용 하 여 식별자 URI (Uniform Resource) 주소 지정 가능 개체를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-283">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CPP/xmldsigdetachedkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CS/xmldsigdetachedkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/VB/xmldsigdetachedkeyedhashalg.vb#1)]  
  
 <span data-ttu-id="5a0f0-284">다음 코드 예제에서는 서명 및 엔벌로핑 서명을 사용 하 여 전체 XML 문서를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-284">The following code example shows how to sign and verify an entire XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CPP/xmldsigenvkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CS/xmldsigenvkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/VB/xmldsigenvkeyedhashalg.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5a0f0-285">
            <paramref name="macAlg" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-285">The <paramref name="macAlg" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5a0f0-286">지정된 <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> 개체의 <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 속성이 유효하지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-286">The <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> property of the specified <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> object is not valid.</span>
          </span>
          <span data-ttu-id="5a0f0-287">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-287">-or-</span>
          </span>
          <span data-ttu-id="5a0f0-288">
            <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 속성은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-288">The <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5a0f0-289">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-289">-or-</span>
          </span>
          <span data-ttu-id="5a0f0-290">서명을 검사하는 데 사용되는 암호화 변환을 만들 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-290">The cryptographic transform used to check the signature could not be created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (certificate As X509Certificate2, verifySignatureOnly As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, bool verifySignatureOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="certificate">
          <span data-ttu-id="5a0f0-291">
            <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 속성을 확인하는 데 사용할 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-291">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object to use to verify the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property.</span>
          </span>
        </param>
        <param name="verifySignatureOnly">
          <span data-ttu-id="5a0f0-292">서명만 확인하면 <see langword="true" />이고, 서명과 인증서를 모두 확인하면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-292">
              <see langword="true" /> to verify the signature only; <see langword="false" /> to verify both the signature and certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a0f0-293">
            <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 속성이 지정된 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 개체를 확인하는지 여부를 결정하고, 선택적으로 인증서가 유효한지 여부도 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-293">Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies for the specified <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object and, optionally, whether the certificate is valid.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a0f0-294">서명이 유효한 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-294">
              <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5a0f0-295">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-295">-or-</span>
          </span>
          <span data-ttu-id="5a0f0-296">서명과 인증서가 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-296">
              <see langword="true" /> if the signature and certificate are valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-297">.NET Framework 버전 1.1에서는 X.509 인증서 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-297">In version 1.1 of the .NET Framework, the X.509 certificate is not verified.</span></span>  <span data-ttu-id="5a0f0-298">버전 2.0 이상에서 X.509 인증서가 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-298">In version 2.0 and later, the X.509 certificate is verified.</span></span>  
  
 <span data-ttu-id="5a0f0-299">버전의.NET Framework 2.0 이상에서 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> 메서드 확인 작업에 적합 한 인증서에 대 한 "AddressBook" 저장소를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-299">In version 2.0 and later of the .NET Framework, the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will search the "AddressBook" store for certificates suitable for the verification.</span></span> <span data-ttu-id="5a0f0-300">예를 들어, 인증서에서 SKI 주체 키 식별자 ()를 참조 하는 경우는 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> 메서드를 선택한 사용해 보십시오. 한 번에 하나씩까지 인증서를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-300">For example, if the certificate is referenced by a Subject Key Identifier (SKI), the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will select certificates with this SKI and try them one after another until it can verify the certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a0f0-301">다음 코드 예제에서는 인증서 저장소에서 X.509 인증서를 사용 하 여 서명 하 고 XML 문서를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-301">The following code example uses an X.509 certificate from a certificate store to sign and verify an XML document.</span></span>  
  
 [!code-csharp[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/samples/snippets/csharp/VS_Snippets_CLR/Security.Cryptography.Xml.SignedXml.CheckSignature/cs/sample.cs#1)]
 [!code-vb[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Security.Cryptography.Xml.SignedXml.CheckSignature/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5a0f0-302">
            <paramref name="certificate" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-302">The <paramref name="certificate" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5a0f0-303">
            <paramref name="certificate" /> 매개 변수에 대한 서명 설명을 만들 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-303">A signature description could not be created for the <paramref name="certificate" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignatureReturningKey">
      <MemberSignature Language="C#" Value="public bool CheckSignatureReturningKey (out System.Security.Cryptography.AsymmetricAlgorithm signingKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignatureReturningKey([out] class System.Security.Cryptography.AsymmetricAlgorithm&amp; signingKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignatureReturningKey (ByRef signingKey As AsymmetricAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignatureReturningKey([Runtime::InteropServices::Out] System::Security::Cryptography::AsymmetricAlgorithm ^ % signingKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signingKey" Type="System.Security.Cryptography.AsymmetricAlgorithm&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="signingKey">
          <span data-ttu-id="5a0f0-304">이 메서드가 반환되면 서명의 공개 키를 보유하는 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />의 구현을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-304">When this method returns, contains the implementation of <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> that holds the public key in the signature.</span>
          </span>
          <span data-ttu-id="5a0f0-305">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-305">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a0f0-306">
            <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 속성이 서명에 공개 키 사용을 확인하는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-306">Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies using the public key in the signature.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a0f0-307">
            <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 속성이 서명에서 공개 키 사용을 확인하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-307">
              <see langword="true" /> if the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies using the public key in the signature; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5a0f0-308">다음 코드 예제에는 서명 하 고 분리 된 서명을 사용 하 여 식별자 URI (Uniform Resource) 주소 지정 가능 개체를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-308">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/VB/exampledetached.vb#1)]  
  
 <span data-ttu-id="5a0f0-309">다음 코드 예제에서는 서명 및 엔벌로핑 서명을 사용 하 여 전체 XML 문서를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-309">The following code example shows how to sign and verify an entire XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/VB/exampleenvelope.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5a0f0-310">
            <paramref name="signingKey" /> 매개 변수가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-310">The <paramref name="signingKey" /> parameter is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5a0f0-311">서명에서 공개 키의 <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> 속성이 <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> 속성과 일치하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-311">The <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> property of the public key in the signature does not match the <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> property.</span>
          </span>
          <span data-ttu-id="5a0f0-312">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-312">-or-</span>
          </span>
          <span data-ttu-id="5a0f0-313">서명 설명을 만들 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-313">The signature description could not be created.</span>
          </span>
          <span data-ttu-id="5a0f0-314">-또는-</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-314">-or</span>
          </span>
          <span data-ttu-id="5a0f0-315">해시 알고리즘을 만들 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-315">The hash algorithm could not be created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputeSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-316">XML 디지털 서명을 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-316">Computes an XML digital signature.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-317">XML 디지털 서명을 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-317">Computes an XML digital signature.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-318"><xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> 메서드가 XML 디지털 서명을 생성 되 고 필요한 XML 요소를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-318">The <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method creates an XML digital signature and constructs many of the XML elements needed.</span></span>  
  
 <span data-ttu-id="5a0f0-319">서명할 데이터를 설정 해야 하며 <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> 이 메서드를 호출 하기 전에 속성.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-319">You must set the data to be signed and the <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> property before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a0f0-320">다음 코드 예제에는 서명 하 고 분리 된 서명을 사용 하 여 식별자 URI (Uniform Resource) 주소 지정 가능 개체를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-320">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 <span data-ttu-id="5a0f0-321">다음 코드 예제에서는 서명 및 엔벌로핑 서명을 사용 하 여 전체 XML 문서를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-321">The following code example shows how to sign and verify an entire XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5a0f0-322">
            <see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> 속성은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-322">The <see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> property is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5a0f0-323">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-323">-or-</span>
          </span>
          <span data-ttu-id="5a0f0-324">
            <see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> 속성이 <see cref="T:System.Security.Cryptography.DSA" /> 개체나 <see cref="T:System.Security.Cryptography.RSA" /> 개체가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-324">The <see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> property is not a <see cref="T:System.Security.Cryptography.DSA" /> object or <see cref="T:System.Security.Cryptography.RSA" /> object.</span>
          </span>
          <span data-ttu-id="5a0f0-325">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-325">-or-</span>
          </span>
          <span data-ttu-id="5a0f0-326">키를 로드할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-326">The key could not be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature(class System.Security.Cryptography.KeyedHashAlgorithm macAlg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature (macAlg As KeyedHashAlgorithm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature(System::Security::Cryptography::KeyedHashAlgorithm ^ macAlg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="macAlg" Type="System.Security.Cryptography.KeyedHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="macAlg">
          <span data-ttu-id="5a0f0-327">
            <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 속성의 값을 계산하는 데 사용되는 MAC를 보유하는 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-327">A <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> object that holds the MAC to be used to compute the value of the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a0f0-328">지정된 MAC(메시지 인증 코드) 알고리즘을 사용하여 XML 디지털 서명을 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-328">Computes an XML digital signature using the specified message authentication code (MAC) algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-329"><xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> 메서드가 지정된 된 MAC 알고리즘을 사용 하 여 XML 디지털 서명을 생성 되 고 필요한 XML 요소를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-329">The <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method creates an XML digital signature using the specified MAC algorithm and constructs many of the XML elements needed.</span></span>  
  
 <span data-ttu-id="5a0f0-330">이 메서드를 호출 하기 전에 서명할 데이터를 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-330">You must set the data to be signed before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a0f0-331">다음 코드 예제에는 서명 하 고 분리 된 서명을 사용 하 여 식별자 URI (Uniform Resource) 주소 지정 가능 개체를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-331">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CPP/xmldsigdetachedkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CS/xmldsigdetachedkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/VB/xmldsigdetachedkeyedhashalg.vb#1)]  
  
 <span data-ttu-id="5a0f0-332">다음 코드 예제에서는 서명 및 엔벌로핑 서명을 사용 하 여 전체 XML 문서를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-332">The following code example shows how to sign and verify an entire XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CPP/xmldsigenvkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CS/xmldsigenvkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/VB/xmldsigenvkeyedhashalg.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5a0f0-333">
            <paramref name="macAlg" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-333">The <paramref name="macAlg" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5a0f0-334">
            <paramref name="macAlg" /> 매개 변수로 지정된 <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 개체가 <see cref="T:System.Security.Cryptography.HMACSHA1" />의 인스턴스가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-334">The <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> object specified by the <paramref name="macAlg" /> parameter is not an instance of <see cref="T:System.Security.Cryptography.HMACSHA1" />.</span>
          </span>
          <span data-ttu-id="5a0f0-335">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-335">-or-</span>
          </span>
          <span data-ttu-id="5a0f0-336">지정된 <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> 개체의 <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 속성이 유효하지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-336">The <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> property of the specified <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> object is not valid.</span>
          </span>
          <span data-ttu-id="5a0f0-337">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-337">-or-</span>
          </span>
          <span data-ttu-id="5a0f0-338">서명을 검사하는 데 사용되는 암호화 변환을 만들 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-338">The cryptographic transform used to check the signature could not be created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptedXml">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptedXml EncryptedXml" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.EncryptedXml" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptedXml As EncryptedXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::EncryptedXml ^ EncryptedXml { System::Security::Cryptography::Xml::EncryptedXml ^ get(); void set(System::Security::Cryptography::Xml::EncryptedXml ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedXml</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-339">XML 암호화 처리 규칙을 정의하는 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 개체를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-339">Gets or sets an <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object that defines the XML encryption processing rules.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a0f0-340">XML 암호화 처리 규칙을 정의하는 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-340">An <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object that defines the XML encryption processing rules.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetIdElement(class System.Xml.XmlDocument document, string idValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdElement (document As XmlDocument, idValue As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetIdElement(System::Xml::XmlDocument ^ document, System::String ^ idValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="idValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="5a0f0-341">
            <see cref="T:System.Xml.XmlDocument" /> 개체를 검색할 <see cref="T:System.Xml.XmlElement" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-341">The <see cref="T:System.Xml.XmlDocument" /> object to retrieve the <see cref="T:System.Xml.XmlElement" /> object from.</span>
          </span>
        </param>
        <param name="idValue">
          <span data-ttu-id="5a0f0-342">
            <see cref="T:System.Xml.XmlElement" /> 개체에서 검색할 <see cref="T:System.Xml.XmlDocument" /> 개체의 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-342">The ID of the <see cref="T:System.Xml.XmlElement" /> object to retrieve from the <see cref="T:System.Xml.XmlDocument" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a0f0-343">지정된 <see cref="T:System.Xml.XmlElement" /> 개체에서 지정된 ID를 가진 <see cref="T:System.Xml.XmlDocument" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-343">Returns the <see cref="T:System.Xml.XmlElement" /> object with the specified ID from the specified <see cref="T:System.Xml.XmlDocument" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a0f0-344">지정된 <see cref="T:System.Xml.XmlElement" /> 개체에서 지정된 ID를 가진 <see cref="T:System.Xml.XmlDocument" /> 개체이며, 찾을 수 없는 경우에는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-344">The <see cref="T:System.Xml.XmlElement" /> object with the specified ID from the specified <see cref="T:System.Xml.XmlDocument" /> object, or <see langword="null" /> if it could not be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKey">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetPublicKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPublicKey () As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Cryptography::AsymmetricAlgorithm ^ GetPublicKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-345">서명의 공개 키를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-345">Returns the public key of a signature.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a0f0-346">서명의 공개 키를 포함하는 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 개체이며, 키를 찾을 수 없는 경우에는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-346">An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object that contains the public key of the signature, or <see langword="null" /> if the key cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-347"><xref:System.Security.Cryptography.Xml.SignedXml.GetPublicKey%2A> 메서드가 반환 되는 <xref:System.Security.Cryptography.AsymmetricAlgorithm> XML 디지털 서명을 확인 하는 데 사용할 수 있는 공개 키가 포함 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-347">The <xref:System.Security.Cryptography.Xml.SignedXml.GetPublicKey%2A> method returns an <xref:System.Security.Cryptography.AsymmetricAlgorithm> object that contains a public key that can be used to verify an XML digital signature.</span></span>  
  
 <span data-ttu-id="5a0f0-348">키 중 하나 여야 합니다는 <xref:System.Security.Cryptography.DSA> 또는 <xref:System.Security.Cryptography.RSA> 키입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-348">The key must be either a <xref:System.Security.Cryptography.DSA> or an <xref:System.Security.Cryptography.RSA> key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5a0f0-349">
            <see cref="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo" /> 속성은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-349">The <see cref="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-350">
            <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체의 XML 표현을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-350">Returns the XML representation of a <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a0f0-351">
            <see cref="T:System.Security.Cryptography.Xml.Signature" />의 XML 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-351">The XML representation of the <see cref="T:System.Security.Cryptography.Xml.Signature" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5a0f0-352">
            <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> 속성은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-352">The <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> property is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5a0f0-353">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-353">-or-</span>
          </span>
          <span data-ttu-id="5a0f0-354">
            <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> 속성은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-354">The <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.KeyInfo KeyInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfo As KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::KeyInfo ^ KeyInfo { System::Security::Cryptography::Xml::KeyInfo ^ get(); void set(System::Security::Cryptography::Xml::KeyInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.KeyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-355">현재 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 개체의 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-355">Gets or sets the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a0f0-356">현재 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 개체의 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-356">The <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-357"><xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> 속성이 나타내는 <`KeyInfo`> 사용 하 여 XML 디지털 서명을의 요소는 <xref:System.Security.Cryptography.Xml.KeyInfo> 속성 내에 포함 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-357">The <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> property represents the <`KeyInfo`> element of an XML digital signature using a <xref:System.Security.Cryptography.Xml.KeyInfo> object contained within the property.</span></span>  <span data-ttu-id="5a0f0-358"><`KeyInfo`> 요소는 하위 요소는 <`Signature`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-358">The <`KeyInfo`> element is a subelement of the <`Signature`> element.</span></span>  
  
 <span data-ttu-id="5a0f0-359">사용 된 <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> 를 XML 문서 유효성 검사에 필요한 키를 식별 하기 위한 속성을 키 관련 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-359">Use the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> property to embed key-related information intended to help identify the key necessary for validating an XML document.</span></span>  
  
 <span data-ttu-id="5a0f0-360">에 대 한 자세한 내용은 `<KeyInfo>` 요소인 www.w3.org/TR/xmldsig-core/에서 제공 되는 XMLDSIG 사양을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-360">For more information about the `<KeyInfo>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a0f0-361">다음 코드 예제에서는 <xref:System.Security.Cryptography.Xml.KeyInfo> 유니버설 리소스 식별자 (URI)로 나타내는 리소스를 서명할 때 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-361">The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing a resource represented by a Universal Resource Identifier (URI).</span></span>  <span data-ttu-id="5a0f0-362">이 예제에서는 새 파일에 서명을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-362">This example saves the signature in a new file.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 <span data-ttu-id="5a0f0-363">다음 코드 예제에서는 <xref:System.Security.Cryptography.Xml.KeyInfo> XML 문서에 서명 하는 경우 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-363">The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing an XML document.</span></span>  <span data-ttu-id="5a0f0-364">이 예제에서는 새 파일에 서명을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-364">This example saves the signature in a new file.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5a0f0-365">
            <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 상태를 로드하는 데 사용할 XML 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-365">The XML element to load the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> state from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a0f0-366">XML 요소에서 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 상태를 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-366">Loads a <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> state from an XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5a0f0-367">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.Xml.SignedXml.LoadXml%2A> 메서드를 XML 문서를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-367">The following code example shows how to use the <xref:System.Security.Cryptography.Xml.SignedXml.LoadXml%2A> method to verify an XML document.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#3)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#3)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5a0f0-368">
            <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-368">The <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5a0f0-369">
            <paramref name="value" /> 매개 변수에 유효한 <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> 속성이 포함되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-369">The <paramref name="value" /> parameter does not contain a valid <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> property.</span>
          </span>
          <span data-ttu-id="5a0f0-370">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-370">-or-</span>
          </span>
          <span data-ttu-id="5a0f0-371">
            <paramref name="value" /> 매개 변수에 유효한 <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> 속성이 포함되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-371">The <paramref name="value" /> parameter does not contain a valid <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="m_signature">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.Xml.Signature m_signature;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Security.Cryptography.Xml.Signature m_signature" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.m_signature" />
      <MemberSignature Language="VB.NET" Value="Protected m_signature As Signature " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Security::Cryptography::Xml::Signature ^ m_signature;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.Signature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-372">현재 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 개체의 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-372">Represents the <see cref="T:System.Security.Cryptography.Xml.Signature" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_strSigningKeyName">
      <MemberSignature Language="C#" Value="protected string m_strSigningKeyName;" />
      <MemberSignature Language="ILAsm" Value=".field family string m_strSigningKeyName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName" />
      <MemberSignature Language="VB.NET" Value="Protected m_strSigningKeyName As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ m_strSigningKeyName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-373">
            <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체 서명에 사용할 설치된 키의 이름을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-373">Represents the name of the installed key to be used for signing the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ Resolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-374">현재의 <see cref="T:System.Xml.XmlResolver" /> 개체를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-374">Sets the current <see cref="T:System.Xml.XmlResolver" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a0f0-375">현재 <see cref="T:System.Xml.XmlResolver" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-375">The current <see cref="T:System.Xml.XmlResolver" /> object.</span>
          </span>
          <span data-ttu-id="5a0f0-376">기본값은 <see cref="T:System.Xml.XmlSecureResolver" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-376">The defaults is a <see cref="T:System.Xml.XmlSecureResolver" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-377"><xref:System.Xml.XmlResolver> Uniform 리소스 식별자 (URI)로 명명 된 외부 XML 리소스를 확인 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-377">The <xref:System.Xml.XmlResolver> class resolves external XML resources named by a Uniform Resource Identifier (URI).</span></span> <span data-ttu-id="5a0f0-378">XML 파일의 소스를 신뢰 하지 않는 경우 사용 하 여 XML 파일의 URI로 명명 하는 컴퓨터 리소스에 액세스 하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-378">If you do not trust the source of the XML file, you might not want to allow the XML file to access computer resources named by the URI.</span></span> <span data-ttu-id="5a0f0-379">사용할 수는 <xref:System.Security.Cryptography.Xml.SignedXml.Resolver%2A> 다른을 지정 하 여 XML 파일 컴퓨터 리소스에 가질 액세스 수준을 제어 하려면 속성 <xref:System.Xml.XmlResolver> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-379">You can use the <xref:System.Security.Cryptography.Xml.SignedXml.Resolver%2A> property to control the level of access that XML files have to computer resources by specifying different <xref:System.Xml.XmlResolver> objects.</span></span> <span data-ttu-id="5a0f0-380">모든 액세스를 허용 하지 않을 경우이 속성을 설정할 수 있습니다 `null` (`Nothing` Visual basic에서).</span><span class="sxs-lookup"><span data-stu-id="5a0f0-380">If you do not want to allow any access, you can set this property to `null` (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeCanonicalizationMethods">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; SafeCanonicalizationMethods { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; SafeCanonicalizationMethods" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeCanonicalizationMethods As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ SafeCanonicalizationMethods { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-381">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-381">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="5a0f0-382">정규화 알고리즘이 명시적으로 허용되는 메서드의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-382">Gets the names of methods whose canonicalization algorithms are explicitly allowed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a0f0-383">정식 XML을 안전하게 생성하는 메서드 이름의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-383">A collection of the names of methods that safely produce canonical XML.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-384">정형화 메서드는 해당 정규 형식에 XML 문서를 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-384">Canonicalization methods convert an XML document to its canonical form.</span></span> <span data-ttu-id="5a0f0-385">정식 XML에 대 한 자세한 내용은 참조 [정식 XML](http://www.w3.org/TR/xml-c14n) W3C 웹 사이트에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-385">For more information about canonical XML, see [Canonical XML](http://www.w3.org/TR/xml-c14n) on the W3C website.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Signature">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.Signature Signature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.Signature Signature" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.Signature" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signature As Signature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::Signature ^ Signature { System::Security::Cryptography::Xml::Signature ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.Signature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-386">현재 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 개체의 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-386">Gets the <see cref="T:System.Security.Cryptography.Xml.Signature" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a0f0-387">현재 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 개체의 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-387">The <see cref="T:System.Security.Cryptography.Xml.Signature" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-388"><xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> 속성이 나타내는 <`Signature`> 사용 하 여 XML 디지털 서명을의 요소는 <xref:System.Security.Cryptography.Xml.Signature> 속성 내에 포함 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-388">The <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property represents the <`Signature`> element of an XML digital signature using a <xref:System.Security.Cryptography.Xml.Signature> object contained within the property.</span></span>  <span data-ttu-id="5a0f0-389"><`Signature`> 요소는 XML 디지털 서명 생성 및 확인에 사용 되는 루트 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-389">The <`Signature`> element is the root element used for XML digital signature creation and verification.</span></span>  
  
 <span data-ttu-id="5a0f0-390">사용 하 여는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> 검색할 속성의 <xref:System.Security.Cryptography.Xml.Signature> 에서 사용 하는 개체는 <xref:System.Security.Cryptography.Xml.SignedXml> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-390">Use the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property to retrieve the <xref:System.Security.Cryptography.Xml.Signature> object used by the <xref:System.Security.Cryptography.Xml.SignedXml> object.</span></span>  
  
 <span data-ttu-id="5a0f0-391">에 대 한 자세한 내용은 `<Signature>` 요소인 www.w3.org/TR/xmldsig-core/에서 제공 되는 XMLDSIG 사양을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-391">For more information about the `<Signature>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a0f0-392">다음 코드 예제에서는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> 속성 서명 하 고 엔벌로프된 서명을 사용 하 여 전체 XML 문서를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-392">The following code example uses the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property to sign and verify an entire XML document using an enveloped signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 <span data-ttu-id="5a0f0-393">다음 코드 예제에서는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> 속성 서명 하 고 분리 된 서명을 사용 하 여 식별자 URI (Uniform Resource) 주소 지정 가능 개체를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-393">The following code example uses the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureFormatValidator">
      <MemberSignature Language="C#" Value="public Func&lt;System.Security.Cryptography.Xml.SignedXml,bool&gt; SignatureFormatValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Security.Cryptography.Xml.SignedXml, bool&gt; SignatureFormatValidator" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property SignatureFormatValidator As Func(Of SignedXml, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ SignatureFormatValidator { Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ get(); void set(Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Security.Cryptography.Xml.SignedXml,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-394">XML 서명의 서식(암호화 보안 아님) 유효성을 검사하기 위해 호출할 대리자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-394">Gets a delegate that will be called to validate the format (not the cryptographic security) of an XML signature.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a0f0-395">서식이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-395">
              <see langword="true" /> if the format is acceptable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-396">특정 변환만 사용 됨 또는 서명이 특정 해시 알고리즘 및 등을 사용 하도록 보장 하기 위해이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-396">This method can be used to ensure that only certain transforms are used, or that the signature uses a certain hash algorithm, and so on.</span></span>  
  
 <span data-ttu-id="5a0f0-397">이 속성을 설정 `null` 에서 모든 서명 형식 유효성 검사가 제거는 <xref:System.Security.Cryptography.Xml.SignedXml> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-397">Setting the property to `null` removes all signature format validation from the <xref:System.Security.Cryptography.Xml.SignedXml> object.</span></span>  
  
 <span data-ttu-id="5a0f0-398">원하는 경우 개체의 현재 대리자 및 체인을 읽을 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-398">You can also read the object's current delegate and chain to it if you want.</span></span>  
  
 <span data-ttu-id="5a0f0-399">제공 하는 대리자 형식 유효성 검사기를 설정 하는 경우 입력된 매개 변수로 받습니다는 <xref:System.Security.Cryptography.Xml.SignedXml> – 부울 값을 반환 하 고 확인 중인 개체 `true` 형식, 허용 되는 경우 `false` 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-399">If you are setting up a format validator, the delegate you supply will receive as an input parameter the <xref:System.Security.Cryptography.Xml.SignedXml> object being verified and returns a Boolean value – `true` if the format is acceptable, `false` if it is not.</span></span> <span data-ttu-id="5a0f0-400">대리자가 반환 하는 경우 `false` 어떤 이유로 든는 <xref:System.Security.Cryptography.Xml.SignedXml> 개체, XML 서명을 올바르지 않음을 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-400">If the delegate returns `false` for any reason, the <xref:System.Security.Cryptography.Xml.SignedXml> object will report that the XML signature is not valid.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureLength">
      <MemberSignature Language="C#" Value="public string SignatureLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureLength" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureLength As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureLength { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-401">현재 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체의 서명 길이를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-401">Gets the length of the signature for the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a0f0-402">현재 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체의 서명 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-402">The length of the signature for the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureMethod">
      <MemberSignature Language="C#" Value="public string SignatureMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureMethod { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-403">현재 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체의 서명 메서드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-403">Gets the signature method of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a0f0-404">현재 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체의 서명 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-404">The signature method of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-405"><xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> 속성이 나타내는 <`SignatureMethod`> 속성 내에 포함 된 식별자 URI (Uniform Resource) 문자열을 사용 하 여 XML 디지털 서명의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-405">The <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property represents the <`SignatureMethod`> element of an XML digital signature using a Uniform Resource Identifier (URI) string contained within the property.</span></span> <span data-ttu-id="5a0f0-406"><`SignatureMethod`> 요소는 하위 요소는 <`SignedInfo`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-406">The <`SignatureMethod`> element is a subelement of the <`SignedInfo`> element.</span></span>  
  
 <span data-ttu-id="5a0f0-407">사용 하 여는 <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> 검색할 속성의 <`SignatureMethod`>에서 사용 하는 URI는 <xref:System.Security.Cryptography.Xml.SignedXml> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-407">Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property to retrieve the <`SignatureMethod`> URI used by the <xref:System.Security.Cryptography.Xml.SignedXml> object.</span></span> <span data-ttu-id="5a0f0-408">이 속성은 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-408">This property is read only.</span></span> <span data-ttu-id="5a0f0-409">프로그래밍 방식으로 대 한 URI를 지정 하는 방법에 대 한 자세한 내용은 <`SignatureMethod`> 요소를 참조는 <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-409">For more information about programmatically specifying a URI for the <`SignatureMethod`> element, see the <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A> property.</span></span>  
  
 <span data-ttu-id="5a0f0-410">에 대 한 자세한 내용은 `<SignatureMethod>` 요소인 www.w3.org/TR/xmldsig-core/에서 제공 되는 XMLDSIG 사양을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-410">For more information about the `<SignatureMethod>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureValue">
      <MemberSignature Language="C#" Value="public byte[] SignatureValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SignatureValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureValue As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SignatureValue { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-411">현재 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체의 서명 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-411">Gets the signature value of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a0f0-412">현재 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체의 서명 값이 들어 있는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-412">A byte array that contains the signature value of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-413"><xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> 속성이 나타내는 <`SignatureValue`> 속성 내에 포함 된 바이트 배열을 사용 하 여 XML 디지털 서명의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-413">The <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property represents the <`SignatureValue`> element of an XML digital signature using an array of bytes contained within the property.</span></span>  <span data-ttu-id="5a0f0-414"><`SignatureValue`> 요소는 하위 요소는 <`Signature>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-414">The <`SignatureValue`> element is a subelement of the <`Signature>` element.</span></span>  
  
 <span data-ttu-id="5a0f0-415">사용 하 여는 <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> 속성을 XML 디지털 서명의 값을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-415">Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property to retrieve the value of the XML digital signature.</span></span>  <span data-ttu-id="5a0f0-416">이 속성은 성공적으로 호출을 수행 하는 경우는 <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-416">This property is automatically populated when you make a successful call to the <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method.</span></span>  
  
 <span data-ttu-id="5a0f0-417">에 대 한 자세한 내용은 `<SignatureValue>` 요소인 www.w3.org/TR/xmldsig-core/에서 제공 되는 XMLDSIG 사양을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-417">For more information about the `<SignatureValue>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.SignedInfo SignedInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.SignedInfo SignedInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignedInfo As SignedInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::SignedInfo ^ SignedInfo { System::Security::Cryptography::Xml::SignedInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.SignedInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-418">현재 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 개체의 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-418">Gets the <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a0f0-419">현재 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 개체의 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-419">The <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-420"><xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> 속성이 나타내는 <`SignedInfo`> 속성 내에 포함 된 바이트 배열을 사용 하 여 XML 디지털 서명의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-420">The <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property represents the <`SignedInfo`> element of an XML digital signature using an array of bytes contained within the property.</span></span>  <span data-ttu-id="5a0f0-421"><`SignedInfo`> 요소는 하위 요소는 <`Signature>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-421">The <`SignedInfo`> element is a subelement of the <`Signature>` element.</span></span>  
  
 <span data-ttu-id="5a0f0-422">사용 하 여는 <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> 검색할 속성의 <xref:System.Security.Cryptography.Xml.SignedInfo> 에서 사용 되는 개체는 <xref:System.Security.Cryptography.Xml.SignedXml> XML 디지털 서명을 만드는 데 개체.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-422">Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property to retrieve the <xref:System.Security.Cryptography.Xml.SignedInfo> object that is used by the <xref:System.Security.Cryptography.Xml.SignedXml> object to create an XML digital signature.</span></span>  
  
 <span data-ttu-id="5a0f0-423">에 대 한 자세한 내용은 `<SignedInfo>` 요소인 www.w3.org/TR/xmldsig-core/에서 제공 되는 XMLDSIG 사양을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-423">For more information about the `<SignedInfo>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm SigningKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm SigningKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ SigningKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); void set(System::Security::Cryptography::AsymmetricAlgorithm ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-424">
            <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체 서명에 사용된 비대칭 알고리즘 키를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-424">Gets or sets the asymmetric algorithm key used for signing a <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a0f0-425">
            <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체 서명에 사용된 비대칭 알고리즘 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-425">The asymmetric algorithm key used for signing the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-426">사용 하 여 <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> XML 디지털 서명을 만드는 데 사용할 비대칭 키를 지정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-426">Use the <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> property to specify the asymmetric key you want to use to create an XML digital signature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a0f0-427">다음 코드 예제에는 서명 하 고 엔벌로프된 서명을 사용 하 여 전체 XML 문서를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-427">The following code example shows how to sign and verify an entire XML document using an enveloped signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 <span data-ttu-id="5a0f0-428">다음 코드 예제에는 서명 하 고 분리 된 서명을 사용 하 여 식별자 URI (Uniform Resource) 주소 지정 가능 개체를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-428">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 <span data-ttu-id="5a0f0-429">다음 코드 예제에는 서명 및 엔벌로핑 서명을 사용 하 여 XML 문서의 단일 요소를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-429">The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKeyName">
      <MemberSignature Language="C#" Value="public string SigningKeyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SigningKeyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SigningKeyName" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningKeyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SigningKeyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-430">
            <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체 서명에 사용할 설치된 키의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-430">Gets or sets the name of the installed key to be used for signing the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a0f0-431">
            <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 개체 서명에 사용할 설치된 키의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-431">The name of the installed key to be used for signing the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDecryptionTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDecryptionTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDecryptionTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDecryptionTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDecryptionTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-432">XML 모드 해독 변환에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-432">Represents the Uniform Resource Identifier (URI) for the XML mode decryption transformation.</span>
          </span>
          <span data-ttu-id="5a0f0-433">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-433">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-434">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl> 필드는 "http://www.w3.org/2002/07/decrypt#XML"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-434">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl> field is "http://www.w3.org/2002/07/decrypt#XML".</span></span>  
  
 <span data-ttu-id="5a0f0-435">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-435">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-436">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 http://www.w3.org/2002/07/decrypt#XML합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-436">For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2002/07/decrypt#XML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigBase64TransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigBase64TransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigBase64TransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigBase64TransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigBase64TransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-437">Base 64 변환에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-437">Represents the Uniform Resource Identifier (URI) for the base 64 transformation.</span>
          </span>
          <span data-ttu-id="5a0f0-438">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-438">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-439">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> 필드는 "http://www.w3.org/2000/09/xmldsig#base64"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-439">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> field is "http://www.w3.org/2000/09/xmldsig#base64".</span></span>  
  
 <span data-ttu-id="5a0f0-440">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-440">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-441"><xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> 클래스에서 설명 된 변환을 구현 하는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-441">The <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> field.</span></span>  
  
 <span data-ttu-id="5a0f0-442">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 http://www.w3.org/2000/09/xmldsig#base64합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-442">For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#base64.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a0f0-443">멤버를 사용 하는 방법은 다음 코드 예제는 <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-443">The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigC14NTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigC14NTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigC14NTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigC14NTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigC14NTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-444">정규 XML 변환에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-444">Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation.</span>
          </span>
          <span data-ttu-id="5a0f0-445">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-445">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-446">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> 필드는 "http://www.w3.org/TR/2001/REC-xml-c14n-20010315"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-446">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field is "http://www.w3.org/TR/2001/REC-xml-c14n-20010315".</span></span>  
  
 <span data-ttu-id="5a0f0-447">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-447">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-448"><xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> 클래스에서 설명 된 변환을 구현 하는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-448">The <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field.</span></span>  
  
 <span data-ttu-id="5a0f0-449">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 http://www.w3.org/TR/2001/REC-xml-c14n-20010315합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-449">For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315.</span></span>  
  
 <span data-ttu-id="5a0f0-450">이 필드에 동일한 값으로는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-450">This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a0f0-451">멤버를 호출 하는 방법은 다음 코드 예제는 <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-451">The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigC14NWithCommentsTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigC14NWithCommentsTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigC14NWithCommentsTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigC14NWithCommentsTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigC14NWithCommentsTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-452">설명이 있는 정규 XML 변환에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-452">Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation, with comments.</span>
          </span>
          <span data-ttu-id="5a0f0-453">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-453">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-454">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> 필드는 "http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments "입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-454">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field is "http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments ".</span></span>  
  
 <span data-ttu-id="5a0f0-455">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-455">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-456"><xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> 클래스에서 설명 된 변환을 구현 하는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-456">The <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field.</span></span>  
  
 <span data-ttu-id="5a0f0-457">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-457">For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.</span></span>  
  
 <span data-ttu-id="5a0f0-458">이 필드에 동일한 값으로는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-458">This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigCanonicalizationUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigCanonicalizationUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigCanonicalizationUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigCanonicalizationUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigCanonicalizationUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-459">XML 디지털 서명을 위한 표준 정규화 알고리즘에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-459">Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures.</span>
          </span>
          <span data-ttu-id="5a0f0-460">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-460">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-461">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> 필드는 "http://www.w3.org/TR/2001/REC-xml-c14n-20010315"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-461">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field is "http://www.w3.org/TR/2001/REC-xml-c14n-20010315".</span></span>  
  
 <span data-ttu-id="5a0f0-462">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-462">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-463"><xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> 클래스에서 설명 된 변환을 구현 하는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-463">The <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field.</span></span>  
  
 <span data-ttu-id="5a0f0-464">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 http://www.w3.org/TR/2001/REC-xml-c14n-20010315합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-464">For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315.</span></span>  
  
 <span data-ttu-id="5a0f0-465">이 필드에 동일한 값으로는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-465">This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigCanonicalizationWithCommentsUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigCanonicalizationWithCommentsUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigCanonicalizationWithCommentsUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigCanonicalizationWithCommentsUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigCanonicalizationWithCommentsUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-466">XML 디지털 서명을 위한 표준 정규화 알고리즘에 대한 URI(Uniform Resource Identifier)를 나타내고 설명을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-466">Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures and includes comments.</span>
          </span>
          <span data-ttu-id="5a0f0-467">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-467">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-468">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> 필드는 "http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-468">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field is "http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments".</span></span>  
  
 <span data-ttu-id="5a0f0-469">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-469">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-470"><xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> 클래스에서 설명 된 변환을 구현 하는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-470">The <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field.</span></span>  
  
 <span data-ttu-id="5a0f0-471">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-471">For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.</span></span>  
  
 <span data-ttu-id="5a0f0-472">이 필드에 동일한 값으로는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-472">This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigDSAUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigDSAUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigDSAUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigDSAUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigDSAUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-473">XML 디지털 서명을 위한 표준 <see cref="T:System.Security.Cryptography.DSA" /> 알고리즘에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-473">Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.DSA" /> algorithm for XML digital signatures.</span>
          </span>
          <span data-ttu-id="5a0f0-474">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-474">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-475">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> 필드는 "http://www.w3.org/2000/09/xmldsig#dsa-sha1"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-475">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> field is "http://www.w3.org/2000/09/xmldsig#dsa-sha1".</span></span>  
  
 <span data-ttu-id="5a0f0-476">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-476">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-477">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 http://www.w3.org/2000/09/xmldsig#dsa-sha1합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-477">For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#dsa-sha1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigEnvelopedSignatureTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigEnvelopedSignatureTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigEnvelopedSignatureTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigEnvelopedSignatureTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigEnvelopedSignatureTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-478">엔벌로프된 서명 변환에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-478">Represents the Uniform Resource Identifier (URI) for enveloped signature transformation.</span>
          </span>
          <span data-ttu-id="5a0f0-479">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-479">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-480">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> 필드는 "http://www.w3.org/2000/09/xmldsig#enveloped-signature"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-480">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> field is "http://www.w3.org/2000/09/xmldsig#enveloped-signature".</span></span>  
  
 <span data-ttu-id="5a0f0-481">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-481">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-482"><xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> 클래스에서 설명 된 변환을 구현 하는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-482">The <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> field.</span></span>  
  
 <span data-ttu-id="5a0f0-483">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 http://www.w3.org/2000/09/xmldsig#enveloped-signature합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-483">For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#enveloped-signature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a0f0-484">멤버를 사용 하는 방법은 다음 코드 예제는 <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-484">The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigExcC14NTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigExcC14NTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigExcC14NTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigExcC14NTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigExcC14NTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-485">배타적 XML 정규화에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-485">Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization.</span>
          </span>
          <span data-ttu-id="5a0f0-486">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-486">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-487">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> 필드는 "http://www.w3.org/2001/10/xml-exc-c14n#"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-487">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> field is "http://www.w3.org/2001/10/xml-exc-c14n#".</span></span>  
  
 <span data-ttu-id="5a0f0-488">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-488">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-489"><xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> 클래스에서 설명 된 변환을 구현 하는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-489">The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> field.</span></span>  
  
 <span data-ttu-id="5a0f0-490">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 http://www.w3.org/2001/10/xml-exc-c14n#합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-490">For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2001/10/xml-exc-c14n#.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a0f0-491">다음 코드 예제에서는 서명 하 고 사용 하 여 XML 문서를 확인 하는 방법을 보여 줍니다.는 <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-491">The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class.</span></span>  <span data-ttu-id="5a0f0-492">이 예제에서는 봉투 (envelope) 서명을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-492">This sample creates an envelope signature.</span></span>  
  
 [!code-cpp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CS/example.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigExcC14NWithCommentsTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigExcC14NWithCommentsTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigExcC14NWithCommentsTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigExcC14NWithCommentsTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigExcC14NWithCommentsTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-493">설명이 있는 배타적 XML 정규화에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-493">Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization, with comments.</span>
          </span>
          <span data-ttu-id="5a0f0-494">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-494">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-495">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> 필드는 "http://www.w3.org/2001/10/xml-exc-c14n#WithComments"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-495">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field is "http://www.w3.org/2001/10/xml-exc-c14n#WithComments".</span></span>  
  
 <span data-ttu-id="5a0f0-496">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-496">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-497"><xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> 클래스에서 설명 된 변환을 구현 하는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-497">The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field.</span></span>  
  
 <span data-ttu-id="5a0f0-498">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 http://www.w3.org/2001/10/xml-exc-c14n#WithComments합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-498">For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2001/10/xml-exc-c14n#WithComments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a0f0-499">다음 코드 예제에서는 서명 하 고 사용 하 여 XML 문서를 확인 하는 방법을 보여 줍니다.는 <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-499">The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class.</span></span>  <span data-ttu-id="5a0f0-500">이 예제에서는 봉투 (envelope) 서명을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-500">This sample creates an envelope signature.</span></span>  
  
 [!code-cpp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigHMACSHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigHMACSHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigHMACSHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigHMACSHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigHMACSHA1Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-501">XML 디지털 서명을 위한 표준 <see cref="T:System.Security.Cryptography.HMACSHA1" /> 알고리즘에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-501">Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.HMACSHA1" /> algorithm for XML digital signatures.</span>
          </span>
          <span data-ttu-id="5a0f0-502">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-502">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-503">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url> 필드는 "http://www.w3.org/2000/09/xmldsig#hmac-sha1"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-503">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url> field is "http://www.w3.org/2000/09/xmldsig#hmac-sha1".</span></span>  
  
 <span data-ttu-id="5a0f0-504">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-504">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-505">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 http://www.w3.org/2000/09/xmldsig#hmac-sha1합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-505">For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#hmac-sha1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigMinimalCanonicalizationUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigMinimalCanonicalizationUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigMinimalCanonicalizationUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigMinimalCanonicalizationUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigMinimalCanonicalizationUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-506">XML 디지털 서명을 위한 최소 표준 정규화 알고리즘에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-506">Represents the Uniform Resource Identifier (URI) for the standard minimal canonicalization algorithm for XML digital signatures.</span>
          </span>
          <span data-ttu-id="5a0f0-507">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-507">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-508">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl> 필드는 "http://www.w3.org/2000/09/xmldsig#minimal"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-508">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl> field is "http://www.w3.org/2000/09/xmldsig#minimal".</span></span>  
  
 <span data-ttu-id="5a0f0-509">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-509">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-510">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 http://www.w3.org/2000/09/xmldsig#minimal합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-510">For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#minimal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigNamespaceUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigNamespaceUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigNamespaceUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigNamespaceUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigNamespaceUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-511">XML 디지털 서명을 위한 표준 네임스페이스에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-511">Represents the Uniform Resource Identifier (URI) for the standard namespace for XML digital signatures.</span>
          </span>
          <span data-ttu-id="5a0f0-512">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-512">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-513">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl> 필드는 "http://www.w3.org/2000/09/xmldsig#"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-513">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl> field is "http://www.w3.org/2000/09/xmldsig#".</span></span>  
  
 <span data-ttu-id="5a0f0-514">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-514">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-515">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 http://www.w3.org/2000/09/xmldsig#합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-515">For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA1Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-516">XML 디지털 서명을 위한 표준 <see cref="T:System.Security.Cryptography.RSA" /> 서명 메서드에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-516">Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.RSA" /> signature method for XML digital signatures.</span>
          </span>
          <span data-ttu-id="5a0f0-517">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-517">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-518">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> 필드는 "http://www.w3.org/2000/09/xmldsig#rsa-sha1"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-518">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> field is "http://www.w3.org/2000/09/xmldsig#rsa-sha1".</span></span>  
  
 <span data-ttu-id="5a0f0-519">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-519">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-520">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 http://www.w3.org/2000/09/xmldsig#rsa-sha1합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-520">For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#rsa-sha1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA256Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-521">XML 디지털 서명을 위한 <see cref="T:System.Security.Cryptography.RSA" /> SHA-256 서명 방법 변형에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-521">Represents the Uniform Resource Identifier (URI) for the  <see cref="T:System.Security.Cryptography.RSA" /> SHA-256 signature method variation for XML digital signatures.</span>
          </span>
          <span data-ttu-id="5a0f0-522">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-522">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-523">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url> 필드는 "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-523">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url> field is "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256".</span></span>  
  
 <span data-ttu-id="5a0f0-524">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-524">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-525">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 [ http://www.w3.org/2001/04/xmldsig-more#rsa-sha256 ](http://www.w3.org/2001/04/xmldsig-more)합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-525">For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmldsig-more#rsa-sha256](http://www.w3.org/2001/04/xmldsig-more).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA384Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA384Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA384Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA384Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA384Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-526">XML 디지털 서명을 위한 <see cref="T:System.Security.Cryptography.RSA" /> SHA-384 서명 방법 변형에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-526">Represents the Uniform Resource Identifier (URI) for the  <see cref="T:System.Security.Cryptography.RSA" /> SHA-384 signature method variation for XML digital signatures.</span>
          </span>
          <span data-ttu-id="5a0f0-527">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-527">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-528">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url> 필드는 "http://www.w3.org/2001/04/xmldsig-more#rsa-sha384"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-528">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url> field is "http://www.w3.org/2001/04/xmldsig-more#rsa-sha384".</span></span>  
  
 <span data-ttu-id="5a0f0-529">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-529">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-530">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 [ http://www.w3.org/2001/04/xmldsig-more#rsa-sha384 ](http://www.w3.org/2001/04/xmldsig-more#rsa-sha384)합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-530">For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmldsig-more#rsa-sha384](http://www.w3.org/2001/04/xmldsig-more#rsa-sha384).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA512Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-531">XML 디지털 서명을 위한 <see cref="T:System.Security.Cryptography.RSA" /> SHA-512 서명 방법 변형에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-531">Represents the Uniform Resource Identifier (URI) for the  <see cref="T:System.Security.Cryptography.RSA" /> SHA-512 signature method variation for XML digital signatures.</span>
          </span>
          <span data-ttu-id="5a0f0-532">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-532">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-533">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url> 필드는 "http://www.w3.org/2001/04/xmldsig-more#rsa-sha512"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-533">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url> field is "http://www.w3.org/2001/04/xmldsig-more#rsa-sha512".</span></span>  
  
 <span data-ttu-id="5a0f0-534">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-534">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-535">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 [ http://www.w3.org/2001/04/xmldsig-more#rsa-sha512 ](http://www.w3.org/2001/04/xmldsig-more#rsa-sha512)합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-535">For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmldsig-more#rsa-sha512](http://www.w3.org/2001/04/xmldsig-more#rsa-sha512).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA1Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-536">XML 디지털 서명을 위한 표준 <see cref="T:System.Security.Cryptography.SHA1" /> 다이제스트 방법에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-536">Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.SHA1" /> digest method for XML digital signatures.</span>
          </span>
          <span data-ttu-id="5a0f0-537">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-537">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-538">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> 필드는 "http://www.w3.org/2000/09/xmldsig#sha1"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-538">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> field is "http://www.w3.org/2000/09/xmldsig#sha1".</span></span>  
  
 <span data-ttu-id="5a0f0-539">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-539">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-540">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 http://www.w3.org/2000/09/xmldsig#sha1합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-540">For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#sha1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA256Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-541">XML 디지털 서명을 위한 표준 <see cref="T:System.Security.Cryptography.SHA256" /> 다이제스트 방법에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-541">Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.SHA256" /> digest method for XML digital signatures.</span>
          </span>
          <span data-ttu-id="5a0f0-542">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-542">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-543">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url> 필드는 "http://www.w3.org/2001/04/xmlenc#sha256"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-543">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url> field is "http://www.w3.org/2001/04/xmlenc#sha256".</span></span>  
  
 <span data-ttu-id="5a0f0-544">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-544">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-545">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 [ http://www.w3.org/2001/04/xmlenc#sha256 ](http://www.w3.org/2001/04/xmlenc#sha256)합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-545">For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmlenc#sha256](http://www.w3.org/2001/04/xmlenc#sha256).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA384Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA384Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA384Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA384Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA384Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-546">XML 디지털 서명을 위한 표준 <see cref="T:System.Security.Cryptography.SHA384" /> 다이제스트 방법에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-546">Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.SHA384" /> digest method for XML digital signatures.</span>
          </span>
          <span data-ttu-id="5a0f0-547">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-547">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-548">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url> 필드는 "http://www.w3.org/2001/04/xmldsig-more#sha384"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-548">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url> field is "http://www.w3.org/2001/04/xmldsig-more#sha384".</span></span>  
  
 <span data-ttu-id="5a0f0-549">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-549">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-550">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 [ http://www.w3.org/2001/04/xmldsig-more#sha384 ](http://www.w3.org/2001/04/xmldsig-more#sha384)합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-550">For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmldsig-more#sha384](http://www.w3.org/2001/04/xmldsig-more#sha384).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA512Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-551">XML 디지털 서명을 위한 표준 <see cref="T:System.Security.Cryptography.SHA512" /> 다이제스트 방법에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-551">Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.SHA512" /> digest method for XML digital signatures.</span>
          </span>
          <span data-ttu-id="5a0f0-552">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-552">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-553">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url> 필드는 "http://www.w3.org/2001/04/xmlenc#sha512"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-553">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url> field is "http://www.w3.org/2001/04/xmlenc#sha512".</span></span>  
  
 <span data-ttu-id="5a0f0-554">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-554">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-555">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 [ http://www.w3.org/2001/04/xmlenc#sha512 ](http://www.w3.org/2001/04/xmlenc#sha512)합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-555">For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmlenc#sha512](http://www.w3.org/2001/04/xmlenc#sha512).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigXPathTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigXPathTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigXPathTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigXPathTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigXPathTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-556">XPath(XML Path Language)에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-556">Represents the Uniform Resource Identifier (URI) for the XML Path Language (XPath).</span>
          </span>
          <span data-ttu-id="5a0f0-557">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-557">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-558">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> 필드는 "http://www.w3.org/TR/1999/REC-xpath-19991116"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-558">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> field is "http://www.w3.org/TR/1999/REC-xpath-19991116".</span></span>  
  
 <span data-ttu-id="5a0f0-559">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-559">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-560"><xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> 클래스에서 설명 된 변환을 구현 하는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-560">The <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> field.</span></span>  
  
 <span data-ttu-id="5a0f0-561">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 http://www.w3.org/TR/1999/REC-xpath-19991116합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-561">For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/1999/REC-xpath-19991116.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a0f0-562">멤버를 호출 하는 방법은 다음 코드 예제는 <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-562">The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> class.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigXsltTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigXsltTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigXsltTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigXsltTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigXsltTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-563">XSLT 변환에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-563">Represents the Uniform Resource Identifier (URI) for XSLT transformations.</span>
          </span>
          <span data-ttu-id="5a0f0-564">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-564">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-565">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> 필드는 "http://www.w3.org/TR/1999/REC-xslt-19991116"입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-565">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> field is "http://www.w3.org/TR/1999/REC-xslt-19991116".</span></span>  
  
 <span data-ttu-id="5a0f0-566">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-566">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-567"><xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> 클래스에서 설명 된 변환을 구현 하는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-567">The <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> field.</span></span>  
  
 <span data-ttu-id="5a0f0-568">자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 http://www.w3.org/TR/1999/REC-xslt-19991116합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-568">For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/1999/REC-xslt-19991116.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a0f0-569">멤버를 사용 하는 방법은 다음 코드 예제는 <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-569">The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlLicenseTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlLicenseTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlLicenseTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlLicenseTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlLicenseTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a0f0-570">서명을 위해 XrML 라이선스를 정규화하는 데 사용할 라이선스 변환 알고리즘에 대한 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a0f0-570">Represents the Uniform Resource Identifier (URI) for the license transform algorithm used to normalize XrML licenses for signatures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a0f0-571">값은 <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> 필드는 "urn: mpeg:mpeg21:2003:01-REL-R-NS:licenseTransform"</span><span class="sxs-lookup"><span data-stu-id="5a0f0-571">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field is "urn:mpeg:mpeg21:2003:01-REL-R-NS:licenseTransform"</span></span>  
  
 <span data-ttu-id="5a0f0-572">이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-572">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="5a0f0-573"><xref:System.Security.Cryptography.Xml.XmlLicenseTransform> 클래스에서 설명 된 변환을 구현 하는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="5a0f0-573">The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>