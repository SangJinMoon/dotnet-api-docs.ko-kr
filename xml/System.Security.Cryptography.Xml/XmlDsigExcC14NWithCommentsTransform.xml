<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlDsigExcC14NWithCommentsTransform.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5517e749e9b6c004753f1fb4782ec0c560d380557.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">517e749e9b6c004753f1fb4782ec0c560d380557</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
          <source>Represents the exclusive C14N XML canonicalization transform for a digital signature as defined by the World Wide Web Consortium (W3C), with comments.</source>
          <target state="translated">W3C(World Wide Web Consortium)에서 정의한 대로 설명이 있는 디지털 서명의 배타적 C14N XML 정식화 변환을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> class represents the exclusive C14N XML canonicalization transform with comments.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> 주석 사용 하 여 단독 C14N XML 정규화 변환이 클래스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
          <source>This class is similar to the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> class, which allows a signer to create a digest using the canonical form of an XML document.</source>
          <target state="translated">이 클래스는 비슷합니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> 클래스를 사용 하는 서명자는 XML 문서의 정규 형식을 사용 하 여 다이제스트를 만듭니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
          <source>However, the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> class excludes ancestor context from a canonicalized subdocument.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> 정규화 된 하위 문서에서 상위 컨텍스트를 제외 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> class when you need to canonicalize an XML subdocument so that it is independent from its XML context.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> XML 컨텍스트에서 것은 XML을 정식화 하려면 때 클래스 하위 문서입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
          <source>For example, applications such as Web services that use signed XML within complex communication protocols often need to canonicalize XML in this manner.</source>
          <target state="translated">예를 들어 응용 프로그램 웹 서비스를 사용 하는 서명 된 XML 같은 복잡 한 통신 프로토콜 내의 종종 정식화 해야 XML이 방식에서입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
          <source>Such applications often envelop XML within various dynamically constructed elements, which can substantially change the document and cause XML signature verification to fail.</source>
          <target state="translated">이러한 응용 프로그램 실질적으로 문서를 변경 하 고 있는 XML 서명 확인에 실패할 다양 한 동적으로 생성 된 요소 내에서 명의 XML을 포함 하는 경우가 많습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> class solves this problem by excluding such ancestor context from the canonical subdocument.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> 정식화 된에서 이러한 부모 컨텍스트를 제외 하 여이 문제를 해결 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
          <source>Note that you cannot directly create a new instance of a canonicalization transform class.</source>
          <target state="translated">참고 정형화 변환 클래스의 새 인스턴스를 직접 만들 수 없습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
          <source>To specify a canonicalization transform, pass the Uniform Resource Identifier (URI) that describes the transform to the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A&gt;</ph> property, which is accessible from the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A&gt;</ph> property.</source>
          <target state="translated">정규화 변환을 지정 하려면 전달 된 식별자 URI (Uniform Resource) 변환에 설명 하는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A&gt;</ph> 에서 액세스할 수 있는 속성은 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
          <source>To acquire a reference to the canonicalization transform, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A&gt;</ph> property, which is accessible from the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A&gt;</ph> property.</source>
          <target state="translated">정규화 변환에 대 한 참조를 얻으려고 사용는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A&gt;</ph> 에서 액세스할 수 있는 속성은 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
          <source>The URI that describes the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> class is defined by the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl&gt;</ph> field.</source>
          <target state="translated">설명 하는 URI는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> 여 클래스를 정의 고 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl&gt;</ph> 필드입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
          <source>For more information about the exclusive C14N transform, see the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/.</source>
          <target state="translated">단독 C14N 변환에 대 한 자세한 내용은 www.w3.org/TR/xmldsig-core/에 World Wide Web Consortium (W3C)에서 사용할 수 있는 XMLDSIG 사양을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
          <source>The canonicalization algorithm is defined in the W3C Canonical XML specification, which is available at www.w3.org/2001/10/xml-exc-c14n.</source>
          <target state="translated">정형화 알고리즘이 www.w3.org/2001/10/xml-exc-c14n에서 사용할 수 있는 정식 W3C XML 사양에 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
          <source>The following code example shows how to sign and verify an XML document using the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는 서명 하 고 사용 하 여 XML 문서를 확인 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
          <source>This example creates an envelope signature.</source>
          <target state="translated">이 예제에는 봉투 (envelope) 서명을 만듭니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor(System.String)">
          <source>The namespace prefixes to canonicalize using the standard canonicalization algorithm.</source>
          <target state="translated">표준 정식화 알고리즘을 사용하여 정식화할 네임스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform" /&gt;</ph> class specifying a list of namespace prefixes to canonicalize using the standard canonicalization algorithm.</source>
          <target state="translated">표준 정식화 알고리즘을 사용하여 정식화할 네임스페이스 접두사 목록을 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor(System.String)">
          <source>The <ph id="ph1">`inclusiveNamespacesPrefixList`</ph> parameter contains a whitespace-delimited list of namespace prefixes to canonicalize using the standard canonicalization algorithm rather than the exclusive canonicalization algorithm.</source>
          <target state="translated"><ph id="ph1">`inclusiveNamespacesPrefixList`</ph> 매개 변수는 배타적 정형화 알고리즘이 아닌 표준 정형화 알고리즘을 사용 하 여 정식화 하려면 네임 스페이스 접두사의 공백 구분 목록을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor(System.String)">
          <source>To specify the default namespace, which does not have a prefix, pass the special prefix "#default".</source>
          <target state="translated">에 접두사가 없으면, 기본 네임 스페이스를 지정 하려면 특수 한 접두사 "#default"를 전달 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>