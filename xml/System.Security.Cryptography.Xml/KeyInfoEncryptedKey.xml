<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KeyInfoEncryptedKey.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d7c7a5b266ab377f0c0bfbcda18e050101cac6e5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7c7a5b266ab377f0c0bfbcda18e050101cac6e5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey">
          <source>Wraps the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /&gt;</ph> class, it to be placed as a subelement of the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfo" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /&gt;</ph> 클래스의 하위 요소로 배치할 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfo" /&gt;</ph> 클래스를 래핑합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.KeyInfoEncryptedKey&gt;</ph> class wraps the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt;</ph> class, which allows you to add the <ph id="ph3">&lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt;</ph> class as a subelement of the <ph id="ph4">&lt;xref:System.Security.Cryptography.Xml.KeyInfo&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.KeyInfoEncryptedKey&gt;</ph> 래핑하므로 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt;</ph> 추가할 수 있는 클래스는 <ph id="ph3">&lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt;</ph> 하위 클래스는 <ph id="ph4">&lt;xref:System.Security.Cryptography.Xml.KeyInfo&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey">
          <source>Initialize the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.KeyInfoEncryptedKey&gt;</ph> class to an instance of the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt;</ph> class when you need to add an encrypted session key to your encrypted XML document.</source>
          <target state="translated">초기화는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.KeyInfoEncryptedKey&gt;</ph> 클래스의 인스턴스에 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt;</ph> 암호화 된 XML 문서에 암호화 된 세션 키를 추가 해야 할 때 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey">
          <source>The following code example demonstrates how to encrypt an XML document using an asymmetric key.</source>
          <target state="translated">다음 코드 예제에서는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey">
          <source>This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</source>
          <target state="translated">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey">
          <source>The following code example demonstrates how to encrypt an XML document using an asymmetric key.</source>
          <target state="translated">다음 코드 예제에서는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey">
          <source>This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</source>
          <target state="translated">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.#ctor">
          <source>This constructor does not initialize the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.KeyInfoEncryptedKey&gt;</ph> class using an instance of the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt;</ph> class.</source>
          <target state="translated">이 생성자를 초기화 하지 않는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.KeyInfoEncryptedKey&gt;</ph> 클래스의 인스턴스를 사용 하는 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.#ctor">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey%2A&gt;</ph> property to specify an <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt;</ph> object when you use this constructor.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey%2A&gt;</ph> 속성을 통해 지정 된 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt;</ph> 이 생성자를 사용 하는 경우 개체입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.#ctor(System.Security.Cryptography.Xml.EncryptedKey)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /&gt;</ph> class using an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /&gt;</ph> 개체를 사용하여 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.#ctor(System.Security.Cryptography.Xml.EncryptedKey)">
          <source>The following code example demonstrates how to encrypt an XML document using an asymmetric key.</source>
          <target state="translated">다음 코드 예제에서는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.#ctor(System.Security.Cryptography.Xml.EncryptedKey)">
          <source>This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</source>
          <target state="translated">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /&gt;</ph> object that encapsulates an encrypted key.</source>
          <target state="translated">암호화된 키를 캡슐화하는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /&gt;</ph> 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /&gt;</ph> object that encapsulates an encrypted key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /&gt;</ph> 암호화 된 키를 캡슐화 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.KeyInfoEncryptedKey&gt;</ph> class wraps the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt;</ph> class, which allows you to add the <ph id="ph3">&lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt;</ph> class as a subelement of the <ph id="ph4">&lt;xref:System.Security.Cryptography.Xml.KeyInfo&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.KeyInfoEncryptedKey&gt;</ph> 래핑하므로 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt;</ph> 추가할 수 있는 클래스는 <ph id="ph3">&lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt;</ph> 하위 클래스는 <ph id="ph4">&lt;xref:System.Security.Cryptography.Xml.KeyInfo&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey%2A&gt;</ph> property to access the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt;</ph> class contained within the <ph id="ph3">&lt;xref:System.Security.Cryptography.Xml.KeyInfoEncryptedKey&gt;</ph> class.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey%2A&gt;</ph> 속성에 액세스는 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt;</ph> 내에 포함 된 클래스는 <ph id="ph3">&lt;xref:System.Security.Cryptography.Xml.KeyInfoEncryptedKey&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey" /&gt;</ph> 속성은 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.GetXml">
          <source>Returns an XML representation of a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /&gt;</ph> 개체의 XML 표현을 반환합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.GetXml">
          <source>An XML representation of a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /&gt;</ph> 개체의 XML 표현입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.GetXml">
          <source>The encrypted key is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">암호화된 키가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.LoadXml(System.Xml.XmlElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> object that specifies the state of the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> 개체의 상태를 지정하는 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.LoadXml(System.Xml.XmlElement)">
          <source>Parses the input <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> object and configures the internal state of the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /&gt;</ph> object to match.</source>
          <target state="translated">입력 <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> 개체를 구문 분석하여 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /&gt;</ph> 내부 상태를 이와 일치하도록 구성합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>