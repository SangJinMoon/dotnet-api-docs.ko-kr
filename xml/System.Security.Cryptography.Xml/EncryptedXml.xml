<Type Name="EncryptedXml" FullName="System.Security.Cryptography.Xml.EncryptedXml">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="407f98558a7229970674879726a9b83dc7c13812" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52593353" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EncryptedXml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedXml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedXml" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedXml" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedXml" />
  <TypeSignature Language="F#" Value="type EncryptedXml = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="caccf-101">XML 암호화 구현 프로세스 모델을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="caccf-101">Represents the process model for implementing XML encryption.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-102"><xref:System.Security.Cryptography.Xml.EncryptedXml> 클래스는.NET Framework의 XML 암호화에 사용 되는 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-102">The <xref:System.Security.Cryptography.Xml.EncryptedXml> class is the main class used for XML encryption in the .NET Framework.</span></span> <span data-ttu-id="caccf-103">XML 암호화 표준 기반 이며 상호 운용 가능한 방식으로 XML 문서 또는 기타 임의 데이터의 일부나 전부를 암호화 하는입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-103">XML Encryption is a standards-based, interoperable way to encrypt all or part of an XML document or any arbitrary data.</span></span> <span data-ttu-id="caccf-104">.NET Framework XML 암호화 클래스에 있는 XML 암호화에 대 한 World Wide Web Consortium (W3C) 사양을 구현 http://www.w3.org/TR/xmlenc-core/합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-104">The .NET Framework XML encryption classes implement the World Wide Web Consortium (W3C) specification for XML encryption located at http://www.w3.org/TR/xmlenc-core/.</span></span>  
  
 <span data-ttu-id="caccf-105">사용 된 <xref:System.Security.Cryptography.Xml.EncryptedXml> 표준 방식으로 응용 프로그램 또는 조직 간에 암호화 된 XML 데이터를 공유 해야 할 경우 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-105">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml> class whenever you need to share encrypted XML data between applications or organizations in a standard way.</span></span> <span data-ttu-id="caccf-106">XML 암호화에 대 한 W3C 사양 구현 하 여이 클래스를 사용 하 여 암호화 된 모든 데이터를 해독할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-106">Any data encrypted using this class can be decrypted by any implementation of the W3C specification for XML encryption.</span></span>  
  
 <span data-ttu-id="caccf-107">XML 암호화는 모든 일반 텍스트 XML 요소 또는 사용 하 여 문서를 `<EncryptedData>` 암호화 포함 (또는 암호화 텍스트)를 제공 하는 요소를 일반 텍스트 XML 표현 또는 기타 임의 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-107">XML encryption replaces any plain text XML element or document with the `<EncryptedData>` element, which contains an encrypted (or cipher text) representation of plain text XML or any arbitrary data.</span></span> <span data-ttu-id="caccf-108">`<EncryptedData>` 요소 ciphertext를 해독 하는 키를 찾을 수 있는 위치에 대 한 정보를 포함할 수도 있습니다 암호화 알고리즘은 일반 텍스트를 암호화 하는 데 사용 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-108">The `<EncryptedData>` element can optionally contain information about where to find a key that will decrypt the cipher text, and which cryptographic algorithm was used to encrypt the plain text.</span></span>  
  
 <span data-ttu-id="caccf-109">`<EncryptedKey>` 요소는 비슷합니다는 `<EncryptedData>` 스타일 및 사용 현황의 값을 해독 하는 키를 암호화할 수 있다는 점을 제외 하 고 요소는 `<EncryptedData>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-109">The `<EncryptedKey>` element is similar to the `<EncryptedData>` element in style and usage, except that it allows you to encrypt a key that will decrypt the value of the `<EncryptedData>` element.</span></span> <span data-ttu-id="caccf-110">합니다 `<EncryptedKey>` 요소 및 `<EncryptedData>` 요소는 암호화 되지 않은 키 포함 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-110">Note that the `<EncryptedKey>` element and the `<EncryptedData>` element will never contain an unencrypted key.</span></span>  
  
 <span data-ttu-id="caccf-111">다음 방법 중 하나를 사용 하 여 키 정보를 교환 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-111">Use one of the following methods to exchange key information:</span></span>  
  
-   <span data-ttu-id="caccf-112">키 정보를 포함 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="caccf-112">Do not include any key information.</span></span> <span data-ttu-id="caccf-113">이 옵션을 선택 하는 경우 암호화 된 데이터를 교환 하기 전에 두 당사자는 알고리즘 및 키에 동의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-113">If you choose this option, both parties must agree on an algorithm and key before they exchange encrypted data.</span></span>  
  
-   <span data-ttu-id="caccf-114">리소스 URI (Uniform Identifier) 특성에서 키의 위치를 포함 합니다 `<RetrievalMethod>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-114">Include the location of the key in the Uniform Resource Identifier (URI) attribute of the `<RetrievalMethod>` element.</span></span> <span data-ttu-id="caccf-115">양 당사자 사전에 키 위치에 동의 해야 하 고이 위치는 기밀로 유지 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-115">Both parties must agree on the key location ahead of time and this location must be kept secret.</span></span>  
  
-   <span data-ttu-id="caccf-116">키에 매핑되는 문자열 이름을 `<KeyName>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-116">Include a string name that maps to a key in the `<KeyName>` element.</span></span> <span data-ttu-id="caccf-117">양 당사자는 암호화 된 데이터를 교환 하기 전에이 매핑을 비밀로 유지 되어야 키 이름 매핑에 대 동의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-117">Both parties must agree on the key name mapping before they exchange encrypted data and this mapping must be kept secret.</span></span>  
  
-   <span data-ttu-id="caccf-118">암호화 된 키를 포함 합니다 `<EncryptedKey>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-118">Include an encrypted key in the `<EncryptedKey>` element.</span></span> <span data-ttu-id="caccf-119">양 당사자는 암호화 된 데이터를 교환 하기 전에 암호화 된 키의 암호를 해독 하는 키에 동의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-119">Both parties must agree on the key that decrypts the encrypted key before they exchange encrypted data.</span></span> <span data-ttu-id="caccf-120">이름 또는 키를 해독 하는 키의 위치를 포함할 수도 있습니다는 `<EncryptedKey>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-120">You can optionally include a name or location of the key that will decrypt the key in the `<EncryptedKey>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-121">다음 코드 예제에 사용 하는 간단한 유틸리티 클래스를 만드는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.TripleDES> XML 문서를 암호화 하는 알고리즘입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-121">The following code example demonstrates how to create a simple utility class that uses the <xref:System.Security.Cryptography.TripleDES> algorithm to encrypt an XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-122">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-122">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-123">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-123">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-124">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-124">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-125">이 예제에서는 적절 한 암호 해독 키를 검색할 암호 해독 메서드를 사용 하는 암호화 된 XML 문서에서 키 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-125">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-126">다음 코드 예제에는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-126">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="caccf-127">문서를 암호화 한 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 하는이 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-127">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-128">다음 코드 예제에는 X.509 인증서를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-128">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="caccf-129">문서를 암호화 한 대칭 세션 키를 만들고 X.509 인증서를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 하는이 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-129">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-130">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-130">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="caccf-131">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-131">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-132">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-132">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-133">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-133">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-134">이 예제에서는 적절 한 암호 해독 키를 검색할 암호 해독 메서드를 사용 하는 암호화 된 XML 문서에서 키 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-134">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-135">다음 코드 예제에는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-135">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="caccf-136">문서를 암호화 한 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 하는이 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-136">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-137">다음 코드 예제에는 X.509 인증서를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-137">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="caccf-138">문서를 암호화 한 대칭 세션 키를 만들고 X.509 인증서를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 하는이 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-138">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="caccf-139">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-139">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-140">이.NET Framework의 XML 암호화에 대 한 기본 클래스에 대 한 기본 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-140">This is the default constructor for the main class for XML encryption in the .NET Framework.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-141">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-141">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-142">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-142">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-143">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-143">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-144">이 예제에서는 적절 한 암호 해독 키를 검색할 암호 해독 메서드를 사용 하는 암호화 된 XML 문서에서 키 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-144">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-145">다음 코드 예제에는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-145">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="caccf-146">문서를 암호화 한 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 하는이 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-146">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-147">다음 코드 예제에는 X.509 인증서를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-147">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="caccf-148">문서를 암호화 한 대칭 세션 키를 만들고 X.509 인증서를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 하는이 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-148">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml (System.Xml.XmlDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (document As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml(System::Xml::XmlDocument ^ document);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.EncryptedXml : System.Xml.XmlDocument -&gt; System.Security.Cryptography.Xml.EncryptedXml" Usage="new System.Security.Cryptography.Xml.EncryptedXml document" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="caccf-149">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 개체를 초기화하는 데 사용되는 <see cref="T:System.Xml.XmlDocument" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-149">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-150">지정된 XML 문서를 사용하여 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-150">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-151">이 생성자를 사용 하는 <xref:System.Security.Cryptography.Xml.EncryptedXml> XML 문서를 암호화를 지정 하려는 경우 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-151">Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt.</span></span>  <span data-ttu-id="caccf-152">`document` 매개 변수는 나중에 암호화 된 XML을 형성 하는 XML 요소를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-152">The `document` parameter comprises the XML elements that later form the encrypted XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-153">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-153">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-154">이 예제에서는 적절 한 암호 해독 키를 검색할 암호 해독 메서드를 사용 하는 암호화 된 XML 문서에서 키 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-154">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-155">다음 코드 예제에는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-155">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="caccf-156">문서를 암호화 한 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 하는이 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-156">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml (System.Xml.XmlDocument document, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml(System::Xml::XmlDocument ^ document, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.EncryptedXml : System.Xml.XmlDocument * System.Security.Policy.Evidence -&gt; System.Security.Cryptography.Xml.EncryptedXml" Usage="new System.Security.Cryptography.Xml.EncryptedXml (document, evidence)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="caccf-157">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 개체를 초기화하는 데 사용되는 <see cref="T:System.Xml.XmlDocument" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-157">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="caccf-158">
            <see cref="T:System.Xml.XmlDocument" /> 개체와 관련된 <see cref="T:System.Security.Policy.Evidence" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-158">An <see cref="T:System.Security.Policy.Evidence" /> object associated with the <see cref="T:System.Xml.XmlDocument" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-159">지정된 XML 문서와 증명 정보를 사용하여 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-159">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document and evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-160">이 생성자를 사용 하는 <xref:System.Security.Cryptography.Xml.EncryptedXml> XML 문서를 암호화 하 고 보안 증명 정보를 제공할 지정 하려는 경우 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-160">Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt and provide security evidence.</span></span> <span data-ttu-id="caccf-161">`document` 매개 변수는 나중에 암호화 된 XML을 형성 하는 XML 요소를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-161">The `document` parameter comprises the XML elements that later form the encrypted XML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyNameMapping">
      <MemberSignature Language="C#" Value="public void AddKeyNameMapping (string keyName, object keyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddKeyNameMapping(string keyName, object keyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddKeyNameMapping (keyName As String, keyObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddKeyNameMapping(System::String ^ keyName, System::Object ^ keyObject);" />
      <MemberSignature Language="F#" Value="member this.AddKeyNameMapping : string * obj -&gt; unit" Usage="encryptedXml.AddKeyNameMapping (keyName, keyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="keyObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <span data-ttu-id="caccf-162">
            <paramref name="keyObject" />에 매핑할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-162">The name to map to <paramref name="keyObject" />.</span>
          </span>
        </param>
        <param name="keyObject">
          <span data-ttu-id="caccf-163">
            <paramref name="keyName" />에 매핑할 대칭 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-163">The symmetric key to map to <paramref name="keyName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-164">대칭 키나 비대칭 키와 키 이름 간의 매핑을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-164">Defines a mapping between a key name and a symmetric key or an asymmetric key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-165"><xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> 메서드 문자열 이름에 대칭 키나 비대칭 키를 매핑할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-165">The <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> method allows you to map a symmetric key or an asymmetric key to a string name.</span></span> <span data-ttu-id="caccf-166">이 메서드는 값을 추가 합니다 `keyName` 및 `keyObject` 유효한 키 테이블에 대 한 매개 변수 이름 매핑.</span><span class="sxs-lookup"><span data-stu-id="caccf-166">This method adds the values of the `keyName` and `keyObject` parameters to a table of valid key name mappings.</span></span>  
  
 <span data-ttu-id="caccf-167">사용 된 <xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A> 키 이름 매핑 테이블의 선택을 취소 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-167">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A> method to clear the key name mappings table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-168">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-168">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-169">이 예제에서는 적절 한 암호 해독 키를 검색할 암호 해독 메서드를 사용 하는 암호화 된 XML 문서에서 키 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-169">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="caccf-170">
            <paramref name="keyName" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-170">The value of the <paramref name="keyName" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="caccf-171">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-171">-or-</span>
          </span>
          <span data-ttu-id="caccf-172">
            <paramref name="keyObject" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-172">The value of the <paramref name="keyObject" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="caccf-173">
            <paramref name="keyObject" /> 매개 변수의 값이 RSA 알고리즘이나 대칭 키가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-173">The value of the <paramref name="keyObject" /> parameter is not an RSA algorithm or a symmetric key.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClearKeyNameMappings">
      <MemberSignature Language="C#" Value="public void ClearKeyNameMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearKeyNameMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearKeyNameMappings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearKeyNameMappings();" />
      <MemberSignature Language="F#" Value="member this.ClearKeyNameMappings : unit -&gt; unit" Usage="encryptedXml.ClearKeyNameMappings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="caccf-174">모든 키 이름 매핑을 다시 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-174">Resets all key name mapping.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-175">이 메서드를 사용 하 여 사용 하 여 설정 된 모든 키 이름 매핑을 선택을 취소 합니다 <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="caccf-175">Use this method to clear all key name mapping that you have set using the <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptData">
      <MemberSignature Language="C#" Value="public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecryptData(class System.Security.Cryptography.Xml.EncryptedData encryptedData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DecryptData(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C#" Value="public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecryptData(class System.Security.Cryptography.Xml.EncryptedData encryptedData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DecryptData(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.DecryptData : System.Security.Cryptography.Xml.EncryptedData * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="encryptedXml.DecryptData (encryptedData, symAlg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData">
          <span data-ttu-id="caccf-176">해독할 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-176">The data to decrypt.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">
          <span data-ttu-id="caccf-177">
            <paramref name="encryptedData" />을 해독하는 데 사용되는 대칭 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-177">The symmetric key used to decrypt <paramref name="encryptedData" />.</span>
          </span>
        </param>
        <param name="symAlg">
          <span data-ttu-id="caccf-178">
            <paramref name="encryptedData" />을 해독하는 데 사용되는 대칭 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-178">The symmetric key used to decrypt <paramref name="encryptedData" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-179">지정된 대칭 알고리즘을 사용하여 <see langword="&lt;EncryptedData&gt;" /> 요소를 해독합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-179">Decrypts an <see langword="&lt;EncryptedData&gt;" /> element using the specified symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="caccf-180">해독된 원시 일반 텍스트가 들어 있는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-180">A byte array that contains the raw decrypted plain text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-181">사용 된 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> 암호를 해독 하는 메서드는 <xref:System.Security.Cryptography.Xml.EncryptedData> 대칭 키를 사용 하 여 요소.</span><span class="sxs-lookup"><span data-stu-id="caccf-181">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method to decrypt an <xref:System.Security.Cryptography.Xml.EncryptedData> element using a symmetric key.</span></span>  
  
 <span data-ttu-id="caccf-182">유의 합니다 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> 메서드를만 최상위 해독 <`EncryptedData`> 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-182">Note that the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method only decrypts top-level <`EncryptedData`> tags.</span></span>  <span data-ttu-id="caccf-183">경우에는 하나 이상의 <`EncryptedData`> 태그 암호화 되어 있고 더 높은 수준 내에 포함 된 <`EncryptedData`> 태그를 호출할 수 있습니다는 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> 메서드 각각에 대해 개별적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-183">In cases where one or more <`EncryptedData`> tags have been encrypted and are contained within higher level <`EncryptedData`> tags, you can call the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method separately for each one.</span></span>  <span data-ttu-id="caccf-184">참조 된 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> 메서드 코드 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-184">See the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method for a code example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-185">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-185">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-186">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-186">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="caccf-187">
            <paramref name="encryptedData" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-187">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="caccf-188">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-188">-or-</span>
          </span>
          <span data-ttu-id="caccf-189">
            <paramref name="symmetricAlgorithm" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-189">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptDocument">
      <MemberSignature Language="C#" Value="public void DecryptDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DecryptDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument" />
      <MemberSignature Language="VB.NET" Value="Public Sub DecryptDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DecryptDocument();" />
      <MemberSignature Language="F#" Value="member this.DecryptDocument : unit -&gt; unit" Usage="encryptedXml.DecryptDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="caccf-190">
            <see langword="&lt;EncryptedData&gt;" /> 클래스를 초기화하는 동안 지정된 XML 문서의 모든 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 요소를 해독합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-190">Decrypts all <see langword="&lt;EncryptedData&gt;" /> elements of the XML document that were specified during initialization of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-191">합니다 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> 메서드를 모두 해독 `<EncryptedData>` 초기화 하는 동안 XML 문서의 요소를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-191">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts all `<EncryptedData>` elements of the XML document loaded during initialization.</span></span> <span data-ttu-id="caccf-192">이 메서드를 호출한 후 모든 `<EncryptedData>` 문서의 요소에에서 일반 텍스트 버전으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-192">After you call this method, all `<EncryptedData>` elements in the document are replaced with plain text versions.</span></span>  
  
 <span data-ttu-id="caccf-193">합니다 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> 메서드를 최상위 해독 `<EncryptedData>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-193">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts only top-level `<EncryptedData>` elements.</span></span>  <span data-ttu-id="caccf-194">호출 해야 합니다 (한 번 암호화 된 문서)을 슈퍼로 암호화 된 문서를 해독 하는 경우는 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> 모든 때까지 반복적으로 메서드는 `<EncryptedData>` 있는 요소를 암호 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-194">If you need to decrypt a super-encrypted document (a document that is encrypted more than once), you must call the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method repeatedly until all the `<EncryptedData>` elements have been decrypted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="caccf-195"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> 메서드는 유효한 XML 데이터를 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-195">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts only valid XML data.</span></span> <span data-ttu-id="caccf-196">임의의 데이터를 암호 해독에 사용 된 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="caccf-196">To decrypt arbitrary data, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method.</span></span>  
  
 <span data-ttu-id="caccf-197">X.509 인증서를 사용 하 여 XML 암호화를 사용 하는 Microsoft Enhanced Cryptographic Provider 설치 되어 있어야 하며 X.509 인증서에 향상 된 공급자를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-197">To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider.</span></span> <span data-ttu-id="caccf-198">Microsoft Enhanced Cryptographic Provider 설치 되어 있지 않은 경우 X.509 인증서에 향상 된 공급자를 사용 하지 않습니다는 <xref:System.Security.Cryptography.CryptographicException> "알 수 없는 오류"를 사용 하 여이 throw 됩니다 XML 문서를 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-198">If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an "Unknown Error" will be thrown when you decrypt an XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-199">다음 코드 예제에는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-199">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="caccf-200">문서를 암호화 한 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 하는이 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-200">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-201">다음 코드 예제에는 X.509 인증서를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-201">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="caccf-202">문서를 암호화 한 대칭 세션 키를 만들고 X.509 인증서를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 하는이 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-202">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-203">다음 코드 예제에는 상위 수준 암호를 해독 하는 방법을 보여 줍니다. <`EncryptedData`> 다른 암호화를 포함 하는 태그 <`EncryptedData`> 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-203">The following code example demonstrates how to decrypt a high level <`EncryptedData`> tag that contains another encrypted <`EncryptedData`> tag.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/samples/snippets/csharp/VS_Snippets_Misc/Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="caccf-204">문서를 해독하는 데 사용된 암호화 키를 찾을 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-204">The cryptographic key used to decrypt the document was not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptEncryptedKey">
      <MemberSignature Language="C#" Value="public virtual byte[] DecryptEncryptedKey (System.Security.Cryptography.Xml.EncryptedKey encryptedKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DecryptEncryptedKey(class System.Security.Cryptography.Xml.EncryptedKey encryptedKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ DecryptEncryptedKey(System::Security::Cryptography::Xml::EncryptedKey ^ encryptedKey);" />
      <MemberSignature Language="F#" Value="abstract member DecryptEncryptedKey : System.Security.Cryptography.Xml.EncryptedKey -&gt; byte[]&#xA;override this.DecryptEncryptedKey : System.Security.Cryptography.Xml.EncryptedKey -&gt; byte[]" Usage="encryptedXml.DecryptEncryptedKey encryptedKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Security.Cryptography.Xml.EncryptedKey" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="caccf-205">검색할 키가 들어 있는 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-205">The <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> object that contains the key to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-206">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 요소로 표시되는 키를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-206">Determines the key represented by the <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="caccf-207">키가 들어 있는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-207">A byte array that contains the key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-208">합니다 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey%2A> 메서드 내에 포함 된 암호화 된 키를 해독 합니다 `<EncryptedKey>` XML 문서의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-208">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span>  
  
 <span data-ttu-id="caccf-209">이 재귀 메서드 나타내는 키를 찾습니다는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-209">This recursive method finds the key represented by the <xref:System.Security.Cryptography.Xml.EncryptedKey> object.</span></span> <span data-ttu-id="caccf-210"><xref:System.Security.Cryptography.Xml.EncryptedKey> 다른 개체가 포함 될 수 있습니다 <xref:System.Security.Cryptography.Xml.EncryptedKey> 지정 하는 개체는 <xref:System.Security.Cryptography.Xml.KeyInfo> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-210">Note that an <xref:System.Security.Cryptography.Xml.EncryptedKey> object can contain another <xref:System.Security.Cryptography.Xml.EncryptedKey> object that specifies its <xref:System.Security.Cryptography.Xml.KeyInfo> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="caccf-211">
            <paramref name="encryptedKey" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-211">The value of the <paramref name="encryptedKey" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="caccf-212">
            <paramref name="encryptedKey" /> 매개 변수의 값이 3DES(Triple DES) 키 랩 알고리즘이나 Rijndael이라고도 하는 AES(고급 암호화 표준) 키 랩 알고리즘이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-212">The value of the <paramref name="encryptedKey" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DecryptKey">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-213">
            <see langword="&lt;EncryptedKey&gt;" /> 요소를 해독합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-213">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-214">사용 하 여는 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> 암호를 해독 하는 메서드는 `<EncryptedKey>` 요소 및 해당 요소를 암호 해독 하는 데 키를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-214">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method to decrypt an `<EncryptedKey>` element and retrieve the key used to decrypt that element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member DecryptKey : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.DecryptKey (keyData, symAlg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="caccf-215">암호화된 <see langword="&lt;EncryptedKey&gt;" /> 요소를 나타내는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-215">An array of bytes that represents an encrypted <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">
          <span data-ttu-id="caccf-216">
            <paramref name="keyData" />을 해독하는 데 사용되는 대칭 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-216">The symmetric key used to decrypt <paramref name="keyData" />.</span>
          </span>
        </param>
        <param name="symAlg">
          <span data-ttu-id="caccf-217">
            <paramref name="keyData" />을 해독하는 데 사용되는 대칭 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-217">The symmetric key used to decrypt <paramref name="keyData" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-218">대칭 알고리즘을 사용하여 <see langword="&lt;EncryptedKey&gt;" /> 요소를 해독합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-218">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element using a symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="caccf-219">일반 텍스트 키가 들어 있는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-219">A byte array that contains the plain text key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-220">합니다 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> 메서드 내에 포함 된 암호화 된 키를 해독 합니다 `<EncryptedKey>` XML 문서의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-220">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span> <span data-ttu-id="caccf-221">이 메서드는 값은 `symmetricAlgorithm` Triple DES 알고리즘 또는 AES 키 래핑 알고리즘 (Rijndael이 라고도 함)을 나타내는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-221">This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="caccf-222">
            <paramref name="keyData" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-222">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="caccf-223">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-223">-or-</span>
          </span>
          <span data-ttu-id="caccf-224">
            <paramref name="symmetricAlgorithm" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-224">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="caccf-225">
            <paramref name="symmetricAlgorithm" /> 요소의 값이 3DES(Triple DES) 키 랩알고리즘이나 Rijndael이라고도 하는 AES(고급 암호화 표준) 키 랩 알고리즘이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-225">The value of the <paramref name="symmetricAlgorithm" /> element is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool useOAEP) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool fOAEP) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member DecryptKey : byte[] * System.Security.Cryptography.RSA * bool -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.DecryptKey (keyData, rsa, fOAEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="rsa" Type="System.Security.Cryptography.RSA" Index="1" />
        <Parameter Name="useOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
        <Parameter Name="fOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="caccf-226">암호화된 <see langword="&lt;EncryptedKey&gt;" /> 요소를 나타내는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-226">An array of bytes that represents an encrypted <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
        </param>
        <param name="rsa">
          <span data-ttu-id="caccf-227">
            <paramref name="keyData" />을 해독하는 데 사용되는 비대칭 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-227">The asymmetric key used to decrypt <paramref name="keyData" />.</span>
          </span>
        </param>
        <param name="useOAEP">
          <span data-ttu-id="caccf-228">OAEP(Optimal Asymmetric Encryption Padding)의 사용 여부를 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-228">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</span>
          </span>
        </param>
        <param name="fOAEP">
          <span data-ttu-id="caccf-229">OAEP(Optimal Asymmetric Encryption Padding)의 사용 여부를 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-229">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-230">비대칭 알고리즘을 사용하여 <see langword="&lt;EncryptedKey&gt;" /> 요소를 해독합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-230">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element using an asymmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="caccf-231">일반 텍스트 키가 들어 있는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-231">A byte array that contains the plain text key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-232">합니다 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> 메서드 내에 포함 된 암호화 된 키를 해독 합니다 `<EncryptedKey>` XML 문서의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-232">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span> <span data-ttu-id="caccf-233">이 메서드는 값은 `rsa` RSA PKCS 1 v1.5 알고리즘 또는 PKCS #1 RSA 형식 2 알고리즘 (OAEP 안쪽 여백 라고도 함)을 나타내는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-233">This method accepts a value for the `rsa` parameter that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP padding).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="caccf-234">
            <paramref name="keyData" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-234">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="caccf-235">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-235">-or-</span>
          </span>
          <span data-ttu-id="caccf-236">
            <paramref name="rsa" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-236">The value of the <paramref name="rsa" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DocumentEvidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence DocumentEvidence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence DocumentEvidence" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentEvidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ DocumentEvidence { System::Security::Policy::Evidence ^ get(); void set(System::Security::Policy::Evidence ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentEvidence : System.Security.Policy.Evidence with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-237">
            <see cref="T:System.Xml.XmlDocument" /> 개체가 생성되는 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 개체의 증명 정보를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-237">Gets or sets the evidence of the <see cref="T:System.Xml.XmlDocument" /> object from which the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object is constructed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="caccf-238">
            <see cref="T:System.Security.Policy.Evidence" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-238">An <see cref="T:System.Security.Policy.Evidence" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-239">XML 문서를 만드는 데 사용 하는 경우는 <xref:System.Security.Cryptography.Xml.EncryptedXml> 개체에 보안 증명 정보, 증명 정보를 추가 해야 합니다 <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-239">If the XML document used to create the <xref:System.Security.Cryptography.Xml.EncryptedXml> object has any security evidence, you should add the evidence to the <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> property.</span></span>  <span data-ttu-id="caccf-240">연결 된이 속성을 설정 하지 않으면 <xref:System.Security.Cryptography.Xml.CipherReference> 개체는 부여 되지 것입니다 필수 사용 권한 집합을 하기 때문에 역참조 해서는 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-240">If you do not set this property, any associated <xref:System.Security.Cryptography.Xml.CipherReference> objects will not be dereferenced because they will not be granted the required permission set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-241">XML 암호화에 사용되는 인코딩을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-241">Gets or sets the encoding used for XML encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="caccf-242">
            <see cref="T:System.Text.Encoding" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-242">An <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-243">U t F-8 인코딩이 기본 XML 암호화에 대 한 인코딩입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-243">UTF-8 encoding is the default encoding for XML encryption.</span></span> <span data-ttu-id="caccf-244">다른 유형의에서 인코딩을 지정 하려면이 속성을 사용할 수는 <xref:System.Text.Encoding> u t F-16 또는 ASCII와 같은 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-244">You can use this property to specify other types of encoding from the <xref:System.Text.Encoding> class, such as UTF-16 or ASCII.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Encrypt">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-245">키 매핑 테이블의 지정된 인증서나 키를 사용하여 요소의 외부 XML을 암호화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-245">Encrypts the outer XML of an element using the specified certificate or key in the key mapping table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="caccf-246">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-246">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-247">다음 코드 예제에는 X.509 인증서를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-247">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="caccf-248">문서를 암호화 한 대칭 세션 키를 만들고 X.509 인증서를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 하는이 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-248">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Xml.EncryptedData Encrypt(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (inputElement As XmlElement, certificate As X509Certificate2) As EncryptedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Xml::EncryptedData ^ Encrypt(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : System.Xml.XmlElement * System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.Security.Cryptography.Xml.EncryptedData" Usage="encryptedXml.Encrypt (inputElement, certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="caccf-249">암호화할 XML 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-249">The XML element to encrypt.</span>
          </span>
        </param>
        <param name="certificate">
          <span data-ttu-id="caccf-250">암호화에 사용할 X.509 인증서입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-250">The X.509 certificate to use for encryption.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-251">지정된 X.509 인증서를 사용하여 요소의 외부 XML을 암호화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-251">Encrypts the outer XML of an element using the specified X.509 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="caccf-252">암호화된 XML 데이터를 나타내는 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-252">An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> element that represents the encrypted XML data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-253"><xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> 메서드는 인증서를 사용 하 여 요소의 외부 XML을 암호화 하는 편리한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-253">The <xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> method is a convenient way to encrypt the outer XML of an element using a certificate.</span></span> <span data-ttu-id="caccf-254">이 메서드는 XML 요소를 암호화 하는 256 비트 표준 AES (고급 암호화) 세션 키를 생성 한 다음 암호화 하 고 사용 하 여 AES 키 서명 된 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-254">This method generates a 256-bit Advanced Encryption Standard (AES) session key to encrypt an XML element and then encrypts and signs the AES key using the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span> <span data-ttu-id="caccf-255">합니다 <xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> 메서드가 반환 됩니다. 결과 XML을 <xref:System.Security.Cryptography.Xml.EncryptedData> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-255">The <xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> method then returns the resulting XML as an <xref:System.Security.Cryptography.Xml.EncryptedData> element.</span></span>  
  
 <span data-ttu-id="caccf-256">암호화를 통해 더 많은 제어를 해야 하므로 배치할 수 있습니다에 암호화 된 정보를는 `<CipherReference>` 요소 전체 XML 요소 또는 내용만 되어야 하는지 여부를 지정 하거나 사용 하 여 암호화를 <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-256">If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.</span></span>  
  
 <span data-ttu-id="caccf-257">X.509 인증서를 사용 하 여 XML 암호화를 사용 하는 Microsoft Enhanced Cryptographic Provider 설치 되어 있어야 하며 X.509 인증서에 향상 된 공급자를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-257">To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider.</span></span> <span data-ttu-id="caccf-258">Microsoft Enhanced Cryptographic Provider 설치 되어 있지 않은 경우 X.509 인증서에 향상 된 공급자를 사용 하지 않습니다는 <xref:System.Security.Cryptography.CryptographicException> "알 수 없는 오류"를 사용 하 여이 throw 됩니다 XML 문서를 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-258">If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an "Unknown Error" will be thrown when you decrypt an XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-259">다음 코드 예제에는 X.509 인증서를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-259">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="caccf-260">문서를 암호화 한 대칭 세션 키를 만들고 X.509 인증서를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 하는이 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-260">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="caccf-261">
            <paramref name="inputElement" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-261">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="caccf-262">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-262">-or-</span>
          </span>
          <span data-ttu-id="caccf-263">
            <paramref name="certificate" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-263">The value of the <paramref name="certificate" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="caccf-264">
            <paramref name="certificate" /> 매개 변수의 값이 RSA 키 알고리즘을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-264">The value of the <paramref name="certificate" /> parameter does not represent an RSA key algorithm.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, string keyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Xml.EncryptedData Encrypt(class System.Xml.XmlElement inputElement, string keyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (inputElement As XmlElement, keyName As String) As EncryptedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Xml::EncryptedData ^ Encrypt(System::Xml::XmlElement ^ inputElement, System::String ^ keyName);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : System.Xml.XmlElement * string -&gt; System.Security.Cryptography.Xml.EncryptedData" Usage="encryptedXml.Encrypt (inputElement, keyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="keyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="caccf-265">암호화할 XML 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-265">The XML element to encrypt.</span>
          </span>
        </param>
        <param name="keyName">
          <span data-ttu-id="caccf-266">키 매핑 테이블에서 찾을 수 있는 키 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-266">A key name that can be found in the key mapping table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-267">키 매핑 테이블의 지정된 키를 사용하여 요소의 외부 XML을 암호화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-267">Encrypts the outer XML of an element using the specified key in the key mapping table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="caccf-268">암호화된 XML 데이터를 나타내는 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-268">An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that represents the encrypted XML data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-269">이 메서드는 키 이름을 사용 하 여 요소의 외부 XML을 암호화 하는 편리한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-269">This method is a convenient way to encrypt the outer XML of an element using a key name.</span></span> <span data-ttu-id="caccf-270">암호화를 통해 더 많은 제어를 해야 하므로 배치할 수 있습니다에 암호화 된 정보를는 `<CipherReference>` 요소 전체 XML 요소 또는 내용만 되어야 하는지 여부를 지정 하거나 사용 하 여 암호화를 <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-270">If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.</span></span>  
  
 <span data-ttu-id="caccf-271">목록은 모든 지원 되는 알고리즘 목록은 연관 된 상수 필드는 <xref:System.Security.Cryptography.Xml.EncryptedXml> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-271">For a list of all supported algorithms, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-272">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-272">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="caccf-273">
            <paramref name="inputElement" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-273">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="caccf-274">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-274">-or-</span>
          </span>
          <span data-ttu-id="caccf-275">
            <paramref name="keyName" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-275">The value of the <paramref name="keyName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="caccf-276">
            <paramref name="keyName" /> 매개 변수의 값이 등록된 키 이름 쌍과 일치하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-276">The value of the <paramref name="keyName" /> parameter does not match a registered key name pair.</span>
          </span>
          <span data-ttu-id="caccf-277">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-277">-or-</span>
          </span>
          <span data-ttu-id="caccf-278">
            <paramref name="keyName" /> 매개 변수에 설명된 암호화 키가 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-278">The cryptographic key described by the <paramref name="keyName" /> parameter is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptData">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-279">대칭 알고리즘을 사용하여 XML 데이터를 암호화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-279">Encrypts XML data using a symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="caccf-280">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-280">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-281">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-281">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-282">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-282">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-283">이 예제에서는 적절 한 암호 해독 키를 검색할 암호 해독 메서드를 사용 하는 암호화 된 XML 문서에서 키 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-283">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-284">다음 코드 예제에는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-284">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="caccf-285">문서를 암호화 한 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 하는이 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-285">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptData">
      <MemberSignature Language="C#" Value="public byte[] EncryptData (byte[] plaintext, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(unsigned int8[] plaintext, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(cli::array &lt;System::Byte&gt; ^ plaintext, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C#" Value="public byte[] EncryptData (byte[] plainText, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(unsigned int8[] plainText, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (plainText As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(cli::array &lt;System::Byte&gt; ^ plainText, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EncryptData : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="encryptedXml.EncryptData (plainText, symAlg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plaintext" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
        <Parameter Name="plainText" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="plaintext">
          <span data-ttu-id="caccf-286">암호화할 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-286">The data to encrypt.</span>
          </span>
        </param>
        <param name="plainText">
          <span data-ttu-id="caccf-287">암호화할 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-287">The data to encrypt.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">
          <span data-ttu-id="caccf-288">암호화에 사용할 대칭 알고리즘입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-288">The symmetric algorithm to use for encryption.</span>
          </span>
        </param>
        <param name="symAlg">
          <span data-ttu-id="caccf-289">암호화에 사용할 대칭 알고리즘입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-289">The symmetric algorithm to use for encryption.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-290">지정된 대칭 알고리즘을 사용하여 지정된 바이트 배열의 데이터를 암호화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-290">Encrypts data in the specified byte array using the specified symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="caccf-291">암호화된 데이터의 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-291">A byte array of encrypted data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-292">반환된 된 바이트 배열에 배치할 수는 `<CipherValue>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-292">The returned byte array can be placed into a `<CipherValue>` element.</span></span> <span data-ttu-id="caccf-293">이 메서드는 데이터에 지정 된 것으로 가정 합니다 `plaintext` 매개 변수는 XML 데이터를 포함 하는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-293">This method assumes that the data specified in the `plaintext` parameter is a byte array that contains XML data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-294">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-294">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-295">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-295">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-296">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-296">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-297">이 예제에서는 적절 한 암호 해독 키를 검색할 암호 해독 메서드를 사용 하는 암호화 된 XML 문서에서 키 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-297">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="caccf-298">다음 코드 예제에는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-298">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="caccf-299">문서를 암호화 한 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 하는이 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-299">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="caccf-300">
            <paramref name="plaintext" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-300">The value of the <paramref name="plaintext" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="caccf-301">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-301">-or-</span>
          </span>
          <span data-ttu-id="caccf-302">
            <paramref name="symmetricAlgorithm" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-302">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="caccf-303">지정된 매개 변수를 사용하여 데이터를 암호화할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-303">The data could not be encrypted using the specified parameters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptData">
      <MemberSignature Language="C#" Value="public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm, bool content);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C#" Value="public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symAlg, bool content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.SymmetricAlgorithm symAlg, bool content) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (inputElement As XmlElement, symAlg As SymmetricAlgorithm, content As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg, bool content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EncryptData : System.Xml.XmlElement * System.Security.Cryptography.SymmetricAlgorithm * bool -&gt; byte[]" Usage="encryptedXml.EncryptData (inputElement, symAlg, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="content" Type="System.Boolean" Index="2" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="caccf-304">암호화할 요소나 요소의 내용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-304">The element or its contents to encrypt.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">
          <span data-ttu-id="caccf-305">암호화에 사용할 대칭 알고리즘입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-305">The symmetric algorithm to use for encryption.</span>
          </span>
        </param>
        <param name="symAlg">
          <span data-ttu-id="caccf-306">암호화에 사용할 대칭 알고리즘입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-306">The symmetric algorithm to use for encryption.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="caccf-307">요소의 내용만 암호화하면 <see langword="true" />이고, 전체 요소를 암호화하면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-307">
              <see langword="true" /> to encrypt only the contents of the element; <see langword="false" /> to encrypt the entire element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-308">지정된 대칭 알고리즘을 사용하여 지정된 요소나 요소의 내용을 암호화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-308">Encrypts the specified element or its contents using the specified symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="caccf-309">암호화된 데이터가 들어 있는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-309">A byte array that contains the encrypted data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-310">반환 된 바이트 배열 데이터의 값인는 `<CipherValue>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-310">The returned byte array data is the value of the `<CipherValue>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-311">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-311">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-312">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-312">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="caccf-313">
            <paramref name="inputElement" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-313">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="caccf-314">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-314">-or-</span>
          </span>
          <span data-ttu-id="caccf-315">
            <paramref name="symmetricAlgorithm" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-315">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptKey">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-316">수신자가 <see langword="&lt;EncryptedData&gt;" /> 요소를 해독하기 위해 사용할 키를 암호화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-316">Encrypts the key that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-317">사용 합니다 <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> 받는 사람 암호를 해독 하는 데 사용 하는 키를 암호화 하는 메서드는 `<EncryptedData>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-317">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="caccf-318">이 메서드 내에서 암호화 된 키를 배치는 `<EncryptedKey>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-318">This method places the encrypted key within an `<EncryptedKey>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-319">다음 코드 예제에는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-319">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="caccf-320">문서를 암호화 한 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 하는이 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-320">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member EncryptKey : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.EncryptKey (keyData, symAlg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="caccf-321">암호화할 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-321">The key to encrypt.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">
          <span data-ttu-id="caccf-322">
            <paramref name="keyData" />을 암호화하는 데 사용되는 대칭 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-322">The symmetric key used to encrypt <paramref name="keyData" />.</span>
          </span>
        </param>
        <param name="symAlg">
          <span data-ttu-id="caccf-323">
            <paramref name="keyData" />을 암호화하는 데 사용되는 대칭 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-323">The symmetric key used to encrypt <paramref name="keyData" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-324">수신자가 <see langword="&lt;EncryptedData&gt;" /> 요소를 해독하기 위해 사용할 키를 대칭 알고리즘을 사용하여 암호화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-324">Encrypts a key using a symmetric algorithm that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="caccf-325">
            <paramref name="keyData" /> 매개 변수의 암호화된 값을 나타내는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-325">A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-326">사용 합니다 <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> 받는 사람 암호를 해독 하는 데 사용 하는 키를 암호화 하는 메서드는 `<EncryptedData>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-326">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="caccf-327">이 메서드는 값은 `symmetricAlgorithm` Triple DES 알고리즘 또는 AES 키 래핑 알고리즘 (Rijndael이 라고도 함)을 나타내는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-327">This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).</span></span>  
  
 <span data-ttu-id="caccf-328">이 메서드가 자동으로 내에서 암호화 된 키를 설정 하 고 하지 않으며 확인을 `<EncryptedKey>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-328">Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.</span></span>  <span data-ttu-id="caccf-329">수동으로 만들어야 합니다를 `<EncryptedKey>` 문서 내의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-329">You must manually create the `<EncryptedKey>` element within your document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="caccf-330">
            <paramref name="keyData" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-330">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="caccf-331">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-331">-or-</span>
          </span>
          <span data-ttu-id="caccf-332">
            <paramref name="symmetricAlgorithm" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-332">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="caccf-333">
            <paramref name="symmetricAlgorithm" /> 매개 변수의 값이 3DES(Triple DES) 키 랩 알고리즘이나 Rijndael이라고도 하는 AES(고급 암호화 표준) 키 랩 알고리즘이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-333">The value of the <paramref name="symmetricAlgorithm" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool useOAEP) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool fOAEP) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member EncryptKey : byte[] * System.Security.Cryptography.RSA * bool -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.EncryptKey (keyData, rsa, fOAEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="rsa" Type="System.Security.Cryptography.RSA" Index="1" />
        <Parameter Name="useOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
        <Parameter Name="fOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="caccf-334">암호화할 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-334">The key to encrypt.</span>
          </span>
        </param>
        <param name="rsa">
          <span data-ttu-id="caccf-335">
            <paramref name="keyData" />를 암호화하는 데 사용되는 비대칭 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-335">The asymmetric key used to encrypt <paramref name="keyData" />.</span>
          </span>
        </param>
        <param name="useOAEP">
          <span data-ttu-id="caccf-336">OAEP(Optimal Asymmetric Encryption Padding)의 사용 여부를 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-336">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</span>
          </span>
        </param>
        <param name="fOAEP">
          <span data-ttu-id="caccf-337">OAEP(Optimal Asymmetric Encryption Padding)의 사용 여부를 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-337">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-338">수신자가 <see langword="&lt;EncryptedData&gt;" /> 요소를 해독하기 위해 사용할 키를 암호화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-338">Encrypts the key that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="caccf-339">
            <paramref name="keyData" /> 매개 변수의 암호화된 값을 나타내는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-339">A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-340">사용 합니다 <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> 받는 사람 암호를 해독 하는 데 사용 하는 키를 암호화 하는 메서드는 `<EncryptedData>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-340">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="caccf-341">이 메서드는 값 `rsa` RSA PKCS 1 v1.5 알고리즘 또는 PKCS #1 RSA 형식 2 알고리즘 (OAEP 라고도 함)를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-341">This method accepts a value for `rsa` that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP).</span></span>  
  
 <span data-ttu-id="caccf-342">이 메서드가 자동으로 내에서 암호화 된 키를 설정 하 고 하지 않으며 확인을 `<EncryptedKey>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-342">Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.</span></span>  <span data-ttu-id="caccf-343">수동으로 만들어야 합니다를 `<EncryptedKey>` 문서 내의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-343">You must manually create the `<EncryptedKey>` element within your document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-344">다음 코드 예제에는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-344">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="caccf-345">문서를 암호화 한 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 하는이 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-345">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="caccf-346">
            <paramref name="keyData" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-346">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="caccf-347">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-347">-or-</span>
          </span>
          <span data-ttu-id="caccf-348">
            <paramref name="rsa" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-348">The value of the <paramref name="rsa" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionIV">
      <MemberSignature Language="C#" Value="public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDecryptionIV(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDecryptionIV(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C#" Value="public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDecryptionIV(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDecryptionIV(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionIV : System.Security.Cryptography.Xml.EncryptedData * string -&gt; byte[]&#xA;override this.GetDecryptionIV : System.Security.Cryptography.Xml.EncryptedData * string -&gt; byte[]" Usage="encryptedXml.GetDecryptionIV (encryptedData, symAlgUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithmUri" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
        <Parameter Name="symAlgUri" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData">
          <span data-ttu-id="caccf-349">검색할 IV(초기화 벡터)가 들어 있는 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-349">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the initialization vector (IV) to retrieve.</span>
          </span>
        </param>
        <param name="symmetricAlgorithmUri">
          <span data-ttu-id="caccf-350">
            <paramref name="encryptedData" /> 값과 관련된 암호화 알고리즘을 설명하는 URI(Uniform Resource Identifier)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-350">The Uniform Resource Identifier (URI) that describes the cryptographic algorithm associated with the <paramref name="encryptedData" /> value.</span>
          </span>
        </param>
        <param name="symAlgUri">
          <span data-ttu-id="caccf-351">
            <paramref name="encryptedData" /> 값과 관련된 암호화 알고리즘을 설명하는 URI(Uniform Resource Identifier)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-351">The Uniform Resource Identifier (URI) that describes the cryptographic algorithm associated with the <paramref name="encryptedData" /> value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-352">암호 해독 IV(초기화 벡터)를 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 개체에서 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-352">Retrieves the decryption initialization vector (IV) from an <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="caccf-353">암호 해독 IV(초기화 벡터)가 들어 있는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-353">A byte array that contains the decryption initialization vector (IV).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-354">지정 된는 <xref:System.Security.Cryptography.Xml.EncryptedData> 개체를이 메서드는 암호 해독 IV (초기화 벡터)를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-354">Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method retrieves the decryption initialization vector (IV).</span></span> <span data-ttu-id="caccf-355">첫 번째 바이트로 IV를 검색 하는 기본 동작을 <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-355">The default behavior retrieves the IV as the first bytes of the <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> byte array.</span></span>  
  
 <span data-ttu-id="caccf-356">지 원하는 리소스 URI (Uniform Identifier) 값의 목록은 합니다 `symmetricAlgorithmUri` 매개 변수, 상수 필드 목록은 연결 된 참조는 <xref:System.Security.Cryptography.Xml.EncryptedXml> 클래스.</span><span class="sxs-lookup"><span data-stu-id="caccf-356">For a list of Uniform Resource Identifier (URI) values supported by the `symmetricAlgorithmUri` parameter, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="caccf-357">
            <paramref name="encryptedData" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-357">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="caccf-358">
            <paramref name="encryptedData" /> 매개 변수의 값에 null인 <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> 속성이 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-358">The value of the <paramref name="encryptedData" /> parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> property that is null.</span>
          </span>
          <span data-ttu-id="caccf-359">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-359">-or-</span>
          </span>
          <span data-ttu-id="caccf-360">
            <paramref name="symmetricAlgorithmUrisymAlgUri" /> 매개 변수의 값이 지원되는 알고리즘이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-360">The value of the <paramref name="symmetricAlgorithmUrisymAlgUri" /> parameter is not a supported algorithm.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionKey">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::SymmetricAlgorithm ^ GetDecryptionKey(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::SymmetricAlgorithm ^ GetDecryptionKey(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionKey : System.Security.Cryptography.Xml.EncryptedData * string -&gt; System.Security.Cryptography.SymmetricAlgorithm&#xA;override this.GetDecryptionKey : System.Security.Cryptography.Xml.EncryptedData * string -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="encryptedXml.GetDecryptionKey (encryptedData, symAlgUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithmUri" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
        <Parameter Name="symAlgUri" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData">
          <span data-ttu-id="caccf-361">검색할 암호 해독 키가 들어 있는 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-361">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the decryption key to retrieve.</span>
          </span>
        </param>
        <param name="symmetricAlgorithmUri">
          <span data-ttu-id="caccf-362">검색할 암호 해독 키의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-362">The size of the decryption key to retrieve.</span>
          </span>
        </param>
        <param name="symAlgUri">
          <span data-ttu-id="caccf-363">검색할 암호 해독 키의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-363">The size of the decryption key to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-364">지정된 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 개체에서 암호 해독 키를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-364">Retrieves the decryption key from the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="caccf-365">암호 해독 키와 관련된 <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-365">A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> object associated with the decryption key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-366">지정 된 <xref:System.Security.Cryptography.Xml.EncryptedData> 개체를이 메서드는 일반 텍스트 데이터를 검색할 수 있는 암호 해독 키를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-366">Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method looks for the decryption key that can be used to retrieve the plain text data.</span></span> <span data-ttu-id="caccf-367">키 이름을 지정 하는 경우 대칭 알고리즘 또는 키 이름 매핑을에 정의 된 대로 키 이름으로 연결 된 비대칭 알고리즘에 대 한 메서드를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-367">If a key name is specified, the method looks for the symmetric algorithm or asymmetric algorithm that is associated with the key name as defined in the key name mapping.</span></span> <span data-ttu-id="caccf-368">이 고, 그렇지 경우 검색 방법 또는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 지정 된 경우 메서드를 로드 합니다 <xref:System.Security.Cryptography.Xml.EncryptedKey> 개체와 호출은 <xref:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="caccf-368">Otherwise, if a retrieval method or an <xref:System.Security.Cryptography.Xml.EncryptedKey> object is specified, the method loads the <xref:System.Security.Cryptography.Xml.EncryptedKey> object and calls the <xref:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="caccf-369">
            <paramref name="encryptedData" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-369">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="caccf-370">encryptedData 매개 변수에 null인 <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> 속성이 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-370">The encryptedData parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> property that is null.</span>
          </span>
          <span data-ttu-id="caccf-371">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-371">-or-</span>
          </span>
          <span data-ttu-id="caccf-372">지정된 매개 변수를 사용하여 암호화된 키를 검색할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-372">The encrypted key cannot be retrieved using the specified parameters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIdElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetIdElement(class System.Xml.XmlDocument document, string idValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(System.Xml.XmlDocument,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdElement (document As XmlDocument, idValue As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetIdElement(System::Xml::XmlDocument ^ document, System::String ^ idValue);" />
      <MemberSignature Language="F#" Value="abstract member GetIdElement : System.Xml.XmlDocument * string -&gt; System.Xml.XmlElement&#xA;override this.GetIdElement : System.Xml.XmlDocument * string -&gt; System.Xml.XmlElement" Usage="encryptedXml.GetIdElement (document, idValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="idValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="caccf-373">ID 값을 가진 요소가 들어 있는 <see cref="T:System.Xml.XmlDocument" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-373">An <see cref="T:System.Xml.XmlDocument" /> object that contains an element with an ID value.</span>
          </span>
        </param>
        <param name="idValue">
          <span data-ttu-id="caccf-374">ID 값을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-374">A string that represents the ID value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-375">내부 URI(Uniform Resource Identifier) 참조를 확인하는 방법을 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-375">Determines how to resolve internal Uniform Resource Identifier (URI) references.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="caccf-376">내부 URI(Uniform Resource Identifier)의 확인 방법을 나타내는 ID가 들어 있는 <see cref="T:System.Xml.XmlElement" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-376">An <see cref="T:System.Xml.XmlElement" /> object that contains an ID indicating how internal Uniform Resource Identifiers (URIs) are to be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-377"><xref:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement%2A> 메서드 내부 Uniform Resource Identifier (Uri)를 해결 하는 방법을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-377">The <xref:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement%2A> method determines how to resolve internal Uniform Resource Identifiers (URIs).</span></span> <span data-ttu-id="caccf-378">지정된 된 값을 사용 하 여 요소 또는 지정 된 값이 있는 ID 특성을 가진 요소를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-378">It looks for elements with a specified value or for elements with an ID attribute that has a specified value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CipherMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CipherMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As CipherMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CipherMode Mode { System::Security::Cryptography::CipherMode get(); void set(System::Security::Cryptography::CipherMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Security.Cryptography.CipherMode with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-379">XML 암호화에 사용되는 암호화 모드를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-379">Gets or sets the cipher mode used for XML encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="caccf-380">
            <see cref="T:System.Security.Cryptography.CipherMode" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-380">One of the <see cref="T:System.Security.Cryptography.CipherMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-381">암호화 블록 CBC (체인) 모드는 XML 암호화에 대 한 기본 암호화 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-381">Cipher Block Chaining (CBC) mode is the default cipher mode for XML encryption.</span></span> <span data-ttu-id="caccf-382">다른 암호화 모드를 지정 하려면이 속성을 사용할 수는 <xref:System.Security.Cryptography.CipherMode> Cipher Feedback (CFB) 모드와 같은 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-382">You can use this property to specify other cipher modes of the <xref:System.Security.Cryptography.CipherMode> enumeration, such as Cipher Feedback (CFB) mode.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Security.Cryptography.PaddingMode with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-383">XML 암호화에 사용되는 패딩 모드를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-383">Gets or sets the padding mode used for XML encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="caccf-384">암호화에 사용되는 패딩 형식을 지정하는 <see cref="T:System.Security.Cryptography.PaddingMode" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-384">One of the <see cref="T:System.Security.Cryptography.PaddingMode" /> values that specifies the type of padding used for encryption.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-385">Iso-10126 안쪽 여백은 XML 암호화에 대 한 기본 패딩 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-385">ISO-10126 padding is the default padding mode for XML encryption.</span></span> <span data-ttu-id="caccf-386">다른 패딩 모드를 지정 하려면이 속성을 사용할 수는 <xref:System.Security.Cryptography.PaddingMode> ANSI X9.23 PKCS #5 등의 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-386">You can use this property to specify other padding modes of the <xref:System.Security.Cryptography.PaddingMode> enumeration, such as ANSI X9.23 or PKCS#5.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recipient">
      <MemberSignature Language="C#" Value="public string Recipient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Recipient" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Recipient" />
      <MemberSignature Language="VB.NET" Value="Public Property Recipient As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Recipient { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Recipient : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Recipient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-387">암호화된 키 정보의 수신자를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-387">Gets or sets the recipient of the encrypted key information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="caccf-388">암호화된 키 정보의 수신자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-388">The recipient of the encrypted key information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-389">액세스할 수 있습니다 합니다 <xref:System.Security.Cryptography.Xml.EncryptedXml> 검사 하 여 키 이름으로 참조 하는 개체는 <xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-389">You can access the <xref:System.Security.Cryptography.Xml.EncryptedXml> object referenced by a key name by examining the <xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A> property.</span></span>  
  
 <span data-ttu-id="caccf-390">사용 하 여는 <xref:System.Security.Cryptography.Xml.EncryptedXml.Recipient%2A> 식별 하는 속성을 <xref:System.Security.Cryptography.Xml.EncryptedXml> 현재 수신자를 암호 해독 키를 검색할 해독할 수 있는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-390">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.Recipient%2A> property to identify the <xref:System.Security.Cryptography.Xml.EncryptedXml> element that the current recipient can decrypt to retrieve a decryption key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceData">
      <MemberSignature Language="C#" Value="public void ReplaceData (System.Xml.XmlElement inputElement, byte[] decryptedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReplaceData(class System.Xml.XmlElement inputElement, unsigned int8[] decryptedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(System.Xml.XmlElement,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceData (inputElement As XmlElement, decryptedData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplaceData(System::Xml::XmlElement ^ inputElement, cli::array &lt;System::Byte&gt; ^ decryptedData);" />
      <MemberSignature Language="F#" Value="member this.ReplaceData : System.Xml.XmlElement * byte[] -&gt; unit" Usage="encryptedXml.ReplaceData (inputElement, decryptedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="decryptedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="caccf-391">바꿀 <see langword="&lt;EncryptedData&gt;" /> 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-391">The <see langword="&lt;EncryptedData&gt;" /> element to replace.</span>
          </span>
        </param>
        <param name="decryptedData">
          <span data-ttu-id="caccf-392">
            <paramref name="inputElement" />와 바꿀 해독된 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-392">The decrypted data to replace <paramref name="inputElement" /> with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-393">
            <see langword="&lt;EncryptedData&gt;" /> 요소를 지정한 해독된 바이트 시퀀스로 바꿉니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-393">Replaces an <see langword="&lt;EncryptedData&gt;" /> element with a specified decrypted sequence of bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-394"><xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData%2A> 대체 메서드는 `<EncryptedData>` 의 값을 가진 요소가 `decryptedData` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-394">The <xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData%2A> method replaces an `<EncryptedData>` element with the value of the `decryptedData` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-395">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-395">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-396">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-396">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="caccf-397">
            <paramref name="inputElement" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-397">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="caccf-398">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-398">-or-</span>
          </span>
          <span data-ttu-id="caccf-399">
            <paramref name="decryptedData" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-399">The value of the <paramref name="decryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceElement">
      <MemberSignature Language="C#" Value="public static void ReplaceElement (System.Xml.XmlElement inputElement, System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReplaceElement(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReplaceElement(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, bool content);" />
      <MemberSignature Language="F#" Value="static member ReplaceElement : System.Xml.XmlElement * System.Security.Cryptography.Xml.EncryptedData * bool -&gt; unit" Usage="System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement (inputElement, encryptedData, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" />
        <Parameter Name="content" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="caccf-400">
            <see langword="&lt;EncryptedData&gt;" /> 요소와 바꿀 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-400">The element to replace with an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </param>
        <param name="encryptedData">
          <span data-ttu-id="caccf-401">
            <paramref name="inputElement" /> 매개 변수와 바꿀 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-401">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object to replace the <paramref name="inputElement" /> parameter with.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="caccf-402">요소의 내용만 바꾸면 <see langword="true" />이고, 전체 요소를 바꾸면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-402">
              <see langword="true" /> to replace only the contents of the element; <see langword="false" /> to replace the entire element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caccf-403">지정된 요소를 지정된 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 개체와 바꿉니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-403">Replaces the specified element with the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-404"><xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement%2A> 메서드 대체 합니다 `inputElement` 에 지정 된 값을 사용 하 여 매개 변수는 `encryptedData` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="caccf-404">The <xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement%2A> method replaces the `inputElement` parameter with the value specified by the `encryptedData` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-405">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-405">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-406">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-406">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="caccf-407">
            <paramref name="inputElement" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-407">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="caccf-408">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-408">-or-</span>
          </span>
          <span data-ttu-id="caccf-409">
            <paramref name="encryptedData" /> 매개 변수의 값이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-409">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ Resolver { System::Xml::XmlResolver ^ get(); void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resolver : System.Xml.XmlResolver with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Resolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-410">DOM(문서 개체 모델)에서 외부 XML 참조를 확인하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" /> 개체를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-410">Gets or sets the <see cref="T:System.Xml.XmlResolver" /> object used by the Document Object Model (DOM) to resolve external XML references.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="caccf-411">
            <see cref="T:System.Xml.XmlResolver" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-411">An <see cref="T:System.Xml.XmlResolver" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-412">이 속성을 포함 한 <xref:System.Xml.XmlResolver> 엔터티, 문서 형식 정의 (Dtd) 또는 스키마와 같은 외부 XML 리소스를 확인 하는 데 사용 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-412">This property contains an <xref:System.Xml.XmlResolver> object used to resolve external XML resources such as entities, document type definitions (DTDs), or schemas.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDSigSearchDepth">
      <MemberSignature Language="C#" Value="public int XmlDSigSearchDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 XmlDSigSearchDepth" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDSigSearchDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int XmlDSigSearchDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDSigSearchDepth : int with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-413">무한 재귀 및 스택 오버플로를 방지하기 위해 XML 디지털 서명 재귀 깊이를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-413">Gets or sets the XML digital signature recursion depth to prevent infinite recursion and stack overflow.</span>
          </span>
          <span data-ttu-id="caccf-414">이는 디지털 서명 XML에 원래 XML을 다시 가리키는 URI를 포함하는 경우에 발생할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-414">This might happen if the digital signature XML contains the URI which then points back to the original XML.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="caccf-415">
            <see cref="T:System.Int32" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-415">Returns <see cref="T:System.Int32" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES128KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES128KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES128KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES128KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES128KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES128KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-416">Rijndael 키 랩 알고리즘이라고도 하는 128비트 AES(Advanced Encryption Standard) 키 랩 알고리즘의 네임스페이스 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-416">Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          </span>
          <span data-ttu-id="caccf-417">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-417">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-418">값을 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#kw-aes128"입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-418">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes128".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES128Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES128Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES128Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES128Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES128Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES128Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-419">Rijndael 알고리즘이라고도 하는 128비트AES(Advanced Encryption Standard) 알고리즘의 네임스페이스 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-419">Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          </span>
          <span data-ttu-id="caccf-420">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-420">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-421">값을 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url> 필드는 "http://www.w3.org/2001/04/xmlenc#aes128-cbc"입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-421">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url> field is "http://www.w3.org/2001/04/xmlenc#aes128-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-422">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-422">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-423">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-423">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES192KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES192KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES192KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES192KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES192KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES192KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-424">Rijndael 키 랩 알고리즘이라고도 하는 192비트 AES(Advanced Encryption Standard) 키 랩 알고리즘의 네임스페이스 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-424">Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          </span>
          <span data-ttu-id="caccf-425">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-425">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-426">값을 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#kw-aes192"입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-426">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes192".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES192Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES192Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES192Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES192Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES192Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES192Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-427">Rijndael 알고리즘이라고도 하는 192비트 AES(Advanced Encryption Standard) 알고리즘의 네임스페이스 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-427">Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          </span>
          <span data-ttu-id="caccf-428">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-428">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-429">값을 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url> 필드는 "http://www.w3.org/2001/04/xmlenc#aes192-cbc"입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-429">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url> field is "http://www.w3.org/2001/04/xmlenc#aes192-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-430">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-430">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-431">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-431">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES256KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES256KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES256KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES256KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES256KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES256KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-432">Rijndael 키 랩 알고리즘이라고도 하는 256비트 AES(Advanced Encryption Standard) 키 랩 알고리즘의 네임스페이스 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-432">Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          </span>
          <span data-ttu-id="caccf-433">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-433">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-434">값을 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#kw-aes256"입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-434">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes256".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES256Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES256Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES256Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-435">Rijndael 알고리즘이라고도 하는 256비트 AES(Advanced Encryption Standard) 알고리즘의 네임스페이스 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-435">Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          </span>
          <span data-ttu-id="caccf-436">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-436">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-437">값을 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url> 필드는 "http://www.w3.org/2001/04/xmlenc#aes256-cbc"입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-437">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url> field is "http://www.w3.org/2001/04/xmlenc#aes256-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-438">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-438">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-439">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-439">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncDESUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncDESUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncDESUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncDESUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncDESUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncDESUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-440">DES(디지털 암호화 표준) 알고리즘에 대한 네임스페이스 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-440">Represents the namespace Uniform Resource Identifier (URI) for the Digital Encryption Standard (DES) algorithm.</span>
          </span>
          <span data-ttu-id="caccf-441">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-441">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-442">값을 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#des-cbc"입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-442">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl> field is "http://www.w3.org/2001/04/xmlenc#des-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-443">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-443">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-444">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-444">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncElementContentUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncElementContentUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncElementContentUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncElementContentUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncElementContentUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncElementContentUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-445">XML 암호화 요소 내용에 대한 네임스페이스 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-445">Represents the namespace Uniform Resource Identifier (URI) for XML encryption element content.</span>
          </span>
          <span data-ttu-id="caccf-446">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-446">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-447">값을 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#Content"입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-447">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl> field is "http://www.w3.org/2001/04/xmlenc#Content".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncElementUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncElementUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncElementUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncElementUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncElementUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncElementUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-448">XML 암호화 요소에 대한 네임스페이스 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-448">Represents the namespace Uniform Resource Identifier (URI) for an XML encryption element.</span>
          </span>
          <span data-ttu-id="caccf-449">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-449">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-450">값을 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#Element"입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-450">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl> field is "http://www.w3.org/2001/04/xmlenc#Element".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-451">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-451">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-452">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-452">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncEncryptedKeyUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncEncryptedKeyUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncEncryptedKeyUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncEncryptedKeyUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncEncryptedKeyUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncEncryptedKeyUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-453">XML 암호화 <see langword="&lt;EncryptedKey&gt;" /> 요소에 대한 네임스페이스 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-453">Represents the namespace Uniform Resource Identifier (URI) for the XML encryption <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
          <span data-ttu-id="caccf-454">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-454">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-455">값을 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#EncryptedKey"입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-455">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl> field is "http://www.w3.org/2001/04/xmlenc#EncryptedKey".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncNamespaceUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncNamespaceUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncNamespaceUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncNamespaceUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncNamespaceUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncNamespaceUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-456">XML 암호화 구문 및 처리에 대한 네임스페이스 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-456">Represents the namespace Uniform Resource Identifier (URI) for XML encryption syntax and processing.</span>
          </span>
          <span data-ttu-id="caccf-457">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-457">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-458">값을 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#"입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-458">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl> field is "http://www.w3.org/2001/04/xmlenc#".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncRSA15Url">
      <MemberSignature Language="C#" Value="public const string XmlEncRSA15Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncRSA15Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncRSA15Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncRSA15Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncRSA15Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-459">RSA PKCS(공개 키 암호화 표준) 버전 1.5 알고리즘에 대한 네임스페이스 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-459">Represents the namespace Uniform Resource Identifier (URI) for the RSA Public Key Cryptography Standard (PKCS) Version 1.5 algorithm.</span>
          </span>
          <span data-ttu-id="caccf-460">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-460">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-461">값을 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> 필드는 "http://www.w3.org/2001/04/xmlenc#rsa-1_5"입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-461">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> field is "http://www.w3.org/2001/04/xmlenc#rsa-1_5".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-462">다음 코드 예제에는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-462">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="caccf-463">문서를 암호화 한 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 하는이 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-463">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncRSAOAEPUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncRSAOAEPUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncRSAOAEPUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncRSAOAEPUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncRSAOAEPUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncRSAOAEPUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-464">RSA OAEP(Optimal Asymmetric Encryption Padding) 암호화 알고리즘에 대한 네임스페이스 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-464">Represents the namespace Uniform Resource Identifier (URI) for the RSA Optimal Asymmetric Encryption Padding (OAEP) encryption algorithm.</span>
          </span>
          <span data-ttu-id="caccf-465">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-465">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-466">값을 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p"입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-466">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> field is "http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncSHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlEncSHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncSHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncSHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncSHA256Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncSHA256Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-467">SHA-256 알고리즘에 대한 네임스페이스 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-467">Represents the namespace Uniform Resource Identifier (URI) for the SHA-256 algorithm.</span>
          </span>
          <span data-ttu-id="caccf-468">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-468">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-469">값을 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url> 필드는 "http://www.w3.org/2001/04/xmlenc#sha256"입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-469">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url> field is "http://www.w3.org/2001/04/xmlenc#sha256".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncSHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlEncSHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncSHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncSHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncSHA512Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncSHA512Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-470">SHA-512 알고리즘에 대한 네임스페이스 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-470">Represents the namespace Uniform Resource Identifier (URI) for the SHA-512 algorithm.</span>
          </span>
          <span data-ttu-id="caccf-471">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-471">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-472">값을 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url> 필드는 "http://www.w3.org/2001/04/xmlenc#sha512"입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-472">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url> field is "http://www.w3.org/2001/04/xmlenc#sha512".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncTripleDESKeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncTripleDESKeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncTripleDESKeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncTripleDESKeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncTripleDESKeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncTripleDESKeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-473">TRIPLEDES 키 랩 알고리즘에 대한 네임스페이스 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-473">Represents the namespace Uniform Resource Identifier (URI) for the TRIPLEDES key wrap algorithm.</span>
          </span>
          <span data-ttu-id="caccf-474">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-474">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-475">값을 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#kw-tripledes"입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-475">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-tripledes".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncTripleDESUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncTripleDESUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncTripleDESUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncTripleDESUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncTripleDESUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncTripleDESUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caccf-476">3DES(Triple DES) 알고리즘에 대한 네임스페이스 URI(Uniform Resource Identifier)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-476">Represents the namespace Uniform Resource Identifier (URI) for the Triple DES algorithm.</span>
          </span>
          <span data-ttu-id="caccf-477">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caccf-477">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caccf-478">값을 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#tripledes-cbc"입니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-478">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl> field is "http://www.w3.org/2001/04/xmlenc#tripledes-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caccf-479">다음 코드 예제에는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-479">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="caccf-480">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="caccf-480">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>