<Type Name="EncryptedXml" FullName="System.Security.Cryptography.Xml.EncryptedXml">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="192c6647a93277d4219147096951f75e080a8ad9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36530758" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EncryptedXml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedXml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedXml" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedXml" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedXml" />
  <TypeSignature Language="F#" Value="type EncryptedXml = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c9a32-101">Represents the process model for implementing XML encryption.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c9a32-101">Represents the process model for implementing XML encryption.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-102"><xref:System.Security.Cryptography.Xml.EncryptedXml> 클래스는.NET Framework의 XML 암호화에 사용 되는 주 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-102">The <xref:System.Security.Cryptography.Xml.EncryptedXml> class is the main class used for XML encryption in the .NET Framework.</span></span> <span data-ttu-id="c9a32-103">XML 암호화는 전체 또는 일부 XML 문서 또는 임의의 데이터를 암호화 하는 표준 기반, 상호 운용 가능한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-103">XML Encryption is a standards-based, interoperable way to encrypt all or part of an XML document or any arbitrary data.</span></span> <span data-ttu-id="c9a32-104">.NET Framework XML 암호화 클래스에 있는 XML 암호화 World Wide Web Consortium (W3C) 사양을 구현 http://www.w3.org/TR/xmlenc-core/합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-104">The .NET Framework XML encryption classes implement the World Wide Web Consortium (W3C) specification for XML encryption located at http://www.w3.org/TR/xmlenc-core/.</span></span>  
  
 <span data-ttu-id="c9a32-105">사용 된 <xref:System.Security.Cryptography.Xml.EncryptedXml> 표준 방식으로 응용 프로그램이 나 조직 간에 암호화 된 XML 데이터를 공유 해야 할 경우 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-105">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml> class whenever you need to share encrypted XML data between applications or organizations in a standard way.</span></span> <span data-ttu-id="c9a32-106">XML 암호화에 대 한 W3C 사양 구현 하 여이 클래스를 사용 하 여 암호화 된 모든 데이터를 해독할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-106">Any data encrypted using this class can be decrypted by any implementation of the W3C specification for XML encryption.</span></span>  
  
 <span data-ttu-id="c9a32-107">XML 암호화는 모든 일반 텍스트 XML 요소 또는 사용 하 여 문서는 `<EncryptedData>` 암호화 된 포함 (또는 암호화 텍스트) 하는 요소를 임의의 데이터 또는 일반 텍스트 XML 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-107">XML encryption replaces any plain text XML element or document with the `<EncryptedData>` element, which contains an encrypted (or cipher text) representation of plain text XML or any arbitrary data.</span></span> <span data-ttu-id="c9a32-108">`<EncryptedData>` 요소는 암호화 텍스트를 해독 하는 키를 찾을 수 있는 위치에 대 한 정보를 선택적으로 포함할 수 있습니다 암호화 알고리즘은 일반 텍스트를 암호화 하는 데 사용 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-108">The `<EncryptedData>` element can optionally contain information about where to find a key that will decrypt the cipher text, and which cryptographic algorithm was used to encrypt the plain text.</span></span>  
  
 <span data-ttu-id="c9a32-109">`<EncryptedKey>` 요소는 비슷합니다는 `<EncryptedData>` 스타일 및 값을 해독 하는 키를 암호화 하 있다는 점을 제외 하면 사용에는 요소는 `<EncryptedData>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-109">The `<EncryptedKey>` element is similar to the `<EncryptedData>` element in style and usage, except that it allows you to encrypt a key that will decrypt the value of the `<EncryptedData>` element.</span></span> <span data-ttu-id="c9a32-110">`<EncryptedKey>` 요소 및 `<EncryptedData>` 요소가 암호화 되지 않은 키가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-110">Note that the `<EncryptedKey>` element and the `<EncryptedData>` element will never contain an unencrypted key.</span></span>  
  
 <span data-ttu-id="c9a32-111">다음 방법 중 하나를 사용 하 여 키 정보를 교환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-111">Use one of the following methods to exchange key information:</span></span>  
  
-   <span data-ttu-id="c9a32-112">키 정보를 포함 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="c9a32-112">Do not include any key information.</span></span> <span data-ttu-id="c9a32-113">이 옵션을 선택 하면 암호화 된 데이터를 교환 하기 전에 두 당사자 모두가 알고리즘 및 키에 동의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-113">If you choose this option, both parties must agree on an algorithm and key before they exchange encrypted data.</span></span>  
  
-   <span data-ttu-id="c9a32-114">식별자 URI (Uniform Resource) 특성에 키의 위치를 포함 된 `<RetrievalMethod>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-114">Include the location of the key in the Uniform Resource Identifier (URI) attribute of the `<RetrievalMethod>` element.</span></span> <span data-ttu-id="c9a32-115">두 당사자 사전에 키 위치에 동의 해야 하 고이 위치는 비밀로 유지 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-115">Both parties must agree on the key location ahead of time and this location must be kept secret.</span></span>  
  
-   <span data-ttu-id="c9a32-116">키에 매핑되는 문자열 이름을 `<KeyName>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-116">Include a string name that maps to a key in the `<KeyName>` element.</span></span> <span data-ttu-id="c9a32-117">양 당사자는이 매핑은 비밀로 유지 되어야 하 고 암호화 된 데이터를 교환 하기 전에 키 이름 매핑을에 동의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-117">Both parties must agree on the key name mapping before they exchange encrypted data and this mapping must be kept secret.</span></span>  
  
-   <span data-ttu-id="c9a32-118">암호화 된 키에 포함 된 `<EncryptedKey>` 요소.</span><span class="sxs-lookup"><span data-stu-id="c9a32-118">Include an encrypted key in the `<EncryptedKey>` element.</span></span> <span data-ttu-id="c9a32-119">양 당사자는 암호화 된 데이터를 교환 하기 전에 암호화 된 키를 해독 하는 키에 동의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-119">Both parties must agree on the key that decrypts the encrypted key before they exchange encrypted data.</span></span> <span data-ttu-id="c9a32-120">이름이 나 키를 해독 하는 키의 위치를 선택적으로 포함할 수는 `<EncryptedKey>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-120">You can optionally include a name or location of the key that will decrypt the key in the `<EncryptedKey>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-121">다음 코드 예제를 사용 하는 간단한 유틸리티 클래스를 만드는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.TripleDES> XML 문서를 암호화 하는 알고리즘입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-121">The following code example demonstrates how to create a simple utility class that uses the <xref:System.Security.Cryptography.TripleDES> algorithm to encrypt an XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-122">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-122">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-123">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-123">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-124">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-124">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-125">이 예제에서는 적절 한 암호 해독 키를 찾는 데 사용 하는 암호 해독 메서드에서 암호화 된 XML 문서에 키 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-125">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-126">다음 코드 예제에서는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-126">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="c9a32-127">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-127">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-128">다음 코드 예제에는 X.509 인증서를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-128">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="c9a32-129">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 X.509 인증서를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-129">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-130">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-130">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c9a32-131">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-131">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-132">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-132">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-133">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-133">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-134">이 예제에서는 적절 한 암호 해독 키를 찾는 데 사용 하는 암호 해독 메서드에서 암호화 된 XML 문서에 키 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-134">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-135">다음 코드 예제에서는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-135">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="c9a32-136">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-136">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-137">다음 코드 예제에는 X.509 인증서를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-137">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="c9a32-138">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 X.509 인증서를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-138">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-139">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-139">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-140">.NET Framework의 XML 암호화에 대 한 기본 클래스에 대 한 기본 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-140">This is the default constructor for the main class for XML encryption in the .NET Framework.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-141">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-141">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-142">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-142">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-143">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-143">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-144">이 예제에서는 적절 한 암호 해독 키를 찾는 데 사용 하는 암호 해독 메서드에서 암호화 된 XML 문서에 키 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-144">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-145">다음 코드 예제에서는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-145">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="c9a32-146">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-146">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-147">다음 코드 예제에는 X.509 인증서를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-147">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="c9a32-148">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 X.509 인증서를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-148">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml (System.Xml.XmlDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (document As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml(System::Xml::XmlDocument ^ document);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.EncryptedXml : System.Xml.XmlDocument -&gt; System.Security.Cryptography.Xml.EncryptedXml" Usage="new System.Security.Cryptography.Xml.EncryptedXml document" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="c9a32-149">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-149">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9a32-150">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-150">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-151">이 생성자를 사용 하는 <xref:System.Security.Cryptography.Xml.EncryptedXml> XML 문서를 암호화를 지정 하려는 경우 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-151">Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt.</span></span>  <span data-ttu-id="c9a32-152">`document` 매개 변수는 나중에 암호화 된 XML을 형성 하는 XML 요소를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-152">The `document` parameter comprises the XML elements that later form the encrypted XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-153">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-153">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-154">이 예제에서는 적절 한 암호 해독 키를 찾는 데 사용 하는 암호 해독 메서드에서 암호화 된 XML 문서에 키 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-154">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-155">다음 코드 예제에서는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-155">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="c9a32-156">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-156">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml (System.Xml.XmlDocument document, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml(System::Xml::XmlDocument ^ document, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.EncryptedXml : System.Xml.XmlDocument * System.Security.Policy.Evidence -&gt; System.Security.Cryptography.Xml.EncryptedXml" Usage="new System.Security.Cryptography.Xml.EncryptedXml (document, evidence)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="c9a32-157">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-157">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="c9a32-158">An <see cref="T:System.Security.Policy.Evidence" /> object associated with the <see cref="T:System.Xml.XmlDocument" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-158">An <see cref="T:System.Security.Policy.Evidence" /> object associated with the <see cref="T:System.Xml.XmlDocument" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9a32-159">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document and evidence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-159">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document and evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-160">이 생성자를 사용 하는 <xref:System.Security.Cryptography.Xml.EncryptedXml> XML 문서를 암호화 하 고 보안 증명 정보를 제공할 지정 하려는 경우 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-160">Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt and provide security evidence.</span></span> <span data-ttu-id="c9a32-161">`document` 매개 변수는 나중에 암호화 된 XML을 형성 하는 XML 요소를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-161">The `document` parameter comprises the XML elements that later form the encrypted XML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyNameMapping">
      <MemberSignature Language="C#" Value="public void AddKeyNameMapping (string keyName, object keyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddKeyNameMapping(string keyName, object keyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddKeyNameMapping (keyName As String, keyObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddKeyNameMapping(System::String ^ keyName, System::Object ^ keyObject);" />
      <MemberSignature Language="F#" Value="member this.AddKeyNameMapping : string * obj -&gt; unit" Usage="encryptedXml.AddKeyNameMapping (keyName, keyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="keyObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <span data-ttu-id="c9a32-162">The name to map to <c>keyObject</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-162">The name to map to <c>keyObject</c>.</span>
          </span>
        </param>
        <param name="keyObject">
          <span data-ttu-id="c9a32-163">The symmetric key to map to <c>keyName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-163">The symmetric key to map to <c>keyName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9a32-164">Defines a mapping between a key name and a symmetric key or an asymmetric key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-164">Defines a mapping between a key name and a symmetric key or an asymmetric key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-165"><xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> 메서드 문자열 이름에 대칭 키나 비대칭 키를 매핑할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-165">The <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> method allows you to map a symmetric key or an asymmetric key to a string name.</span></span> <span data-ttu-id="c9a32-166">값을 추가 하는이 메서드는 `keyName` 및 `keyObject` 유효한 키의 테이블에 대 한 매개 변수 이름 매핑.</span><span class="sxs-lookup"><span data-stu-id="c9a32-166">This method adds the values of the `keyName` and `keyObject` parameters to a table of valid key name mappings.</span></span>  
  
 <span data-ttu-id="c9a32-167">사용 된 <xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A> 메서드를 키 이름 매핑 테이블의 선택을 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-167">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A> method to clear the key name mappings table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-168">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-168">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-169">이 예제에서는 적절 한 암호 해독 키를 찾는 데 사용 하는 암호 해독 메서드에서 암호화 된 XML 문서에 키 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-169">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9a32-170">The value of the <paramref name="keyName" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-170">The value of the <paramref name="keyName" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c9a32-171">-or-  The value of the <paramref name="keyObject" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-171">-or-  The value of the <paramref name="keyObject" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="c9a32-172">The value of the <paramref name="keyObject" /> parameter is not an RSA algorithm or a symmetric key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-172">The value of the <paramref name="keyObject" /> parameter is not an RSA algorithm or a symmetric key.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClearKeyNameMappings">
      <MemberSignature Language="C#" Value="public void ClearKeyNameMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearKeyNameMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearKeyNameMappings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearKeyNameMappings();" />
      <MemberSignature Language="F#" Value="member this.ClearKeyNameMappings : unit -&gt; unit" Usage="encryptedXml.ClearKeyNameMappings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-173">Resets all key name mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-173">Resets all key name mapping.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-174">이 메서드를 사용 하 여를 사용 하 여 설정 된 모든 키 이름 매핑을 지우려면는 <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c9a32-174">Use this method to clear all key name mapping that you have set using the <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptData">
      <MemberSignature Language="C#" Value="public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecryptData(class System.Security.Cryptography.Xml.EncryptedData encryptedData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DecryptData(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecryptData(class System.Security.Cryptography.Xml.EncryptedData encryptedData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DecryptData(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.DecryptData : System.Security.Cryptography.Xml.EncryptedData * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="encryptedXml.DecryptData (encryptedData, symAlg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData">
          <span data-ttu-id="c9a32-175">The data to decrypt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-175">The data to decrypt.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">To be added.</param>
        <param name="symAlg">To be added.</param>
        <summary>
          <span data-ttu-id="c9a32-176">Decrypts an <see langword="&lt;EncryptedData&gt;" /> element using the specified symmetric algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-176">Decrypts an <see langword="&lt;EncryptedData&gt;" /> element using the specified symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9a32-177">A byte array that contains the raw decrypted plain text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-177">A byte array that contains the raw decrypted plain text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-178">사용 하 여는 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> 암호를 해독 하는 메서드는 <xref:System.Security.Cryptography.Xml.EncryptedData> 대칭 키를 사용 하 여 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-178">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method to decrypt an <xref:System.Security.Cryptography.Xml.EncryptedData> element using a symmetric key.</span></span>  
  
 <span data-ttu-id="c9a32-179"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> 메서드만 최상위 해독 <`EncryptedData`> 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-179">Note that the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method only decrypts top-level <`EncryptedData`> tags.</span></span>  <span data-ttu-id="c9a32-180">경우에 있는 하나 이상의 <`EncryptedData`> 태그는 암호화 되어 있고 더 높은 수준에 포함 된 <`EncryptedData`> 태그를 호출할 수 있습니다는 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> 별도로 각각에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="c9a32-180">In cases where one or more <`EncryptedData`> tags have been encrypted and are contained within higher level <`EncryptedData`> tags, you can call the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method separately for each one.</span></span>  <span data-ttu-id="c9a32-181">참조는 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> 코드 예제를 보려면 메서드.</span><span class="sxs-lookup"><span data-stu-id="c9a32-181">See the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method for a code example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-182">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-182">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-183">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-183">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9a32-184">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-184">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c9a32-185">-or-  The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-185">-or-  The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptDocument">
      <MemberSignature Language="C#" Value="public void DecryptDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DecryptDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument" />
      <MemberSignature Language="VB.NET" Value="Public Sub DecryptDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DecryptDocument();" />
      <MemberSignature Language="F#" Value="member this.DecryptDocument : unit -&gt; unit" Usage="encryptedXml.DecryptDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-186">Decrypts all <see langword="&lt;EncryptedData&gt;" /> elements of the XML document that were specified during initialization of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-186">Decrypts all <see langword="&lt;EncryptedData&gt;" /> elements of the XML document that were specified during initialization of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-187"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> 메서드를 모두 해독 `<EncryptedData>` 초기화 하는 동안 XML 문서의 요소를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-187">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts all `<EncryptedData>` elements of the XML document loaded during initialization.</span></span> <span data-ttu-id="c9a32-188">이 메서드를 호출 하 고 나면 모든 `<EncryptedData>` 문서의 요소는 일반 텍스트 버전으로 대체 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-188">After you call this method, all `<EncryptedData>` elements in the document are replaced with plain text versions.</span></span>  
  
 <span data-ttu-id="c9a32-189"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> 메서드 해독만 최상위 `<EncryptedData>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-189">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts only top-level `<EncryptedData>` elements.</span></span>  <span data-ttu-id="c9a32-190">호출 해야 합니다 (한 번만 암호화 된 문서)를 슈퍼로 암호화 된 문서를 해독 해야 할 경우는 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> 반복 해 서 모든 때까지 메서드는 `<EncryptedData>` 요소를 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-190">If you need to decrypt a super-encrypted document (a document that is encrypted more than once), you must call the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method repeatedly until all the `<EncryptedData>` elements have been decrypted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9a32-191"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> 메서드는 유효한 XML 데이터를 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-191">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts only valid XML data.</span></span> <span data-ttu-id="c9a32-192">사용 하 여 임의의 데이터를 암호 해독 하려면는 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c9a32-192">To decrypt arbitrary data, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method.</span></span>  
  
 <span data-ttu-id="c9a32-193">X.509 인증서로 XML 암호화를 사용 하는 Microsoft Enhanced Cryptographic Provider가 설치 되어 있어야 하며 X.509 인증서는 향상 된 공급자를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-193">To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider.</span></span> <span data-ttu-id="c9a32-194">Microsoft Enhanced Cryptographic Provider가 설치 되어 있지 않으면 X.509 인증서는 향상 된 공급자를 사용 하지 않는 경우는 <xref:System.Security.Cryptography.CryptographicException> "알 수 없는 오류" 때 throw 됩니다 XML 문서를 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-194">If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an "Unknown Error" will be thrown when you decrypt an XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-195">다음 코드 예제에서는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-195">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="c9a32-196">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-196">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-197">다음 코드 예제에는 X.509 인증서를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-197">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="c9a32-198">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 X.509 인증서를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-198">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-199">다음 코드 예제에서는 수준이 높은 암호를 해독 하는 방법을 보여 줍니다. <`EncryptedData`> 태그를 포함 해 서 암호화 된 <`EncryptedData`> 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-199">The following code example demonstrates how to decrypt a high level <`EncryptedData`> tag that contains another encrypted <`EncryptedData`> tag.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/samples/snippets/csharp/VS_Snippets_Misc/Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="c9a32-200">The cryptographic key used to decrypt the document was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-200">The cryptographic key used to decrypt the document was not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptEncryptedKey">
      <MemberSignature Language="C#" Value="public virtual byte[] DecryptEncryptedKey (System.Security.Cryptography.Xml.EncryptedKey encryptedKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DecryptEncryptedKey(class System.Security.Cryptography.Xml.EncryptedKey encryptedKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ DecryptEncryptedKey(System::Security::Cryptography::Xml::EncryptedKey ^ encryptedKey);" />
      <MemberSignature Language="F#" Value="abstract member DecryptEncryptedKey : System.Security.Cryptography.Xml.EncryptedKey -&gt; byte[]&#xA;override this.DecryptEncryptedKey : System.Security.Cryptography.Xml.EncryptedKey -&gt; byte[]" Usage="encryptedXml.DecryptEncryptedKey encryptedKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Security.Cryptography.Xml.EncryptedKey" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="c9a32-201">The <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> object that contains the key to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-201">The <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> object that contains the key to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9a32-202">Determines the key represented by the <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-202">Determines the key represented by the <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9a32-203">A byte array that contains the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-203">A byte array that contains the key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-204"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey%2A> 메서드 내에 포함 된 암호화 된 키를 해독는 `<EncryptedKey>` 는 XML 문서의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-204">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span>  
  
 <span data-ttu-id="c9a32-205">이 재귀 메서드 나타내는 키를 찾습니다는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-205">This recursive method finds the key represented by the <xref:System.Security.Cryptography.Xml.EncryptedKey> object.</span></span> <span data-ttu-id="c9a32-206"><xref:System.Security.Cryptography.Xml.EncryptedKey> 다른 개체가 포함 될 수 있습니다 <xref:System.Security.Cryptography.Xml.EncryptedKey> 지정 하는 개체의 <xref:System.Security.Cryptography.Xml.KeyInfo> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-206">Note that an <xref:System.Security.Cryptography.Xml.EncryptedKey> object can contain another <xref:System.Security.Cryptography.Xml.EncryptedKey> object that specifies its <xref:System.Security.Cryptography.Xml.KeyInfo> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9a32-207">The value of the <paramref name="encryptedKey" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-207">The value of the <paramref name="encryptedKey" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="c9a32-208">The value of the <paramref name="encryptedKey" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-208">The value of the <paramref name="encryptedKey" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DecryptKey">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-209">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-209">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-210">사용 하 여는 <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> 암호를 해독 하는 메서드는 `<EncryptedKey>` 요소와 해당 요소를 암호 해독 하는 데 사용 하는 키를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-210">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method to decrypt an `<EncryptedKey>` element and retrieve the key used to decrypt that element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member DecryptKey : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.DecryptKey (keyData, symAlg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="c9a32-211">An array of bytes that represents an encrypted <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-211">An array of bytes that represents an encrypted <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">To be added.</param>
        <param name="symAlg">To be added.</param>
        <summary>
          <span data-ttu-id="c9a32-212">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element using a symmetric algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-212">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element using a symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9a32-213">A byte array that contains the plain text key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-213">A byte array that contains the plain text key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-214"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> 메서드 내에 포함 된 암호화 된 키를 해독는 `<EncryptedKey>` 는 XML 문서의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-214">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span> <span data-ttu-id="c9a32-215">에 대 한 값을 허용 하는이 메서드는 `symmetricAlgorithm` Triple DES 알고리즘 또는 (Rijndael이 라고도 함) AES 키 래핑 알고리즘을 나타내는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-215">This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9a32-216">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-216">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c9a32-217">-or-  The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-217">-or-  The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="c9a32-218">The value of the <paramref name="symmetricAlgorithm" /> element is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-218">The value of the <paramref name="symmetricAlgorithm" /> element is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool useOAEP) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool fOAEP) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member DecryptKey : byte[] * System.Security.Cryptography.RSA * bool -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.DecryptKey (keyData, rsa, fOAEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="rsa" Type="System.Security.Cryptography.RSA" Index="1" />
        <Parameter Name="useOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="fOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="c9a32-219">An array of bytes that represents an encrypted <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-219">An array of bytes that represents an encrypted <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
        </param>
        <param name="rsa">
          <span data-ttu-id="c9a32-220">The asymmetric key used to decrypt <c>keyData</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-220">The asymmetric key used to decrypt <c>keyData</c>.</span>
          </span>
        </param>
        <param name="useOAEP">To be added.</param>
        <param name="fOAEP">To be added.</param>
        <summary>
          <span data-ttu-id="c9a32-221">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element using an asymmetric algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-221">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element using an asymmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9a32-222">A byte array that contains the plain text key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-222">A byte array that contains the plain text key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-223"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> 메서드 내에 포함 된 암호화 된 키를 해독는 `<EncryptedKey>` 는 XML 문서의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-223">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span> <span data-ttu-id="c9a32-224">에 대 한 값을 허용 하는이 메서드는 `rsa` RSA PKCS #1 v1.5 알고리즘 또는 PKCS #1 RSA 형식 2 알고리즘 (OAEP 안쪽 여백 라고도 함)을 나타내는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-224">This method accepts a value for the `rsa` parameter that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP padding).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9a32-225">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-225">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c9a32-226">-or-  The value of the <paramref name="rsa" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-226">-or-  The value of the <paramref name="rsa" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DocumentEvidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence DocumentEvidence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence DocumentEvidence" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentEvidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ DocumentEvidence { System::Security::Policy::Evidence ^ get(); void set(System::Security::Policy::Evidence ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentEvidence : System.Security.Policy.Evidence with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-227">Gets or sets the evidence of the <see cref="T:System.Xml.XmlDocument" /> object from which the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object is constructed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-227">Gets or sets the evidence of the <see cref="T:System.Xml.XmlDocument" /> object from which the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object is constructed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9a32-228">
            <see cref="T:System.Security.Policy.Evidence" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-228">An <see cref="T:System.Security.Policy.Evidence" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-229">XML 문서를 만드는 데 사용 하는 경우는 <xref:System.Security.Cryptography.Xml.EncryptedXml> 개체에 보안 증명 정보는 증명 정보를 추가 해야 합니다는 <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-229">If the XML document used to create the <xref:System.Security.Cryptography.Xml.EncryptedXml> object has any security evidence, you should add the evidence to the <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> property.</span></span>  <span data-ttu-id="c9a32-230">연결 된 모든이 속성을 설정 하지 않으면 <xref:System.Security.Cryptography.Xml.CipherReference> 에 필요한 권한 집합이 부여 되지 됩니다 때문에 개체를 역참조 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-230">If you do not set this property, any associated <xref:System.Security.Cryptography.Xml.CipherReference> objects will not be dereferenced because they will not be granted the required permission set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-231">Gets or sets the encoding used for XML encryption.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-231">Gets or sets the encoding used for XML encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9a32-232">
            <see cref="T:System.Text.Encoding" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-232">An <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-233">U t F-8 인코딩은 XML 암호화에 대 한 인코딩을 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-233">UTF-8 encoding is the default encoding for XML encryption.</span></span> <span data-ttu-id="c9a32-234">이 속성을 사용 하 여 다른 유형의에서 인코딩을 지정는 <xref:System.Text.Encoding> u t F-16 또는 ASCII와 같은 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-234">You can use this property to specify other types of encoding from the <xref:System.Text.Encoding> class, such as UTF-16 or ASCII.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Encrypt">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-235">Encrypts the outer XML of an element using the specified certificate or key in the key mapping table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-235">Encrypts the outer XML of an element using the specified certificate or key in the key mapping table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c9a32-236">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-236">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-237">다음 코드 예제에는 X.509 인증서를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-237">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="c9a32-238">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 X.509 인증서를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-238">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Xml.EncryptedData Encrypt(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (inputElement As XmlElement, certificate As X509Certificate2) As EncryptedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Xml::EncryptedData ^ Encrypt(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : System.Xml.XmlElement * System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.Security.Cryptography.Xml.EncryptedData" Usage="encryptedXml.Encrypt (inputElement, certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="c9a32-239">The XML element to encrypt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-239">The XML element to encrypt.</span>
          </span>
        </param>
        <param name="certificate">
          <span data-ttu-id="c9a32-240">The X.509 certificate to use for encryption.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-240">The X.509 certificate to use for encryption.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9a32-241">Encrypts the outer XML of an element using the specified X.509 certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-241">Encrypts the outer XML of an element using the specified X.509 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9a32-242">An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> element that represents the encrypted XML data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-242">An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> element that represents the encrypted XML data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-243"><xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> 메서드는 인증서를 사용 하 여 요소의 외부 XML을 암호화 하는 편리한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-243">The <xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> method is a convenient way to encrypt the outer XML of an element using a certificate.</span></span> <span data-ttu-id="c9a32-244">이 메서드는 XML 요소를 암호화 하는 256 비트 암호화 표준 AES (고급) 세션 키를 생성 한 다음 암호화 및 서명을 사용 하 여 AES 키는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-244">This method generates a 256-bit Advanced Encryption Standard (AES) session key to encrypt an XML element and then encrypts and signs the AES key using the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span> <span data-ttu-id="c9a32-245"><xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> 메서드 결과 XML로 반환 된 <xref:System.Security.Cryptography.Xml.EncryptedData> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-245">The <xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> method then returns the resulting XML as an <xref:System.Security.Cryptography.Xml.EncryptedData> element.</span></span>  
  
 <span data-ttu-id="c9a32-246">암호화를 롤오버 더 많은 제어를 필요 하므로 배치할 수 있습니다에 암호화 된 정보는 `<CipherReference>` 요소 전체 XML 요소 또는 내용만 되어야 하는지 여부를 지정 하거나 암호화를 사용 하 여는 <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-246">If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.</span></span>  
  
 <span data-ttu-id="c9a32-247">X.509 인증서로 XML 암호화를 사용 하는 Microsoft Enhanced Cryptographic Provider가 설치 되어 있어야 하며 X.509 인증서는 향상 된 공급자를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-247">To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider.</span></span> <span data-ttu-id="c9a32-248">Microsoft Enhanced Cryptographic Provider가 설치 되어 있지 않으면 X.509 인증서는 향상 된 공급자를 사용 하지 않는 경우는 <xref:System.Security.Cryptography.CryptographicException> "알 수 없는 오류" 때 throw 됩니다 XML 문서를 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-248">If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an "Unknown Error" will be thrown when you decrypt an XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-249">다음 코드 예제에는 X.509 인증서를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-249">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="c9a32-250">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 X.509 인증서를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-250">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9a32-251">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-251">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c9a32-252">-or-  The value of the <paramref name="certificate" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-252">-or-  The value of the <paramref name="certificate" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c9a32-253">The value of the <paramref name="certificate" /> parameter does not represent an RSA key algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-253">The value of the <paramref name="certificate" /> parameter does not represent an RSA key algorithm.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, string keyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Xml.EncryptedData Encrypt(class System.Xml.XmlElement inputElement, string keyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (inputElement As XmlElement, keyName As String) As EncryptedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Xml::EncryptedData ^ Encrypt(System::Xml::XmlElement ^ inputElement, System::String ^ keyName);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : System.Xml.XmlElement * string -&gt; System.Security.Cryptography.Xml.EncryptedData" Usage="encryptedXml.Encrypt (inputElement, keyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="keyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="c9a32-254">The XML element to encrypt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-254">The XML element to encrypt.</span>
          </span>
        </param>
        <param name="keyName">
          <span data-ttu-id="c9a32-255">A key name that can be found in the key mapping table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-255">A key name that can be found in the key mapping table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9a32-256">Encrypts the outer XML of an element using the specified key in the key mapping table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-256">Encrypts the outer XML of an element using the specified key in the key mapping table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9a32-257">An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that represents the encrypted XML data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-257">An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that represents the encrypted XML data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-258">이 메서드는 키 이름을 사용 하 여 요소의 외부 XML을 암호화 하는 편리한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-258">This method is a convenient way to encrypt the outer XML of an element using a key name.</span></span> <span data-ttu-id="c9a32-259">암호화를 롤오버 더 많은 제어를 필요 하므로 배치할 수 있습니다에 암호화 된 정보는 `<CipherReference>` 요소 전체 XML 요소 또는 내용만 되어야 하는지 여부를 지정 하거나 암호화를 사용 하 여는 <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-259">If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.</span></span>  
  
 <span data-ttu-id="c9a32-260">목록이 지원 되는 모든 알고리즘에 대 한 참조와 연결 된 상수 필드 목록에서 <xref:System.Security.Cryptography.Xml.EncryptedXml> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-260">For a list of all supported algorithms, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-261">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-261">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9a32-262">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-262">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c9a32-263">-or-  The value of the <paramref name="keyName" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-263">-or-  The value of the <paramref name="keyName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="c9a32-264">The value of the <paramref name="keyName" /> parameter does not match a registered key name pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-264">The value of the <paramref name="keyName" /> parameter does not match a registered key name pair.</span>
          </span>
          <span data-ttu-id="c9a32-265">-or-  The cryptographic key described by the <paramref name="keyName" /> parameter is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-265">-or-  The cryptographic key described by the <paramref name="keyName" /> parameter is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptData">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-266">Encrypts XML data using a symmetric algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-266">Encrypts XML data using a symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c9a32-267">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-267">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-268">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-268">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-269">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-269">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-270">이 예제에서는 적절 한 암호 해독 키를 찾는 데 사용 하는 암호 해독 메서드에서 암호화 된 XML 문서에 키 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-270">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-271">다음 코드 예제에서는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-271">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="c9a32-272">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-272">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptData">
      <MemberSignature Language="C#" Value="public byte[] EncryptData (byte[] plaintext, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(unsigned int8[] plaintext, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(cli::array &lt;System::Byte&gt; ^ plaintext, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public byte[] EncryptData (byte[] plainText, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(unsigned int8[] plainText, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (plainText As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(cli::array &lt;System::Byte&gt; ^ plainText, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EncryptData : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="encryptedXml.EncryptData (plainText, symAlg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plaintext" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="plainText" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="plainText">To be added.</param>
        <param name="symmetricAlgorithm">To be added.</param>
        <param name="symAlg">To be added.</param>
        <summary>
          <span data-ttu-id="c9a32-273">Encrypts data in the specified byte array using the specified symmetric algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-273">Encrypts data in the specified byte array using the specified symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9a32-274">A byte array of encrypted data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-274">A byte array of encrypted data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-275">반환 된 바이트 배열에 배치할 수 있습니다는 `<CipherValue>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-275">The returned byte array can be placed into a `<CipherValue>` element.</span></span> <span data-ttu-id="c9a32-276">이 메서드는 데이터에 지정 하는 것으로 가정은 `plaintext` 매개 변수는 XML 데이터를 포함 하는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-276">This method assumes that the data specified in the `plaintext` parameter is a byte array that contains XML data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-277">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-277">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-278">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-278">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-279">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-279">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-280">이 예제에서는 적절 한 암호 해독 키를 찾는 데 사용 하는 암호 해독 메서드에서 암호화 된 XML 문서에 키 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-280">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="c9a32-281">다음 코드 예제에서는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-281">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="c9a32-282">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-282">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9a32-283">The value of the <paramref name="plaintext" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-283">The value of the <paramref name="plaintext" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c9a32-284">-or-  The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-284">-or-  The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="c9a32-285">The data could not be encrypted using the specified parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-285">The data could not be encrypted using the specified parameters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptData">
      <MemberSignature Language="C#" Value="public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm, bool content);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symAlg, bool content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.SymmetricAlgorithm symAlg, bool content) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (inputElement As XmlElement, symAlg As SymmetricAlgorithm, content As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg, bool content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EncryptData : System.Xml.XmlElement * System.Security.Cryptography.SymmetricAlgorithm * bool -&gt; byte[]" Usage="encryptedXml.EncryptData (inputElement, symAlg, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="content" Type="System.Boolean" Index="2" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="c9a32-286">The element or its contents to encrypt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-286">The element or its contents to encrypt.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">To be added.</param>
        <param name="symAlg">To be added.</param>
        <param name="content">
          <span data-ttu-id="c9a32-287">
            <see langword="true" /> to encrypt only the contents of the element; <see langword="false" /> to encrypt the entire element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-287">
              <see langword="true" /> to encrypt only the contents of the element; <see langword="false" /> to encrypt the entire element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9a32-288">Encrypts the specified element or its contents using the specified symmetric algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-288">Encrypts the specified element or its contents using the specified symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9a32-289">A byte array that contains the encrypted data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-289">A byte array that contains the encrypted data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-290">반환 된 바이트 배열 데이터의 값은 고 `<CipherValue>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-290">The returned byte array data is the value of the `<CipherValue>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-291">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-291">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-292">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-292">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9a32-293">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-293">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c9a32-294">-or-  The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-294">-or-  The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptKey">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-295">Encrypts the key that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-295">Encrypts the key that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-296">사용 하 여는 <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> 받는 사람 암호 해독을 사용 하 여 키를 암호화 하는 메서드는 `<EncryptedData>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-296">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="c9a32-297">이 메서드 내에서 암호화 된 키를 배치는 `<EncryptedKey>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-297">This method places the encrypted key within an `<EncryptedKey>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-298">다음 코드 예제에서는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-298">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="c9a32-299">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-299">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member EncryptKey : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.EncryptKey (keyData, symAlg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="c9a32-300">The key to encrypt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-300">The key to encrypt.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">To be added.</param>
        <param name="symAlg">To be added.</param>
        <summary>
          <span data-ttu-id="c9a32-301">Encrypts a key using a symmetric algorithm that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-301">Encrypts a key using a symmetric algorithm that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9a32-302">A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-302">A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-303">사용 하 여는 <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> 받는 사람 암호 해독을 사용 하 여 키를 암호화 하는 메서드는 `<EncryptedData>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-303">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="c9a32-304">에 대 한 값을 허용 하는이 메서드는 `symmetricAlgorithm` Triple DES 알고리즘 또는 (Rijndael이 라고도 함) AES 키 래핑 알고리즘을 나타내는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-304">This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).</span></span>  
  
 <span data-ttu-id="c9a32-305">이 메서드가 자동으로 암호화 된 키 배치 하 고 하지 않습니다 확인 프로그램 `<EncryptedKey>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-305">Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.</span></span>  <span data-ttu-id="c9a32-306">수동으로 만들어야 합니다는 `<EncryptedKey>` 문서 내의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-306">You must manually create the `<EncryptedKey>` element within your document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9a32-307">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-307">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c9a32-308">-or-  The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-308">-or-  The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="c9a32-309">The value of the <paramref name="symmetricAlgorithm" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-309">The value of the <paramref name="symmetricAlgorithm" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool useOAEP) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool fOAEP) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member EncryptKey : byte[] * System.Security.Cryptography.RSA * bool -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.EncryptKey (keyData, rsa, fOAEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="rsa" Type="System.Security.Cryptography.RSA" Index="1" />
        <Parameter Name="useOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="fOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="c9a32-310">The key to encrypt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-310">The key to encrypt.</span>
          </span>
        </param>
        <param name="rsa">
          <span data-ttu-id="c9a32-311">The asymmetric key used to encrypt <c>keyData</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-311">The asymmetric key used to encrypt <c>keyData</c>.</span>
          </span>
        </param>
        <param name="useOAEP">To be added.</param>
        <param name="fOAEP">To be added.</param>
        <summary>
          <span data-ttu-id="c9a32-312">Encrypts the key that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-312">Encrypts the key that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9a32-313">A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-313">A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-314">사용 하 여는 <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> 받는 사람 암호 해독을 사용 하 여 키를 암호화 하는 메서드는 `<EncryptedData>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-314">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="c9a32-315">이 메서드는 값에 대 한 허용 `rsa` RSA PKCS #1 v1.5 알고리즘 또는 PKCS #1 RSA 형식 2 알고리즘 (OAEP 라고도 함)을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-315">This method accepts a value for `rsa` that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP).</span></span>  
  
 <span data-ttu-id="c9a32-316">이 메서드가 자동으로 암호화 된 키 배치 하 고 하지 않습니다 확인 프로그램 `<EncryptedKey>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-316">Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.</span></span>  <span data-ttu-id="c9a32-317">수동으로 만들어야 합니다는 `<EncryptedKey>` 문서 내의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-317">You must manually create the `<EncryptedKey>` element within your document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-318">다음 코드 예제에서는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-318">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="c9a32-319">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-319">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9a32-320">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-320">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c9a32-321">-or-  The value of the <paramref name="rsa" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-321">-or-  The value of the <paramref name="rsa" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionIV">
      <MemberSignature Language="C#" Value="public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDecryptionIV(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDecryptionIV(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDecryptionIV(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDecryptionIV(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionIV : System.Security.Cryptography.Xml.EncryptedData * string -&gt; byte[]&#xA;override this.GetDecryptionIV : System.Security.Cryptography.Xml.EncryptedData * string -&gt; byte[]" Usage="encryptedXml.GetDecryptionIV (encryptedData, symAlgUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithmUri" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlgUri" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData">
          <span data-ttu-id="c9a32-322">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the initialization vector (IV) to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-322">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the initialization vector (IV) to retrieve.</span>
          </span>
        </param>
        <param name="symmetricAlgorithmUri">To be added.</param>
        <param name="symAlgUri">To be added.</param>
        <summary>
          <span data-ttu-id="c9a32-323">Retrieves the decryption initialization vector (IV) from an <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-323">Retrieves the decryption initialization vector (IV) from an <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9a32-324">A byte array that contains the decryption initialization vector (IV).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-324">A byte array that contains the decryption initialization vector (IV).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-325">지정 된 <xref:System.Security.Cryptography.Xml.EncryptedData> 개체를이 메서드는 암호 해독 IV (초기화 벡터)를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-325">Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method retrieves the decryption initialization vector (IV).</span></span> <span data-ttu-id="c9a32-326">첫 번째 바이트와 IV를 검색 하는 기본 동작의 <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-326">The default behavior retrieves the IV as the first bytes of the <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> byte array.</span></span>  
  
 <span data-ttu-id="c9a32-327">지원 되는 식별자 URI (Uniform Resource) 값의 목록에 대 한는 `symmetricAlgorithmUri` 매개 변수, 상수 필드 목록은 연결 된 참조는 <xref:System.Security.Cryptography.Xml.EncryptedXml> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-327">For a list of Uniform Resource Identifier (URI) values supported by the `symmetricAlgorithmUri` parameter, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9a32-328">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-328">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="c9a32-329">The value of the <paramref name="encryptedData" /> parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> property that is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-329">The value of the <paramref name="encryptedData" /> parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> property that is null.</span>
          </span>
          <span data-ttu-id="c9a32-330">-or-  The value of the <paramref name="symmetricAlgorithmUrisymAlgUri" /> parameter is not a supported algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-330">-or-  The value of the <paramref name="symmetricAlgorithmUrisymAlgUri" /> parameter is not a supported algorithm.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionKey">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::SymmetricAlgorithm ^ GetDecryptionKey(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::SymmetricAlgorithm ^ GetDecryptionKey(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionKey : System.Security.Cryptography.Xml.EncryptedData * string -&gt; System.Security.Cryptography.SymmetricAlgorithm&#xA;override this.GetDecryptionKey : System.Security.Cryptography.Xml.EncryptedData * string -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="encryptedXml.GetDecryptionKey (encryptedData, symAlgUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithmUri" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlgUri" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData">
          <span data-ttu-id="c9a32-331">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the decryption key to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-331">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the decryption key to retrieve.</span>
          </span>
        </param>
        <param name="symmetricAlgorithmUri">To be added.</param>
        <param name="symAlgUri">To be added.</param>
        <summary>
          <span data-ttu-id="c9a32-332">Retrieves the decryption key from the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-332">Retrieves the decryption key from the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9a32-333">A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> object associated with the decryption key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-333">A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> object associated with the decryption key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-334">지정 된 <xref:System.Security.Cryptography.Xml.EncryptedData> 개체를 일반 텍스트 데이터를 검색 하는 데 사용할 수 있는 암호 해독 키에 대 한이 메서드를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-334">Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method looks for the decryption key that can be used to retrieve the plain text data.</span></span> <span data-ttu-id="c9a32-335">키 이름이 지정 된 경우 메서드는 대칭 알고리즘 또는 키 이름 매핑을에 정의 된 키 이름이와 연결 된 비대칭 알고리즘 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-335">If a key name is specified, the method looks for the symmetric algorithm or asymmetric algorithm that is associated with the key name as defined in the key name mapping.</span></span> <span data-ttu-id="c9a32-336">그렇지 않으면 하면 검색 방법 <xref:System.Security.Cryptography.Xml.EncryptedKey> 개체가 지정 된 경우 메서드는 로드는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 개체와 호출은 <xref:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c9a32-336">Otherwise, if a retrieval method or an <xref:System.Security.Cryptography.Xml.EncryptedKey> object is specified, the method loads the <xref:System.Security.Cryptography.Xml.EncryptedKey> object and calls the <xref:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9a32-337">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-337">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="c9a32-338">The encryptedData parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> property that is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-338">The encryptedData parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> property that is null.</span>
          </span>
          <span data-ttu-id="c9a32-339">-or-  The encrypted key cannot be retrieved using the specified parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-339">-or-  The encrypted key cannot be retrieved using the specified parameters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIdElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetIdElement(class System.Xml.XmlDocument document, string idValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(System.Xml.XmlDocument,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdElement (document As XmlDocument, idValue As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetIdElement(System::Xml::XmlDocument ^ document, System::String ^ idValue);" />
      <MemberSignature Language="F#" Value="abstract member GetIdElement : System.Xml.XmlDocument * string -&gt; System.Xml.XmlElement&#xA;override this.GetIdElement : System.Xml.XmlDocument * string -&gt; System.Xml.XmlElement" Usage="encryptedXml.GetIdElement (document, idValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="idValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="c9a32-340">An <see cref="T:System.Xml.XmlDocument" /> object that contains an element with an ID value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-340">An <see cref="T:System.Xml.XmlDocument" /> object that contains an element with an ID value.</span>
          </span>
        </param>
        <param name="idValue">
          <span data-ttu-id="c9a32-341">A string that represents the ID value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-341">A string that represents the ID value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9a32-342">Determines how to resolve internal Uniform Resource Identifier (URI) references.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-342">Determines how to resolve internal Uniform Resource Identifier (URI) references.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9a32-343">An <see cref="T:System.Xml.XmlElement" /> object that contains an ID indicating how internal Uniform Resource Identifiers (URIs) are to be resolved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-343">An <see cref="T:System.Xml.XmlElement" /> object that contains an ID indicating how internal Uniform Resource Identifiers (URIs) are to be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-344"><xref:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement%2A> 메서드 내부 Uniform Resource Identifier (Uri)를 해결 하는 방법을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-344">The <xref:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement%2A> method determines how to resolve internal Uniform Resource Identifiers (URIs).</span></span> <span data-ttu-id="c9a32-345">지정된 된 값을 사용 하 여 요소 또는 ID 특성에 지정 된 값을 사용 하 여 요소를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-345">It looks for elements with a specified value or for elements with an ID attribute that has a specified value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CipherMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CipherMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As CipherMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CipherMode Mode { System::Security::Cryptography::CipherMode get(); void set(System::Security::Cryptography::CipherMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Security.Cryptography.CipherMode with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-346">Gets or sets the cipher mode used for XML encryption.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-346">Gets or sets the cipher mode used for XML encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9a32-347">
            <see cref="T:System.Security.Cryptography.CipherMode" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-347">One of the <see cref="T:System.Security.Cryptography.CipherMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-348">암호화 CBC (블록 체인) 모드는 XML 암호화에 대 한 기본 암호화 모드.</span><span class="sxs-lookup"><span data-stu-id="c9a32-348">Cipher Block Chaining (CBC) mode is the default cipher mode for XML encryption.</span></span> <span data-ttu-id="c9a32-349">다른 암호화 모드를 지정 하려면이 속성을 사용할 수 있습니다는 <xref:System.Security.Cryptography.CipherMode> Cipher Feedback (CFB) 모드와 같은 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-349">You can use this property to specify other cipher modes of the <xref:System.Security.Cryptography.CipherMode> enumeration, such as Cipher Feedback (CFB) mode.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Security.Cryptography.PaddingMode with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-350">Gets or sets the padding mode used for XML encryption.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-350">Gets or sets the padding mode used for XML encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9a32-351">암호화에 사용되는 패딩 형식을 지정하는 <see cref="T:System.Security.Cryptography.PaddingMode" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-351">One of the <see cref="T:System.Security.Cryptography.PaddingMode" /> values that specifies the type of padding used for encryption.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-352">Iso-10126 안쪽 여백은 XML 암호화에 대 한 기본 패딩 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-352">ISO-10126 padding is the default padding mode for XML encryption.</span></span> <span data-ttu-id="c9a32-353">다른 패딩 모드를 지정 하려면이 속성을 사용할 수 있습니다는 <xref:System.Security.Cryptography.PaddingMode> ANSI X9.23 또는 PKCS # 5의 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-353">You can use this property to specify other padding modes of the <xref:System.Security.Cryptography.PaddingMode> enumeration, such as ANSI X9.23 or PKCS#5.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recipient">
      <MemberSignature Language="C#" Value="public string Recipient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Recipient" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Recipient" />
      <MemberSignature Language="VB.NET" Value="Public Property Recipient As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Recipient { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Recipient : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Recipient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-354">Gets or sets the recipient of the encrypted key information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-354">Gets or sets the recipient of the encrypted key information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9a32-355">암호화된 키 정보의 수신자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-355">The recipient of the encrypted key information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-356">에 액세스할 수 있습니다는 <xref:System.Security.Cryptography.Xml.EncryptedXml> 검사 하 여 키 이름에서 참조 하는 개체는 <xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-356">You can access the <xref:System.Security.Cryptography.Xml.EncryptedXml> object referenced by a key name by examining the <xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A> property.</span></span>  
  
 <span data-ttu-id="c9a32-357">사용 하 여는 <xref:System.Security.Cryptography.Xml.EncryptedXml.Recipient%2A> 속성을 식별 하는 <xref:System.Security.Cryptography.Xml.EncryptedXml> 현재 수신자를 암호 해독 키를 검색 해독할 수 있는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-357">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.Recipient%2A> property to identify the <xref:System.Security.Cryptography.Xml.EncryptedXml> element that the current recipient can decrypt to retrieve a decryption key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceData">
      <MemberSignature Language="C#" Value="public void ReplaceData (System.Xml.XmlElement inputElement, byte[] decryptedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReplaceData(class System.Xml.XmlElement inputElement, unsigned int8[] decryptedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(System.Xml.XmlElement,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceData (inputElement As XmlElement, decryptedData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplaceData(System::Xml::XmlElement ^ inputElement, cli::array &lt;System::Byte&gt; ^ decryptedData);" />
      <MemberSignature Language="F#" Value="member this.ReplaceData : System.Xml.XmlElement * byte[] -&gt; unit" Usage="encryptedXml.ReplaceData (inputElement, decryptedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="decryptedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="c9a32-358">The <see langword="&lt;EncryptedData&gt;" /> element to replace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-358">The <see langword="&lt;EncryptedData&gt;" /> element to replace.</span>
          </span>
        </param>
        <param name="decryptedData">
          <span data-ttu-id="c9a32-359">The decrypted data to replace <c>inputElement</c> with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-359">The decrypted data to replace <c>inputElement</c> with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9a32-360">Replaces an <see langword="&lt;EncryptedData&gt;" /> element with a specified decrypted sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-360">Replaces an <see langword="&lt;EncryptedData&gt;" /> element with a specified decrypted sequence of bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-361"><xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData%2A> 메서드 대체는 `<EncryptedData>` 의 값을 가진 요소가 `decryptedData` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-361">The <xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData%2A> method replaces an `<EncryptedData>` element with the value of the `decryptedData` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-362">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-362">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-363">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-363">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9a32-364">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-364">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c9a32-365">-or-  The value of the <paramref name="decryptedData" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-365">-or-  The value of the <paramref name="decryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceElement">
      <MemberSignature Language="C#" Value="public static void ReplaceElement (System.Xml.XmlElement inputElement, System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReplaceElement(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReplaceElement(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, bool content);" />
      <MemberSignature Language="F#" Value="static member ReplaceElement : System.Xml.XmlElement * System.Security.Cryptography.Xml.EncryptedData * bool -&gt; unit" Usage="System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement (inputElement, encryptedData, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" />
        <Parameter Name="content" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="c9a32-366">The element to replace with an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-366">The element to replace with an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </param>
        <param name="encryptedData">
          <span data-ttu-id="c9a32-367">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object to replace the <c>inputElement</c> parameter with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-367">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object to replace the <c>inputElement</c> parameter with.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="c9a32-368">
            <see langword="true" /> to replace only the contents of the element; <see langword="false" /> to replace the entire element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-368">
              <see langword="true" /> to replace only the contents of the element; <see langword="false" /> to replace the entire element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9a32-369">Replaces the specified element with the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-369">Replaces the specified element with the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-370"><xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement%2A> 메서드 대체는 `inputElement` 로 지정한 값 매개 변수는 `encryptedData` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-370">The <xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement%2A> method replaces the `inputElement` parameter with the value specified by the `encryptedData` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-371">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-371">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-372">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-372">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9a32-373">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-373">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c9a32-374">-or-  The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-374">-or-  The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ Resolver { System::Xml::XmlResolver ^ get(); void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resolver : System.Xml.XmlResolver with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Resolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-375">Gets or sets the <see cref="T:System.Xml.XmlResolver" /> object used by the Document Object Model (DOM) to resolve external XML references.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-375">Gets or sets the <see cref="T:System.Xml.XmlResolver" /> object used by the Document Object Model (DOM) to resolve external XML references.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9a32-376">
            <see cref="T:System.Xml.XmlResolver" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-376">An <see cref="T:System.Xml.XmlResolver" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-377">이 속성을 포함 한 <xref:System.Xml.XmlResolver> 엔터티, 문서 유형 정의 (Dtd) 또는 스키마와 같은 외부 XML 리소스를 확인 하는 데 사용 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-377">This property contains an <xref:System.Xml.XmlResolver> object used to resolve external XML resources such as entities, document type definitions (DTDs), or schemas.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDSigSearchDepth">
      <MemberSignature Language="C#" Value="public int XmlDSigSearchDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 XmlDSigSearchDepth" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDSigSearchDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int XmlDSigSearchDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDSigSearchDepth : int with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-378">Gets or sets the XML digital signature recursion depth to prevent infinite recursion and stack overflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-378">Gets or sets the XML digital signature recursion depth to prevent infinite recursion and stack overflow.</span>
          </span>
          <span data-ttu-id="c9a32-379">This might happen if the digital signature XML contains the URI which then points back to the original XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-379">This might happen if the digital signature XML contains the URI which then points back to the original XML.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9a32-380">
            <see cref="T:System.Int32" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-380">Returns <see cref="T:System.Int32" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES128KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES128KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES128KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES128KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES128KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES128KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-381">Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-381">Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          </span>
          <span data-ttu-id="c9a32-382">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-382">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-383">값은 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#kw-aes128"입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-383">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes128".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES128Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES128Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES128Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES128Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES128Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES128Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-384">Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-384">Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          </span>
          <span data-ttu-id="c9a32-385">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-385">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-386">값은 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url> 필드는 "http://www.w3.org/2001/04/xmlenc#aes128-cbc"입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-386">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url> field is "http://www.w3.org/2001/04/xmlenc#aes128-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-387">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-387">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-388">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-388">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES192KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES192KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES192KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES192KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES192KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES192KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-389">Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-389">Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          </span>
          <span data-ttu-id="c9a32-390">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-390">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-391">값은 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#kw-aes192"입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-391">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes192".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES192Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES192Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES192Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES192Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES192Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES192Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-392">Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-392">Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          </span>
          <span data-ttu-id="c9a32-393">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-393">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-394">값은 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url> 필드는 "http://www.w3.org/2001/04/xmlenc#aes192-cbc"입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-394">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url> field is "http://www.w3.org/2001/04/xmlenc#aes192-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-395">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-395">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-396">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-396">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES256KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES256KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES256KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES256KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES256KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES256KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-397">Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-397">Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          </span>
          <span data-ttu-id="c9a32-398">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-398">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-399">값은 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#kw-aes256"입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-399">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes256".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES256Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES256Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES256Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-400">Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-400">Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          </span>
          <span data-ttu-id="c9a32-401">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-401">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-402">값은 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url> 필드는 "http://www.w3.org/2001/04/xmlenc#aes256-cbc"입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-402">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url> field is "http://www.w3.org/2001/04/xmlenc#aes256-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-403">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-403">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-404">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-404">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncDESUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncDESUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncDESUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncDESUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncDESUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncDESUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-405">Represents the namespace Uniform Resource Identifier (URI) for the Digital Encryption Standard (DES) algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-405">Represents the namespace Uniform Resource Identifier (URI) for the Digital Encryption Standard (DES) algorithm.</span>
          </span>
          <span data-ttu-id="c9a32-406">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-406">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-407">값은 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#des-cbc"입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-407">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl> field is "http://www.w3.org/2001/04/xmlenc#des-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-408">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-408">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-409">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-409">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncElementContentUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncElementContentUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncElementContentUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncElementContentUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncElementContentUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncElementContentUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-410">Represents the namespace Uniform Resource Identifier (URI) for XML encryption element content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-410">Represents the namespace Uniform Resource Identifier (URI) for XML encryption element content.</span>
          </span>
          <span data-ttu-id="c9a32-411">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-411">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-412">값은 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#Content"입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-412">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl> field is "http://www.w3.org/2001/04/xmlenc#Content".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncElementUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncElementUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncElementUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncElementUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncElementUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncElementUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-413">Represents the namespace Uniform Resource Identifier (URI) for an XML encryption element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-413">Represents the namespace Uniform Resource Identifier (URI) for an XML encryption element.</span>
          </span>
          <span data-ttu-id="c9a32-414">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-414">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-415">값은 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#Element"입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-415">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl> field is "http://www.w3.org/2001/04/xmlenc#Element".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-416">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-416">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-417">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-417">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncEncryptedKeyUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncEncryptedKeyUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncEncryptedKeyUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncEncryptedKeyUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncEncryptedKeyUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncEncryptedKeyUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-418">Represents the namespace Uniform Resource Identifier (URI) for the XML encryption <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-418">Represents the namespace Uniform Resource Identifier (URI) for the XML encryption <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
          <span data-ttu-id="c9a32-419">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-419">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-420">값은 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#EncryptedKey"입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-420">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl> field is "http://www.w3.org/2001/04/xmlenc#EncryptedKey".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncNamespaceUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncNamespaceUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncNamespaceUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncNamespaceUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncNamespaceUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncNamespaceUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-421">Represents the namespace Uniform Resource Identifier (URI) for XML encryption syntax and processing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-421">Represents the namespace Uniform Resource Identifier (URI) for XML encryption syntax and processing.</span>
          </span>
          <span data-ttu-id="c9a32-422">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-422">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-423">값은 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#"입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-423">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl> field is "http://www.w3.org/2001/04/xmlenc#".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncRSA15Url">
      <MemberSignature Language="C#" Value="public const string XmlEncRSA15Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncRSA15Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncRSA15Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncRSA15Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncRSA15Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-424">Represents the namespace Uniform Resource Identifier (URI) for the RSA Public Key Cryptography Standard (PKCS) Version 1.5 algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-424">Represents the namespace Uniform Resource Identifier (URI) for the RSA Public Key Cryptography Standard (PKCS) Version 1.5 algorithm.</span>
          </span>
          <span data-ttu-id="c9a32-425">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-425">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-426">값은 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> 필드는 "http://www.w3.org/2001/04/xmlenc#rsa-1_5"입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-426">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> field is "http://www.w3.org/2001/04/xmlenc#rsa-1_5".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-427">다음 코드 예제에서는 비대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-427">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="c9a32-428">이 예제는 문서를 암호화 하는 대칭 세션 키를 만들고 비대칭 키를 사용 하 여 XML 문서에 세션 키의 암호화 된 버전을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-428">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncRSAOAEPUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncRSAOAEPUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncRSAOAEPUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncRSAOAEPUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncRSAOAEPUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncRSAOAEPUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-429">Represents the namespace Uniform Resource Identifier (URI) for the RSA Optimal Asymmetric Encryption Padding (OAEP) encryption algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-429">Represents the namespace Uniform Resource Identifier (URI) for the RSA Optimal Asymmetric Encryption Padding (OAEP) encryption algorithm.</span>
          </span>
          <span data-ttu-id="c9a32-430">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-430">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-431">값은 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p"입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-431">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> field is "http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncSHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlEncSHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncSHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncSHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncSHA256Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncSHA256Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-432">Represents the namespace Uniform Resource Identifier (URI) for the SHA-256 algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-432">Represents the namespace Uniform Resource Identifier (URI) for the SHA-256 algorithm.</span>
          </span>
          <span data-ttu-id="c9a32-433">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-433">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-434">값은 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url> 필드는 "http://www.w3.org/2001/04/xmlenc#sha256"입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-434">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url> field is "http://www.w3.org/2001/04/xmlenc#sha256".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncSHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlEncSHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncSHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncSHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncSHA512Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncSHA512Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-435">Represents the namespace Uniform Resource Identifier (URI) for the SHA-512 algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-435">Represents the namespace Uniform Resource Identifier (URI) for the SHA-512 algorithm.</span>
          </span>
          <span data-ttu-id="c9a32-436">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-436">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-437">값은 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url> 필드는 "http://www.w3.org/2001/04/xmlenc#sha512"입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-437">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url> field is "http://www.w3.org/2001/04/xmlenc#sha512".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncTripleDESKeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncTripleDESKeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncTripleDESKeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncTripleDESKeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncTripleDESKeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncTripleDESKeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-438">Represents the namespace Uniform Resource Identifier (URI) for the TRIPLEDES key wrap algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-438">Represents the namespace Uniform Resource Identifier (URI) for the TRIPLEDES key wrap algorithm.</span>
          </span>
          <span data-ttu-id="c9a32-439">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-439">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-440">값은 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#kw-tripledes"입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-440">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-tripledes".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncTripleDESUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncTripleDESUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncTripleDESUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncTripleDESUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncTripleDESUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncTripleDESUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9a32-441">Represents the namespace Uniform Resource Identifier (URI) for the Triple DES algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-441">Represents the namespace Uniform Resource Identifier (URI) for the Triple DES algorithm.</span>
          </span>
          <span data-ttu-id="c9a32-442">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9a32-442">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a32-443">값은 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl> 필드는 "http://www.w3.org/2001/04/xmlenc#tripledes-cbc"입니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-443">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl> field is "http://www.w3.org/2001/04/xmlenc#tripledes-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a32-444">다음 코드 예제에서는 대칭 키를 사용 하 여 XML 문서를 암호화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-444">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="c9a32-445">이 예제에서는 암호화 된 XML 문서에서 키 정보를 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c9a32-445">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>