<Type Name="EncryptedKey" FullName="System.Security.Cryptography.Xml.EncryptedKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="13b1ddc53c37605d41c488bd5d383ec25fb53fac" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36625982" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EncryptedKey : System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncryptedKey extends System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncryptedKey&#xA;Inherits EncryptedType" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedKey sealed : System::Security::Cryptography::Xml::EncryptedType" />
  <TypeSignature Language="F#" Value="type EncryptedKey = class&#xA;    inherit EncryptedType" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.EncryptedType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>XML 암호화의 <see langword="&lt;EncryptedKey&gt;" /> 요소를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 클래스는 나타냅니다는 `<EncryptedKey>` XML 암호화에는 요소입니다. `<EncryptedKey>` 요소는 암호화 키를 보내는 데 사용 됩니다. 독립 실행형 XML 문서에서 만들 수 있습니다, 응용 프로그램 문서, 안에 배치 또는 내부에 있을 것는 `<EncryptedData>` 의 자식으로 `<KeyInfo>` 요소입니다. 키 값은 항상 받는 사람에 게 암호화 됩니다. 때 `<EncryptedKey>` 은 암호를 해독 결과 키를 사용할 수는 `<EncryptionMethod>` 추가 처리 없이 알고리즘입니다.  
  
 `<EncryptedKey>` 요소는 비슷합니다는 `<EncryptedData>` 의 요소는 <xref:System.Security.Cryptography.Xml.EncryptedData> 암호화 된 데이터는 키 값이 항상 클래스입니다.  
  
   
  
## Examples  
 암호화를 사용 하 여 XML 요소 암호 해독 하는 방법을 보여 주는 다음 예제는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 클래스입니다. 이 예에서는 다음의 다양 한 속성의 값을 표시는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 콘솔에는 클래스입니다.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자의 새 인스턴스를 만듭니다.는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 클래스입니다. XML 암호화 표준에 대 한 자세한 내용은 참조에 있는 XML 암호화 구문 및 처리 문서 http://www.w3.org/TR/xmlenc-core/합니다.  
  
   
  
## Examples  
 암호화를 사용 하 여 XML 요소 암호 해독 하는 방법을 보여 주는 다음 예제는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 클래스입니다. 이 예에서는 다음의 다양 한 속성의 값을 표시는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 콘솔에는 클래스입니다.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddReference">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see langword="" /> 요소에 <see langword="&amp;lt;ReferenceList&amp;gt;" />참조 요소를 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddReference">
      <MemberSignature Language="C#" Value="public void AddReference (System.Security.Cryptography.Xml.DataReference dataReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReference(class System.Security.Cryptography.Xml.DataReference dataReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReference(System::Security::Cryptography::Xml::DataReference ^ dataReference);" />
      <MemberSignature Language="F#" Value="member this.AddReference : System.Security.Cryptography.Xml.DataReference -&gt; unit" Usage="encryptedKey.AddReference dataReference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataReference" Type="System.Security.Cryptography.Xml.DataReference" />
      </Parameters>
      <Docs>
        <param name="dataReference">
          <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 속성에 추가할 <see cref="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" /> 개체입니다.</param>
        <summary>
          <see langword="&lt;ReferenceList&gt;" /> 요소에 <see langword="&lt;DataReference&gt;" /> 요소를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 추가 <xref:System.Security.Cryptography.Xml.DataReference> 개체는 <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> 속성의는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 개체입니다. `<DataReference>` 요소에 지정 된 키를 사용 하 여 암호화 된 암호화 된 데이터를 가리키는 `<EncryptedKey>` 요소입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddReference">
      <MemberSignature Language="C#" Value="public void AddReference (System.Security.Cryptography.Xml.KeyReference keyReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReference(class System.Security.Cryptography.Xml.KeyReference keyReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReference(System::Security::Cryptography::Xml::KeyReference ^ keyReference);" />
      <MemberSignature Language="F#" Value="member this.AddReference : System.Security.Cryptography.Xml.KeyReference -&gt; unit" Usage="encryptedKey.AddReference keyReference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyReference" Type="System.Security.Cryptography.Xml.KeyReference" />
      </Parameters>
      <Docs>
        <param name="keyReference">
          <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 속성에 추가할 <see cref="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" /> 개체입니다.</param>
        <summary>
          <see langword="&lt;ReferenceList&gt;" /> 요소에 <see langword="&lt;KeyReference&gt;" /> 요소를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 추가 <xref:System.Security.Cryptography.Xml.KeyReference> 개체는 <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> 속성은 <xref:System.Security.Cryptography.Xml.EncryptedKey> 개체입니다. `<KeyReference>` 요소에 지정 된 키를 사용 하 여 암호화 된 암호화 된 키를 가리키는 `<EncryptedKey>` 요소입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CarriedKeyName">
      <MemberSignature Language="C#" Value="public string CarriedKeyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CarriedKeyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName" />
      <MemberSignature Language="VB.NET" Value="Public Property CarriedKeyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CarriedKeyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CarriedKeyName : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 암호화의 선택적 <see langword="&lt;CarriedKeyName&gt;" /> 요소를 가져오거나 설정합니다.</summary>
        <value>키 값의 이름을 나타내는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<CarriedKeyName>` 요소는 사용자가 읽을 수 있는 이름을 키 값을 연결 하는 선택적 요소입니다. 이 이름을 사용 하 여 키를 참조 하도록 한 다음 사용할 수 있습니다는 `<KeyName>` 내의 요소는 `<KeyInfo>` 요소입니다. 동일한 `<CarriedKeyName>` ID 값을 달리 요소 값은 단일 문서에서 여러 번 발생할 수 있습니다. 키의 값 모두에 동일 해야 `<EncryptedKey>` 같은 식별 되는 요소 `<CarriedKeyName>` XML 문서 내에서 이름입니다. 공백은 값에 중요 합니다 되므로 `<KeyName>` 요소인 공백은 중요 값에도 합니다.는 `<CarriedKeyName>` 요소입니다.  
  
   
  
## Examples  
 암호화를 사용 하 여 XML 요소 암호 해독 하는 방법을 보여 주는 다음 예제는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 클래스입니다. 이 예에서는 다음의 다양 한 속성의 값을 표시는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 콘솔에는 클래스입니다.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="override this.GetXml : unit -&gt; System.Xml.XmlElement" Usage="encryptedKey.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 개체의 XML 표현을 반환합니다.</summary>
        <returns>XML 암호화의 <see langword="&lt;EncryptedKey&gt;" /> 요소를 나타내는 <see cref="T:System.Xml.XmlElement" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 출력할는 `<EncryptedKey>` xml에서 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 값이 <see langword="null" />입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public override void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="override this.LoadXml : System.Xml.XmlElement -&gt; unit" Usage="encryptedKey.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">
          <see langword="&lt;EncryptedKey&gt;" /> 요소에 사용할 XML 요소를 나타내는 <see cref="T:System.Xml.XmlElement" />입니다.</param>
        <summary>지정된 XML 정보를 XML 암호화의 <see langword="&lt;EncryptedKey&gt;" /> 요소로 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 기존 XML 요소를 로드 하는 `<EncryptedKey>` 나타내는 요소는 <xref:System.Security.Cryptography.Xml.EncryptedData> 개체입니다.  
  
   
  
## Examples  
 암호화를 사용 하 여 XML 요소 암호 해독 하는 방법을 보여 주는 다음 예제는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 클래스입니다. 이 예에서는 다음의 다양 한 속성의 값을 표시는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 콘솔에는 클래스입니다.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="value" /> 매개 변수에 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> 요소가 포함되지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Recipient">
      <MemberSignature Language="C#" Value="public string Recipient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Recipient" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedKey.Recipient" />
      <MemberSignature Language="VB.NET" Value="Public Property Recipient As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Recipient { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Recipient : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedKey.Recipient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 암호화의 선택적 <see langword="Recipient" /> 특성을 가져오거나 설정합니다.</summary>
        <value>
          <see langword="Recipient" /> 특성의 값을 나타내는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<Recipient>` 특성은 암호화 된 키 값이 위한는 받는 사람에 대 한 정보를 포함 하는 선택적 특성입니다. 해당 내용이 종속 응용 프로그램에 설명 합니다.  
  
   
  
## Examples  
 암호화를 사용 하 여 XML 요소 암호 해독 하는 방법을 보여 주는 다음 예제는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 클래스입니다. 이 예에서는 다음의 다양 한 속성의 값을 표시는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 콘솔에는 클래스입니다.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceList">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.ReferenceList ReferenceList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.ReferenceList ReferenceList" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferenceList As ReferenceList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::ReferenceList ^ ReferenceList { System::Security::Cryptography::Xml::ReferenceList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferenceList : System.Security.Cryptography.Xml.ReferenceList" Usage="System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.ReferenceList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 암호화의 <see langword="&lt;ReferenceList&gt;" /> 요소를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<ReferenceList>` 요소는 데이터와이 키를 사용 하 여 암호화 키에 대 한 포인터를 포함 하는 선택적 요소입니다. 참조 목록에 대 한 여러 참조가 포함 될 수 있습니다는 `<EncryptedKey>` 및 `<EncryptedData>` 사용 하 여 요소는 `<KeyReference>` 및 `<DataReference>` 요소 각각.  
  
   
  
## Examples  
 암호화를 사용 하 여 XML 요소 암호 해독 하는 방법을 보여 주는 다음 예제는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 클래스입니다. 이 예에서는 다음의 다양 한 속성의 값을 표시는 <xref:System.Security.Cryptography.Xml.EncryptedKey> 콘솔에는 클래스입니다.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>