<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlDsigExcC14NTransform.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5632b98055e3b4c97be0ca62a0ff43ff9812a03ec.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">632b98055e3b4c97be0ca62a0ff43ff9812a03ec</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>Represents the exclusive C14N XML canonicalization transform for a digital signature as defined by the World Wide Web Consortium (W3C), without comments.</source>
          <target state="translated">W3C(World Wide Web 컨소시엄)에서 정의한 대로 설명이 없는 디지털 서명의 배타적 C14N XML 정식화 변환을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> class represents the exclusive C14N XML canonicalization transform without comments.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> 의견 없이 단독 C14N XML 정규화 변환이 클래스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>This class is similar to the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform&gt;</ph> class, which allows a signer to create a digest using the canonical form of an XML document.</source>
          <target state="translated">이 클래스는 비슷합니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform&gt;</ph> 클래스를 사용 하는 서명자는 XML 문서의 정규 형식을 사용 하 여 다이제스트를 만듭니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>However, the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> class excludes ancestor context from a canonicalized subdocument.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> 정규화 된 하위 문서에서 상위 컨텍스트를 제외 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform&gt;</ph> class when you need to canonicalize an XML subdocument so that it is independent from its XML context.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform&gt;</ph> XML 컨텍스트에서 것은 XML을 정식화 하려면 때 클래스 하위 문서입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>For example, applications such as Web services that use signed XML within complex communication protocols often need to canonicalize XML in this manner.</source>
          <target state="translated">예를 들어 응용 프로그램 웹 서비스를 사용 하는 서명 된 XML 같은 복잡 한 통신 프로토콜 내의 종종 정식화 해야 XML이 방식에서입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>Such applications often envelop XML within various dynamically constructed elements, which can substantially change the document and cause XML signature verification to fail.</source>
          <target state="translated">이러한 응용 프로그램 실질적으로 문서를 변경 하 고 있는 XML 서명 확인에 실패할 다양 한 동적으로 생성 된 요소 내에서 명의 XML을 포함 하는 경우가 많습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> class solves this problem by excluding such ancestor context from the canonical subdocument.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> 정식화 된에서 이러한 부모 컨텍스트를 제외 하 여이 문제를 해결 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>Typically, you do not create a new instance of a canonicalization transform class.</source>
          <target state="translated">일반적으로 정규화 변환 클래스의 새 인스턴스를 만들지 마십시오.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>To specify a canonicalization transform, pass the Uniform Resource Identifier (URI) that describes a transform to the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A&gt;</ph> property, which is accessible from the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A&gt;</ph> property.</source>
          <target state="translated">정규화 변환을 지정 하려면 전달 된 식별자 URI (Uniform Resource) 변환을 설명 하는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A&gt;</ph> 에서 액세스할 수 있는 속성은 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>To acquire a reference to the canonicalization transform, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A&gt;</ph> property, which is accessible from the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A&gt;</ph> property.</source>
          <target state="translated">정규화 변환에 대 한 참조를 얻으려고 사용는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A&gt;</ph> 에서 액세스할 수 있는 속성은 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>You are required to create a new instance of a canonicalization transform class only when you want to manually hash an XML document or use your own canonicalization algorithm.</source>
          <target state="translated">수동으로 해시 하는 XML 문서 또는 사용자 고유의 정형화 알고리즘을 사용 하려는 경우에 정식화 변환 클래스의 새 인스턴스를 만들 하면 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>The URI that describes the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> class is defined by the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl&gt;</ph> field.</source>
          <target state="translated">설명 하는 URI는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> 여 클래스를 정의 고 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl&gt;</ph> 필드입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>The URI that describes the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> class is defined by the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl&gt;</ph> field.</source>
          <target state="translated">설명 하는 URI는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> 여 클래스를 정의 고 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl&gt;</ph> 필드입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>For more information about the exclusive C14N transform, see the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/.</source>
          <target state="translated">단독 C14N 변환에 대 한 자세한 내용은 www.w3.org/TR/xmldsig-core/에 World Wide Web Consortium (W3C)에서 사용할 수 있는 XMLDSIG 사양을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>The canonicalization algorithm is defined in the W3C Canonical XML specification, which is available at www.w3.org/2001/10/xml-exc-c14n.</source>
          <target state="translated">정형화 알고리즘이 www.w3.org/2001/10/xml-exc-c14n에서 사용할 수 있는 정식 W3C XML 사양에 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>The following code example shows how to sign an XML document with the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> class using an envelope signature.</source>
          <target state="translated">다음 코드 예제에서는 XML 문서를 서명 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> 봉투 (envelope) 서명을 사용 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include comments; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">설명을 포함하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> class specifying a value that determines whether to include comments.</source>
          <target state="translated">설명의 포함 여부를 결정하는 값을 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.String)">
          <source>The namespace prefixes to canonicalize using the standard canonicalization algorithm.</source>
          <target state="translated">표준 정식화 알고리즘을 사용하여 정식화할 네임스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> class specifying a list of namespace prefixes to canonicalize using the standard canonicalization algorithm.</source>
          <target state="translated">표준 정식화 알고리즘을 사용하여 정식화할 네임스페이스 접두사 목록을 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.String)">
          <source>The <ph id="ph1">`inclusiveNamespacesPrefixList`</ph> parameter contains a whitespace-delimited list of namespace prefixes to canonicalize using the standard canonicalization algorithm rather than the exclusive canonicalization algorithm.</source>
          <target state="translated"><ph id="ph1">`inclusiveNamespacesPrefixList`</ph> 매개 변수는 배타적 정형화 알고리즘이 아닌 표준 정형화 알고리즘을 사용 하 여 정식화 하려면 네임 스페이스 접두사의 공백 구분 목록을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.String)">
          <source>To specify the default namespace, which does not have a prefix, pass the special prefix "#default".</source>
          <target state="translated">에 접두사가 없으면, 기본 네임 스페이스를 지정 하려면 특수 한 접두사 "#default"를 전달 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include comments; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">설명을 포함하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean,System.String)">
          <source>The namespace prefixes to canonicalize using the standard canonicalization algorithm.</source>
          <target state="translated">표준 정식화 알고리즘을 사용하여 정식화할 네임스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> class specifying whether to include comments, and specifying a list of namespace prefixes.</source>
          <target state="translated">설명의 포함 여부와 네임스페이스 접두사 목록을 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean,System.String)">
          <source>The <ph id="ph1">`inclusiveNamespacesPrefixList`</ph> parameter contains a whitespace-delimited list of namespace prefixes to canonicalize using the standard canonicalization algorithm rather than the exclusive canonicalization algorithm.</source>
          <target state="translated"><ph id="ph1">`inclusiveNamespacesPrefixList`</ph> 매개 변수는 배타적 정형화 알고리즘이 아닌 표준 정형화 알고리즘을 사용 하 여 정식화 하려면 네임 스페이스 접두사의 공백 구분 목록을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean,System.String)">
          <source>To specify the default namespace, which does not have a prefix, pass the special prefix "#default".</source>
          <target state="translated">에 접두사가 없으면, 기본 네임 스페이스를 지정 하려면 특수 한 접두사 "#default"를 전달 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> object used to create a digest.</source>
          <target state="translated">다이제스트를 만드는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)">
          <source>Returns the digest associated with a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 개체와 관련된 다이제스트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)">
          <source>The digest associated with a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 개체와 관련된 다이제스트입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetInnerXml">
          <source>Returns an XML representation of the parameters of a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object that are suitable to be included as subelements of an XMLDSIG <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">XMLDSIG <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> 요소의 하위 요소로 포함하기에 적합한 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 개체의 매개 변수에 대한 XML 표현을 반환합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetInnerXml">
          <source>A list of the XML nodes that represent the transform-specific content needed to describe the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object in an XMLDSIG <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">XMLDSIG <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> 요소의 현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 개체를 설명하기 위해 필요한 변환 관련 내용을 나타내는 XML 노드 목록입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
          <source>Returns the output of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 개체의 출력을 반환합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput">
          <source>Returns the output of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 개체의 출력을 반환합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput">
          <source>The output of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 개체의 출력입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)">
          <source>The type of the output to return.</source>
          <target state="translated">반환될 출력의 형식입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)">
          <source>This must be one of the types in the <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes" /&gt;</ph> property.</source>
          <target state="translated">이 형식은 <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes" /&gt;</ph> 속성에 있는 형식 중 하나여야 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)">
          <source>Returns the output of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object as an object of the specified type.</source>
          <target state="translated">지정된 형식의 개체로 반환된 현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 개체의 출력을 반환합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)">
          <source>The output of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object as an object of the specified type.</source>
          <target state="translated">지정된 형식의 개체로 반환된 현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 개체의 출력입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput%2A&gt;</ph> method returns the output of the current transform after it is run on the value previously set by a call to the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput%2A&gt;</ph> 메서드를 호출 하 여 이전에 설정 된 값에 실행 한 후 현재 변환의 출력을 반환 합니다는 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)">
          <source>The type of the returned object must be one of the type objects in the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes%2A&gt;</ph> property.</source>
          <target state="translated">반환된 된 개체의 형식에 있는 개체 형식 중 하나 여야 합니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is not a <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체가 아닌 경우</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter does not derive from a <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체에서 파생되지 않은 경우</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList">
          <source>Gets or sets a string that contains namespace prefixes to canonicalize using the standard canonicalization algorithm.</source>
          <target state="translated">표준 정식화 알고리즘을 사용하여 정식화할 네임스페이스 접두사가 들어 있는 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList">
          <source>A string that contains namespace prefixes to canonicalize using the standard canonicalization algorithm.</source>
          <target state="translated">표준 정식화 알고리즘을 사용하여 정식화할 네임스페이스 접두사가 들어 있는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList%2A&gt;</ph> property contains a whitespace-delimited list of namespace prefixes to canonicalize using the standard canonicalization algorithm rather than the exclusive canonicalization algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList%2A&gt;</ph> 속성 네임 스페이스 접두사는 배타적 정형화 알고리즘이 아닌 표준 정형화 알고리즘을 사용 하 여 정식화 공백 구분 목록을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList">
          <source>To specify the default namespace, which does not have a prefix, pass the special prefix "#default".</source>
          <target state="translated">에 접두사가 없으면, 기본 네임 스페이스를 지정 하려면 특수 한 접두사 "#default"를 전달 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList">
          <source>The following code example shows how to sign an XML document with the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> class using an envelope signature.</source>
          <target state="translated">다음 코드 예제에서는 XML 문서를 서명 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> 봉투 (envelope) 서명을 사용 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes">
          <source>Gets an array of types that are valid inputs to the <ph id="ph1">&lt;see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /&gt;</ph> method of the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /&gt;</ph> 개체의 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 메서드에 유효한 입력 형식의 배열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes">
          <source>An array of valid input types for the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object; you can pass only objects of one of these types to the <ph id="ph2">&lt;see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /&gt;</ph> method of the current <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 개체에 유효한 입력 형식의 배열입니다. 현재 <ph id="ph2">&lt;see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /&gt;</ph> 개체의 <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 메서드에는 이러한 형식 중 하나를 가진 개체만 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes">
          <source>The array returned by the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes%2A&gt;</ph> property must contain at least one element because every <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> object must accept at least one type as valid input.</source>
          <target state="translated">반환 된 배열에서 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes%2A&gt;</ph> 때문에 요소가 하나 이상 포함 해야 모든 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> 개체 유효한 입력으로 유형을 하나 이상에 동의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes">
          <source>A <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> object typically accepts one or more of the following types as input: <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlDocument&gt;</ph>, or <ph id="ph4">&lt;xref:System.Xml.XmlNodeList&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> 개체 일반적으로 다음 형식 중 하나 이상을 입력으로 받아들입니다: <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlDocument&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Xml.XmlNodeList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInnerXml(System.Xml.XmlNodeList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> object that specifies transform-specific content for the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> 개체에 대해 변환 관련 내용을 지정하는 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInnerXml(System.Xml.XmlNodeList)">
          <source>Parses the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> object as transform-specific content of a <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> element and configures the internal state of the current <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object to match the <ph id="ph4">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> 개체를 <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> 요소의 변환 관련 내용으로 구문 분석하여 현재 <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 개체의 내부 상태를 <ph id="ph4">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> 요소와 일치하도록 구성합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInnerXml(System.Xml.XmlNodeList)">
          <source>This method is used to process subelements of a <ph id="ph1">`&lt;Transform&gt;`</ph> element.</source>
          <target state="translated">이 메서드는 하위 요소를 처리 하는 데 사용 되는 <ph id="ph1">`&lt;Transform&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)">
          <source>The input to load into the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 개체로 로드할 입력입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)">
          <source>When overridden in a derived class, loads the specified input into the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 지정된 입력을 현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 개체로 로드합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)">
          <source>The type of the input object must be one of the types in the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes%2A&gt;</ph> property.</source>
          <target state="translated">입력된 개체의 형식에 형식 중 하나 여야 합니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> parameter is not a <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체가 아닌 경우</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> parameter is not an <ph id="ph2">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> 개체가 아닌 경우</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> parameter is not an <ph id="ph2">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> 개체가 아닌 경우</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes">
          <source>Gets an array of types that are possible outputs from the <ph id="ph1">&lt;see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /&gt;</ph> methods of the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /&gt;</ph> 개체의 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 메서드에서 가능한 출력 형식의 배열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes">
          <source>An array of valid output types for the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object; the <ph id="ph2">&lt;see cref="Overload:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /&gt;</ph> methods of the current <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> object return only objects of one of these types.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 개체에 유효한 출력 형식의 배열입니다. 현재 <ph id="ph2">&lt;see cref="Overload:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /&gt;</ph> 개체의 <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /&gt;</ph> 메서드는 이러한 형식 중 하나를 가진 개체만 반환합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes">
          <source>The array returned by the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes%2A&gt;</ph> property must contain at least one element because every transform must generate at least one type as output.</source>
          <target state="translated">반환 된 배열에서 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes%2A&gt;</ph> 모든 변환 출력으로 유형을 하나 이상 생성 해야 하기 때문에 요소가 하나 이상 포함 해야 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>