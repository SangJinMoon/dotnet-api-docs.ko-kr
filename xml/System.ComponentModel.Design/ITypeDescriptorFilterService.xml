<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ITypeDescriptorFilterService.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac587a5feb2085ed3ba2d815183ec17ca42a4747cef.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">87a5feb2085ed3ba2d815183ec17ca42a4747cef</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>Provides an interface to modify the set of member descriptors for a component in design mode.</source>
          <target state="translated">디자인 모드에서 구성 요소에 대한 멤버 설명자의 집합을 수정할 수 있는 인터페이스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph> interface provides an interface that allows modification of the properties, events, and class-level attributes of a component at design time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph> 인터페이스 속성, 이벤트 및 클래스 수준 특성 구성 요소의 디자인 타임에 수정할 수 있는 인터페이스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>This modification occurs through the set of descriptors that a component provides through a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">구성 요소를 통해 제공 하는 설명자의 집합을 통해이 수정이 발생 한 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>The type descriptor will query a component's site for the <ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph> service and, if it exists, the type descriptor will pass all metadata it has collected to this service.</source>
          <target state="translated">형식 설명자에 대 한 구성 요소의 사이트를 쿼리 하는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph> 서비스 하 고 있는 경우 형식 설명자는이 서비스에 수집 된 모든 메타 데이터를 통과 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>The service can then modify the metadata by adding, removing, and altering existing characteristics of the component.</source>
          <target state="translated">서비스 메타 데이터 추가, 제거 및 구성 요소의 기존 특성을 변경 하 여 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>For example, the properties of a component can be modified through a call to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A&gt;</ph> method.</source>
          <target state="translated">예를 들어 호출을 통해 구성 요소의 속성이 수정할 수 있습니다는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>The filter service obtains a dictionary that contains property names and their property descriptors of type <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">필터 서비스 속성 이름 및 유형의 속성 설명자가 포함 된 사전을 가져옵니다 <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>The modifications are implemented using the following logic.</source>
          <target state="translated">수정이 다음과 같은 논리를 사용 하 여 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>Modification</source>
          <target state="translated">수정</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>Implementation</source>
          <target state="translated">구현</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>Removal</source>
          <target state="translated">제거</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>Delete the corresponding entry in the dictionary.</source>
          <target state="translated">사전에서 해당 항목을 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>Addition</source>
          <target state="translated">더하기</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>Add the appropriate entry to the dictionary.</source>
          <target state="translated">사전에 적절 한 항목을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>Alteration</source>
          <target state="translated">변경</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>Call existing property descriptor methods, replace the associated property descriptor entry, or replace the entire property key/value pair in the dictionary.</source>
          <target state="translated">기존 속성 설명자 메서드를 호출 하 고 연결 된 속성 설명자 항목 바꾸거나 사전에 전체 속성 키/값 쌍을 대체 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>The return value of <ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A&gt;</ph> determines if this set of properties is fixed.</source>
          <target state="translated">반환 값 <ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A&gt;</ph> 이 속성 집합의 해결 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>If this method returns <ph id="ph1">`true`</ph>, the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for this component can cache the results.</source>
          <target state="translated">이 메서드가 반환 하는 경우 <ph id="ph1">`true`</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> 에이 구성 요소 결과 캐시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>This cache is maintained until either the component is garbage collected or the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> method of the type descriptor is called.</source>
          <target state="translated">이 캐시는 구성 요소에는 가비지 수집 될 때까지 유지 됩니다 또는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> 형식 설명자의 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>The following code example demonstrates a designer that uses the <ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph> to filter the attributes collection of any new or existing <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> to add a designer attribute for a new designer before loading or reloading the designer for the button.</source>
          <target state="translated">다음 코드 예제를 사용 하는 디자이너는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph> 신규 또는 기존의 특성 컬렉션을 필터링 할 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 단추에 대 한 디자이너를 로드 하거나 다시 로드 하기 전에 새 디자이너에 대 한 디자이너 특성을 추가 하려면.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>To use the example, add the code to a Windows Forms project and load the components from the class library into the Toolbox.</source>
          <target state="translated">예제를 사용 하려면 Windows Forms 프로젝트에 코드를 추가 하 고 도구 상자에 클래스 라이브러리의 구성 요소를 로드 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>Also see <bpt id="p1">[</bpt>Walkthrough: Automatically Populating the Toolbox with Custom Components<ept id="p1">](http://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx)</ept>.</source>
          <target state="translated">또한 참조 <bpt id="p1">[</bpt>연습: 사용자 지정 구성 요소와 도구 상자 자동으로 채우는<ept id="p1">](http://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>Add some buttons to your form.</source>
          <target state="translated">폼에 일부 단추를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>Add a <ph id="ph1">`ButtonDesignerFilterComponent`</ph> to your form, and it will appear in the component tray.</source>
          <target state="translated">추가 <ph id="ph1">`ButtonDesignerFilterComponent`</ph> 폼에 구성 요소 트레이에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>The <ph id="ph1">`ButtonDesignerFilterComponent`</ph> will add a <ph id="ph2">`ButtonDesignerFilterService`</ph>, which implements <ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>, as a design mode service provider.</source>
          <target state="translated"><ph id="ph1">`ButtonDesignerFilterComponent`</ph> 추가 됩니다 한 <ph id="ph2">`ButtonDesignerFilterService`</ph>, 구현 하는 <ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>, 디자인 모드 서비스 공급자로 서 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>Existing or new <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> objects on the form will begin color cycling after the <ph id="ph2">`ButtonDesignerFilterService`</ph> replaces the designer for each existing and new button with a <ph id="ph3">`ColorCycleButtonDesigner`</ph>.</source>
          <target state="translated">기존 또는 새로운 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 양식에 개체 후 색 순환을 시작 합니다는 <ph id="ph2">`ButtonDesignerFilterService`</ph> 대체 된 각 기존 및 새 단추에 대 한 디자이너는 <ph id="ph3">`ColorCycleButtonDesigner`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>The buttons will color cycle when you move the mouse pointer over them, and alternately continue cycling or reset the background and foreground colors on <ph id="ph1">`MouseLeave`</ph> events.</source>
          <target state="translated">단추 위로 마우스 포인터를 이동 하 고 또는 순환을 계속 하거나 때에서 배경 및 전경 색을 다시 설정 하는 주기 색 됩니다 <ph id="ph1">`MouseLeave`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>New <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> objects will be given the <ph id="ph2">`ColorCycleButtonDesigner`</ph> through the <ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A&gt;</ph> method of the <ph id="ph4">`ButtonDesignerFilterService`</ph> that has been loaded, until the <ph id="ph5">`ButtonDesignerFilterComponent`</ph> is disposed and replaces the original <ph id="ph6">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 개체 제공 됩니다는 <ph id="ph2">`ColorCycleButtonDesigner`</ph> 통해는 <ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A&gt;</ph> 의 메서드는 <ph id="ph4">`ButtonDesignerFilterService`</ph> 있는 로드 될 때까지 <ph id="ph5">`ButtonDesignerFilterComponent`</ph> 삭제 되 고 원래 대체 <ph id="ph6">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>The <ph id="ph1">`ColorCycleButton`</ph> class in this example is a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> associated with a <ph id="ph3">`ColorCycleButtonDesigner`</ph>.</source>
          <target state="translated"><ph id="ph1">`ColorCycleButton`</ph> 이 예제는 클래스는는 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 연관는 <ph id="ph3">`ColorCycleButtonDesigner`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
          <source>To filter the member descriptors exposed by a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>, implement this interface on a component and override the <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" /&gt;</ph>, or <ph id="ph4">&lt;see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" /&gt;</ph> methods of this class to filter attributes, events, or properties, respectively.</source>
          <target state="translated">에 의해 노출 멤버 설명자를 필터링 하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>는 구성 요소에서이 인터페이스를 구현 하 고 재정의 <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" /&gt;</ph>, 또는 <ph id="ph4">&lt;see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" /&gt;</ph> 각각 특성, 이벤트 또는 속성을 필터링 하려면이 클래스의 메서드.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>The component to filter the attributes of.</source>
          <target state="translated">특성을 필터링할 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>A dictionary of attributes that can be modified.</source>
          <target state="translated">수정할 수 있는 특성의 사전입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>Filters the attributes that a component exposes through a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">구성 요소가 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>를 통해 노출하는 특성을 필터링합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the set of filtered attributes is to be cached; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the filter service must query again.</source>
          <target state="translated">필터링된 특성 집합이 캐시되도록 하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 필터 서비스가 다시 쿼리하도록 하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>This method is called when a user requests a set of attributes for a component.</source>
          <target state="translated">이 메서드는 사용자는 구성 요소에 대 한 특성 집합을 요청할 때 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>The attributes are added to the dictionary with the attribute's <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> as the keys and the actual attribute as the value.</source>
          <target state="translated">특성은 특성의를 사용 하 여 사전에 추가 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> 키 및 값과 실제 특성입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>Implementers of this service can add, remove, or alter existing attribute entries in the dictionary.</source>
          <target state="translated">이 서비스의 구현자 추가, 제거 또는 사전에 기존 특성 항목을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>Return <ph id="ph1">&lt;see langword="false" /&gt;</ph> only when necessary, because repeated queries to the type descriptor filter service can decrease performance.</source>
          <target state="translated">반환할 <ph id="ph1">&lt;see langword="false" /&gt;</ph> 반복 형식 설명자 필터 서비스에 대 한 쿼리 성능이 저하 될 수 있으므로 필요한 경우에 가능 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>The component to filter events for.</source>
          <target state="translated">이벤트를 필터링할 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>A dictionary of events that can be modified.</source>
          <target state="translated">수정할 수 있는 이벤트의 사전입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>Filters the events that a component exposes through a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">구성 요소가 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>를 통해 노출하는 이벤트를 필터링합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the set of filtered events is to be cached; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the filter service must query again.</source>
          <target state="translated">필터링된 이벤트 집합이 캐시되도록 하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 필터 서비스가 다시 쿼리하도록 하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>This method is called when a user requests a set of events for a component.</source>
          <target state="translated">이 메서드는 사용자는 구성 요소에 대 한 이벤트 집합을 요청할 때 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>The events are added to the dictionary with the event names as the keys and the corresponding <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph> objects as the values.</source>
          <target state="translated">해당 키로 이벤트를 이벤트 이름으로 사전에 추가 <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph> 개체를 값으로.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>Implementers of this service can add, remove, or alter event entries in the dictionary.</source>
          <target state="translated">이 서비스의 구현자 추가, 제거 또는 사전에 이벤트 항목을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>Return <ph id="ph1">&lt;see langword="false" /&gt;</ph> only when necessary, because repeated queries to the type descriptor filter service can decrease performance.</source>
          <target state="translated">반환할 <ph id="ph1">&lt;see langword="false" /&gt;</ph> 반복 형식 설명자 필터 서비스에 대 한 쿼리 성능이 저하 될 수 있으므로 필요한 경우에 가능 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>The component to filter properties for.</source>
          <target state="translated">속성을 필터링할 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>A dictionary of properties that can be modified.</source>
          <target state="translated">수정할 수 있는 속성의 사전입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>Filters the properties that a component exposes through a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">구성 요소가 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>를 통해 노출하는 속성을 필터링합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the set of filtered properties is to be cached; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the filter service must query again.</source>
          <target state="translated">필터링된 속성 집합이 캐시되도록 하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 필터 서비스가 다시 쿼리하도록 하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>This method is called when a user requests a set of properties for a component.</source>
          <target state="translated">이 메서드는 사용자는 구성 요소에 대 한 속성 집합을 요청할 때 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>The properties are added to the dictionary with the property names as the keys and the corresponding <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> objects as the values.</source>
          <target state="translated">속성 이름이 포함 된 사전에 키 및 해당 속성을 추가할 <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> 개체를 값으로.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>Implementers of this service can add, remove, or alter property entries in the dictionary.</source>
          <target state="translated">이 서비스의 구현자 추가, 제거 또는 속성 사전에 항목을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
          <source>Return <ph id="ph1">&lt;see langword="false" /&gt;</ph> only when necessary, because repeated queries to the type descriptor filter service can decrease performance.</source>
          <target state="translated">반환할 <ph id="ph1">&lt;see langword="false" /&gt;</ph> 반복 형식 설명자 필터 서비스에 대 한 쿼리 성능이 저하 될 수 있으므로 필요한 경우에 가능 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>