<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MenuCommand.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59857b16d26530fe05c26f2d684fccf8ed627f766.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9857b16d26530fe05c26f2d684fccf8ed627f766</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Represents a Windows menu or toolbar command item.</source>
          <target state="translated">창 메뉴 또는 도구 모음 명령 항목을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> class represents information about a Windows menu or toolbar command.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> 클래스 Windows 메뉴 또는 도구 모음 명령에 대 한 정보를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> interface allows you to add <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> objects to the Visual Studio menu.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> 인터페이스 추가할 수 있습니다. <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> Visual Studio 메뉴에는 개체입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>This class provides the following members:</source>
          <target state="translated">이 클래스는 다음과 같은 멤버를 제공합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>An event-handler property to which you can attach an event handler for the command.</source>
          <target state="translated">명령에 대 한 이벤트 처리기 첨부 하는 이벤트 처리기 속성입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Design.CommandID&gt;</ph> property that uniquely identifies the command.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Design.CommandID&gt;</ph> 명령을 고유 하 게 식별 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Invoke%2A&gt;</ph> method that executes the command.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Invoke%2A&gt;</ph> 명령을 실행 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A&gt;</ph> method that can be overridden to handle the event that occurs when a new command is selected.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A&gt;</ph> 새 명령을 선택할 때 발생 하는 이벤트를 처리 하는 재정의 될 수 있는 방법입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Boolean flag states that indicate whether the command is <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Checked%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommand.Enabled%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.Design.MenuCommand.Supported%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.ComponentModel.Design.MenuCommand.Visible%2A&gt;</ph>.</source>
          <target state="translated">이 명령은 적용 되는지 여부를 나타내는 부울 플래그 상태 <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Checked%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommand.Enabled%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.Design.MenuCommand.Supported%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.ComponentModel.Design.MenuCommand.Visible%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A&gt;</ph> property that indicates the OLE command status code for the command.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A&gt;</ph> OLE를 나타내는 속성을 명령 명령에 대 한 상태 코드입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>An override for the <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.ToString%2A&gt;</ph> method.</source>
          <target state="translated">에 대 한 재정의 <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.ToString%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> object, configures its properties, and adds it to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> 개체, 해당 속성을 구성 하 고에 추가 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Create an instance of the <ph id="ph1">`Component1`</ph> class on your form and open the form in a design environment like Visual Studio.</source>
          <target state="translated">인스턴스를 만들고는 <ph id="ph1">`Component1`</ph> 폼의 클래스 및 Visual Studio와 같은 디자인 환경에서 폼을 엽니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Press the F1 key to invoke the <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph>.</source>
          <target state="translated">호출 하려면 F1 키를 눌러는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>for full access to system resources.</source>
          <target state="translated">시스템 리소스에 대 한 전체 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Demand values: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Associated state:</source>
          <target state="translated">연결 된 상태:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
          <source>The event to raise when the user selects the menu item or toolbar button.</source>
          <target state="translated">메뉴 항목이나 도구 모음 단추를 선택한 경우 발생하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
          <source>The unique command ID that links this menu command to the environment's menu.</source>
          <target state="translated">이 메뉴 명령을 환경 메뉴에 연결하는 고유 명령 ID입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> object, configures its properties, and adds it to an <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> object.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> 개체, 해당 속성을 구성 하 고에 추가 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.Checked">
          <source>Gets or sets a value indicating whether this menu item is checked.</source>
          <target state="translated">이 메뉴 항목이 선택되어 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Checked">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the item is checked; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 항목이 선택되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.MenuCommand.CommandChanged">
          <source>Occurs when the menu command changes.</source>
          <target state="translated">메뉴 명령이 변경될 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.MenuCommand.CommandChanged">
          <source>A command can change if it becomes checked or disabled.</source>
          <target state="translated">명령을 확인 차거나 사용 하지 않도록 설정 하는 경우 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.CommandID">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.CommandID" /&gt;</ph> associated with this menu command.</source>
          <target state="translated">이 메뉴 명령과 관련된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.CommandID" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.CommandID">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.CommandID" /&gt;</ph> associated with the menu command.</source>
          <target state="translated">메뉴 명령과 관련된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.CommandID" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.Enabled">
          <source>Gets a value indicating whether this menu item is available.</source>
          <target state="translated">이 메뉴 항목을 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the item is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">항목을 사용할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Enabled">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> object, configures its properties, and adds it to <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> 개체, 해당 속성을 구성 하 고에 추가 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Invokes the command.</source>
          <target state="translated">명령을 호출합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.Invoke">
          <source>Invokes the command.</source>
          <target state="translated">명령을 호출합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)">
          <source>An optional argument for use by the command.</source>
          <target state="translated">명령에 사용할 선택적 인수입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)">
          <source>Invokes the command with the given parameter.</source>
          <target state="translated">지정한 매개 변수가 있는 명령을 호출합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)">
          <source>The default implementation of this method ignores <ph id="ph1">&lt;paramref name="arg" /&gt;</ph>, but deriving classes may override this method and use it.</source>
          <target state="translated">이 메서드의 기본 구현에서 무시 <ph id="ph1">&lt;paramref name="arg" /&gt;</ph>, 되지만이 메서드를 재정의 하는 사용 하 여 클래스를 파생 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.OleStatus">
          <source>Gets the OLE command status code for this menu item.</source>
          <target state="translated">이 메뉴 항목에 대한 OLE 명령 상태 코드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.OleStatus">
          <source>An integer containing a mixture of status flags that reflect the state of this menu item.</source>
          <target state="translated">이 메뉴 항목의 상태를 반영하는 상태 플래그가 혼합된 정수입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.MenuCommand.CommandChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.MenuCommand.CommandChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.Properties">
          <source>Gets the public properties associated with the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>와 연결된 public 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Properties">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> containing the public properties of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>의 public 속성이 들어 있는 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Properties">
          <source>All menu commands store their public properties in the <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Properties%2A&gt;</ph> collection.</source>
          <target state="translated">public 속성을 저장 하는 모든 메뉴 명령에서 <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Properties%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Properties">
          <source>The key in the properties dictionary is the property name.</source>
          <target state="translated">속성 사전의 키는 속성 이름입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Properties">
          <source>This allows for generic enumeration of properties and provides a consistent substrate from which new properties can be added without modifying the class definition.</source>
          <target state="translated">이 속성의 일반 열거형을 허용 하 고 일관 된 기반을 새 속성 클래스 정의 수정 하지 않고도 추가할 수를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.Supported">
          <source>Gets or sets a value indicating whether this menu item is supported.</source>
          <target state="translated">이 메뉴 항목이 지원되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Supported">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the item is supported, which is the default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">항목이 지원되는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 이것이 기본값이며, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Supported">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> object, configures its properties, and adds it to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> 개체, 해당 속성을 구성 하 고에 추가 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.ToString">
          <source>Returns a string representation of this menu command.</source>
          <target state="translated">이 메뉴 명령의 문자열 표현을 반환합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.ToString">
          <source>A string containing the value of the <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.CommandID" /&gt;</ph> property appended with the names of any flags that are set, separated by pipe bars (|).</source>
          <target state="translated">설정된 플래그 이름이 세로줄(|)로 구분되어 추가된 <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.CommandID" /&gt;</ph> 속성 값을 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.ToString">
          <source>These flag properties include <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Checked" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Enabled" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Supported" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Visible" /&gt;</ph>.</source>
          <target state="translated">이 플래그 속성에는 <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Checked" /&gt;</ph> , <ph id="ph2">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Enabled" /&gt;</ph> , <ph id="ph3">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Supported" /&gt;</ph> 및 <ph id="ph4">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Visible" /&gt;</ph>이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.Visible">
          <source>Gets or sets a value indicating whether this menu item is visible.</source>
          <target state="translated">이 메뉴 항목이 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Visible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the item is visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">항목이 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Visible">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> object, configures its properties, and adds it to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> 개체, 해당 속성을 구성 하 고에 추가 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>