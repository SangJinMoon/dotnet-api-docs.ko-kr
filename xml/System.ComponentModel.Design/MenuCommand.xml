<Type Name="MenuCommand" FullName="System.ComponentModel.Design.MenuCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9857b16d26530fe05c26f2d684fccf8ed627f766" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MenuCommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuCommand extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.MenuCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuCommand" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuCommand" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6f0ec-101">창 메뉴 또는 도구 모음 명령 항목을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f0ec-101">Represents a Windows menu or toolbar command item.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f0ec-102"><xref:System.ComponentModel.Design.MenuCommand> 클래스 Windows 메뉴 또는 도구 모음 명령에 대 한 정보를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-102">The <xref:System.ComponentModel.Design.MenuCommand> class represents information about a Windows menu or toolbar command.</span></span> <span data-ttu-id="6f0ec-103"><xref:System.ComponentModel.Design.IMenuCommandService> 인터페이스 추가할 수 있습니다. <xref:System.ComponentModel.Design.MenuCommand> Visual Studio 메뉴에는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-103">The <xref:System.ComponentModel.Design.IMenuCommandService> interface allows you to add <xref:System.ComponentModel.Design.MenuCommand> objects to the Visual Studio menu.</span></span>  
  
 <span data-ttu-id="6f0ec-104">이 클래스는 다음과 같은 멤버를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-104">This class provides the following members:</span></span>  
  
-   <span data-ttu-id="6f0ec-105">명령에 대 한 이벤트 처리기 첨부 하는 이벤트 처리기 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-105">An event-handler property to which you can attach an event handler for the command.</span></span>  
  
-   <span data-ttu-id="6f0ec-106">A <xref:System.ComponentModel.Design.CommandID> 명령을 고유 하 게 식별 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-106">A <xref:System.ComponentModel.Design.CommandID> property that uniquely identifies the command.</span></span>  
  
-   <span data-ttu-id="6f0ec-107"><xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> 명령을 실행 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-107">An <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method that executes the command.</span></span>  
  
-   <span data-ttu-id="6f0ec-108"><xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A> 새 명령을 선택할 때 발생 하는 이벤트를 처리 하는 재정의 될 수 있는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-108">An <xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A> method that can be overridden to handle the event that occurs when a new command is selected.</span></span>  
  
-   <span data-ttu-id="6f0ec-109">이 명령은 적용 되는지 여부를 나타내는 부울 플래그 상태 <xref:System.ComponentModel.Design.MenuCommand.Checked%2A>, <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>, <xref:System.ComponentModel.Design.MenuCommand.Supported%2A>, 또는 <xref:System.ComponentModel.Design.MenuCommand.Visible%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-109">Boolean flag states that indicate whether the command is <xref:System.ComponentModel.Design.MenuCommand.Checked%2A>, <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>, <xref:System.ComponentModel.Design.MenuCommand.Supported%2A>, or <xref:System.ComponentModel.Design.MenuCommand.Visible%2A>.</span></span>  
  
-   <span data-ttu-id="6f0ec-110"><xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A> OLE를 나타내는 속성을 명령 명령에 대 한 상태 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-110">An <xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A> property that indicates the OLE command status code for the command.</span></span>  
  
-   <span data-ttu-id="6f0ec-111">에 대 한 재정의 <xref:System.ComponentModel.Design.MenuCommand.ToString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-111">An override for the <xref:System.ComponentModel.Design.MenuCommand.ToString%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f0ec-112">다음 코드 예제에서는 한 <xref:System.ComponentModel.Design.MenuCommand> 개체, 해당 속성을 구성 하 고에 추가 <xref:System.ComponentModel.Design.IMenuCommandService>합니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-112">The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.</span></span>  
  
 <span data-ttu-id="6f0ec-113">인스턴스를 만들고는 `Component1` 폼의 클래스 및 Visual Studio와 같은 디자인 환경에서 폼을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-113">Create an instance of the `Component1` class on your form and open the form in a design environment like Visual Studio.</span></span> <span data-ttu-id="6f0ec-114">호출 하려면 F1 키를 눌러는 <xref:System.ComponentModel.Design.MenuCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-114">Press the F1 key to invoke the <xref:System.ComponentModel.Design.MenuCommand>.</span></span>  
  
 [!code-cpp[MenuCommand Example#10](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#10)]
 [!code-csharp[MenuCommand Example#10](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#10)]
 [!code-vb[MenuCommand Example#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#10)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">
      <span data-ttu-id="6f0ec-115">시스템 리소스에 대 한 전체 액세스 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f0ec-115">for full access to system resources.</span>
      </span>
      <span data-ttu-id="6f0ec-116">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f0ec-116">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="6f0ec-117">연결 된 상태:</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f0ec-117">Associated state:</span>
      </span>
    </permission>
    <altmember cref="T:System.ComponentModel.Design.StandardCommands" />
    <altmember cref="T:System.ComponentModel.Design.IMenuCommandService" />
    <altmember cref="T:System.ComponentModel.Design.CommandID" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuCommand (EventHandler handler, System.ComponentModel.Design.CommandID command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.EventHandler handler, class System.ComponentModel.Design.CommandID command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As EventHandler, command As CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuCommand(EventHandler ^ handler, System::ComponentModel::Design::CommandID ^ command);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.EventHandler" />
        <Parameter Name="command" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="6f0ec-118">메뉴 항목이나 도구 모음 단추를 선택한 경우 발생하는 이벤트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-118">The event to raise when the user selects the menu item or toolbar button.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="6f0ec-119">이 메뉴 명령을 환경 메뉴에 연결하는 고유 명령 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-119">The unique command ID that links this menu command to the environment's menu.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f0ec-120">
            <see cref="T:System.ComponentModel.Design.MenuCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-120">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.MenuCommand" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6f0ec-121">다음 코드 예제에서는 한 <xref:System.ComponentModel.Design.MenuCommand> 개체, 해당 속성을 구성 하 고에 추가 <xref:System.ComponentModel.Design.IMenuCommandService> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-121">The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to an <xref:System.ComponentModel.Design.IMenuCommandService> object.</span></span>  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IMenuCommandService" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public virtual bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Checked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f0ec-122">이 메뉴 항목이 선택되어 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-122">Gets or sets a value indicating whether this menu item is checked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6f0ec-123">해당 항목이 선택되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-123">
              <see langword="true" /> if the item is checked; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CommandChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CommandChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.MenuCommand.CommandChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CommandChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CommandChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f0ec-124">메뉴 명령이 변경될 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-124">Occurs when the menu command changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f0ec-125">명령을 확인 차거나 사용 하지 않도록 설정 하는 경우 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-125">A command can change if it becomes checked or disabled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandID">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.CommandID CommandID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.CommandID CommandID" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.CommandID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CommandID As CommandID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::CommandID ^ CommandID { System::ComponentModel::Design::CommandID ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f0ec-126">이 메뉴 명령과 관련된 <see cref="T:System.ComponentModel.Design.CommandID" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-126">Gets the <see cref="T:System.ComponentModel.Design.CommandID" /> associated with this menu command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6f0ec-127">메뉴 명령과 관련된 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-127">The <see cref="T:System.ComponentModel.Design.CommandID" /> associated with the menu command.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f0ec-128">이 메뉴 항목을 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-128">Gets a value indicating whether this menu item is available.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6f0ec-129">항목을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-129">
              <see langword="true" /> if the item is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6f0ec-130">다음 코드 예제에서는 한 <xref:System.ComponentModel.Design.MenuCommand> 개체, 해당 속성을 구성 하 고에 추가 <xref:System.ComponentModel.Design.IMenuCommandService>합니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-130">The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to <xref:System.ComponentModel.Design.IMenuCommandService>.</span></span>  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6f0ec-131">명령을 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-131">Invokes the command.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public virtual void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommand.Invoke" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Invoke ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Invoke();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f0ec-132">명령을 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-132">Invokes the command.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public virtual void Invoke (object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Invoke (arg As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Invoke(System::Object ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg">
          <span data-ttu-id="6f0ec-133">명령에 사용할 선택적 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-133">An optional argument for use by the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f0ec-134">지정한 매개 변수가 있는 명령을 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-134">Invokes the command with the given parameter.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6f0ec-135">이 메서드의 기본 구현에서 무시 <paramref name="arg" />, 되지만이 메서드를 재정의 하는 사용 하 여 클래스를 파생 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6f0ec-135">The default implementation of this method ignores <paramref name="arg" />, but deriving classes may override this method and use it.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OleStatus">
      <MemberSignature Language="C#" Value="public virtual int OleStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OleStatus" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.OleStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OleStatus As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int OleStatus { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f0ec-136">이 메뉴 항목에 대한 OLE 명령 상태 코드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-136">Gets the OLE command status code for this menu item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6f0ec-137">이 메뉴 항목의 상태를 반영하는 상태 플래그가 혼합된 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-137">An integer containing a mixture of status flags that reflect the state of this menu item.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCommandChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCommandChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommandChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommandChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommandChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6f0ec-138">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-138">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f0ec-139">
            <see cref="E:System.ComponentModel.Design.MenuCommand.CommandChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-139">Raises the <see cref="E:System.ComponentModel.Design.MenuCommand.CommandChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f0ec-140">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-140">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="6f0ec-141">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-141">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="6f0ec-142">또한 <xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-142">The <xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="6f0ec-143">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-143">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6f0ec-144">재정의 하는 경우 <see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6f0ec-144">When overriding <see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Properties As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Properties { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f0ec-145">
            <see cref="T:System.ComponentModel.Design.MenuCommand" />와 연결된 public 속성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-145">Gets the public properties associated with the <see cref="T:System.ComponentModel.Design.MenuCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6f0ec-146">
            <see cref="T:System.Collections.IDictionary" />의 public 속성이 들어 있는 <see cref="T:System.ComponentModel.Design.MenuCommand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-146">An <see cref="T:System.Collections.IDictionary" /> containing the public properties of the <see cref="T:System.ComponentModel.Design.MenuCommand" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f0ec-147">public 속성을 저장 하는 모든 메뉴 명령에서 <xref:System.ComponentModel.Design.MenuCommand.Properties%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-147">All menu commands store their public properties in the <xref:System.ComponentModel.Design.MenuCommand.Properties%2A> collection.</span></span> <span data-ttu-id="6f0ec-148">속성 사전의 키는 속성 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-148">The key in the properties dictionary is the property name.</span></span> <span data-ttu-id="6f0ec-149">이 속성의 일반 열거형을 허용 하 고 일관 된 기반을 새 속성 클래스 정의 수정 하지 않고도 추가할 수를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-149">This allows for generic enumeration of properties and provides a consistent substrate from which new properties can be added without modifying the class definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Supported">
      <MemberSignature Language="C#" Value="public virtual bool Supported { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Supported" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.Supported" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Supported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Supported { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f0ec-150">이 메뉴 항목이 지원되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-150">Gets or sets a value indicating whether this menu item is supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6f0ec-151">항목이 지원되는 경우 <see langword="true" />이고 이것이 기본값이며, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-151">
              <see langword="true" /> if the item is supported, which is the default; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6f0ec-152">다음 코드 예제에서는 한 <xref:System.ComponentModel.Design.MenuCommand> 개체, 해당 속성을 구성 하 고에 추가 <xref:System.ComponentModel.Design.IMenuCommandService>합니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-152">The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.</span></span>  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommand.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f0ec-153">이 메뉴 명령의 문자열 표현을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-153">Returns a string representation of this menu command.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f0ec-154">설정된 플래그 이름이 세로줄(|)로 구분되어 추가된 <see cref="P:System.ComponentModel.Design.MenuCommand.CommandID" /> 속성 값을 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-154">A string containing the value of the <see cref="P:System.ComponentModel.Design.MenuCommand.CommandID" /> property appended with the names of any flags that are set, separated by pipe bars (|).</span>
          </span>
          <span data-ttu-id="6f0ec-155">이 플래그 속성에는 <see cref="P:System.ComponentModel.Design.MenuCommand.Checked" /> , <see cref="P:System.ComponentModel.Design.MenuCommand.Enabled" /> , <see cref="P:System.ComponentModel.Design.MenuCommand.Supported" /> 및 <see cref="P:System.ComponentModel.Design.MenuCommand.Visible" />이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-155">These flag properties include <see cref="P:System.ComponentModel.Design.MenuCommand.Checked" />, <see cref="P:System.ComponentModel.Design.MenuCommand.Enabled" />, <see cref="P:System.ComponentModel.Design.MenuCommand.Supported" />, and <see cref="P:System.ComponentModel.Design.MenuCommand.Visible" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public virtual bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f0ec-156">이 메뉴 항목이 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-156">Gets or sets a value indicating whether this menu item is visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6f0ec-157">항목이 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f0ec-157">
              <see langword="true" /> if the item is visible; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6f0ec-158">다음 코드 예제에서는 한 <xref:System.ComponentModel.Design.MenuCommand> 개체, 해당 속성을 구성 하 고에 추가 <xref:System.ComponentModel.Design.IMenuCommandService>합니다.</span><span class="sxs-lookup"><span data-stu-id="6f0ec-158">The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.</span></span>  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>