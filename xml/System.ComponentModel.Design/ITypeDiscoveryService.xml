<Type Name="ITypeDiscoveryService" FullName="System.ComponentModel.Design.ITypeDiscoveryService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e642e3b51b337634311cc65e6d4b88f28dfb66eb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30366187" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITypeDiscoveryService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDiscoveryService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeDiscoveryService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDiscoveryService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDiscoveryService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="980ac-101">디자인 타임에 사용 가능한 형식을 검색합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="980ac-101">Discovers available types at design time.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="980ac-102"><xref:System.ComponentModel.Design.ITypeDiscoveryService> 서비스의 클라이언트는 기존 형식 또는 참조 된 어셈블리의 이름을 모릅니다 디자인 타임에 사용할 수 있는 형식을 검색 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="980ac-102">The <xref:System.ComponentModel.Design.ITypeDiscoveryService> is used to discover available types at design time, when a client of the service does not know the names of existing types or referenced assemblies.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetTypes (Type baseType, bool excludeGlobalTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetTypes(class System.Type baseType, bool excludeGlobalTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypes (baseType As Type, excludeGlobalTypes As Boolean) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetTypes(Type ^ baseType, bool excludeGlobalTypes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseType" Type="System.Type" />
        <Parameter Name="excludeGlobalTypes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseType">
          <span data-ttu-id="980ac-103">일치시킬 기본 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="980ac-103">The base type to match.</span>
          </span>
          <span data-ttu-id="980ac-104">
            <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="980ac-104">Can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="excludeGlobalTypes">
          <span data-ttu-id="980ac-105">모든 참조된 어셈블리의 형식을 확인할지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="980ac-105">Indicates whether types from all referenced assemblies should be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="980ac-106">사용 가능한 형식 목록을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="980ac-106">Retrieves the list of available types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="980ac-107">
            <paramref name="baseType" /> 및 <paramref name="excludeGlobalTypes" />가 지정한 조건에 일치시킬 형식의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="980ac-107">A collection of types that match the criteria specified by <paramref name="baseType" /> and <paramref name="excludeGlobalTypes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="980ac-108">경우 `baseType` 은 `null`, 모든 유형이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="980ac-108">If `baseType` is `null`, all types are returned.</span></span> <span data-ttu-id="980ac-109">그렇지 않으면 지정된 된 기본 형식에서 파생 된 형식만 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="980ac-109">Otherwise, only types derived from the specified base type are returned.</span></span> <span data-ttu-id="980ac-110">경우 `excludeGlobalTypes` 은 `false`, 참조 되는 모든 어셈블리에서 형식을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="980ac-110">If `excludeGlobalTypes` is `false`, types from all referenced assemblies are checked.</span></span> <span data-ttu-id="980ac-111">그렇지 않은 경우에 비-GAC 전역 어셈블리 캐시 참조 된 어셈블리에서 형식만 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="980ac-111">Otherwise, only types from non-Global Assembly Cache (GAC) referenced assemblies are checked.</span></span> <span data-ttu-id="980ac-112">자세한 내용은 참조 [어셈블리 및 전역 어셈블리 캐시 사용](~/docs/framework/app-domains/working-with-assemblies-and-the-gac.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="980ac-112">For more information, see [Working with Assemblies and the Global Assembly Cache](~/docs/framework/app-domains/working-with-assemblies-and-the-gac.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
  </Members>
</Type>