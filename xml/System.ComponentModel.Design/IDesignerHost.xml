<Type Name="IDesignerHost" FullName="System.ComponentModel.Design.IDesignerHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16106b924520f98ac47409d9493e959057faf9f9" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39842165" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerHost : System.ComponentModel.Design.IServiceContainer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerHost implements class System.ComponentModel.Design.IServiceContainer, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerHost" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerHost&#xA;Implements IServiceContainer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerHost : System::ComponentModel::Design::IServiceContainer" />
  <TypeSignature Language="F#" Value="type IDesignerHost = interface&#xA;    interface IServiceContainer&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IServiceContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5c0e4-101">디자이너 트랜잭션과 구성 요소를 관리하기 위한 인터페이스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5c0e4-101">Provides an interface for managing designer transactions and components.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c0e4-102"><xref:System.ComponentModel.Design.IDesignerHost> 디자이너 트랜잭션 및 구성 요소 관리를 위한 지원을 제공 하 여.NET Framework forms 디자이너 아키텍처를 사용 하 여 작동 하는 인터페이스가입니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-102"><xref:System.ComponentModel.Design.IDesignerHost> is an interface that works with the .NET Framework forms designer architecture to provide support for designer transaction and component management.</span></span>  
  
 <span data-ttu-id="5c0e4-103">.NET Framework에는이 인터페이스의 구현을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-103">The .NET Framework does not provide an implementation of this interface.</span></span> <span data-ttu-id="5c0e4-104">인터페이스는 디자이너를 지 원하는 개발 도구에서 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-104">The interface is implemented by development tools that support designers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c0e4-105">다음 예제 코드를 가져오는 방법을 보여 줍니다는 <xref:System.ComponentModel.Design.IDesignerHost> 디자이너 또는 배치 된 구성 요소에서 서비스 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-105">The following example code demonstrates how to obtain the <xref:System.ComponentModel.Design.IDesignerHost> service interface from a designer or sited component.</span></span>  
  
 [!code-cpp[DesignerHostAcquisition#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DesignerHostAcquisition/CPP/source.cpp#1)]
 [!code-csharp[DesignerHostAcquisition#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DesignerHostAcquisition/CS/source.cs#1)]
 [!code-vb[DesignerHostAcquisition#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DesignerHostAcquisition/VB/source.vb#1)]  
  
 <span data-ttu-id="5c0e4-106">다음 예제 코드를 사용 하는 방법을 보여 줍니다는 <xref:System.ComponentModel.Design.IDesignerHost> 목록 프로젝트 구성 요소에 대 한 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-106">The following example code demonstrates using the <xref:System.ComponentModel.Design.IDesignerHost> interface to list project components.</span></span>  
  
 [!code-cpp[IDesignerHostExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerHostExample/CPP/idesignerhostexample.cpp#1)]
 [!code-csharp[IDesignerHostExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerHostExample/CS/idesignerhostexample.cs#1)]
 [!code-vb[IDesignerHostExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerHostExample/VB/idesignerhostexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <span data-ttu-id="5c0e4-107">
        <para>구현의 가져오려고 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 개발 환경에서 호출 <see cref="M:System.ComponentModel.Component.GetService(System.Type)" /> 구성 요소가 디자인 모드에서 활성 상태인 동안의 형식을 전달 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 요청에는 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 서비스 인터페이스입니다.  <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 디자이너 상태와 관련 된 다음 멤버를 제공 합니다.- <see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" /> 속성 디자이너 또는 문서를 로드 되 고 있는지 여부를 나타냅니다.  - <see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" /> 이벤트 디자이너를 표시 하기 전에 활성화 될 때 발생 합니다.  - <see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" /> 이 이벤트는 디자이너가 비활성화 될 때 발생 합니다.  - <see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" /> 이벤트는 문서가 로드 된 후에 발생 합니다.  - <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> 메서드는 디자이너를 활성화 합니다.  <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 멤버가 다음과 같은 구성 요소 관리와 관련 된 제공:- <see cref="P:System.ComponentModel.Design.IDesignerHost.Container" /> 속성 디자이너 호스트에 대 한 컨테이너를 나타냅니다.  - <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /> 속성 루트 구성 요소에 대 한 기본 클래스를 나타냅니다.  - <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" /> 속성 루트 구성 요소 클래스의 이름을 나타냅니다.  - <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" /> 메서드는 지정된 된 형식의 구성 요소를 만듭니다.  - <see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" /> 메서드는 지정된 된 구성 요소를 제거 합니다.  - <see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" /> 메서드는 지정된 된 구성 요소를 사용 하 여 연결 된 디자이너를 가져옵니다.  - <see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" /> 메서드는 지정된 된 이름 가진 형식의 인스턴스를 가져옵니다.  <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 다음과 같은 멤버와 관련 된 트랜잭션 관리를 제공 합니다.- <see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" /> 속성 트랜잭션에서 디자이너 인지 여부를 나타냅니다.  - <see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" /> 속성은 현재 트랜잭션 설명을 나타냅니다.  - <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> 트랜잭션이 완료 될 때 이벤트가 발생 합니다.  - <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> 트랜잭션을 완료 하려고 할 때 이벤트가 발생 합니다.  - <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> 이 이벤트는 트랜잭션이 시작 되었을 때 발생 합니다.  - <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> 트랜잭션 시작 되려고 할 때 이벤트가 발생 합니다.  - <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" /> 메서드를 만들고 새 트랜잭션을 반환 합니다.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="5c0e4-107">
          <para>To obtain an implementation of <see cref="T:System.ComponentModel.Design.IDesignerHost" /> from a development environment, call <see cref="M:System.ComponentModel.Component.GetService(System.Type)" /> while your component is active in design mode, passing the type of <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to request an <see cref="T:System.ComponentModel.Design.IDesignerHost" /> service interface.  <see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to designer state:  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" /> property indicates whether a designer or document is being loaded.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" /> event occurs when a designer is activated before display.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" /> event occurs when a designer is deactivated.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" /> event occurs after a document is loaded.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method activates the designer.  <see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to managing components:  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.Container" /> property indicates the container for the designer host.  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /> property indicates the base class for the root component.  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" /> property indicates the name of the class of the root component.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" /> method creates the specified type of component.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" /> method destroys the specified component.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" /> method gets the designer associated with a specified component.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" /> method gets an instance of the type with the specified name.  <see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to managing transactions:  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" /> property indicates whether the designer is in a transaction.  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" /> property indicates the current transaction description.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> event occurs when a transaction has been completed.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> event occurs when a transaction is about to be completed.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> event occurs when a transaction has begun.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> event occurs when a transaction is about to begin.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" /> method creates and returns a new transaction.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerOptionService" />
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberSignature Language="F#" Value="abstract member Activate : unit -&gt; unit" Usage="iDesignerHost.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c0e4-108">이 호스트가 호스팅 중인 디자이너를 활성화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-108">Activates the designer that this host is hosting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c0e4-109">디자이너는 사용자 인터페이스를 표시 하기 전에 활성화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-109">Designers should be activated before they display their user interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.Activated" />
      <MemberSignature Language="VB.NET" Value="Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c0e4-110">이 디자이너가 활성화될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-110">Occurs when this designer is activated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c0e4-111">디자이너를 표시 하기 전에 활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-111">A designer is activated before it is displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Container : System.ComponentModel.IContainer" Usage="System.ComponentModel.Design.IDesignerHost.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c0e4-112">이 디자이너 호스트에 대한 컨테이너를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-112">Gets the container for this designer host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c0e4-113">이 호스트에 대한 <see cref="T:System.ComponentModel.IContainer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-113">The <see cref="T:System.ComponentModel.IContainer" /> for this host.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c0e4-114">이 <xref:System.ComponentModel.IContainer> 현재 디자인 모드 문서의 구성 요소를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-114">This <xref:System.ComponentModel.IContainer> contains the components of the current design mode document.</span></span> <span data-ttu-id="5c0e4-115">목록 또는 구성 요소를 통해 현재 디자인 모드 문서에 액세스할 수 합니다 <xref:System.ComponentModel.IContainer.Components%2A> 구성원 인 <xref:System.ComponentModel.IContainer>합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-115">You can list or access any of the components of the current design mode document through the <xref:System.ComponentModel.IContainer.Components%2A> member of this <xref:System.ComponentModel.IContainer>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateComponent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c0e4-116">지정된 형식의 구성 요소를 만들어 디자인 문서에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-116">Creates a component of the specified type and adds it to the design document.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent CreateComponent (Type componentClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComponent (componentClass As Type) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentClass);" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : Type -&gt; System.ComponentModel.IComponent" Usage="iDesignerHost.CreateComponent componentClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentClass">
          <span data-ttu-id="5c0e4-117">만들 구성 요소의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-117">The type of the component to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c0e4-118">지정된 형식의 구성 요소를 만들어 디자인 문서에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-118">Creates a component of the specified type and adds it to the design document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c0e4-119">새로 만들어진 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-119">The newly created component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c0e4-120">형식을 구현 하는 개체를 확인할 수 없는 경우 <xref:System.ComponentModel.IComponent>, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-120">If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.</span></span>  
  
 <span data-ttu-id="5c0e4-121">이 메서드는 구성 요소의 이름을 지정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-121">This method does not specify a name for the component.</span></span> <span data-ttu-id="5c0e4-122">메서드는 구성 요소를 만들고 디자이너 컨테이너에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-122">The method creates the component and adds it to the designer container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent CreateComponent (Type componentClass, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentClass, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComponent (componentClass As Type, name As String) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentClass, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : Type * string -&gt; System.ComponentModel.IComponent" Usage="iDesignerHost.CreateComponent (componentClass, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentClass" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="componentClass">
          <span data-ttu-id="5c0e4-123">만들 구성 요소의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-123">The type of the component to create.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="5c0e4-124">구성 요소의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-124">The name for the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c0e4-125">지정된 형식과 이름의 구성 요소를 만들어 디자인 문서에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-125">Creates a component of the specified type and name, and adds it to the design document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c0e4-126">새로 만들어진 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-126">The newly created component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c0e4-127">형식을 구현 하는 개체를 확인할 수 없는 경우 <xref:System.ComponentModel.IComponent>, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-127">If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.</span></span>  
  
 <span data-ttu-id="5c0e4-128">이 메서드는 구성 요소를 만들고 디자이너 컨테이너에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-128">This method creates the component and adds it to the designer container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateTransaction">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c0e4-129">이벤트 순서를 캡슐화하여 성능을 개선하고 다시 실행 및 실행 취소 기능을 지원할 수 있는 <see cref="T:System.ComponentModel.Design.DesignerTransaction" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-129">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateTransaction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerTransaction CreateTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTransaction () As DesignerTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignerTransaction ^ CreateTransaction();" />
      <MemberSignature Language="F#" Value="abstract member CreateTransaction : unit -&gt; System.ComponentModel.Design.DesignerTransaction" Usage="iDesignerHost.CreateTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c0e4-130">이벤트 순서를 캡슐화하여 성능을 개선하고 다시 실행 및 실행 취소 기능을 지원할 수 있는 <see cref="T:System.ComponentModel.Design.DesignerTransaction" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-130">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c0e4-131">
            <see cref="T:System.ComponentModel.Design.DesignerTransaction" />의 새 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-131">A new instance of <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span>
          </span>
          <span data-ttu-id="5c0e4-132">트랜잭션 단계를 완료할 때 이 개체에 <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" />을 호출해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-132">When you complete the steps in your transaction, you should call <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> on this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c0e4-133">이 메서드가 만드는 <xref:System.ComponentModel.Design.DesignerTransaction> 는 일련의 작업을 캡슐화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-133">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations.</span></span> <span data-ttu-id="5c0e4-134">디자이너 트랜잭션 수 성능 향상, 작업의 프로세스 중에 여러 업데이트에 의해 발생할 깜빡임 줄이기 및 취소할 수 있도록 대부분의 작업을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-134">Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</span></span>  
  
 <span data-ttu-id="5c0e4-135">여러 구성 요소를 포함 하는 시간이 오래 걸리는 작업 많은 이벤트를 발생 시킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-135">Lengthy operations that involve multiple components can raise many events.</span></span> <span data-ttu-id="5c0e4-136">이러한 이벤트 깜박임 같은 부작용이 발생 하면 되거나 성능이 저하 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-136">These events can cause side effects, such as flicker or degraded performance.</span></span> <span data-ttu-id="5c0e4-137">한 번에 여러 구성 요소에서 작동 합니다. 또는 단일 구성 요소에서 여러 속성을 설정 하는 경우 이러한 변경 내용은 트랜잭션 내에서 수행 하 여 성능을 개선할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-137">When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</span></span> <span data-ttu-id="5c0e4-138">일부 작업 처리를 <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> 및 <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> 이벤트 트랜잭션이 진행에서 중이지 하는 경우에 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-138">Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress.</span></span> <span data-ttu-id="5c0e4-139">트랜잭션 사용에 대 한 자세한 내용은 설명서를 참조 하세요. <xref:System.ComponentModel.Design.DesignerTransaction>합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-139">For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTransaction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerTransaction CreateTransaction (string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction(string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTransaction (description As String) As DesignerTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignerTransaction ^ CreateTransaction(System::String ^ description);" />
      <MemberSignature Language="F#" Value="abstract member CreateTransaction : string -&gt; System.ComponentModel.Design.DesignerTransaction" Usage="iDesignerHost.CreateTransaction description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description">
          <span data-ttu-id="5c0e4-140">새로 만들어진 트랜잭션에 대한 제목 또는 설명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-140">A title or description for the newly created transaction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c0e4-141">지정된 트랜잭션 설명을 통해 이벤트 순서를 캡슐화하여 성능을 개선하고 다시 실행 및 실행 취소 기능을 지원할 수 있는 <see cref="T:System.ComponentModel.Design.DesignerTransaction" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-141">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality, using the specified transaction description.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c0e4-142">새 <see cref="T:System.ComponentModel.Design.DesignerTransaction" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-142">A new <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span>
          </span>
          <span data-ttu-id="5c0e4-143">트랜잭션 단계를 완료했으면 이 개체에 <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" />을 호출해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-143">When you have completed the steps in your transaction, you should call <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> on this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c0e4-144">이 메서드가 만드는 <xref:System.ComponentModel.Design.DesignerTransaction> 는 일련의 작업을 캡슐화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-144">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations.</span></span> <span data-ttu-id="5c0e4-145">디자이너 트랜잭션 수 성능 향상, 작업의 프로세스 중에 여러 업데이트에 의해 발생할 깜빡임 줄이기 및 취소할 수 있도록 대부분의 작업을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-145">Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</span></span>  
  
 <span data-ttu-id="5c0e4-146">여러 구성 요소를 포함 하는 시간이 오래 걸리는 작업 많은 이벤트를 발생 시킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-146">Lengthy operations that involve multiple components can raise many events.</span></span> <span data-ttu-id="5c0e4-147">이러한 이벤트 깜박임 같은 부작용이 발생 하면 되거나 성능이 저하 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-147">These events can cause side effects, such as flicker or degraded performance.</span></span> <span data-ttu-id="5c0e4-148">한 번에 여러 구성 요소에서 작동 합니다. 또는 단일 구성 요소에서 여러 속성을 설정 하는 경우 이러한 변경 내용은 트랜잭션 내에서 수행 하 여 성능을 개선할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-148">When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</span></span> <span data-ttu-id="5c0e4-149">일부 작업 처리를 <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> 및 <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> 이벤트 트랜잭션이 진행에서 중이지 하는 경우에 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-149">Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress.</span></span> <span data-ttu-id="5c0e4-150">트랜잭션 사용에 대 한 자세한 내용은 설명서를 참조 하세요. <xref:System.ComponentModel.Design.DesignerTransaction>합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-150">For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberSignature Language="F#" Value="member this.Deactivated : EventHandler " Usage="member this.Deactivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c0e4-151">이 디자이너가 비활성화될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-151">Occurs when this designer is deactivated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c0e4-152">디자이너는 더 이상 표시 되는 직전에 비활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-152">A designer is deactivated just before it is no longer displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.Activated" />
      </Docs>
    </Member>
    <Member MemberName="DestroyComponent">
      <MemberSignature Language="C#" Value="public void DestroyComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DestroyComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DestroyComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DestroyComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member DestroyComponent : System.ComponentModel.IComponent -&gt; unit" Usage="iDesignerHost.DestroyComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="5c0e4-153">소멸시킬 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-153">The component to destroy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c0e4-154">지정된 구성 요소를 소멸시키고 디자이너 컨테이너에서 이를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-154">Destroys the specified component and removes it from the designer container.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="GetDesigner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.IDesigner GetDesigner (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.IDesigner GetDesigner(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDesigner (component As IComponent) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::IDesigner ^ GetDesigner(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetDesigner : System.ComponentModel.IComponent -&gt; System.ComponentModel.Design.IDesigner" Usage="iDesignerHost.GetDesigner component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="5c0e4-155">디자이너를 검색할 <see cref="T:System.ComponentModel.IComponent" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-155">The <see cref="T:System.ComponentModel.IComponent" /> to retrieve the designer for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c0e4-156">지정된 구성 요소가 들어 있는 디자이너 인스턴스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-156">Gets the designer instance that contains the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c0e4-157">
            <see cref="T:System.ComponentModel.Design.IDesigner" />이거나, 지정된 구성 요소에 대한 디자이너가 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-157">An <see cref="T:System.ComponentModel.Design.IDesigner" />, or <see langword="null" /> if there is no designer for the specified component.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string -&gt; Type" Usage="iDesignerHost.GetType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="5c0e4-158">로드할 형식의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-158">The name of the type to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c0e4-159">지정된, 정규화된 형식 이름의 인스턴스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-159">Gets an instance of the specified, fully qualified type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c0e4-160">지정된 형식 이름에 대한 형식 개체이거나, 형식을 찾을 수 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-160">The type object for the specified type name, or <see langword="null" /> if the type cannot be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InTransaction">
      <MemberSignature Language="C#" Value="public bool InTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InTransaction" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.InTransaction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InTransaction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InTransaction : bool" Usage="System.ComponentModel.Design.IDesignerHost.InTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c0e4-161">디자이너 호스트가 현재 트랜잭션에 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-161">Gets a value indicating whether the designer host is currently in a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c0e4-162">트랜잭션이 처리 중이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-162">
              <see langword="true" /> if a transaction is in progress; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadComplete">
      <MemberSignature Language="C#" Value="event EventHandler LoadComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoadComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" />
      <MemberSignature Language="VB.NET" Value="Event LoadComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoadComplete;" />
      <MemberSignature Language="F#" Value="member this.LoadComplete : EventHandler " Usage="member this.LoadComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c0e4-163">이 디자이너에서 문서 로드를 완료할 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-163">Occurs when this designer completes loading its document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c0e4-164">이 이벤트는 디자이너에서 문서 로드를 완료 한 후에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-164">This event occurs after a designer completes loading its document.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.Design.IDesignerHost.Loading" />
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public bool Loading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.Loading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Loading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Loading { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Loading : bool" Usage="System.ComponentModel.Design.IDesignerHost.Loading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c0e4-165">디자이너 호스트가 현재 문서를 로드 중인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-165">Gets a value indicating whether the designer host is currently loading the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c0e4-166">디자이너 호스트가 현재 문서를 로드 중이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-166">
              <see langword="true" /> if the designer host is currently loading the document; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent RootComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent RootComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ RootComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootComponent : System.ComponentModel.IComponent" Usage="System.ComponentModel.Design.IDesignerHost.RootComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c0e4-167">현재 디자인에 대한 루트 구성 요소로 사용된 기본 클래스의 인스턴스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-167">Gets the instance of the base class used as the root component for the current design.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c0e4-168">루트 구성 요소 클래스의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-168">The instance of the root component class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c0e4-169">이 기본 클래스는 일반적으로 <xref:System.Windows.Forms.Form> 또는 <xref:System.Windows.Forms.UserControl> ; 인스턴스는 사용자의 파생된 클래스를 확장 하는 클래스를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-169">This base class is typically a <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.UserControl> instance; it defines the class for which the user's derived class extends.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootComponentClassName">
      <MemberSignature Language="C#" Value="public string RootComponentClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootComponentClassName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootComponentClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootComponentClassName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootComponentClassName : string" Usage="System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c0e4-170">디자인하고 있는 클래스의 정규화된 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-170">Gets the fully qualified name of the class being designed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c0e4-171">기본 구성 요소 클래스의 정규화된 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-171">The fully qualified name of the base component class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionClosed">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      <MemberSignature Language="VB.NET" Value="Event TransactionClosed As DesignerTransactionCloseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignerTransactionCloseEventHandler ^ TransactionClosed;" />
      <MemberSignature Language="F#" Value="member this.TransactionClosed : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " Usage="member this.TransactionClosed : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransactionCloseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c0e4-172">
            <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> 이벤트에 대한 이벤트 처리기를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-172">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c0e4-173">이 이벤트는 트랜잭션이 닫힌 후에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-173">This event occurs after a transaction is closed.</span></span>  
  
 <span data-ttu-id="5c0e4-174">트랜잭션이 여러 값을 변경 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-174">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="5c0e4-175">트랜잭션 메서드는 반복 되는 처리를 방지 하 여 깜박임 문제 및 성능을 방지 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-175">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="5c0e4-176">이러한 메서드는 트랜잭션이 닫힐 때까지 처리를 지연 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-176">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionClosing">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
      <MemberSignature Language="VB.NET" Value="Event TransactionClosing As DesignerTransactionCloseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignerTransactionCloseEventHandler ^ TransactionClosing;" />
      <MemberSignature Language="F#" Value="member this.TransactionClosing : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " Usage="member this.TransactionClosing : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransactionCloseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c0e4-177">
            <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> 이벤트에 대한 이벤트 처리기를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-177">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c0e4-178">이 이벤트는 트랜잭션이 완료 되기 직전에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-178">This event occurs just before a transaction is completed.</span></span>  
  
 <span data-ttu-id="5c0e4-179">트랜잭션이 여러 값을 변경 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-179">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="5c0e4-180">트랜잭션 메서드는 반복 되는 처리를 방지 하 여 깜박임 문제 및 성능을 방지 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-180">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="5c0e4-181">이러한 메서드는 트랜잭션이 닫힐 때까지 처리를 지연 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-181">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionDescription">
      <MemberSignature Language="C#" Value="public string TransactionDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransactionDescription" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransactionDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransactionDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransactionDescription : string" Usage="System.ComponentModel.Design.IDesignerHost.TransactionDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c0e4-182">현재 트랜잭션에 대한 설명을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-182">Gets the description of the current transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c0e4-183">현재 트랜잭션에 대한 설명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-183">A description of the current transaction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c0e4-184">설명을 사용 하 여 지정 된 마지막 설명은 <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-184">The description is the last description specified with <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOpened">
      <MemberSignature Language="C#" Value="event EventHandler TransactionOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TransactionOpened" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
      <MemberSignature Language="VB.NET" Value="Event TransactionOpened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TransactionOpened;" />
      <MemberSignature Language="F#" Value="member this.TransactionOpened : EventHandler " Usage="member this.TransactionOpened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c0e4-185">
            <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> 이벤트에 대한 이벤트 처리기를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-185">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c0e4-186">이 이벤트는 트랜잭션이 시작 되었을 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-186">This event occurs when a transaction has begun.</span></span>  
  
 <span data-ttu-id="5c0e4-187">트랜잭션이 여러 값을 변경 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-187">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="5c0e4-188">트랜잭션 메서드는 반복 되는 처리를 방지 하 여 깜박임 문제 및 성능을 방지 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-188">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="5c0e4-189">이러한 메서드는 트랜잭션이 닫힐 때까지 처리를 지연 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-189">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOpening">
      <MemberSignature Language="C#" Value="event EventHandler TransactionOpening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TransactionOpening" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
      <MemberSignature Language="VB.NET" Value="Event TransactionOpening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TransactionOpening;" />
      <MemberSignature Language="F#" Value="member this.TransactionOpening : EventHandler " Usage="member this.TransactionOpening : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c0e4-190">
            <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> 이벤트에 대한 이벤트 처리기를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c0e4-190">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c0e4-191">이 이벤트는 트랜잭션 시작 되려고 할 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-191">This event occurs when a transaction is about to begin.</span></span>  
  
 <span data-ttu-id="5c0e4-192">이 메서드를 사용 하면 디자이너 호스트 클라이언트 작업을 수행한 후 다른 처리기는 트랜잭션이 시작 된 알림이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-192">This method allows designer host clients to perform operations before other handlers are notified that a transaction has begun.</span></span> <span data-ttu-id="5c0e4-193">만 첫 번째 호출 하는 경우에 지정 된 처리기가 호출 <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-193">The specified handler is called only when the first call to <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> is made.</span></span> <span data-ttu-id="5c0e4-194">후속 호출에서 트랜잭션 개체를 모두 삭제 되었을 때까지이 이벤트를 생성 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5c0e4-194">Subsequent calls do not generate this event until all transaction objects have been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
  </Members>
</Type>