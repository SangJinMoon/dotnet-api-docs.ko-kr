<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDesignerHost.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56a5d45bd683269ed3912d04dd336b2bccc6e7449.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a5d45bd683269ed3912d04dd336b2bccc6e7449</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>Provides an interface for managing designer transactions and components.</source>
          <target state="translated">디자이너 트랜잭션과 구성 요소를 관리하기 위한 인터페이스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> is an interface that works with the .NET Framework forms designer architecture to provide support for designer transaction and component management.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> 디자이너 트랜잭션 및 구성 요소 관리에 대 한 지원을 제공 하 여.NET Framework 양식 디자이너 아키텍처를 사용 하는 인터페이스가입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The .NET Framework does not provide an implementation of this interface.</source>
          <target state="translated">.NET Framework에는이 인터페이스의 구현을 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The interface is implemented by development tools that support designers.</source>
          <target state="translated">디자이너를 지 원하는 개발 도구에서 인터페이스를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The following example code demonstrates how to obtain the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> service interface from a designer or sited component.</source>
          <target state="translated">다음 예제 코드를 가져오는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> 디자이너 또는 설치 되는 구성에서 서비스 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The following example code demonstrates using the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> interface to list project components.</source>
          <target state="translated">다음 예제 코드를 사용 하 여 보여 줍니다.는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> 목록 프로젝트 구성 요소에 대 한 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>To obtain an implementation of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> from a development environment, call <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.GetService(System.Type)" /&gt;</ph> while your component is active in design mode, passing the type of <ph id="ph3">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> to request an <ph id="ph4">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> service interface.</source>
          <target state="translated">구현 하려면 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> 개발 환경에서 호출 <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.GetService(System.Type)" /&gt;</ph> 구성 요소가 디자인 모드에서 활성 상태인 동안의 형식을 전달 <ph id="ph3">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> 요청에는 <ph id="ph4">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> 서비스 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> provides the following members related to designer state:</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> 디자이너 상태와 관련 된 다음 멤버를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" /&gt;</ph> property indicates whether a designer or document is being loaded.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" /&gt;</ph> 속성 디자이너나 문서가 로드 되 고 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" /&gt;</ph> event occurs when a designer is activated before display.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" /&gt;</ph> 이벤트 디자이너를 표시 하기 전에 활성화 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" /&gt;</ph> event occurs when a designer is deactivated.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" /&gt;</ph> 이 이벤트는 디자이너가 비활성화 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" /&gt;</ph> event occurs after a document is loaded.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" /&gt;</ph> 이벤트는 문서가 로드 된 후에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /&gt;</ph> method activates the designer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /&gt;</ph> 메서드는 디자이너를 활성화 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> provides the following members related to managing components:</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> 구성 요소 관리와 관련 된 다음과 같은 멤버를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.Container" /&gt;</ph> property indicates the container for the designer host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.Container" /&gt;</ph> 속성은 디자이너 호스트에 대 한 컨테이너를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /&gt;</ph> property indicates the base class for the root component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /&gt;</ph> 속성은 루트 구성 요소에 대 한 기본 클래스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" /&gt;</ph> property indicates the name of the class of the root component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" /&gt;</ph> 속성은 루트 구성 요소 클래스의 이름을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" /&gt;</ph> method creates the specified type of component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" /&gt;</ph> 메서드는 지정된 된 형식의 구성 요소를 만듭니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" /&gt;</ph> method destroys the specified component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" /&gt;</ph> 메서드는 지정된 된 구성 요소를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" /&gt;</ph> method gets the designer associated with a specified component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" /&gt;</ph> 메서드는 지정된 된 구성 요소와 연결 된 디자이너를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" /&gt;</ph> method gets an instance of the type with the specified name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" /&gt;</ph> 메서드는 지정된 된 이름 가진 형식의 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> provides the following members related to managing transactions:</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> 트랜잭션 관리와 관련 된 다음 멤버를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" /&gt;</ph> property indicates whether the designer is in a transaction.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" /&gt;</ph> 속성 트랜잭션에서 디자이너 인지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" /&gt;</ph> property indicates the current transaction description.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" /&gt;</ph> 속성은 현재 트랜잭션 설명을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /&gt;</ph> event occurs when a transaction has been completed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /&gt;</ph> 이 이벤트는 트랜잭션이 완료 되었을 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /&gt;</ph> event occurs when a transaction is about to be completed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /&gt;</ph> 트랜잭션이를 완료할 때 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /&gt;</ph> event occurs when a transaction has begun.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /&gt;</ph> 이 이벤트는 트랜잭션이 시작 되었을 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /&gt;</ph> event occurs when a transaction is about to begin.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /&gt;</ph> 이벤트 트랜잭션이 시작 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" /&gt;</ph> method creates and returns a new transaction.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" /&gt;</ph> 메서드가 생성 되 고 새 트랜잭션을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.Activate">
          <source>Activates the designer that this host is hosting.</source>
          <target state="translated">이 호스트가 호스팅 중인 디자이너를 활성화합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.Activate">
          <source>Designers should be activated before they display their user interface.</source>
          <target state="translated">디자이너는 사용자 인터페이스를 표시 하기 전에 활성화 해야 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IDesignerHost.Activated">
          <source>Occurs when this designer is activated.</source>
          <target state="translated">이 디자이너가 활성화될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.Activated">
          <source>A designer is activated before it is displayed.</source>
          <target state="translated">디자이너를 표시 하기 전에 활성화 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.IDesignerHost.Container">
          <source>Gets the container for this designer host.</source>
          <target state="translated">이 디자이너 호스트에 대한 컨테이너를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.Container">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> for this host.</source>
          <target state="translated">이 호스트에 대한 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.Container">
          <source>This <ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph> contains the components of the current design mode document.</source>
          <target state="translated">이 <ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph> 현재 디자인 모드 문서의 구성 요소를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.Container">
          <source>You can list or access any of the components of the current design mode document through the <ph id="ph1">&lt;xref:System.ComponentModel.IContainer.Components%2A&gt;</ph> member of this <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">목록 또는 구성 요소를 통해 현재 디자인 모드 문서에 액세스할 수는 <ph id="ph1">&lt;xref:System.ComponentModel.IContainer.Components%2A&gt;</ph> 이 소속 <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>Creates a component of the specified type and adds it to the design document.</source>
          <target state="translated">지정된 형식의 구성 요소를 만들어 디자인 문서에 추가합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)">
          <source>The type of the component to create.</source>
          <target state="translated">만들 구성 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)">
          <source>Creates a component of the specified type and adds it to the design document.</source>
          <target state="translated">지정된 형식의 구성 요소를 만들어 디자인 문서에 추가합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)">
          <source>The newly created component.</source>
          <target state="translated">새로 만들어진 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)">
          <source>If the type cannot be resolved into an object that implements <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, an exception is thrown.</source>
          <target state="translated">구현 하는 개체 유형을 확인할 수 없는 경우 <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)">
          <source>This method does not specify a name for the component.</source>
          <target state="translated">이 메서드는 구성 요소에 대 한 이름을 지정 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)">
          <source>The method creates the component and adds it to the designer container.</source>
          <target state="translated">메서드는 구성 요소를 만들고 디자이너 컨테이너에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)">
          <source>The type of the component to create.</source>
          <target state="translated">만들 구성 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)">
          <source>The name for the component.</source>
          <target state="translated">구성 요소의 이름입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)">
          <source>Creates a component of the specified type and name, and adds it to the design document.</source>
          <target state="translated">지정된 형식과 이름의 구성 요소를 만들어 디자인 문서에 추가합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)">
          <source>The newly created component.</source>
          <target state="translated">새로 만들어진 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)">
          <source>If the type cannot be resolved into an object that implements <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, an exception is thrown.</source>
          <target state="translated">구현 하는 개체 유형을 확인할 수 없는 경우 <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)">
          <source>This method creates the component and adds it to the designer container.</source>
          <target state="translated">이 메서드는 구성 요소를 만들고 디자이너 컨테이너에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</source>
          <target state="translated">이벤트 순서를 캡슐화하여 성능을 개선하고 다시 실행 및 실행 취소 기능을 지원할 수 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</source>
          <target state="translated">이벤트 순서를 캡슐화하여 성능을 개선하고 다시 실행 및 실행 취소 기능을 지원할 수 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>A new instance of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph>의 새 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>When you complete the steps in your transaction, you should call <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /&gt;</ph> on this object.</source>
          <target state="translated">트랜잭션 단계를 완료할 때 이 개체에 <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /&gt;</ph>을 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>This method creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> that can be used to encapsulate a series of operations.</source>
          <target state="translated">이 메서드가 만드는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> 일련의 작업을 캡슐화 하는 데 사용 하는 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</source>
          <target state="translated">디자이너 트랜잭션 성능을 향상 시킬 수 있습니다, 그리고 여러 개의 업데이트 작업의 과정 동안 인해 깜빡임 줄이기 및 실행을 취소할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>Lengthy operations that involve multiple components can raise many events.</source>
          <target state="translated">여러 구성 요소를 포함 하는 시간이 오래 걸리는 작업 이벤트가 많이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>These events can cause side effects, such as flicker or degraded performance.</source>
          <target state="translated">이러한 이벤트는 같은 부작용이 발생 수 또는 성능이 저하 되는 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</source>
          <target state="translated">를 한 번에 여러 구성 요소에서 작동 하거나 단일 구성 요소에 대해 여러 속성을 설정할 때 이러한 변경 내용은 트랜잭션 내에서 수행 하 여 성능을 개선할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>Some operations handle the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt;</ph> events and perform work only when a transaction is not in progress.</source>
          <target state="translated">일부 작업의 처리는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt;</ph> 이벤트는 트랜잭션이 진행 중인 않는 경우에 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>For more information on using transactions, see the documentation for <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>.</source>
          <target state="translated">트랜잭션 사용에 대 한 자세한 내용은 설명서를 참조 <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>A title or description for the newly created transaction.</source>
          <target state="translated">새로 만들어진 트랜잭션에 대한 제목 또는 설명입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph> that can encapsulate event sequences to improve performance and enable undo and redo support functionality, using the specified transaction description.</source>
          <target state="translated">지정된 트랜잭션 설명을 통해 이벤트 순서를 캡슐화하여 성능을 개선하고 다시 실행 및 실행 취소 기능을 지원할 수 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>When you have completed the steps in your transaction, you should call <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /&gt;</ph> on this object.</source>
          <target state="translated">트랜잭션 단계를 완료했으면 이 개체에 <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /&gt;</ph>을 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>This method creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> that can be used to encapsulate a series of operations.</source>
          <target state="translated">이 메서드가 만드는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> 일련의 작업을 캡슐화 하는 데 사용 하는 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</source>
          <target state="translated">디자이너 트랜잭션 성능을 향상 시킬 수 있습니다, 그리고 여러 개의 업데이트 작업의 과정 동안 인해 깜빡임 줄이기 및 실행을 취소할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>Lengthy operations that involve multiple components can raise many events.</source>
          <target state="translated">여러 구성 요소를 포함 하는 시간이 오래 걸리는 작업 이벤트가 많이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>These events can cause side effects, such as flicker or degraded performance.</source>
          <target state="translated">이러한 이벤트는 같은 부작용이 발생 수 또는 성능이 저하 되는 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</source>
          <target state="translated">를 한 번에 여러 구성 요소에서 작동 하거나 단일 구성 요소에 대해 여러 속성을 설정할 때 이러한 변경 내용은 트랜잭션 내에서 수행 하 여 성능을 개선할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>Some operations handle the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt;</ph> events and perform work only when a transaction is not in progress.</source>
          <target state="translated">일부 작업의 처리는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt;</ph> 이벤트는 트랜잭션이 진행 중인 않는 경우에 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>For more information on using transactions, see the documentation for <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>.</source>
          <target state="translated">트랜잭션 사용에 대 한 자세한 내용은 설명서를 참조 <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IDesignerHost.Deactivated">
          <source>Occurs when this designer is deactivated.</source>
          <target state="translated">이 디자이너가 비활성화될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.Deactivated">
          <source>A designer is deactivated just before it is no longer displayed.</source>
          <target state="translated">디자이너를 표시 하는 것은 더 이상 전에 비활성화 됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)">
          <source>The component to destroy.</source>
          <target state="translated">소멸시킬 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)">
          <source>Destroys the specified component and removes it from the designer container.</source>
          <target state="translated">지정된 구성 요소를 소멸시키고 디자이너 컨테이너에서 이를 제거합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> to retrieve the designer for.</source>
          <target state="translated">디자이너를 검색할 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)">
          <source>Gets the designer instance that contains the specified component.</source>
          <target state="translated">지정된 구성 요소가 들어 있는 디자이너 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesigner" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no designer for the specified component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesigner" /&gt;</ph>이거나, 지정된 구성 요소에 대한 디자이너가 없으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)">
          <source>The name of the type to load.</source>
          <target state="translated">로드할 형식의 이름입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)">
          <source>Gets an instance of the specified, fully qualified type name.</source>
          <target state="translated">지정된, 정규화된 형식 이름의 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)">
          <source>The type object for the specified type name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the type cannot be found.</source>
          <target state="translated">지정된 형식 이름에 대한 형식 개체이거나, 형식을 찾을 수 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.IDesignerHost.InTransaction">
          <source>Gets a value indicating whether the designer host is currently in a transaction.</source>
          <target state="translated">디자이너 호스트가 현재 트랜잭션에 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.InTransaction">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a transaction is in progress; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">트랜잭션이 처리 중이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IDesignerHost.LoadComplete">
          <source>Occurs when this designer completes loading its document.</source>
          <target state="translated">이 디자이너에서 문서 로드를 완료할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.LoadComplete">
          <source>This event occurs after a designer completes loading its document.</source>
          <target state="translated">이 이벤트는 디자이너에서 문서 로드를 완료 한 후에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.IDesignerHost.Loading">
          <source>Gets a value indicating whether the designer host is currently loading the document.</source>
          <target state="translated">디자이너 호스트가 현재 문서를 로드 중인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.Loading">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the designer host is currently loading the document; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">디자이너 호스트가 현재 문서를 로드 중이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.IDesignerHost.RootComponent">
          <source>Gets the instance of the base class used as the root component for the current design.</source>
          <target state="translated">현재 디자인에 대한 루트 구성 요소로 사용된 기본 클래스의 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.RootComponent">
          <source>The instance of the root component class.</source>
          <target state="translated">루트 구성 요소 클래스의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.RootComponent">
          <source>This base class is typically a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> instance; it defines the class for which the user's derived class extends.</source>
          <target state="translated">이 기본 클래스는 일반적으로 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> 인스턴스이거나 사용자의 파생된 클래스를 확장 하는 클래스를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName">
          <source>Gets the fully qualified name of the class being designed.</source>
          <target state="translated">디자인하고 있는 클래스의 정규화된 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName">
          <source>The fully qualified name of the base component class.</source>
          <target state="translated">기본 구성 요소 클래스의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed">
          <source>Adds an event handler for the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /&gt;</ph> 이벤트에 대한 이벤트 처리기를 추가합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed">
          <source>This event occurs after a transaction is closed.</source>
          <target state="translated">이 이벤트는 트랜잭션이 닫힌 후에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed">
          <source>A transaction can sometimes change multiple values.</source>
          <target state="translated">트랜잭션을 여러 값을 변경할 경우에 따라 수 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed">
          <source>The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</source>
          <target state="translated">트랜잭션 메서드는 반복 되는 처리를 방지 하 여 깜박임 문제 및 성능을 방지 하기 위해 알아볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed">
          <source>These methods defer processing until after the transaction has closed.</source>
          <target state="translated">이러한 메서드는 트랜잭션이 닫힐 때까지 처리를 지연 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing">
          <source>Adds an event handler for the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /&gt;</ph> 이벤트에 대한 이벤트 처리기를 추가합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing">
          <source>This event occurs just before a transaction is completed.</source>
          <target state="translated">이 이벤트는 트랜잭션이 완료 되기 직전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing">
          <source>A transaction can sometimes change multiple values.</source>
          <target state="translated">트랜잭션을 여러 값을 변경할 경우에 따라 수 있습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing">
          <source>The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</source>
          <target state="translated">트랜잭션 메서드는 반복 되는 처리를 방지 하 여 깜박임 문제 및 성능을 방지 하기 위해 알아볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing">
          <source>These methods defer processing until after the transaction has closed.</source>
          <target state="translated">이러한 메서드는 트랜잭션이 닫힐 때까지 처리를 지연 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription">
          <source>Gets the description of the current transaction.</source>
          <target state="translated">현재 트랜잭션에 대한 설명을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription">
          <source>A description of the current transaction.</source>
          <target state="translated">현재 트랜잭션에 대한 설명입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription">
          <source>The description is the last description specified with <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;</ph>.</source>
          <target state="translated">설명은 지정 된 마지막 설명 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened">
          <source>Adds an event handler for the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /&gt;</ph> 이벤트에 대한 이벤트 처리기를 추가합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened">
          <source>This event occurs when a transaction has begun.</source>
          <target state="translated">이 이벤트는 트랜잭션이 시작 되었을 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened">
          <source>A transaction can sometimes change multiple values.</source>
          <target state="translated">트랜잭션을 여러 값을 변경할 경우에 따라 수 있습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened">
          <source>The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</source>
          <target state="translated">트랜잭션 메서드는 반복 되는 처리를 방지 하 여 깜박임 문제 및 성능을 방지 하기 위해 알아볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened">
          <source>These methods defer processing until after the transaction has closed.</source>
          <target state="translated">이러한 메서드는 트랜잭션이 닫힐 때까지 처리를 지연 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening">
          <source>Adds an event handler for the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /&gt;</ph> 이벤트에 대한 이벤트 처리기를 추가합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening">
          <source>This event occurs when a transaction is about to begin.</source>
          <target state="translated">이 이벤트에는 트랜잭션이 시작 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening">
          <source>This method allows designer host clients to perform operations before other handlers are notified that a transaction has begun.</source>
          <target state="translated">이 메서드를 사용 하면 디자이너 호스트 클라이언트에서 작업을 수행한 후 다른 처리기는 트랜잭션이 시작 된 메시지가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening">
          <source>The specified handler is called only when the first call to <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;</ph> is made.</source>
          <target state="translated">만 첫 번째 호출 하는 경우에 지정 된 처리기가 호출 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;</ph> 이루어집니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening">
          <source>Subsequent calls do not generate this event until all transaction objects have been disposed.</source>
          <target state="translated">후속 호출에서는 모든 트랜잭션이 삭제 된 때까지이 이벤트를 생성 하지 않습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>