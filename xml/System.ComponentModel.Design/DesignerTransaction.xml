<Type Name="DesignerTransaction" FullName="System.ComponentModel.Design.DesignerTransaction">
  <TypeSignature Language="C#" Value="public abstract class DesignerTransaction : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DesignerTransaction extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerTransaction" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DesignerTransaction&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerTransaction abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="53ad9-101">성능을 개선하고 대부분의 종류의 변경을 취소할 수 있도록 일련의 디자인 타임 동작을 그룹화하는 방법을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-101">Provides a way to group a series of design-time actions to improve performance and enable most types of changes to be undone.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53ad9-102">트랜잭션을 실행 취소할 수 나중에 작업을 추적할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-102">Transactions can track actions that can be undone later.</span></span> <span data-ttu-id="53ad9-103">각 변경 된을 각 변경 된 속성을 설정 하 여 역방향 하려고 자동으로 트랜잭션을 취소 하 여 트랜잭션 중에 수행 된 변경 내용은 되돌릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-103">Changes made during a transaction can be reversed by canceling a transaction, which automatically attempts to reverse each change by setting each changed property to its pre-change value.</span></span> <span data-ttu-id="53ad9-104">트랜잭션 속도가 트랜잭션이 완료 될 때까지 표시에 대 한 업데이트를 연기 하 여 일련의 작업 중 성능도 향상 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-104">Transactions can also improve performance during a series of operations by deferring updates to the display until the completion of the transaction.</span></span>  
  
 <span data-ttu-id="53ad9-105">일부 구성 요소를 수신 대기 하는 트랜잭션이 완료 될 때까지 해당 처리 지연 트랜잭션이 진행 중인 때는 <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> 및 <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-105">When a transaction is in progress, some components defer their processing until the transaction has completed by listening to the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events.</span></span> <span data-ttu-id="53ad9-106">예를 들어, 속성 창은는 트랜잭션이 닫힐 때까지 열린 후는 표시를 업데이트 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-106">The Properties window, for example, does not update its display after a transaction has opened until the transaction has closed.</span></span>  
  
 <span data-ttu-id="53ad9-107">트랜잭션이 되돌릴 또는 여러 작업을 사용 하려면 만들 디자이너가는 <xref:System.ComponentModel.Design.DesignerTransaction> 각 작업 또는 일련의 작업을 취소할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-107">To use transactions for reversible or multiple operations, have your designer create a <xref:System.ComponentModel.Design.DesignerTransaction> for each operation or series of operations which should be reversible.</span></span> <span data-ttu-id="53ad9-108">트랜잭션 외부에서 작업이 성공적으로 완료 한 일련의 실행 취소 이벤트를 방해할 수 있는 작업을 수행 하지 않도록 주의 하십시오.</span><span class="sxs-lookup"><span data-stu-id="53ad9-108">Be careful not to perform actions outside the transactions that might prevent a sequence of undo events from completing successfully.</span></span>  
  
 <span data-ttu-id="53ad9-109">새 얻을 수 있습니다 <xref:System.ComponentModel.Design.DesignerTransaction> 호출 하 여는 <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> 의 메서드는 <xref:System.ComponentModel.Design.IDesignerHost>합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-109">You can obtain a new <xref:System.ComponentModel.Design.DesignerTransaction> by calling the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> method of an <xref:System.ComponentModel.Design.IDesignerHost>.</span></span> <span data-ttu-id="53ad9-110">반드시 각 구입 <xref:System.ComponentModel.Design.DesignerTransaction> 활성에서 <xref:System.ComponentModel.Design.IDesignerHost> 올바르게 새로 만드는 대신 메커니즘을 처리 된 디자이너 트랜잭션의 통합 하기 위해서 <xref:System.ComponentModel.Design.DesignerTransaction> 직접 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-110">Be sure to obtain each <xref:System.ComponentModel.Design.DesignerTransaction> from the active <xref:System.ComponentModel.Design.IDesignerHost> in order to correctly integrate with the designer transaction processing mechanism, rather than creating a new <xref:System.ComponentModel.Design.DesignerTransaction> directly.</span></span>  
  
 <span data-ttu-id="53ad9-111">트랜잭션 내에서 작업을 수행 하려면 먼저 트랜잭션을 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-111">To perform an action within a transaction, you must first create a transaction.</span></span> <span data-ttu-id="53ad9-112">호출 해야 합니다는 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> 각 변경 또는 변경 내용 집합이 발생 하기 전에 메서드 및 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> 메서드 각 변경 또는 변경 집합을 후 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-112">Then you must call the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> method before each change or set of changes occurs, and the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> method after each change or set of changes occur.</span></span> <span data-ttu-id="53ad9-113">마지막으로 작성 하 고 호출 하 여 트랜잭션을 닫습니다는 <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53ad9-113">Finally, complete and close the transaction by calling the <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53ad9-114">속성 값에 변경 내용을 적용할 때 사용 하 여는 <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> 의 메서드는 <xref:System.ComponentModel.PropertyDescriptor>의 구성 요소 변경 메서드를 호출 하는 <xref:System.ComponentModel.Design.IComponentChangeService> 만듭니다는 <xref:System.ComponentModel.Design.DesignerTransaction> 을 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-114">When making changes to property values, use the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method of a <xref:System.ComponentModel.PropertyDescriptor>, which calls the component change methods of the <xref:System.ComponentModel.Design.IComponentChangeService> and creates a <xref:System.ComponentModel.Design.DesignerTransaction> representing the change automatically.</span></span>  
  
 <span data-ttu-id="53ad9-115">트랜잭션을 수행 하려면 다음 단계를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-115">To perform a transaction, complete the following steps:</span></span>  
  
1.  <span data-ttu-id="53ad9-116">호출 <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> 얻으려고는 <xref:System.ComponentModel.Design.DesignerTransaction> 트랜잭션을 제어를 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-116">Call <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> to obtain a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to control the transaction.</span></span>  
  
2.  <span data-ttu-id="53ad9-117">내에서 `try` 와 추적 하려는 각 작업에 대 한 블록은 <xref:System.ComponentModel.Design.DesignerTransaction>, 호출는 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> 메서드를 호출 변경 또는 변경을 확인는 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> 에 변경을 수행 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-117">Within a `try` block, for each action that you want to track with a <xref:System.ComponentModel.Design.DesignerTransaction>, call the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> method, make the change or changes, then call the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> method to signal that the change or changes have been made.</span></span>  
  
3.  <span data-ttu-id="53ad9-118">트랜잭션을 완료 하려면 호출 <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A> 내에서 한 `finally` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-118">To complete the transaction, call <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A> from within a `finally` block.</span></span>  
  
 <span data-ttu-id="53ad9-119">C#에서 사용할 수 있습니다는 `using` 문이 아닌 `try/finally` 다음 예제와 같이 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-119">In C#, you can use the `using` statement rather than a `try/finally` block, such as in the following example.</span></span>  
  
```  
using (host.CreateTransaction() {  
// Insert your code here.  
}  
```  
  
 <span data-ttu-id="53ad9-120">취소 하 고 트랜잭션이 커밋되기 전에 트랜잭션을 롤백하기를 하려면 호출 된 <xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53ad9-120">To cancel and attempt to roll back a transaction before it has been committed, call the <xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A> method.</span></span> <span data-ttu-id="53ad9-121">때는 <xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A> 메서드가 호출 되 면 동작에서 추적 되는 <xref:System.ComponentModel.Design.DesignerTransaction> 변경 내용을 롤백하기 위해 되돌려집니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-121">When the <xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A> method is invoked, the actions tracked by the <xref:System.ComponentModel.Design.DesignerTransaction> are reversed to attempt to roll back the changes.</span></span> <span data-ttu-id="53ad9-122">이전 트랜잭션에서의 일환으로 수행 된 작업을 실행 취소 하려면 개발 환경에서 제공 하는 실행 취소 명령을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-122">To undo actions that occurred as part of earlier transactions, you must use the undo command provided by the development environment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53ad9-123">다음 코드 예제 프로그램을 만드는 방법을 보여는 <xref:System.ComponentModel.Design.DesignerTransaction> 디자이너에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-123">The following code example program demonstrates how to create a <xref:System.ComponentModel.Design.DesignerTransaction> from a designer.</span></span> <span data-ttu-id="53ad9-124">이 샘플을 실행 하려면 소스 코드를 클래스 라이브러리로 컴파일하십시오.</span><span class="sxs-lookup"><span data-stu-id="53ad9-124">To run this sample, compile the source code into a class library.</span></span> <span data-ttu-id="53ad9-125">System.Design 어셈블리에 대 한 참조를 추가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-125">You must add a reference to the System.Design assembly.</span></span> <span data-ttu-id="53ad9-126">새 프로젝트에서 컴파일된 DLL에 대 한 참조를 추가 하 고 라이브러리에 있는 구성 요소를 추가할는 **도구 상자**합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-126">In a new project, add a reference to the compiled DLL and add the component in the library to the **Toolbox**.</span></span>  
  
 <span data-ttu-id="53ad9-127">Visual Studio에서는이 기능이 광범위 하 게 지원이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-127">There is extensive support for this feature in Visual Studio.</span></span>  
  
 <span data-ttu-id="53ad9-128">또한 참조 [연습: 사용자 지정 구성 요소와 도구 상자 자동으로 채우는](http://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-128">Also see [Walkthrough: Automatically Populating the Toolbox with Custom Components](http://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx).</span></span>  
  
 <span data-ttu-id="53ad9-129">디자이너 디자이너 트랜잭션의 이벤트에 대 한 알림을 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-129">The designer can optionally display notifications about designer transaction events.</span></span> <span data-ttu-id="53ad9-130">인스턴스를 추가 하는 경우는 `DTComponent` 폼에 디자인 모드로 묻는 메시지 상자가 나타나면 디자이너 트랜잭션의 이벤트 알림의 받을 것인지 여부입니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-130">If you add an instance of the `DTComponent` to a form while in design mode, a message box appears asking whether you would like to receive designer transaction event notifications.</span></span> <span data-ttu-id="53ad9-131">인스턴스를 마우스 오른쪽 단추로 클릭할 때 표시 되는 바로 가기 메뉴를 사용 하 여 이러한 알림을 설정 하거나 해제할 수는 `DTComponent`합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-131">You may toggle these notifications using the shortcut menu that appears when you right-click an instance of the `DTComponent`.</span></span> <span data-ttu-id="53ad9-132">속성 창을 사용 하 여 값을 변경 하면 트랜잭션이 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-132">Transactions are created when you change values using the Properties window.</span></span> <span data-ttu-id="53ad9-133">클릭 하 여 트랜잭션을 수행 하는 디자이너를 설치할 수도 **예제 트랜잭션 수행** 구성 요소에 대 한 바로 가기 메뉴입니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-133">You can also have the designer perform a transaction by clicking **Perform Example Transaction** on the shortcut menu for the component.</span></span>  
  
 [!code-cpp[DesignerTransaction Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DesignerTransaction Sample/CPP/source.cpp#1)]
 [!code-csharp[DesignerTransaction Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DesignerTransaction Sample/CS/source.cs#1)]
 [!code-vb[DesignerTransaction Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DesignerTransaction Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="53ad9-134">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-134">for full access to system resources.</span></span> <span data-ttu-id="53ad9-135">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-135">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="53ad9-136">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="53ad9-136">Associated state:</span></span></permission>
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="53ad9-137"><see cref="T:System.ComponentModel.Design.DesignerTransaction" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-137">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DesignerTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DesignerTransaction();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53ad9-138">설명을 사용하지 않고 <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-138">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> class with no description.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="53ad9-139">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-139">for full access to system resources.</span></span> <span data-ttu-id="53ad9-140">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-140">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="53ad9-141">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="53ad9-141">Associated state:</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DesignerTransaction (string description);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (description As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DesignerTransaction(System::String ^ description);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="53ad9-142">이 트랜잭션에 대한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-142">A description for this transaction.</span></span></param>
        <summary><span data-ttu-id="53ad9-143">지정된 트랜잭션 설명을 사용하여 <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-143">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> class using the specified transaction description.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53ad9-144">이 생성자에는 지정한 설명 사용 하 여 트랜잭션을 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-144">This constructor initializes the transaction with the specified description.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="53ad9-145">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-145">for full access to system resources.</span></span> <span data-ttu-id="53ad9-146">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-146">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="53ad9-147">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="53ad9-147">Associated state:</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53ad9-148">트랜잭션을 취소하고 트랜잭션의 이벤트에 의해 변경된 내용을 롤백합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-148">Cancels the transaction and attempts to roll back the changes made by the events of the transaction.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="53ad9-149">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-149">for full access to system resources.</span></span> <span data-ttu-id="53ad9-150">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-150">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="53ad9-151">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="53ad9-151">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.Design.DesignerTransaction.OnCancel" />
      </Docs>
    </Member>
    <Member MemberName="Canceled">
      <MemberSignature Language="C#" Value="public bool Canceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Canceled" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerTransaction.Canceled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Canceled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Canceled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53ad9-152">트랜잭션이 취소되었는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-152">Gets a value indicating whether the transaction was canceled.</span></span></summary>
        <value>
          <span data-ttu-id="53ad9-153">트랜잭션이 취소되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-153"><see langword="true" /> if the transaction was canceled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53ad9-154">디자이너 트랜잭션이 취소 되 면 트랜잭션 처리 메커니즘 적용 된 지금까지 트랜잭션의 변경 내용을 적용 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-154">When a designer transaction is canceled, the transaction processing mechanism attempts to roll back the changes that have been made so far in the transaction.</span></span> <span data-ttu-id="53ad9-155">일련의 예상된 작업을 완료 하지 못했습니다. 그리고 다른 작업과 관련된 된 코드의 상태와 충돌 있는지 여부에 상관 없이 하는 것은 각 작업의 종류와 같은 요소에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-155">Whether this succeeds is dependent upon such factors as the type of each operation, whether other operations interfered with any of the involved code's state, and whether a sequence of expected operations failed to complete.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="53ad9-156">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-156">for full access to system resources.</span></span> <span data-ttu-id="53ad9-157">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-157">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="53ad9-158">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="53ad9-158">Associated state:</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53ad9-159">이 트랜잭션을 커밋합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-159">Commits this transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53ad9-160">디자이너 트랜잭션이 커밋될 때 트랜잭션이 완료 되었다고 간주 하 고 추가 변경 내용을 추적 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-160">When a designer transaction is committed, the transaction is considered complete and does not track further changes.</span></span>  
  
 <span data-ttu-id="53ad9-161">트랜잭션이 커밋된 후 더 이상이 메서드를 호출 아무 작업도 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-161">Once a transaction has been committed, further calls to this method do nothing.</span></span> <span data-ttu-id="53ad9-162">항상 트랜잭션을 제대로 닫을 않도록 트랜잭션을 만든 후이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-162">Always call this method after creating a transaction to ensure that the transaction closes properly.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="53ad9-163">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-163">for full access to system resources.</span></span> <span data-ttu-id="53ad9-164">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-164">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="53ad9-165">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="53ad9-165">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.Design.DesignerTransaction.OnCommit" />
      </Docs>
    </Member>
    <Member MemberName="Committed">
      <MemberSignature Language="C#" Value="public bool Committed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Committed" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerTransaction.Committed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Committed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Committed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53ad9-166">트랜잭션이 커밋되었는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-166">Gets a value indicating whether the transaction was committed.</span></span></summary>
        <value>
          <span data-ttu-id="53ad9-167">트랜잭션이 커밋되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-167"><see langword="true" /> if the transaction was committed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53ad9-168">디자이너 트랜잭션이 커밋될 때 트랜잭션이 완료 되었다고 간주 하 고 추가 변경 내용을 추적 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-168">When a designer transaction is committed, the transaction is considered complete and does not track further changes.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="53ad9-169">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-169">for full access to system resources.</span></span> <span data-ttu-id="53ad9-170">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-170">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="53ad9-171">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="53ad9-171">Associated state:</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerTransaction.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53ad9-172">트랜잭션에 대한 설명을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-172">Gets a description for the transaction.</span></span></summary>
        <value><span data-ttu-id="53ad9-173">트랜잭션에 대한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-173">A description for the transaction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53ad9-174">트랜잭션 하는 작업 또는 작업의 특성을 식별 하는 데 유용한 설명이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-174">A transaction can have a description that is useful in identifying the nature of the operation or operations.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="53ad9-175">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-175">for full access to system resources.</span></span> <span data-ttu-id="53ad9-176">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-176">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="53ad9-177">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="53ad9-177">Associated state:</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="53ad9-178">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-178"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="53ad9-179"><see cref="T:System.ComponentModel.Design.DesignerTransaction" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-179">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53ad9-180">이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53ad9-180">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="53ad9-181">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-181">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="53ad9-182"><xref:System.Object.Finalize%2A> 호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-182"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="53ad9-183">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.ComponentModel.Design.DesignerTransaction>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-183">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignerTransaction> references.</span></span> <span data-ttu-id="53ad9-184">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-184">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="53ad9-185">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-185">for full access to system resources.</span></span> <span data-ttu-id="53ad9-186">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-186">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="53ad9-187">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="53ad9-187">Associated state:</span></span></permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="53ad9-188"><see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-188"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="53ad9-189"><see langword="Dispose(Boolean)" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</span><span class="sxs-lookup"><span data-stu-id="53ad9-189">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="53ad9-190">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-190">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="53ad9-191">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-191">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~DesignerTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!DesignerTransaction ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53ad9-192">이 개체와 연결된 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-192">Releases the resources associated with this object.</span></span> <span data-ttu-id="53ad9-193">이 재정의는 이 트랜잭션이 이미 커밋되지 않은 경우 트랜잭션을 커밋합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-193">This override commits this transaction if it was not already committed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53ad9-194">이 메서드를 재정의 <xref:System.Object.Finalize%2A?displayProperty=nameWithType> 호출 하 여 리소스를 정리 하 고 `Dispose(false)`합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-194">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType> and cleans up resources by calling `Dispose(false)`.</span></span> <span data-ttu-id="53ad9-195">`Dispose(Boolean)`를 재정의하여 정리 작업을 사용자 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-195">Override `Dispose(Boolean)` to customize the cleanup.</span></span>  
  
 <span data-ttu-id="53ad9-196">응용 프로그램 코드,이 메서드를 호출 하지 않아야 개체의 `Finalize` 메서드를 호출 하 여 가비지 수집기의 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지 수집 중 호출 됩니다는 <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="53ad9-196">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="53ad9-197">자세한 내용은 참조 [Finalize 메서드 및 소멸자](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md), 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-197">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="53ad9-198">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-198">for full access to system resources.</span></span> <span data-ttu-id="53ad9-199">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-199">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="53ad9-200">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="53ad9-200">Associated state:</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="OnCancel">
      <MemberSignature Language="C#" Value="protected abstract void OnCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.OnCancel" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnCancel ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnCancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53ad9-201"><see langword="Cancel" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-201">Raises the <see langword="Cancel" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53ad9-202">디자이너 트랜잭션이 취소 되 면 트랜잭션 처리 메커니즘 적용 된 지금까지 트랜잭션의 변경 내용을 적용 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-202">When a designer transaction is canceled, the transaction processing mechanism attempts to roll back the changes that have been made so far in the transaction.</span></span> <span data-ttu-id="53ad9-203">일련의 예상된 작업을 완료 하지 못했습니다. 그리고 다른 작업과 관련된 된 코드의 상태와 충돌 있는지 여부에 상관 없이 하는 것은 각 작업의 종류와 같은 요소에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-203">Whether this succeeds is dependent upon such factors as the type of each operation, whether other operations interfered with any of the involved code's state, and whether a sequence of expected operations failed to complete.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="53ad9-204">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-204">for full access to system resources.</span></span> <span data-ttu-id="53ad9-205">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-205">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="53ad9-206">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="53ad9-206">Associated state:</span></span></permission>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="53ad9-207">파생된 클래스에서 구현 된 경우이 메서드는 트랜잭션을 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-207">When implemented in a derived class, this method cancels a transaction.</span></span></para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.DesignerTransaction.Cancel" />
      </Docs>
    </Member>
    <Member MemberName="OnCommit">
      <MemberSignature Language="C#" Value="protected abstract void OnCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.OnCommit" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnCommit ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnCommit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53ad9-208">트랜잭션을 실제로 커밋하는 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-208">Performs the actual work of committing a transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53ad9-209">디자이너 트랜잭션이 커밋될 때 트랜잭션이 완료 되었다고 간주 하 고 추가 변경 내용을 추적 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-209">When a designer transaction is committed, the transaction is considered complete and does not track further changes.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="53ad9-210">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-210">for full access to system resources.</span></span> <span data-ttu-id="53ad9-211">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-211">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="53ad9-212">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="53ad9-212">Associated state:</span></span></permission>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="53ad9-213">파생된 클래스에서 구현 된 경우이 메서드는 트랜잭션 처리와 관련 된 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-213">When implemented in a derived class, this method performs work associated with processing the transaction.</span></span></para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53ad9-214">
          <see cref="T:System.ComponentModel.Design.DesignerTransaction" />에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-214">Releases all resources used by the <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53ad9-215">트랜잭션을 삭제 될 때 커밋됩니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-215">When a transaction is disposed, it is committed.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="53ad9-216">시스템 리소스에 대 한 전체 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-216">for full access to system resources.</span></span> <span data-ttu-id="53ad9-217">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="53ad9-217">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="53ad9-218">연결 된 상태:</span><span class="sxs-lookup"><span data-stu-id="53ad9-218">Associated state:</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>