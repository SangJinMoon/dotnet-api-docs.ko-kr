<Type Name="DesignerTransaction" FullName="System.ComponentModel.Design.DesignerTransaction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5d4478c4903b875b690eefbef1bcd9dd72eeea2f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36707152" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DesignerTransaction : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DesignerTransaction extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerTransaction" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DesignerTransaction&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerTransaction abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type DesignerTransaction = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>성능을 개선하고 대부분의 종류의 변경을 취소할 수 있도록 일련의 디자인 타임 동작을 그룹화하는 방법을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 트랜잭션을 실행 취소할 수 나중에 작업을 추적할 수 있습니다. 각 변경 된을 각 변경 된 속성을 설정 하 여 역방향 하려고 자동으로 트랜잭션을 취소 하 여 트랜잭션 중에 수행 된 변경 내용은 되돌릴 수 있습니다. 트랜잭션 속도가 트랜잭션이 완료 될 때까지 표시에 대 한 업데이트를 연기 하 여 일련의 작업 중 성능도 향상 됩니다.  
  
 일부 구성 요소를 수신 대기 하는 트랜잭션이 완료 될 때까지 해당 처리 지연 트랜잭션이 진행 중인 때는 <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> 및 <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> 이벤트입니다. 예를 들어, 속성 창은는 트랜잭션이 닫힐 때까지 열린 후는 표시를 업데이트 하지 않습니다.  
  
 트랜잭션이 되돌릴 또는 여러 작업을 사용 하려면 만들 디자이너가는 <xref:System.ComponentModel.Design.DesignerTransaction> 각 작업 또는 일련의 작업을 취소할 수 있어야 합니다. 트랜잭션 외부에서 작업이 성공적으로 완료 한 일련의 실행 취소 이벤트를 방해할 수 있는 작업을 수행 하지 않도록 주의 하십시오.  
  
 새 얻을 수 있습니다 <xref:System.ComponentModel.Design.DesignerTransaction> 호출 하 여는 <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> 의 메서드는 <xref:System.ComponentModel.Design.IDesignerHost>합니다. 반드시 각 구입 <xref:System.ComponentModel.Design.DesignerTransaction> 활성에서 <xref:System.ComponentModel.Design.IDesignerHost> 올바르게 새로 만드는 대신 메커니즘을 처리 된 디자이너 트랜잭션의 통합 하기 위해서 <xref:System.ComponentModel.Design.DesignerTransaction> 직접 합니다.  
  
 트랜잭션 내에서 작업을 수행 하려면 먼저 트랜잭션을 만들어야 합니다. 호출 해야 합니다는 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> 각 변경 또는 변경 내용 집합이 발생 하기 전에 메서드 및 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> 메서드 각 변경 또는 변경 집합을 후 발생 합니다. 마지막으로 작성 하 고 호출 하 여 트랜잭션을 닫습니다는 <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A> 메서드.  
  
> [!NOTE]
>  속성 값에 변경 내용을 적용할 때 사용 하 여는 <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> 의 메서드는 <xref:System.ComponentModel.PropertyDescriptor>의 구성 요소 변경 메서드를 호출 하는 <xref:System.ComponentModel.Design.IComponentChangeService> 만듭니다는 <xref:System.ComponentModel.Design.DesignerTransaction> 을 합니다.  
  
 트랜잭션을 수행 하려면 다음 단계를 수행 합니다.  
  
1.  호출 <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> 얻으려고는 <xref:System.ComponentModel.Design.DesignerTransaction> 트랜잭션을 제어를 사용할 수 있는 합니다.  
  
2.  내에서 `try` 와 추적 하려는 각 작업에 대 한 블록은 <xref:System.ComponentModel.Design.DesignerTransaction>, 호출는 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> 메서드를 호출 변경 또는 변경을 확인는 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> 에 변경을 수행 되었습니다.  
  
3.  트랜잭션을 완료 하려면 호출 <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A> 내에서 한 `finally` 블록입니다.  
  
 C#에서 사용할 수 있습니다는 `using` 문이 아닌 `try/finally` 다음 예제와 같이 차단 합니다.  
  
```  
using (host.CreateTransaction() {  
// Insert your code here.  
}  
```  
  
 취소 하 고 트랜잭션이 커밋되기 전에 트랜잭션을 롤백하기를 하려면 호출 된 <xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A> 메서드. 때는 <xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A> 메서드가 호출 되 면 동작에서 추적 되는 <xref:System.ComponentModel.Design.DesignerTransaction> 변경 내용을 롤백하기 위해 되돌려집니다. 이전 트랜잭션에서의 일환으로 수행 된 작업을 실행 취소 하려면 개발 환경에서 제공 하는 실행 취소 명령을 사용 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제 프로그램을 만드는 방법을 보여는 <xref:System.ComponentModel.Design.DesignerTransaction> 디자이너에서 합니다. 이 샘플을 실행 하려면 소스 코드를 클래스 라이브러리로 컴파일하십시오. System.Design 어셈블리에 대 한 참조를 추가 해야 합니다. 새 프로젝트에서 컴파일된 DLL에 대 한 참조를 추가 하 고 라이브러리에 있는 구성 요소를 추가할는 **도구 상자**합니다.  
  
 Visual Studio에서는이 기능이 광범위 하 게 지원이 있습니다.  
  
 또한 참조 [연습: 사용자 지정 구성 요소와 도구 상자 자동으로 채우는](http://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx)합니다.  
  
 디자이너 디자이너 트랜잭션의 이벤트에 대 한 알림을 표시할 수 있습니다. 인스턴스를 추가 하는 경우는 `DTComponent` 폼에 디자인 모드로 묻는 메시지 상자가 나타나면 디자이너 트랜잭션의 이벤트 알림의 받을 것인지 여부입니다. 인스턴스를 마우스 오른쪽 단추로 클릭할 때 표시 되는 바로 가기 메뉴를 사용 하 여 이러한 알림을 설정 하거나 해제할 수는 `DTComponent`합니다. 속성 창을 사용 하 여 값을 변경 하면 트랜잭션이 생성 됩니다. 클릭 하 여 트랜잭션을 수행 하는 디자이너를 설치할 수도 **예제 트랜잭션 수행** 구성 요소에 대 한 바로 가기 메뉴입니다.  
  
 [!code-cpp[DesignerTransaction Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DesignerTransaction Sample/CPP/source.cpp#1)]
 [!code-csharp[DesignerTransaction Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DesignerTransaction Sample/CS/source.cs#1)]
 [!code-vb[DesignerTransaction Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DesignerTransaction Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">시스템 리소스에 대 한 전체 액세스 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다. 연결 된 상태:</permission>
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DesignerTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DesignerTransaction();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>설명을 사용하지 않고 <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.NamedPermissionSet">시스템 리소스에 대 한 전체 액세스 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다. 연결 된 상태:</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DesignerTransaction (string description);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (description As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DesignerTransaction(System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerTransaction : string -&gt; System.ComponentModel.Design.DesignerTransaction" Usage="new System.ComponentModel.Design.DesignerTransaction description" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description">이 트랜잭션에 대한 설명입니다.</param>
        <summary>지정된 트랜잭션 설명을 사용하여 <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자에는 지정한 설명 사용 하 여 트랜잭션을 초기화합니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">시스템 리소스에 대 한 전체 액세스 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다. 연결 된 상태:</permission>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; unit" Usage="designerTransaction.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>트랜잭션을 취소하고 트랜잭션의 이벤트에 의해 변경된 내용을 롤백합니다.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.NamedPermissionSet">시스템 리소스에 대 한 전체 액세스 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다. 연결 된 상태:</permission>
        <altmember cref="M:System.ComponentModel.Design.DesignerTransaction.OnCancel" />
      </Docs>
    </Member>
    <Member MemberName="Canceled">
      <MemberSignature Language="C#" Value="public bool Canceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Canceled" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerTransaction.Canceled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Canceled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Canceled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Canceled : bool" Usage="System.ComponentModel.Design.DesignerTransaction.Canceled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트랜잭션이 취소되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>트랜잭션이 취소되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 디자이너 트랜잭션이 취소 되 면 트랜잭션 처리 메커니즘 적용 된 지금까지 트랜잭션의 변경 내용을 적용 하려고 합니다. 일련의 예상된 작업을 완료 하지 못했습니다. 그리고 다른 작업과 관련된 된 코드의 상태와 충돌 있는지 여부에 상관 없이 하는 것은 각 작업의 종류와 같은 요소에 따라 달라 집니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">시스템 리소스에 대 한 전체 액세스 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다. 연결 된 상태:</permission>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberSignature Language="F#" Value="member this.Commit : unit -&gt; unit" Usage="designerTransaction.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 트랜잭션을 커밋합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 디자이너 트랜잭션이 커밋될 때 트랜잭션이 완료 되었다고 간주 하 고 추가 변경 내용을 추적 하지 않습니다.  
  
 트랜잭션이 커밋된 후 더 이상이 메서드를 호출 아무 작업도 수행 합니다. 항상 트랜잭션을 제대로 닫을 않도록 트랜잭션을 만든 후이 메서드를 호출 합니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">시스템 리소스에 대 한 전체 액세스 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다. 연결 된 상태:</permission>
        <altmember cref="M:System.ComponentModel.Design.DesignerTransaction.OnCommit" />
      </Docs>
    </Member>
    <Member MemberName="Committed">
      <MemberSignature Language="C#" Value="public bool Committed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Committed" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerTransaction.Committed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Committed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Committed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Committed : bool" Usage="System.ComponentModel.Design.DesignerTransaction.Committed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트랜잭션이 커밋되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>트랜잭션이 커밋되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 디자이너 트랜잭션이 커밋될 때 트랜잭션이 완료 되었다고 간주 하 고 추가 변경 내용을 추적 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">시스템 리소스에 대 한 전체 액세스 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다. 연결 된 상태:</permission>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerTransaction.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.ComponentModel.Design.DesignerTransaction.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트랜잭션에 대한 설명을 가져옵니다.</summary>
        <value>트랜잭션에 대한 설명입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 트랜잭션 하는 작업 또는 작업의 특성을 식별 하는 데 유용한 설명이 있을 수 있습니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">시스템 리소스에 대 한 전체 액세스 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다. 연결 된 상태:</permission>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="designerTransaction.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary>
          <see cref="T:System.ComponentModel.Design.DesignerTransaction" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드. `Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A> 호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.  
  
 `disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.ComponentModel.Design.DesignerTransaction>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다. 이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">시스템 리소스에 대 한 전체 액세스 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다. 연결 된 상태:</permission>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> 다른 개체에서 여러 번 호출할 수 있습니다. <see langword="Dispose(Boolean)" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md) 구현 합니다.  에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 Resources](~/docs/standard/garbage-collection/unmanaged.md) 정리 하 고 [Finalize 메서드를 재정의] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~DesignerTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!DesignerTransaction ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="designerTransaction.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 개체와 연결된 리소스를 해제합니다. 이 재정의는 이 트랜잭션이 이미 커밋되지 않은 경우 트랜잭션을 커밋합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 재정의 <xref:System.Object.Finalize%2A?displayProperty=nameWithType> 호출 하 여 리소스를 정리 하 고 `Dispose(false)`합니다. `Dispose(Boolean)`를 재정의하여 정리 작업을 사용자 지정합니다.  
  
 응용 프로그램 코드,이 메서드를 호출 하지 않아야 개체의 `Finalize` 메서드를 호출 하 여 가비지 수집기의 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지 수집 중 호출 됩니다는 <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> 메서드.  
  
 자세한 내용은 참조 [Finalize 메서드 및 소멸자](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md), 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">시스템 리소스에 대 한 전체 액세스 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다. 연결 된 상태:</permission>
      </Docs>
    </Member>
    <Member MemberName="OnCancel">
      <MemberSignature Language="C#" Value="protected abstract void OnCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.OnCancel" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnCancel ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnCancel();" />
      <MemberSignature Language="F#" Value="abstract member OnCancel : unit -&gt; unit" Usage="designerTransaction.OnCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see langword="Cancel" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 디자이너 트랜잭션이 취소 되 면 트랜잭션 처리 메커니즘 적용 된 지금까지 트랜잭션의 변경 내용을 적용 하려고 합니다. 일련의 예상된 작업을 완료 하지 못했습니다. 그리고 다른 작업과 관련된 된 코드의 상태와 충돌 있는지 여부에 상관 없이 하는 것은 각 작업의 종류와 같은 요소에 따라 달라 집니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">시스템 리소스에 대 한 전체 액세스 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다. 연결 된 상태:</permission>
        <block subset="none" type="overrides">
          <para>파생된 클래스에서 구현 된 경우이 메서드는 트랜잭션을 취소 합니다.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.DesignerTransaction.Cancel" />
      </Docs>
    </Member>
    <Member MemberName="OnCommit">
      <MemberSignature Language="C#" Value="protected abstract void OnCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.OnCommit" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnCommit ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnCommit();" />
      <MemberSignature Language="F#" Value="abstract member OnCommit : unit -&gt; unit" Usage="designerTransaction.OnCommit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>트랜잭션을 실제로 커밋하는 작업을 수행합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 디자이너 트랜잭션이 커밋될 때 트랜잭션이 완료 되었다고 간주 하 고 추가 변경 내용을 추적 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">시스템 리소스에 대 한 전체 액세스 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다. 연결 된 상태:</permission>
        <block subset="none" type="overrides">
          <para>파생된 클래스에서 구현 된 경우이 메서드는 트랜잭션 처리와 관련 된 작업을 수행 합니다.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.Design.DesignerTransaction" />에서 사용하는 모든 리소스를 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 트랜잭션을 삭제 될 때 커밋됩니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">시스템 리소스에 대 한 전체 액세스 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다. 연결 된 상태:</permission>
      </Docs>
    </Member>
  </Members>
</Type>