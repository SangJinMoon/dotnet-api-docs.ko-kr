<Type Name="DesignSurfaceManager" FullName="System.ComponentModel.Design.DesignSurfaceManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c135a4e8156bfd925bea508991b3701370925168" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignSurfaceManager : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignSurfaceManager extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignSurfaceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignSurfaceManager&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignSurfaceManager : IDisposable, IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="80fee-101">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> 개체의 컬렉션을 관리합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="80fee-101">Manages a collection of <see cref="T:System.ComponentModel.Design.DesignSurface" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fee-102"><xref:System.ComponentModel.Design.DesignSurfaceManager> 클래스에는 컨테이너의 만들어져 <xref:System.ComponentModel.Design.DesignSurface> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-102">The <xref:System.ComponentModel.Design.DesignSurfaceManager> class is designed to be a container of <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span> <span data-ttu-id="80fee-103">해당 핸들 이벤트 라우팅 디자이너, 속성 창 및 다른 전역 개체 간의 공통 서비스 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-103">It provides common services that handle event routing between designers, property windows, and other global objects.</span></span> <span data-ttu-id="80fee-104">사용 하 여 <xref:System.ComponentModel.Design.DesignSurfaceManager> 은 선택 사항 이지만 디자이너 창을 몇 개를 가져오려는 경우 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-104">Using <xref:System.ComponentModel.Design.DesignSurfaceManager> is optional, but it is recommended if you intend to have several designer windows.</span></span>  
  
 <span data-ttu-id="80fee-105"><xref:System.ComponentModel.Design.DesignSurfaceManager> 클래스는 몇 가지 디자인 타임 서비스를 자동으로 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-105">The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides several design-time services automatically.</span></span> <span data-ttu-id="80fee-106">보호 된 대체 하 여 이러한 각 서비스를 재정의할 수 있습니다 <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-106">You can override each of these services by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property.</span></span> <span data-ttu-id="80fee-107">서비스를 대체 하려면 생성자를 재정의 기본 고 변경 내용을 통해 보호 된 <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-107">To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property.</span></span> <span data-ttu-id="80fee-108">구현 하는 서비스 컨테이너에 추가 된 모든 서비스는 <xref:System.IDisposable> 인터페이스 디자인 화면 관리자가 삭제 될 때 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-108">All services added to the service container that implement the <xref:System.IDisposable> interface are disposed when the design surface manager is disposed.</span></span> <span data-ttu-id="80fee-109"><xref:System.ComponentModel.Design.DesignSurfaceManager> 클래스를 제공는 <xref:System.ComponentModel.Design.IDesignerEventService> 기본 서비스와 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-109">The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides the <xref:System.ComponentModel.Design.IDesignerEventService> interface as the default service.</span></span> <span data-ttu-id="80fee-110"><xref:System.ComponentModel.Design.IDesignerEventService> 디자이너 이벤트에 대 한 전역 이벤트 메커니즘을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-110"><xref:System.ComponentModel.Design.IDesignerEventService> provides a global eventing mechanism for designer events.</span></span> <span data-ttu-id="80fee-111">이 메커니즘을 응용 프로그램 디자이너 활성화 될 때 내용 알림이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-111">With this mechanism, an application is informed when a designer becomes active.</span></span> <span data-ttu-id="80fee-112">서비스는 디자이너의 컬렉션 및 속성 창과 같은 전역 개체 선택 영역을 모니터링할 수를 한 위치 변경 이벤트를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-112">The service provides a collection of designers and a single place where global objects, such as the Properties window, can monitor selection change events.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">
      <span data-ttu-id="80fee-113">시스템 리소스에 대 한 전체 액세스 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="80fee-113">for full access to system resources.</span>
      </span>
      <span data-ttu-id="80fee-114">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="80fee-114">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="80fee-115">연결 된 상태:</span>
      <span class="sxs-lookup">
        <span data-stu-id="80fee-115">Associated state:</span>
      </span>
    </permission>
    <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80fee-116">
            <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurfaceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurfaceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80fee-117">
            <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurfaceManager (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurfaceManager(IServiceProvider ^ parentProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">
          <span data-ttu-id="80fee-118">부모 서비스 공급자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-118">A parent service provider.</span>
          </span>
          <span data-ttu-id="80fee-119">디자인 화면 관리자가 서비스 요청을 확인할 수 없을 경우 이 공급자로 서비스 요청이 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-119">Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80fee-120">
            <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-120">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="ActiveDesignSurface">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignSurface ActiveDesignSurface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignSurface ActiveDesignSurface" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ActiveDesignSurface As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignSurface ^ ActiveDesignSurface { System::ComponentModel::Design::DesignSurface ^ get(); void set(System::ComponentModel::Design::DesignSurface ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fee-121">활성화된 디자이너를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-121">Gets or sets the active designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fee-122">활성화된 디자이너입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-122">The active designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fee-123"><xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A> 디자이너의 활성 창 될 때마다 디자이너의 사용자 인터페이스에서 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-123">The <xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A> property should be set by the designer's user interface whenever a designer becomes the active window.</span></span> <span data-ttu-id="80fee-124">이 속성의 기본 구현은 작동의 기본 구현에서 <xref:System.ComponentModel.Design.IDesignerEventService> 새로운 디자이너 활성화 되어 이제 관계 당사자에 알리는 인터페이스를 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-124">The default implementation of this property works with the default implementation of the <xref:System.ComponentModel.Design.IDesignerEventService> interface to notify interested parties that a new designer is now active.</span></span> <span data-ttu-id="80fee-125">사용자 지정 구현을 제공 하는 경우 <xref:System.ComponentModel.Design.IDesignerEventService>를 적절 하 게 서비스를 알리기 위해이 속성을 재정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-125">If you provide your own implementation of <xref:System.ComponentModel.Design.IDesignerEventService>, you should override this property to notify your service appropriately.</span></span> <span data-ttu-id="80fee-126">이 속성 설정할 수 있습니다 `null`, 디자이너가 활성화 된 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-126">This property can be set to `null`, indicating that no designer is active.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDesignSurfaceChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ActiveDesignSurfaceChanged As ActiveDesignSurfaceChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ActiveDesignSurfaceChangedEventHandler ^ ActiveDesignSurfaceChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fee-127">현재 활성 디자이너가 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-127">Occurs when the currently active designer changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDesignSurface">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80fee-128">디자인 화면의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-128">Creates an instance of a design surface.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDesignSurface">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurface CreateDesignSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Design.DesignSurface CreateDesignSurface() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDesignSurface () As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignSurface ^ CreateDesignSurface();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80fee-129">디자인 화면의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-129">Creates an instance of a design surface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80fee-130">새로운 디자인 화면 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-130">A new design surface instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesignSurface">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurface CreateDesignSurface (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Design.DesignSurface CreateDesignSurface(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDesignSurface (parentProvider As IServiceProvider) As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignSurface ^ CreateDesignSurface(IServiceProvider ^ parentProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">
          <span data-ttu-id="80fee-131">부모 서비스 공급자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-131">A parent service provider.</span>
          </span>
          <span data-ttu-id="80fee-132">먼저 이 공급자에게 서비스를 요청한 후 디자인 화면 관리자 개체에 오류를 위임하는 병합된 서비스 공급자가 새로 만들어집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-132">A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object.</span>
          </span>
          <span data-ttu-id="80fee-133">이 병합된 공급자는 <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> 메서드에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-133">This merged provider will be passed into the <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80fee-134">디자인 화면의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-134">Creates an instance of a design surface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80fee-135">새로운 디자인 화면 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-135">A new design surface instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fee-136">사용 하 여 편리 하 게 디자이너 당 추가 서비스를 추가 하려는 경우는 `parentProvider` 매개 변수를이 디자인 화면에 대 한 서비스 공급자를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-136">If you want to conveniently add additional per-designer services, use the `parentProvider` parameter to provide a service provider for this design surface.</span></span> <span data-ttu-id="80fee-137"><xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> 메서드는 지정 된 서비스 공급자의 서비스 요청을 충족 시킬 수 있는 병합 된 서비스 공급자를 만듭니다으로 <xref:System.ComponentModel.Design.DesignSurfaceManager> 자체입니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-137">The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method creates a merged service provider that can satisfy service requests from both the given service provider as well as the <xref:System.ComponentModel.Design.DesignSurfaceManager> itself.</span></span> <span data-ttu-id="80fee-138"><xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> 메서드는 다음이 서비스 공급자에 전달 된 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="80fee-138">The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method then passes this service provider into the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method.</span></span>  
  
 <span data-ttu-id="80fee-139">후 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> 디자인 화면 반환는 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> 을 가져오려고 시도 메서드는 <xref:System.ComponentModel.Design.IDesignerEventService>합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-139">After <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> returns the design surface, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method tries to obtain the <xref:System.ComponentModel.Design.IDesignerEventService>.</span></span> <span data-ttu-id="80fee-140">가 존재 하 고 서비스의 인스턴스인 경우는 <xref:System.ComponentModel.Design.DesignSurfaceManager> 기본적으로 제공 되는 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> 메서드를 발생 시킵니다는 <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-140">If it is present, and if it is the instance of the service that <xref:System.ComponentModel.Design.DesignSurfaceManager> provided by default, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method raises the <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80fee-141">
            <paramref name="parentProvider" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-141">
              <paramref name="parentProvider" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="80fee-142">클래스에서 파생 되는 작업은 서비스의 외부 구현 제공 된 경우는 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 를 발생 시키는 클래스는 <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /> 이벤트입니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="80fee-142">If an external implementation of the service was provided, it is the responsibility of the class that derives from the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class to raise the <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /> event.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesignSurfaceCore">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDesignSurfaceCore (parentProvider As IServiceProvider) As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::Design::DesignSurface ^ CreateDesignSurfaceCore(IServiceProvider ^ parentProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">
          <span data-ttu-id="80fee-143">디자인 화면에 전달할 서비스 공급자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-143">A service provider to pass to the design surface.</span>
          </span>
          <span data-ttu-id="80fee-144">
            <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />의 인스턴스이거나 <see cref="T:System.IServiceProvider" />를 구현하는 개체이며, <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 클래스의 서비스 공급자와 외부에서 전달된 공급자 사이의 병합을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-144">This is either an instance of <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> or an object that implements <see cref="T:System.IServiceProvider" />, and represents a merge between the service provider of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class and an externally passed provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80fee-145">디자인 화면을 만드는 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-145">Implementation that creates the design surface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80fee-146">새로운 디자인 화면 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-146">A new design surface instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fee-147"><xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> 메서드는 둘 다 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="80fee-147">The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method is called by both <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> methods.</span></span> <span data-ttu-id="80fee-148">그 구현은 실제로 디자인 화면을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-148">It is the implementation that actually creates the design surface.</span></span> <span data-ttu-id="80fee-149">기본 구현은 반환 새 <xref:System.ComponentModel.Design.DesignSurface>합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-149">The default implementation just returns a new <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="80fee-150">파생 되는 사용자 지정 개체를 제공 하려면이 메서드를 재정의할 수 있습니다는 <xref:System.ComponentModel.Design.DesignSurface> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-150">You may override this method to provide a custom object that derives from the <xref:System.ComponentModel.Design.DesignSurface> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaceCreated">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DesignSurfaceCreated As DesignSurfaceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignSurfaceEventHandler ^ DesignSurfaceCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fee-151">디자이너가 만들어지면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-151">Occurs when a designer is created.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaceDisposed">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DesignSurfaceDisposed As DesignSurfaceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignSurfaceEventHandler ^ DesignSurfaceDisposed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fee-152">디자이너가 삭제되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-152">Occurs when a designer is disposed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaces">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignSurfaces As DesignSurfaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignSurfaceCollection ^ DesignSurfaces { System::ComponentModel::Design::DesignSurfaceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fee-153">디자인 화면 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-153">Gets a collection of design surfaces.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fee-154">현재 디자인 화면 관리자에서 호스팅하는 디자인 화면 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-154">A collection of design surfaces that are currently hosted by the design surface manager.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fee-155"><xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A> 속성은 맨 위에서 직접 구현 <xref:System.ComponentModel.Design.IDesignerEventService>있으므로 해당 서비스의 사용자 지정 구현을 제공 하는 경우이 속성 구현을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-155">The <xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A> property is implemented directly on top of <xref:System.ComponentModel.Design.IDesignerEventService>, so if you provide your own implementation of that service, this property uses your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80fee-156">
            <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />에서 사용하는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-156">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80fee-157">
            <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />에서 사용하는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-157">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fee-158">공용 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> 메서드 표준을 따르는 <xref:System.IDisposable> 패턴입니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-158">The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="80fee-159">디자인 화면 관리자를 제거이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-159">Calling this method destroys the design surface manager.</span></span> <span data-ttu-id="80fee-160">구현 하는 모든 서비스는 서비스 컨테이너 삭제 <xref:System.IDisposable> 도 삭제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-160">It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed.</span></span> <span data-ttu-id="80fee-161">이 방법의 보호 된 버전은 `virtual` 수직 따르는 <xref:System.IDisposable> 패턴입니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-161">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80fee-162">때문에 <xref:System.ComponentModel.Design.DesignSurfaceManager> 정리, 네이티브 코드가 없는 없는 종료자를 호출 하는 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-162">Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>.</span></span> <span data-ttu-id="80fee-163">호출 해야 하는 경우 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, 종료자를 직접 추가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-163">If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="80fee-164">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-164">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80fee-165">
            <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-165">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fee-166">공용 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> 메서드 표준을 따르는 <xref:System.IDisposable> 패턴입니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-166">The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="80fee-167">디자인 화면 관리자를 제거이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-167">Calling this method destroys the design surface manager.</span></span> <span data-ttu-id="80fee-168">구현 하는 모든 서비스는 서비스 컨테이너 삭제 <xref:System.IDisposable> 도 삭제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-168">It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed.</span></span> <span data-ttu-id="80fee-169">이 방법의 보호 된 버전은 `virtual` 수직 따르는 <xref:System.IDisposable> 패턴입니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-169">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80fee-170">때문에 <xref:System.ComponentModel.Design.DesignSurfaceManager> 정리, 네이티브 코드가 없는 없는 종료자를 호출 하는 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-170">Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>.</span></span> <span data-ttu-id="80fee-171">호출 해야 하는 경우 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, 종료자를 직접 추가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-171">If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="80fee-172">이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="80fee-172">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="80fee-173">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-173">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="80fee-174"><xref:System.Object.Finalize%2A> 호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-174"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="80fee-175">경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.ComponentModel.Design.DesignSurfaceManager> 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-175">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurfaceManager> references.</span></span> <span data-ttu-id="80fee-176">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-176">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="80fee-177">
              <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="80fee-177">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="80fee-178">재정의 하는 경우 <see langword="Dispose(Boolean)" /> 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <see langword="Dispose" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="80fee-178">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="80fee-179">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="80fee-179">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="80fee-180">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="80fee-180">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="80fee-181">검색할 서비스 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-181">The service type to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80fee-182">디자인 화면 관리자의 서비스 컨테이너에 있는 서비스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-182">Gets a service in the design surface manager’s service container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80fee-183">제공된 서비스 형식을 구현하거나 이 서비스 형식의 파생 클래스인 개체입니다. 서비스 컨테이너에 서비스가 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-183">An object that implements, or is a derived class of, the given service type; otherwise, <see langword="null" /> if the service does not exist in the service container.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fee-184"><xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A> 메서드 생성 시 디자인 화면 관리자에 게 제공한 서비스 공급자를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-184">The <xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A> method forwards to any service provider that was given to the design surface manager at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fee-185">전역 선택이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-185">Occurs when the global selection changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fee-186">이 이벤트는 구성 요소의 활성 디자이너의 선택 집합을 변경 하는 경우에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-186">This event is raised when the active designer's selection of component set changes.</span></span> <span data-ttu-id="80fee-187">통해 매핑됩니다는 <xref:System.ComponentModel.Design.IDesignerEventService> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="80fee-187">This is mapped through the <xref:System.ComponentModel.Design.IDesignerEventService> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceContainer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ServiceContainer ServiceContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceContainer As ServiceContainer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ServiceContainer ^ ServiceContainer { System::ComponentModel::Design::ServiceContainer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ServiceContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fee-188">디자인 화면 관리자의 <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-188">Gets the design surface manager's <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fee-189">디자인 화면 관리자의 <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fee-189">The design surface manager's <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="80fee-190">클래스에서 상속 하는 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 클래스가이 속성을 사용 하 여 추가 하 고 서비스를 제거할 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="80fee-190">Classes inheriting from the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class can use this property to add and remove services.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>