<Type Name="IDesigner" FullName="System.ComponentModel.Design.IDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0849fa0e599b09ff55fcc31d8a1d86c544bb6a9b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesigner : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesigner implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesigner&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesigner : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e1d07-101">사용자 지정 디자이너를 빌드하기 위한 기본 프레임워크를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e1d07-101">Provides the basic framework for building a custom designer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1d07-102"><xref:System.ComponentModel.Design.IDesigner> 인터페이스는 디자이너에 대 한 기본 서비스를 구현할 수 있는 인터페이스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-102">The <xref:System.ComponentModel.Design.IDesigner> interface provides an interface through which you can implement basic services for a designer.</span></span> <span data-ttu-id="e1d07-103">디자이너는 디자인 타임에는 구성 요소의 동작을 수정할 수 및 고유 서비스와 동작을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-103">A designer can modify the behavior of a component at design time, and may provide its own services and behavior.</span></span> <span data-ttu-id="e1d07-104">디자이너를 디자인 타임에만 활성화 되 고 구성 요소를 사용 하는 유형의와 연결 되어야 합니다는 <xref:System.ComponentModel.DesignerAttribute> 디자인 타임에 연결 된 형식의 구성 요소를 만들 때 로드할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-104">A designer is only active at design-time, and must be associated with a type of component using a <xref:System.ComponentModel.DesignerAttribute> in order to be loaded when a component of the associated type is created at design time.</span></span>  
  
 <span data-ttu-id="e1d07-105"><xref:System.ComponentModel.Design.IDesigner> 인터페이스는 디자인 타임에 사용자 지정 동작을 제공 하기 위해 구현할 수 있는 메서드 및 속성을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-105">The <xref:System.ComponentModel.Design.IDesigner> interface provides methods and properties that you can implement in order to provide custom behavior at design time.</span></span>  
  
 <span data-ttu-id="e1d07-106">구현에서 <xref:System.ComponentModel.Design.IDesigner.Initialize%2A> 방식의 디자이너 구성 요소를 만들 때 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-106">Implement the <xref:System.ComponentModel.Design.IDesigner.Initialize%2A> method of a designer to perform actions when a component is created.</span></span> <span data-ttu-id="e1d07-107">구성 요소는 디자인 타임에 특별 한 구성이 있어야 하는 경우 또는 디자이너가 결정할 수 있는 조건에 따라 해당 구성을 변경 해야 하는 경우에 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-107">This can be useful if a component should have a special configuration at design-time, or if its configuration should change depending on conditions that the designer can determine.</span></span>  
  
 <span data-ttu-id="e1d07-108">디자이너 구성 요소 또는 컨트롤 디자인 타임 환경에 단추로 클릭할 때 표시 되는 바로 가기 메뉴에서 메뉴 명령을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-108">A designer can provide menu commands on the shortcut menu that is displayed when a user right-clicks a component or control in the design-time environment.</span></span> <span data-ttu-id="e1d07-109">구현할 수 있습니다는 <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> 속성을 반환 하는 get 접근자를 정의 하는 <xref:System.ComponentModel.Design.DesignerVerbCollection> 포함 하는 <xref:System.ComponentModel.Design.DesignerVerb> 메뉴 명령을 생성 하기 위한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-109">You can implement the <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property to define a get accessor that returns a <xref:System.ComponentModel.Design.DesignerVerbCollection> containing the <xref:System.ComponentModel.Design.DesignerVerb> objects for generating menu commands.</span></span>  
  
 <span data-ttu-id="e1d07-110">구성 요소 트레이에 표시 되는 구성 요소에 대 한 디자이너 구성 요소를 두 번 클릭할 때 기본 동작을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-110">A designer for a component that appears in the component tray can perform a default action when the component is double-clicked.</span></span> <span data-ttu-id="e1d07-111">구현 된 <xref:System.ComponentModel.Design.IDesigner.DoDefaultAction%2A> 메서드는 구성 요소를 두 번 클릭할 때 수행할 동작을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-111">Implement the <xref:System.ComponentModel.Design.IDesigner.DoDefaultAction%2A> method to specify the behavior to perform when the component is double-clicked.</span></span>  
  
 <span data-ttu-id="e1d07-112">디자이너 ´ ï ´ 디자인 타임 서비스를 사용할 수 있는 관리 다양 한 구성 요소 및 해당 속성에 대 한 현재 디자인 타임 환경을 조사 하 고, 읽기, 구성 요소 속성의 값 설정 등의 태스크를 수행 하는 도구 상자에서 선택한 구성 요소를 관리 하거나 값을 구성 하거나 추가 처리에 적용 하는 데 사용할 수 있는 사용자 인터페이스를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-112">A designer can also use the available design-time services to perform a variety of tasks, including surveying the current design-time environment for components and their properties, reading and setting the values of properties of components, managing the toolbox, managing selected components, or displaying a user interface that can be used to configure values or to apply further processing.</span></span>  
  
 <span data-ttu-id="e1d07-113">폼에 위치할 수 있는 컨트롤에 대 한 디자이너를 구현 하려면에서 상속할 수 있습니다는 <xref:System.Windows.Forms.Design.ControlDesigner> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-113">To implement a designer for a control that can be sited on a form, you can inherit from the <xref:System.Windows.Forms.Design.ControlDesigner> class.</span></span> <span data-ttu-id="e1d07-114">연결된 된 디자이너가에서 파생 되지 않은 컨트롤 <xref:System.Windows.Forms.Design.ControlDesigner> 구성 요소 트레이에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-114">Controls whose associated designer does not derive from <xref:System.Windows.Forms.Design.ControlDesigner> are displayed in the component tray.</span></span> <span data-ttu-id="e1d07-115"><xref:System.ComponentModel.Design.ComponentDesigner> 및 <xref:System.Windows.Forms.Design.ControlDesigner> 클래스 구현에서 <xref:System.ComponentModel.Design.IDesigner> 인터페이스를 디자이너 작성자에 게 사용 될 수 있는 추가 디자인 타임 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-115">The <xref:System.ComponentModel.Design.ComponentDesigner> and <xref:System.Windows.Forms.Design.ControlDesigner> classes implement the <xref:System.ComponentModel.Design.IDesigner> interface and provide additional design-time support that may be of use to authors of designers.</span></span> <span data-ttu-id="e1d07-116">자세한 내용은 이러한 클래스에 대 한 참조 설명서를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-116">For more information, see the reference documentation for these classes.</span></span>  
  
 <span data-ttu-id="e1d07-117">디자인 구성 요소 만들기의 개요를 참조 하십시오 [디자인 타임 지원을 확장](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2)합니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-117">For an overview of creating design components, please see [Extending Design-Time Support](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1d07-118">이 예제에서는 <xref:System.ComponentModel.Design.IDesigner> 구현 해당 구성 요소에 대 한 로컬 참조를 저장 하는 구성 요소를 두 번와 디자이너 동사 메뉴 명령을 제공 하는 경우 기본 동작을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-118">This example demonstrates an <xref:System.ComponentModel.Design.IDesigner> implementation that stores a local reference to its component, performs a default action when the component is double-clicked, and provides a designer verb menu command.</span></span>  
  
 [!code-cpp[IDesignerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerExample/CPP/testcontrol.cpp#1)]
 [!code-csharp[IDesignerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerExample/CS/testcontrol.cs#1)]
 [!code-vb[IDesignerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerExample/VB/testcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.IRootDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
  </Docs>
  <Members>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Component" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesigner.Component" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Component As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1d07-119">해당 디자이너가 디자인하고 있는 기본 구성 요소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1d07-119">Gets the base component that this designer is designing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1d07-120">해당 디자이너가 디자인하고 있는 기본 구성 요소를 나타내는 <see cref="T:System.ComponentModel.IComponent" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1d07-120">An <see cref="T:System.ComponentModel.IComponent" /> indicating the base component that this designer is designing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesigner.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoDefaultAction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e1d07-121">이 디자이너에 대한 기본 작업을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1d07-121">Performs the default action for this designer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1d07-122">이 메서드는 구성 요소 트레이에 구성 요소의 표시를 클릭할 때 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-122">This method is called when a user double-clicks the representation of a component in the component tray.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="e1d07-123">해당 디자이너와 관련된 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1d07-123">The component to associate with this designer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1d07-124">디자이너를 지정된 구성 요소로 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1d07-124">Initializes the designer with the specified component.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesigner.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1d07-125">디자이너가 지원하는 디자인 타임 동사의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1d07-125">Gets a collection of the design-time verbs supported by the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1d07-126">디자이너가 지원하는 동사를 포함하는 <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> 또는 구성 요소에 동사가 없는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1d07-126">A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> that contains the verbs supported by the designer, or <see langword="null" /> if the component has no verbs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1d07-127">디자인 타임 동사를 디자이너와 관련 된 구성 요소에서 지 원하는 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-127">Returns the design time verbs supported by the component associated with the designer.</span></span> <span data-ttu-id="e1d07-128">이 메서드에서 반환 된 동사는 일반적으로 오른쪽 클릭 메뉴에서 디자인 타임 환경이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-128">The verbs returned by this method are typically displayed by the design-time environment in a right-click menu.</span></span> <span data-ttu-id="e1d07-129">사용자는 해당 이벤트 처리기 동사 중 하나 선택 하면 <xref:System.ComponentModel.Design.DesignerVerb> 가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-129">When a user selects one of the verbs, the event handler of the corresponding <xref:System.ComponentModel.Design.DesignerVerb> is invoked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e1d07-130">디자인 타임 환경에서 일반적으로 제공 된 **속성... ** 구성 요소의 오른쪽 클릭 메뉴 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-130">A design-time environment typically provides a **Properties...** entry on a component's right-click menu.</span></span> <span data-ttu-id="e1d07-131">메뉴 항목에 대 한 중복 된 제목을 방지 하려면 중복 "속성..."의 제목에 포함 되어야 합니다는 <xref:System.ComponentModel.Design.DesignerVerbCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="e1d07-131">To avoid duplicate titles for menu entries, no verb with a title of "Properties..." should be included in a <xref:System.ComponentModel.Design.DesignerVerbCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerbCollection" />
      </Docs>
    </Member>
  </Members>
</Type>