<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IComponentChangeService.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5647abc567c7d8f53c334f9c393caa36a6e7443a4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">647abc567c7d8f53c334f9c393caa36a6e7443a4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>Provides an interface to add and remove the event handlers for events that add, change, remove or rename components, and provides methods to raise a <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /&gt;</ph> event.</source>
          <target state="translated">구성 요소를 추가, 변경, 제거하거나 구성 요소의 이름을 바꾸는 이벤트에 대한 이벤트 처리기를 추가하고 제거하는 인터페이스를 제공하며 <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /&gt;</ph> 이벤트를 발생시키는 메서드를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> provides an interface that can be used to indicate the methods that handle the following events:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> 다음 이벤트를 처리 하는 방법을 나타내는 데 사용할 수 있는 인터페이스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded&gt;</ph>, raised when a component is added.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded&gt;</ph>구성 요소 추가 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding&gt;</ph>, raised when a component is about to be added.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding&gt;</ph>구성 요소를 추가 하려고 할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph>, raised when a component is changed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph>구성 요소 변경 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&gt;</ph>, raised when a component is about to be changed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&gt;</ph>구성 요소 변경 되려고 할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved&gt;</ph>, raised when a component is removed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved&gt;</ph>구성 요소 제거 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving&gt;</ph>, raised when a component is about to be removed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving&gt;</ph>구성 요소를 제거 하려고 할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRename&gt;</ph>, raised when a component is renamed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRename&gt;</ph>구성 요소 이름을 바꿀 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>Typically, the design environment raises these component add, change, remove, or rename events.</source>
          <target state="translated">일반적으로 디자인 환경에서 이러한 구성 요소 추가 발생 시킵니다., 변경, 제거 또는 이벤트 이름을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>Designers should call the methods of this interface when using <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> objects to provide undo and redo functionality for design-time actions that affect components.</source>
          <target state="translated">디자이너를 사용 하 여이 인터페이스의 메서드를 호출 해야 <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> 개체를 실행 취소를 제공 하 고 구성 요소에 영향을 주는 디자인 타임 동작에 대 한 기능을 다시 실행 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>More information is available in the documentation for <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>.</source>
          <target state="translated">에 대 한 설명서에는 자세한 정보가 <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>Generally, only the root designer handles these change notifications.</source>
          <target state="translated">일반적으로 루트 디자이너에만 이러한에서 처리 변경 알림입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>This service also provides methods that raise a component changed event or component changing event.</source>
          <target state="translated">이 서비스는 또한 변경 구성 요소 이벤트 또는 이벤트를 변경 하는 구성 요소를 발생 시키는 메서드를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> or a component can indicate that a component has changed or is changing with the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> 또는 구성 요소는 구성 요소 변경 되거나 변경 중임 나타낼 수는 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph> 메서드를 각각.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>This following example demonstrates how to use the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> interface to receive notifications about the addition of, removal of, and changes to components in design mode.</source>
          <target state="translated">다음 예제에 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> 인터페이스를 디자인 모드에서의 추가, 제거, 및 구성 요소에 대 한 변경에 대 한 알림을 수신 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded">
          <source>Occurs when a component has been added.</source>
          <target state="translated">구성 요소가 추가되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded">
          <source>This event occurs during load and when new components are created by the user, after the component has been sited.</source>
          <target state="translated">이 이벤트는 로드 및는 구성 요소가 배치 된 후 사용자가 새 구성 요소 생성 되는 동안 발생 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding">
          <source>Occurs when a component is in the process of being added.</source>
          <target state="translated">구성 요소가 추가되는 동안에 발생합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding">
          <source>This event occurs during load and when the user creates a new component.</source>
          <target state="translated">이 이벤트는 로드 하 고 사용자는 새 구성 요소를 생성할 때 동안 발생 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding">
          <source>You can cancel the process of adding a component by throwing an exception here.</source>
          <target state="translated">여기에 예외를 throw 하 여 구성 요소를 추가 하는 프로세스를 취소할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>Occurs when a component has been changed.</source>
          <target state="translated">구성 요소가 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>This event occurs when any component on the form changes.</source>
          <target state="translated">이 이벤트는 폼에 있는 구성 요소가 변경 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>This event will not occur during form load and unload, because changes are expected at this time.</source>
          <target state="translated">이 이벤트는 금지 됩니다는이 이번에 변경 작업이 필요 하기 때문에 폼을 로드 하 고 언로드하는 동안 발생 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> can raise multiple <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> events.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> 다중 발생 시킬 수 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>Some <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event handlers can interfere with expected sequences of events, such as if your code alters the values of properties while a transaction is occurring.</source>
          <target state="translated">일부 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> 되므로 이벤트 처리기를 방해할 수 이벤트의 예상된 시퀀스와 경우와 같이 코드 값을 변경 하는 속성의 트랜잭션이 진행 되는 동안 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event handler can also impair performance if it draws after each change while a <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> is in progress.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> 이벤트 처리기 수 또한는 성능을 저하 시킬 때 각 변경 후에 그리는 경우는 <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> 진행 중입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>In order to allow a <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> in process to complete without interruption or interference by your <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event handler, you can test the state of the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost.InTransaction%2A&gt;</ph> property, and defer handling the change events until the completion of the transaction by adding a <ph id="ph4">&lt;xref:System.ComponentModel.Design.DesignerTransactionCloseEventHandler&gt;</ph> which will raise your <ph id="ph5">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event handler and remove itself upon completion of the transaction.</source>
          <target state="translated">수 있도록 하기 위해는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> 충돌 하지 않고 완료 하기에 프로그램 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> 이벤트 처리기의 상태를 테스트할 수 있습니다는 <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost.InTransaction%2A&gt;</ph> 속성 고 트랜잭션이 완료 될 때까지 변경 이벤트를 처리 결정 추가 하 여 한 <ph id="ph4">&lt;xref:System.ComponentModel.Design.DesignerTransactionCloseEventHandler&gt;</ph> 발생 시키고 프로그램 <ph id="ph5">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> 이벤트 처리기 및 트랜잭션 완료 되 면 자체를 제거 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging">
          <source>Occurs when a component is in the process of being changed.</source>
          <target state="translated">구성 요소가 변경되는 동안에 발생합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging">
          <source>This event occurs before the component is actually changed, and gives the designer a chance to abort the change or perform any pre-change processing.</source>
          <target state="translated">이 이벤트는 구성 요소가 실제로 변경 되 고 하면 디자이너에서 변경 내용을 중단 하거나 사전 변경 처리를 수행 하기 전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging">
          <source>This event does not occur during form load and unload, because changes are expected at this time.</source>
          <target state="translated">이 이벤트는 그렇지 않습니다는이 이번에 변경 작업이 필요 하기 때문에 폼을 로드 하 고 언로드하는 동안 발생 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved">
          <source>Occurs when a component has been removed.</source>
          <target state="translated">구성 요소가 제거되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved">
          <source>This event occurs during unload and when a component is deleted by the user.</source>
          <target state="translated">이 이벤트 중 언로드 및 구성 요소는 사용자가 삭제 되 면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved">
          <source>The event occurs before the site has been removed from the component.</source>
          <target state="translated">이벤트에는 사이트 구성 요소에서 제거 되었습니다 전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving">
          <source>Occurs when a component is in the process of being removed.</source>
          <target state="translated">구성 요소가 제거되는 동안에 발생합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving">
          <source>This event occurs during unload and when the user deletes a component.</source>
          <target state="translated">이 이벤트 중 언로드 및 사용자는 구성 요소를 삭제할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving">
          <source>You can cancel the process of removing a component by throwing an exception here.</source>
          <target state="translated">여기에 예외를 throw 하 여 구성 요소를 제거 하는 프로세스를 취소할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename">
          <source>Occurs when a component is renamed.</source>
          <target state="translated">구성 요소의 이름을 바꾸면 발생합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename">
          <source>This event occurs after the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event when a component has been renamed.</source>
          <target state="translated">이 이벤트가 발생 한 후는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> 경우에는 구성 요소 이름이 변경 되었습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>The component that has changed.</source>
          <target state="translated">변경된 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>The member that has changed.</source>
          <target state="translated">변경된 멤버입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>This is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this change is not related to a single member.</source>
          <target state="translated">이 변경 사항이 단일 멤버와 관련되어 있지 않으면 이 멤버는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>The old value of the member.</source>
          <target state="translated">멤버의 이전 값입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>This is valid only if the member is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 멤버가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 아닌 경우에만 유효합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>The new value of the member.</source>
          <target state="translated">멤버의 새 값입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>This is valid only if the member is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 멤버가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 아닌 경우에만 유효합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>Announces to the component change service that a particular component has changed.</source>
          <target state="translated">구성 요소 변경 서비스에 특정 구성 요소가 변경되었음을 알립니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>This method raises the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>Most designers that ship with the <ph id="ph1">[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]</ph>, as well as the Visual Studio design-time environment, typically raise this event for you when a component in a project is changed, so most of the time you do not need to explicitly call this method.</source>
          <target state="translated">대부분의 디자이너와 함께 제공 되는 <ph id="ph1">[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]</ph>, Visual Studio 디자인 타임 환경 뿐만 아니라 일반적으로이 이벤트를 발생 변경 되 면 한 프로젝트의 구성 요소에 대 한 대부분의 경우 불필요를 명시적으로이 메서드를 호출 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>The appropriate <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> events are automatically raised when a <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> is used to change a property value or components are added or removed from the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> container.</source>
          <target state="translated">적절 한 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> 이벤트는 자동으로 발생 시기는 <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> 속성을 변경 하는 데 사용 값 또는 구성 요소 추가 또는 제거에서 <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> 컨테이너입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>Before calling <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph>, first call <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph> to indicate that a component is about to change, and make the change.</source>
          <target state="translated">호출 하기 전에 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph>를 먼저 호출 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph> 구성 요소를 변경 하 고 변경 내용을 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>Then call <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 호출 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph> 시키려면는 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>This event allows the implementer to do any post-processing that is needed after a property change.</source>
          <target state="translated">이 이벤트는 구현 자가 필요한 속성 변경 후 사후 처리 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>For example, a designer typically updates the source code that sets the property with the new value.</source>
          <target state="translated">예를 들어 디자이너는 일반적으로 새 값으로 속성을 설정 하는 소스 코드를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>The component that is about to change.</source>
          <target state="translated">변경할 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>The member that is changing.</source>
          <target state="translated">변경 중인 멤버입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>This is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this change is not related to a single member.</source>
          <target state="translated">이 변경 사항이 단일 멤버와 관련되어 있지 않으면 이 멤버는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>Announces to the component change service that a particular component is changing.</source>
          <target state="translated">구성 요소 변경 서비스에 특정 구성 요소가 변경 중임을 알립니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>This method raises the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&gt;</ph> event.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>Most designers included with the <ph id="ph1">[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]</ph>, as well as the Visual Studio design-time environment, typically raise this event automatically; so most of the time, you do not need to explicitly call this method.</source>
          <target state="translated">에 포함 된 대부분의 디자이너는 <ph id="ph1">[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]</ph>, Visual Studio 디자인 타임 환경 뿐만 아니라 일반적으로이 이벤트를 발생 자동으로; 하므로 대부분의 경우 불필요를 명시적으로이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>The appropriate <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> events are automatically raised when a <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> is used to change a property value or components are added or removed from the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> container.</source>
          <target state="translated">적절 한 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> 이벤트는 자동으로 발생 시기는 <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> 속성을 변경 하는 데 사용 값 또는 구성 요소 추가 또는 제거에서 <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> 컨테이너입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>This method throws an exception if the property cannot be changed.</source>
          <target state="translated">이 메서드는 속성을 변경할 수 없는 경우 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>This is not intended to validate the values of a particular property.</source>
          <target state="translated">특정 속성 값의 유효성을 검사 하는 적합 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>Instead, it is intended to provide a global method of preventing a component from changing.</source>
          <target state="translated">대신, 구성 요소를 변경 하는 것을 방지 전역 메서드를 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>For example, if a designer file is checked into source code control, this event's handler would typically throw an exception if the user refused to check out the file.</source>
          <target state="translated">예를 들어 디자이너 파일이 소스 코드 제어에 체크 인을 하는 경우이 이벤트의이 처리기는 일반적으로 예외를 throw 사용자를 거절 했습니다. 파일을 체크 아웃 하는 경우.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>