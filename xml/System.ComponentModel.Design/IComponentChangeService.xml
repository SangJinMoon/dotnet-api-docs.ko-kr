<Type Name="IComponentChangeService" FullName="System.ComponentModel.Design.IComponentChangeService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9da9b16adc06a8f1abe552a2842b02e1cd6c9038" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36706694" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComponentChangeService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComponentChangeService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IComponentChangeService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComponentChangeService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComponentChangeService" />
  <TypeSignature Language="F#" Value="type IComponentChangeService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="68f7f-101">구성 요소를 추가, 변경, 제거하거나 구성 요소의 이름을 바꾸는 이벤트에 대한 이벤트 처리기를 추가하고 제거하는 인터페이스를 제공하며 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> 또는 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> 이벤트를 발생시키는 메서드를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="68f7f-101">Provides an interface to add and remove the event handlers for events that add, change, remove or rename components, and provides methods to raise a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> or <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f7f-102"><xref:System.ComponentModel.Design.IComponentChangeService> 다음 이벤트를 처리 하는 방법을 나타내는 데 사용할 수 있는 인터페이스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-102"><xref:System.ComponentModel.Design.IComponentChangeService> provides an interface that can be used to indicate the methods that handle the following events:</span></span>  
  
-   <span data-ttu-id="68f7f-103"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded>구성 요소 추가 될 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-103"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded>, raised when a component is added.</span></span>  
  
-   <span data-ttu-id="68f7f-104"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding>구성 요소를 추가 하려고 할 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-104"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding>, raised when a component is about to be added.</span></span>  
  
-   <span data-ttu-id="68f7f-105"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>구성 요소 변경 될 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-105"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>, raised when a component is changed.</span></span>  
  
-   <span data-ttu-id="68f7f-106"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging>구성 요소 변경 되려고 할 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-106"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging>, raised when a component is about to be changed.</span></span>  
  
-   <span data-ttu-id="68f7f-107"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved>구성 요소 제거 될 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-107"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved>, raised when a component is removed.</span></span>  
  
-   <span data-ttu-id="68f7f-108"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving>구성 요소를 제거 하려고 할 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-108"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving>, raised when a component is about to be removed.</span></span>  
  
-   <span data-ttu-id="68f7f-109"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRename>구성 요소 이름을 바꿀 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-109"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRename>, raised when a component is renamed.</span></span>  
  
 <span data-ttu-id="68f7f-110">일반적으로 디자인 환경에서 이러한 구성 요소 추가 발생 시킵니다., 변경, 제거 또는 이벤트 이름을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-110">Typically, the design environment raises these component add, change, remove, or rename events.</span></span> <span data-ttu-id="68f7f-111">디자이너를 사용 하 여이 인터페이스의 메서드를 호출 해야 <xref:System.ComponentModel.Design.DesignerTransaction> 개체를 실행 취소를 제공 하 고 구성 요소에 영향을 주는 디자인 타임 동작에 대 한 기능을 다시 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-111">Designers should call the methods of this interface when using <xref:System.ComponentModel.Design.DesignerTransaction> objects to provide undo and redo functionality for design-time actions that affect components.</span></span> <span data-ttu-id="68f7f-112">에 대 한 설명서에는 자세한 정보가 <xref:System.ComponentModel.Design.DesignerTransaction>합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-112">More information is available in the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.</span></span> <span data-ttu-id="68f7f-113">일반적으로 루트 디자이너에만 이러한에서 처리 변경 알림입니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-113">Generally, only the root designer handles these change notifications.</span></span>  
  
 <span data-ttu-id="68f7f-114">이 서비스는 또한 변경 구성 요소 이벤트 또는 이벤트를 변경 하는 구성 요소를 발생 시키는 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-114">This service also provides methods that raise a component changed event or component changing event.</span></span> <span data-ttu-id="68f7f-115">A <xref:System.ComponentModel.PropertyDescriptor> 또는 구성 요소는 구성 요소 변경 되거나 변경 중임 나타낼 수는 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> 및 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="68f7f-115">A <xref:System.ComponentModel.PropertyDescriptor> or a component can indicate that a component has changed or is changing with the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> and <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> methods, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f7f-116">다음 예제에 사용 하는 방법을 보여 줍니다는 <xref:System.ComponentModel.Design.IComponentChangeService> 인터페이스를 디자인 모드에서의 추가, 제거, 및 구성 요소에 대 한 변경에 대 한 알림을 수신 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-116">This following example demonstrates how to use the <xref:System.ComponentModel.Design.IComponentChangeService> interface to receive notifications about the addition of, removal of, and changes to components in design mode.</span></span>  
  
 [!code-cpp[IComponentChangeServiceSample2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IComponentChangeServiceSample2/CPP/icomponentchangeserviceexample.cpp#1)]
 [!code-csharp[IComponentChangeServiceSample2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IComponentChangeServiceSample2/CS/icomponentchangeserviceexample.cs#1)]
 [!code-vb[IComponentChangeServiceSample2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IComponentChangeServiceSample2/VB/icomponentchangeserviceexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
    <altmember cref="T:System.ComponentModel.Design.ComponentChangedEventHandler" />
    <altmember cref="T:System.ComponentModel.Design.ComponentChangingEventHandler" />
    <altmember cref="T:System.ComponentModel.Design.ComponentRenameEventHandler" />
    <altmember cref="T:System.ComponentModel.MemberDescriptor" />
    <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
  </Docs>
  <Members>
    <Member MemberName="ComponentAdded">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentEventHandler ComponentAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentEventHandler ComponentAdded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />
      <MemberSignature Language="VB.NET" Value="Event ComponentAdded As ComponentEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentEventHandler ^ ComponentAdded;" />
      <MemberSignature Language="F#" Value="member this.ComponentAdded : System.ComponentModel.Design.ComponentEventHandler " Usage="member this.ComponentAdded : System.ComponentModel.Design.ComponentEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68f7f-117">구성 요소가 추가되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-117">Occurs when a component has been added.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f7f-118">이 이벤트는 로드 및는 구성 요소가 배치 된 후 사용자가 새 구성 요소 생성 되는 동안 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-118">This event occurs during load and when new components are created by the user, after the component has been sited.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />
        <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentAdding">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentEventHandler ComponentAdding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentEventHandler ComponentAdding" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />
      <MemberSignature Language="VB.NET" Value="Event ComponentAdding As ComponentEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentEventHandler ^ ComponentAdding;" />
      <MemberSignature Language="F#" Value="member this.ComponentAdding : System.ComponentModel.Design.ComponentEventHandler " Usage="member this.ComponentAdding : System.ComponentModel.Design.ComponentEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68f7f-119">구성 요소가 추가되는 동안에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-119">Occurs when a component is in the process of being added.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f7f-120">이 이벤트는 로드 하 고 사용자는 새 구성 요소를 생성할 때 동안 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-120">This event occurs during load and when the user creates a new component.</span></span> <span data-ttu-id="68f7f-121">여기에 예외를 throw 하 여 구성 요소를 추가 하는 프로세스를 취소할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-121">You can cancel the process of adding a component by throwing an exception here.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />
        <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanged">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentChangedEventHandler ComponentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentChangedEventHandler ComponentChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      <MemberSignature Language="VB.NET" Value="Event ComponentChanged As ComponentChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentChangedEventHandler ^ ComponentChanged;" />
      <MemberSignature Language="F#" Value="member this.ComponentChanged : System.ComponentModel.Design.ComponentChangedEventHandler " Usage="member this.ComponentChanged : System.ComponentModel.Design.ComponentChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68f7f-122">구성 요소가 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-122">Occurs when a component has been changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f7f-123">이 이벤트는 폼에 있는 구성 요소가 변경 될 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-123">This event occurs when any component on the form changes.</span></span> <span data-ttu-id="68f7f-124">이 이벤트는 금지 됩니다는이 이번에 변경 작업이 필요 하기 때문에 폼을 로드 하 고 언로드하는 동안 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-124">This event will not occur during form load and unload, because changes are expected at this time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68f7f-125">A <xref:System.ComponentModel.Design.DesignerTransaction> 다중 발생 시킬 수 <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-125">A <xref:System.ComponentModel.Design.DesignerTransaction> can raise multiple <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> events.</span></span> <span data-ttu-id="68f7f-126">일부 <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> 되므로 이벤트 처리기를 방해할 수 이벤트의 예상된 시퀀스와 경우와 같이 코드 값을 변경 하는 속성의 트랜잭션이 진행 되는 동안 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-126">Some <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event handlers can interfere with expected sequences of events, such as if your code alters the values of properties while a transaction is occurring.</span></span> <span data-ttu-id="68f7f-127">A <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> 이벤트 처리기 수 또한는 성능을 저하 시킬 때 각 변경 후에 그리는 경우는 <xref:System.ComponentModel.Design.DesignerTransaction> 진행 중입니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-127">A <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event handler can also impair performance if it draws after each change while a <xref:System.ComponentModel.Design.DesignerTransaction> is in progress.</span></span> <span data-ttu-id="68f7f-128">수 있도록 하기 위해는 <xref:System.ComponentModel.Design.DesignerTransaction> 충돌 하지 않고 완료 하기에 프로그램 <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> 이벤트 처리기의 상태를 테스트할 수 있습니다는 <xref:System.ComponentModel.Design.IDesignerHost.InTransaction%2A> 속성 고 트랜잭션이 완료 될 때까지 변경 이벤트를 처리 결정 추가 하 여 한 <xref:System.ComponentModel.Design.DesignerTransactionCloseEventHandler> 발생 시키고 프로그램 <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> 이벤트 처리기 및 트랜잭션 완료 되 면 자체를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-128">In order to allow a <xref:System.ComponentModel.Design.DesignerTransaction> in process to complete without interruption or interference by your <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event handler, you can test the state of the <xref:System.ComponentModel.Design.IDesignerHost.InTransaction%2A> property, and defer handling the change events until the completion of the transaction by adding a <xref:System.ComponentModel.Design.DesignerTransactionCloseEventHandler> which will raise your <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event handler and remove itself upon completion of the transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />
        <altmember cref="T:System.ComponentModel.Design.ComponentChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanging">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentChangingEventHandler ComponentChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentChangingEventHandler ComponentChanging" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />
      <MemberSignature Language="VB.NET" Value="Event ComponentChanging As ComponentChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentChangingEventHandler ^ ComponentChanging;" />
      <MemberSignature Language="F#" Value="member this.ComponentChanging : System.ComponentModel.Design.ComponentChangingEventHandler " Usage="member this.ComponentChanging : System.ComponentModel.Design.ComponentChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68f7f-129">구성 요소가 변경되는 동안에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-129">Occurs when a component is in the process of being changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f7f-130">이 이벤트는 구성 요소가 실제로 변경 되 고 하면 디자이너에서 변경 내용을 중단 하거나 사전 변경 처리를 수행 하기 전에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-130">This event occurs before the component is actually changed, and gives the designer a chance to abort the change or perform any pre-change processing.</span></span> <span data-ttu-id="68f7f-131">이 이벤트는 그렇지 않습니다는이 이번에 변경 작업이 필요 하기 때문에 폼을 로드 하 고 언로드하는 동안 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-131">This event does not occur during form load and unload, because changes are expected at this time.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
        <altmember cref="T:System.ComponentModel.Design.ComponentChangingEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoved">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentEventHandler ComponentRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentEventHandler ComponentRemoved" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />
      <MemberSignature Language="VB.NET" Value="Event ComponentRemoved As ComponentEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentEventHandler ^ ComponentRemoved;" />
      <MemberSignature Language="F#" Value="member this.ComponentRemoved : System.ComponentModel.Design.ComponentEventHandler " Usage="member this.ComponentRemoved : System.ComponentModel.Design.ComponentEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68f7f-132">구성 요소가 제거되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-132">Occurs when a component has been removed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f7f-133">이 이벤트 중 언로드 및 구성 요소는 사용자가 삭제 되 면 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-133">This event occurs during unload and when a component is deleted by the user.</span></span> <span data-ttu-id="68f7f-134">이벤트에는 사이트 구성 요소에서 제거 되었습니다 전에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-134">The event occurs before the site has been removed from the component.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />
        <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoving">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentEventHandler ComponentRemoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentEventHandler ComponentRemoving" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />
      <MemberSignature Language="VB.NET" Value="Event ComponentRemoving As ComponentEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentEventHandler ^ ComponentRemoving;" />
      <MemberSignature Language="F#" Value="member this.ComponentRemoving : System.ComponentModel.Design.ComponentEventHandler " Usage="member this.ComponentRemoving : System.ComponentModel.Design.ComponentEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68f7f-135">구성 요소가 제거되는 동안에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-135">Occurs when a component is in the process of being removed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f7f-136">이 이벤트 중 언로드 및 사용자는 구성 요소를 삭제할 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-136">This event occurs during unload and when the user deletes a component.</span></span> <span data-ttu-id="68f7f-137">여기에 예외를 throw 하 여 구성 요소를 제거 하는 프로세스를 취소할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-137">You can cancel the process of removing a component by throwing an exception here.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />
        <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRename">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentRenameEventHandler ComponentRename;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentRenameEventHandler ComponentRename" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />
      <MemberSignature Language="VB.NET" Value="Event ComponentRename As ComponentRenameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentRenameEventHandler ^ ComponentRename;" />
      <MemberSignature Language="F#" Value="member this.ComponentRename : System.ComponentModel.Design.ComponentRenameEventHandler " Usage="member this.ComponentRename : System.ComponentModel.Design.ComponentRenameEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentRenameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68f7f-138">구성 요소의 이름을 바꾸면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-138">Occurs when a component is renamed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f7f-139">이 이벤트가 발생 한 후는 <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> 경우에는 구성 요소 이름이 변경 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-139">This event occurs after the <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event when a component has been renamed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.ComponentRenameEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public void OnComponentChanged (object component, System.ComponentModel.MemberDescriptor member, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanged(object component, class System.ComponentModel.MemberDescriptor member, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnComponentChanged (component As Object, member As MemberDescriptor, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnComponentChanged(System::Object ^ component, System::ComponentModel::MemberDescriptor ^ member, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanged : obj * System.ComponentModel.MemberDescriptor * obj * obj -&gt; unit" Usage="iComponentChangeService.OnComponentChanged (component, member, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="68f7f-140">변경된 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-140">The component that has changed.</span>
          </span>
        </param>
        <param name="member">
          <span data-ttu-id="68f7f-141">변경된 멤버입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-141">The member that has changed.</span>
          </span>
          <span data-ttu-id="68f7f-142">이 변경 사항이 단일 멤버와 관련되어 있지 않으면 이 멤버는 <see langword="null" />이 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-142">This is <see langword="null" /> if this change is not related to a single member.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="68f7f-143">멤버의 이전 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-143">The old value of the member.</span>
          </span>
          <span data-ttu-id="68f7f-144">이 값은 멤버가 <see langword="null" />이 아닌 경우에만 유효합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-144">This is valid only if the member is not <see langword="null" />.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="68f7f-145">멤버의 새 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-145">The new value of the member.</span>
          </span>
          <span data-ttu-id="68f7f-146">이 값은 멤버가 <see langword="null" />이 아닌 경우에만 유효합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-146">This is valid only if the member is not <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68f7f-147">구성 요소 변경 서비스에 특정 구성 요소가 변경되었음을 알립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-147">Announces to the component change service that a particular component has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f7f-148">이 메서드는 <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-148">This method raises the <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event.</span></span>  
  
 <span data-ttu-id="68f7f-149">대부분의 디자이너와 함께 제공 되는 [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)], Visual Studio 디자인 타임 환경 뿐만 아니라 일반적으로이 이벤트를 발생 변경 되 면 한 프로젝트의 구성 요소에 대 한 대부분의 경우 불필요를 명시적으로이 메서드를 호출 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-149">Most designers that ship with the [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)], as well as the Visual Studio design-time environment, typically raise this event for you when a component in a project is changed, so most of the time you do not need to explicitly call this method.</span></span> <span data-ttu-id="68f7f-150">적절 한 <xref:System.ComponentModel.Design.IComponentChangeService> 이벤트는 자동으로 발생 시기는 <xref:System.ComponentModel.PropertyDescriptor> 속성을 변경 하는 데 사용 값 또는 구성 요소 추가 또는 제거에서 <xref:System.ComponentModel.Design.IDesignerHost> 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-150">The appropriate <xref:System.ComponentModel.Design.IComponentChangeService> events are automatically raised when a <xref:System.ComponentModel.PropertyDescriptor> is used to change a property value or components are added or removed from the <xref:System.ComponentModel.Design.IDesignerHost> container.</span></span>  
  
 <span data-ttu-id="68f7f-151">호출 하기 전에 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>를 먼저 호출 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> 구성 요소를 변경 하 고 변경 내용을 임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-151">Before calling <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, first call <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> to indicate that a component is about to change, and make the change.</span></span> <span data-ttu-id="68f7f-152">그런 다음 호출 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> 시키려면는 <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-152">Then call <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> to raise the <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="68f7f-153">
            <para>이 이벤트는 구현 자가 필요한 속성 변경 후 사후 처리 작업을 수행할 수 있습니다. 예를 들어 디자이너는 일반적으로 새 값으로 속성을 설정 하는 소스 코드를 업데이트 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-153">
              <para>This event allows the implementer to do any post-processing that is needed after a property change. For example, a designer typically updates the source code that sets the property with the new value.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanging">
      <MemberSignature Language="C#" Value="public void OnComponentChanging (object component, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanging(object component, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnComponentChanging (component As Object, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnComponentChanging(System::Object ^ component, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanging : obj * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="iComponentChangeService.OnComponentChanging (component, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="68f7f-154">변경할 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-154">The component that is about to change.</span>
          </span>
        </param>
        <param name="member">
          <span data-ttu-id="68f7f-155">변경 중인 멤버입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-155">The member that is changing.</span>
          </span>
          <span data-ttu-id="68f7f-156">이 변경 사항이 단일 멤버와 관련되어 있지 않으면 이 멤버는 <see langword="null" />이 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-156">This is <see langword="null" /> if this change is not related to a single member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68f7f-157">구성 요소 변경 서비스에 특정 구성 요소가 변경 중임을 알립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-157">Announces to the component change service that a particular component is changing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f7f-158">이 메서드는 <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-158">This method raises the <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging> event.</span></span>  
  
 <span data-ttu-id="68f7f-159">에 포함 된 대부분의 디자이너는 [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)], Visual Studio 디자인 타임 환경 뿐만 아니라 일반적으로이 이벤트를 발생 자동으로; 하므로 대부분의 경우 불필요를 명시적으로이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-159">Most designers included with the [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)], as well as the Visual Studio design-time environment, typically raise this event automatically; so most of the time, you do not need to explicitly call this method.</span></span> <span data-ttu-id="68f7f-160">적절 한 <xref:System.ComponentModel.Design.IComponentChangeService> 이벤트는 자동으로 발생 시기는 <xref:System.ComponentModel.PropertyDescriptor> 속성을 변경 하는 데 사용 값 또는 구성 요소 추가 또는 제거에서 <xref:System.ComponentModel.Design.IDesignerHost> 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="68f7f-160">The appropriate <xref:System.ComponentModel.Design.IComponentChangeService> events are automatically raised when a <xref:System.ComponentModel.PropertyDescriptor> is used to change a property value or components are added or removed from the <xref:System.ComponentModel.Design.IDesignerHost> container.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="68f7f-161">
            <para>이 메서드는 속성을 변경할 수 없는 경우 예외를 throw 합니다. 특정 속성 값의 유효성을 검사 하는 적합 하지 않습니다. 대신, 구성 요소를 변경 하는 것을 방지 전역 메서드를 제공 됩니다. 예를 들어 디자이너 파일이 소스 코드 제어에 체크 인을 하는 경우이 이벤트의이 처리기는 일반적으로 예외를 throw 사용자를 거절 했습니다. 파일을 체크 아웃 하는 경우.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="68f7f-161">
              <para>This method throws an exception if the property cannot be changed. This is not intended to validate the values of a particular property. Instead, it is intended to provide a global method of preventing a component from changing. For example, if a designer file is checked into source code control, this event's handler would typically throw an exception if the user refused to check out the file.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>