<Type Name="IEventBindingService" FullName="System.ComponentModel.Design.IEventBindingService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6fbe880de0662b59a2fd6e8b6ad4dfab21b8a348" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36706125" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEventBindingService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEventBindingService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IEventBindingService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEventBindingService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEventBindingService" />
  <TypeSignature Language="F#" Value="type IEventBindingService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="22c02-101">구성 요소 이벤트의 이벤트 처리기를 등록하기 위한 서비스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="22c02-101">Provides a service for registering event handlers for component events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22c02-102">이벤트 바인딩 서비스 디자이너 코드에서 구성 요소 이벤트와 이벤트 처리기를 연결 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-102">The event binding service provides a way to link an event handler with a component event from designer code.</span></span>  
  
 <span data-ttu-id="22c02-103">이벤트 처리기를 사용 하는 구성 요소 이벤트와 연결 하는 <xref:System.ComponentModel.Design.IEventBindingService>, 먼저 받아야는 <xref:System.ComponentModel.EventDescriptor> 연결 하려는 구성 요소 이벤트에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-103">To link an event handler with a component event using the <xref:System.ComponentModel.Design.IEventBindingService>, you must first obtain an <xref:System.ComponentModel.EventDescriptor> for the event of the component you intend to link.</span></span> <span data-ttu-id="22c02-104"><xref:System.ComponentModel.Design.IEventBindingService> 변환할 수 있는 메서드를 제공는 <xref:System.ComponentModel.EventDescriptor> 에 <xref:System.ComponentModel.PropertyDescriptor> 이벤트를 이벤트 처리기 메서드 이름으로 구성 하는 데 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-104">The <xref:System.ComponentModel.Design.IEventBindingService> provides methods that can convert an <xref:System.ComponentModel.EventDescriptor> to a <xref:System.ComponentModel.PropertyDescriptor> which you can use to configure the event with an event handler method name.</span></span>  
  
 <span data-ttu-id="22c02-105"><xref:System.ComponentModel.TypeDescriptor> 개체 제공는 <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> 얻는 데 사용할 수 있는 메서드는 <xref:System.ComponentModel.EventDescriptorCollection> 포함 된 <xref:System.ComponentModel.EventDescriptor> 구성 요소의 각 이벤트에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-105">The <xref:System.ComponentModel.TypeDescriptor> object provides a <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that you can use to obtain an <xref:System.ComponentModel.EventDescriptorCollection> containing <xref:System.ComponentModel.EventDescriptor> objects for each event of a component.</span></span> <span data-ttu-id="22c02-106"><xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> 및 <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> 의 메서드는 <xref:System.ComponentModel.Design.IEventBindingService> 반환는 <xref:System.ComponentModel.PropertyDescriptor> 각 <xref:System.ComponentModel.EventDescriptor> 두 방법 중 하나에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-106">The <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> and <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> methods of the <xref:System.ComponentModel.Design.IEventBindingService> return a <xref:System.ComponentModel.PropertyDescriptor> for each <xref:System.ComponentModel.EventDescriptor> passed to either method.</span></span> <span data-ttu-id="22c02-107">각 <xref:System.ComponentModel.PropertyDescriptor> 에서 반환 된 <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> 또는 <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> 문자열의 속성 형식을 가집니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-107">Each <xref:System.ComponentModel.PropertyDescriptor> returned from <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> or <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> has a property type of string.</span></span> <span data-ttu-id="22c02-108">이 문자열을 사용 하 여 사용 하 여 이벤트를 연결 하는 이벤트 처리기 메서드의 이름을 나타내는 값을 설정할 수 있습니다는 <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> 의 메서드는 <xref:System.ComponentModel.PropertyDescriptor>합니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-108">You can set this string to a value that indicates the name of the event-handler method to link the event with using the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method of the <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22c02-109">다음 예제에서는 사용 하는 디자이너는 <xref:System.ComponentModel.Design.IEventBindingService> 디자이너 구성 요소에 추가 하는 사용자 지정 바로 가기 메뉴 명령이 호출 될 때 디자인 타임에 구성 요소의 이벤트를 이벤트 처리기를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-109">The following example demonstrates a designer that uses the <xref:System.ComponentModel.Design.IEventBindingService> to link a component's event with an event handler at design time when the custom shortcut menu command that the designer adds for the component is invoked.</span></span> <span data-ttu-id="22c02-110">예를 사용, 클래스 라이브러리에 컴파일한, Windows Forms 프로젝트에서 참조 추가, 도구 상자를 마우스 오른쪽 단추로 클릭 하 고 도구 상자 사용자 지정..., 다음 클래스 라이브러리를 선택 합니다. 선택한 클릭 하 여 확인을 도구 상자에 클래스 라이브러리의 구성 요소를 추가 하 고 라이브러리로의 인스턴스를 폼에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-110">To use the example, compile it to a class library, add a reference from a Windows Forms project, add the component in the class library to the Toolbox by right-clicking the Toolbox and selecting Customize Toolbox..., then choosing the class library and clicking OK, and add an instance of the EventControl to a Form.</span></span> <span data-ttu-id="22c02-111">그런 다음 라이브러리로 마우스 오른쪽 단추로 클릭 하 고 연결 testEvent 바로 가기 메뉴 명령을 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-111">Then right-click the EventControl and click the Connect testEvent shortcut menu command.</span></span> <span data-ttu-id="22c02-112">빈 이벤트 처리기 메서드가 만들어지고 라이브러리로 testEvent 메서드는 폼에 대 한 초기화 코드에서이 이벤트 처리기로 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-112">An empty event handler method is created and the EventControl's testEvent method is initialized to this event handler in the initialization code for the Form.</span></span>  
  
 [!code-cpp[IEventBindingServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IEventBindingServiceExample/CPP/source.cpp#1)]
 [!code-csharp[IEventBindingServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IEventBindingServiceExample/CS/source.cs#1)]
 [!code-vb[IEventBindingServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IEventBindingServiceExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
  </Docs>
  <Members>
    <Member MemberName="CreateUniqueMethodName">
      <MemberSignature Language="C#" Value="public string CreateUniqueMethodName (System.ComponentModel.IComponent component, System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateUniqueMethodName(class System.ComponentModel.IComponent component, class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateUniqueMethodName (component As IComponent, e As EventDescriptor) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateUniqueMethodName(System::ComponentModel::IComponent ^ component, System::ComponentModel::EventDescriptor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member CreateUniqueMethodName : System.ComponentModel.IComponent * System.ComponentModel.EventDescriptor -&gt; string" Usage="iEventBindingService.CreateUniqueMethodName (component, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="22c02-113">이벤트가 연결된 구성 요소 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-113">The component instance the event is connected to.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="22c02-114">이름을 만들 이벤트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-114">The event to create a name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22c02-115">지정된 구성 요소와 이벤트에 대한 이벤트 처리기 메서드의 고유 이름을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-115">Creates a unique name for an event-handler method for the specified component and event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="22c02-116">이 이벤트에 대한 이벤트 처리기의 권장 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-116">The recommended name for the event-handler method for this event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22c02-117">이 메서드는 사용자의 소스 코드에서 다른 메서드 이름에서 고유한 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-117">This method returns a name that is unique from any other method name in the user's source code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompatibleMethods">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetCompatibleMethods (System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetCompatibleMethods(class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompatibleMethods (e As EventDescriptor) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetCompatibleMethods(System::ComponentModel::EventDescriptor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GetCompatibleMethods : System.ComponentModel.EventDescriptor -&gt; System.Collections.ICollection" Usage="iEventBindingService.GetCompatibleMethods e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="22c02-118">호환되는 이벤트 처리기 메서드를 가져올 이벤트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-118">The event to get the compatible event-handler methods for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22c02-119">지정된 이벤트와 호환되는 메서드 시그니처를 가진 이벤트 처리기 메서드의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-119">Gets a collection of event-handler methods that have a method signature compatible with the specified event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="22c02-120">문자열의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-120">A collection of strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22c02-121">컬렉션의 각 문자열에 지정된 된 이벤트와 호환 되는 메서드 시그니처를 가진 메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-121">Each string in the collection is the name of a method that has a method signature compatible with the specified event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.EventDescriptor GetEvent (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.EventDescriptor GetEvent(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvent (property As PropertyDescriptor) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::EventDescriptor ^ GetEvent(System::ComponentModel::PropertyDescriptor ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetEvent : System.ComponentModel.PropertyDescriptor -&gt; System.ComponentModel.EventDescriptor" Usage="iEventBindingService.GetEvent property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="22c02-122">이벤트를 표시하는 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-122">The property that represents an event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22c02-123">이벤트를 표시하는 경우 지정된 속성 설명자가 표시하는 이벤트에 대한 <see cref="T:System.ComponentModel.EventDescriptor" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-123">Gets an <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the specified property descriptor represents, if it represents an event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="22c02-124">속성이 표시하는 이벤트에 대한 <see cref="T:System.ComponentModel.EventDescriptor" />이거나, 속성이 이벤트를 표시하지 않는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-124">An <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the property represents, or <see langword="null" /> if the property does not represent an event.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetEventProperties (System.ComponentModel.EventDescriptorCollection events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetEventProperties(class System.ComponentModel.EventDescriptorCollection events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEventProperties (events As EventDescriptorCollection) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetEventProperties(System::ComponentModel::EventDescriptorCollection ^ events);" />
      <MemberSignature Language="F#" Value="abstract member GetEventProperties : System.ComponentModel.EventDescriptorCollection -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="iEventBindingService.GetEventProperties events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.ComponentModel.EventDescriptorCollection" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="22c02-125">속성으로 변환할 이벤트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-125">The events to convert to properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22c02-126">일련의 이벤트 설명자를 일련의 속성 설명자로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-126">Converts a set of event descriptors to a set of property descriptors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="22c02-127">이벤트 집합을 설명하는 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-127">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that describe the event set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22c02-128">반환 되는 각 <xref:System.ComponentModel.PropertyDescriptor> 에 <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-128">Each returned <xref:System.ComponentModel.PropertyDescriptor> has a <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventProperty">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor GetEventProperty (System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptor GetEventProperty(class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEventProperty (e As EventDescriptor) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptor ^ GetEventProperty(System::ComponentModel::EventDescriptor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GetEventProperty : System.ComponentModel.EventDescriptor -&gt; System.ComponentModel.PropertyDescriptor" Usage="iEventBindingService.GetEventProperty e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="22c02-129">변환할 이벤트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-129">The event to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22c02-130">단일 이벤트 설명자를 속성 설명자로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-130">Converts a single event descriptor to a property descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="22c02-131">이벤트를 설명하는 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-131">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22c02-132">반환 된 <xref:System.ComponentModel.PropertyDescriptor> 에 <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-132">The returned <xref:System.ComponentModel.PropertyDescriptor> has a <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowCode">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="22c02-133">디자이너에 대한 사용자 코드를 표시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-133">Displays the user code for the designer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode();" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : unit -&gt; bool" Usage="iEventBindingService.ShowCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="22c02-134">디자이너에 대한 사용자 코드를 표시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-134">Displays the user code for the designer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="22c02-135">코드가 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-135">
              <see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22c02-136">이 메서드는 코드 편집기를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-136">This method displays the code editor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode (lineNumber As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode(int lineNumber);" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : int -&gt; bool" Usage="iEventBindingService.ShowCode lineNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">
          <span data-ttu-id="22c02-137">캐럿을 놓을 줄 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-137">The line number to place the caret on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22c02-138">지정된 줄에서 디자이너에 대한 사용자 코드를 표시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-138">Displays the user code for the designer at the specified line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="22c02-139">코드가 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-139">
              <see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22c02-140">이 메서드는 코드 편집기를 표시 하 고 지정된 된 줄에 커서를 놓습니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-140">This method displays the code editor and positions the cursor on the specified line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode (System.ComponentModel.IComponent component, System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode(class System.ComponentModel.IComponent component, class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode (component As IComponent, e As EventDescriptor) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode(System::ComponentModel::IComponent ^ component, System::ComponentModel::EventDescriptor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : System.ComponentModel.IComponent * System.ComponentModel.EventDescriptor -&gt; bool" Usage="iEventBindingService.ShowCode (component, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="22c02-141">이벤트가 연결된 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-141">The component that the event is connected to.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="22c02-142">표시할 이벤트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-142">The event to display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22c02-143">지정된 이벤트에 대한 사용자 코드를 표시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-143">Displays the user code for the specified event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="22c02-144">코드가 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22c02-144">
              <see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22c02-145">이 메서드는 코드 편집기를 표시 하 고 지정된 된 이벤트에 선언 된 줄에 커서를 놓습니다.</span><span class="sxs-lookup"><span data-stu-id="22c02-145">This method displays the code editor and positions the cursor on the line that the specified event is declared on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>