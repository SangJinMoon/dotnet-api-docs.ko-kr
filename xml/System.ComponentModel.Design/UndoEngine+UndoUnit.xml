<Type Name="UndoEngine+UndoUnit" FullName="System.ComponentModel.Design.UndoEngine+UndoUnit">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="382a3cdab6225eaf1dff887db135941d445224f9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30369507" />
  </Metadata>
  <TypeSignature Language="C#" Value="protected class UndoEngine.UndoUnit" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi beforefieldinit UndoEngine/UndoUnit extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
  <TypeSignature Language="VB.NET" Value="Protected Class UndoEngine.UndoUnit" />
  <TypeSignature Language="C++ CLI" Value="protected: ref class UndoEngine::UndoUnit" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="48e92-101">사용자가 실행 취소할 수 있는 작업 단위를 캡슐화합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="48e92-101">Encapsulates a unit of work that a user can undo.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48e92-102"><xref:System.ComponentModel.Design.UndoEngine.UndoUnit> 클래스 내에서 중첩된 클래스는 <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> 취소할 수 있는 작업을 캡슐화 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="48e92-102">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> class is a nested class within <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> that encapsulates an action that a user can undo.</span></span> <span data-ttu-id="48e92-103">기본 <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> 구현 변경 알림을 모니터링 하 고 각 변경에 대 한 이벤트의 목록을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="48e92-103">The default <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> implementation monitors change notifications and builds up a list of events for each change.</span></span> <span data-ttu-id="48e92-104">사용 하 여 이러한 이벤트를 저장 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>합니다.</span><span class="sxs-lookup"><span data-stu-id="48e92-104">It saves these events using <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>.</span></span> <span data-ttu-id="48e92-105"><xref:System.ComponentModel.Design.UndoEngine.UndoUnit> 에서 직접 변경에 대 한 이벤트 알림을 받는 <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> 여러 `public virtual` 메서드.</span><span class="sxs-lookup"><span data-stu-id="48e92-105">An <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> receives event notifications for changes directly from <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> through several `public virtual` methods.</span></span> <span data-ttu-id="48e92-106">파생 시켜 <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> 추가 논리를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="48e92-106">You can derive from <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> and perform any additional logic.</span></span> <span data-ttu-id="48e92-107">원하는 경우 기본 완전히 무시할 수 있습니다 <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="48e92-107">If desired, you can completely bypass the default <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> implementation.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UndoUnit (System.ComponentModel.Design.UndoEngine engine, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.UndoEngine engine, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (engine As UndoEngine, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UndoUnit(System::ComponentModel::Design::UndoEngine ^ engine, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="engine" Type="System.ComponentModel.Design.UndoEngine" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="engine">
          <span data-ttu-id="48e92-108">이 실행 취소 단위를 소유하는 실행 취소 엔진입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-108">The undo engine that owns this undo unit.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="48e92-109">이 실행 취소 단위의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-109">The name for this undo unit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48e92-110">
            <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-110">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48e92-111">
            <paramref name="engine" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-111">
              <paramref name="engine" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="48e92-112">실행 취소 엔진에서 호출을 받아 이 단위를 닫습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-112">Receives a call from the undo engine to close this unit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48e92-113">단위를 닫을 때 이벤트를 더 이상 여러 이벤트 메서드를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="48e92-113">When a unit is closed, no more events can come into its various event methods.</span></span> <span data-ttu-id="48e92-114"><xref:System.ComponentModel.Design.UndoEngine.UndoUnit> 현재 열려 있는 모든 이벤트를 닫았는지 확인 해야 자체 작업을 여기 걸릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="48e92-114">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> itself may take action here to ensure that any events that are currently open are closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentAdded">
      <MemberSignature Language="C#" Value="public virtual void ComponentAdded (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentAdded(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentAdded (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentAdded(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="48e92-115">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-115">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48e92-116">
            <see cref="T:System.ComponentModel.Design.UndoEngine" /> 이벤트에 대한 응답으로 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />에서 호출을 받습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-116">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentAdding">
      <MemberSignature Language="C#" Value="public virtual void ComponentAdding (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentAdding(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentAdding (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentAdding(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="48e92-117">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-117">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48e92-118">
            <see cref="T:System.ComponentModel.Design.UndoEngine" /> 이벤트에 대한 응답으로 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />에서 호출을 받습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-118">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanged">
      <MemberSignature Language="C#" Value="public virtual void ComponentChanged (System.ComponentModel.Design.ComponentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentChanged(class System.ComponentModel.Design.ComponentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentChanged (e As ComponentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentChanged(System::ComponentModel::Design::ComponentChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="48e92-119">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-119">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48e92-120">
            <see cref="T:System.ComponentModel.Design.UndoEngine" /> 이벤트에 대한 응답으로 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />에서 호출을 받습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-120">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanging">
      <MemberSignature Language="C#" Value="public virtual void ComponentChanging (System.ComponentModel.Design.ComponentChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentChanging(class System.ComponentModel.Design.ComponentChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentChanging (e As ComponentChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentChanging(System::ComponentModel::Design::ComponentChangingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="48e92-121">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-121">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48e92-122">
            <see cref="T:System.ComponentModel.Design.UndoEngine" /> 이벤트에 대한 응답으로 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />에서 호출을 받습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-122">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoved">
      <MemberSignature Language="C#" Value="public virtual void ComponentRemoved (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRemoved(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRemoved (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRemoved(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="48e92-123">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-123">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48e92-124">
            <see cref="T:System.ComponentModel.Design.UndoEngine" /> 이벤트에 대한 응답으로 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />에서 호출을 받습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-124">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoving">
      <MemberSignature Language="C#" Value="public virtual void ComponentRemoving (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRemoving(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRemoving (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRemoving(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="48e92-125">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-125">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48e92-126">
            <see cref="T:System.ComponentModel.Design.UndoEngine" /> 이벤트에 대한 응답으로 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />에서 호출을 받습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-126">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRename">
      <MemberSignature Language="C#" Value="public virtual void ComponentRename (System.ComponentModel.Design.ComponentRenameEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRename(class System.ComponentModel.Design.ComponentRenameEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRename (e As ComponentRenameEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRename(System::ComponentModel::Design::ComponentRenameEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentRenameEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="48e92-127">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-127">A <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48e92-128">
            <see cref="T:System.ComponentModel.Design.UndoEngine" /> 이벤트에 대한 응답으로 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />에서 호출을 받습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-128">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="48e92-129">검색할 서비스의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-129">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48e92-130">요청한 서비스의 인스턴스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-130">Gets an instance of the requested service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48e92-131">서비스의 인스턴스이거나, 서비스를 확인할 수 없는 경우에는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-131">An instance of the given service, or <see langword="null" /> if the service cannot be resolved.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public virtual bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48e92-132">
            <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />에 이벤트가 없는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-132">Gets a value indicating whether the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> contains no events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="48e92-133">
            <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />에 이벤트가 없으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-133">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> contains no events; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48e92-134">실행 취소 엔진 빈 단위를 삭제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="48e92-134">The undo engine may discard empty units.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48e92-135">
            <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-135">Gets the name of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="48e92-136">
            <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-136">The name of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="48e92-137">단위의 현재 이름을 나타내는 <see cref="T:System.String" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-137">Returns a <see cref="T:System.String" /> that represents the current name of the unit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48e92-138">단위의 현재 이름을 나타내는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-138">A <see cref="T:System.String" /> that represents the current name of the unit.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="48e92-139">실행 취소 또는 다시 실행 작업을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-139">Performs an undo or redo action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48e92-140">실행 취소 동작 실행 취소 간에 전환 상태와 다시 실행, 호출 <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> 두 번 개체를 원래 상태로 다시 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="48e92-140">Undo actions toggle themselves between undo and redo states, so calling <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> twice sets the object back to its original state.</span></span>  
  
 <span data-ttu-id="48e92-141"><xref:System.ComponentModel.Design.UndoEngine.UndoUnit> 클래스 처음으로 간주 하는 실행 취소할 수 있는 작업에 이미 완료 되므로 첫 번째 호출은 <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> 작업 실행을 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="48e92-141">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> class initially assumes that the undoable work has already been done, so the first call to <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> undoes the work.</span></span> <span data-ttu-id="48e92-142">다음 호출이 다시 실행을 수행 하는 이전 실행 취소 작업을 실행 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="48e92-142">The next call undoes the previous undo operation, performing a redo.</span></span>  
  
 <span data-ttu-id="48e92-143"><xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> 메서드 호출에서 <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> 메서드 실행 취소 작업을 수행 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="48e92-143">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method calls the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> method to perform an undo operation.</span></span> <span data-ttu-id="48e92-144"><xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> 내에서 일관 된 상태로 유지 하기 위해 작동 하는 메서드 자체는 <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>throw 한 예외 경우에 <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="48e92-144">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method itself works to maintain consistent state within the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, even in the event of an exception thrown by <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="48e92-145">호출 하지 마십시오는 <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> 메서드 직접; 원하는 하지만 항상 호출 하는 경우 재정의 <see langword="public" /><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> 메서드를 실행 취소 작업을 수행 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="48e92-145">Do not call the <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> method directly; override it if you want, but always call the <see langword="public" /><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method to perform undo work.</span>
            </span>
            <span data-ttu-id="48e92-146">
              <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> 메서드 실행 취소 엔진 실행 취소 데이터를 현재 실행 취소 작업이 완료 될 때까지 수집에 알립니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="48e92-146">The <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method notifies the undo engine to suspend undo data gathering until the current undo operation is completed.</span>
            </span>
            <span data-ttu-id="48e92-147">이렇게 하면 새로운 실행 취소 단위가 작업을 수행 하는이 장치에 대 한 응답에서 생성 되지 않습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="48e92-147">This prevents new undo units from being created in response to this unit doing work.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="UndoCore">
      <MemberSignature Language="C#" Value="protected virtual void UndoCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UndoCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UndoCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void UndoCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="48e92-148">실행 취소 작업을 수행하기 위해 <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-148">Called by <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> to perform an undo action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48e92-149"><xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> 메서드 호출에서 <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> 메서드 실행 취소 작업을 수행 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="48e92-149">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method calls the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> method to perform an undo operation.</span></span> <span data-ttu-id="48e92-150"><xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> 내에서 일관 된 상태로 유지 하기 위해 작동 하는 메서드 자체는 <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>throw 한 예외 경우에 <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="48e92-150">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method itself works to maintain consistent state within the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, even in the event of an exception thrown by <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="48e92-151">호출 하지 마십시오는 <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> 메서드 직접; 원하는 하지만 항상 호출 하는 경우 재정의 <see langword="public" /><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> 메서드를 실행 취소 작업을 수행 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="48e92-151">Do not call the <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> method directly; override it if you want, but always call the <see langword="public" /><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method to perform undo work.</span>
            </span>
            <span data-ttu-id="48e92-152">
              <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> 메서드 실행 취소 엔진 실행 취소 작업 데이터를 현재 실행 취소 작업이 완료 될 때까지 수집에 알립니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="48e92-152">The <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method notifies the undo engine to suspend undo-operation data gathering until the current undo operation is completed.</span>
            </span>
            <span data-ttu-id="48e92-153">이렇게 하면 새로운 실행 취소 단위가 작업을 수행 하는이 장치에 대 한 응답에서 생성 되지 않습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="48e92-153">This prevents new undo units from being created in response to this unit doing work.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="UndoEngine">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.UndoEngine UndoEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.UndoEngine UndoEngine" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property UndoEngine As UndoEngine" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::UndoEngine ^ UndoEngine { System::ComponentModel::Design::UndoEngine ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.UndoEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48e92-154">부모 <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-154">Gets the parent <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="48e92-155">이 <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />가 연결된 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48e92-155">The <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> to which this <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> is attached.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>