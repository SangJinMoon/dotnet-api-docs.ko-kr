<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MenuCommandService.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c155505bffdab237c6b880451226979098375975509.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5505bffdab237c6b880451226979098375975509</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IMenuCommandService" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IMenuCommandService" /&gt;</ph> 인터페이스를 구현합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> interface, which is the managed interface used to add handlers for menu commands and to define verbs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> 클래스가 구현 하는 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> 인터페이스를 메뉴 명령에 대 한 처리기를 추가 하 고 동사를 정의 하는 데 사용 되는 관리 되는 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> class is automatically offered by the package class to offer global commands for an entire package, and it is also offered by the <ph id="ph2">`Microsoft.VisualStudio.Shell.WindowPane`</ph> class to offer commands for the current window.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> 하 여 제공 되기도 하 고 클래스는 전체 패키지에 대 한 전역 명령을 제공 하기 위해 패키지 클래스에서 제공 하는 자동으로 <ph id="ph2">`Microsoft.VisualStudio.Shell.WindowPane`</ph> 현재 창에 대 한 명령을 제공 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>This offering is always done through the service container, so anyone deriving from the package or window pane classes can remove or replace the default implementation of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> interface.</source>
          <target state="translated">이 제공은 항상을 통해 서비스 컨테이너 이므로 패키지에서 파생 된 모든 사용자 또는 창 클래스를 제거 하거나의 기본 구현을 바꿀 수는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> class utilizes several other services.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> 클래스에서 몇 가지 다른 서비스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>All of these services are optional, so the behavior of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> class degrades if one or more services are missing.</source>
          <target state="translated">이러한 모든 서비스는 선택 사항 이므로의 동작은 <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> 클래스 한 경우 저하 또는 더 많은 서비스를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>The following table shows which services are used and for what purpose.</source>
          <target state="translated">다음 표에서 사용 되는 서비스와 그 용도입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Service</source>
          <target state="translated">서비스</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Purpose</source>
          <target state="translated">용도</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Used to discover the current selection in order to obtain verbs offered by the currently selected designer.</source>
          <target state="translated">현재 선택 영역을 검색 하는 현재 선택 된 디자이너에서 제공 하는 동사를 가져오기 위해 사용 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Used to obtain the designer for the currently selected component, if any.</source>
          <target state="translated">있는 경우를 현재 선택 된 구성 요소에 대 한 디자이너를 가져오는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Used to notify Visual Studio that the command status has changed.</source>
          <target state="translated">Visual Studio 명령 상태가 변경 되었음을 알리는 데 사용.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Used to show context menus.</source>
          <target state="translated">상황에 맞는 메뉴를 표시 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
          <source>The service provider that this service uses to obtain other services.</source>
          <target state="translated">이 서비스가 다른 서비스를 가져오는 데 사용하는 서비스 공급자입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
          <source>If the service is being used with a designer, the <ph id="ph1">`serviceProvider`</ph> parameter should be the service provider for the designer, as is the case with <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.</source>
          <target state="translated">서비스 디자이너를 사용 하는 경우는 <ph id="ph1">`serviceProvider`</ph> 경우와 마찬가지로 매개 변수는 디자이너에 대 한 서비스 공급자 여야 <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
          <source>Adds a command handler to the menu command service.</source>
          <target state="translated">메뉴 명령 서비스에 명령 처리기를 추가합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A&gt;</ph> method adds a command handler to the menu command service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A&gt;</ph> 메서드 메뉴 명령 서비스에 명령 처리기를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
          <source>Command handlers do not define the text, shortcut, or placement of a menu item.</source>
          <target state="translated">명령 처리기 텍스트나, 바로 가기 메뉴 항목의 위치를 정의 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
          <source>Rather, they define the menu item’s behavior if the item is clicked.</source>
          <target state="translated">항목을 클릭할 경우 메뉴 항목의 동작을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
          <source><ph id="ph1">&lt;paramref name="command" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="command" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
          <source>A command handler <ph id="ph1">&lt;paramref name="command" /&gt;</ph> already exists.</source>
          <target state="translated">명령 처리기 <ph id="ph1">&lt;paramref name="command" /&gt;</ph>가 항상 존재할 경우</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerVerb" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerVerb" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
          <source>Adds a verb to the verb table of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph>의 동사 테이블에 동사를 추가합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
          <source>This verb is available regardless of what designer is currently selected.</source>
          <target state="translated">현재 선택 되어 있는 디자이너에 관계 없이이 동사 ´ ù.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
          <source>Unlike menu commands, verbs can define the text that is displayed to the user, but they do not define the placement of the command on the actual menu.</source>
          <target state="translated">메뉴 명령, 달리 동사는 사용자에 게 표시 되는 텍스트를 정의할 수 있지만 실제 메뉴 명령 배치를 정의 하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
          <source><ph id="ph1">&lt;paramref name="verb" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="verb" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph>에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph>에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph> 사용을 마치면 <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph>를 사용할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph>에 대 한 모든 참조를 해제 해야는 <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <ph id="ph3">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> 차지한 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph>에 대한 마지막 참조를 해제하기 전에 반드시 <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph>를 호출하십시오.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">이렇게 하지 않으면 가비지 수집기가 <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> 개체의 <ph id="ph2">`Finalize`</ph> 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph>에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose()`</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 메서드는 <ph id="ph3">`disposing`</ph> 매개 변수 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 호출 <ph id="ph2">`Dispose`</ph> 와 <ph id="ph3">`disposing`</ph> 로 설정 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> references.</source>
          <target state="translated">경우는 <ph id="ph1">`disposing`</ph> 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> 참조 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드는 참조되는 각 개체의 <ph id="ph1">`Dispose()`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>는 다른 개체에서 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">구현 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>Dispose 메서드를 구현<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Finalize 메서드를 재정의<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
          <source>Ensures that the verb list has been created.</source>
          <target state="translated">동사 목록이 만들어졌는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.EnsureVerbs%2A&gt;</ph> method creates the verb list if it has not already been created.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.EnsureVerbs%2A&gt;</ph> 메서드 작성 되지 이미 경우 동사 목록을 만듭니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Searches for the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> associated with the given command ID.</source>
          <target state="translated">제공된 명령 ID에 연결된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>를 검색합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.CommandID" /&gt;</ph> to find.</source>
          <target state="translated">찾을 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.CommandID" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
          <source>Searches for the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> associated with the given command ID.</source>
          <target state="translated">제공된 명령 ID에 연결된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>를 검색합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> associated with the given command; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the command is not found.</source>
          <target state="translated">제공된 명령에 연결된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>이거나, 명령을 찾을 수 없으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
          <source>The GUID of the command.</source>
          <target state="translated">명령의 GUID입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
          <source>The ID of the command.</source>
          <target state="translated">명령 ID입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
          <source>Searches for the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> associated with the given command.</source>
          <target state="translated">제공된 명령에 연결된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>를 검색합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> associated with the given command; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the command is not found.</source>
          <target state="translated">제공된 명령에 연결된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>이거나, 명령을 찾을 수 없으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
          <source>The GUID of the command list.</source>
          <target state="translated">명령 목록의 GUID입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
          <source>Gets the command list for a given GUID.</source>
          <target state="translated">제공된 GUID의 명령 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> of commands.</source>
          <target state="translated">명령의 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the service to retrieve.</source>
          <target state="translated">검색할 서비스의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
          <source>Gets a reference to the requested service.</source>
          <target state="translated">요청한 서비스에 대한 참조를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
          <source>A reference to <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph>; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the service is not found.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph>에 대한 참조이거나, 서비스를 찾을 수 없으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Invokes a command on the local form or in the global environment.</source>
          <target state="translated">로컬 폼이나 전역 환경에서 명령을 호출합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
          <source>The command to invoke.</source>
          <target state="translated">호출할 명령입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
          <source>Invokes the given command on the local form or in the global environment.</source>
          <target state="translated">로컬 폼이나 전역 환경에서 특정 명령을 호출합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the command was found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">명령이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
          <source>The local form is first searched for the given command ID.</source>
          <target state="translated">지정한 명령 id입니다. 로컬 폼이 먼저 검색</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
          <source>If it is found, it is invoked.</source>
          <target state="translated">가 있을 경우에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
          <source>Otherwise, the command ID is passed to the global environment command handler, if one is available.</source>
          <target state="translated">그렇지 않은 경우 명령 ID는 사용 가능한 경우 글로벌 환경 명령 처리기에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
          <source>The command to invoke.</source>
          <target state="translated">호출할 명령입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
          <source>A parameter for the invocation.</source>
          <target state="translated">호출에 사용할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
          <source>Invokes the given command with the given parameter on the local form or in the global environment.</source>
          <target state="translated">로컬 폼이나 전역 환경에서 특정 매개 변수를 사용하여 특정 명령을 호출합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the command was found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">명령이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
          <source>The local form is first searched for the given command ID.</source>
          <target state="translated">지정한 명령 id입니다. 로컬 폼이 먼저 검색</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
          <source>If it is found, it is invoked.</source>
          <target state="translated">가 있을 경우에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
          <source>Otherwise, the command ID is passed to the global environment command handler, if one is available.</source>
          <target state="translated">그렇지 않은 경우 명령 ID는 사용 가능한 경우 글로벌 환경 명령 처리기에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
          <source>Occurs when the status of a menu command has changed.</source>
          <target state="translated">메뉴 명령 상태가 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A&gt;</ph> method is called by a menu command when its status has changed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A&gt;</ph> 메서드는 상태가 변경 되었음을 때 메뉴 명령에 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
          <source>The command to remove.</source>
          <target state="translated">제거할 명령입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
          <source>Removes the given menu command from the document.</source>
          <target state="translated">문서에서 특정 메뉴 명령을 제거합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
          <source>If there are no more commands in the command group, the group is removed.</source>
          <target state="translated">명령 그룹에 더 이상 명령이 있는 경우에 그룹은 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
          <source><ph id="ph1">&lt;paramref name="command" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="command" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
          <source>The verb to remove.</source>
          <target state="translated">제거할 동사입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
          <source>Removes the given verb from the document.</source>
          <target state="translated">문서에서 특정 동사를 제거합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
          <source><ph id="ph1">&lt;paramref name="verb" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="verb" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
          <source>The shortcut menu to display.</source>
          <target state="translated">표시할 바로 가기 메뉴입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
          <source>The x-coordinate of the shortcut menu's location.</source>
          <target state="translated">바로 가기 메뉴 위치의 x 좌표입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
          <source>The y-coordinate of the shortcut menu's location.</source>
          <target state="translated">바로 가기 메뉴 위치의 y 좌표입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
          <source>Shows the shortcut menu with the given command ID at the given location.</source>
          <target state="translated">특정 위치에서 특정 명령 ID가 있는 바로 가기 메뉴를 표시합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
          <source>The default implementation does nothing.</source>
          <target state="translated">기본 구현은 아무 작업도 수행하지 않습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>Gets a collection of the designer verbs that are currently available.</source>
          <target state="translated">현재 사용할 수 있는 디자이너 동사의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /&gt;</ph> of the designer verbs that are currently available.</source>
          <target state="translated">현재 사용할 수 있는 디자이너 동사의 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A&gt;</ph> property provides a collection of verbs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A&gt;</ph> 속성 동사 컬렉션을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>These verbs come from two places:</source>
          <target state="translated">두 위치에서 이러한 동사를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>Verbs added through the <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A&gt;</ph> method of <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A&gt;</ph>.</source>
          <target state="translated">통해 추가 된 동사는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A&gt;</ph> 방식의 <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>Verbs offered by the currently selected designer.</source>
          <target state="translated">현재 선택 된 디자이너에서 제공 하는 동사입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>Verbs added to this service through the <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A&gt;</ph> method are called global verbs because they are global to this service, but generally there is one instance of this service for each tool or document window.</source>
          <target state="translated">통해이 서비스에 추가 된 동사는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A&gt;</ph> 메서드는이 서비스에 있지만 일반적으로 각 도구 또는 문서 창에 대 한이 서비스의 인스턴스 하나 때문에 전역 동사 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>Designer verbs are obtained by querying the service provider for <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.Design.ISelectionService&gt;</ph>.</source>
          <target state="translated">디자이너 동사에 대 한 서비스 공급자를 쿼리하여 가져온 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ComponentModel.Design.ISelectionService&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>If the selection service offers a primary selection, and a designer can be obtained for that selection from <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph>, the designer’s verbs are added to this list.</source>
          <target state="translated">선택 영역 서비스에서 기본 선택을 제공 하 고 디자이너에서 해당 선택을 얻을 수 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph>, 디자이너 동사는이 목록에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>If the name of a global verb conflicts with the name of a designer verb, the designer-provided designer verb takes precedence.</source>
          <target state="translated">전역 동사의 이름이 디자이너 동사의 이름으로 충돌을 디자이너에서 제공 된 디자이너 동사 우선적으로 적용 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>