<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDesignerFilter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5805c7cd0acdb03070f0db4f5eea4cf81ee1b03b9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">805c7cd0acdb03070f0db4f5eea4cf81ee1b03b9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.IDesignerFilter">
          <source>Provides an interface that enables a designer to access and filter the dictionaries of a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment.</source>
          <target state="translated">구성 요소 디자이너에서 디자인 타임 환경에 노출될 수 있는 속성, 특성 및 이벤트 설명자가 저장되어 있는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>의 사전을 디자이너에서 액세스하고 필터링할 수 있도록 인터페이스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerFilter">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter&gt;</ph> enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter&gt;</ph> 디자이너를 통해 연결 된 해당 구성 요소가 노출 하는 속성, 특성 및 이벤트 설명자의 집합을 필터링 할 수 있도록는 <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerFilter">
          <source>The methods of this interface whose names begin with <ph id="ph1">`Pre`</ph> are called immediately before the methods whose names begin with <ph id="ph2">`Post`</ph>.</source>
          <target state="translated">이름이로 시작 하는이 인터페이스의 메서드 <ph id="ph1">`Pre`</ph> 로 시작 하는 이름이 메서드 직전에 호출 된 <ph id="ph2">`Post`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerFilter">
          <source>If you want to add attribute, event, or property descriptors, use a <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A&gt;</ph> method.</source>
          <target state="translated">특성, 이벤트 또는 속성 설명자를 추가 하려는 경우 사용 하 여 한 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerFilter">
          <source>If you want to change or remove attribute, event, or property descriptors, use a <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A&gt;</ph> method.</source>
          <target state="translated">변경 하거나 특성, 이벤트 또는 속성 설명자를 사용 하 여 제거 하려는 경우는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerFilter">
          <source>The following example demonstrates an override of <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A&gt;</ph> that adds a property of the designer to the Properties window when the designer's control is selected at design time.</source>
          <target state="translated">다음 예제에서는 재정의 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A&gt;</ph> 디자이너의 컨트롤을 디자인 타임에 선택할 때 속성 창에 디자이너의 속성을 추가 하는 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerFilter">
          <source>See the example for the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.ControlDesigner&gt;</ph> class for a complete designer example that uses the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerFilter&gt;</ph> interface.</source>
          <target state="translated">예를 참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Design.ControlDesigner&gt;</ph> 사용 하는 완전 한 디자이너 예제에 대 한 클래스는 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerFilter&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> objects for the class of the component.</source>
          <target state="translated">구성 요소의 클래스에 대한 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>The keys in the dictionary of attributes are the <ph id="ph1">&lt;see cref="P:System.Attribute.TypeId" /&gt;</ph> values of the attributes.</source>
          <target state="translated">특성의 사전에 포함된 키는 특성의 <ph id="ph1">&lt;see cref="P:System.Attribute.TypeId" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의할 때 디자이너에서 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>를 통해 노출된 특성 집합에서 항목을 변경하거나 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">이 메서드는 변경 하거나이 인터페이스를 구현 하는 디자이너의 연결된 된 구성 요소를 통해 노출 하는 특성의 사전에서 항목을 제거 하는 방법을 제공는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>The keys in the dictionary of attributes are the type IDs of the attributes.</source>
          <target state="translated">특성의 사전 키는 특성의 형식 Id입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>The objects are of type <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</source>
          <target state="translated">형식의 개체는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>This method is called immediately after <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A&gt;</ph>.</source>
          <target state="translated">바로 뒤에이 메서드는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>The type ID of an attribute can be any object.</source>
          <target state="translated">유형 ID 특성의 모든 개체 일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>By default, <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> returns its <ph id="ph2">&lt;xref:System.Type&gt;</ph> as the value of its <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> property.</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 반환 해당 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 의 값으로 해당 <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>You can check the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> of an attribute in the dictionary for equivalence with a known <ph id="ph2">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> for an attribute to identify it, or use <ph id="ph3">&lt;xref:System.Reflection&gt;</ph> to identify the attribute object itself.</source>
          <target state="translated">확인할 수 있습니다는 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> 알려진 같은지 사전에 있는 특성의 <ph id="ph2">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> 여 특성을 식별 하거나, 사용 하 여 <ph id="ph3">&lt;xref:System.Reflection&gt;</ph> 자체 특성 개체를 식별 하 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>When an attribute that has the same <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</source>
          <target state="translated">같은 특성 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> 새 특성이 이전 특성을 대체 기존 또는 상속 된 특성은 구성 요소에 추가 되 면입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>For many attributes, a new attribute of the same type will replace any previous attribute of the type.</source>
          <target state="translated">많은 특성에 대해 동일한 유형의 새 특성을 형식의 이전 특성을 바뀝니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>However, some types of attributes return a <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that distinguishes the attribute selectively.</source>
          <target state="translated">그러나 일부 유형의 특성을 반환할는 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> 특성을 선택적으로 구별 하는 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>For example, in order to provide different types of simultaneously active designers for a type, such as an <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> and an <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph>, the <ph id="ph3">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> class returns a <ph id="ph4">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that uniquely identifies both the attribute and the base designer type.</source>
          <target state="translated">예를 들어, 한 형식에 대 한와 같은 다양 한 유형의 동시에 활성 디자이너를 제공 하기 위해는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> 반환 클래스는 <ph id="ph4">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> 고유 하 게 식별 하는 특성 및 기본 디자이너 모두 입력 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> returns a <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that reflects this.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> 생성자를 사용 하면 특정 종류를 사용 하는 디자이너의 디자이너 기본 형식을 지정 하 고 <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> 반환는 <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> 이 반영 하 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>Therefore when you add a new <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> with a base designer type of the same type as the base designer type of an existing <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, the old attribute is replaced with the new attribute.</source>
          <target state="translated">따라서 추가 하는 경우 새 <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> 기존의 기본 디자이너 유형으로 동일한 형식의 기본를 디자이너 형식과 <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, 기존 특성 새 특성으로 대체 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>You can directly filter the dictionary that is accessible through the <ph id="ph1">&lt;paramref name="attributes" /&gt;</ph> parameter, or you can leave it unchanged.</source>
          <target state="translated">통해 액세스할 수 있는 사전의 직접 필터링 할 수 있습니다는 <ph id="ph1">&lt;paramref name="attributes" /&gt;</ph> 매개 변수 또는 있습니다 변경 되지 않은 둘 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>If you are overriding this method, call the base implementation after you perform your own filtering.</source>
          <target state="translated">이 메서드를 재정의 하는 경우 필터링을 수행 하 고 나면 기본 구현을 호출 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> objects that represent the events of the class of the component.</source>
          <target state="translated">구성 요소 클래스의 이벤트를 나타내는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>The keys in the dictionary of events are event names.</source>
          <target state="translated">이벤트의 사전에 포함된 키는 이벤트 이름입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의할 때 디자이너에서 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>를 통해 노출된 이벤트 집합에서 항목을 변경하거나 제거하도록 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>This method provides a way to change or remove items within the dictionary of events that are exposed through a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">이 메서드를 통해 노출 되는 이벤트의 사전에서 항목을 제거 하거나 변경 하는 방법을 제공는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>The keys in the dictionary of events are the names of the events.</source>
          <target state="translated">이벤트의 사전 키는 이벤트의 이름입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>The objects are of type <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph>.</source>
          <target state="translated">형식의 개체는 <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>This method is called immediately after <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A&gt;</ph>.</source>
          <target state="translated">바로 뒤에이 메서드는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>You can directly filter the dictionary that is accessible through the <ph id="ph1">&lt;paramref name="events" /&gt;</ph> parameter, or you can leave it unchanged.</source>
          <target state="translated">통해 액세스할 수 있는 사전의 직접 필터링 할 수 있습니다는 <ph id="ph1">&lt;paramref name="events" /&gt;</ph> 매개 변수 또는 있습니다 변경 되지 않은 둘 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>If you are overriding this method, call the base implementation after you perform your own filtering.</source>
          <target state="translated">이 메서드를 재정의 하는 경우 필터링을 수행 하 고 나면 기본 구현을 호출 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> objects that represent the properties of the class of the component.</source>
          <target state="translated">구성 요소 클래스의 속성을 나타내는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>The keys in the dictionary of properties are property names.</source>
          <target state="translated">속성의 사전에 포함된 키는 속성 이름입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의할 때 디자이너에서 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>를 통해 노출된 속성 집합에서 항목을 변경하거나 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>This method provides a way to change or remove items within the dictionary of properties that are exposed through a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">이 메서드를 통해 노출 되는 속성의 사전에서 항목을 제거 하거나 변경 하는 방법을 제공는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>The keys in the dictionary of properties are the names of the properties.</source>
          <target state="translated">속성의 사전 키는 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>The objects are of type <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">형식의 개체는 <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>This method is called immediately after <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A&gt;</ph>.</source>
          <target state="translated">바로 뒤에이 메서드는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>You can directly filter the dictionary that is accessible through the <ph id="ph1">&lt;paramref name="properties" /&gt;</ph> parameter, or you can leave it unchanged.</source>
          <target state="translated">통해 액세스할 수 있는 사전의 직접 필터링 할 수 있습니다는 <ph id="ph1">&lt;paramref name="properties" /&gt;</ph> 매개 변수 또는 있습니다 변경 되지 않은 둘 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>If you are overriding this method, call the base implementation after you perform your own filtering.</source>
          <target state="translated">이 메서드를 재정의 하는 경우 필터링을 수행 하 고 나면 기본 구현을 호출 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> objects for the class of the component.</source>
          <target state="translated">구성 요소의 클래스에 대한 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>The keys in the dictionary of attributes are the <ph id="ph1">&lt;see cref="P:System.Attribute.TypeId" /&gt;</ph> values of the attributes.</source>
          <target state="translated">특성의 사전에 포함된 키는 특성의 <ph id="ph1">&lt;see cref="P:System.Attribute.TypeId" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의할 때 디자이너에서 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>를 통해 노출된 특성 집합에 항목을 추가하도록 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">이 메서드는이 인터페이스를 구현 하는 디자이너의 연결된 된 구성 요소를 통해 노출 하는 특성의 사전에 항목을 추가 하는 방법을 제공는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>The keys in the dictionary of attributes are the type IDs of the attributes.</source>
          <target state="translated">특성의 사전 키는 특성의 형식 Id입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>The objects are of type <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</source>
          <target state="translated">형식의 개체는 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>This method is called immediately before <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A&gt;</ph>.</source>
          <target state="translated">바로 앞에이 메서드는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>The type ID of an attribute can be any object.</source>
          <target state="translated">유형 ID 특성의 모든 개체 일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>By default, <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> returns its <ph id="ph2">&lt;xref:System.Type&gt;</ph> as the value of its <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> property.</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 반환 해당 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 의 값으로 해당 <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>You can check the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> of an attribute in the dictionary for equivalence with a known <ph id="ph2">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> for an attribute to identify it, or use <ph id="ph3">&lt;xref:System.Reflection&gt;</ph> to identify the attribute object itself.</source>
          <target state="translated">확인할 수 있습니다는 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> 알려진 같은지 사전에 있는 특성의 <ph id="ph2">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> 여 특성을 식별 하거나, 사용 하 여 <ph id="ph3">&lt;xref:System.Reflection&gt;</ph> 자체 특성 개체를 식별 하 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>When an attribute that has the same <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</source>
          <target state="translated">같은 특성 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> 새 특성이 이전 특성을 대체 기존 또는 상속 된 특성은 구성 요소에 추가 되 면입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>For many attributes, a new attribute of the same type will replace any previous attribute of the type.</source>
          <target state="translated">많은 특성에 대해 동일한 유형의 새 특성을 형식의 이전 특성을 바뀝니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>However, some types of attributes return a <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that distinguishes the attribute selectively.</source>
          <target state="translated">그러나 일부 유형의 특성을 반환할는 <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> 특성을 선택적으로 구별 하는 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>For example, in order to provide different types of simultaneously active designers for a type, such as an <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> and an <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph>, the <ph id="ph3">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> class returns a <ph id="ph4">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that uniquely identifies both the attribute and the base designer type.</source>
          <target state="translated">예를 들어, 한 형식에 대 한와 같은 다양 한 유형의 동시에 활성 디자이너를 제공 하기 위해는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> 반환 클래스는 <ph id="ph4">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> 고유 하 게 식별 하는 특성 및 기본 디자이너 모두 입력 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> returns a <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that reflects this.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> 생성자를 사용 하면 특정 종류를 사용 하는 디자이너의 디자이너 기본 형식을 지정 하 고 <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> 반환는 <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> 이 반영 하 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>Therefore when you add a new <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> with a base designer type of the same type as the base designer type of an existing <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, the old attribute is replaced with the new attribute.</source>
          <target state="translated">따라서 추가 하는 경우 새 <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> 기존의 기본 디자이너 유형으로 동일한 형식의 기본를 디자이너 형식과 <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, 기존 특성 새 특성으로 대체 됩니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>You can directly filter the dictionary that is accessible through the <ph id="ph1">&lt;paramref name="attributes" /&gt;</ph> parameter, or you can leave it unchanged.</source>
          <target state="translated">통해 액세스할 수 있는 사전의 직접 필터링 할 수 있습니다는 <ph id="ph1">&lt;paramref name="attributes" /&gt;</ph> 매개 변수 또는 있습니다 변경 되지 않은 둘 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>If you are overriding this method, call the base implementation after you perform your own filtering.</source>
          <target state="translated">이 메서드를 재정의 하는 경우 필터링을 수행 하 고 나면 기본 구현을 호출 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> objects that represent the events of the class of the component.</source>
          <target state="translated">구성 요소 클래스의 이벤트를 나타내는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>The keys in the dictionary of events are event names.</source>
          <target state="translated">이벤트의 사전에 포함된 키는 이벤트 이름입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의할 때 디자이너에서 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>를 통해 노출된 이벤트 집합에 항목을 추가하도록 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>This method provides a way to add items to the dictionary of events that a designer exposes through a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">이 메서드는 디자이너를 통해 노출 하는 이벤트의 사전에 항목을 추가 하는 방법을 제공는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>The keys in the dictionary of events are the names of the events.</source>
          <target state="translated">이벤트의 사전 키는 이벤트의 이름입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>The objects are of type <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph>.</source>
          <target state="translated">형식의 개체는 <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>This method is called immediately before <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A&gt;</ph>.</source>
          <target state="translated">바로 앞에이 메서드는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>You can directly modify the dictionary that is accessible through the <ph id="ph1">&lt;paramref name="events" /&gt;</ph> parameter, or you can leave it unchanged.</source>
          <target state="translated">통해 액세스할 수 있는 사전을 직접 수정할 수 있습니다는 <ph id="ph1">&lt;paramref name="events" /&gt;</ph> 매개 변수 또는 있습니다 변경 되지 않은 둘 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>If you are overriding this method, call the base implementation before you perform your own filtering.</source>
          <target state="translated">이 메서드를 재정의 하는 경우 필터링을 수행 하기 전에 기본 구현을 호출 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> objects that represent the properties of the class of the component.</source>
          <target state="translated">구성 요소 클래스의 속성을 나타내는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>The keys in the dictionary of properties are property names.</source>
          <target state="translated">속성의 사전에 포함된 키는 속성 이름입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의할 때 디자이너에서 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>를 통해 노출된 속성 집합에 항목을 추가하도록 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>This method provides a way to add items to the dictionary of properties that a designer exposes through a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">이 메서드는 디자이너를 통해 노출 되는 속성의 사전에 항목을 추가 하는 방법을 제공는 <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>The keys in the dictionary of properties are the names of the properties.</source>
          <target state="translated">속성의 사전 키는 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>The objects are of type <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">형식의 개체는 <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>This method is called immediately before <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A&gt;</ph>.</source>
          <target state="translated">바로 앞에이 메서드는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>You can directly modify the dictionary that is accessible through the <ph id="ph1">&lt;paramref name="properties" /&gt;</ph> parameter, or you can leave it unchanged.</source>
          <target state="translated">통해 액세스할 수 있는 사전을 직접 수정할 수 있습니다는 <ph id="ph1">&lt;paramref name="properties" /&gt;</ph> 매개 변수 또는 있습니다 변경 되지 않은 둘 수 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>If you are overriding this method, call the base implementation before you perform your own filtering.</source>
          <target state="translated">이 메서드를 재정의 하는 경우 필터링을 수행 하기 전에 기본 구현을 호출 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>