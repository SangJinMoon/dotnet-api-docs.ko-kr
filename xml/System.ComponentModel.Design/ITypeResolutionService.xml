<Type Name="ITypeResolutionService" FullName="System.ComponentModel.Design.ITypeResolutionService">
  <TypeSignature Language="C#" Value="public interface ITypeResolutionService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeResolutionService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeResolutionService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeResolutionService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeResolutionService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="da29e-101">어셈블리나 형식을 이름으로 검색하는 인터페이스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-101">Provides an interface to retrieve an assembly or type by name.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da29e-102">이 서비스는 디자인 타임에 형식을 로드에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-102">This service is used to load types at design time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da29e-103">다음 예제에서는 컨트롤의 메서드를 호출 인터페이스를 제공 된 <xref:System.ComponentModel.Design.ITypeResolutionService> 디자인 모드.</span><span class="sxs-lookup"><span data-stu-id="da29e-103">The following example control provides an interface to call methods of the <xref:System.ComponentModel.Design.ITypeResolutionService> from design mode.</span></span>  
  
 [!code-cpp[ITypeResolutionServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeResolutionServiceExample/CPP/ityperesolutionservicecontrol.cpp#1)]
 [!code-csharp[ITypeResolutionServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeResolutionServiceExample/CS/ityperesolutionservicecontrol.cs#1)]
 [!code-vb[ITypeResolutionServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeResolutionServiceExample/VB/ityperesolutionservicecontrol.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAssembly">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="da29e-104">요청한 어셈블리를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-104">Gets the requested assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetAssembly (System.Reflection.AssemblyName name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetAssembly(class System.Reflection.AssemblyName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAssembly (name As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetAssembly(System::Reflection::AssemblyName ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="da29e-105">검색할 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-105">The name of the assembly to retrieve.</span></span></param>
        <summary><span data-ttu-id="da29e-106">요청한 어셈블리를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-106">Gets the requested assembly.</span></span></summary>
        <returns><span data-ttu-id="da29e-107">요청한 어셈블리의 인스턴스이거나, 어셈블리가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-107">An instance of the requested assembly, or <see langword="null" /> if no assembly can be located.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetAssembly (System.Reflection.AssemblyName name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetAssembly(class System.Reflection.AssemblyName name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAssembly (name As AssemblyName, throwOnError As Boolean) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetAssembly(System::Reflection::AssemblyName ^ name, bool throwOnError);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="da29e-108">검색할 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-108">The name of the assembly to retrieve.</span></span></param>
        <param name="throwOnError">
          <span data-ttu-id="da29e-109">어셈블리를 찾을 수 없는 경우 이 메서드가 예외를 throw하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 그리고 어셈블리를 찾을 수 없는 경우 이 메서드는 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-109"><see langword="true" /> if this method should throw an exception if the assembly cannot be located; otherwise, <see langword="false" />, and this method returns <see langword="null" /> if the assembly cannot be located.</span></span></param>
        <summary><span data-ttu-id="da29e-110">요청한 어셈블리를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-110">Gets the requested assembly.</span></span></summary>
        <returns><span data-ttu-id="da29e-111">요청한 어셈블리의 인스턴스이거나, 어셈블리가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-111">An instance of the requested assembly, or <see langword="null" /> if no assembly can be located.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathOfAssembly">
      <MemberSignature Language="C#" Value="public string GetPathOfAssembly (System.Reflection.AssemblyName name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPathOfAssembly(class System.Reflection.AssemblyName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPathOfAssembly (name As AssemblyName) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPathOfAssembly(System::Reflection::AssemblyName ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="da29e-112">어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-112">The name of the assembly.</span></span></param>
        <summary><span data-ttu-id="da29e-113">어셈블리가 로드된 파일의 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-113">Gets the path to the file from which the assembly was loaded.</span></span></summary>
        <returns><span data-ttu-id="da29e-114">어셈블리가 로드된 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-114">The path to the file from which the assembly was loaded.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="da29e-115">지정된 이름으로 형식을 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-115">Loads a type with the specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="da29e-116">형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-116">The name of the type.</span></span> <span data-ttu-id="da29e-117">형식 이름이 어셈블리를 나타내는 정규화된 이름이 아니면 이 서비스는 참조된 어셈블리의 내부 집합을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-117">If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</span></span></param>
        <summary><span data-ttu-id="da29e-118">지정된 이름으로 형식을 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-118">Loads a type with the specified name.</span></span></summary>
        <returns><span data-ttu-id="da29e-119">지정된 이름에 일치하는 <see cref="T:System.Type" />의 인스턴스이거나, 형식을 찾을 수 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-119">An instance of <see cref="T:System.Type" /> that corresponds to the specified name, or <see langword="null" /> if no type can be found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, throwOnError As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name, bool throwOnError);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="da29e-120">형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-120">The name of the type.</span></span> <span data-ttu-id="da29e-121">형식 이름이 어셈블리를 나타내는 정규화된 이름이 아니면 이 서비스는 참조된 어셈블리의 내부 집합을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-121">If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</span></span></param>
        <param name="throwOnError">
          <span data-ttu-id="da29e-122">어셈블리를 찾을 수 없는 경우 이 메서드가 예외를 throw하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 그리고 어셈블리를 찾을 수 없는 경우 이 메서드는 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-122"><see langword="true" /> if this method should throw an exception if the assembly cannot be located; otherwise, <see langword="false" />, and this method returns <see langword="null" /> if the assembly cannot be located.</span></span></param>
        <summary><span data-ttu-id="da29e-123">지정된 이름으로 형식을 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-123">Loads a type with the specified name.</span></span></summary>
        <returns><span data-ttu-id="da29e-124">지정된 이름에 일치하는 <see cref="T:System.Type" />의 인스턴스이거나, 형식을 찾을 수 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-124">An instance of <see cref="T:System.Type" /> that corresponds to the specified name, or <see langword="null" /> if no type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da29e-125">형식을 로드할 수 없는 경우와 `throwOnError` 매개 변수는 `true`,이 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-125">If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="da29e-126">형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-126">The name of the type.</span></span> <span data-ttu-id="da29e-127">형식 이름이 어셈블리를 나타내는 정규화된 이름이 아니면 이 서비스는 참조된 어셈블리의 내부 집합을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-127">If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</span></span></param>
        <param name="throwOnError">
          <span data-ttu-id="da29e-128">어셈블리를 찾을 수 없는 경우 이 메서드가 예외를 throw하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 그리고 어셈블리를 찾을 수 없는 경우 이 메서드는 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-128"><see langword="true" /> if this method should throw an exception if the assembly cannot be located; otherwise, <see langword="false" />, and this method returns <see langword="null" /> if the assembly cannot be located.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="da29e-129">형식을 검색할 때 대/소문자를 무시하려면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-129"><see langword="true" /> to ignore case when searching for types; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="da29e-130">지정된 이름으로 형식을 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-130">Loads a type with the specified name.</span></span></summary>
        <returns><span data-ttu-id="da29e-131">지정된 이름에 일치하는 <see cref="T:System.Type" />의 인스턴스이거나, 형식을 찾을 수 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-131">An instance of <see cref="T:System.Type" /> that corresponds to the specified name, or <see langword="null" /> if no type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da29e-132">형식을 로드할 수 없는 경우와 `throwOnError` 매개 변수는 `true`,이 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-132">If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceAssembly">
      <MemberSignature Language="C#" Value="public void ReferenceAssembly (System.Reflection.AssemblyName name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReferenceAssembly(class System.Reflection.AssemblyName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReferenceAssembly (name As AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReferenceAssembly(System::Reflection::AssemblyName ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="da29e-133">참조할 어셈블리를 나타내는 <see cref="T:System.Reflection.AssemblyName" />입니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-133">An <see cref="T:System.Reflection.AssemblyName" /> that indicates the assembly to reference.</span></span></param>
        <summary><span data-ttu-id="da29e-134">참조를 지정된 어셈블리에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-134">Adds a reference to the specified assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da29e-135">어셈블리에 대 한 참조에이 서비스에 추가 되 면이 서비스는 어셈블리를 지정 하지 않는 이름에서 형식을 로드할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="da29e-135">Once a reference to an assembly has been added to this service, this service can load types from names that do not specify an assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.AssemblyName" />
      </Docs>
    </Member>
  </Members>
</Type>