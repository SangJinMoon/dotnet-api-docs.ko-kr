<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IRootDesigner.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac580c2d03219a2b17d65f5f0265220dde2e841b449.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">80c2d03219a2b17d65f5f0265220dde2e841b449</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.IRootDesigner">
          <source>Provides support for root-level designer view technologies.</source>
          <target state="translated">루트 수준 디자이너 뷰 기술을 지원합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IRootDesigner">
          <source>A root designer is the designer that is in the top position, or root, of the current design-time document object hierarchy.</source>
          <target state="translated">루트 디자이너는 디자이너에는 위쪽 위치 또는 현재 문서 디자인 타임 개체 계층의 루트입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IRootDesigner">
          <source>A root designer must implement the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> interface.</source>
          <target state="translated">루트 디자이너를 구현 해야 합니다는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IRootDesigner">
          <source>A root designer typically manages the background view in designer view mode, and usually displays the controls within the base container of the current design time project.</source>
          <target state="translated">루트 디자이너는 일반적으로 디자이너 보기 모드에서 백그라운드 보기를 관리 하 고 일반적으로 현재 디자인 타임 프로젝트의 기본 컨테이너 내에서 컨트롤을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IRootDesigner">
          <source>The following code example demonstrates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> implementation associated with a sample user control.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> 샘플 사용자 컨트롤과 관련 구현입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IRootDesigner">
          <source>This <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> implementation displays a control for the background view in designer view by overriding the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IRootDesigner.GetView%2A&gt;</ph> method.</source>
          <target state="translated">이 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> 구현을 재정의 하 여 디자이너 뷰에서 배경 보기에 대 한 컨트롤을 표시는 <ph id="ph2">&lt;xref:System.ComponentModel.Design.IRootDesigner.GetView%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IRootDesigner">
          <source>You need to add a reference to the System.Design assembly to compile the example.</source>
          <target state="translated">예제를 컴파일하려면 System.Design 어셈블리에 대 한 참조를 추가 해야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IRootDesigner">
          <source>To use this example, add the source code to a project and show the <ph id="ph1">`RootViewSampleComponent`</ph> in designer view to display the custom root designer view.</source>
          <target state="translated">이 예제를 사용 하려면 프로젝트에 소스 코드를 추가 하 고 표시는 <ph id="ph1">`RootViewSampleComponent`</ph> 디자이너 보기 사용자 지정 루트 디자이너 보기를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ViewTechnology" /&gt;</ph> that indicates a particular view technology.</source>
          <target state="translated">특정 뷰 기술을 나타내는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ViewTechnology" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>Gets a view object for the specified view technology.</source>
          <target state="translated">지정한 뷰 기술에 대한 뷰 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>An object that represents the view for this designer.</source>
          <target state="translated">해당 디자이너에 대한 뷰를 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>This method returns a view object that can present a user interface to the user.</source>
          <target state="translated">이 메서드는 사용자에 게 사용자 인터페이스를 제공할 수 있는 뷰 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>The returned data type is an <ph id="ph1">&lt;xref:System.Object&gt;</ph>, because there can be a variety of different user interface technologies.</source>
          <target state="translated">반환 된 데이터 형식이 <ph id="ph1">&lt;xref:System.Object&gt;</ph>다양 한 사용자 인터페이스 기술이 수 있기 때문에, 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>Development environments typically support more than one technology.</source>
          <target state="translated">개발 환경에는 일반적으로 둘 이상의 기술을 지원합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Passthrough?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.Design.ViewTechnology.WindowsForms?displayProperty=nameWithType&gt;</ph> fields are obsolete.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Passthrough?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ComponentModel.Design.ViewTechnology.WindowsForms?displayProperty=nameWithType&gt;</ph> 필드는 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>Use <ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Default?displayProperty=nameWithType&gt;</ph> for new designer implementations.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Default?displayProperty=nameWithType&gt;</ph> 새 구현 되는 디자이너에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>The specified view technology is not supported or does not exist.</source>
          <target state="translated">지정한 뷰 기술이 지원되지 않거나 없는 경우</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies">
          <source>Gets the set of technologies that this designer can support for its display.</source>
          <target state="translated">해당 디자이너에서 표시하기 위해 지원할 수 있는 기술을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies">
          <source>An array of supported <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ViewTechnology" /&gt;</ph> values.</source>
          <target state="translated">지원되는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ViewTechnology" /&gt;</ph> 값의 배열입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology&gt;</ph> enumeration indicates the supported view technologies.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology&gt;</ph> 열거형은 지원 되는 뷰 기술을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Passthrough?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.Design.ViewTechnology.WindowsForms?displayProperty=nameWithType&gt;</ph> fields are obsolete.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Passthrough?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ComponentModel.Design.ViewTechnology.WindowsForms?displayProperty=nameWithType&gt;</ph> 필드는 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies">
          <source>Use <ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Default?displayProperty=nameWithType&gt;</ph> for new designer implementations.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Default?displayProperty=nameWithType&gt;</ph> 새 구현 되는 디자이너에 대 한 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>