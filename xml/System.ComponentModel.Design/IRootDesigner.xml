<Type Name="IRootDesigner" FullName="System.ComponentModel.Design.IRootDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80c2d03219a2b17d65f5f0265220dde2e841b449" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30366167" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRootDesigner : IDisposable, System.ComponentModel.Design.IDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRootDesigner implements class System.ComponentModel.Design.IDesigner, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IRootDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRootDesigner&#xA;Implements IDesigner, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRootDesigner : IDisposable, System::ComponentModel::Design::IDesigner" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>루트 수준 디자이너 뷰 기술을 지원합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 루트 디자이너는 디자이너에는 위쪽 위치 또는 현재 문서 디자인 타임 개체 계층의 루트입니다. 루트 디자이너를 구현 해야 합니다는 <xref:System.ComponentModel.Design.IRootDesigner> 인터페이스입니다. 루트 디자이너는 일반적으로 디자이너 보기 모드에서 백그라운드 보기를 관리 하 고 일반적으로 현재 디자인 타임 프로젝트의 기본 컨테이너 내에서 컨트롤을 표시 합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.ComponentModel.Design.IRootDesigner> 샘플 사용자 컨트롤과 관련 구현입니다. 이 <xref:System.ComponentModel.Design.IRootDesigner> 구현을 재정의 하 여 디자이너 뷰에서 배경 보기에 대 한 컨트롤을 표시는 <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> 메서드. 예제를 컴파일하려면 System.Design 어셈블리에 대 한 참조를 추가 해야 합니다.  
  
 이 예제를 사용 하려면 프로젝트에 소스 코드를 추가 하 고 표시는 `RootViewSampleComponent` 디자이너 보기 사용자 지정 루트 디자이너 보기를 표시 합니다.  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public object GetView (System.ComponentModel.Design.ViewTechnology technology);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetView(valuetype System.ComponentModel.Design.ViewTechnology technology) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetView (technology As ViewTechnology) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetView(System::ComponentModel::Design::ViewTechnology technology);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="technology" Type="System.ComponentModel.Design.ViewTechnology" />
      </Parameters>
      <Docs>
        <param name="technology">특정 뷰 기술을 나타내는 <see cref="T:System.ComponentModel.Design.ViewTechnology" />입니다.</param>
        <summary>지정한 뷰 기술에 대한 뷰 개체를 가져옵니다.</summary>
        <returns>해당 디자이너에 대한 뷰를 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 사용자에 게 사용자 인터페이스를 제공할 수 있는 뷰 개체를 반환 합니다. 반환 된 데이터 형식이 <xref:System.Object>다양 한 사용자 인터페이스 기술이 수 있기 때문에, 합니다. 개발 환경에는 일반적으로 둘 이상의 기술을 지원합니다.  
  
> [!NOTE]
>  <xref:System.ComponentModel.Design.ViewTechnology.Passthrough?displayProperty=nameWithType> 및 <xref:System.ComponentModel.Design.ViewTechnology.WindowsForms?displayProperty=nameWithType> 필드는 사용 되지 않습니다. 사용 하 여 <xref:System.ComponentModel.Design.ViewTechnology.Default?displayProperty=nameWithType> 새 구현 되는 디자이너에 대 한 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">지정한 뷰 기술이 지원되지 않거나 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportedTechnologies">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.ViewTechnology[] SupportedTechnologies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Design.ViewTechnology[] SupportedTechnologies" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportedTechnologies As ViewTechnology()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::ComponentModel::Design::ViewTechnology&gt; ^ SupportedTechnologies { cli::array &lt;System::ComponentModel::Design::ViewTechnology&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>해당 디자이너에서 표시하기 위해 지원할 수 있는 기술을 가져옵니다.</summary>
        <value>지원되는 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 값의 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.ViewTechnology> 열거형은 지원 되는 뷰 기술을 나타냅니다.  
  
> [!NOTE]
>  <xref:System.ComponentModel.Design.ViewTechnology.Passthrough?displayProperty=nameWithType> 및 <xref:System.ComponentModel.Design.ViewTechnology.WindowsForms?displayProperty=nameWithType> 필드는 사용 되지 않습니다. 사용 하 여 <xref:System.ComponentModel.Design.ViewTechnology.Default?displayProperty=nameWithType> 새 구현 되는 디자이너에 대 한 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>