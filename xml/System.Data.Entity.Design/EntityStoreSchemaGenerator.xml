<Type Name="EntityStoreSchemaGenerator" FullName="System.Data.Entity.Design.EntityStoreSchemaGenerator">
  <TypeSignature Language="C#" Value="public sealed class EntityStoreSchemaGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityStoreSchemaGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Design.EntityStoreSchemaGenerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityStoreSchemaGenerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityStoreSchemaGenerator sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b7fed-101">데이터베이스 스키마 정보 로드를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-101">Responsible for Loading Database Schema Information.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7fed-102">이곳의 콘텐츠는 업데이트되지 않습니다. 여기에 자료를 추가하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="b7fed-102">No content here will be updated; please do not add material here.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityStoreSchemaGenerator (string providerInvariantName, string connectionString, string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerInvariantName, string connectionString, string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerInvariantName As String, connectionString As String, namespaceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityStoreSchemaGenerator(System::String ^ providerInvariantName, System::String ^ connectionString, System::String ^ namespaceName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName"><span data-ttu-id="b7fed-103">공급자의 고정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-103">The invariant name of a provider.</span></span></param>
        <param name="connectionString"><span data-ttu-id="b7fed-104">데이터베이스를 여는 데 사용하는 연결입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-104">The connection used to open the database.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="b7fed-105">SSDL(저장소 스키마 정의 언어)의 네임스페이스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-105">The namespace name for the store schema definition language (SSDL).</span></span></param>
        <summary><span data-ttu-id="b7fed-106"><see cref="T:System.Data.Entity.Design.EntityStoreSchemaGenerator" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-106">Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityStoreSchemaGenerator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateStoreSchemaConnection">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7fed-107">저장소 스키마를 위해 공급자 메타데이터를 사용하여 로드되는 Entityconnection을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-107">Creates an EntityConnection loaded with the providers metadata for the store schema.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateStoreSchemaConnection">
      <MemberSignature Language="C#" Value="public static System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection (string providerInvariantName, string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection(string providerInvariantName, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateStoreSchemaConnection (providerInvariantName As String, connectionString As String) As EntityConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::EntityClient::EntityConnection ^ CreateStoreSchemaConnection(System::String ^ providerInvariantName, System::String ^ connectionString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName"><span data-ttu-id="b7fed-108">공급자의 고정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-108">The invariant name of a provider.</span></span></param>
        <param name="connectionString"><span data-ttu-id="b7fed-109">공급자 연결에 대한 연결입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-109">The connection for the providers connection.</span></span></param>
        <summary><span data-ttu-id="b7fed-110">저장소 스키마를 위해 공급자 메타데이터를 사용하여 로드되는 Entityconnection을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-110">Creates an EntityConnection loaded with the providers metadata for the store schema.</span></span></summary>
        <returns><span data-ttu-id="b7fed-111">공급자의 ConceptualSchemaDefinition을 쿼리할 수 있는 EntityConnection입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-111">An EntityConnection that can query the ConceptualSchemaDefinition for the provider.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStoreSchemaConnection">
      <MemberSignature Language="C#" Value="public static System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection (string providerInvariantName, string connectionString, Version targetEntityFrameworkVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection(string providerInvariantName, string connectionString, class System.Version targetEntityFrameworkVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(System.String,System.String,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateStoreSchemaConnection (providerInvariantName As String, connectionString As String, targetEntityFrameworkVersion As Version) As EntityConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::EntityClient::EntityConnection ^ CreateStoreSchemaConnection(System::String ^ providerInvariantName, System::String ^ connectionString, Version ^ targetEntityFrameworkVersion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="targetEntityFrameworkVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName"><span data-ttu-id="b7fed-112">공급자 고정 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-112">The provider invariant name.</span></span></param>
        <param name="connectionString"><span data-ttu-id="b7fed-113">공급자 연결에 대한 연결입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-113">The connection for the providers connection.</span></span></param>
        <param name="targetEntityFrameworkVersion"><span data-ttu-id="b7fed-114">대상이 되는 내부 엔터티 프레임워크 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-114">The internal Entity Framework version that is being targeted.</span></span></param>
        <summary><span data-ttu-id="b7fed-115">저장소 스키마를 위해 공급자 메타데이터를 사용하여 로드되는 Entityconnection을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-115">Creates an EntityConnection loaded with the providers metadata for the store schema.</span></span> <span data-ttu-id="b7fed-116">targetEntityFrameworkVersion 매개 변수는 <see cref="T:System.Data.Entity.Design.EntityFrameworkVersions" /> 클래스에 정의된 대로 내부 EntityFramework 버전 번호를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-116">Note that the targetEntityFrameworkVersion parameter uses internal EntityFramework version numbers as described in the <see cref="T:System.Data.Entity.Design.EntityFrameworkVersions" /> class.</span></span></summary>
        <returns><span data-ttu-id="b7fed-117">공급자의 ConceptualSchemaDefinition을 쿼리할 수 있는 EntityConnection입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-117">An EntityConnection that can query the ConceptualSchemaDefinition for the provider.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer EntityContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.EntityContainer EntityContainer" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityStoreSchemaGenerator.EntityContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityContainer As EntityContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::EntityContainer ^ EntityContainer { System::Data::Metadata::Edm::EntityContainer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7fed-118">만들어진 저장소 모델 EntityContainer를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-118">Gets the storage model EntityContainer that was created.</span></span></summary>
        <value><span data-ttu-id="b7fed-119">만들어진 저장소 모델 EntityContainer입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-119">The storage model EntityContainer that was created.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateForeignKeyProperties">
      <MemberSignature Language="C#" Value="public bool GenerateForeignKeyProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateForeignKeyProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateForeignKeyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateForeignKeyProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateForeignKeyProperties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7fed-120">저장소 모델에서 외래 키 속성을 생성하는 플래그를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-120">Gets or sets the flag for generating foreign key properties in a storage model.</span></span></summary>
        <value>
          <span data-ttu-id="b7fed-121">외래 키 속성이 저장소 모델 안에 생성되면 <see langword="True" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-121"><see langword="True" /> if foreign key properties are generated in the storage model; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateStoreMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7fed-122">저장소 메타데이터를 생성하고 모든 스키마 오류를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-122">Generates store metadata and returns any schema errors.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateStoreMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateStoreMetadata () As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateStoreMetadata();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b7fed-123">저장소 메타데이터를 생성하고 모든 스키마 오류를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-123">Generates store metadata and returns any schema errors.</span></span></summary>
        <returns><span data-ttu-id="b7fed-124">스키마 오류 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-124">The collection of schema error objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateStoreMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata (System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry})" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateStoreMetadata (filters As IEnumerable(Of EntityStoreSchemaFilterEntry)) As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateStoreMetadata(System::Collections::Generic::IEnumerable&lt;System::Data::Entity::Design::EntityStoreSchemaFilterEntry ^&gt; ^ filters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filters" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt;" />
      </Parameters>
      <Docs>
        <param name="filters"><span data-ttu-id="b7fed-125">생성 과정에서 허용하거나 제외할 데이터베이스 개체를 지정하는 EntityStoreSchemaFilterEntry입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-125">An EntityStoreSchemaFilterEntry that specifies which database objects to allow or exclude during generation.</span></span></param>
        <summary><span data-ttu-id="b7fed-126">저장소 메타데이터를 생성하고 모든 스키마 오류를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-126">Generates store metadata and returns any schema errors.</span></span></summary>
        <returns><span data-ttu-id="b7fed-127">스키마 오류 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-127">The collection of schema error objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateStoreMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata (System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; filters, Version targetEntityFrameworkVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; filters, class System.Version targetEntityFrameworkVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry},System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateStoreMetadata (filters As IEnumerable(Of EntityStoreSchemaFilterEntry), targetEntityFrameworkVersion As Version) As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateStoreMetadata(System::Collections::Generic::IEnumerable&lt;System::Data::Entity::Design::EntityStoreSchemaFilterEntry ^&gt; ^ filters, Version ^ targetEntityFrameworkVersion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filters" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt;" />
        <Parameter Name="targetEntityFrameworkVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="filters"><span data-ttu-id="b7fed-128">생성 과정에서 허용하거나 제외할 데이터베이스 개체를 지정하는 EntityStoreSchemaFilterEntry입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-128">An EntityStoreSchemaFilterEntry that specifies which database objects to allow or exclude during generation.</span></span></param>
        <param name="targetEntityFrameworkVersion"><span data-ttu-id="b7fed-129">Entity Framework의 대상 버전에 해당하는 EntityFrameworkVersions의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-129">The property of EntityFrameworkVersions that corresponds to the targeted version of the Entity Framework.</span></span></param>
        <summary><span data-ttu-id="b7fed-130">SSDL(저장소 스키마 정의 언어)을 생성하고 모든 스키마 오류를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-130">Generates store schema definition language (SSDL) and returns any schema errors.</span></span></summary>
        <returns><span data-ttu-id="b7fed-131">스키마 오류 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-131">The collection of schema error objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreItemCollection">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StoreItemCollection StoreItemCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.StoreItemCollection StoreItemCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityStoreSchemaGenerator.StoreItemCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoreItemCollection As StoreItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::StoreItemCollection ^ StoreItemCollection { System::Data::Metadata::Edm::StoreItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StoreItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7fed-132">만들어진 StoreItemCollection을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-132">Gets the StoreItemCollection that was created.</span></span></summary>
        <value><span data-ttu-id="b7fed-133">만든 <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-133">The created <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStoreSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7fed-134">생성된 SSDL(저장소 스키마 정의 언어)을 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-134">Writes the generated store schema definition language (SSDL) to a file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStoreSchema">
      <MemberSignature Language="C#" Value="public void WriteStoreSchema (string outputFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStoreSchema(string outputFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStoreSchema (outputFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStoreSchema(System::String ^ outputFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputFileName"><span data-ttu-id="b7fed-135">출력 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-135">The name of the output file.</span></span></param>
        <summary><span data-ttu-id="b7fed-136">생성된 SSDL(저장소 스키마 정의 언어)을 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-136">Writes the generated store schema definition language (SSDL) to a file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStoreSchema">
      <MemberSignature Language="C#" Value="public void WriteStoreSchema (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStoreSchema(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStoreSchema (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStoreSchema(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b7fed-137">SSDL을 쓸 XmlWriter입니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-137">The XmlWriter to which the SSDL is written.</span></span></param>
        <summary><span data-ttu-id="b7fed-138">생성된 SSDL(저장소 스키마 정의 언어)을 XmlWriter 개체에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="b7fed-138">Writes the generated store schema definition language (SSDL) to an XmlWriter object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>