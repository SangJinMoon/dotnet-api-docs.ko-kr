<Type Name="WebPartChrome" FullName="System.Web.UI.WebControls.WebParts.WebPartChrome">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf8a64e3b90f0d6ed31bb2c8e6d56a4de861db07" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36584481" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebPartChrome" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPartChrome extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />
  <TypeSignature Language="VB.NET" Value="Public Class WebPartChrome" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartChrome" />
  <TypeSignature Language="F#" Value="type WebPartChrome = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>개발자가 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 영역에서 서버 컨트롤 또는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />의 선택된 섹션에 대해서만 렌더링을 재정의할 수 있도록 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 파트의 크롬 각는 주변 사용자 인터페이스 (UI) 요소를 가리키는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 또는에 포함 된 서버 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역입니다. 컨트롤에 대 한 크롬 테두리, 제목 표시줄, 아이콘, 제목 텍스트 및 제목 표시줄에 나타나는 동사 메뉴가 포함 되어 있습니다. 크롬의 모양은 영역 수준에서 설정 되 고 영역에 있는 모든 서버 컨트롤에 적용 됩니다.  
  
 웹 파트 컨트롤 집합 사용 하 여는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 의 크롬에 렌더링 하는 클래스 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 이 클래스는 개발자 (예: 머리글 또는 바닥글)의 개별 만큼의 렌더링을 사용자 지정할 수 있는 방법을 제공 하는 또한는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 을 해당 컨트롤에 대 한 모든 렌더링이 처리할 필요 없이 영역입니다. 예를 들어 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle%2A> 특정 스타일 특성을 사용자 지정 하는 방법에 적용 된 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역을 나머지 부분을 처리 하는 기본 렌더링에 의존할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 클래스의 렌더링을 재정의 하려는 경우 도움이 되는 몇 가지 중요 한 메서드가 포함 되어 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 하나는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle%2A> 의 스타일 특성을 변경할 수 있는 메서드는 <xref:System.Web.UI.WebControls.Style> 연관 된 개체는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 컨트롤을 렌더링 하는 데 사용 되는 개체입니다. 다른 스냅숏이 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.%23ctor%2A> 생성자를 재정의할 때 사용는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome%2A> 메서드는 사용자 지정에서 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 사용자 지정의 인스턴스를 만드는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 개체입니다. 또 다른 유용한 방법은 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderPartContents%2A> 메서드는 머리글, 바닥글 및 제목 표시줄 같은 크롬 요소) (대비 영역에서 컨트롤의 콘텐츠 영역 렌더링을 제어 하는 데 사용할 수 있습니다. <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs%2A> 메서드를 사용 하면 어떤 이유로 경우 사용자에 게 UI에 이러한 동사를 표시 하지 않을 렌더링 될 특정 동사를 제외할 수 있습니다. 마지막으로, 모든 부분 렌더링을 완료 프로그래밍 방식으로 제어 하려는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderWebPart%2A> 메서드.  
  
 여러 속성을는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 클래스는도 유용 합니다. <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.Zone%2A> 및 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.WebPartManager%2A> 와 관련 된 영역에 대 한 참조를 제공 하는 속성은 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 개체와 현재 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 인스턴스를 각각.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 클래스에 대 한 기본 렌더링 재정의할 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역입니다.  
  
 이 코드 예제는 4 개의 구성 됩니다.  
  
-   웹 파트 페이지에서 디스플레이 모드를 변경할 수 있게 해 주는 사용자 정의 컨트롤입니다.  
  
-   이 예제에 있는 모든 컨트롤을 호스팅하는 웹 페이지입니다.  
  
-   사용자 지정에 대 한 소스 코드를 포함 하는 클래스 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역 및 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 클래스입니다.  
  
-   이 예제에서는 작동 하는 방식에 대해 설명 합니다.  
  
 코드 예제의 첫 번째 부분에 사용자 컨트롤입니다. 사용자 정의 컨트롤에 대 한 소스 코드는 다른 항목에서에서 제공 됩니다. 실행 되도록이 코드 예제에서는.ascx 파일에서 사용자 정의 컨트롤을 가져올 해야는 [연습: 웹 파트 페이지의 디스플레이 모드를 변경](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0) 항목과이 코드 예제에서.aspx 페이지와 같은 폴더에 있습니다.  
  
 예제의 두 번째 부분은 웹 페이지입니다. 한 `Register` 컴파일된 구성 요소와 태그 접두사를 등록 하는 파일의 맨 위 근처에 지시문입니다. 페이지 요소를 사용 하 여 사용자 지정 영역을 참조 하는 참고 또한 `<aspSample:MyZone>` 영역 내에서 여러 가지 표준 ASP.NET 서버 컨트롤을 포함 합니다. 서버 컨트롤에 모든 실제 기능을 구현 하지 않습니다. 설명 하기 위해 여기 사용 되는 방법을 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 클래스 기능은 렌더링 영역에 적용 합니다. 이러한 서버 컨트롤은 실제 아님 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 등을 각 자동으로 요소 (ASP.NET) 하 여를 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 런타임 시 동일한 기능을 갖추고 됩니다 있으므로 개체 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.  
  
 [!code-aspx-csharp[WebParts_WebPartChrome_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/CS/webpartchromecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartChrome_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/VB/webpartchromevb.aspx#1)]  
  
 코드 예제에서는 세 번째 부분은 사용자 지정에 대 한 소스 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역 및 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 클래스입니다. 이 코드 검사 사용자 지정 영역 클래스의 생성자에는 `MyZone.RenderVerbsInMenu` 속성입니다. 값이 `true`, 각각에 대 한 동사 메뉴에 렌더링 됩니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에서 컨트롤입니다. 이것이 웹 파트 컨트롤 집합에서 표준 기본 동작입니다. 경우는 `MyZone.RenderVerbsInMenu` 속성 값이 `false`, 사용자 지정이 영역에 기본값, 동사는 개별적으로 각 컨트롤의 제목 표시줄에 링크로 렌더링 됩니다. 웹 페이지에는 코드는 `<aspSample:MyZone>` 요소가 선언 된, 즉는 `RenderVerbsInMenu` 특성이로 설정 `true`, 동사에 컨트롤의 메뉴에 표시 되도록 합니다. 이 기능을 테스트 하려면 설정할 수 있습니다는 선언적 `RenderVerbsInMenu` 특성을 `false`, 동사 링크로 렌더링 되는 방식을 확인 합니다.  
  
 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 클래스 재정의 하 여 여러 가지 방법에 대 한 렌더링 및 사용자 지정 시간대의 인스턴스를 만듭니다.는 `MyWebPartChrome` 클래스에 해당 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome%2A> 메서드. 이 페이지에 사용자 지정 렌더링 적용 됩니다. 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 여기서 것 동적으로 컴파일되는 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 두 컴파일 방법을 보여 주는 연습을 참조 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-csharp[WebParts_WebPartChrome_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/CS/MyChrome.cs#2)]
 [!code-vb[WebParts_WebPartChrome_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/VB/MyChrome.vb#2)]  
  
 브라우저에서 웹 페이지를 로드할 때의 소스 코드에 다양 한 렌더링 스타일 및 기타 사용자 지정을 적용 하는 방법을 확인할 수 있습니다는 `MyWebPartChrome` 클래스에 표시 된 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에 렌더링 되는 컨트롤입니다.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>상속 된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> 클래스의 특정 섹션에 대 한 기본 렌더링을 재정의 하려는 경우 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 또는 서버 컨트롤입니다. 선택적으로 재정의할 수 있습니다는 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.PartChromeType)" /> 메서드를는 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs(System.Web.UI.WebControls.WebParts.WebPart)" /> 메서드, 및 특히 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderPartContents(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPart)" /> 또는 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderWebPart(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPart)" /> 렌더링을 사용자 지정 메서드. 사용자 지정을 사용 하려면 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> 에 대 한 클래스는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 영역에 있는 컨트롤에서 파생 된 사용자 지정 영역을 개발는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 클래스를 재정의 해당 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome" /> 메서드. 자식을 사용 하는 방법에 대 한 내용은 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> 영역에 개체 "예" 섹션을 참조 하십시오.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartChrome (System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, System.Web.UI.WebControls.WebParts.WebPartManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, class System.Web.UI.WebControls.WebParts.WebPartManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.#ctor(System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Web.UI.WebControls.WebParts.WebPartManager)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (zone As WebPartZoneBase, manager As WebPartManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartChrome(System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ zone, System::Web::UI::WebControls::WebParts::WebPartManager ^ manager);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.WebPartChrome : System.Web.UI.WebControls.WebParts.WebPartZoneBase * System.Web.UI.WebControls.WebParts.WebPartManager -&gt; System.Web.UI.WebControls.WebParts.WebPartChrome" Usage="new System.Web.UI.WebControls.WebParts.WebPartChrome (zone, manager)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="zone" Type="System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
        <Parameter Name="manager" Type="System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Parameters>
      <Docs>
        <param name="zone">연결된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 컨트롤입니다.</param>
        <param name="manager">현재 페이지의 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 컨트롤입니다.</param>
        <summary>컨트롤의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.%23ctor%2A> 의 새 인스턴스를 초기화는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 클래스입니다. 주로 사용 됩니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역에서 해당 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome%2A> 의 인스턴스를 만드는 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 크롬 렌더링 및 기타 사용자 지정 렌더링에 대 한 처리 하는 개체 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에서 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 두 가지를 보여 줍니다. 우선 사용자 지정 클래스의 새 인스턴스를 만들고 `MyWebPartChrome` 재정의 하 여는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome%2A> 파생 메서드 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 이라는 영역 `MyZone`합니다. 생성자에서 두 번째는 `MyWebPartChrome` 클래스 내에서 사용할 수 있는 전용 필드에는 생성자의 매개 변수에서 개체를 할당 클래스입니다. 이 예에서는 따라서 하면 연결 된 영역에 액세스 하는 방법 및 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 전에 생성자에도 개체는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.Zone%2A> 및 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.WebPartManager%2A> 속성은 액세스할 수 있습니다. 마지막으로, 하에서 실행 되도록 생성자에 대 한 기본 생성자도 호출 되어야 메서드 선언의 일부로 note 합니다.  
  
 다음 코드는 두 개의 사용자 지정 클래스를 포함 합니다. 예제를 실행 하는 데 필요한 전체 코드를의 예제 섹션을 참조 이러한 컨트롤을 호스트할 웹 페이지를 포함 하는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 클래스 개요 항목입니다.  
  
 [!code-csharp[WebParts_WebPartChrome_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/CS/MyChrome.cs#2)]
 [!code-vb[WebParts_WebPartChrome_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/VB/MyChrome.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="zone" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWebPartChromeStyle">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Style CreateWebPartChromeStyle (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.PartChromeType chromeType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Style CreateWebPartChromeStyle(class System.Web.UI.WebControls.WebParts.WebPart webPart, valuetype System.Web.UI.WebControls.WebParts.PartChromeType chromeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.PartChromeType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Style ^ CreateWebPartChromeStyle(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Web::UI::WebControls::WebParts::PartChromeType chromeType);" />
      <MemberSignature Language="F#" Value="abstract member CreateWebPartChromeStyle : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.PartChromeType -&gt; System.Web.UI.WebControls.Style&#xA;override this.CreateWebPartChromeStyle : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.PartChromeType -&gt; System.Web.UI.WebControls.Style" Usage="webPartChrome.CreateWebPartChromeStyle (webPart, chromeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="chromeType" Type="System.Web.UI.WebControls.WebParts.PartChromeType" />
      </Parameters>
      <Docs>
        <param name="webPart">현재 렌더링하고 있는 컨트롤입니다.</param>
        <param name="chromeType">특정 컨트롤에 대한 크롬의 형식이며 <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 열거형 값 중 하나입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 개체로 렌더링된 각 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> 컨트롤에 대한 스타일 특성을 제공하는 스타일 개체를 만듭니다.</summary>
        <returns>
          <paramref name="webPart" />에 대한 스타일 특성이 포함된 <see cref="T:System.Web.UI.WebControls.Style" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle%2A> 메서드를 만듭니다는 <xref:System.Web.UI.WebControls.Style> 에서 사용 되는 개체는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 렌더링 하는 개체는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 기본 방법은 기반으로 하는 스타일 특성을 만듭니다는 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A> 의 속성 값은 <xref:System.Web.UI.WebControls.WebParts.WebPart> 에서 참조 된 컨트롤은 `webPart` 매개 변수입니다.  
  
 특수 한 상황이 발생할 때 한 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 선택 합니다. 페이지가 여기서 컨트롤을 선택 하 고 현재 컨트롤을 선택 하는 실제로 페이지 디스플레이 모드에 있으면 기본 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle%2A> 에서 스타일 정보가 포함 된 컨트롤의 스타일 정보를 또한 병합 하는 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SelectedPartChromeStyle%2A> 속성입니다.  
  
   
  
## Examples  
 사용법을 설명 하는이 코드 예제는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle%2A> 메서드. 예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 클래스 개요 항목입니다.  
  
 이 코드 예제에서 다음 섹션에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle%2A> 메서드. 먼저 기본 메서드를 통해 만든 스타일 정보를 검색 및 사용 되는 글꼴을 변경 하 여 스타일 정보를 수정 합니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 렌더링 되 고 제어 합니다.  
  
 [!code-csharp[WebParts_WebPartChrome_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/CS/MyChrome.cs#5)]
 [!code-vb[WebParts_WebPartChrome_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/VB/MyChrome.vb#5)]  
  
 브라우저에서 웹 페이지를 로드 하는 경우에 사용 되는 글꼴 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤은 재정의 된 지정 된 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="chromeType" />이 <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 열거형 값 중 하나가 아닌 경우</exception>
        <block subset="none" type="overrides">
          <para>상속 하는 경우는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> 클래스, 필요에 따라을 재정의할 수 있습니다는 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.PartChromeType)" /> 메서드와 스타일 정보 사용자 지정 스타일을 사용 하 여 기본 메서드를 추가 하려면 특성을 병합 합니다. 데모를 보려면 "예" 섹션의 코드를 참조 합니다.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SelectedPartChromeStyle" />
      </Docs>
    </Member>
    <Member MemberName="DragDropEnabled">
      <MemberSignature Language="C#" Value="protected bool DragDropEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DragDropEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartChrome.DragDropEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DragDropEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool DragDropEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DragDropEnabled : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartChrome.DragDropEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤을 영역에 끌어 놓거나 영역에서 끌어 내올 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컨트롤을 끌어 옮길 수 있는지 여부를 나타내는 부울 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값은 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.DragDropEnabled%2A> 속성의 값에 의해 결정 됩니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragDropEnabled%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterWebPartVerbs">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartVerbCollection FilterWebPartVerbs (System.Web.UI.WebControls.WebParts.WebPartVerbCollection verbs, System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartVerbCollection FilterWebPartVerbs(class System.Web.UI.WebControls.WebParts.WebPartVerbCollection verbs, class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.FilterWebPartVerbs(System.Web.UI.WebControls.WebParts.WebPartVerbCollection,System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartVerbCollection ^ FilterWebPartVerbs(System::Web::UI::WebControls::WebParts::WebPartVerbCollection ^ verbs, System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member FilterWebPartVerbs : System.Web.UI.WebControls.WebParts.WebPartVerbCollection * System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPartVerbCollection&#xA;override this.FilterWebPartVerbs : System.Web.UI.WebControls.WebParts.WebPartVerbCollection * System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPartVerbCollection" Usage="webPartChrome.FilterWebPartVerbs (verbs, webPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerbCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verbs" Type="System.Web.UI.WebControls.WebParts.WebPartVerbCollection" />
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="verbs">
          <c>webPart</c> 매개 변수에서 참조하는 컨트롤과 관련된 모든 동사의 컬렉션입니다.</param>
        <param name="webPart">현재 렌더링되고 있는 컨트롤입니다.</param>
        <summary>개발자가 제공한 기준에 따라 특정 동사가 렌더링되지 않도록 제외합니다.</summary>
        <returns>
          <paramref name="webPart" />와 관련된 모든 동사가 포함된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.FilterWebPartVerbs%2A> 메서드를 자동으로 연결 된 동사 컬렉션에서 특정 동사를 필터링 하는 방법을 제공는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 렌더링 대상에서 필터링 된 동사를 방지 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="verbs" /> 컬렉션이 <see langword="null" />인 경우  \- 또는 -<see langword="" /><paramref name="webPart" />이 <see langword="null" />인 경우</exception>
        <block subset="none" type="overrides">
          <para>사용자 지정을 만드는 경우 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> 클래스, 필요에 따라을 재정의할 수 있습니다는 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.FilterWebPartVerbs(System.Web.UI.WebControls.WebParts.WebPartVerbCollection,System.Web.UI.WebControls.WebParts.WebPart)" /> 메서드 필터링 하 여 특정 동사 렌더링 되지 않도록 제외 합니다. 이 작업을 수행 하는 가장 일반적인 방법은에서 동사를 검사 하는 개인 메서드를 만드는 것은 <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Verbs" /> 의 컬렉션은 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 제어 하 고 각 동사를 렌더링할지를, 사용자가 선택한 조건에 따라 결정 합니다. 기본 메서드를 완전히; 메서드를 재정의 하는 경우를 재현 하기 어려운 기본 필터링 조건 많이 제공 하는 참고 몇 가지 특수 한 경우만 있는 경우에 기본 메서드를 먼저 호출한 다음 사용자 지정 필터링 조건을 적용 하려면 추가 메서드를 통해 생성 되는 컬렉션을 전달 하는 것이 좋습니다.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="GetWebPartChromeClientID">
      <MemberSignature Language="C#" Value="protected string GetWebPartChromeClientID (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetWebPartChromeClientID(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartChromeClientID(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetWebPartChromeClientID(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.GetWebPartChromeClientID : System.Web.UI.WebControls.WebParts.WebPart -&gt; string" Usage="webPartChrome.GetWebPartChromeClientID webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">현재 렌더링되고 있는 컨트롤입니다.</param>
        <summary>웹 페이지에서 렌더링된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> 개체의 클라이언트 ID를 가져옵니다.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> 개체의 클라이언트 ID가 포함된 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartChromeClientID%2A> 메서드를 포함 하는 테이블의 클라이언트 ID를 가져옵니다는 `webPart` 렌더링 되 고 있습니다. 테이블에 직접 해당 하는 렌더링된 된 출력은는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 개체를 컨트롤에 대 한 모듈식 레이아웃을 만들고 스타일을 적용 하는 컨테이너로 사용 됩니다.  
  
 클라이언트 ID를 가져오는 것이 유용는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 페이지는 서버에 다시 게시 하지 않고 크롬에서 변경 하려는 경우 클라이언트 쪽 스크립팅 용도로 개체입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" />가 <see langword="null" />인 경우</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartTitleClientID(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="GetWebPartTitleClientID">
      <MemberSignature Language="C#" Value="protected string GetWebPartTitleClientID (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetWebPartTitleClientID(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartTitleClientID(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetWebPartTitleClientID(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.GetWebPartTitleClientID : System.Web.UI.WebControls.WebParts.WebPart -&gt; string" Usage="webPartChrome.GetWebPartTitleClientID webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">현재 렌더링되고 있는 컨트롤입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 대한 제목이 포함된 테이블 셀의 클라이언트 ID를 가져옵니다.</summary>
        <returns>
          <paramref name="webPart" />의 제목에 대한 클라이언트 ID가 포함된 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartTitleClientID%2A> 의 제목을 포함 하는 표 셀에 대 한 클라이언트 ID 값을 검색 하는 메서드는 `webPart` 렌더링 되 고 있습니다.  
  
 중요 한 시나리오를는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartTitleClientID%2A> 메서드 제목 셀의 클라이언트 ID를 가져오는 데 사용 됩니다는 `webPart` 웹 파트 끌어서 놓기 기능입니다. 메서드는 다른 클라이언트 쪽 스크립팅 용도로 유용 합니다. 예를 들어 제목이 나 페이지를 서버에 다시 게시 하는 대신 클라이언트 쪽 스크립트를 사용 하 여 셀의 스타일을 변경할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" />가 <see langword="null" />인 경우</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartChromeClientID(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="GetWebPartVerbs">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartVerbCollection GetWebPartVerbs (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartVerbCollection GetWebPartVerbs(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartVerbCollection ^ GetWebPartVerbs(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetWebPartVerbs : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPartVerbCollection&#xA;override this.GetWebPartVerbs : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPartVerbCollection" Usage="webPartChrome.GetWebPartVerbs webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerbCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">현재 렌더링되고 있는 컨트롤입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 사용하여 렌더링할 동사의 컬렉션을 가져옵니다.</summary>
        <returns>
          <paramref name="webPart" />로 렌더링할 모든 동사가 포함된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs%2A> 메서드는 메서드를 재정의 하 고 렌더링 될 특정 동사를 제외 하는 영업 기회와 개발자에 게 제공 합니다. 이 비슷합니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.FilterWebPartVerbs%2A> 도 렌더링 되지 않도록 동사를 제외할 수 있는 메서드.  
  
 그러나는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs%2A> 메서드는 동사를 렌더링할지 여부를 결정 하는 몇 가지 조건을 확인 하려는 경우에 적용 되지 않습니다. 대신,이 메서드는 항상 특정 동사를 제외 하려면를 미리 알고 때 유용 합니다. 예를 들어, 사용자 지정을 개발 하는 경우 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 클래스 수도 있습니다는 항상 제외 하려는 닫기 동사에 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 사용자가 컨트롤 닫을 수 있도록 합니다. 설정 하는 대신는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> 속성을 `false` 모든 컨트롤에 단순히을 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs%2A> 메서드 및 제외 닫기에 렌더링 될 동사 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 사용자 지정을 사용 하 여 렌더링 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는의 사용을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs%2A> 메서드. 예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 클래스 개요 항목입니다.  
  
 이 코드 예제에서 다음 섹션에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs%2A> 메서드. 재정의 된 메서드가 기본 메서드를 사용 하 여에서 동사를 모두 검색 하는 `webPart` 컨트롤을 다음 닫기 동사를 제외한 모든 동사를 추가 하는 동사 컬렉션을 반복는 <xref:System.Collections.ArrayList> 개체입니다. 이와 같이 축소 동사 집합을 새 할당 됩니다 <xref:System.Web.UI.WebControls.WebParts.WebPartVerbCollection>, 호출자에 게 반환 되는 합니다.  
  
 [!code-csharp[WebParts_WebPartChrome_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/CS/MyChrome.cs#4)]
 [!code-vb[WebParts_WebPartChrome_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/VB/MyChrome.vb#4)]  
  
 브라우저에서 웹 페이지를 로드 하 고 각 동사 메뉴 (제목 표시줄의 아래쪽 화살표로 표시)를 클릭 하는 경우 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 닫기 동사 모든 컨트롤에 대 한 렌더링 되지 않습니다을 볼 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="PerformPreRender">
      <MemberSignature Language="C#" Value="public virtual void PerformPreRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformPreRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.PerformPreRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PerformPreRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PerformPreRender();" />
      <MemberSignature Language="F#" Value="abstract member PerformPreRender : unit -&gt; unit&#xA;override this.PerformPreRender : unit -&gt; unit" Usage="webPartChrome.PerformPreRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 렌더링하기 전에 수행해야 할 작업을 수행합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderPartContents">
      <MemberSignature Language="C#" Value="protected virtual void RenderPartContents (System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderPartContents(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderPartContents(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderPartContents(System::Web::UI::HtmlTextWriter ^ writer, System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member RenderPartContents : System.Web.UI.HtmlTextWriter * System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.RenderPartContents : System.Web.UI.HtmlTextWriter * System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartChrome.RenderPartContents (writer, webPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="writer">
          <c>webPart</c> 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <param name="webPart">현재 렌더링되고 있는 컨트롤입니다.</param>
        <summary>머리글과 바닥글을 제외한 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 주 콘텐츠 영역을 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderPartContents%2A> 메서드 본문 부분 렌더링을 재정의 하면 `webPart`, 머리글 및 바닥글의 렌더링 기본 렌더링으로 그대로 유지 하면서 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는의 사용을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderPartContents%2A> 메서드. 예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 클래스 개요 항목입니다.  
  
 이 코드 예제에서 다음 섹션에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderPartContents%2A> 메서드. 재정의 된 메서드는 본문의 렌더링을 사용자 지정 하려면 다음 두 가지는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 첫째, 현재 컨트롤 선택 여부와 그럴 경우를 확인 하 고, 문자열을 기록 하 고 콘텐츠를 렌더링 하지 않습니다. 컨트롤을 선택 하지 않으면 및 컨트롤의 영역이 형식인 경우 두 번째 `MyZone`, 메서드는 컨트롤을 렌더링 합니다. 사용자 지정 되도록 하려는 경우이 두 번째 검사를 사용할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 클래스 렌더링에 사용할 수 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤에는 특정 유형의 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 포함 하도록 디자인 된 영역은 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 개체입니다.  
  
 [!code-csharp[WebParts_WebPartChrome_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/CS/MyChrome.cs#6)]
 [!code-vb[WebParts_WebPartChrome_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/VB/MyChrome.vb#6)]  
  
 브라우저에서 웹 페이지를 로드 하는 경우 각 컨트롤의 콘텐츠가 정상적으로 렌더링 됨을 확인할 수 있습니다. 페이지 디자인 모드를 전환 하는 경우 (선택 하 여 **디자인** 에 **디스플레이 모드** 드롭 다운 목록 컨트롤) 라는 빈 영역으로 컨트롤 중 하나를 끌어다 놓습니다 **WebPartZone2**, 컨트롤의 콘텐츠는 다른 방식으로 렌더링 하기 때문에 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 개체가 표준 영역으로 렌더링 하기 위한 사용 되지 않습니다. 이 사용자 지정을 사용 하려는 경우에 얻을 수 있는 결과 동일 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 이외의 다른 영역을 사용 하 여 클래스는 `MyZone` 인해 앞의 소스 코드의 클래스.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>선택적으로 재정의할 수 있습니다는 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderPartContents(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPart)" /> 메서드. 따라서 모든 사용자 지정 렌더링 간단히 수행할 수 있으면 원하는 <paramref name="webPart" />, 한 다음 호출 해당 <see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" /> 메서드. 연결 오류가 발생할 경우 기본 렌더링을 사용 하려면 먼저 기본 메서드를 호출 하 고 사용자 지정 합니다는 <paramref name="writer" /> 기본 메서드에서 반환 되는 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RenderWebPart">
      <MemberSignature Language="C#" Value="public virtual void RenderWebPart (System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderWebPart(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderWebPart(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderWebPart(System::Web::UI::HtmlTextWriter ^ writer, System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member RenderWebPart : System.Web.UI.HtmlTextWriter * System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.RenderWebPart : System.Web.UI.HtmlTextWriter * System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartChrome.RenderWebPart (writer, webPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="writer">
          <c>webPart</c> 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <param name="webPart">현재 렌더링되고 있는 컨트롤입니다.</param>
        <summary>해당 섹션을 모두 사용하여 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤 전체를 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderWebPart%2A> 메서드는 전체 렌더링 <xref:System.Web.UI.WebControls.WebParts.WebPart> 내용, 머리글과 바닥글이 있는 컨트롤입니다. 개발자의 모든 측면을 렌더링 하는 프로그래밍 방식으로 제어할 완료이 방법에서는 재정의 `webPart`, 이런 이유로이 메서드를 재정의 하는 매우 복잡 하 고 있습니다. 몇 가지 다른 메서드와 마찬가지로 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 공통이이 메서드를 재정의 하 고 기본 메서드를 먼저 호출 하는 유용한 방법은 경우 개발자가 재정의할 수 있는 클래스는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 반환 되 고 해당 속성 중 일부를 사용자 지정 컨트롤 전체 처리 하는 대신 직접 렌더링 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" />에서 참조하는 컨트롤이 <see langword="null" />인 경우</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderPartContents(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="WebPartManager">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartChrome.WebPartManager" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartManager As WebPartManager" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPartManager ^ WebPartManager { System::Web::UI::WebControls::WebParts::WebPartManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebPartManager : System.Web.UI.WebControls.WebParts.WebPartManager" Usage="System.Web.UI.WebControls.WebParts.WebPartChrome.WebPartManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 인스턴스에 대한 참조를 가져옵니다.</summary>
        <value>웹 페이지의 현재 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.WebPartManager%2A> 속성은 현재에 대 한 참조를 제공 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 페이지에서 인스턴스.  
  
   
  
## Examples  
 사용법을 설명 하는이 코드 예제는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.WebPartManager%2A> 속성입니다. 예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 클래스 개요 항목입니다.  
  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.WebPartManager%2A> 속성을 확인 하는지 여부를 현재 <xref:System.Web.UI.WebControls.WebParts.WebPart> 렌더링 되는 컨트롤은 즉,이 예에서 페이지 편집 보기에 표시 되는 컨트롤을 편집 하 고 선택 된 컨트롤입니다. 이러한 조건이 true 인 경우 컨트롤의 본문은 렌더링 되지 하 고 문자열 해당 위치에 기록 됩니다.  
  
 [!code-csharp[WebParts_WebPartChrome_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/CS/MyChrome.cs#6)]
 [!code-vb[WebParts_WebPartChrome_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/VB/MyChrome.vb#6)]  
  
 브라우저에서 웹 페이지를 로드 하는 경우를 전환할 수 있습니다 페이지 편집 모드를 선택 하 여 **편집** 에 **디스플레이 모드** 드롭 다운 목록 컨트롤입니다. 클릭할 수 있는 컨트롤;의 동사 메뉴에서 편집 동사 페이지가 렌더링 되는 경우에 편집을 위해 선택한 컨트롤의 본문 렌더링 되지 않습니다. 그러나 라는 빈 영역으로 컨트롤을 끌면 **WebPartZone2**, 컨트롤의 본문은 렌더링 됩니다. 두 번째 영역은 표준 때문에 이것이 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 영역이 고 사용자 지정을 사용 하지 않는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 이 예제를 렌더링 하는 클래스는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Docs>
    </Member>
    <Member MemberName="Zone">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartZoneBase Zone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartZoneBase Zone" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartChrome.Zone" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Zone As WebPartZoneBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ Zone { System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Zone : System.Web.UI.WebControls.WebParts.WebPartZoneBase" Usage="System.Web.UI.WebControls.WebParts.WebPartChrome.Zone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartZoneBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관련 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 영역에 대한 참조를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />과 관련된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.Zone%2A> 속성에 대 한 참조를 제공는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역 컨트롤을 포함 하는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 개체 렌더링을 제공 합니다.  
  
   
  
## Examples  
 사용법을 설명 하는이 코드 예제는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.Zone%2A> 속성입니다. 예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 클래스 개요 항목입니다.  
  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.Zone%2A> 속성 영역와 현재 연결 되어 있는지 여부를 확인 하는 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 개체는 형식의 영역 `MyZone`합니다. 이 경우 컨트롤의 내용은 렌더링 됩니다. 이 코드는 사용자 지정 방지 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 개체를 해당 형식의 인스턴스를 만들도록 디자인 된 것 이외의 다른 영역으로 작동 합니다.  
  
 [!code-csharp[WebParts_WebPartChrome_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/CS/MyChrome.cs#6)]
 [!code-vb[WebParts_WebPartChrome_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/VB/MyChrome.vb#6)]  
  
 브라우저에서 웹 페이지를 로드 하는 경우 각 컨트롤의 콘텐츠가 정상적으로 렌더링 됩니다. 페이지를 선택 하 여 디자인 모드로 전환할 수 있습니다 **디자인** 에 **디스플레이 모드** 드롭 다운 목록 컨트롤입니다. 라는 빈 영역으로 끌어 컨트롤 중 하나의 경우 **WebPartZone2**, 해당 내용을 다른 방식으로 렌더링 하기 때문에 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 개체가 렌더링에 사용 되지 않습니다. 이 사용자 지정을 사용 하려는 경우에 얻을 수 있는 결과 동일 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 이외의 다른 영역을 사용 하 여 클래스는 `MyZone` 인해 앞의 소스 코드의 클래스.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
      </Docs>
    </Member>
  </Members>
</Type>