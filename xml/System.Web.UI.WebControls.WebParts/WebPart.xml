<Type Name="WebPart" FullName="System.Web.UI.WebControls.WebParts.WebPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8163db737db8dcd5742d072374aa38c31a0a4c50" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36386075" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebPart : System.Web.UI.WebControls.WebParts.Part, System.Web.UI.WebControls.WebParts.IWebActionable, System.Web.UI.WebControls.WebParts.IWebEditable, System.Web.UI.WebControls.WebParts.IWebPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebPart extends System.Web.UI.WebControls.WebParts.Part implements class System.Web.UI.WebControls.WebParts.IWebActionable, class System.Web.UI.WebControls.WebParts.IWebEditable, class System.Web.UI.WebControls.WebParts.IWebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPart" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebPart&#xA;Inherits Part&#xA;Implements IWebActionable, IWebEditable, IWebPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPart abstract : System::Web::UI::WebControls::WebParts::Part, System::Web::UI::WebControls::WebParts::IWebActionable, System::Web::UI::WebControls::WebParts::IWebEditable, System::Web::UI::WebControls::WebParts::IWebPart" />
  <TypeSignature Language="F#" Value="type WebPart = class&#xA;    inherit Part&#xA;    interface IWebPart&#xA;    interface IWebActionable&#xA;    interface IWebEditable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.Part</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.WebParts.IWebActionable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.WebParts.IWebEditable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.WebParts.IWebPart</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>기본 <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> 클래스 기능에 몇 가지 추가 UI(사용자 인터페이스) 속성, 연결을 만드는 기능 및 개인 설정 동작을 추가하여 사용자 지정 ASP.NET 웹 파트 컨트롤의 기본 클래스 역할을 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 파트 기능이 있는 컨트롤을 만들 때 두 가지 기본 옵션이 있습니다. 파생 되는 사용자 지정 컨트롤을 만들 수는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 있습니다 만들거나 다른 서버 컨트롤을 사용할 수 있습니다. 기존 ASP.NET 컨트롤, 사용자 지정 서버 컨트롤 및 사용자 정의 컨트롤 수 모든 주어 완전 한 웹 파트 기능 내에서 선언 하 여 (또는 프로그래밍 방식으로 추가한)는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 영역 컨트롤 를사용하여둘러쌀수결과<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>런타임 시 개체를 true로 처리 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 자세한 내용은 설명서를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 클래스입니다. 개발 속도 향상 및 최대 코드 재사용에 대 한 기존 서버 컨트롤을 사용 하 여 좋을 수 있습니다. 최대 프로그래밍를 효과적으로 제어 동작 및 컨트롤의 기능을 웹 파트에서 상속 하는 사용자 지정 컨트롤 만들기는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스는 최상의 옵션입니다.  
  
 추상 <xref:System.Web.UI.WebControls.WebParts.WebPart> 기본에서 상속 된 클래스 <xref:System.Web.UI.WebControls.WebParts.Part> 제어 하 고 모든 기본 요소를 제공 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 클래스는 UI의 모양에 영향을 주는 속성 집합이 포함 되어 있습니다. <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowConnect%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A>, 및 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A> 속성에는 각 웹 응용 프로그램의 사용자 지정된 된 속성으로 표시 하는 방법은 파트 컨트롤과 상호 작용할 수 허용 되는지 여부를 지정 이름입니다. <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A>, 및 <xref:System.Web.UI.WebControls.WebParts.WebPart.Width%2A> 속성 크기, 표시 여부를 결정 합니다. 모양 및 콘텐츠 (예: 제목 및 설명)에 대 한 지원 되는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 관계는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어와 같은 컨트롤 집합 속성에 의해 결정 되는 웹 파트 내에서 해당 컨텍스트를 <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>, 연결 된 컨트롤에 대 한 참조를 보유 하 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 개체 및 <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A>, 참조 하는 <xref:System.Web.UI.WebControls.WebParts.WebZone> 컨트롤을 포함 하 합니다. 하나만 있을 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤은 각 페이지 및의 각 인스턴스는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 내의 하나만 있을 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.WebZone> 한 번에 있습니다.  
  
> [!NOTE]
>  A <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역 외부에 웹 페이지에 컨트롤을 배치할 수 있지만 경우에 일반 서버 컨트롤로 함수 거의 모든 웹 파트 기능이 손실 됩니다.  
  
 다른 몇 가지 중요 한 속성의 고유한 기능에 영향을 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> 속성을 사용 하면 개발자가 사용할 수 있는 필터로 런타임 시 컨트롤은 페이지에 추가 되는지 여부를 결정 하는 임의의 문자열을 설정 합니다. 역할 관리 등의 기능과 함께 사용 되는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> 속성 정의 된 사용자 역할을 기반으로 하는 뷰를 만드는 데 유용한 메커니즘을 제공 합니다. <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> 속성 표시 여부는 내보내기 중 컨트롤에서 모든 사용 가능한 속성 데이터를 내보낸 또는 중요 하지 않은 데이터에 대해서만 합니다. 개발자를 민감한 데이터는 및가 아니면 보안을 위해 데이터를 구별할 수 있습니다. <xref:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject%2A> 속성의 인스턴스에 대 한 참조를 반환 합니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 있도록는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤 편집할 수 페이지가 편집 모드에 있을 때. 마지막으로, 여러 가지 속성 페이지의 나머지를 기준으로 컨트롤의 상태를 나타내는입니다. <xref:System.Web.UI.WebControls.WebParts.WebPart.IsClosed%2A> 속성 컨트롤 닫혀 있는지 여부를 나타냅니다 (에 따라서 추가 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 개체), 또는 열려 있고 해당 페이지에서 제공 하는 경우. <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> 속성 컨트롤이 웹 페이지의 모든 사용자에 게 표시 되었는지 (또는 사용자 고유의 컨트롤의 경우) 공유 컨트롤 인지를 나타냅니다. <xref:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone%2A> 속성 컨트롤에 현재 포함 되어 있는지 여부를 나타냅니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>-파생 된 영역 (예: <xref:System.Web.UI.WebControls.WebParts.WebPartZone>). 값이 `false` 컨트롤 영역 내에 있으므로 한 전체 웹 파트 기능이 나타냅니다. <xref:System.Web.UI.WebControls.WebParts.WebPart.IsStatic%2A> 속성은 정적 또는 동적 컨트롤을 나타냅니다. 정적 컨트롤 동적 컨트롤은 프로그래밍 방식으로 추가 하는 반면, 웹 페이지의 태그에 선언 됩니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 컨트롤의 수명 주기에서 다양 한 포인트에서 수행 되는 여러 가지 방법을 제공 합니다. 예를 들어는 <xref:System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged%2A> 및 <xref:System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged%2A> 메서드 둘 다에서 재정의할 수 있습니다 프로그래밍 방식으로 각 방법의 이름에 해당 하는 이벤트 중 렌더링을 컨트롤의 내용 제어 하려면 파생된 클래스입니다.  
  
 파생 된 클래스 <xref:System.Web.UI.WebControls.WebParts.WebPart> 추가할 수 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 개체는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> 컬렉션입니다. 제목 표시줄에 표시 되는 동사 메뉴에 동사 렌더링 되는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 개체를 숨기 거 나 컨트롤을 최소화 하거나 도움말 표시와 같은 일반 사용자 동작에 대 한 간단한 UI 요소를 제공 합니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> 메서드는 사용자 지정의 컬렉션을 만듭니다 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 연관 된 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 개발자가이 메서드를 편집 하도록 특별히 설계 된 사용자 지정 컨트롤 만드시겠습니까 재정의 자신의 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 사용자가 클릭 하면 편집 동사 메서드가 호출 되는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 만들고 웹 페이지에 참조 합니다.  
  
 사용자 지정에 대 한 코드를 포함 하는 예제의 첫 번째 부분은 <xref:System.Web.UI.WebControls.WebParts.WebPart> 라는 컨트롤 `TextDisplayWebPart`합니다. 이 컨트롤에는 간단한 사용자 지정을 만드는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 웹 파트의 기능에 액세스할 수 있습니다 컨트롤 집합을 제어 합니다. 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 여기서 것 동적으로 컴파일되는 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 이 코드 예제에서는 가정 소스 코드를 어셈블리로 컴파일할 웹 응용 프로그램의 Bin 하위 폴더에 배치 하는 참조 된 어셈블리는 `Register` 웹 페이지의 지시문입니다. 두 컴파일 방법을 보여 주는 연습을 참조 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-csharp[WebParts_General_TextDisplayPart#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts_General_TextDisplayPart#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textdisplaywebpart.vb#2)]  
  
 예제의 두 번째 부분을 참조 하는 방법을 보여 줍니다는 `TextDisplayWebPart` ASP.NET 웹 페이지에서 제어 합니다. 다양 다양 한 <xref:System.Web.UI.WebControls.WebParts.WebPart> 속성 사용자 지정 컨트롤에 선언적으로 할당할 수 있습니다.  
  
 [!code-aspx-csharp[WebParts_General_TextDisplayPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textwebpartcs.aspx#1)]
 [!code-aspx-vb[WebParts_General_TextDisplayPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textwebpartvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebPart ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>상속된 클래스 인스턴스에 사용할 수 있도록 클래스를 초기화합니다. 이 생성자는 상속된 클래스에서만 호출될 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.%23ctor%2A> 생성자를 비롯 한 다양 한 여러 UI 기반 속성에 대 한 기본값을 초기화 `Allow` 컨트롤의 기능을 결정 하는 속성입니다. 그런 다음 이러한 속성은 상속된 된 클래스 인스턴스에 통합 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 방법에서 파생 되는 컨트롤은 <xref:System.Web.UI.WebControls.WebParts.WebPart> 자료에 설정 된 기본 속성 값 상속 <xref:System.Web.UI.WebControls.WebParts.WebPart.%23ctor%2A> 생성자 있지만 다음 파생된 컨트롤의 생성자에서 하나의 속성의 값을 변경 합니다.  
  
 사용자 지정에 대 한 코드를 포함 하는이 예제의 첫 번째 부분은 <xref:System.Web.UI.WebControls.WebParts.WebPart> 라는 컨트롤 `TextDisplayWebPart`합니다. 이 컨트롤에는 간단한 사용자 지정을 만드는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 웹 파트의 기능에 액세스할 수 있습니다 컨트롤 집합을 제어 합니다. 사용자 지정 컨트롤의 생성자에서 여 `TextDisplayWebPart.AllowClose` 속성이로 설정 되어 `false`, 있으며 그 결과 사용자가 웹 페이지에 컨트롤을 닫는 것을 방지 합니다. 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 여기서 것 동적으로 컴파일되는 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 이 코드 예제에서는 가정 소스 코드를 어셈블리로 컴파일할 웹 응용 프로그램의 Bin 하위 폴더에 배치 하는 참조 된 어셈블리는 `Register` 웹 페이지의 지시문입니다. 두 컴파일 방법을 보여 주는 연습을 참조 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-csharp[WebParts_General_TextDisplayPart#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts_General_TextDisplayPart#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textdisplaywebpart.vb#2)]  
  
 예제의 두 번째 부분을 참조 하는 방법을 보여 줍니다는 `TextDisplayWebPart` ASP.NET 웹 페이지에서 제어 합니다. 사용자 지정의 제목 표시줄에 있는 동사 메뉴를 클릭 하면 브라우저에서 페이지를 로드 한 후 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 닫기 동사 이제 사용 하지 않으면 사용자가 컨트롤을 닫을 수 없습니다.  
  
 [!code-aspx-csharp[WebParts_General_TextDisplayPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textwebpartcs.aspx#1)]
 [!code-aspx-vb[WebParts_General_TextDisplayPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textwebpartvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowClose">
      <MemberSignature Language="C#" Value="public virtual bool AllowClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowClose" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowClose { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowClose : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최종 사용자가 웹 페이지에서 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 닫을 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>웹 페이지에서 컨트롤을 닫을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자를 닫은 후는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤이 웹 페이지에 컨트롤을 더 이상 표시 되거나 해당 페이지에서 제공 합니다. 닫힌된 컨트롤은 컨트롤에 대 한 참조를 저장 하는 웹 파트 엔터티 페이지 카탈로그에 추가 됩니다. 개발자가 추가 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 컨트롤 내에서 페이지는 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 컨트롤, 사용자가 페이지 카탈로그 디스플레이 모드를 전환 닫힌된 컨트롤 페이지 카탈로그에서 선택한 페이지에 다시 추가할 수 있습니다.  
  
> [!NOTE]
>  닫힌 <xref:System.Web.UI.WebControls.WebParts.WebPart> 프로그래밍 방식으로 또는 사용자가 카탈로그에 페이지가 있을 때 페이지 카탈로그에서 닫힌된 컨트롤을 선택 하 여 표시 되거나 모드 페이지로 다시 컨트롤을 추가할 수 있습니다.  
  
 닫기는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤은 삭제와 다릅니다. 삭제 된 컨트롤은 영구적으로 제거 하는 동안 닫힌된 컨트롤을 페이지에 다시 추가할 수 있습니다. 컨트롤 삭제에 대 한 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> 메서드. 컨트롤을 닫는 숨길 수와 다른 이기도 합니다. 숨겨져 있는 컨트롤 인데 페이지에서 여전히 여전히 포함 페이지 수명 주기 이벤트에 참여 하 고 사용자의 보기에서 숨겨진만 닫힌된 컨트롤이 페이지에도 렌더링 되지 않습니다.  
  
 정적 및 동적 <xref:System.Web.UI.WebControls.WebParts.WebPart> (정적 컨트롤 동적 컨트롤의 프로그래밍 방식으로 추가 되는 동안 페이지의 태그에 선언 된) 컨트롤을 닫을 수 있습니다.  
  
 개발자가 설정 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> 속성을 `false`, 닫기 동사는 컨트롤에 표시 되지 않으며 사용자가 컨트롤을 닫을 수 없습니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> 인증 된 사용자만 수정할 수 있습니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> 및 [웹 파트 개인 설정 개요](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)합니다.  
  
   
  
## Examples  
 기본 설정을 변경 하는 방법은 다음 코드 예제는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> 사용자 지정에 대 한 속성 <xref:System.Web.UI.WebControls.WebParts.WebPart> 를 닫을 수 없습니다. 제어 합니다.  
  
 사용자 지정에 대 한 코드를 포함 하는이 예제의 첫 번째 부분은 <xref:System.Web.UI.WebControls.WebParts.WebPart> 라는 컨트롤 `TextDisplayWebPart`합니다. 사용자 지정 컨트롤의 생성자에서 여 `TextDisplayWebPart.AllowClose` 속성이로 설정 되어 `false`, 있으며 그 결과 사용자가 웹 페이지에 컨트롤을 닫는 것을 방지 합니다. 즉, 사용자에는 동사 메뉴 컨트롤의 닫기 동사를 사용 되지 것입니다. 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 여기서 것 동적으로 컴파일되는 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 이 코드 예제에서는 가정 소스 코드를 어셈블리로 컴파일할 웹 응용 프로그램의 Bin 하위 폴더에 배치 하는 참조 된 어셈블리는 `Register` 웹 페이지의 지시문입니다. 두 컴파일 방법을 보여 주는 연습을 참조 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-csharp[WebParts_General_TextDisplayPart#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts_General_TextDisplayPart#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textdisplaywebpart.vb#2)]  
  
 예제의 두 번째 부분을 참조 하는 방법을 보여 줍니다는 `TextDisplayWebPart` ASP.NET 웹 페이지에서 제어 합니다. 에는 `<aspSample:TextDisplayWebPart>` 컨트롤을 참조 하는 요소를 변경할 수도 있습니다는 컨트롤의 생성자에 의해 설정 속성의 값입니다. 컨트롤을 닫을 수를 허용 하려면 추가 `AllowClose="true"` 선언 태그의 요소에 특성입니다.  
  
 [!code-aspx-csharp[WebParts_General_TextDisplayPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textwebpartcs.aspx#1)]
 [!code-aspx-vb[WebParts_General_TextDisplayPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textwebpartvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Hidden" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowHide" />
      </Docs>
    </Member>
    <Member MemberName="AllowConnect">
      <MemberSignature Language="C#" Value="public virtual bool AllowConnect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowConnect" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowConnect" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowConnect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowConnect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowConnect : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.AllowConnect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에서 다른 컨트롤과의 연결을 허용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>해당 컨트롤과의 연결을 구성할 수 있는지 여부를 나타내는 부울 값입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이지 태그에서 또는 프로그래밍 방식으로 속성 값을 선언적으로 설정할 수 있습니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> 인증 된 사용자만 수정할 수 있습니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> 및 [웹 파트 개인 설정 개요](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts" />
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public virtual bool AllowEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowEdit : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.AllowEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최종 사용자가 하나 이상의 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에서 제공하는 UI(사용자 인터페이스)를 통해 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤을 수정할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 수정할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 최종 사용자가을 편집 하려면는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤은 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> 속성으로 설정 되어 있어야 `true` (기본값), 페이지의 디스플레이 모드 편집 모드에 있어야 합니다. 디스플레이 모드의 필드로 표현 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 제어 합니다. 이 경우의 모드는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>합니다. 페이지에 대 한 세부 정보 표시 모드 및 변경 하는 방법에 대 한 참조는 <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> 클래스 개요입니다.  
  
 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> 속성이 `false` 선언적으로 또는 프로그래밍 방식으로 편집 옵션이 제한 됩니다. 편집 가능한 작업 페이지의 레이아웃에 대 한 변경만 사용 하는 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 컨트롤 또는 사용자 지정을 통해 사용 하도록 설정 하는 다른 기본 작업 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다.  
  
 사용 하는 예제에 대 한 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 제어 설정 및 사용자 지정 웹 파트 컨트롤의 편집 기능을 사용 하는 방법을 보여 줍니다. 웹 파트에서 컨트롤 참조 [연습: 웹 파트 페이지 만들기](http://msdn.microsoft.com/library/e05b659c-d6da-46cb-b177-48efe55f2770)합니다.  
  
> [!IMPORTANT]
>  효과는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> 컨트롤의 속성이 동작도 웹 페이지의 현재 개인 설정 범위에 의해 영향을 하 고 해당 페이지에서 개별 웹 파트를 제어 합니다. 자세한 내용은 참조 [웹 파트 개인 설정 개요](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)합니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> 인증 된 사용자만 수정할 수 있습니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> 및 [웹 파트 개인 설정 개요](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)합니다.  
  
   
  
## Examples  
 기본 설정을 변경 하는 방법은 다음 코드 예제는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> 컨트롤을 편집할 수 있도록 웹 파트에 대 한 속성을 제어 합니다. 이 예에서는 사용 한다고 가정는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 `TextDisplayWebPart`의 예 섹션에는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 개요.  
  
 또한이 코드 예제에서는 사용자가 웹 파트 페이지에 대 한 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤을 사용 합니다. 사용자 정의 컨트롤 방법으로 참조 되는 `Register` 사용자 정의 컨트롤을 호스팅하는 웹 페이지의 맨 위 근처에 지시문입니다. 이 사용자 정의 컨트롤을 생성 및 디스플레이 모드를 사용 하는 방법에 대 한 자세한 설명은 참조 하세요. [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_AllowEdit#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowEdit/CS/displaymodemenucs.ascx#5)]
 [!code-aspx-vb[WebParts_WebPart_AllowEdit#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowEdit/VB/displaymodemenuvb.ascx#5)]  
  
 웹 페이지에 대 한 선언적 태그에 `<aspSample:TextDisplayWebPart>` 컨트롤을 참조 하는 요소 참고는 `AllowEdit="false"` 특성입니다. 하지만 `true` 은 기본값인 특성으로 설정 되었습니다 `false` 이 예제의 목적에 대 한 합니다. 브라우저를 사용 하 여 페이지를 로드 하는 **디스플레이 모드** 드롭 다운 목록 컨트롤을 디스플레이 모드 편집 모드를 변경 합니다. 제목 표시줄에 있는 동사 메뉴를 클릭는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 누락 되었거나, 편집 동사는 편집 컨트롤에 사용할 수 없으므로 점에 주의 해야 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_AllowEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowEdit/CS/alloweditCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_AllowEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowEdit/VB/alloweditVB.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowHide">
      <MemberSignature Language="C#" Value="public virtual bool AllowHide { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowHide" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowHide" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowHide As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowHide { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowHide : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.AllowHide" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최종 사용자가 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 숨길 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 숨길 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A> 속성은 사용자가 수정할 수 있는지 여부가 결정는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 속성입니다. 속성 값이 경우에 기본 환경에서 `true`, 사용자가 컨트롤을 편집할 때 값을 변경할 수 있습니다. 기본적으로 컨트롤은 숨겨지지 및 해당 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 속성 값은 `false`합니다. 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 사용자가을 숨기기 확인란을 선택 하는 경우 편집 중인 (로 설정 하는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 속성을 `true`), 페이지에서 찾아보기 모드로 돌아갈 때 컨트롤은 더 이상 표시 되지 합니다.  
  
 숨겨진된 컨트롤은 때문에 종료 하는 컨트롤에서 distinct는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 속성에는 웹 파트 컨트롤 집합 내에서 의미가 달라 집니다. 닫힌된 컨트롤은 페이지에도 렌더링 되지 않으며 페이지 수명 주기 이벤트에 참여 하지 않습니다. 이와 달리 숨겨진에서 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 사용자에 게 표시 되지 않습니다., 웹 페이지에 렌더링은 영역에 포함 되며 및 다른 연결을 유지할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 웹 파트 응용 프로그램의 일부로 컨트롤입니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> 인증 된 사용자만 수정할 수 있습니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> 및 [웹 파트 개인 설정 개요](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)합니다.  
  
   
  
## Examples  
 기본 설정을 변경 하는 방법은 다음 코드 예제는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A> 속성에서 사용자 지정 웹 파트 컨트롤에 사용자가 사용자 지정 컨트롤을 숨길 수 없습니다. 이 예제에서는 사용자 지정 사용 한다고 가정 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 `TextDisplayWebPart`의 예 섹션에는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 개요.  
  
 또한이 코드 예제에서는 사용자가 웹 파트 페이지에 대 한 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤을 사용 합니다. 사용자 정의 컨트롤 방법으로 참조 되는 `Register` 사용자 정의 컨트롤을 호스팅하는 웹 페이지의 맨 위 근처에 지시문입니다. 이 사용자 정의 컨트롤을 생성 및 디스플레이 모드를 사용 하는 방법에 대 한 자세한 설명은 참조 하세요. [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_AllowHide#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowHide/CS/displaymodemenucs.ascx#5)]
 [!code-aspx-vb[WebParts_WebPart_AllowHide#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowHide/VB/displaymodemenuvb.ascx#5)]  
  
 웹 페이지에 대 한 선언적 태그에서에 `<aspSample:TextDisplayWebPart>` 컨트롤을 참조 하는 요소 참고는 `AllowHide="false"` 특성을 사용자가 편집 컨트롤을 숨길 수는 수행할 수 없습니다. 브라우저를 사용 하 여 페이지를 로드 하는 **디스플레이 모드** 드롭 다운 목록 컨트롤을 디스플레이 모드 편집 모드를 변경 합니다. 제목 표시줄에 있는 동사 메뉴를 클릭는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 하 고 편집 동사를 클릭 합니다. 편집 사용자 인터페이스 (UI)가 표시를 볼 수 있습니다 편집 하는 UI는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 속성 이제 사용 되지 않는지, 설정할 수 때문에 발생는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A> 속성 값을 `false`합니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_AllowHide#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowHide/CS/allowhidecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_AllowHide#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowHide/VB/allowhidevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Hidden" />
      </Docs>
    </Member>
    <Member MemberName="AllowMinimize">
      <MemberSignature Language="C#" Value="public virtual bool AllowMinimize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMinimize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowMinimize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowMinimize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMinimize : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최종 사용자가 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 최소화할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 최소화할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A> 속성인 경우로 설정 `false`, 최종 사용자가 컨트롤을 최소화 컨트롤의 제목 표시줄에 표시 되지 않는 컨트롤 및 사용자 인터페이스 (UI)를 최소화할 수 없게 되지 않도록 합니다. 웹 파트 용어로 때는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A> 속성이 `false`, 최소화 동사 컨트롤의 동사 메뉴에 표시 되지 않습니다.  
  
 사용자 컨트롤을 최소화 하는 경우 컨트롤의 제목 표시줄 및 제목의 일부만 표시 하는 최소 영역 컨트롤의 크기가 줄어듭니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> 인증 된 사용자만 수정할 수 있습니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> 및 [웹 파트 개인 설정 개요](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)합니다.  
  
   
  
## Examples  
 기본 설정을 변경 하는 방법은 다음 코드 예제는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A> 속성에서 사용자 지정 웹 파트 컨트롤에 사용자가 컨트롤을 최소화할 수 없습니다. 이 예제에서는 사용자 지정 사용 한다고 가정 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 `TextDisplayWebPart`의 예 섹션에는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 개요.  
  
 웹 페이지에 대 한 선언적 태그에서에 `<aspSample:TextDisplayWebPart>` 컨트롤을 참조 하는 요소 참고는 `AllowMinimize="false"` 에 특성의 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 최소화 해야 하는 사용자 수 없고 동사 메뉴의는 컨트롤입니다. 브라우저에서 페이지를 로드 하 고 동사 메뉴에서 클릭는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 컨트롤에 대 한 선언적 태그에 사용할 수 없으므로 정상적으로 수 있는 동사 메뉴에 있는, 최소화 동사 숨겨져 있습니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_AllowMinimize#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowMinimize/CS/allowminimizecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_AllowMinimize#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowMinimize/VB/allowminimizevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowZoneChange">
      <MemberSignature Language="C#" Value="public virtual bool AllowZoneChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowZoneChange" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowZoneChange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowZoneChange { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowZoneChange : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 영역 간에 이동할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 영역 간에 이동할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A> 속성은 `true`, 웹 페이지 (예: 편집 또는 디자인 모드) 레이아웃을 변경할 수 있는 디스플레이 모드에는, 사용자는 다른 컨트롤을 이동 하 여 페이지 레이아웃을 변경할 수 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 페이지의 영역에서 합니다. 속성이로 설정 된 경우 `false`, 컨트롤 영역 간에 이동할 수 없습니다 되지만 현재 영역 내에서 이동할 수 있습니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> 인증 된 사용자만 수정할 수 있습니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> 및 [웹 파트 개인 설정 개요](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)합니다.  
  
   
  
## Examples  
 기본 설정을 변경 하는 방법은 다음 코드 예제는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A> 최종 사용자를 다른 영역으로 컨트롤을 이동할 수 없습니다를 사용자 지정 웹 파트에 대 한 속성을 제어 합니다. 이 예제에서는 사용자 지정 컨트롤을 사용 한다고 가정 `TextDisplayWebPart`의 예 섹션에는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 개요입니다.  
  
 또한이 코드 예제에서는 사용자가 웹 파트 페이지에 대 한 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤을 사용 합니다. 사용자 정의 컨트롤 방법으로 참조 되는 `Register` 사용자 정의 컨트롤을 호스팅하는 웹 페이지의 맨 위 근처에 지시문입니다. 이 사용자 정의 컨트롤을 생성 및 디스플레이 모드를 사용 하는 방법에 대 한 자세한 설명은 참조 하세요. [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_AllowZoneChange#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowZoneChange/CS/displaymodemenucs.ascx#5)]
 [!code-aspx-vb[WebParts_WebPart_AllowZoneChange#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowZoneChange/VB/displaymodemenuvb.ascx#5)]  
  
 두 번째 웹 페이지에 대 한 선언적 태그에서 `<aspSample:TextDisplayWebPart>` 요소, 참고는 `AllowZoneChange="false"` 특성입니다. 최종 사용자 수에 첫 번째 컨트롤을 끌어 하는 데 런타임 시 **WebPartZone2**, 하지만 두 번째 컨트롤은 동일 하 게 수행할 수 없습니다. 브라우저를 사용 하 여 페이지를 로드 하는 **디스플레이 모드** 드롭 다운 목록 컨트롤을 디자인 모드로 표시 모드를 변경 합니다. 각각의 끌는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 다른 파티션으로 컨트롤 영역을 마우스의 값에 따라 서로 다른 동작에 유의 하십시오 자신의 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A> 속성입니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_AllowZoneChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowZoneChange/CS/allowzonechangecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_AllowZoneChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowZoneChange/VB/allowzonechangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationFilter">
      <MemberSignature Language="C#" Value="public virtual string AuthorizationFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthorizationFilter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AuthorizationFilter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AuthorizationFilter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthorizationFilter : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 페이지에 추가할 수 있는 컨트롤인지 여부를 나타낼 임의의 문자열을 가져오거나 설정합니다.</summary>
        <value>컨트롤이 웹 페이지에 추가할 수 있는 컨트롤인지를 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 파트 컨트롤 집합에 대 한 모든 기본 동작을 구현 하지 않습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> 속성입니다. 하지만이 속성은 사용자 지정을 임의의 문자열 값을 할당할 수 있도록 제공 <xref:System.Web.UI.WebControls.WebParts.WebPart> ; 속성으로 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 제어 하는 동안 해당 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> 페이지에는 컨트롤을 추가할 수 있는지 여부를 결정 하기 위해 이벤트 .  
  
 일부 경우에는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> 속성 되는 경우 사용자가 특정 역할을 하 고 하는 경우 ASP.NET 역할 관리자 기능에 사용할 수 있습니다의 문자열 값은 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> 속성은 개발자가 설정한 특정 조건에 맞는 다음 컨트롤을 추가할 수 있습니다. 이 방법을 통해 개발자는 역할 및 지정 하는 다른 권한 부여 조건을 조합에 따라 페이지의 사용자 지정 뷰를 만들 수 있습니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> 인증 된 사용자만 수정할 수 있습니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> 및 [웹 파트 개인 설정 개요](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> 속성입니다. 에 대 한 사용자 지정 메서드 처리기를 설정 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> 이벤트 처리기에 대 한 필터링 사용자 지정 코드를 제공할 수 있도록는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> 메서드. 이 예에는 페이지 개발자 필터링 시나리오 및의 권한 부여를 제공 하는 일반적인 방법은 것 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 한 페이지에 추가 합니다.  
  
 웹 페이지 코드를 알 수 있듯이 `<asp:webpartmanager>` 요소에는 `OnAuthorizeWebPart` 특성에 할당 된 이벤트 처리기의 이름으로 합니다. 이 메서드는 페이지의 컨트롤을 가지는지 확인 자신의 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> 속성 값으로 설정 `admin`,이 경우 반환 `true`를 페이지에 추가할 수 있음을 나타내는입니다.  
  
> [!NOTE]
>  컨트롤에 할당 된 모든 값을 포함 하지는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> 속성도 비활성화 되어 있으므로 추가 가정 됩니다 필터링 시나리오의 일부가 될 수 없습니다. 필터링 시나리오에 일반적인 접근 방식은 것: 일부 컨트롤 필터링 하 고 다른 되지 않습니다, 모든 사용자에 대해 사용할 수 있도록 것으로 가정 됩니다.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  
  
 사용자 역할에이 항목의 범위를 벗어나는 이기 때문에이 코드 예제는 필터링의 사용자 역할을 검사 하지 않습니다. 그러나 필터링 사용자 역할에 따라 컨트롤의 시나리오는이 필터링 기능을 사용 하는 가장 일반적인 중 하나일 수 있습니다. 사이트 역할이 있고이 메서드에 컨트롤을 필터링 할 사용자 역할을 확인 하려는 경우 메서드는 다음 코드 블록 (역할을 사용 하지 않는 이전 코드 예제에는 간단한 방법)와 유사 합니다.  
  
```  
protected void mgr1_AuthorizeWebPart(object sender,   
  WebPartAuthorizationEventArgs e)  
{  
  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  
  {  
    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  
      e.IsAuthorized = true;  
    else  
      e.IsAuthorized = false;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>이 속성을 사용 하려면 사용자 지정 만들어야 합니다 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 컨트롤을 재정의 하거나 해당 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" /> 메서드 또는 해당 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)" /> 에 대 한 확인 작업을 처리 하는 메서드는 <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" /> 속성입니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
      </Docs>
    </Member>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public virtual string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤 카탈로그에서 웹 파트 컨트롤을 나타내는 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value>카탈로그의 컨트롤을 나타내는 데 사용되는 이미지의 URL 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> 인증 된 사용자만 수정할 수 있습니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> 및 [웹 파트 개인 설정 개요](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A> 속성에 대 한는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 이미지 컨트롤의 카탈로그의 컨트롤과 함께 표시를 제어 합니다. 이 예제에서는 사용자 지정 컨트롤을 사용 한다고 가정 `TextDisplayWebPart`의 예 섹션에서 생성 된 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 개요입니다.  
  
 또한이 코드 예제에서는 사용자가 웹 파트 페이지에 대 한 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤을 사용 합니다. 사용자 정의 컨트롤 방법으로 참조 되는 `Register` 사용자 정의 컨트롤을 호스팅하는 웹 페이지의 맨 위 근처에 지시문입니다. 이 사용자 정의 컨트롤을 생성 및 디스플레이 모드를 사용 하는 방법에 대 한 자세한 설명은 참조 하세요. [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_CatalogIconImageUrl#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_CatalogIconImageURL/CS/displaymodemenucs.ascx#5)]
 [!code-aspx-vb[WebParts_WebPart_CatalogIconImageUrl#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_CatalogIconImageURL/VB/displaymodemenuvb.ascx#5)]  
  
 웹 페이지의 선언적 태그에서 확인 된 `<asp:CatalogZone>` 요소입니다. 여러 요소를 포함 하는 그 안에 중첩 된는 `<aspSample:TextDisplayWebPart>` 요소입니다. 이 집합의 요소는 사용자 지정을 사용 하면 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 카탈로그에 표시 합니다. 에 대 한 태그에는 `<aspSample:TextDisplayWebPart>` 요소 다음에 유의 `CatalogIconImageUrl` 특성 이미지 파일에 URL을 포함 하는 문자열을 할당 합니다. 브라우저를 사용 하 여 페이지를 로드 하는 **디스플레이 모드** 드롭 다운 목록 컨트롤을 디스플레이 모드를 카탈로그 모드로 변경 합니다. 다음 카탈로그 사용자 인터페이스 (UI)를 사용 하 여 사용자 지정을 추가 하려면 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 페이지입니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_CatalogIconImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_CatalogIconImageURL/CS/catalogiconimageurlcs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_CatalogIconImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_CatalogIconImageURL/VB/catalogiconimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">내부 유효성 검사 시스템에서 URL에 스크립트 공격이 포함되었을 것으로 판단한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ChromeState">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.PartChromeState ChromeState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PartChromeState ChromeState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ChromeState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ChromeState As PartChromeState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::PartChromeState ChromeState { System::Web::UI::WebControls::WebParts::PartChromeState get(); void set(System::Web::UI::WebControls::WebParts::PartChromeState value); };" />
      <MemberSignature Language="F#" Value="member this.ChromeState : System.Web.UI.WebControls.WebParts.PartChromeState with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.ChromeState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파트 컨트롤이 최소화된 상태인지 또는 표준 상태인지 여부를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeState" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.WebParts.PartChromeState.Normal" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부 컨트롤의 <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeState%2A> 속성 값 정상 또는 최소화 될 수 있습니다. <xref:System.Web.UI.WebControls.WebParts.WebPart> 최종 사용자가 개인 설정할 수 있도록 클래스 기본 속성을 재정의 합니다.  
  
 이 속성을 사용 하는 코드 예제를 보려면 기본 <xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 값이 <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeState" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.ChromeState" />
      </Docs>
    </Member>
    <Member MemberName="ChromeType">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.PartChromeType ChromeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PartChromeType ChromeType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ChromeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ChromeType As PartChromeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::PartChromeType ChromeType { System::Web::UI::WebControls::WebParts::PartChromeType get(); void set(System::Web::UI::WebControls::WebParts::PartChromeType value); };" />
      <MemberSignature Language="F#" Value="member this.ChromeType : System.Web.UI.WebControls.WebParts.PartChromeType with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.ChromeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>웹 파트 컨트롤의 프레임이 되는 테두리의 형태를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.WebParts.PartChromeType.Default" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부 컨트롤의 <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> 속성 컨트롤을 둘러싸는 테두리의 종류를 결정 합니다. 옵션에도, 제목만만 테두리, 제목 및 테두리를 보여 주는 포함 하거나 단순히 값을 사용 하는 기본 옵션을는 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPart> 최종 사용자가 개인 설정할 수 있도록 클래스 기본 속성을 재정의 합니다.  
  
 이 속성을 사용 하는 코드 예제를 보려면 기본 <xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">값이 <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.ChromeType" />
      </Docs>
    </Member>
    <Member MemberName="ConnectErrorMessage">
      <MemberSignature Language="C#" Value="public string ConnectErrorMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectErrorMessage { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectErrorMessage : string" Usage="System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결 중 오류가 발생할 경우 사용자에게 표시할 오류 메시지를 가져옵니다.</summary>
        <value>오류 메시지를 포함하는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 콘텐츠는 <xref:System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage%2A> 속성 웹 파트 컨트롤 집합에서 내부적으로 제공 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="abstract member CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection&#xA;override this.CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="webPart.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>편집 모드에서 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤을 편집하는 데 사용할 수 있는 사용자 지정 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 컬렉션을 반환합니다.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 컨트롤에 연결된 사용자 지정 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤이 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개발자가이 메서드를 사용 하 여 사용자 지정의 인스턴스를 만들 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 연결 하고자 하는 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 사용자가 클릭 하면 편집 동사 메서드가 호출 되는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
> [!NOTE]
>  새 인스턴스는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 이 메서드에서 생성 된 컨트롤을에 추가 하려면 먼저 해당 ID 속성에 할당 된 값이 있어야 합니다.는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 컬렉션입니다.  
  
 사용 하는 코드 예제는 <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> 메서드를 참조는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public override string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.Description" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IWebPart.Description</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파트 컨트롤의 도구 설명과 카탈로그에 사용하기 위해 파트 컨트롤의 용도를 요약한 간략한 문구를 가져오거나 설정합니다.</summary>
        <value>파트 컨트롤의 기능을 간략하게 요약한 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A> 속성은 일반적으로 고 파트 컨트롤의 제목 표시줄에 도구 설명 컨트롤에 다양 한 목록을 제공 하는 카탈로그에 사용 되는 문자열입니다. 콘텐츠는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A> 속성은 파트 컨트롤의 제목 표시줄의 제목 텍스트 위에 마우스 포인터를 놓으면 도구 설명에 나타납니다. 도구 설명 텍스트의 값에서 생성 됩니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> 속성, 하이픈, 뒤의 <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A> 속성 값입니다.  
  
 이 속성을 사용 하는 코드 예제를 보려면 기본 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> 속성입니다.  
  
 이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> 인증 된 사용자만 수정할 수 있습니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> 및 [웹 파트 개인 설정 개요](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.ContentDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ContentDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ContentDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ContentDirection Direction { System::Web::UI::WebControls::ContentDirection get(); void set(System::Web::UI::WebControls::ContentDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.UI.WebControls.ContentDirection with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ContentDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤 내에서 내용의 가로 진행 방향을 가져오거나 설정합니다.</summary>
        <value>내용의 가로 방향 흐름을 나타내는 <see cref="T:System.Web.UI.WebControls.ContentDirection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart> 최종 사용자가 속성을 개인 설정할 수 있도록 클래스 기본 속성 값을 재정의 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.Direction" />
      </Docs>
    </Member>
    <Member MemberName="DisplayTitle">
      <MemberSignature Language="C#" Value="public string DisplayTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayTitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayTitle : string" Usage="System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤 인스턴스의 제목 표시줄에 실제로 표시되는 전체 제목 텍스트가 들어 있는 문자열을 가져옵니다.</summary>
        <value>표시되는 컨트롤의 전체 제목을 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> 의 현재 값을 반환 하는 속성은 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> 속성 또는 컨트롤에는 계산 된 값 제목이 없는 경우. 영역 내에서 컨트롤의 인덱스에 따라 숫자 (있는 경우 영역 내에서 여러 개의 컨트롤)과 계산 된 값 제목 없는 컨트롤에 대 한 리소스를 지역화할 수 있는 문자열으로 구성 됩니다.  
  
 사용자 지정에 대 한 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤의 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> 부제목을으로 사용 하는 문자열 값을 반환할 속성은 재정의 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> 속성 완전 제목이 되려면 부제목과 연결 됩니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> 속성 값도 사용 될 때 나타나는 도구 설명의 일부로 사용자 위치 마우스 포인터가 컨트롤의 제목 표시줄 위로 합니다. 전체 도구 설명으로 이루어져는 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> 값, 하이픈, 다음에 컨트롤의 값 <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
      </Docs>
    </Member>
    <Member MemberName="ExportMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartExportMode ExportMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.WebPartExportMode ExportMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExportMode As WebPartExportMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartExportMode ExportMode { System::Web::UI::WebControls::WebParts::WebPartExportMode get(); void set(System::Web::UI::WebControls::WebParts::WebPartExportMode value); };" />
      <MemberSignature Language="F#" Value="member this.ExportMode : System.Web.UI.WebControls.WebParts.WebPartExportMode with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartExportMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤 속성의 전체를 내보낼 수 있는지, 일부를 내보낼 수 있는지 또는 내보낼 수 없는지 여부를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartExportMode" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.WebParts.WebPartExportMode.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 내보낼 수 없습니다 및 해당 <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> 속성이 <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>합니다. 내보내기는 컨트롤에 대 한 모든 속성을 사용 하려면 설정는 <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> 값을 <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All>합니다. 속성 값을 설정 하면 특정 속성에만 중요 한 데이터를 포함 하는 속성은 내보내지 않고을 내보내려면 <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>합니다.  
  
 에 대 한 값 설명 속성을 내보내려면는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 속성 또한으로 표시 되어야 합니다는 `Personalizable` 속성의 소스 코드에 대 한 메타 데이터에는 특성입니다. 자세한 내용은 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>를 참조하세요.  
  
> [!NOTE]
>  응용 프로그램에 대 한 Web.config 파일에서 웹 파트 컨트롤을 포함 하는 웹 응용 프로그램에 대 한 내보내기 기능을 사용 하려면 특성을 추가 해야는 `<webParts>` 내의 요소는 `<system.web>` 섹션에 다음 태그와 같이 합니다.  
>   
>  `<webParts  enableExport="true">`  
>   
>  `</webParts>`  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> 인증 된 사용자만 수정할 수 있습니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> 및 [웹 파트 개인 설정 개요](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> 속성입니다. 내보내기 코드 예제가 작동 하려면 해야 업데이트 하는 Web.config 파일 특성을 추가 하 여 참고 `enableExport="true"` 에 `<webParts>` 주의 섹션에 표시 된 대로 요소입니다.  
  
 라는 컨트롤에 대 한 코드를 포함 하는이 예제의 첫 번째 부분은 `TextDisplayWebPart`합니다. 이 컨트롤은 사용자 지정 컨트롤의 예제 섹션에 있는 동일는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 개요를 추가 한다는 점을 제외 하 고는 `Personalizable` 특성을 `TextDisplayWebPart.ContentText` 속성이 속성 내보낼 수 있도록 합니다. 특성 선언에 값이 포함 `true` 에 대 한는 `isSensitive` 매개 변수에 중요 한 데이터를 목적으로 내보낼 처럼 속성이 표시 됩니다. 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 여기서 것 동적으로 컴파일되는 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 이 코드 예제에서는 가정 소스 코드를 어셈블리로 컴파일할 웹 응용 프로그램의 Bin 하위 폴더에 배치 하는 참조 된 어셈블리는 `Register` 웹 페이지의 지시문입니다. 두 컴파일 방법을 보여 주는 연습을 참조 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-csharp[WebParts_WebPart_ExportMode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_ExportMode/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts_WebPart_ExportMode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_ExportMode/VB/textdisplaywebpart.vb#2)]  
  
 예제의 두 번째 부분을 참조 하는 방법을 보여 줍니다는 `TextDisplayWebPart` ASP.NET 웹 페이지에서 제어 합니다. 선언적 태그에서의 <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> 속성 값으로 설정 됩니다 <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All>, 중요 한 값을 사용 하 여에 속성은 내보낼 수를 의미 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_ExportMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_ExportMode/CS/exportmodecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_ExportMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_ExportMode/VB/exportmodevb.aspx#1)]  
  
 동사 메뉴 및 브라우저에서 웹 페이지를 로드 하는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 내보내기 동사를 클릭 하 고 컨트롤의 상태 및 속성 데이터를 포함 하는 설명 파일을 내보내는 지침을 따릅니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 값이 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartExportMode" /> 값 중 하나가 아닌 경우</exception>
        <exception cref="T:System.InvalidOperationException">컨트롤이 이미 로드되었고 컨트롤의 개인 설정 범위가 <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> 범위로 설정된 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.PersonalizableAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="HasSharedData">
      <MemberSignature Language="C#" Value="public bool HasSharedData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSharedData" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.HasSharedData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasSharedData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasSharedData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasSharedData : bool" Usage="System.Web.UI.WebControls.WebParts.WebPart.HasSharedData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 연결된 공유 개인 설정 데이터가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컨트롤에 공유 개인 설정 데이터가 있는지 여부를 나타내는 부울 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 설정 된 컨트롤 공유 범위에서 모든 사용자에 게 표시 하는 개인 설정 데이터를 의미 합니다. 개인 설정 데이터를 나타냅니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasUserData">
      <MemberSignature Language="C#" Value="public bool HasUserData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasUserData" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.HasUserData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasUserData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasUserData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasUserData : bool" Usage="System.Web.UI.WebControls.WebParts.WebPart.HasUserData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 연결된 사용자 개인 설정 데이터가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컨트롤에 사용자 개인 설정 데이터가 있는지 여부를 나타내는 부울 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성, 컨트롤에 사용자가 해당 사용자 에게만 표시 되는 특정 설정을 즉, 사용자를 사용자 지정 개인 설정 데이터를 나타냅니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Height : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역의 높이를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Unit" />의 높이를 나타내는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> 개체입니다. <see cref="T:System.Web.UI.WebControls.Unit" /> 속성에 표시된 것처럼 <see cref="P:System.Web.UI.WebControls.Unit.Type" />의 기본 형식은 픽셀입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Internet Explorer 렌더링 모드의 높이 영향을 줄 수는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 및 포함 된 영역의 높이입니다. 호환 모드 (이전 버전의 브라우저와 호환) 또는 표준 모드에서 Internet Explorer에서 웹 페이지를 렌더링 (의 존재에 의해 결정 된 `DOCTYPE` 페이지에 선언이). 이러한 모드에 대 한 내용은 DHTML 참조 [compatMode](http://go.microsoft.com/fwlink/?LinkId=57175) 속성입니다.  
  
 Internet Explorer 표준 모드에서 페이지 렌더링 되 면 상황에 따라 것 수 크기를 조정 하지, 표 셀에에서 셀의 HTML 태그입니다. 경우에 `<td height="100%">`합니다. 결과적으로, <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역의 전체 높이 컨트롤 늘어나지 않도록 있도록 컨트롤 포함 하는 영역이 렌더링 됩니다.  
  
 Internet Explorer 표준 모드일 때 다음과 같은 경우에는 전체 높이 늘어나 컨트롤 렌더링 하지 않습니다.  
  
-   영역의 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 속성이 <xref:System.Web.UI.WebControls.Orientation.Vertical> 영역 높이 명시적으로 설정 합니다. 영역의 전체 높이를 채우도록 컨트롤을 사용 하려면 가로 방향의 영역의 높이 지정 하지 마십시오.  
  
-   영역의 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 속성이 <xref:System.Web.UI.WebControls.Orientation.Horizontal> 영역 또는 포함 된 컨트롤의 높이 명시적으로 설정 하지 마십시오. 영역의 전체 높이를 채우도록 컨트롤을 사용 하도록 설정 하려면 세로 방향된 영역에서 영역 또는 컨트롤의 높이 설정 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는의 높이 영향을 주는 렌더링 문제를 보여 줍니다. <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤에 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>합니다.  이 문제를 보여 주기 위해 Internet Explorer에서 페이지를 실행 해야 합니다.  
  
 영역의 방향이 가로로 설정 되어 있는지와 영역과 내에 있는 컨트롤의 높이 명시적으로 설정 되지 않았음을 note 합니다.  에 결과는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>더 짧은 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 렌더링 시 영역의 높이를 늘여 지지 않습니다.  그러나 제거 하는 경우는 `DOCTYPE` 다시 선언의 페이지와 실행 페이지에서 문제가 발생 하지 않습니다, 브라우저 표준 모드에서 페이지를 렌더링 하지 않으므로 이제 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_Height#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Height/CS/Defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_Height#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Height/VB/Defaultvb.aspx#1)]  
  
 문제를 어떻게 작동 하는지 (주의 섹션에 설명 된) 해결 방법을 보려면 하려면 추가 `height` 특성을 `<asp:webpartzone>` 하 게 유지 하면서 요소는 `DOCTYPE` 페이지에 선언이 있습니다.  태그에 특성을 추가 하려면 다음 코드를 사용할 수 있습니다.  
  
 `Height="200px"`  
  
 페이지 및 실행 이제 모두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역의 명시적으로 선언 된 높이를 채우도록 스트레치를 제어 합니다.  
  
 이 코드 예제 발생 다른 시나리오에서 해당 높이 관련 렌더링 문제를 설정할 수도 때 영역의 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 로 설정 된 <xref:System.Web.UI.WebControls.Orientation.Vertical>합니다.  기존 제거 `LayoutOrientation` 특성 및 해당 값에서는 `<asp:webpartzone>` 요소 기본 세로 방향으로 되돌리려면 영역의 방향을 발생할 수 있습니다.  높이 특성에 설정 된 `<asp:webpartzone>` 때 200 픽셀 요소 위 및 페이지를 실행 합니다.  영역의 높이 너무 커서 찾아서 컨트롤 크기가 비례하여 영역의 높이를 합니다.  이제 높이 특성을 제거 하 고 페이지를 다시 실행 합니다.  이제 컨트롤 영역의 높이 기준으로 렌더링 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation" />
      </Docs>
    </Member>
    <Member MemberName="HelpMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartHelpMode HelpMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.WebPartHelpMode HelpMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.HelpMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpMode As WebPartHelpMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartHelpMode HelpMode { System::Web::UI::WebControls::WebParts::WebPartHelpMode get(); void set(System::Web::UI::WebControls::WebParts::WebPartHelpMode value); };" />
      <MemberSignature Language="F#" Value="member this.HelpMode : System.Web.UI.WebControls.WebParts.WebPartHelpMode with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.HelpMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartHelpMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 대한 도움말 콘텐츠를 표시하는 데 사용되는 UI(사용자 인터페이스) 형식을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartHelpMode" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Modal" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> 브라우저 컨트롤에 대 한 도움말 콘텐츠를 표시 되는 방법을 결정 하는 속성입니다. 다음 표에서 브라우저에 대 한 다양 한 도움말 모드의 효과 보여 줍니다. 때 도움말에 대 한 콘텐츠는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤이 표시 됩니다.  
  
|도움말 모드|브라우저 동작|  
|---------------|----------------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Modal>|별도의 브라우저 창을 엽니다(브라우저에 이 기능이 있는 경우). 웹 파트 페이지로 돌아가려면 먼저 이 창을 닫아야 합니다.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Modeless>|별도의 브라우저 창을 엽니다(브라우저에 이 기능이 있는 경우). 이 창을 닫지 않아도 웹 페이지로 돌아갈 수 있습니다.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Navigate>|브라우저 창의 웹 파트 페이지를 대체합니다.|  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> 인증 된 사용자만 수정할 수 있습니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> 및 [웹 파트 개인 설정 개요](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> 동일한 브라우저 창에서 컨트롤에 대 한 도움말을 표시 하는 속성입니다. 이 예의 첫 번째 부분에 사용자 지정 컨트롤을 사용 한다고 가정 `TextDisplayWebPart`의 예 섹션에는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 개요입니다.  
  
 코드 예제에서는 가상의 도움말 콘텐츠를 포함 하는 HTML 페이지도는 `TextDisplayWebPart` 제어 합니다. 이 예제가 작동 하려면 Textwebparthelp.htm 라는 파일에 다음 코드를 저장 및.aspx 페이지와 사이트의 동일한 디렉터리에 배치 해야 합니다.  
  
```  
<html>  
<head runat="server">  
    <title>Text Content WebPart Help</title>  
</head>  
<body>  
  <div>  
  <h1>Text Content WebPart Help</h1>  
  To make the WebPart control work...  
  </div>  
</body>  
</html>  
```  
  
 예제의 마지막 부분에는 참조 하는 방법을 보여 주는 웹 페이지는 `TextDisplayWebPart` 제어 합니다. 선언적 태그에서의 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> 속성 값으로 설정 됩니다 <xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Navigate>, 코드의 값을 설정는 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> 속성을 도움말 콘텐츠를 포함 하는 HTML 파일의 이름입니다. 도움말 동사의 동사 메뉴를 클릭 하 고 브라우저 페이지 로드는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_HelpMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_HelpMode/CS/helpmodecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_HelpMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_HelpMode/VB/helpmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 값이 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartHelpMode" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl" />
      </Docs>
    </Member>
    <Member MemberName="HelpUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.HelpUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 대한 도움말 파일의 URL을 가져오거나 설정합니다.</summary>
        <value>도움말 파일의 URL을 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 동사 메뉴에서 도움말 동사 동사 메뉴를 사용 하도록 설정 하려면 한 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤에 대 한 값을 제공 해야는 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> 속성입니다. 도움말 콘텐츠가 브라우저에 표시 되는 방식으로의 값에 의해 결정 되는 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> 속성입니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> 인증 된 사용자만 수정할 수 있습니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> 및 [웹 파트 개인 설정 개요](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> 속성입니다. 이 예제에서는 사용자 지정 컨트롤을 사용 한다고 가정 `TextDisplayWebPart`의 예 섹션에는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 개요입니다.  
  
 코드 예제에서는 가상의 도움말 콘텐츠를 포함 하는 HTML 페이지도는 `TextDisplayWebPart` 제어 합니다. 이 예제가 작동 하려면 Textwebparthelp.htm 라는 파일에 다음 코드를 저장 및.aspx 페이지와 사이트의 동일한 디렉터리에 배치 해야 합니다.  
  
```  
<html>  
<head runat="server">  
    <title>Text Content WebPart Help</title>  
</head>  
<body>  
  <div>  
  <h1>Text Content WebPart Help</h1>  
  To make the WebPart control work...  
  </div>  
</body>  
</html>  
```  
  
 예제의 마지막 부분에는 참조 하는 방법을 보여 주는 웹 페이지는 `TextDisplayWebPart` 제어 합니다. 선언적 태그에서의 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> 속성 값으로 설정 됩니다 <xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Navigate>, 코드의 값을 설정는 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> 속성을 도움말 콘텐츠를 포함 하는 HTML 파일의 이름입니다. 도움말 동사의 동사 메뉴를 클릭 하 고 브라우저 페이지 로드는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_HelpMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_HelpMode/CS/helpmodecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_HelpMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_HelpMode/VB/helpmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">내부 유효성 검사 시스템에서 URL에 스크립트 공격이 포함되었을 것으로 판단한 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.HelpMode" />
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public virtual bool Hidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Hidden" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Hidden" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Hidden As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Hidden { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Hidden : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.Hidden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 웹 페이지에 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 웹 페이지에 표시되면 <see langword="false" />이고, 그렇지 않으면 <see langword="true" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.WebParts.WebPart> 해당 영역에 숨겨진된 여전히에 있는 컨트롤과 해당 페이지에서 실제로 렌더링 되 고에 참여 페이지 수명 주기 단계와 같은 `PreRender` 브라우저에 표시 되지 않는 경우에 단계입니다. 이 다릅니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 닫힌 컨트롤은, 닫힌된 컨트롤 렌더링 되기 때문에 하지도 페이지에 숨겨진된 컨트롤은 렌더링 및 웹 파트 응용 프로그램에서 활성 상태인 경우에 사용자에 게 표시 되지 않습니다. 웹 파트 컨트롤 집합 숨기는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 스타일 시트 (CSS) 계단식의 값으로 설정 하 여 컨트롤 `display:none`합니다.  
  
 경우에는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 컨트롤에 대 한 속성이로 설정 되어 `true`, 컨트롤이 페이지에 현재 표시 모드 숨겨진된 컨트롤이 표시 될 수를 허용 하는 경우 계속 표시 됩니다. 예를 들어 편집 모드 편집할 수 있도록 숨겨진된 컨트롤이 표시 될 수 있습니다. 숨겨진된 컨트롤을 특정 디스플레이 모드에 표시 하는 경우 컨트롤의 제목을 컨트롤이 숨겨진된 상태에 있는지를 나타내는 문자열을 표시 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 로 설정 되어 `false`, 기본값, 컨트롤이 페이지에 표시 됩니다. 되는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A> 속성이 `false`, 최종 사용자가 편집할 수 없습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 속성 값입니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 속성에서 사용자 지정 웹 파트 컨트롤입니다. 이 예제에서는 사용자 지정 컨트롤을 사용 한다고 가정 `TextDisplayWebPart`의 예 섹션에는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 개요입니다.  
  
 웹 페이지에 대 한 선언적 태그에서의 `<aspSample:TextDisplayWebPart>` 요소는 `Hidden` 특성 값으로 설정 되어 `true`합니다. `TextDisplayWebPart` 페이지가 브라우저에 로드 하는 경우 컨트롤이 표시 되지 것입니다. 그러나 컨트롤은 페이지 하 고 해당 영역에 그대로 고 그 수에 참가할 상호 연결 <xref:System.Web.UI.WebControls.WebParts.WebPart> 이러한 연결을 만든 경우를 제어 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_Hidden#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Hidden/CS/hiddencs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_Hidden#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Hidden/VB/hiddenvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowHide" />
      </Docs>
    </Member>
    <Member MemberName="ImportErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string ImportErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImportErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ImportErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImportErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImportErrorMessage : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 가져올 때 오류가 발생하면 사용되는 오류 메시지를 가져오거나 설정합니다.</summary>
        <value>오류 메시지를 포함하는 문자열입니다. 기본값은 웹 파트 컨트롤 집합에서 제공하는 표준 오류 메시지입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage%2A> 속성을 사용 하면 사용자가 웹 파트 컨트롤의 카탈로그를 카탈로그로 파트 컨트롤의 설명 파일을 가져올 때 오류가 발생 하는 경우 표시 되는 사용자 지정 오류 메시지를 설정할 수 있습니다. 선언적으로 속성을 설정할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 추가 `ImportErrorMessage` 오류 메시지 문자열을 할당 및 컨트롤의 여는 태그 내에서 특성입니다. 속성 값을 프로그래밍 방식으로 설정할 수도 있습니다.  
  
 내보내기 및 가져오기 모두 보여 주는 전체 코드 예제입니다. 웹 파트 설명 파일을 <xref:System.Web.UI.WebControls.WebParts.WebPart> 의 사용을 포함 하는 컨트롤을는 <xref:System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage%2A> 속성 참조는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 클래스입니다.  
  
 이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute> 및 [전역화 및 지역화](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
 이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> 인증 된 사용자만 수정할 수 있습니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> 및 [웹 파트 개인 설정 개요](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 현재 웹 파트 페이지에서 닫혀 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컨트롤이 닫혀 있는지 여부를 나타내는 부울 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.WebParts.WebPart> 닫힌 제어는 페이지에서 렌더링 되지 않으며 페이지 이벤트에 참여 하지 않습니다. 그러나 페이지 카탈로그는 웹 파트 응용 프로그램에 의해 유지 관리 하 고 적절 한 사용자 인터페이스 (UI) 제공 된 경우 사용자가을 페이지에 다시 추가할 수 있습니다. 자세한 내용은 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A>을 참조하세요.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="IsShared">
      <MemberSignature Language="C#" Value="public bool IsShared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShared" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsShared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsShared { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsShared : bool" Usage="System.Web.UI.WebControls.WebParts.WebPart.IsShared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 공유되는지, 즉 웹 파트 페이지의 모든 사용자에게 표시되는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 웹 페이지의 공유 사용자에게 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 공유 웹 파트 컨트롤을 웹 페이지의 모든 사용자에 게 표시 됩니다. 사용자 컨트롤을 제어 하는 페이지에 추가한 사용자 에게만 표시 되 고 사용자 고유의는 공유 컨트롤 반대로 합니다.  
  
 사용자가 공유 개인 설정 범위에서 페이지를 보고 하는 동안 동적 컨트롤 추가 되 면 컨트롤 공유 됩니다. 컨트롤은 사용자가 사용자 개인 설정 범위에서 하는 동안 추가 된 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> 해당 컨트롤에 대 한 속성 값이 됩니다 `false`합니다.  
  
 에 대 한 자세한 내용은 공유 및 사용자 컨트롤 참조 [웹 파트 개인 설정 개요](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> 속성에서 사용자 지정 웹 파트 컨트롤입니다. 이 예제에서는 사용자 지정 컨트롤을 사용 한다고 가정 `TextDisplayWebPart`의 예 섹션에서 생성 된 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 개요입니다.  
  
 클릭 하 여 브라우저에서 웹 페이지를 로드 하는 경우는 **공유 확인** 단추, 코드 검사는 <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> 속성에는 `TextDisplayWebPart` 제어 및 속성의 값은 `true`컨트롤 참조 되기 때문에, 페이지의 선언적 태그에서 정적 컨트롤로 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_IsShared#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_IsShared/CS/issharedcs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_IsShared#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_IsShared/VB/issharedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone" />
      </Docs>
    </Member>
    <Member MemberName="IsStandalone">
      <MemberSignature Language="C#" Value="public bool IsStandalone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStandalone" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStandalone As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStandalone { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStandalone : bool" Usage="System.Web.UI.WebControls.WebParts.WebPart.IsStandalone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 독립 실행형인지, 즉 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 영역에 포함되어 있지 않은지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />에 포함되어 있지 않으면 <see langword="true" />이고, 포함되어 있으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" />
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.IsStatic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStatic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStatic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStatic : bool" Usage="System.Web.UI.WebControls.WebParts.WebPart.IsStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 정적 컨트롤인지, 즉 이 컨트롤이 웹 파트 페이지의 태그에 선언되었고 프로그래밍 방식으로 페이지에 추가되지 않았는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컨트롤이 정적인지 여부를 나타내는 부울 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정적 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤은 웹 파트 페이지의 태그에 선언입니다. 이와 달리 동적 <xref:System.Web.UI.WebControls.WebParts.WebPart> 사용자가 컨트롤을 선택 하는 컨트롤의 카탈로그에서 실행 시 또는 제어 하거나 프로그래밍 방식으로 추가 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected internal virtual void OnClosing (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnClosing(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.OnClosing(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnClosing (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnClosing(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosing : EventArgs -&gt; unit&#xA;override this.OnClosing : EventArgs -&gt; unit" Usage="webPart.OnClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 웹 파트 페이지에서 닫힐 때 파생 클래스에서 사용자 지정 처리 기능을 제공하도록 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 기본 클래스 구현이 포함 되어 있습니다. 파생 된 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 사용자 지정 컨트롤을 닫을 때 처리 방법을 제공 하는 데 필요한 경우 메서드를 재정의할 수 있습니다. <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤이 자동으로 호출 된 <xref:System.Web.UI.WebControls.WebParts.WebPart.OnClosing%2A> 메서드는 파생된 클래스에서 구현을 제공 하는 경우.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
      </Docs>
    </Member>
    <Member MemberName="OnConnectModeChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnConnectModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnConnectModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnConnectModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnConnectModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnConnectModeChanged : EventArgs -&gt; unit&#xA;override this.OnConnectModeChanged : EventArgs -&gt; unit" Usage="webPart.OnConnectModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 다른 컨트롤에 연결하는 프로세스를 시작하거나 끝낼 때 파생 클래스에서 사용자 지정 처리 기능을 제공하도록 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 기본 클래스 구현이 포함 되어 있습니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 해야 하는 파생된 된 컨트롤의 <see cref="M:System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(System.EventArgs)" /> 메서드. 개발자가 사용자 지정 이벤트를 발생 시킬 수도 있고, 다른 동작을 수행할 수 있습니다. 메서드에 의해 호출 됩니다는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 제어는 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)" /> 및 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting" /> 메서드가 호출 되어 컨트롤 간에 연결을 설정 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDeleting (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDeleting(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDeleting (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDeleting(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleting : EventArgs -&gt; unit&#xA;override this.OnDeleting : EventArgs -&gt; unit" Usage="webPart.OnDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 웹 파트 페이지에서 영구적으로 제거될 때 파생 클래스에서 사용자 지정 처리 기능을 제공하도록 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 기본 클래스 구현이 포함 되어 있습니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 해야 하는 파생된 된 컨트롤의 <see cref="M:System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(System.EventArgs)" /> 메서드. 개발자가 사용자 지정 이벤트를 발생 시킬 수도 있고, 다른 동작을 수행할 수 있습니다. 메서드를 호출한 경우는 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" /> 메서드를 호출 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnEditModeChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnEditModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEditModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnEditModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnEditModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditModeChanged : EventArgs -&gt; unit&#xA;override this.OnEditModeChanged : EventArgs -&gt; unit" Usage="webPart.OnEditModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 편집 모드로 들어가거나 편집 모드에서 나갈 때 파생 클래스에서 사용자 지정 처리 기능을 제공하도록 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 기본 클래스 구현이 포함 되어 있습니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 해야 하는 파생된 된 컨트롤의 <see cref="M:System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(System.EventArgs)" /> 메서드 및 사용자 지정 이벤트를 발생 시키는 재정의 된 메서드를 사용 합니다. 개발자가 사용자 지정 이벤트를 발생 시킬 수도 있고, 다른 동작을 수행할 수 있습니다. 메서드를 호출한 경우는 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" /> 및 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" /> 편집 하는 동안 호출 되어 합니다.</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetPersonalizationDirty">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 영역에 배치된 서버 컨트롤이나 웹 파트 컨트롤의 개인 설정 데이터가 변경되었음을 나타내는 플래그를 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetPersonalizationDirty">
      <MemberSignature Language="C#" Value="protected void SetPersonalizationDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetPersonalizationDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetPersonalizationDirty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetPersonalizationDirty();" />
      <MemberSignature Language="F#" Value="member this.SetPersonalizationDirty : unit -&gt; unit" Usage="webPart.SetPersonalizationDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤 인스턴스의 개인 설정 데이터가 변경되었음을 나타내는 플래그를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A> 메서드 컨트롤 상태 데이터가 변경 된 것 (개인)를 나타내는 플래그를 설정는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤과 하는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤 따라서 장기 저장소에 개인 설정 데이터를 유지 해야 합니다.  
  
 일반적으로 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 에서 개인 설정 변경 내용을 계속 되 면 <xref:System.Web.UI.WebControls.WebParts.WebPart> 호출 하는 개발자를 위한 필요 없이 컨트롤의 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A> 메서드. 하지만 두 가지 경우에는 개발자가 필요가이 메서드를 호출 합니다. 첫 번째 경우는 컨트롤 상태 데이터는 HTTP 동안 변경 된 경우 `GET` 페이지를 요청 합니다. 기본적으로 변경 하는 동안 컨트롤 상태 데이터는 `GET` 요청 (보안을 위해) 유지 되지 않습니다. 하지만 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A> 메서드에 적절 한 개인 설정 변경 내용을 유지 하는 방법을 제공 <xref:System.Web.UI.WebControls.WebParts.WebPart> 이 경우를 제어 합니다.  
  
 호출에 대 한 두 번째 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A> 이내에 HTTP 메서드 `POST` 페이지를 요청 합니다. 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤에 복잡 한 개인 설정 가능한 속성 (포함 된 속성과 같이 <xref:System.Collections.ArrayList> 개체), 이러한 속성의 컨트롤 상태 데이터 중 개인 설정 되 고는 `POST` 요청 개발자 호출 해야 합니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A> 메서드는 변경 내용이 유지 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPersonalizationDirty">
      <MemberSignature Language="C#" Value="public static void SetPersonalizationDirty (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetPersonalizationDirty(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetPersonalizationDirty(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="static member SetPersonalizationDirty : System.Web.UI.Control -&gt; unit" Usage="System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">개인 설정 데이터가 변경된 <see cref="T:System.Web.UI.Control" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 영역에 있는 지정된 서버 컨트롤의 개인 설정 데이터가 변경되었음을 나타내는 플래그를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A?displayProperty=nameWithType> 메서드에 동일한 목적으로는 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty?displayProperty=nameWithType> 컨트롤 상태 데이터는 변경 되었음을 나타내는 (개인) 서버 컨트롤에는 HTTP 중 플래그를 설정 하는 메서드를 `GET` 요청 합니다. 이러한 방법 간의 차이점은는 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A?displayProperty=nameWithType> 서버 컨트롤에서 상속 하지 않는 메서드를 사용 하는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 내에 배치 됩니다 같지만 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 웹 파트 응용 프로그램에 참여 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> 매개 변수의 개체가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException">컨트롤이 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />에서 파생된 경우. <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />에서 파생된 컨트롤은 대신 보호되는 <see cref="M:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty" /> 메서드를 사용해야 합니다.</exception>
        <exception cref="T:System.InvalidOperationException">컨트롤과 연결된 페이지에 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />가 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public virtual string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Subtitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Subtitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Subtitle : string" Usage="System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Title" /> 컨트롤의 전체 제목을 구성하기 위해 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 속성 값에 연결된 문자열을 가져옵니다.</summary>
        <value>컨트롤의 부제목으로 사용되는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> 필요에 따라 반환할 속성 표준 부제목 문자열의 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 컨트롤의 제목에 추가 됩니다.  
  
 에 대 한 값을 제공 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> 사용자 지정에서 속성 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 자동으로 설정 하는 컨트롤의 값에 항목을 추가 하 여 웹 파트는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A> 컨트롤에 대 한 완전 제목을 만들 속성입니다.  
  
 이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute> 및 [전역화 및 지역화](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 대 한 부제목을 제공 하는 방법을 사용자 지정 인스턴스 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 라는 사용자 지정 컨트롤에 대 한 코드를 포함 하는이 예제의 첫 번째 부분은 `TextDisplayWebPart`합니다. 이 컨트롤은 사용자 지정 컨트롤의 예제 섹션에 있는 동일는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 개요를 제외 하 고 또한 재정의 <xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> 속성에 대 한 가상의 회사 이름을 포함 하는 표준 부제목을의 인스턴스 사용자 지정 컨트롤입니다. 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 여기서 것 동적으로 컴파일되는 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 이 코드 예제에서는 가정 소스 코드를 어셈블리로 컴파일할 웹 응용 프로그램의 Bin 하위 폴더에 배치 하는 참조 된 어셈블리는 `Register` 웹 페이지의 지시문입니다. 두 컴파일 방법을 보여 주는 연습을 참조 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-csharp[WebParts_WebPart_Subtitle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Subtitle/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts_WebPart_Subtitle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Subtitle/VB/textdisplaywebpart.vb#2)]  
  
 예제의 두 번째 부분은 참조 하는 방법을 보여 주는 웹 페이지는 `TextDisplayWebPart` ASP.NET 웹 페이지에서 제어 합니다. 컨트롤의 제목 표시줄 텍스트 선언 태그, 하이픈 구분 기호 및 값의 사용자 지정 부제목을 컨트롤에 할당 된 제목에 포함 되어 브라우저에서 페이지를 로드 한 후에 `TextDisplayWebPart` 제어 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_Subtitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Subtitle/CS/subtitlecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_Subtitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Subtitle/VB/subtitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>에 대 한 부제목을 제공 하는 사용자 지정의 인스턴스 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 재정의 해야 컨트롤을는 <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" /> 속성입니다.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.Title" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IWebPart.Title</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파트 컨트롤의 제목을 가져오거나 설정합니다.</summary>
        <value>파트 컨트롤의 제목을 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개발자에 값을 할당 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A> 속성을 결정 모든 (또는의 일부) 컨트롤의 제목 표시줄의 텍스트입니다. 제목 텍스트 도구 설명 텍스트의 일부분으로의 제목 표시줄 위로 마우스 포인터를 놓으면도 표시는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 또는 다른 서버 컨트롤에 표시 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 영역입니다.  
  
 컨트롤의 제목 표시줄에 표시 되는 전체 텍스트에 따라서도 <xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> 속성입니다. 해당 속성에 할당 된 값이 있으면 값 제목에 연결 됩니다. 에 할당 된 값이 없는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A> 속성에는 계산 된 제목이 표시 됩니다. 언제 든 지 개발자가 표시 되는 실제, 전체 텍스트를 검색할 수는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤의 제목 표시줄의 값을 가져와서는 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> 속성입니다.  
  
 제목 텍스트의 스타일에 따라 결정 됩니다는 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle%2A> 파트 컨트롤을 포함 하는 영역의 속성입니다.  
  
 기본 속성의 사용을 보여 주는 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public virtual string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TitleIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TitleIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 제목 표시줄에서 웹 파트 컨트롤을 나타내는 데 사용되는 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value>제목 표시줄에서 컨트롤을 나타내는 데 사용되는 이미지의 URL 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> 인증 된 사용자만 수정할 수 있습니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> 및 [웹 파트 개인 설정 개요](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl%2A> 속성에서 사용자 지정 웹 파트 컨트롤에 컨트롤이 컨트롤의 카탈로그에 이미지가 나타납니다. 이 예제에서는 사용자 지정 컨트롤을 사용 한다고 가정 `TextDisplayWebPart`의 예 섹션에서 생성 된 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 개요입니다.  
  
 웹 페이지의 선언적 태그에서 확인 된 `<aspSample:TextDisplayWebPart>` 요소입니다. 해당 `TitleIconImageUrl` 특성 이미지 파일에 URL을 포함 하는 문자열을 할당 합니다. 브라우저에서 페이지를 로드 하 고 이미지의 제목 표시줄에 표시 이미지에 대 한 합법적인 URL을 지정한 경우 설명이 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_TitleIconImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_TitleIconImageUrl/CS/titleiconimageurlcs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_TitleIconImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_TitleIconImageUrl/VB/titleiconimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">내부 유효성 검사 시스템에서 URL에 스크립트 공격이 포함되었을 것으로 판단한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public virtual string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TitleUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TitleUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.TitleUrl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 대한 추가 정보의 URL을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 대한 추가 정보의 URL을 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 URL을 할당 하면는 <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A> 속성, 컨트롤의 제목을 컨트롤에 대 한 추가 정보를 링크로 사용 됩니다. 페이지가 디자인, 편집 또는 카탈로그 모드와 같은 컨트롤을 놓을 수 있습니다는 디스플레이 모드에 있을 때 URL 렌더링 되지 않습니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> 인증 된 사용자만 수정할 수 있습니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> 및 [웹 파트 개인 설정 개요](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A> 속성에서 사용자 지정 웹 파트를 제어 합니다. 이 예제에서는 사용자 지정 컨트롤을 사용 한다고 가정 `TextDisplayWebPart`의 예 섹션에는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 개요입니다.  
  
 에 `<aspSample:TextDisplayWebPart>` 요소에 포함 되어는 `TitleUrl` 가상의 URL 사용 하 여 특성입니다. 브라우저의 제목에 페이지를 로드 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤은 이제에서 가리키는 리소스에 대 한 링크는 <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A> 속성입니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_TitleUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_TitleUrl/CS/titleurlcs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_TitleUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_TitleUrl/VB/titleurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">내부 유효성 검사 시스템에서 URL에 스크립트 공격이 포함되었을 것으로 판단한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="webPart.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤이 해당 뷰 상태의 변경 내용을 추적하여 개체의 <see cref="P:System.Web.UI.Control.ViewState" /> 속성에 저장할 수 있도록 합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Verbs As WebPartVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerbCollection ^ Verbs { System::Web::UI::WebControls::WebParts::WebPartVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : System.Web.UI.WebControls.WebParts.WebPartVerbCollection" Usage="System.Web.UI.WebControls.WebParts.WebPart.Verbs" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IWebActionable.Verbs</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 연결된 사용자 지정 동사의 컬렉션을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" /> 컨트롤에 연결된 사용자 지정 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 개체를 포함하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.WebParts.WebPartVerbCollection.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 되는 동사는 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 클래스 및 인터페이스 (UI) 작업에서 사용자가 수행할 수 있는 사용자 제공는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 일반적으로 동사 단추, 링크 또는 메뉴 항목으로 UI에 표시 됩니다. 기본적으로 공용 웹 파트 동사 각에 있는 드롭 다운 동사 메뉴에 표시 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤의 제목 표시줄입니다. 열기, 닫기, 편집 및 컨트롤과 해당 컨트롤에 대 한 정의 내보내기 또는 도움말 파일을 로드 다른 동사를 최소화 하기 위한 표준 동사가 있습니다. 이러한 동사에 포함 되지 않습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> 컬렉션을 만들고 파생된 클래스에서이 속성을 재정의 하 여 반환 하는 사용자 지정 동사만 포함 되므로 합니다.  
  
 사용자 지정 동사 만들 하 고 추가 하는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> 컬렉션에 액세스할 수 있습니다에서 프로그래밍 방식으로 동사는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 액세스 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> 속성에서 사용자 지정 웹 파트를 제어 합니다. 이 예제에서는 사용자 지정 컨트롤을 사용 한다고 가정 `TextDisplayWebPart`의 예 섹션에서 생성 된 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 개요입니다.  
  
 코드 예제가 작동 하려면 해야 설정을 추가 하면 웹 파트 설명 파일을 내보낼 수 있도록 Web.config 파일에서 note 합니다. 이 코드 예제에 대 한 웹 페이지와 같은 디렉터리에 Web.config 파일이 있는지 확인 합니다. 내에서 `<system.web>` 섹션에서 없는지 확인 한 `<webParts>` 인 요소는 `enableExport` 특성이로 설정 `true`와 같이, 다음 태그입니다.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 브라우저에서 웹 페이지를 로드 합니다. 클릭할 때는 **동사 수 표시** 액세스 단추를는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> 속성의 수에 대 한 사용자 지정 동사을 `TextDisplayWebPart` 컨트롤을 레이블을의 수를 표시 합니다. 사용자 지정 동사가 없으므로 경우 추가 컨트롤에 되어, 0이 표시 됩니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_Verbs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Verbs/CS/verbscs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_Verbs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Verbs/VB/verbsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>파생된 클래스에서 재정의할 수는 <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Verbs" /> 사용자가 사용자 지정을 추가할 수 있도록 속성을 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 개체에 대 한 동사 컬렉션에는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 제어 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="WebBrowsableObject">
      <MemberSignature Language="C#" Value="public virtual object WebBrowsableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WebBrowsableObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebBrowsableObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ WebBrowsableObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebBrowsableObject : obj" Usage="System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 지정 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 사용하여 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤을 편집할 수 있도록 이 컨트롤에 대한 참조를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Object" /> 컨트롤의 자식 컨트롤로 구성된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 지정을 만드는 경우 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤과 관련 된 사용자 지정을 만들 수도 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 런타임에 사용자가 컨트롤을 편집할 수 있도록 하는 컨트롤을 구현 해야 합니다는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 포함 된 인터페이스는 <xref:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject%2A> 속성입니다.  
  
 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤이 편집 모드로 전환는 <xref:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject%2A> 속성에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 컨트롤에 대 한 참조를 얻으려고는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 하 고 사용자 지정을 사용 하도록 설정 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤을 편집 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.WebBrowsableObject" />
      </Docs>
    </Member>
    <Member MemberName="WebPartManager">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartManager As WebPartManager" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPartManager ^ WebPartManager { System::Web::UI::WebControls::WebParts::WebPartManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebPartManager : System.Web.UI.WebControls.WebParts.WebPartManager" Usage="System.Web.UI.WebControls.WebParts.WebPart.WebPartManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 컨트롤 인스턴스와 연결된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 대한 참조를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 컨트롤에 연결된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 파트 페이지에는 항상 단일 인스턴스의는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 제어 합니다. <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 추적 하 고, 기본에서 파생 되는 모든 영역을 포함 하 여 페이지에서 모든 다른 웹 파트 컨트롤을 관리 하는 컨트롤 <xref:System.Web.UI.WebControls.WebParts.WebZone> 클래스 및 기본에서 파생 되는 모든 파트 컨트롤 <xref:System.Web.UI.WebControls.WebParts.Part> 클래스입니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> 속성이 존재 되도록 모든 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤에 연결할 수 있는 해당 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 제어 합니다. <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤에서 유지 관리의 모든 컬렉션은 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤에 있는 페이지에 해당 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> 컬렉션입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Width : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPart.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>웹 서버 컨트롤의 너비를 가져오거나 설정합니다.</summary>
        <value>컨트롤의 너비를 나타내는 <see cref="T:System.Web.UI.WebControls.Unit" />입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.Unit.Empty" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Width" />
      </Docs>
    </Member>
    <Member MemberName="Zone">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartZoneBase Zone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartZoneBase Zone" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Zone" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Zone As WebPartZoneBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ Zone { System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Zone : System.Web.UI.WebControls.WebParts.WebPartZoneBase" Usage="System.Web.UI.WebControls.WebParts.WebPart.Zone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartZoneBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 컨트롤이 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 영역을 가져옵니다.</summary>
        <value>웹 페이지에서 현재 웹 파트 컨트롤이 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />입니다. 웹 파트 컨트롤이 페이지에서 현재 닫혀 있는 경우 반환 값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 파트 컨트롤 집합의 아키텍처에서는 내부에 작동 하는 경우에 컨트롤 웹 파트 기능이 있을 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역입니다. 표준 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역이 웹 페이지를 사용 하는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 최종 사용자가 웹 파트 컨트롤 웹 페이지의 다른 영역으로 이동 수 있지만 한 번에 하나의 영역 컨트롤의 지정 된 인스턴스에 있을 수 있습니다. 웹 파트 컨트롤 및 관련 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤을 사용 하 여는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A> 현재 영역 컨트롤 추적 하는 속성에 있으며 영역의 일반적인 레이아웃 및 스타일 특성 게 적용 되는 포함 된 모든 웹 파트 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 액세스 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A> 및 <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> 웹 파트 컨트롤에 대 한 사용자 지정 속성입니다. 이 예제에서는 사용자 지정 컨트롤을 사용 한다고 가정 `TextDisplayWebPart`의 예 섹션에서 생성 된 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 개요입니다.  
  
 코드 예제는 사용자가 웹 파트 페이지에 대 한 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤을 포함 합니다. 사용자 정의 컨트롤 방법으로 참조 되는 `Register` 사용자 정의 컨트롤을 호스팅하는 웹 페이지의 맨 위 근처에 지시문입니다. 이 사용자 정의 컨트롤을 생성 및 디스플레이 모드를 사용 하는 방법에 대 한 자세한 설명은 참조 하세요. [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_Zone#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Zone/CS/displaymodemenucs.ascx#5)]
 [!code-aspx-vb[WebParts_WebPart_Zone#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Zone/VB/displaymodemenuvb.ascx#5)]  
  
 코드 예제에서는 두 번째 부분에는 웹 페이지입니다. 두 개의 `<asp:webpartzone>` 각각 나타내는 웹 파트 영역 페이지에서 요소입니다. 첫 번째 영역에는 표준 포함 <xref:System.Web.UI.WebControls.Calendar> 처럼 동작 하는 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에 있기 때문에 런타임에 제어 합니다. 두 번째 영역에 포함 된 `TextDisplayWebPart` 제어 합니다. 클릭 하면는 **영역 정보** 단추는 `Label1` 컨트롤의 값을 표시는 <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> 컨트롤에 대 한 속성 및 <xref:System.Web.UI.Control.ID%2A> 현재 컨트롤을 포함 하는 영역의 속성.  
  
 [!code-aspx-csharp[WebParts_WebPart_Zone#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Zone/CS/webpartzoneindexcs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_Zone#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Zone/VB/webpartzoneindexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
      </Docs>
    </Member>
    <Member MemberName="ZoneIndex">
      <MemberSignature Language="C#" Value="public int ZoneIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ZoneIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ZoneIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ZoneIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ZoneIndex : int" Usage="System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역 내에서 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 있는 인덱스 위치를 가져옵니다.</summary>
        <value>영역 내에서의 컨트롤 순서입니다. 영역에 있는 첫 번째 컨트롤의 인덱스 값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> 속성 영역에서 다른 컨트롤을 기준으로 해당 영역 내에서 웹 파트 컨트롤의 순서 (또는 서 수 위치)을 나타냅니다. <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤에서이 속성을 사용 하 여 추적 하 고 웹 페이지에 웹 파트 컨트롤의 컬렉션을 관리 합니다.  
  
> [!IMPORTANT]
>  한다고 가정할 수 없습니다의 값은 <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> 컨트롤의 속성 내에서 동일한 컨트롤에 대 한 인덱스 값은 같습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> 컬렉션 컨트롤의 영역입니다. 해당 영역에서 상대적 위치 컨트롤의 자주 (해당 <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> 값), 및 내에서 해당 항목이 있는 인덱스는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> 컨트롤에 추가 되 고 영역에서 제거 컬렉션 해당 영역을 다른 값이 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 액세스 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A> 및 <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> 웹 파트 컨트롤에 대 한 사용자 지정 속성입니다. 이 예제에서는 사용자 지정 컨트롤을 사용 한다고 가정 `TextDisplayWebPart`의 예 섹션에서 생성 된 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 개요입니다.  
  
 코드 예제는 사용자가 웹 파트 페이지에 대 한 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤을 포함 합니다. 사용자 정의 컨트롤 방법으로 참조 되는 `Register` 사용자 정의 컨트롤을 호스팅하는 웹 페이지의 맨 위 근처에 지시문입니다. 이 사용자 정의 컨트롤을 생성 및 디스플레이 모드를 사용 하는 방법에 대 한 자세한 설명은 참조 하세요. [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-aspx-csharp[WebParts_WebPart_Zone#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Zone/CS/displaymodemenucs.ascx#5)]
 [!code-aspx-vb[WebParts_WebPart_Zone#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Zone/VB/displaymodemenuvb.ascx#5)]  
  
 코드 예제에서는 두 번째 부분에는 웹 페이지입니다. 두 개의 `<asp:webpartzone>` 각각 나타내는 웹 파트 영역 페이지에서 요소입니다. 첫 번째 영역에는 표준 포함 <xref:System.Web.UI.WebControls.Calendar> 처럼 동작 하는 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에 있기 때문에 런타임에 제어 합니다. 두 번째 영역에 포함 된 `TextDisplayWebPart` 제어 합니다. 클릭 하면는 **영역 정보** 단추는 `Label1` 컨트롤의 값을 표시는 <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> 컨트롤에 대 한 속성 및 <xref:System.Web.UI.Control.ID%2A> 현재 컨트롤을 포함 하는 영역의 속성.  
  
 [!code-aspx-csharp[WebParts_WebPart_Zone#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Zone/CS/webpartzoneindexcs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_Zone#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Zone/VB/webpartzoneindexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
      </Docs>
    </Member>
  </Members>
</Type>