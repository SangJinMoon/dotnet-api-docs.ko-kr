<Type Name="GenericWebPart" FullName="System.Web.UI.WebControls.WebParts.GenericWebPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9a3c29e22c6462b54fca489aff43e64ce4abbfed" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30591247" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GenericWebPart : System.Web.UI.WebControls.WebParts.WebPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GenericWebPart extends System.Web.UI.WebControls.WebParts.WebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
  <TypeSignature Language="VB.NET" Value="Public Class GenericWebPart&#xA;Inherits WebPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class GenericWebPart : System::Web::UI::WebControls::WebParts::WebPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.WebPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>런타임에 표시되고 실제 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤로 작동할 수 있도록 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 아닌 서버 컨트롤을 래핑합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 없는 서버 컨트롤에 대 한 런타임 래퍼를 제공 하기 위한 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어, 이러한 컨트롤을 웹 파트 페이지 및 응용 프로그램에서 사용할 수 있도록 합니다. 때 개발자가 사용자 정의 컨트롤, ASP.NET 서버 컨트롤 또는 기존 사용자 지정 컨트롤 등의 서버 컨트롤에 추가 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 컨트롤의 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤 자동 줄 바꿈되어 서버 컨트롤 런타임 시 제공 동일 하므로 true로 기능 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.  
  
 다음 표에서 비교 및 대조 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤 및 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.  
  
|<xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤|<xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤|  
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|없는 서버 컨트롤을 부여 하기 위한 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 웹 파트 기능을 사용 하므로 모든 ASP.NET에서 사용자 지정 컨트롤 또는 사용자 정의 컨트롤 웹 파트 응용 프로그램에 참여할 수 있습니다.|기본 웹 파트 기능이 내장 되어 있는 사용자 지정 ASP.NET 컨트롤을 만들 수 있습니다. 개인 설정, 연결, 가져오기 및 내보내기, 및 끌어서 놓기 기능이 포함 됩니다.|  
|페이지의 태그에 선언 되지 않습니다. 런타임 시 서버 컨트롤을 래핑하고 고 래핑된 컨트롤 (또는 자식 컨트롤)의 모든 기능을 제공 하는 데만 있는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.|에 선언 된 것을 제외 하 고 같은 ASP.NET 서버 컨트롤의 디자인 타임에 페이지의 태그에 선언 수는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역입니다.|  
|포함 하 여 개인 설정 프로세스를 true로 작동할 수 있도록 웹 파트에는 자식 컨트롤을 통합 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 이 통해 웹 파트 응용 프로그램에서 서버 컨트롤 및 사용자 정의 컨트롤을 사용 하는 개발자를 위한 간단한이 자동으로 발생 합니다.|웹 파트 개인 설정 프로세스에서 자동으로 포함 됩니다.|  
|런타임에 프로그래밍 방식으로 액세스할 수 있습니다 (사용 하 여는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> 메서드와 자식 서버 컨트롤에 전달), 실제와 같은 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤이 나 표준 ASP.NET 컨트롤입니다.|표준 ASP.NET 컨트롤 처럼 런타임에 프로그래밍 방식으로 액세스할 수 있습니다.|  
  
 사용자에 도움이 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 일관 된 사용자 환경을 제공 하기 때문에 제어 합니다. 처럼 작동 하도록 서버 컨트롤을 만들 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 동사, 아이콘, 제목, 헤더 등 동일한 일관 된 사용자 인터페이스 (UI) 요소를 갖습니다. 개발자는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 기존 사용자 정의 컨트롤 및 웹 파트 응용 프로그램 내에 서버 컨트롤을 다시 사용할 수 있기 때문에 제어 합니다.  
  
> [!NOTE]
>  웹 파트 페이지를 만들 때로 묶어야 하는 기존 사용자 정의 컨트롤 또는 사용자 지정 컨트롤을 사용 하도록 설정 하려면 모든 작업을 수행할 필요가 없습니다는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 제어 합니다. 서버 또는 사용자 컨트롤을 추가 하면 됩니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역을 프로그래밍 방식으로 또는 페이지의 태그에 선언 하 여 마우스는 웹 파트 컨트롤 집합을 자동으로 사용 하는 컨트롤을 래핑하는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 런타임에 개체입니다.  
  
 된 서버 컨트롤에 배치 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역 래핑됩니다는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤 개발자가 런타임 시 일반적인 서버를 사용할 수와 정확 하 게 큐브인 것 처럼 사용자 정의 컨트롤 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 사용자 지정을 선언 하는 경우를 제어 하는 기본에서 상속 <xref:System.Web.UI.Control> 내에서 클래스는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, 이러한 컨트롤은 내장 함수 사용을 지원할 수 없습니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 속성입니다. 따라서 선언할 수 없습니다는 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 속성 등의 속성을 비롯 하 여 이러한 컨트롤에는 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> 속성 및 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> 속성입니다. 반면, 다른 유형의 서버를 제어 (예: <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤, 사용자 정의 컨트롤 및 사용자 지정 컨트롤에서 상속 하는 <xref:System.Web.UI.WebControls.WebControl>) expando 속성의 사용을 지원 하기 때문에 이러한 속성을 선언할 수 있습니다.  
  
 Expando 속성은 추가할 수 있는 클래스에 동적으로 속성을으로 방법으로 문자열 실제로 <xref:System.Web.UI.IAttributeAccessor> 인터페이스입니다. 이 인터페이스를 구현 하는 컨트롤 포함 하는 <xref:System.Web.UI.WebControls.WebControl> 클래스 및 해당 자식 expando 속성을 사용할 수 있습니다. 때문에 기본 <xref:System.Web.UI.Control> 클래스 expando 속성을에서 상속 되는 사용자 지정 컨트롤을 지원 하지 않습니다는 <xref:System.Web.UI.Control> 클래스에 배치 됩니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 및 래핑되는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 웹 파트 컨트롤 집합 수 없습니다. 런타임 시 컨트롤 동적으로 내장 함수를 추가할 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 속성을 사용자 지정 컨트롤입니다. 두 가지 선택이 경우. 없이 사용자 지정 컨트롤을 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 속성 또는 있습니다 구현할 수는 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 속성을 사용할 수 있도록 사용자 지정 컨트롤에 대 한 인터페이스입니다.  
  
 방법의 예로 컨트롤로에서 상속 <xref:System.Web.UI.WebControls.WebControl> צ ְ ײ는 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 속성, ASP.NET을 선언 하는 경우 <xref:System.Web.UI.WebControls.Calendar> 페이지의 태그의 컨트롤 (내에서 한 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역) 디자인 타임에도이 컨트롤 상속 되지 않습니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 하 고 기본적으로 포함 하지 않는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 멤버, 여전히으로 처리할 수 있습니다와 똑같이 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 선언할 수 <xref:System.Web.UI.WebControls.WebParts.WebPart> 등의 속성에는 달력 컨트롤 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>, <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>, 등입니다. 실행 시 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> 반환 하는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤은 동적으로 calendar 컨트롤 래핑 작업을 프로그래밍 방식으로 정확 하 게와 마찬가지로는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤에 액세스할 수 있는 동일한 모든 속성, 이벤트 및 메서드를 제공 합니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤에는 내부 서버 컨트롤에 액세스할 수 있는 중요 한 속성이:는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> 속성입니다. 이 속성에는 개발자가 서버 컨트롤을 프로그래밍 방식으로 액세스할 수 있습니다. <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> 속성 에서도 사용는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤 자식 컨트롤에서 개인 설정 데이터를 액세스 하 고 하는 경우 권한 부여를 수행할 수는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> 속성을 설정 합니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤에는 기본에서 상속 된 속성을 재정의 중 일부는 다른 여러 속성을 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스입니다. 처럼 동작할 수 있도록 모든 자식 컨트롤에 이러한 속성을 사용할 수 언급 했 듯이 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 중요 한 속성 중 하나는 <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> 속성; 내보낼 수 있는 모든 속성 또는 필드만 표시으로 중요 하지 않은, 했는지 여부를 내보낼 수를 결정 합니다. UI 기반 속성에서 상속 되며,는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 같은 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A>, <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A>, <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Height%2A>, <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A>, <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A>, 및 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Width%2A>, 모든 서버 컨트롤에 대 한 선언적 태그에서 설정할 수 있습니다 에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역입니다.  
  
 중요 한 메서드는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 클래스에 포함는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateControlCollection%2A> 메서드를 연결 된 (자식 컨트롤을 포함 하 여) 컨트롤의 컬렉션을 만듭니다는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤 및 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Render%2A> 모든 렌더링에 위임 하는 메서드는 자식 컨트롤을 래핑됩니다. 에 대 한 생성자는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 클래스 보호 되 고 내부 사용을 위해 또는 확장성 시나리오에 대 한 사용 됩니다.  
  
 작업을 위한 유용한 몇 가지 추가 정보는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤입니다. 기본값에서 재정의 된 속성을 설정 하려는 경우는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 클래스, 사용자 정의 컨트롤 또는 사용자 지정 서버 컨트롤 구현할 수는 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 및 <xref:System.Web.UI.WebControls.WebParts.IWebActionable> , 인터페이스 및 해당 멤버를 재정의 합니다. 런타임에 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤 인터페이스를 구현 하는 자식 컨트롤에서 구현된 된 속성에 대 한 해당 값을 받습니다. 컨트롤 정의 하는 경우 해당 속성으로 개인 설정할 수 있는 (사용 하 여는 `Personalizable` 메타 데이터 특성), <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤에서 개인 설정 가능한 속성 처럼 런타임에 개인 설정에 대 한 이러한 속성을 자동으로 활성화 한 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 컨트롤에 대 한 웹 파트 편집 기능을 제공 하려는 경우 구현할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 인터페이스입니다. 런타임 시는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 메서드가 호출 되는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 에 대 한 컨트롤의 코드는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.WebBrowsableObject%2A> 속성을 자식 컨트롤에 동일한 속성을 호출 하 고 연결 된 사용자 지정을 만들려면 자식 컨트롤의 구현이 사용 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 방법을 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤은 자동으로 아닌 서버 컨트롤을 래핑하는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 런타임 시 컨트롤입니다.  
  
 두 개의 웹 파트 페이지를 포함 하는 코드 예제에서는 첫 번째 부분 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 컨트롤입니다. 각 영역에는 표준 ASP.NET 서버 컨트롤입니다. 컨트롤에 있기 때문에 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 영역을 자동으로 래핑으로 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 페이지를 컴파일할 때 제어 합니다. 따라서 선언할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 이러한 컨트롤에 대 한 속성입니다. 클릭 하면 브라우저에서 페이지를 로드 한 후에 **속성 값이 모두 표시** 단추, 세부 정보 각 컨트롤에 레이블을 표시 됩니다. 표시 하는 방법을 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤의 작동은 <xref:System.Web.UI.WebControls.Calendar> 첫 번째 영역에서 컨트롤에는 몇 가지는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 반면.aspx 페이지의 선언적 태그에서 속성을 설정는 <xref:System.Web.UI.WebControls.BulletedList> 제어 하지 않습니다. 페이지를 로드 한 후 두 컨트롤에 대 한 속성 값의 차이점에 유의 하 고 부모를 포함 하는 두 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 제어 합니다.  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#1)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#1)]  
  
 코드 예제에서는 두 번째 부분의 일부 속성에 액세스 하는 partial 클래스를 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 프로그래밍 방식으로 제어 합니다. 에 `Page_Load` 메서드를는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> 메서드 검색의 실행 시간 인스턴스를 사용 하는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 서버 컨트롤을 래핑하는 컨트롤입니다. 이 접근 방식을 부모에 대 한 참조를 가져오는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤을 통해을 마치는 일반 서버 또는 사용자 컨트롤을 프로그래밍 방식으로 사용 하는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 런타임 시 컨트롤입니다.  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#3)]
 [!code-vb[WebParts_GenericWebPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>몇 가지 경우가 있습니다에서 상속 하는 데 필요한 경우는 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 클래스입니다. 하나를 들 수는 개발자가 생성자에서 일부 사용자 지정 동작을 구현 하려는 경우 때는 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 컨트롤이 만들어집니다. 예를 들어 컨트롤 컬렉션 내에서 아닌 곳에 있는 자식 컨트롤을 저장 하려면 수는 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 클래스입니다. 상속 하는 경우는 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 클래스도 상속 해야에서 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 클래스 다이어그램과 해당 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" /> 메서드를 사용자 지정 컨트롤을 만들 수 있도록 합니다.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal GenericWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.#ctor(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; GenericWebPart(System::Web::UI::Control ^ control);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 컨트롤 인스턴스의 자식 컨트롤이 될 서버 컨트롤입니다.</param>
        <summary>자식 컨트롤이 될 컨트롤에 대한 참조를 전달하여 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 컨트롤의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.%23ctor%28System.Web.UI.Control%29> 에서 생성자를 호출는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤에 해당 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> 의 인스턴스를 초기화 메서드는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 자식 서버 컨트롤에 대 한 참조를 전달 하 여 제어 합니다. 이후에 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 개체가 만들어지면 사용 하 여 자식 컨트롤을 참조할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="control" />는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 형식입니다.  
  
 \- 또는 -  
  
 <paramref name="control" />에 <see langword="null" /> 또는 빈 <see cref="P:System.Web.UI.Control.ID" /> 속성이 있는 경우  
  
 \- 또는 -  
  
 <paramref name="control" />이 출력 캐시된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public override string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤 카탈로그에서 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 컨트롤을 나타내는 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value>카탈로그의 컨트롤을 나타내는 데 사용되는 이미지의 URL 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 종종 웹 파트 응용 프로그램 사용자가 페이지에 추가할 수 있는 컨트롤의 카탈로그 (또는 목록)를 제공 합니다. <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A> 컨트롤의 속성에는 카탈로그에 표시 되 면 컨트롤을 표시 하는 이미지 URL이 포함 되어 있습니다. 이 속성을 마치 진정한 자식 컨트롤의 속성을 액세스할 수 있도록 기본 속성을 재정의 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 웹 페이지의 선언 태그의 컨트롤에 속성에 대 한 값을 프로그래밍 방식으로 설정할 수 있습니다. 컨트롤을 사용할 때마다 속성에 대 한 기본값을 제공을 구현할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 인터페이스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 선언적 방법과 프로그래밍 방식으로 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A> 속성입니다. 이 예제에 대 한 전체 소스 코드의 예 섹션에서 발견 되는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 개요 항목입니다.  
  
 코드 예제의 첫 번째 부분을 보여 줍니다. 방법을 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A> 속성이 내에서 서버 컨트롤에 선언적으로 설정 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다.  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 코드 예제에서는 두 번째 부분을 클릭할 때 속성의 값을 프로그래밍 방식으로 액세스 하는 방법을 보여 줍니다.는 **속성 값이 모두 표시** 단추입니다.  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ChildControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ChildControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ChildControl { System::Web::UI::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>런타임에 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 컨트롤로 래핑되는 자식 컨트롤에 대한 참조를 가져옵니다.</summary>
        <value>래핑된 자식 컨트롤을 가리키는 <see cref="T:System.Web.UI.Control" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> 속성에 의해 래핑된 자식 컨트롤에 액세스 하는 방법을 제공는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 제어 합니다. 예를 들어는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤이 사용 하 여 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> 자식 컨트롤에서 개인 설정 데이터를 추출 하는 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 프로그래밍 방식으로 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> 속성입니다. <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> 의 자식 컨트롤에 대 한 정보를 검색할 속성에 프로그래밍 방식으로 액세스 한 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 제어 합니다. 이 예제에 대 한 전체 소스 코드의 예 섹션에서 발견 되는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 개요 항목입니다.  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>다시 게시 또는 렌더링하기 위한 준비 작업으로, 포함된 자식 컨트롤을 만들도록 컴퍼지션 기반 구현을 사용하는 서버 컨트롤에 알리기 위해 ASP.NET 페이지 프레임워크에 의해 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 컨트롤로 래핑된 자식 컨트롤을 구성하는 읽기 전용 컬렉션을 만들기 위해 기본 메서드를 재정의합니다.</summary>
        <returns>자식 컨트롤이 포함된 <see cref="T:System.Web.UI.ControlCollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateControlCollection%2A> 메서드 만듭니다 단일 컨트롤은 자식 컨트롤의 구성 된 전용, 읽기 전용 컬렉션의는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 제어 합니다. 이 컬렉션은 생성 되므로 개발자는 다른 컨트롤에 수동으로 추가할 수 없습니다는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 제어 합니다.  
  
 사용자 지정을 만들려고 할 경우 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤에서 파생 시켜 개인 컬렉션에 있는 자식 컨트롤을 추가 하지 않고는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 클래스를 재정의 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.%23ctor%2A> 생성자를 자식 컨트롤을 저장 하기 위한 다른 방법을 제공 으로 참조 되는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>편집 모드에서 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤의 자식 컨트롤을 편집하는 데 사용할 수 있는 사용자 지정 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 컨트롤의 컬렉션을 반환합니다.</summary>
        <returns>서버 컨트롤에 연결된 사용자 지정 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 컨트롤을 포함하는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts%2A> 컨트롤 편집 디스플레이 모드가 때 메서드를 호출 합니다. 상속 되며, 기본 메서드를 재정의 하는이 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 하기 때문에 클래스의 경우에 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤, 하지 편집 중인은 자식 컨트롤은는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤 자체입니다. <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts%2A> 자식 컨트롤을 캐스팅 하는 메서드는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 인터페이스 컨트롤을 편집할 수 있게 해줍니다.  
  
 이 재정의 메서드는 서버 컨트롤에서 파생 되지 않은 수립는 <xref:System.Web.UI.WebControls.WebParts.WebPart> ASP.NET 서버 컨트롤 및 사용자 지정 서버 컨트롤을 정상적으로 편집할 수를 포함 하 여 클래스- <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public override string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버 컨트롤의 도구 설명과 카탈로그에 사용하기 위해 컨트롤의 용도를 요약한 간략한 문구를 가져오거나 설정합니다.</summary>
        <value>컨트롤의 기능을 간략하게 요약한 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A> 속성 값은 대개 서버 컨트롤의 목록을 제공 하는 카탈로그에 있는 컨트롤에 대 한 설명이 포함 된 문자열 및 컨트롤의 제목 표시줄에 도구 설명으로 사용 됩니다. 속성의 내용은 마우스 포인터를 컨트롤의 제목 표시줄의 제목 텍스트 위로 가져갈 때 도구 설명에 나타납니다.  
  
 이 속성을 마치 진정한 자식 컨트롤의 속성을 액세스할 수 있도록 기본 속성을 재정의 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 웹 페이지의 선언 태그의 컨트롤에 속성에 대 한 값을 프로그래밍 방식으로 설정할 수 있습니다. 컨트롤을 사용할 때마다 속성에 대 한 기본값을 제공을 구현할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 인터페이스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 선언적 방법과 프로그래밍 방식으로 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A> 속성입니다. 이 예제에 대 한 전체 소스 코드의 예 섹션에서 발견 되는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 개요 항목입니다.  
  
 코드 예제의 첫 번째 부분을 보여 줍니다. 방법을 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A> 속성이 내에서 서버 컨트롤에 선언적으로 설정 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다.  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 코드 예제에서는 두 번째 부분에는 레이블에 해당 값을 표시 하는 프로그래밍 방식으로 속성에 액세스 하는 방법을 보여 줍니다.  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 높이(픽셀)를 가져오거나 설정합니다.</summary>
        <value>컨트롤의 높이를 나타내는 <see cref="T:System.Web.UI.WebControls.Unit" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성 가져오거나 마치 진정한 것 처럼 자식 컨트롤의 높이 설정할 수 있도록 기본 속성을 재정의 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Height" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override sealed string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 ID를 가져오거나 설정합니다. 이 값은 상속되지 않습니다.</summary>
        <value>컨트롤의 ID가 포함된 문자열입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">클라이언트에서 HTML 콘텐츠를 렌더링하는 데 사용되는 출력 스트림을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>자식 컨트롤에 대한 컨트롤 내용의 렌더링을 대신합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public override string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Subtitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Subtitle { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 완전한 제목을 구성하기 위해 <see cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" /> 속성 값에 연결된 문자열을 가져옵니다.</summary>
        <value>컨트롤의 부제목으로 사용되는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle%2A> 선택적으로 사용자 지정을 추가 하는 표준 부제목 문자열을 반환할 속성 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤의 제목입니다.  
  
 이 속성을 마치 진정한 자식 컨트롤의 속성을 액세스할 수 있도록 기본 속성을 재정의 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 구현 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> 사용자 정의 컨트롤 또는 기본값을 제공 하는 사용자 지정 컨트롤에서 속성을 자동으로 설정 하는 웹 파트 컨트롤에 항목을 추가 컨트롤의 값 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A> 완전 제목을 만들 런타임에 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 컨트롤의 제목을 가져오거나 설정합니다.</summary>
        <value>파트 컨트롤의 제목을 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부 컨트롤의 제목 표시줄에 나타나는 제목 텍스트 설정한는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A> 속성입니다.  
  
 컨트롤에 대 한 title를 제공 하지 않으면 자동으로 설정 하는 웹 파트 컨트롤 기본 문자열을 제목으로 계산 됩니다. 자세한 내용은 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>을 참조하세요. 또한 제목 문자열에 추가 되는 기본 부제목을 제공 하는 것이 같습니다. 자세한 내용은 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle%2A>를 참조하세요.  
  
 이 속성을 마치 진정한 자식 컨트롤의 속성을 액세스할 수 있도록 기본 속성을 재정의 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 웹 페이지의 선언 태그의 컨트롤에 속성에 대 한 값을 프로그래밍 방식으로 설정할 수 있습니다. 컨트롤을 사용할 때마다 속성에 대 한 기본값을 제공을 구현할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 인터페이스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 선언적 방법과 프로그래밍 방식으로 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A> 속성입니다. 이 예제에 대 한 전체 소스 코드의 예 섹션에서 발견 되는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 개요 항목입니다.  
  
 코드 예제의 첫 번째 부분을 보여 줍니다. 방법을 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A> 속성이 내에서 서버 컨트롤에 선언적으로 설정 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다.  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 코드 예제에서는 두 번째 부분에는 레이블에 해당 값을 표시 하는 프로그래밍 방식으로 속성에 액세스 하는 방법을 보여 줍니다.  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public override string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TitleIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TitleIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 자체 제목 표시줄에서 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 컨트롤을 나타내는 데 사용되는 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value>이미지의 URL을 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A> 속성으로 아이콘을 숨기는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 제어 합니다. 컨트롤의 제목 표시줄에 아이콘이 나타납니다. 테마의 일관성에 대 한 응용 프로그램 개발자가 자주 확인이 아이콘 웹 파트 컨트롤의 카탈로그에 컨트롤을 나타내는 이미지와 비슷하게 (에서 참조 하는 이미지는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A> 속성).  
  
 웹 파트 컨트롤 집합에 구현 되는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A> 속성 이미지 또는 컨트롤의 제목 표시줄에 나타나는 아이콘을 변경 하려면 최종 사용자가 개인 설정할 수 있습니다.  
  
 이 속성을 마치 진정한 자식 컨트롤의 속성을 액세스할 수 있도록 기본 속성을 재정의 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 웹 페이지의 선언 태그의 컨트롤에 속성에 대 한 값을 프로그래밍 방식으로 설정할 수 있습니다. 컨트롤을 사용할 때마다 속성에 대 한 기본값을 제공을 구현할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 인터페이스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 선언적 방법과 프로그래밍 방식으로 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A> 속성입니다. 이 예제에 대 한 전체 소스 코드의 예 섹션에서 발견 되는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 개요 항목입니다.  
  
 코드 예제의 첫 번째 부분을 보여 줍니다. 방법을 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A> 속성이 내에서 서버 컨트롤에 선언적으로 설정 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다.  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 코드 예제에서는 두 번째 부분에는 레이블에 해당 값을 표시 하는 프로그래밍 방식으로 속성에 액세스 하는 방법을 보여 줍니다.  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public override string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TitleUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TitleUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 컨트롤에 대한 추가 정보의 URL을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 컨트롤에 대한 추가 정보의 URL을 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 URL을 할당 하면는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A> 속성, 컨트롤의 제목을 링크로 사용 됩니다. 이 속성은 최종 사용자가 컨트롤에 대 한 추가 정보에 액세스할 수 있는 편리한 방법을 제공 합니다. 추가 정보에는 저작권 데이터 연락처 데이터를 컨트롤의 작성자 또는 컨트롤의 목적에 대 한 요약 정보 포함 될 수 있습니다.  
  
 이 속성을 마치 진정한 자식 컨트롤의 속성을 액세스할 수 있도록 기본 속성을 재정의 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 웹 페이지의 선언 태그의 컨트롤에 속성에 대 한 값을 프로그래밍 방식으로 설정할 수 있습니다. 컨트롤을 사용할 때마다 속성에 대 한 기본값을 제공을 구현할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 인터페이스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 선언적 방법과 프로그래밍 방식으로 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A> 속성입니다. 이 예제에 대 한 전체 소스 코드의 예 섹션에서 발견 되는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 개요 항목입니다.  
  
 코드 예제의 첫 번째 부분을 보여 줍니다. 방법을 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A> 속성이 내에서 서버 컨트롤에 선언적으로 설정 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다.  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 코드 예제에서는 두 번째 부분에는 레이블에 해당 값을 표시 하는 프로그래밍 방식으로 속성에 액세스 하는 방법을 보여 줍니다.  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Verbs As WebPartVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerbCollection ^ Verbs { System::Web::UI::WebControls::WebParts::WebPartVerbCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 컨트롤에 연결된 사용자 지정 동사의 컬렉션을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" /> 컨트롤에 연결된 사용자 지정 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 개체를 포함하는 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.WebParts.WebPartVerbCollection.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 되는 동사는 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 클래스 및 인터페이스 (UI) 작업에서 사용자가 수행할 수 있는 사용자 제공는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 제어 합니다. 일반적으로 동사 단추, 링크 또는 메뉴 항목으로 UI에 표시 됩니다. 열기, 닫기, 편집 및 컨트롤과 해당 컨트롤에 대 한 정의 내보내기 또는 도움말 파일을 로드 다른 동사를 최소화 하기 위한 표준 동사가 있습니다. 이러한 동사에 포함 되지 않습니다는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs%2A> 컬렉션, 사용자 지정 동사만 포함 되므로 합니다.  
  
 이 속성을 마치 진정한 자식 컨트롤의 속성을 액세스할 수 있도록 기본 속성을 재정의 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 경우 자식 컨트롤 구현은 <xref:System.Web.UI.WebControls.WebParts.IWebActionable> 인터페이스와 재정의 <xref:System.Web.UI.WebControls.WebParts.IWebActionable.Verbs%2A?displayProperty=nameWithType> 속성을는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤에 자식 컨트롤의 구현을 사용 하 여 때는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs%2A?displayProperty=nameWithType> 속성에서 호출 되는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤입니다.  
  
 사용자 지정 동사 만들 하 고 추가 하는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> 컬렉션에 액세스할 수 있습니다에서 프로그래밍 방식으로 동사는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs%2A> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebActionable.Verbs" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Verbs" />
      </Docs>
    </Member>
    <Member MemberName="WebBrowsableObject">
      <MemberSignature Language="C#" Value="public override object WebBrowsableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WebBrowsableObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.WebBrowsableObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WebBrowsableObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ WebBrowsableObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 지정 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤을 사용하여 컨트롤을 편집할 수 있도록 자식 컨트롤에 대한 참조를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Object" /> 컨트롤의 자식 컨트롤을 구성하는 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자식 컨트롤을 구현 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 인터페이스와 재정의 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> 속성을 사용자가 편집을 위해 컨트롤을 선택는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 제어를 통해 자식 컨트롤을 호출는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> 속성을 사용 하 여 자식 컨트롤의 구현에서 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 메서드. 이 장치를 통해 서버 또는 사용자 정의 컨트롤을 사용 하지 않은 한 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤과 연결 된 사용자 지정 함께 사용 하도록 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 웹 파트 응용 프로그램의 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 너비(픽셀 단위)를 가져오거나 설정합니다.</summary>
        <value>컨트롤의 너비를 나타내는 <see cref="T:System.Web.UI.WebControls.Unit" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성 가져오거나 마치 진정한 것 처럼 자식 컨트롤의 너비를 설정할 수 있도록 기본 속성을 재정의 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Width" />
      </Docs>
    </Member>
  </Members>
</Type>