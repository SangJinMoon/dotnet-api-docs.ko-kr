<Type Name="WebPartConnection" FullName="System.Web.UI.WebControls.WebParts.WebPartConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00c595b93cfa46531c3addba1cbdbaaca274fcb8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37596404" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebPartConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebPartConnection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebPartConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartConnection sealed" />
  <TypeSignature Language="F#" Value="type WebPartConnection = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "Transformers")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="583d4-101">두 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에서 연결을 설정할 수 있도록 하는 개체를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="583d4-101">Provides an object that enables two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls to form a connection.</span>
      </span>
      <span data-ttu-id="583d4-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="583d4-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583d4-103">웹 파트 컨트롤 집합에서 연결이 링크 또는 두 연결 <xref:System.Web.UI.WebControls.WebParts.WebPart> (또는 다른 서버 또는 사용자) 데이터를 공유할 수 있도록 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-103">In the Web Parts control set, a connection is a link or association between two <xref:System.Web.UI.WebControls.WebParts.WebPart> (or other server or user) controls that enables them to share data.</span></span> <span data-ttu-id="583d4-104">데이터를 공유 하는이 기능에는 연결 된 컨트롤이 격리 된 컨트롤에서 제공 하는 기능을 초과 하는 방법으로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-104">This ability to share data allows connected controls to be used in ways that exceed the functionality offered by the isolated controls.</span></span> <span data-ttu-id="583d4-105">예를 들어, 하나의 컨트롤 우편 번호 데이터를 제공 하 고 다른 컨트롤 해당 데이터를 읽을 수 있습니다 및 우편 번호에 따라 로컬 날씨 정보를 제공, 다음 두 개의 연결 된 기능 제공 더 많은 가치 사용자에 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-105">For example, if one control provides postal code data, and another control can read that data and provide local weather information based on the postal code, then the connected capability of the two controls provides more value to users.</span></span> <span data-ttu-id="583d4-106">이 예제를 확장 하려면 다른 컨트롤을 만들 수는 정보를 표시, 로컬 뉴스에 대 한 링크를 사용 하 여 컨트롤과 같은 우편 번호에 따라 및 우편 데이터로 작업할 수 있는 모든이 컨트롤을 제공 하는 단일 제어를 사용 하 여 데이터를 공유할 수 있습니다는 우편 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-106">To extend this example, other controls could be created that also display information based on a postal code, such as a control with links to local news, and all these controls that can work with postal code data could share data with the single control that provides a postal code.</span></span> <span data-ttu-id="583d4-107">웹 파트 응용 프로그램의 최종 사용자가 제공한 표준 연결 사용자 인터페이스 (UI)를 사용 하 여 웹 브라우저에서 직접 이러한 모든 호환 컨트롤 간의 연결을 만들고 수는 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 컨트롤 또는 제공한 사용자 지정 UI를 사용 하는 개발자입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-107">End users of Web Parts applications can create and manage connections between all such compatible controls directly from a Web browser, using the standard connections user interface (UI) provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control, or using a custom UI provided by a developer.</span></span>  
  
 <span data-ttu-id="583d4-108">이 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 클래스 개요의 연결을 만들기 위한 기본 세부 정보 일반 문입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-108">This <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class overview is a general statement of the basic details for creating a connection.</span></span> <span data-ttu-id="583d4-109">에 특정 구성 요소 및 연결 만들기와 관련 된 요구 사항에 대 한 자세한 참조 [웹 파트 연결 개요](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b)에 참조 클래스 및 다음 섹션에서 언급 한 예제 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-109">For more on specific components and requirements involved in creating connections, see [Web Parts Connections Overview](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b), or see the reference classes and code examples mentioned in the following discussion.</span></span> <span data-ttu-id="583d4-110">웹 파트 연결의 기본적인 측면을 여러 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-110">There are several fundamental aspects of a Web Parts connection:</span></span>  
  
-   <span data-ttu-id="583d4-111">두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-111">Two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="583d4-112">두 컨트롤의 모든 웹 파트 연결 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-112">Every Web Parts connection consists of two controls.</span></span> <span data-ttu-id="583d4-113">컨트롤을 동시에 둘 이상의 연결에 참여할 수 있지만 정확히 두 컨트롤의 모든 단일 연결으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-113">It is possible for a control to participate in more than one connection simultaneously, but every single connection consists of exactly two controls.</span></span> <span data-ttu-id="583d4-114">직접 파생 된 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.WebPart> 또는 기본 클래스에는 ASP.NET 컨트롤, 사용자 지정 서버 컨트롤 및 사용자 정의 컨트롤을 비롯 하 여 다른 서버 컨트롤 수입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-114">The controls can derive directly from the <xref:System.Web.UI.WebControls.WebParts.WebPart> base class, or they can be other server controls, including ASP.NET controls, custom server controls, and user controls.</span></span> <span data-ttu-id="583d4-115">컨트롤에서 파생 되지 않은 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스에 배치 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역을 사용 하 여 자동으로 래핑됩니다를 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 에서 상속할 수 있도록 하는 런타임 시 개체를 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스와 함수 실행 시간으로 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-115">Controls that do not derive from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class, if placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, are automatically wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time, which enables them to inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class and function as run-time <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span>  
  
-   <span data-ttu-id="583d4-116">컨트롤에 있는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-116">Controls residing in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zones.</span></span> <span data-ttu-id="583d4-117">둘 다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 및 기타 서버 컨트롤의 형식에 있어야는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 웹 파트 연결 (및 다른 대부분의 웹 파트 기능)에 참여할 수 있도록 하는 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-117">Both <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and any other type of server control must reside in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone to be able to participate in Web Parts connections (and most other Web Parts features).</span></span>  
  
-   <span data-ttu-id="583d4-118">소비자 및 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-118">Consumers and providers.</span></span> <span data-ttu-id="583d4-119">모든 웹 파트 연결에는 두 개의 컨트롤이: 데이터 및 데이터의 소비자는 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-119">In every Web Parts connection there are two controls: a provider of data and a consumer of data.</span></span> <span data-ttu-id="583d4-120">공급자는 인터페이스의 형태로 데이터를 반환 하는 지정 된 콜백 메서드를 통해 소비자에 게 데이터를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-120">The provider furnishes data to the consumer through a specified callback method that returns data in the form of an interface.</span></span> <span data-ttu-id="583d4-121">(만들고 콜백 메서드를 지정 하는 방법의 예제를이 항목의 예제 섹션 참조). 이 콜백 메서드는 공급자 연결 지점 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-121">(For an example of how to create and specify the callback method, see the Example section of this topic.) This callback method is known as a provider connection point.</span></span> <span data-ttu-id="583d4-122">이 연결점 (해당 이름, ID 및 반환 되는 인터페이스 형식)의 세부 정보에 포함 된를 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 공급자 컨트롤과 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-122">The details of this connection point (its "friendly" name, an ID, and the type of the returned interface) are contained in a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object associated with the provider control.</span></span> <span data-ttu-id="583d4-123">소비자는 인터페이스의 인스턴스를 수락할 수 있는 지정된 된 메서드를 통해 데이터를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-123">The consumer receives the data through a specified method that can accept an instance of the interface.</span></span> <span data-ttu-id="583d4-124">이 메서드는 소비자 연결 지점 이라고 하며에 포함 된 연결 지점 (이름, ID 및 인터페이스의 형식)의 세부 정보는 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 소비자 컨트롤과 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-124">This method is known as a consumer connection point, and the details of the connection point (name, ID, and type of interface) are contained in a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object associated with the consumer control.</span></span>  
  
-   <span data-ttu-id="583d4-125">호환 되는 컨트롤 또는 올바른 변환기입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-125">Compatible controls or a valid transformer.</span></span> <span data-ttu-id="583d4-126">작업 연결에 대해 소비자와 공급자 여야 호환 됨 (지정 된 연결 지점 메서드는 동일한 유형의 인터페이스를 사용 하 여 작업할 수는 의미) 또는 있어야를 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 에서 제공 하는 형식을 변환할 수 있는 개체는 소비자가 인식할 수 있는 형식으로 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-126">For a connection to work, the consumer and provider must either be compatible (meaning that their specified connection point methods can work with the same type of interface), or there must be a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object capable of translating the type offered by the provider into a type understood by the consumer.</span></span>  
  
-   <span data-ttu-id="583d4-127"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-127">A <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span> <span data-ttu-id="583d4-128">존재에 대 한 연결 인스턴스에 있어야 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 공급자 및 소비자 컨트롤과 해당 연결점의 세부 정보에 대 한 참조를 포함 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-128">For a connection to exist, there must be an instance of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class that contains references to the provider and consumer controls, along with the details of their connection points.</span></span> <span data-ttu-id="583d4-129">공급자와 소비자가 호환 되지 않으며 대신 사용 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 개체에 연결 하려면 연결은 변환기를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-129">If the provider and consumer are incompatible and instead use a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object to connect, the connection references the transformer.</span></span>  
  
-   <span data-ttu-id="583d4-130">연결을 설정 하는 수단입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-130">A means of establishing the connection.</span></span> <span data-ttu-id="583d4-131">올바르게 연결 지점 메서드를 사용 하 여 설계 및 영역에 배치 된 호환 소비자 및 공급자 컨트롤 후 및 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 개체를 사용할 수 있는 마지막 필요한 기본 단계는 연결을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-131">After compatible consumer and provider controls have been properly designed with connection point methods and placed in a zone, and a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object is available, the last basic step necessary is to initiate the connection.</span></span> <span data-ttu-id="583d4-132">이러한 한 가지 방법은 사용자가 UI 통해 연결을 만들 수입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-132">One way this can happen is for users to create the connection through the UI.</span></span> <span data-ttu-id="583d4-133">배치 하는 경우는 `<asp:connectionszone>` 페이지 및 다른 요소는 연결에 대 한 구성 요소는 현재 위치에서 런타임에 사용자 페이지를 연결 디스플레이 모드를 전환할 수 있습니다 동사를 클릭 연결 공급자 또는 소비자의 동사 메뉴의 필요 및 연결 UI (기반는 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 컨트롤) 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-133">If you place an `<asp:connectionszone>` element on the page, and the other required components for a connection are in place, at run time a user can switch the page into connect display mode, click a connect verb on the verbs menu of either the provider or consumer, and a connection UI (based on the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control) will appear.</span></span> <span data-ttu-id="583d4-134">이 UI를 통해 사용자는 연결을 시작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-134">Through this UI, the user can initiate the connection.</span></span> <span data-ttu-id="583d4-135">연결을 시작 하는 다른 방법은 프로그래밍 방식으로 것입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-135">Another way to initiate the connection is to do it programmatically.</span></span> <span data-ttu-id="583d4-136">두 경우 모두 시작 하는지 여부를 통해 UI 또는 프로그래밍 방식으로 내부 메서드는 연결 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-136">In either case, whether through the UI or programmatically, the underlying method that initiates the connection is the same.</span></span> <span data-ttu-id="583d4-137">응용 프로그램이 호출을 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> 메서드 (또는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> 변환기를 사용 하는 경우 메서드)에 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 제어, 공급자, 소비자 및 해당 해당 연결 지점 개체를 전달 하 고 메서드 반환를 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-137">The application calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method (or the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method if using a transformer) on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, passing to it the provider, the consumer, and their respective connection point objects, and the method returns a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="583d4-138">합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 클래스 간 연결의 필수 세부 정보를 캡슐화 하는 개체 정의 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-138">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class defines an object that encapsulates the essential details of a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="583d4-139">클래스 세부 정보와 관련 된 특정 연결의 속성 거의 전적으로 이루어져 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-139">The class consists almost entirely of properties related to the details of a particular connection.</span></span> <span data-ttu-id="583d4-140">여러 속성에는 연결에서 소비자 컨트롤과 관련이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-140">Several properties concern the consumer control in a connection.</span></span> <span data-ttu-id="583d4-141">합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> 속성은 소비자 컨트롤 자체를 참조 하며 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> 소비자의 ID를 참조 하는 속성</span><span class="sxs-lookup"><span data-stu-id="583d4-141">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property references the consumer control itself, and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property references the consumer's ID.</span></span> <span data-ttu-id="583d4-142">합니다 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 소비자 연결 지점의 세부 정보를 포함 하는 개체는 소비자가 참조 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-142">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object, which contains the details of the consumer's connection point, is referenced by the consumer's <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span> <span data-ttu-id="583d4-143">합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> 속성의 ID를 참조 합니다 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-143">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property references the ID of the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span> <span data-ttu-id="583d4-144">이러한 모든 소비자 관련 된 연결 속성 값이 연결을 만들려면 할당 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-144">All these consumer-related connection properties must have a value assigned to them to create a connection.</span></span>  
  
 <span data-ttu-id="583d4-145"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 클래스에는 연결에서 공급자 컨트롤과 관련 된 몇 가지 속성 및 소비자에 대 한 속성에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-145">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class also has several properties that relate to the provider control in a connection, and these correspond to the properties for a consumer.</span></span> <span data-ttu-id="583d4-146">합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> 속성은 공급자 컨트롤 자체를 참조 하는 동안는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> 속성 참조 ID</span><span class="sxs-lookup"><span data-stu-id="583d4-146">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property references the provider control itself, while the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property references its ID.</span></span> <span data-ttu-id="583d4-147">합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> 속성 참조를 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 개체 및 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> 속성 공급자의 연결점의 ID를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-147">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property references the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object, and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property references the ID of the provider's connection point.</span></span>  
  
 <span data-ttu-id="583d4-148">몇 가지 속성 연결의 상태와 관련이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-148">Several properties concern the state of the connection.</span></span> <span data-ttu-id="583d4-149"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> 속성 (현재 데이터 교환)는 활성 또는 비활성 (여전히 연결 되었지만 하지 적극적으로 공유 된 데이터) 연결 인지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-149">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property indicates whether the connection is active (currently exchanging data) or inactive (still connected but not actively sharing data).</span></span> <span data-ttu-id="583d4-150">합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> 속성 공유 연결 인지를 나타냅니다 (페이지의 모든 사용자에 게 사용 가능) 또는 사용자 고유의 연결을 및 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> 속성 인지를 나타냅니다 컨트롤 정적 (영구 및 페이지 태그에 선언 됨) 또는 동적 (즉, 프로그래밍 방식으로 만든를 삭제할 수 있습니다).</span><span class="sxs-lookup"><span data-stu-id="583d4-150">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property indicates whether the connection is a shared (available to all users of a page) or a user-specific connection, and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property indicates whether the control is static (declared in the page markup and thus permanent) or dynamic (created programmatically, meaning that it can be deleted).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="583d4-151">다음 코드 예제에는 두 간의 간단한 연결을 만드는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-151">The following code example demonstrates how to create a simple connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="583d4-152">이 예제에서는 연결을 형성 하는 세 가지 방법을 보여 줍니다: 웹 페이지의 태그에 연결에 대 한 태그를 배치 하 여 선언적으로 코드에서 연결을 만드는 프로그래밍 방식으로 및 배치 하 여 UI를 통해를 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 연결을 설정할 수 있도록 하는 페이지의 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-152">The example demonstrates three ways of forming a connection: declaratively, by placing tags for the connection in the markup of the Web page; programmatically, by creating the connection in code; and through the UI, by placing a <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control on the page, which enables users to establish a connection.</span></span>  
  
 <span data-ttu-id="583d4-153">코드 예제에는 네 가지 부분이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-153">The code example has four parts:</span></span>  
  
-   <span data-ttu-id="583d4-154">웹 파트를 변경할 수 있게 해 주는 사용자 정의 컨트롤을 페이지 모드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-154">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="583d4-155">소스 코드는 인터페이스 및 두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 역할 공급자와 소비자 연결을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-155">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="583d4-156">모든 컨트롤을 호스트 하 여 코드 예제를 실행 하는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-156">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="583d4-157">예제 페이지를 실행 하는 방법 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-157">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="583d4-158">이 코드 예제에 첫 번째 부분은 사용자가 웹 페이지의 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-158">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="583d4-159">에 할당 되는 파일 이름을 지정.ascx 파일에 다음 소스 코드를 저장 합니다 `Src` 특성의는 `Register` 호스팅 웹 페이지의 위쪽에이 사용자 정의 컨트롤에 대 한 지시문을 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-159">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="583d4-160">이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 정보를 참조 하세요 [연습: 웹 파트 페이지에서 디스플레이 모드 변경](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-160">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="583d4-161">코드 예제의 두 번째 부분은 인터페이스 및 컨트롤에 대 한 소스 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-161">The second part of the code example is the source code for the interface and controls.</span></span> <span data-ttu-id="583d4-162">이라는 간단한 인터페이스를 포함 하는 소스 파일 `IZipCode`합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-162">The source file contains a simple interface named `IZipCode`.</span></span> <span data-ttu-id="583d4-163">이기도 한 <xref:System.Web.UI.WebControls.WebParts.WebPart> 라는 클래스 `ZipCodeWebPart` 인터페이스를 구현 하 고 공급자 컨트롤의 역할을 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-163">There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control.</span></span> <span data-ttu-id="583d4-164">해당 `ProvideIZipCode` 메서드는 인터페이스의 전용 멤버를 구현 하는 콜백 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-164">Its `ProvideIZipCode` method is the callback method that implements the interface's only member.</span></span> <span data-ttu-id="583d4-165">메서드는 단순히 인터페이스의 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-165">The method simply returns an instance of the interface.</span></span> <span data-ttu-id="583d4-166">메서드를 사용 하 여 표시 된 참고는 `ConnectionProvider` 해당 메타 데이터의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-166">Note that the method is marked with a `ConnectionProvider` attribute in its metadata.</span></span> <span data-ttu-id="583d4-167">공급자의 연결점에 대 한 콜백 메서드로 메서드를 식별 하기 위한 메커니즘입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-167">This is the mechanism for identifying the method as the callback method for the provider's connection point.</span></span> <span data-ttu-id="583d4-168">다른 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 이름은 `WeatherWebPart`, 연결에 대 한 소비자 역할을 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-168">The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection.</span></span> <span data-ttu-id="583d4-169">이 클래스에 메서드가 `GetZipCode` 의 인스턴스를 가져오는 `IZipCode` 공급자 컨트롤에서 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-169">This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control.</span></span> <span data-ttu-id="583d4-170">이 메서드는 사용 하는 소비자 연결 지점 메서드로 표시는 `ConnectionConsumer` 해당 메타 데이터의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-170">Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata.</span></span>  
  
 <span data-ttu-id="583d4-171">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-171">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="583d4-172">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-172">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="583d4-173">또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-173">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="583d4-174">이 코드 예제에서는 동적 컴파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-174">This code example uses dynamic compilation.</span></span> <span data-ttu-id="583d4-175">컴파일하는 방법을 보여 주는 연습을 참조 하세요 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-175">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="583d4-176">코드 예제에서는 세 번째 부분에는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-176">The third part of the code example is the Web page.</span></span> <span data-ttu-id="583d4-177">위쪽은 `Register` 사용자 정의 컨트롤 및 사용자 지정에 대 한 지시문 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-177">Near the top are the `Register` directives for the user control and the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="583d4-178">컨트롤에 대 한 소스 코드를 App_Code 하위 폴더에 있어야 컨트롤의 동적 컴파일, 가정 하기 때문에 `Register` 페이지 태그는 임의의 태그 접두사와 컨트롤의 네임 스페이스 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-178">Because the example assumes dynamic compilation of the controls, the source code for the controls should be in an App_Code subfolder; the `Register` tag in the page references only an arbitrary tag prefix and the namespace of the controls.</span></span> <span data-ttu-id="583d4-179">사용자 지정 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 (공급자 및 소비자) 웹 페이지 내에서 선언 된 `<asp:webpartzone>` 요소를 `<zonetemplate>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-179">The custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (the provider and consumer) are declared within the Web page's `<asp:webpartzone>` element, inside a `<zonetemplate>` element.</span></span>  
  
 <span data-ttu-id="583d4-180">페이지는 사용자 지정 컨트롤 간의 연결을 형성 하는 세 가지를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-180">The page provides three ways to form a connection between the custom controls.</span></span> <span data-ttu-id="583d4-181">첫 번째 방법은 선언적 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-181">The first method is declarative.</span></span> <span data-ttu-id="583d4-182">페이지 태그에는 <`StaticConnections>` 요소 선언 되 고 내에 `<asp:WebPartConnections>` 요소와 특성으로 지정 된 연결의 다양 한 소비자 및 공급자 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-182">In the markup for the page, a <`StaticConnections>` element is declared, and within that is an `<asp:WebPartConnections>` element, with the various consumer and provider details of the connection specified as attributes.</span></span> <span data-ttu-id="583d4-183">이 특히 내 웹 페이지에서 직접 선언 하 여 연결을 만드는 한 가지 방법은 `<asp:WebPartManager>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-183">This is one way to create a connection, by declaring it directly in the Web page, specifically within the `<asp:WebPartManager>` element.</span></span> <span data-ttu-id="583d4-184">이 정적 연결으로 인해 두 사용자 지정 컨트롤 간의 연결 페이지를 로드 한 처음으로 즉시 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-184">Because of this static connection, a connection between the two custom controls is created immediately the first time the page loads.</span></span>  
  
 <span data-ttu-id="583d4-185">컨트롤 간의 연결을 설정 하는 것에 대 한 두 번째 방법에서 제공 되는 `<asp:connectionszone>` 페이지의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-185">A second method for forming a connection between the controls is provided by the `<asp:connectionszone>` element in the page.</span></span> <span data-ttu-id="583d4-186">사용자 페이지를 런타임에 연결 디스플레이 모드를 전환 하 고 사용자 지정 컨트롤 중 하나에서 연결 동사를 클릭 하는 경우는 `<asp:connectionszone>` 요소가 자동으로 연결을 만들기 위한 UI를 렌더링 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-186">If a user switches a page into connect display mode at run time, and clicks a connect verb on one of the custom controls, the `<asp:connectionszone>` element automatically renders the UI for creating a connection.</span></span>  
  
 <span data-ttu-id="583d4-187">페이지에는 프로그래밍 방식으로 작업을 수행 하는 연결을 만들기 위해 세 번째 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-187">The page also demonstrates a third way of creating a connection, which is to do it programmatically.</span></span> <span data-ttu-id="583d4-188">에 `Button1_Click` 메서드는 코드를 생성을 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 공급자 컨트롤과 호출 하 여 해당 연결 지점 세부 정보 검색에 대 한 개체를 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="583d4-188">In the `Button1_Click` method, the code creates a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object for the provider control, and retrieves its connection point details by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> method.</span></span> <span data-ttu-id="583d4-189">소비자 컨트롤에 대 한 비슷한 작업을 수행한 호출을 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="583d4-189">It carries out a similar task for the consumer control, calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> method.</span></span> <span data-ttu-id="583d4-190">마지막으로, 새 만듭니다 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 호출 하 여 개체를 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> 메서드를 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="583d4-190">Finally, it creates the new <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="583d4-191">첫 번째 연결이 이미 존재 내에서 선언 되어 있어 브라우저에서 웹 페이지를 로드 한 후에 `<StaticConnections>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-191">After you load the Web page in a browser, the first connection already exists because it is declared within the `<StaticConnections>` element.</span></span> <span data-ttu-id="583d4-192">일부 텍스트를 입력 합니다 **ZIP Code 공급자** 제어 하며 소비자 컨트롤에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-192">Enter some text in the **ZIP Code Provider** control, and it will be displayed in the consumer control.</span></span> <span data-ttu-id="583d4-193">다음으로 두 개의 연결을 끊습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-193">Next, disconnect the two controls.</span></span> <span data-ttu-id="583d4-194">사용 하는 **표시 모드** 드롭다운 목록 컨트롤에서 페이지 연결 디스플레이 모드를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-194">Using the **Display Mode** drop-down list control, change the page to connect display mode.</span></span> <span data-ttu-id="583d4-195">각각에 대 한 동사 메뉴 (제목 표시줄의 아래쪽 화살표로 표시 됨)를 클릭 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 및 각에 **Connect** 옵션.</span><span class="sxs-lookup"><span data-stu-id="583d4-195">Click the verbs menu (represented by a downward arrow in the title bar) for each of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and notice that each has a **Connect** option.</span></span> <span data-ttu-id="583d4-196">동사 메뉴에 나타나는 연결 동사 이것이 경우에 페이지 연결 모드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-196">This is a connect verb, which appears in the verbs menu only when the page is in connect mode.</span></span> <span data-ttu-id="583d4-197">연결 동사 컨트롤과 연결에서 제공 하는 UI 중 하나를 클릭 합니다 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 컨트롤이 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-197">Click the connect verb on one of the controls, and the connection UI provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control appears.</span></span> <span data-ttu-id="583d4-198">클릭 합니다 **연결 끊기** 단추 컨트롤 간의 정적 연결을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-198">Click the **Disconnect** button to end the static connection between the controls.</span></span> <span data-ttu-id="583d4-199">사용 합니다 **디스플레이 모드** 찾아보기 모드로 페이지를 반환 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-199">Use the **Display Mode** control to return the page to browse mode.</span></span> <span data-ttu-id="583d4-200">공급자에서 새 텍스트를 다시 입력 하 고 컨트롤 끊어져 텍스트 시 되지 않습니다 소비자 컨트롤을 업데이트 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-200">Try to enter some new text in the provider again, and note that because the controls are disconnected, the text fails to update in the consumer control.</span></span>  
  
 <span data-ttu-id="583d4-201">연결 디스플레이 모드에 페이지를 다시 전환 하 고 다음으로, 위와 동일한 방법을 사용합니다</span><span class="sxs-lookup"><span data-stu-id="583d4-201">Next, use the same method as above to switch the page into connect display mode again.</span></span> <span data-ttu-id="583d4-202">컨트롤 중 하나에서 연결 동사를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-202">Click a connect verb on one of the controls.</span></span> <span data-ttu-id="583d4-203">클릭 합니다 **연결을 만듭니다** 링크를 제공한 UI를 사용 하는 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 컨트롤 간의 연결을 만들기 위해 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-203">Click the **Create a Connection** link, and use the UI provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control to create a connection between the controls.</span></span> <span data-ttu-id="583d4-204">이것이 연결을 만들기 위한 두 번째 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-204">This is the second method for creating a connection.</span></span> <span data-ttu-id="583d4-205">연결, 형성 하는 즉시 마지막 문자열 수 입력 (하는 컨트롤에 연결이 끊어진 때문에 표시 하지 못했습니다) 공급자 컨트롤의 연결을 다시 만든 때문에 소비자의 갑자기 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-205">Note that as soon as the connection is formed, the last string you entered in the provider control (that failed to appear because the controls were disconnected) suddenly appears in the consumer, because the connection has been recreated.</span></span> <span data-ttu-id="583d4-206">클릭 합니다 **연결 끊기** 단추를 방금 만든 현재 연결을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-206">Click the **Disconnect** button to end the current connection that you just created.</span></span> <span data-ttu-id="583d4-207">페이지 찾아보기 모드를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-207">Return the page to browse mode.</span></span> <span data-ttu-id="583d4-208">텍스트 업데이트 되지 않습니다 하 고 컨트롤에 다시 연결을 끊습니다는 보여 주기 위해 공급자에 새 텍스트를 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-208">Enter some new text in the provider to demonstrate that the text is not updated, and that the controls are again disconnected.</span></span>  
  
 <span data-ttu-id="583d4-209">디스플레이 모드를 연결 하려면 페이지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-209">Return the page to connect display mode.</span></span> <span data-ttu-id="583d4-210">연결 동사를 클릭 하는 대신 클릭 합니다 **WebPart 컨트롤 연결** 단추를 세 번째 연결을 설정할 메서드를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-210">Instead of clicking a connect verb, click the **Connect WebPart Controls** button, which illustrates the third method of forming a connection.</span></span> <span data-ttu-id="583d4-211">이 방법은 사용 하지 않고도 간단한 단계 하나만으로 프로그래밍 방식으로 컨트롤을 연결 합니다 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-211">This approach connects the controls programmatically in one simple step without having to use the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control.</span></span> <span data-ttu-id="583d4-212">연결으로 생성 되는 참고를 공급자에 갑자기 입력 마지막 문자열 소비자 컨트롤에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-212">Note that as the connection is created, the last string you entered in the provider suddenly appears in the consumer control.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
    <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="583d4-213">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-213">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583d4-214"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A> ASP.NET 파서 웹 페이지의 태그에 대 한 연결을 선언한 경우 인스턴스를 만들 수 있도록 생성자는 공용;이 생성자는 개발자 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-214">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A> constructor is public so that the ASP.NET parser can create an instance when a connection is declared in the markup of a Web page; this constructor is not intended to be used in developer code.</span></span>  
  
 <span data-ttu-id="583d4-215">만들려는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 개체를 프로그래밍 방식으로 사용 해야 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType> 또는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType> 에서 제공 하는 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="583d4-215">When you want to create a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object programmatically, you should use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType> or the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType> method provided in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="583d4-216">이러한 메서드는 연결을 만드는 많은 세부 사항을 처리 하 고 반환 된 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-216">These methods handle the many details of creating a connection, and return a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="583d4-217"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A> 에 대 한 생성자는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 클래스의 값을 설정 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> 및 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-217">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A> constructor for the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class sets the values of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> properties to `true`.</span></span> <span data-ttu-id="583d4-218">따라서 새 연결의 기본 상태 (포함 하는 웹 페이지의 태그에 선언 된 것을 의미) 정적 및 공유 (페이지의 모든 사용자에 게 표시 됨).</span><span class="sxs-lookup"><span data-stu-id="583d4-218">Thus the default state of a new connection is to be static (meaning that it is declared in the markup of the containing Web page) and shared (visible to all users of the page).</span></span> <span data-ttu-id="583d4-219">선언 된 페이지의 태그에 연결 하 여 일반적인 시나리오에서 연결을 추가 하는 경우에 해당 됩니다는 `<asp:webpartconnection>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-219">This will be the case when you add a connection in the typical scenario, by declaring the connection in the markup of the page with an `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="583d4-220">그러나 다른 상황에서 연결을 이러한 속성에 대해 다른 값을 갖게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-220">However, in other circumstances a connection will have different values for these properties.</span></span> <span data-ttu-id="583d4-221">예를 들어 코드에서 연결 개체를 만들어 프로그래밍 방식으로 연결을 추가 하 고 사용자가 기본 사용자 개인 설정 범위에서 페이지를 보고, 연결으로 만들어집니다는 동적 user(visible only to the specific user) 연결입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-221">For example, when you add a connection programmatically by creating the connection object in code, and the user is viewing the page in the default user personalization scope, the connection is created as a dynamic, per-user(visible only to the specific user) connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="583d4-222">합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> 하 고 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> 속성은 읽기 전용 및 연결의 특성을 결정 하는 이러한 속성은 내부적으로 설정 됩니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 연결이 생성 하는 방법에 따라 컨트롤 (페이지 태그에서 선언적으로 또는 코드 또는 사용자 인터페이스)를 통해 프로그래밍 방식으로.</span><span class="sxs-lookup"><span data-stu-id="583d4-222">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> properties are read-only, and these properties that determine the nature of a connection are set internally by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control depending on how a connection is created (declaratively in the page markup, or programmatically through your code or the user interface).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
      </Docs>
    </Member>
    <Member MemberName="Consumer">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart Consumer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart Consumer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Consumer As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ Consumer { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Consumer : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="583d4-223">연결에서 소비자 컨트롤 역할을 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-223">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> object that is acting as the consumer control in a connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="583d4-224">연결에서 소비자 역할을 하는 웹 파트 컨트롤을 나타내는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-224">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that represents the Web Parts control acting as the consumer in a connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583d4-225">모든 웹 파트 연결 데이터를 공유 하는 두 개의 이루어져 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-225">Every Web Parts connection consists of two controls that share data.</span></span> <span data-ttu-id="583d4-226">컨트롤은 데이터의 공급자 역할 및 다른 컨트롤 수신 하 고 공급자 로부터 데이터를 처리할 소비자로 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-226">One control acts as the provider of data, and the other control acts as a consumer, receiving and processing the data from the provider.</span></span> <span data-ttu-id="583d4-227">합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> 속성에 대 한 참조를 가져옵니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 연결 관계에서 소비자 역할을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-227">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property gets a reference to the <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a consumer in a connection relationship.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="583d4-228">다음 코드 예제에서는 프로그래밍 방식으로 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-228">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property.</span></span>  
  
 <span data-ttu-id="583d4-229">코드 예제에는 네 가지 부분이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-229">The code example has four parts:</span></span>  
  
-   <span data-ttu-id="583d4-230">웹 파트를 변경할 수 있게 해 주는 사용자 정의 컨트롤을 페이지 모드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-230">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="583d4-231">소스 코드는 인터페이스 및 두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 역할 공급자와 소비자 연결을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-231">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="583d4-232">모든 컨트롤을 호스트 하 여 코드 예제를 실행 하는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-232">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="583d4-233">예제 페이지를 실행 하는 방법 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-233">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="583d4-234">이 코드 예제에 첫 번째 부분은 사용자가 웹 페이지의 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-234">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="583d4-235">에 할당 되는 파일 이름을 지정.ascx 파일에 다음 소스 코드를 저장 합니다 `Src` 특성의는 `Register` 호스팅 웹 페이지의 위쪽에이 사용자 정의 컨트롤에 대 한 지시문을 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-235">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="583d4-236">이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 정보를 참조 하세요 [연습: 웹 파트 페이지에서 디스플레이 모드 변경](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-236">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Consumer#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_Consumer#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="583d4-237">코드 예제의 두 번째 부분은 두 개의 소스 코드 <xref:System.Web.UI.WebControls.WebParts.WebPart> 소비자 및 공급자를 연결 및 연결 지점에 사용 되는 인터페이스에 대 한 역할을 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-237">The second part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that serve as the consumer and the provider for the connection, and an interface used for the connection points.</span></span> <span data-ttu-id="583d4-238">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-238">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="583d4-239">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-239">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="583d4-240">또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-240">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="583d4-241">이 코드 예제에서는 동적 컴파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-241">This code example uses dynamic compilation.</span></span> <span data-ttu-id="583d4-242">컴파일하는 방법을 보여 주는 연습을 참조 하세요 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-242">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_Consumer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_Consumer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="583d4-243">코드 예제에서는 세 번째 부분은 컨트롤을 호스트 하 고 사용 방법을 설명 하는 웹 페이지에 대 한 코드는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-243">The third part of the code example is the code for the Web page that hosts the controls and demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property.</span></span> <span data-ttu-id="583d4-244">페이지의 위쪽에는 `Register` 사용자 정의 컨트롤 및 사용자 지정 컨트롤에 대 한 지시문입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-244">Near the top of the page are the `Register` directives for the user control and the custom controls.</span></span> <span data-ttu-id="583d4-245">이 예에서는 동적 컴파일 사용 하므로 `Register` 소스 파일에 대 한 지시문 어셈블리 이름을 참조 하지 않아도; 여기에 임의의 태그 접두사 및 네임 스페이스는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-245">Because this example uses dynamic compilation, the `Register` directive for the source file does not need to reference an assembly name; it includes only an arbitrary tag prefix and the namespace of the controls.</span></span> <span data-ttu-id="583d4-246">에 `Button2_Click` 코드 메서드를 통해 연결 개체에 액세스 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤과 소비자 컨트롤에 대 한 참조를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-246">In the `Button2_Click` method, the code accesses the connection object through the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, and gets a reference to the consumer control.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Consumer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_Consumer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="583d4-247">사용 하 여 브라우저에서 페이지를 로드 한 후에 **디스플레이 모드** 드롭다운 목록 컨트롤을 페이지 연결 모드를 전환 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-247">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="583d4-248">동사 메뉴 (제목 표시줄의 아래쪽 화살표로 표시 됨) 중 하나를 클릭 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤과 연결 동사를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-248">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="583d4-249">사용 합니다 **WebPart 컨트롤 연결** 단추 또는 제공 된 연결 사용자 인터페이스 (UI)를 두 컨트롤 간의 연결을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-249">Use the **Connect WebPart Controls** button, or the provided connection user interface (UI), to create a connection between the two controls.</span></span> <span data-ttu-id="583d4-250">클릭 합니다 **소비자 정보를 표시** 단추를 보여 주는 코드를 실행 하는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-250">Click the **Display Consumer Info** button to run the code that demonstrates the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="583d4-251">
            <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" /> 속성의 길이가 0인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-251">The length of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" /> property is zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
      </Docs>
    </Member>
    <Member MemberName="ConsumerConnectionPoint">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint ConsumerConnectionPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint ConsumerConnectionPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsumerConnectionPoint As ConsumerConnectionPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ ConsumerConnectionPoint { System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConsumerConnectionPoint : System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="583d4-252">연결에서 소비자 역할을 하는 컨트롤의 연결 지점으로 사용되는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-252">Gets the object that serves as a connection point for a control that is acting as a consumer in a connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="583d4-253">연결에서 소비자 컨트롤과 관련된 <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-253">A <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> associated with the consumer control in a connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583d4-254">두 연결을 만드는 데 필요한 단계 중 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 각 컨트롤에 대 한 연결점을 만드는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-254">One of the required steps for creating a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls is to create connection points for each control.</span></span> <span data-ttu-id="583d4-255">소비자 연결 지점의 소비자 역할을 하는 컨트롤에 연결 하는 방법에 대 한 정보를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-255">The consumer connection point is an object that contains the information about how to connect to the control acting as a consumer.</span></span> <span data-ttu-id="583d4-256">소비자의 소스 코드에서 메서드 중으로 식별 되어야 합니다는 `ConnectionConsumer` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-256">In the consumer's source code, one of the methods must be identified with the `ConnectionConsumer` attribute.</span></span> <span data-ttu-id="583d4-257"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 소비자 컨트롤과 연결 된 개체의 메서드 및 메서드를 사용 하 여 사용자 인터페이스 (UI)에 대 한 표시 이름에 대 한 ID를 포함 하 여 특성에 대 한 세부 정보를 포함 하 고 어떤 유형의 인터페이스 메서드를 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-257">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object that is associated with a consumer control contains details about the method and the attribute, including an ID for the method, a display name for use in the user interface (UI), and what type of interface the method can retrieve.</span></span> <span data-ttu-id="583d4-258">이 소비자에 대 한 정보이 집합을 인식할 수 있는 인터페이스의 형식과 연결을 형성 하는 것에 대 한 해당 메서드는 전체적으로 소비자 연결 지점의 형성 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-258">This set of information about the consumer, its method for forming connections, and the type of interface it understands, collectively forms a consumer connection point.</span></span>  
  
 <span data-ttu-id="583d4-259">기본적으로 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 개체가 하나만 연결할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 번 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-259">By default, a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object can connect to only one <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object at a time.</span></span> <span data-ttu-id="583d4-260">소비자에는 가능한 소비자 연결 지점으로 식별 하는 여러 메서드가 있을 수 있지만 소비자 (따라서만 활성화할 수는 소비자 연결 지점 중 하나)만 소비자로 서 이상의 연결에 참여할 수 있습니다 번입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-260">A consumer could have multiple methods identified as possible consumer connection points, but a consumer can only participate in one connection as a consumer (hence, only one of its consumer connection points can be active) at a time.</span></span> <span data-ttu-id="583d4-261">반면에 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 개수에 관계 없이 연결할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-261">In contrast, a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> can connect to any number of <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="583d4-262">이 기본 동작을 재정의 하 여 변경할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-262">This default behavior can be changed by overriding the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A> property on the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="583d4-263">다음 코드 예제에서는 프로그래밍 방식으로 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-263">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span>  
  
 <span data-ttu-id="583d4-264">예제에는 네 가지 부분이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-264">The example has four parts:</span></span>  
  
-   <span data-ttu-id="583d4-265">웹 파트를 변경할 수 있게 해 주는 사용자 정의 컨트롤을 페이지 모드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-265">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="583d4-266">소스 코드는 인터페이스 및 두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 역할 공급자와 소비자 연결을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-266">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="583d4-267">모든 컨트롤을 호스트 하 여 코드 예제를 실행 하는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-267">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="583d4-268">예제 페이지를 실행 하는 방법 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-268">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="583d4-269">이 코드 예제에 첫 번째 부분은 사용자가 웹 페이지의 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-269">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="583d4-270">에 할당 되는 파일 이름을 지정.ascx 파일에 다음 소스 코드를 저장 합니다 `Src` 특성의는 `Register` 호스팅 웹 페이지의 위쪽에이 사용자 정의 컨트롤에 대 한 지시문을 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-270">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="583d4-271">이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 정보를 참조 하세요 [연습: 웹 파트 페이지에서 디스플레이 모드 변경](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-271">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPoint#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPoint#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="583d4-272">코드 예제의 두 번째 부분은 두 개의 소스 코드 <xref:System.Web.UI.WebControls.WebParts.WebPart> 소비자 및 공급자를 연결 및 연결 지점에 사용 되는 인터페이스에 대 한 역할을 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-272">The second part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that serve as the consumer and the provider for the connection, and an interface used for the connection points.</span></span> <span data-ttu-id="583d4-273">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-273">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="583d4-274">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-274">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="583d4-275">또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-275">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="583d4-276">이 코드 예제에서는 동적 컴파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-276">This code example uses dynamic compilation.</span></span> <span data-ttu-id="583d4-277">컴파일하는 방법을 보여 주는 연습을 참조 하세요 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-277">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ConsumerConnectionPoint#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ConsumerConnectionPoint#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="583d4-278">코드 예제에서는 세 번째 부분은 컨트롤을 호스트 하 고 사용 방법을 설명 하는 웹 페이지에 대 한 코드는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-278">The third part of the code example is the code for the Web page that hosts the controls and demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span> <span data-ttu-id="583d4-279">에 `Button1_Click` 메서드를 연결 하는 데 필요한 모든 개체는 생성을 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-279">In the `Button1_Click` method, all the objects required to form a connection are created, including a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span> <span data-ttu-id="583d4-280">이러한 개체 모두에 전달 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> 메서드 연결을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-280">These objects are all passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method to create the connection.</span></span> <span data-ttu-id="583d4-281">여기서는 ID 속성이 필요 하지 않습니다, 연결 동적 이므로 및 `Button2_Click` 컨트롤 연결 ID를 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-281">In the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property and displays some details of the connection point.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPoint#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPoint#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="583d4-282">사용 하 여 브라우저에서 페이지를 로드 한 후에 **디스플레이 모드** 드롭다운 목록 컨트롤을 페이지 연결 모드를 전환 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-282">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="583d4-283">동사 메뉴 (제목 표시줄의 아래쪽 화살표로 표시 됨) 중 하나를 클릭 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤과 연결 동사를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-283">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="583d4-284">에 ** 메서드를 코드의 값에 액세스를 ** 속성에 레이블을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-284">Use the **Connect WebPart Controls** button, or the provided connection UI, to create a connection between the two controls.</span></span> <span data-ttu-id="583d4-285">클릭 합니다 **연결 세부 정보** 에 액세스 하는 코드를 실행 하는 단추는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-285">Click the **ConnectionPoint Details** button to run the code that demonstrates the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
      </Docs>
    </Member>
    <Member MemberName="ConsumerConnectionPointID">
      <MemberSignature Language="C#" Value="public string ConsumerConnectionPointID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumerConnectionPointID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsumerConnectionPointID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConsumerConnectionPointID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConsumerConnectionPointID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("default")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="583d4-286">연결에서 소비자 연결 지점 역할을 하는 개체의 ID를 참조하는 속성 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-286">Gets or sets the property value on a connection that references the ID of the object serving as the consumer connection point for that connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="583d4-287">소비자 연결 지점의 ID가 들어 있는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-287">A string that contains the ID for the consumer connection point.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583d4-288">합니다 `ConsumerConnectionPointID` 속성의 상태를 표시 합니다.는 `<asp:webpartconnection>` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-288">For a static connection declared in the markup of a Web page, developers can specify which consumer connection point will be used for the connection by assigning a value to the `ConsumerConnectionPointID` attribute on the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="583d4-289">연결에서 공급자 컨트롤과 소비자 컨트롤은 통신 및 공용 인터페이스를 통해 데이터를 교환할 수 있습니다이 상태의 연결이 면 또는 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-289">If a value is not assigned to the attribute, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> property value is used.</span></span>  
  
 <span data-ttu-id="583d4-290">표준 찾아보기 모드로 설정 된 연결을 포함 하는 렌더링된 된 페이지를 사용자가 볼 때 연결이 (하지 않는 경우 페이지를 로드할 때 일부 충돌 또는 기타 문제로 인해 활성화 하지 못했습니다) 일반적으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-290">When you create dynamic (programmatic) connections, normally you should not set the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property.</span></span> <span data-ttu-id="583d4-291">페이지 및 컨트롤 수명 주기의 초기 단계에서 속성 값이 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-291">You can simply call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, passing to it the consumer and consumer connection point objects (along with the other required parameters), and that method determines the correct ID to use for the consumer's connection point.</span></span> <span data-ttu-id="583d4-292">연결은 직후 활성화는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> 이벤트에는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> 컨트롤 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-292">Similarly, when you disconnect, you can call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method without needing to specify the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="583d4-293">소비자가 공급자에서 지정된 된 인터페이스의 인스턴스를 검색 한 후 연결 활성화 되는 특히 또는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-293">The ID of a consumer's connection point can be determined when you designate a <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control as a consumer.</span></span> <span data-ttu-id="583d4-294">연결 상황에서 활성 상태 인지 알고 있어야 하는 것이 유용 충돌이 나 페이지에 여러 연결으로 인해 동기화 문제가 발생할 수 있는 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-294">You must identify a method in the consumer that retrieves an instance of an interface furnished by either a provider control or a transformer.</span></span> <span data-ttu-id="583d4-295">예를 들어는 두 개의 연결 간의 충돌 일종의 `ConnectionConsumer` 컨트롤에 충돌 하지 않도록 하는 연결 중 하나를 활성화 하지 않을 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-295">To identify the method, mark it with the `ConnectionConsumer` code attribute.</span></span> <span data-ttu-id="583d4-296">이 예제는 세 부분으로 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-296">When you add this attribute, you can add an optional string value parameter that serves as an ID for the consumer's <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span> <span data-ttu-id="583d4-297">내는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> 요소는 4 명의 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-297">If you supply a value for the optional ID parameter, that value becomes the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property for the connection.</span></span> <span data-ttu-id="583d4-298">값을 확인 하는 각 이벤트 처리기를 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> 는 정적 연결의 속성에 메시지를 씁니다는  는 연결이 활성 또는 비활성 페이지 및 컨트롤 수명 주기의 해당 상태에서 인지 여부를 나타내는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-298">If you do not supply an ID value, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> property value is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="583d4-299">연결 어느 시점에 활성화 되는 방법을 보여 줍니다이 렌더링 되는 활성 상태를 유지 페이지 뒤에</span><span class="sxs-lookup"><span data-stu-id="583d4-299">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property.</span></span>  
  
 <span data-ttu-id="583d4-300">예제에는 네 가지 부분이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-300">The example has four parts:</span></span>  
  
-   <span data-ttu-id="583d4-301">웹 파트를 변경할 수 있게 해 주는 사용자 정의 컨트롤을 페이지 모드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-301">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="583d4-302">소스 코드는 인터페이스 및 두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 역할 공급자와 소비자 연결을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-302">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="583d4-303">모든 컨트롤을 호스트 하 여 코드 예제를 실행 하는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-303">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="583d4-304">예제 페이지를 실행 하는 방법 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-304">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="583d4-305">이 코드 예제에 첫 번째 부분은 사용자가 웹 페이지의 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-305">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="583d4-306">에 할당 되는 파일 이름을 지정.ascx 파일에 다음 소스 코드를 저장 합니다 `Src` 특성의는 `Register` 호스팅 웹 페이지의 위쪽에이 사용자 정의 컨트롤에 대 한 지시문을 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-306">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="583d4-307">이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 정보를 참조 하세요 [연습: 웹 파트 페이지에서 디스플레이 모드 변경](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-307">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPointID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPointID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="583d4-308">코드 예제의 두 번째 부분은 인터페이스 및 소비자 및 공급자 컨트롤에 대 한 소스 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-308">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="583d4-309">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-309">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="583d4-310">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-310">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="583d4-311">또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-311">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="583d4-312">이 코드 예제에서는 동적 컴파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-312">This code example uses dynamic compilation.</span></span> <span data-ttu-id="583d4-313">컴파일하는 방법을 보여 주는 연습을 참조 하세요 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-313">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ConsumerConnectionPointID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ConsumerConnectionPointID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="583d4-314">코드 예제에서는 세 번째 부분에는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-314">The third part of the code example is the Web page.</span></span> <span data-ttu-id="583d4-315">연결 페이지 태그에서 선언 되를 사용 하는 `<StaticConnections>` 및 `<asp:WebPartsConnection>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-315">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="583d4-316">연결 선언 포함 필수 `ConsumerConnectionPointID` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-316">The connection declaration includes the required `ConsumerConnectionPointID` attribute.</span></span> <span data-ttu-id="583d4-317">에 대 한 연결 만들기에 대 한 두 번째 방법은 나타납니다는 `Button1_Click` 코드 소비자 컨트롤에 정의 된 연결 지점을 사용 하 여 새 연결을 만드는 메서드.</span><span class="sxs-lookup"><span data-stu-id="583d4-317">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="583d4-318">정적 연결 이미 만들어지고 연결 페이지 및 컨트롤 수명 주기의 여러 시점에서 활성 했는지 여부를 보여 주는 레이블로 이미 기록 된 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-318">Then, in the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPointID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPointID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="583d4-319">브라우저에서 페이지를 로드 한 후 페이지에 선언 된 정적 연결으로 인해 연결이 이미 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-319">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="583d4-320">공급자 컨트롤에서 일부 텍스트를 입력 하 고 연결으로 인해 소비자에서 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-320">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="583d4-321">다음으로, 컨트롤을 연결을 끊습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-321">Next, disconnect the controls.</span></span> <span data-ttu-id="583d4-322">클릭 합니다 **연결 세부 정보** 연결은 현재 시점에서 아니지만 연결 될 때마다 후 다시 활성화 되 고 단추를  이벤트 및는 여전히 활성 상태인 (남아 있도록) 후 합니다  페이지의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-322">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="583d4-323">동사 메뉴 (제목 표시줄의 아래쪽 화살표로 표시 됨) 중 하나를 클릭 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤과 연결 동사를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-323">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="583d4-324">나타내는 값을 가져옵니다 여부를 ** 개체의 모든 사용자 또는 현재 사용자에만 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-324">Click the **Disconnect** button.</span></span> <span data-ttu-id="583d4-325">연결; 공유 하는 경우 그렇지 않으면 **합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-325">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="583d4-326">개별와 마찬가지로 ** 컨트롤을 ** 개체 공유 또는 사용자 당 인스턴스 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-326">Click the **ConnectionPoint Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property value.</span></span> <span data-ttu-id="583d4-327">공유 인스턴스 연결이 웹 페이지의 모든 사용자에 게 표시 사용자별 인스턴스 연결이 특정 사용자 에게만 표시 의미 있음을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-327">The value is written out in a label below the controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      </Docs>
    </Member>
    <Member MemberName="ConsumerID">
      <MemberSignature Language="C#" Value="public string ConsumerID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumerID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsumerID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConsumerID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConsumerID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="583d4-328">연결에서 소비자 역할을 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 ID를 참조하는 속성 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-328">Gets or sets the property value on a connection that references the ID of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a consumer for that connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="583d4-329">연결에서 소비자 역할을 하는 컨트롤의 ID가 들어 있는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-329">A string that contains the ID of the control acting as a consumer in a connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583d4-330">또한 웹 페이지에 공유 개인 설정 범위 연결이 추가 되 면 연결 공유 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-330">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property value is required when you create a connection between <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="583d4-331">일반적으로 사용자를 사용 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 연결이 공유 되지 않은 연결을 페이지에 추가할 사용자 인터페이스 (UI) 사용자 개인 설정 범위에서 이므로 하며  속성 값이 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-331">If a value is not assigned to the property, an exception is thrown when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control attempts to activate the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="583d4-332">연결 어느 시점에 활성화 되는 방법을 보여 줍니다이 렌더링 되는 활성 상태를 유지 페이지 뒤에</span><span class="sxs-lookup"><span data-stu-id="583d4-332">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property.</span></span>  
  
 <span data-ttu-id="583d4-333">예제에는 네 가지 부분이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-333">The example has four parts:</span></span>  
  
-   <span data-ttu-id="583d4-334">웹 파트를 변경할 수 있게 해 주는 사용자 정의 컨트롤을 페이지 모드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-334">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="583d4-335">소스 코드는 인터페이스 및 두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 역할 공급자와 소비자 연결을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-335">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="583d4-336">모든 컨트롤을 호스트 하 여 코드 예제를 실행 하는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-336">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="583d4-337">예제 페이지를 실행 하는 방법 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-337">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="583d4-338">이 코드 예제에 첫 번째 부분은 사용자가 웹 페이지의 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-338">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="583d4-339">에 할당 되는 파일 이름을 지정.ascx 파일에 다음 소스 코드를 저장 합니다 `Src` 특성의는 `Register` 호스팅 웹 페이지의 위쪽에이 사용자 정의 컨트롤에 대 한 지시문을 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-339">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="583d4-340">이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 정보를 참조 하세요 [연습: 웹 파트 페이지에서 디스플레이 모드 변경](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-340">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="583d4-341">코드 예제의 두 번째 부분은 인터페이스 및 소비자 및 공급자 컨트롤에 대 한 소스 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-341">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="583d4-342">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-342">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="583d4-343">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-343">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="583d4-344">또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-344">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="583d4-345">이 코드 예제에서는 동적 컴파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-345">This code example uses dynamic compilation.</span></span> <span data-ttu-id="583d4-346">컴파일하는 방법을 보여 주는 연습을 참조 하세요 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-346">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ConsumerID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ConsumerID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="583d4-347">코드 예제에서는 세 번째 부분에는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-347">The third part of the code example is the Web page.</span></span> <span data-ttu-id="583d4-348">연결 페이지 태그에서 선언 되를 사용 하는 `<StaticConnections>` 및 `<asp:WebPartsConnection>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-348">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="583d4-349">연결 선언 포함 필수 `ConsumerID` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-349">The connection declaration includes the required `ConsumerID` attribute.</span></span> <span data-ttu-id="583d4-350">에 대 한 연결 만들기에 대 한 두 번째 방법은 나타납니다는 `Button1_Click` 코드 소비자 컨트롤에 정의 된 연결 지점을 사용 하 여 새 연결을 만드는 메서드.</span><span class="sxs-lookup"><span data-stu-id="583d4-350">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="583d4-351">그런 다음 합니다 `Button2_Click` 메서드를 코드의 값에 액세스를 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> 속성에 레이블을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-351">Then, in the `Button2_Click` method, the code accesses the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property and displays it in a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="583d4-352">브라우저에서 페이지를 로드 한 후 페이지에 선언 된 정적 연결으로 인해 연결이 이미 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-352">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="583d4-353">공급자 컨트롤에서 일부 텍스트를 입력 하 고 연결으로 인해 소비자에서 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-353">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="583d4-354">다음으로, 컨트롤을 연결을 끊습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-354">Next, disconnect the controls.</span></span> <span data-ttu-id="583d4-355">클릭 합니다 **연결 세부 정보** 연결은 현재 시점에서 아니지만 연결 될 때마다 후 다시 활성화 되 고 단추를  이벤트 및는 여전히 활성 상태인 (남아 있도록) 후 합니다  페이지의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-355">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="583d4-356">동사 메뉴 (제목 표시줄의 아래쪽 화살표로 표시 됨) 중 하나를 클릭 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤과 연결 동사를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-356">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="583d4-357">나타내는 값을 가져옵니다 여부를 ** 개체의 모든 사용자 또는 현재 사용자에만 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-357">Click the **Disconnect** button.</span></span> <span data-ttu-id="583d4-358">연결; 공유 하는 경우 그렇지 않으면 **합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-358">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="583d4-359">클릭 합니다 **소비자 세부 정보** 에 액세스 하는 코드를 실행 하는 단추는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-359">Click the **Consumer Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="583d4-360">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> 개체의 ID를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-360">Gets or sets the ID of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="583d4-361">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />의 ID가 들어 있는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-361">A string that contains the ID of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583d4-362">에 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 확인 메서드를는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> 기존 연결의 속성 페이지에서 결과 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-362">Every <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object has a unique value assigned to its <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property.</span></span> <span data-ttu-id="583d4-363">네 번째 부분 코드 예제에서는 공유 개인 설정 범위에서 페이지를 편집 하려면 예제를 실행 하는 사용자 계정에 필요한 Web.config 파일에서 항목을입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-363">This is to ensure that there is a way to distinguish between multiple connections.</span></span>  
  
 <span data-ttu-id="583d4-364">선언 하 여 정적 연결을 만들 경우는 `<asp:webpartconnection>` 웹 페이지에 요소 값을 할당 하지 마십시오는 `ID` 예외가 연결에 대 한 특성 때 throw 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 제어 연결을 활성화 하려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-364">If you create a static connection by declaring an `<asp:webpartconnection>` element in a Web page, and you do not assign a value to the `ID` attribute for the connection, an exception is thrown when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control attempts to activate the connection.</span></span>  
  
 <span data-ttu-id="583d4-365">경우는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤에는 새 동적 연결을 만듭니다, 호출을 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A> 연결에 대 한 고유 ID를 생성 하는 방법.</span><span class="sxs-lookup"><span data-stu-id="583d4-365">When the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control creates a new dynamic connection, it calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A> method to generate a unique ID for the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="583d4-366">연결 어느 시점에 활성화 되는 방법을 보여 줍니다이 렌더링 되는 활성 상태를 유지 페이지 뒤에</span><span class="sxs-lookup"><span data-stu-id="583d4-366">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property.</span></span>  
  
 <span data-ttu-id="583d4-367">예제에는 네 가지 부분이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-367">The example has four parts:</span></span>  
  
-   <span data-ttu-id="583d4-368">웹 파트를 변경할 수 있게 해 주는 사용자 정의 컨트롤을 페이지 모드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-368">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="583d4-369">소스 코드는 인터페이스 및 두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 역할 공급자와 소비자 연결을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-369">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="583d4-370">모든 컨트롤을 호스트 하 여 코드 예제를 실행 하는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-370">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="583d4-371">예제 페이지를 실행 하는 방법 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-371">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="583d4-372">이 코드 예제에 첫 번째 부분은 사용자가 웹 페이지의 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-372">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="583d4-373">에 할당 되는 파일 이름을 지정.ascx 파일에 다음 소스 코드를 저장 합니다 `Src` 특성의는 `Register` 호스팅 웹 페이지의 위쪽에이 사용자 정의 컨트롤에 대 한 지시문을 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-373">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="583d4-374">이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 정보를 참조 하세요 [연습: 웹 파트 페이지에서 디스플레이 모드 변경](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-374">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="583d4-375">코드 예제의 두 번째 부분은 인터페이스 및 소비자 및 공급자 컨트롤에 대 한 소스 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-375">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="583d4-376">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-376">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="583d4-377">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-377">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="583d4-378">또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-378">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="583d4-379">이 코드 예제에서는 동적 컴파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-379">This code example uses dynamic compilation.</span></span> <span data-ttu-id="583d4-380">컴파일하는 방법을 보여 주는 연습을 참조 하세요 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-380">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="583d4-381">코드 예제에서는 세 번째 부분에는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-381">The third part of the code example is the Web page.</span></span> <span data-ttu-id="583d4-382">연결 페이지 태그에서 선언 되를 사용 하는 `<StaticConnections>` 및 `<asp:WebPartsConnection>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-382">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="583d4-383">연결 선언 포함 필수 `ID` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-383">The connection declaration includes the required `ID` attribute.</span></span> <span data-ttu-id="583d4-384">에 대 한 연결 만들기에 대 한 두 번째 방법은 나타납니다는 `Button1_Click` 코드 소비자 컨트롤에 정의 된 연결 지점을 사용 하 여 새 연결을 만드는 메서드.</span><span class="sxs-lookup"><span data-stu-id="583d4-384">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="583d4-385">여기서는 ID 속성이 필요 하지 않습니다, 연결 동적 이므로 및 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤 연결 ID를 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-385">Here, the ID property is not required, because the connection is dynamic, and the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control assigns an ID to the connection.</span></span> <span data-ttu-id="583d4-386">에 `Button2_Click` 메서드를 코드의 값에 액세스를 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> 속성에 레이블을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-386">In the `Button2_Click` method, the code accesses the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property and displays it in a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="583d4-387">브라우저에서 페이지를 로드 한 후 페이지에 선언 된 정적 연결으로 인해 연결이 이미 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-387">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="583d4-388">공급자 컨트롤에서 일부 텍스트를 입력 하 고 연결으로 인해 소비자에서 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-388">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="583d4-389">다음으로, 컨트롤을 연결을 끊습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-389">Next, disconnect the controls.</span></span> <span data-ttu-id="583d4-390">클릭 합니다 **연결 세부 정보** 연결은 현재 시점에서 아니지만 연결 될 때마다 후 다시 활성화 되 고 단추를  이벤트 및는 여전히 활성 상태인 (남아 있도록) 후 합니다  페이지의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-390">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="583d4-391">동사 메뉴 (제목 표시줄의 아래쪽 화살표로 표시 됨) 중 하나를 클릭 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤과 연결 동사를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-391">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="583d4-392">나타내는 값을 가져옵니다 여부를 ** 개체의 모든 사용자 또는 현재 사용자에만 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-392">Click the **Disconnect** button.</span></span> <span data-ttu-id="583d4-393">연결; 공유 하는 경우 그렇지 않으면 **합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-393">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="583d4-394">클릭 합니다 **연결 세부 정보** 에 액세스 하는 코드를 실행 하는 단추는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-394">Click the **Connection Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsActive : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="583d4-395">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> 개체가 현재 설정되어 있고 공급자 컨트롤과 소비자 컨트롤 간에 데이터를 교환할 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-395">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is currently established and able to exchange data between its provider and consumer controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="583d4-396">연결이 활성화되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-396">
              <see langword="true" /> if the connection is active; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583d4-397">합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> 속성의 상태를 표시 합니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-397">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property indicates a state of a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span> <span data-ttu-id="583d4-398">연결에서 공급자 컨트롤과 소비자 컨트롤은 통신 및 공용 인터페이스를 통해 데이터를 교환할 수 있습니다이 상태의 연결이 면 또는 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-398">When the connection is in this state, the provider and consumer controls in the connection are communicating and able to exchange data through a common interface or a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object.</span></span>  
  
 <span data-ttu-id="583d4-399">표준 찾아보기 모드로 설정 된 연결을 포함 하는 렌더링된 된 페이지를 사용자가 볼 때 연결이 (하지 않는 경우 페이지를 로드할 때 일부 충돌 또는 기타 문제로 인해 활성화 하지 못했습니다) 일반적으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-399">When a user views a rendered page that includes an established connection in normal browse mode, the connection is typically active (unless it failed to be activated due to some conflict or other issue when the page loaded).</span></span> <span data-ttu-id="583d4-400">페이지 및 컨트롤 수명 주기의 초기 단계에서 속성 값이 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-400">In the early stages of the page and control life cycle, the property value is `false`.</span></span> <span data-ttu-id="583d4-401">연결은 직후 활성화는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> 이벤트에는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-401">The connection is activated just after the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> event on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control is raised.</span></span> <span data-ttu-id="583d4-402">소비자가 공급자에서 지정된 된 인터페이스의 인스턴스를 검색 한 후 연결 활성화 되는 특히 또는 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-402">Specifically, the connection is activated after the consumer has retrieved an instance of the specified interface from the provider or a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object.</span></span>  
  
 <span data-ttu-id="583d4-403">연결 상황에서 활성 상태 인지 알고 있어야 하는 것이 유용 충돌이 나 페이지에 여러 연결으로 인해 동기화 문제가 발생할 수 있는 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-403">It is useful to know whether a connection is active in situations where there might be conflicts or synchronization issues due to multiple connections on a page.</span></span> <span data-ttu-id="583d4-404">예를 들어는 두 개의 연결 간의 충돌 일종의 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤에 충돌 하지 않도록 하는 연결 중 하나를 활성화 하지 않을 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-404">For example, if there is some kind of conflict between two connections, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control has the option of not activating one of the connections to avoid the conflict.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="583d4-405">다음 코드 예제에는 사용 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-405">The following code example demonstrates use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property.</span></span>  
  
 <span data-ttu-id="583d4-406">이 예제는 세 부분으로 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-406">The example has three parts:</span></span>  
  
-   <span data-ttu-id="583d4-407">소스 코드는 인터페이스 및 두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 역할 공급자와 소비자 연결을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-407">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="583d4-408">모든 컨트롤을 호스트 하 여 코드 예제를 실행 하는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-408">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="583d4-409">예제 페이지를 실행 하는 방법 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-409">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="583d4-410">코드 예제의 첫 번째 부분은 인터페이스 및 소비자 및 공급자 컨트롤에 대 한 소스 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-410">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="583d4-411">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-411">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="583d4-412">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-412">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="583d4-413">또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-413">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="583d4-414">이 코드 예제에서는 동적 컴파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-414">This code example uses dynamic compilation.</span></span> <span data-ttu-id="583d4-415">컴파일하는 방법을 보여 주는 연습을 참조 하세요 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-415">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_IsActive#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_IsActive#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="583d4-416">코드 예제의 두 번째 부분은 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-416">The second part of the code example is the Web page.</span></span> <span data-ttu-id="583d4-417">위쪽에를 `Register` 동적으로 컴파일된 두 개의 소스 코드를 가리키는 지시문 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-417">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="583d4-418">정적 연결 내에서 선언 된 `<StaticConnections>` 페이지의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-418">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="583d4-419">내는 `<script>` 요소는 4 명의 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-419">Within the `<script>` element are four event handlers.</span></span> <span data-ttu-id="583d4-420">값을 확인 하는 각 이벤트 처리기를 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> 는 정적 연결의 속성에 메시지를 씁니다는 <xref:System.Web.UI.WebControls.Label> 는 연결이 활성 또는 비활성 페이지 및 컨트롤 수명 주기의 해당 상태에서 인지 여부를 나타내는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-420">Each event handler checks the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property on the static connection, and writes a message to the <xref:System.Web.UI.WebControls.Label> control indicating whether the connection is active or inactive at that state of the page and control life cycle.</span></span> <span data-ttu-id="583d4-421">연결 어느 시점에 활성화 되는 방법을 보여 줍니다이 렌더링 되는 활성 상태를 유지 페이지 뒤에</span><span class="sxs-lookup"><span data-stu-id="583d4-421">This demonstrates at what point the connection becomes active, and that it remains active after the page is rendered.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsActive#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/CS/wpConnectIsActiveCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsActive#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/VB/wpConnectIsActiveVB.aspx#1)]  
  
 <span data-ttu-id="583d4-422">브라우저에서 페이지를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-422">Load the page in a browser.</span></span> <span data-ttu-id="583d4-423">정적 연결 이미 만들어지고 연결 페이지 및 컨트롤 수명 주기의 여러 시점에서 활성 했는지 여부를 보여 주는 레이블로 이미 기록 된 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-423">The static connection is already created, and messages have already been written to the labels showing whether the connection was active at various points in the page and control life cycle.</span></span> <span data-ttu-id="583d4-424">클릭 합니다 **연결 세부 정보** 연결은 현재 시점에서 아니지만 연결 될 때마다 후 다시 활성화 되 고 단추를 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> 이벤트 및는 여전히 활성 상태인 (남아 있도록) 후 합니다 <xref:System.Web.UI.Control.PreRender> 페이지의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-424">Click the **Connection Details** button, and note that the connection is not active at that point, but that the connection is reactivated each time after the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> event, and that it is still active (and will remain so) after the <xref:System.Web.UI.Control.PreRender> event of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStatic" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
      </Docs>
    </Member>
    <Member MemberName="IsShared">
      <MemberSignature Language="C#" Value="public bool IsShared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShared" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsShared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsShared { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsShared : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="583d4-425">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> 개체가 모든 사용자에게 표시되는지 아니면 현재 사용자에게만 표시되는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-425">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is visible to all users or only to the current user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="583d4-426">연결이 공유되어 있으면 <see langword="true" />고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-426">
              <see langword="true" /> if the connection is shared; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583d4-427">개별와 마찬가지로 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 개체 공유 또는 사용자 당 인스턴스 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-427">As with individual <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object can be a shared or a per-user instance.</span></span> <span data-ttu-id="583d4-428">공유 인스턴스 연결이 웹 페이지의 모든 사용자에 게 표시 사용자별 인스턴스 연결이 특정 사용자 에게만 표시 의미 있음을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-428">A shared instance means that the connection is visible to all users of a Web page, and a per-user instance means the connection is visible only to a specific user.</span></span>  
  
 <span data-ttu-id="583d4-429">일반적으로 페이지에는 연결이 추가 되는 방법은 연결 공유 되는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-429">In general, the way a connection is added to a page determines whether the connection is shared.</span></span> <span data-ttu-id="583d4-430">연결이 웹 페이지의 태그에 선언 된 경우 연결에서 공유 되 고 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> 속성 값이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-430">If the connection is declared in the markup of a Web page, then the connection is shared and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property value is `true`.</span></span> <span data-ttu-id="583d4-431">또한 웹 페이지에 공유 개인 설정 범위 연결이 추가 되 면 연결 공유 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-431">In addition, if the Web page is in shared personalization scope when a connection is added, the connection is also shared.</span></span> <span data-ttu-id="583d4-432">일반적으로 사용자를 사용 하는 경우는 `<asp:connectionszone>` 연결이 공유 되지 않은 연결을 페이지에 추가할 사용자 인터페이스 (UI) 사용자 개인 설정 범위에서 이므로 하며 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> 속성 값이 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-432">Typically, when a user uses the `<asp:connectionszone>` user interface (UI) to add a connection, the page is in user personalization scope, so the connection is not shared and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property value is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="583d4-433">다음 코드 예제에서는 프로그래밍 방식으로 사용 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-433">The following code example demonstrates programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property.</span></span>  
  
 <span data-ttu-id="583d4-434">코드 예제는 5 부:</span><span class="sxs-lookup"><span data-stu-id="583d4-434">The code example has five parts:</span></span>  
  
-   <span data-ttu-id="583d4-435">웹 파트를 변경할 수 있게 해 주는 사용자 정의 컨트롤을 페이지 모드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-435">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="583d4-436">소스 코드는 인터페이스 및 두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 역할 공급자와 소비자 연결을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-436">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="583d4-437">모든 컨트롤을 호스트 하 여 코드 예제를 실행 하는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-437">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="583d4-438">예제를 실행 하는 데 필요한 Web.config 파일에는 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-438">An entry in the Web.config file that is required to run the example.</span></span>  
  
-   <span data-ttu-id="583d4-439">예제 페이지를 실행 하는 방법 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-439">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="583d4-440">이 코드 예제에 첫 번째 부분은 사용자가 웹 페이지의 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-440">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="583d4-441">에 할당 되는 파일 이름을 지정.ascx 파일에 다음 소스 코드를 저장 합니다 `Src` 특성의는 `Register` 호스팅 웹 페이지의 위쪽에이 사용자 정의 컨트롤에 대 한 지시문을 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-441">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="583d4-442">이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 정보를 참조 하세요 [연습: 웹 파트 페이지에서 디스플레이 모드 변경](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-442">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsShared#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsShared#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="583d4-443">코드 예제의 두 번째 부분은 인터페이스 및 소비자 및 공급자 컨트롤에 대 한 소스 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-443">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="583d4-444">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-444">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="583d4-445">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-445">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="583d4-446">또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-446">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="583d4-447">이 코드 예제에서는 동적 컴파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-447">This code example uses dynamic compilation.</span></span> <span data-ttu-id="583d4-448">컴파일하는 방법을 보여 주는 연습을 참조 하세요 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-448">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_IsShared#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_IsShared#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="583d4-449">코드 예제에서는 세 번째 부분에는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-449">The third part of the code example is the Web page.</span></span> <span data-ttu-id="583d4-450">에 `Button2_Click` 확인 메서드를는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> 기존 연결의 속성 페이지에서 결과 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-450">In the `Button2_Click` method, it checks the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property of the existing connection and displays the result on the page.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsShared#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsShared#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="583d4-451">네 번째 부분 코드 예제에서는 공유 개인 설정 범위에서 페이지를 편집 하려면 예제를 실행 하는 사용자 계정에 필요한 Web.config 파일에서 항목을입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-451">The fourth part of the code example is an entry in the Web.config file that is required for the user account that will be running the example to be able to edit the page in shared personalization scope.</span></span> <span data-ttu-id="583d4-452">이 작업이 가능 하도록 해야 항목 내에서 Web.config 파일에는 `<system.web>` 다음과 같은 섹션에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-452">To enable this, you must have an entry in the Web.config file within the `<system.web>` section that looks like the following example.</span></span>  
  
```  
<webParts>  
  <personalization>  
    <authorization>  
      <allow users="UserAccount"  
             roles="admin"  
             verbs="enterSharedScope"/>  
    </authorization>            
  </personalization>  
</webParts>  
```  
  
 <span data-ttu-id="583d4-453">브라우저에서 페이지를 로드 한 후 사용 합니다 **디스플레이 모드** 페이지 연결 디스플레이 모드를 전환 하려면 드롭다운 목록 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-453">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect display mode.</span></span> <span data-ttu-id="583d4-454">클릭는 **WebPart 컨트롤 연결** 단추 연결을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-454">Click the **Connect WebPart Controls** button to form a connection.</span></span> <span data-ttu-id="583d4-455">를 클릭 합니다 **연결 세부 정보** 는 연결이 공유 되어 있는지 여부를 표시 하려면 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-455">Next, click the **Connection Details** button to display whether the connection is shared.</span></span> <span data-ttu-id="583d4-456">기본 사용자 개인 설정 범위에 있는 페이지를 사용 하 여 연결을 만든 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> 속성 값은 여야 `false` 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-456">If you created the connection with the page in the default user personalization scope, the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property value should be `false` for the connection.</span></span>  
  
 <span data-ttu-id="583d4-457">중의 동사 메뉴의 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 (제목 표시줄의 아래쪽 화살표로 표시 됨), 연결 동사를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-457">On the verbs menu of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (indicated by the downward arrow in the title bar), click the connect verb.</span></span> <span data-ttu-id="583d4-458">연결 UI에 표시 되 면 클릭 합니다 **연결 끊기** 단추는 연결을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-458">When the connection UI appears, click the **Disconnect** button to end the connection.</span></span> <span data-ttu-id="583d4-459">사용 합니다 **디스플레이 모드** 찾아보기 모드로 페이지를 반환 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-459">Use the **Display Mode** control to return the page to browse mode.</span></span>  
  
 <span data-ttu-id="583d4-460">에 **디스플레이 모드** 컨트롤을 선택 합니다 **공유** 옵션 페이지를 전환 하려면 개인 설정 범위를 공유 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-460">In the **Display Mode** control, select the **Shared** option to switch the page into shared personalization scope.</span></span> <span data-ttu-id="583d4-461">연결을 만들고 다시 클릭 하 여 위의 동일한 단계를 수행 합니다 **연결 세부 정보** 는 연결이 공유 되어 있는지 여부를 표시 하려면 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-461">Follow the same steps as those above to create a connection, and again click the **Connection Details** button to display whether the connection is shared.</span></span> <span data-ttu-id="583d4-462">이 경우 값을 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> 속성 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-462">In this case, the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property should be `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" />
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStatic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStatic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStatic : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="583d4-463">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> 개체가 웹 페이지의 태그에서 선언되었는지 아니면 프로그래밍 방식으로 만들어졌는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-463">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is declared in the markup of a Web page, or created programmatically.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="583d4-464">연결이 정적이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-464">
              <see langword="true" /> if the connection is static; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583d4-465">웹 파트 컨트롤 간 연결에는 정적 이거나 동적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-465">Connections between Web Parts controls can be either static or dynamic.</span></span> <span data-ttu-id="583d4-466">웹 페이지의 태그에 선언 된 정적 연결을 사용 하는 `<asp:WebPartConnection>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-466">A static connection is declared in the markup of a Web page, using an `<asp:WebPartConnection>` element.</span></span> <span data-ttu-id="583d4-467">동적 연결을 프로그래밍 방식으로 만들거나 정의한 사용자 인터페이스 (UI)를 통해 연결을 만드는 사용자는 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-467">Dynamic connections are created programmatically or when a user creates a connection through the user interface (UI) defined by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control.</span></span>  
  
 <span data-ttu-id="583d4-468">정적 연결은 웹 페이지의 모든 사용자에 게 제공 하는 공유 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-468">Static connections are shared objects, meaning they are available to all users of the Web page.</span></span> <span data-ttu-id="583d4-469">기본적으로 영구는 또한 이므로 같은 정적 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 영구적으로 삭제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-469">Also, they are essentially permanent because, like a static <xref:System.Web.UI.WebControls.WebParts.WebPart> control, they cannot be permanently deleted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="583d4-470">정적 연결 개체를 영구적으로 삭제할 수 있지만 영구적으로 연결이 끊어질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-470">While a static connection object cannot be permanently deleted, it can be permanently disconnected.</span></span> <span data-ttu-id="583d4-471">이 경우 연결이 끊어진된 개체는 서버에 있지만 최종 사용자는 페이지에 개체의 존재을 인식 하지 못합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-471">In this case, the disconnected object would exist on the server, but an end user would never be aware of the object's existence in a page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="583d4-472">다음 코드 예제에서는 프로그래밍 방식으로 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-472">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property.</span></span>  
  
 <span data-ttu-id="583d4-473">이 코드 예제는 세 부분으로 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-473">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="583d4-474">소스 코드는 인터페이스 및 두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 역할 공급자와 소비자 연결을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-474">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="583d4-475">웹 페이지 컨트롤을 호스트 및 코드 예제를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-475">A Web page to host the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="583d4-476">예제 페이지를 실행 하는 방법 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-476">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="583d4-477">코드 예제의 첫 번째 부분은 인터페이스 및 소비자 및 공급자 컨트롤에 대 한 소스 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-477">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="583d4-478">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-478">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="583d4-479">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-479">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="583d4-480">또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-480">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="583d4-481">이 코드 예제에서는 동적 컴파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-481">This code example uses dynamic compilation.</span></span> <span data-ttu-id="583d4-482">컴파일하는 방법을 보여 주는 연습을 참조 하세요 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-482">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_IsStatic#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_IsStatic#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="583d4-483">코드 예제의 두 번째 부분은 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-483">The second part of the code example is the Web page.</span></span> <span data-ttu-id="583d4-484">위쪽에를 `Register` 동적으로 컴파일된 두 개의 소스 코드를 가리키는 지시문 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-484">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="583d4-485">정적 연결 내에서 선언 된 `<StaticConnections>` 페이지의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-485">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="583d4-486">합니다 `Button1_Click` 메서드 액세스를 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> 연결 정적 인지 여부를 확인할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-486">The `Button1_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property to check whether the connection is static.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsStatic#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/CS/wpConnectIsStaticCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsStatic#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/VB/wpConnectIsStaticVB.aspx#1)]  
  
 <span data-ttu-id="583d4-487">브라우저에서 페이지를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-487">Load the page in a browser.</span></span> <span data-ttu-id="583d4-488">정적 연결을 이미 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-488">The static connection is already created.</span></span> <span data-ttu-id="583d4-489">공급자 컨트롤에서 일부 텍스트를 입력 하 고 소비자 컨트롤의 텍스트가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-489">Enter some text in the provider control, and note that the text is displayed in the consumer control.</span></span> <span data-ttu-id="583d4-490">클릭 합니다 **연결 세부 정보** 의 값을 표시 하려면 단추를 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-490">Click the **Connection Details** button to display the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ Provider { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="583d4-491">웹 파트 연결에서 공급자 역할을 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-491">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that acts as the provider in a Web Parts connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="583d4-492">데이터의 공급자 역할을 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-492">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that acts as the provider of data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583d4-493">모든 웹 파트 연결의 두 구성 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤-소비자 및 공급자-및 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> 속성 연결에서 공급자 컨트롤에 대 한 참조를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-493">Every Web Parts connection consists of two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls--a consumer and a provider--and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property returns a reference to the provider control in a connection.</span></span>  
  
 <span data-ttu-id="583d4-494">연결 (소비자 컨트롤)에서에 대응와 같은 공급자 컨트롤은 연결을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-494">Like its counterpart in a connection (the consumer control), the provider control is required to establish a connection.</span></span> <span data-ttu-id="583d4-495">프로그래밍 방식으로 또는 페이지 지 속성 형식을 선언 하 여 연결을 만들 수 있는지 여부를 연결에 대 한 공급자 역할을 하는 컨트롤을 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-495">Whether you create the connection programmatically, or by declaring it in page persistence format, you must specify a control to act as the provider for a connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="583d4-496">다음 코드 예제에는 사용 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-496">The following code example demonstrates use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property.</span></span>  
  
 <span data-ttu-id="583d4-497">이 코드 예제는 세 부분으로 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-497">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="583d4-498">소스 코드는 인터페이스 및 두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 역할 공급자와 소비자 연결을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-498">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="583d4-499">웹 페이지 컨트롤을 호스트 및 코드 예제를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-499">A Web page to host the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="583d4-500">예제 페이지를 실행 하는 방법 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-500">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="583d4-501">코드 예제의 첫 번째 부분은 인터페이스 및 소비자 및 공급자 컨트롤에 대 한 소스 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-501">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="583d4-502">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-502">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="583d4-503">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-503">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="583d4-504">또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-504">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="583d4-505">이 코드 예제에서는 동적 컴파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-505">This code example uses dynamic compilation.</span></span> <span data-ttu-id="583d4-506">컴파일하는 방법을 보여 주는 연습을 참조 하세요 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-506">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_Provider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_Provider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="583d4-507">코드 예제의 두 번째 부분은 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-507">The second part of the code example is the Web page.</span></span> <span data-ttu-id="583d4-508">위쪽에를 `Register` 동적으로 컴파일된 두 개의 소스 코드를 가리키는 지시문 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-508">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="583d4-509">정적 연결 내에서 선언 된 `<StaticConnections>` 페이지의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-509">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="583d4-510">되었는지 확인 합니다 `<asp:webpartconnection>` 요소는 `ProviderID` 특성에 할당 된 공급자 컨트롤의 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-510">Notice that in the `<asp:webpartconnection>` element, the `ProviderID` attribute has the ID of the provider control assigned to it.</span></span> <span data-ttu-id="583d4-511">이 정적 연결에 대 한 공급자를 식별 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-511">This is required to identify the provider for the static connection.</span></span> <span data-ttu-id="583d4-512">합니다 `Button1_Click` 메서드 액세스를 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> 속성 레이블로 해당 세부 정보 중 일부를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-512">The `Button1_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property and writes some of its details to a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Provider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/CS/wpConnectProviderCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_Provider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/VB/wpConnectProviderVB.aspx#1)]  
  
 <span data-ttu-id="583d4-513">브라우저에서 페이지를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-513">Load the page in a browser.</span></span> <span data-ttu-id="583d4-514">정적 연결을 이미 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-514">The static connection is already created.</span></span> <span data-ttu-id="583d4-515">공급자 컨트롤에서 일부 텍스트를 입력 하 고 소비자 컨트롤의 텍스트가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-515">Enter some text in the provider control, and note that the text is displayed in the consumer control.</span></span> <span data-ttu-id="583d4-516">클릭 합니다 **공급자 세부 정보** 를 통해 액세스 하는 속성 값의 일부를 표시 하려면 단추를 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-516">Click the **Provider Details** button to display some of the property values accessed through the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="583d4-517">
            <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" /> 속성 값의 길이가 0인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-517">The length of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" /> property value is zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" />
      </Docs>
    </Member>
    <Member MemberName="ProviderConnectionPoint">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ProviderConnectionPoint ProviderConnectionPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint ProviderConnectionPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderConnectionPoint As ProviderConnectionPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ ProviderConnectionPoint { System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderConnectionPoint : System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProviderConnectionPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="583d4-518">연결의 공급자 역할을 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 연결 지점으로 사용되는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-518">Gets the object that serves as a connection point for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a provider for a connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="583d4-519">연결에서 공급자 컨트롤과 관련된 <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-519">A <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> associated with the provider control in a connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583d4-520">두 연결을 만드는 데 필요한 단계 중 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 각 컨트롤에 대 한 연결점을 만드는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-520">One of the required steps for creating a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls is to create connection points for each control.</span></span> <span data-ttu-id="583d4-521">공급자 연결 지점의 공급자 역할을 하는 컨트롤에 연결 하는 방법에 대 한 정보를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-521">The provider connection point is an object that contains the information about how to connect to the control acting as a provider.</span></span> <span data-ttu-id="583d4-522">공급자의 소스 코드에서 메서드 중으로 식별 되어야 합니다는 `ConnectionProvider` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-522">In the provider's source code, one of the methods must be identified with the `ConnectionProvider` attribute.</span></span> <span data-ttu-id="583d4-523"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 즉 연결 제어 공급자로 메서드 및 메서드를 사용 하 여 사용자 인터페이스 (UI)에 대 한 표시 이름에 대 한 ID를 포함 하 여 특성에 대 한 세부 정보를 포함 하 고 어떤 유형의 인터페이스 인스턴스 메서드는 소비자에 게 반환할 수 있습니다 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-523">The <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> that is associated with a provider control contains details about the method and the attribute, including an ID for the method, a display name for use in the user interface (UI), and what type of interface instance the method can return to a consumer control.</span></span> <span data-ttu-id="583d4-524">이 공급자에 대 한 정보이 집합을 제공 하는 인터페이스의 형식과 연결을 형성 하는 것에 대 한 해당 메서드는 공급자 연결 지점 전체적으로 형성 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-524">This set of information about the provider, its method for forming connections, and the type of interface it provides, collectively forms a provider connection point.</span></span>  
  
 <span data-ttu-id="583d4-525">기본적으로 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 하나만 연결할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 번 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-525">By default, a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> can connect to only one <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object at a time.</span></span> <span data-ttu-id="583d4-526">소비자에는 가능한 소비자 연결 지점으로 식별 하는 여러 메서드가 있을 수 있지만 소비자 (따라서만 활성화할 수는 소비자 연결 지점 중 하나)만 소비자로 서 이상의 연결에 참여할 수 있습니다 번입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-526">A consumer could have multiple methods identified as possible consumer connection points, but a consumer can only participate in one connection as a consumer (hence, only one of its consumer connection points can be active) at a time.</span></span> <span data-ttu-id="583d4-527">반면에 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 개수에 관계 없이 연결할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 기본적으로는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-527">In contrast, a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> can connect to any number of <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects by default.</span></span> <span data-ttu-id="583d4-528">예를 들어 우편 번호를 제공 하는 공급자 컨트롤에 우편 번호를 날씨 데이터, 뉴스 등을 기준으로 데이터의 다양 한 종류를 만드는 우편 번호를 사용 하는 여러 소비자 컨트롤 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-528">For example, a provider control that provides a postal code could be connected to multiple consumer controls that use a postal code to create various kinds of data based on a postal code, such as weather data, news, and so on.</span></span> <span data-ttu-id="583d4-529">이 기본 동작을 재정의 하 여 변경할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-529">This default behavior can be changed by overriding the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A> property on the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="583d4-530">다음 코드 예제에서는 프로그래밍 방식으로 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-530">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property.</span></span>  
  
 <span data-ttu-id="583d4-531">예제에는 네 가지 부분이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-531">The example has four parts:</span></span>  
  
-   <span data-ttu-id="583d4-532">웹 파트를 변경할 수 있게 해 주는 사용자 정의 컨트롤을 페이지 모드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-532">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="583d4-533">소스 코드는 인터페이스 및 두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 역할 공급자와 소비자 연결을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-533">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="583d4-534">모든 컨트롤을 호스트 하 여 코드 예제를 실행 하는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-534">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="583d4-535">예제 페이지를 실행 하는 방법 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-535">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="583d4-536">이 코드 예제에 첫 번째 부분은 사용자가 웹 페이지의 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-536">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="583d4-537">에 할당 되는 파일 이름을 지정.ascx 파일에 다음 소스 코드를 저장 합니다 `Src` 특성의는 `Register` 호스팅 웹 페이지의 위쪽에이 사용자 정의 컨트롤에 대 한 지시문을 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-537">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="583d4-538">이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 정보를 참조 하세요 [연습: 웹 파트 페이지에서 디스플레이 모드 변경](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-538">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPoint#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPoint#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="583d4-539">코드 예제의 두 번째 부분은 두 개의 소스 코드 <xref:System.Web.UI.WebControls.WebParts.WebPart> 소비자 및 공급자를 연결 및 연결 지점에 사용 되는 인터페이스에 대 한 역할을 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-539">The second part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that serve as the consumer and the provider for the connection, and an interface used for the connection points.</span></span> <span data-ttu-id="583d4-540">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-540">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="583d4-541">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-541">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="583d4-542">또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-542">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="583d4-543">이 코드 예제에서는 동적 컴파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-543">This code example uses dynamic compilation.</span></span> <span data-ttu-id="583d4-544">컴파일하는 방법을 보여 주는 연습을 참조 하세요 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-544">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ProviderConnectionPoint#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ProviderConnectionPoint#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="583d4-545">코드 예제에서는 세 번째 부분은 컨트롤을 호스트 하 고 사용 방법을 설명 하는 웹 페이지에 대 한 코드는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-545">The third part of the code example is the code for the Web page that hosts the controls and demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property.</span></span> <span data-ttu-id="583d4-546">에 `Button1_Click` 메서드를 연결 하는 데 필요한 모든 개체는 생성을 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-546">In the `Button1_Click` method, all the objects required to form a connection are created, including a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object.</span></span> <span data-ttu-id="583d4-547">호출을 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-547">Note the call to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="583d4-548">다양 한 만들어진된 개체를 모두에 전달 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> 메서드 연결을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-548">The various created objects are all passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method to create the connection.</span></span> <span data-ttu-id="583d4-549">여기서는 ID 속성이 필요 하지 않습니다, 연결 동적 이므로 및 `Button2_Click` 컨트롤 연결 ID를 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-549">In the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property and displays some details of the connection point.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPoint#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPoint#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="583d4-550">사용 하 여 브라우저에서 페이지를 로드 한 후에 **디스플레이 모드** 드롭다운 목록 컨트롤을 페이지 연결 모드를 전환 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-550">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="583d4-551">동사 메뉴 (제목 표시줄의 아래쪽 화살표로 표시 됨) 중 하나를 클릭 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤과 연결 동사를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-551">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="583d4-552">에 ** 메서드를 코드의 값에 액세스를 ** 속성에 레이블을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-552">Use the **Connect WebPart Controls** button, or the provided connection UI, to create a connection between the two controls.</span></span> <span data-ttu-id="583d4-553">클릭 합니다 **연결 세부 정보** 에 액세스 하는 코드를 실행 하는 단추는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-553">Click the **ConnectionPoint Details** button to run the code that demonstrates the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="ProviderConnectionPointID">
      <MemberSignature Language="C#" Value="public string ProviderConnectionPointID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderConnectionPointID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderConnectionPointID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderConnectionPointID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderConnectionPointID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("default")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="583d4-554">연결에서 공급자 연결 지점 역할을 하는 개체의 ID를 참조하는 속성 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-554">Gets or sets the property value on a connection that references the ID of the object serving as the provider connection point for that connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="583d4-555">공급자 연결 지점 개체의 ID가 들어 있는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-555">A string that contains the ID for a provider connection point object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583d4-556">웹 페이지의 태그에 선언 된 정적 연결의 경우 개발자는 공급자 연결 지점에 사용할 연결 값을 할당 하 여 지정할 수는 `ProviderConnectionPointID` 특성을 `<asp:webpartconnection>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-556">For a static connection declared in the markup of a Web page, developers can specify which provider connection point will be used for the connection by assigning a value to the `ProviderConnectionPointID` attribute on the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="583d4-557">연결에서 공급자 컨트롤과 소비자 컨트롤은 통신 및 공용 인터페이스를 통해 데이터를 교환할 수 있습니다이 상태의 연결이 면 또는 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-557">If a value is not assigned to the attribute, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> property value is used.</span></span>  
  
 <span data-ttu-id="583d4-558">표준 찾아보기 모드로 설정 된 연결을 포함 하는 렌더링된 된 페이지를 사용자가 볼 때 연결이 (하지 않는 경우 페이지를 로드할 때 일부 충돌 또는 기타 문제로 인해 활성화 하지 못했습니다) 일반적으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-558">When you create dynamic (programmatic) connections, normally you should not set the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property.</span></span> <span data-ttu-id="583d4-559">간단히 호출할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 제어, 공급자 및 공급자 연결 지점 (다른 필요한 매개 변수와 함께), 개체를 전달 및 해당 메서드는 공급자의 연결에 사용할 올바른 ID 확인 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-559">You can simply call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, passing to it the provider and provider connection point objects (along with the other required parameters), and that method determines the correct ID to use for the provider's connection point.</span></span> <span data-ttu-id="583d4-560">연결은 직후 활성화는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> 이벤트에는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> 컨트롤 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-560">Similarly, when you disconnect, you can call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method without needing to specify the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="583d4-561">지정 하는 경우에 공급자의 연결점의 ID를 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 또는 공급자로 기타 서버 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-561">The ID of a provider's connection point can be determined when you designate a <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control as a provider.</span></span> <span data-ttu-id="583d4-562">공급자는 소비자에 게 데이터를 포함 하는 인터페이스의 인스턴스를 제공 하는 콜백 메서드를 식별 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-562">You must identify a callback method in the provider that serves an instance of an interface containing data to a consumer.</span></span> <span data-ttu-id="583d4-563">예를 들어는 두 개의 연결 간의 충돌 일종의 `ConnectionProvider` 컨트롤에 충돌 하지 않도록 하는 연결 중 하나를 활성화 하지 않을 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-563">To identify the method, mark it with the `ConnectionProvider` code attribute.</span></span> <span data-ttu-id="583d4-564">이 특성을 추가 하는 경우 공급자의 ID로 사용 되는 선택적 문자열 값 매개 변수를 추가할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-564">When you add this attribute, you can add an optional string value parameter that serves as an ID for the provider's <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object.</span></span> <span data-ttu-id="583d4-565">내는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> 요소는 4 명의 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-565">If you supply a value for the optional ID parameter, that value becomes the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property for the connection.</span></span> <span data-ttu-id="583d4-566">ID 값을 지정 하지 않으면 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤 개체를 만들 때 기본 ID를 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-566">If you do not supply an ID value, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control assigns a default ID when the object is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="583d4-567">연결 어느 시점에 활성화 되는 방법을 보여 줍니다이 렌더링 되는 활성 상태를 유지 페이지 뒤에</span><span class="sxs-lookup"><span data-stu-id="583d4-567">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property.</span></span>  
  
 <span data-ttu-id="583d4-568">예제에는 네 가지 부분이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-568">The example has four parts:</span></span>  
  
-   <span data-ttu-id="583d4-569">웹 파트를 변경할 수 있게 해 주는 사용자 정의 컨트롤을 페이지 모드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-569">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="583d4-570">소스 코드는 인터페이스 및 두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 역할 공급자와 소비자 연결을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-570">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="583d4-571">모든 컨트롤을 호스트 하 여 코드 예제를 실행 하는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-571">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="583d4-572">예제 페이지를 실행 하는 방법 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-572">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="583d4-573">이 코드 예제에 첫 번째 부분은 사용자가 웹 페이지의 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-573">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="583d4-574">에 할당 되는 파일 이름을 지정.ascx 파일에 다음 소스 코드를 저장 합니다 `Src` 특성의는 `Register` 호스팅 웹 페이지의 위쪽에이 사용자 정의 컨트롤에 대 한 지시문을 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-574">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="583d4-575">이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 정보를 참조 하세요 [연습: 웹 파트 페이지에서 디스플레이 모드 변경](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-575">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPointID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPointID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="583d4-576">코드 예제의 두 번째 부분은 인터페이스 및 소비자 및 공급자 컨트롤에 대 한 소스 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-576">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="583d4-577">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-577">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="583d4-578">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-578">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="583d4-579">또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-579">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="583d4-580">이 코드 예제에서는 동적 컴파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-580">This code example uses dynamic compilation.</span></span> <span data-ttu-id="583d4-581">컴파일하는 방법을 보여 주는 연습을 참조 하세요 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-581">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ProviderConnectionPointID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ProviderConnectionPointID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="583d4-582">코드 예제에서는 세 번째 부분에는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-582">The third part of the code example is the Web page.</span></span> <span data-ttu-id="583d4-583">연결 페이지 태그에서 선언 되를 사용 하는 `<StaticConnections>` 및 `<asp:WebPartsConnection>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-583">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="583d4-584">연결 선언 포함 필수 `ProviderConnectionPointID` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-584">The connection declaration includes the required `ProviderConnectionPointID` attribute.</span></span> <span data-ttu-id="583d4-585">에 대 한 연결 만들기에 대 한 두 번째 방법은 나타납니다는 `Button1_Click` 메서드 코드를 새 연결을 만드는 경우 연결 지점 (및 ID)를 사용 하 여 정의 된 공급자 컨트롤의 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-585">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point (and the ID) defined in the provider control.</span></span> <span data-ttu-id="583d4-586">정적 연결 이미 만들어지고 연결 페이지 및 컨트롤 수명 주기의 여러 시점에서 활성 했는지 여부를 보여 주는 레이블로 이미 기록 된 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-586">Then, in the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPointID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPointID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="583d4-587">브라우저에서 페이지를 로드 한 후 페이지에 선언 된 정적 연결으로 인해 연결이 이미 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-587">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="583d4-588">공급자 컨트롤에서 일부 텍스트를 입력 하 고 연결으로 인해 소비자에서 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-588">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="583d4-589">다음으로, 컨트롤을 연결을 끊습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-589">Next, disconnect the controls.</span></span> <span data-ttu-id="583d4-590">클릭 합니다 **연결 세부 정보** 연결은 현재 시점에서 아니지만 연결 될 때마다 후 다시 활성화 되 고 단추를  이벤트 및는 여전히 활성 상태인 (남아 있도록) 후 합니다  페이지의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-590">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="583d4-591">동사 메뉴 (제목 표시줄의 아래쪽 화살표로 표시 됨) 중 하나를 클릭 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤과 연결 동사를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-591">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="583d4-592">나타내는 값을 가져옵니다 여부를 ** 개체의 모든 사용자 또는 현재 사용자에만 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-592">Click the **Disconnect** button.</span></span> <span data-ttu-id="583d4-593">연결; 공유 하는 경우 그렇지 않으면 **합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-593">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="583d4-594">개별와 마찬가지로 ** 컨트롤을 ** 개체 공유 또는 사용자 당 인스턴스 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-594">Click the **ConnectionPoint Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property value.</span></span> <span data-ttu-id="583d4-595">공유 인스턴스 연결이 웹 페이지의 모든 사용자에 게 표시 사용자별 인스턴스 연결이 특정 사용자 에게만 표시 의미 있음을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-595">The value is written out in a label below the controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      </Docs>
    </Member>
    <Member MemberName="ProviderID">
      <MemberSignature Language="C#" Value="public string ProviderID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="583d4-596">연결에서 공급자 역할을 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 ID를 참조하는 속성 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-596">Gets or sets the property value on a connection that references the ID of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a provider for that connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="583d4-597">공급자 컨트롤의 ID가 들어 있는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-597">A string that contains the ID of the provider control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583d4-598">합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> 간 연결을 만들 때 속성 값은 필수 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-598">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property value is required when you create a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="583d4-599">일반적으로 사용자를 사용 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 연결이 공유 되지 않은 연결을 페이지에 추가할 사용자 인터페이스 (UI) 사용자 개인 설정 범위에서 이므로 하며  속성 값이 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-599">If a value is not assigned to the property, an exception is thrown when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control attempts to activate the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="583d4-600">연결 어느 시점에 활성화 되는 방법을 보여 줍니다이 렌더링 되는 활성 상태를 유지 페이지 뒤에</span><span class="sxs-lookup"><span data-stu-id="583d4-600">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property.</span></span>  
  
 <span data-ttu-id="583d4-601">예제에는 네 가지 부분이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-601">The example has four parts:</span></span>  
  
-   <span data-ttu-id="583d4-602">웹 파트를 변경할 수 있게 해 주는 사용자 정의 컨트롤을 페이지 모드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-602">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="583d4-603">소스 코드는 인터페이스 및 두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 역할 공급자와 소비자 연결을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-603">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="583d4-604">모든 컨트롤을 호스트 하 여 코드 예제를 실행 하는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-604">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="583d4-605">예제 페이지를 실행 하는 방법 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-605">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="583d4-606">이 코드 예제에 첫 번째 부분은 사용자가 웹 페이지의 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-606">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="583d4-607">에 할당 되는 파일 이름을 지정.ascx 파일에 다음 소스 코드를 저장 합니다 `Src` 특성의는 `Register` 호스팅 웹 페이지의 위쪽에이 사용자 정의 컨트롤에 대 한 지시문을 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-607">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="583d4-608">이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 정보를 참조 하세요 [연습: 웹 파트 페이지에서 디스플레이 모드 변경](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-608">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="583d4-609">코드 예제의 두 번째 부분은 인터페이스 및 소비자 및 공급자 컨트롤에 대 한 소스 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-609">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="583d4-610">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-610">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="583d4-611">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-611">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="583d4-612">또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-612">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="583d4-613">이 코드 예제에서는 동적 컴파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-613">This code example uses dynamic compilation.</span></span> <span data-ttu-id="583d4-614">컴파일하는 방법을 보여 주는 연습을 참조 하세요 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-614">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ProviderID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ProviderID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="583d4-615">코드 예제에서는 세 번째 부분에는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-615">The third part of the code example is the Web page.</span></span> <span data-ttu-id="583d4-616">연결 페이지 태그에서 선언 되를 사용 하는 `<StaticConnections>` 및 `<asp:WebPartsConnection>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-616">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="583d4-617">연결 선언 포함 필수 `ProviderID` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-617">The connection declaration includes the required `ProviderID` attribute.</span></span> <span data-ttu-id="583d4-618">에 대 한 연결 만들기에 대 한 두 번째 방법은 나타납니다는 `Button1_Click` 코드 소비자 컨트롤에 정의 된 연결 지점을 사용 하 여 새 연결을 만드는 메서드.</span><span class="sxs-lookup"><span data-stu-id="583d4-618">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="583d4-619">그런 다음 합니다 `Button2_Click` 메서드를 코드의 값에 액세스를 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> 속성에 레이블을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-619">Then, in the `Button2_Click` method, the code accesses the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property and displays it in a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="583d4-620">브라우저에서 페이지를 로드 한 후 페이지에 선언 된 정적 연결으로 인해 연결이 이미 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-620">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="583d4-621">공급자 컨트롤에서 일부 텍스트를 입력 하 고 연결으로 인해 소비자에서 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-621">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="583d4-622">다음으로, 컨트롤을 연결을 끊습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-622">Next, disconnect the controls.</span></span> <span data-ttu-id="583d4-623">이렇게 하려면 사용 합니다 **디스플레이 모드** 페이지 연결 모드를 전환 하려면 드롭다운 목록 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-623">To do that, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="583d4-624">동사 메뉴 (제목 표시줄의 아래쪽 화살표로 표시 됨) 중 하나를 클릭 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤과 연결 동사를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-624">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="583d4-625">클릭 합니다 **연결 끊기** 단추 및 컨트롤의 연결이 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-625">Click the **Disconnect** button, and the controls are disconnected.</span></span> <span data-ttu-id="583d4-626">다음을 사용 하 여는 **WebPart 컨트롤 연결** 단추 두 컨트롤 간의 연결을 다시 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-626">Next, use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="583d4-627">클릭 합니다 **소비자 세부 정보** 에 액세스 하는 코드를 실행 하는 단추는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-627">Click the **Consumer Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="webPartConnection.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="583d4-628">상속된 <see cref="M:System.Object.ToString" /> 메서드를 재정의하고 연결 개체의 약식 형식 이름을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-628">Overrides the inherited <see cref="M:System.Object.ToString" /> method and returns a short type name for the connection object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="583d4-629">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />의 정규화되지 않은 약식 형식 이름이 들어 있는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-629">A string that contains the short (unqualified) type name of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583d4-630">이 메서드는 컨트롤 디자이너가 편의 위해 주로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-630">This method is used mostly for convenience by control designers.</span></span> <span data-ttu-id="583d4-631">짧은 형식 이름, 정규화 된 형식 이름 대신 사용 하 여 연결 개체 디자인 뷰에서 표시 하는 방법을 향상 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-631">It improves how connection objects appear in Design view by using the shorter type name, as opposed to a fully qualified type name.</span></span> <span data-ttu-id="583d4-632">그러나 메서드는 연결 개체의 형식 이름을 확인 하려는 코드의 임의 지점에서 나 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-632">However, the method can be called at any point in your code where you want to know the type name of a connection object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="583d4-633">다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> 의 약식 형식 이름을 반환 하는 메서드를 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 개체.</span><span class="sxs-lookup"><span data-stu-id="583d4-633">The following code example demonstrates how to call the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> method to return the short type name of a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="583d4-634">이 코드 예제는 세 부분으로 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-634">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="583d4-635">소스 코드는 인터페이스 및 두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 역할 공급자와 소비자 연결을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-635">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="583d4-636">웹 페이지 컨트롤을 호스트 및 코드 예제를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-636">A Web page to host the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="583d4-637">예제 페이지를 실행 하는 방법 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-637">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="583d4-638">코드 예제의 첫 번째 부분은 인터페이스 및 소비자 및 공급자 컨트롤에 대 한 소스 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-638">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="583d4-639">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-639">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="583d4-640">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-640">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="583d4-641">또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-641">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="583d4-642">이 코드 예제에서는 동적 컴파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-642">This code example uses dynamic compilation.</span></span> <span data-ttu-id="583d4-643">컴파일하는 방법을 보여 주는 연습을 참조 하세요 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-643">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ToString#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ToString#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="583d4-644">코드 예제의 두 번째 부분은 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-644">The second part of the code example is the Web page.</span></span> <span data-ttu-id="583d4-645">위쪽에를 `Register` 동적으로 컴파일된 두 개의 소스 코드를 가리키는 지시문 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-645">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="583d4-646">정적 연결 내에서 선언 된 `<StaticConnections>` 페이지의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-646">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="583d4-647">합니다 `Button1_Click` 메서드 호출을 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> 레이블로 연결의 형식 이름을 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-647">The `Button1_Click` method calls the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> method to write the type name of the connection to a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ToString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/CS/wpConnectToStringCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ToString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/VB/wpConnectToStringVB.aspx#1)]  
  
 <span data-ttu-id="583d4-648">브라우저에서 페이지를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-648">Load the page in a browser.</span></span> <span data-ttu-id="583d4-649">정적 연결을 이미 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-649">The static connection is already created.</span></span> <span data-ttu-id="583d4-650">공급자 컨트롤에서 일부 텍스트를 입력 하 고 소비자 컨트롤의 텍스트가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-650">Enter some text in the provider control, and note that the text is displayed in the consumer control.</span></span> <span data-ttu-id="583d4-651">클릭 합니다 **연결 세부 정보** 를 실행 하려면 단추를 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="583d4-651">Click the **Connection Details** button to execute the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Transformer">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartTransformer Transformer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartTransformer Transformer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transformer As WebPartTransformer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartTransformer ^ Transformer { System::Web::UI::WebControls::WebParts::WebPartTransformer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transformer : System.Web.UI.WebControls.WebParts.WebPartTransformer" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartTransformer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="583d4-652">웹 파트 연결에서 데이터를 변환하지 않으면 호환되지 않는 두 연결 지점 간에 데이터를 변환하는 데 사용되는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-652">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> object that is used to transform data between two otherwise incompatible connection points in a Web Parts connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="583d4-653">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-653">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />.</span>
          </span>
          <span data-ttu-id="583d4-654">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-654">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583d4-655">웹 파트 연결에서 두 가지 연결에서 공급자 컨트롤과 소비자 컨트롤 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-655">In a Web Parts connection, there are two ways in which the provider and consumer controls in the connection can connect.</span></span> <span data-ttu-id="583d4-656">각각을 통해 직접 연결할 수 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 개체와 두 컨트롤에서 인식 하는 인터페이스 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-656">They can connect directly, through their respective <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects and an interface type that is understood by both controls.</span></span> <span data-ttu-id="583d4-657">호환 되지 연결할 수 없습니다를 직접 사용 하 여 또는 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 공급자 로부터 인터페이스 인스턴스는 소비자가 인식할 수 있는 형식으로 변환 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-657">Or, if they are incompatible, they can connect indirectly, using a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object that transforms an interface instance from a provider into a type understood by a consumer.</span></span>  
  
 <span data-ttu-id="583d4-658">변환기는 연결의 일부로 필요한 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A> 속성에 대 한 참조를 제공 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-658">When a transformer is needed as part of a connection, the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A> property provides a reference to the <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object.</span></span> <span data-ttu-id="583d4-659">내에서 사용자 지정 변환기 (또는 웹 파트 컨트롤 집합을 사용 하 여 제공 하는 변환기 중 하나)에 대 한 태그를 추가 하 여 웹 페이지의 태그에서 선언적으로 연결에 대 한 변환기를 추가할 수 있습니다는 `<asp:WebPartConnection>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-659">You can add a transformer for a connection declaratively in the markup of a Web page, by adding a tag for a custom transformer (or one of the transformers provided with the Web Parts control set) within the `<asp:WebPartConnection>` element.</span></span> <span data-ttu-id="583d4-660">추가할 수도 있습니다 변환기를 프로그래밍 방식으로 코드에서 해당 인스턴스를 만들고 호출을 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29> 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤 다른 필요한 매개 변수와 함께 변환기 개체를 전달 하 여 연결을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-660">You can also add a transformer programmatically, creating an instance of it in your code, and calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control to create the connection, passing to it the transformer object along with the other required parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Docs>
    </Member>
    <Member MemberName="Transformers">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartTransformerCollection Transformers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartTransformerCollection Transformers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transformers As WebPartTransformerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartTransformerCollection ^ Transformers { System::Web::UI::WebControls::WebParts::WebPartTransformerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transformers : System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartTransformerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="583d4-661">웹 파트 컨트롤 집합에서 내부적으로 사용되는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> 개체의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-661">Gets a collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects used internally by the Web Parts control set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="583d4-662">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" /> 개체를 포함하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="583d4-662">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" /> containing <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583d4-663"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A> 되지 속성 사용에 대 한 개발자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-663">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A> property is never intended for use by developers.</span></span> <span data-ttu-id="583d4-664">개발자는 연결과 관련 된 변환기에 액세스 하려면 항상 사용할지는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-664">To access the transformer associated with a connection, developers should always use the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A> property.</span></span>  
  
 <span data-ttu-id="583d4-665"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A> 속성은 페이지 개발자가 내 변환기 요소를 선언할 수 있도록 설정 하는 웹 파트 컨트롤에서 내부적으로 사용 합니다 `<asp:webpartconnection>` 웹 페이지의 태그에는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="583d4-665">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A> property is used internally by the Web Parts control set to enable page developers to declare transformer elements within the `<asp:webpartconnection>` element in the markup of a Web page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer" />
      </Docs>
    </Member>
  </Members>
</Type>