<Type Name="CatalogPartCollection" FullName="System.Web.UI.WebControls.WebParts.CatalogPartCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f9af9e5c3c599dc7361a00f5a361c951105bbaa" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36386192" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CatalogPartCollection : System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CatalogPartCollection extends System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CatalogPartCollection&#xA;Inherits ReadOnlyCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogPartCollection sealed : System::Collections::ReadOnlyCollectionBase" />
  <TypeSignature Language="F#" Value="type CatalogPartCollection = class&#xA;    inherit ReadOnlyCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ReadOnlyCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0e731-101">최종 사용자가 웹 페이지에 추가할 수 있는 웹 서버 컨트롤의 카탈로그를 제공하는 데 사용되는 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 컬렉션을 포함합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0e731-101">Contains a collection of <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls used to provide catalogs of Web server controls that end users can add to a Web page.</span>
      </span>
      <span data-ttu-id="0e731-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0e731-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e731-103"><xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스는 읽기 전용 컬렉션의 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 일반적으로 사용 되는 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 의 집합을 추적 하는 영역 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 영역에 포함 된 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-103">The <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class is a read-only collection of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, typically used by a <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone to track the set of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls contained by the zone.</span></span>  
  
 <span data-ttu-id="0e731-104">영역에서는 새 웹 파트 페이지 카탈로그 모드로 들어가면 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 구성 된 개체는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-104">When a Web Parts page enters catalog mode, the zone creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object consisting of the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls.</span></span> <span data-ttu-id="0e731-105">각 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤 컬렉션에는 0 개 이상의 웹 서버 컨트롤을 사용 가능한 서버 컨트롤의 카탈로그의 형태로 표시 되는에 대 한 참조가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-105">Each <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control in the collection can contain references to zero or more Web server controls, which are displayed in the form of a catalog of available server controls.</span></span>  
  
 <span data-ttu-id="0e731-106">만들 수는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 집합에 대규모 작업을 수행 해야 하는 예를 들어 경우 사용자는 프로그래밍 방식으로 용도 대 한 컨트롤 컬렉션 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-106">You can create a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> collection of controls for your own programmatic use if, for example, you need to perform some mass operation on a set of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls.</span></span> <span data-ttu-id="0e731-107">경우에는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체는 읽기 전용, 컬렉션에서 참조 하는 내부 컨트롤을 프로그래밍 방식으로 변경을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-107">Even though the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object is read-only, you can make programmatic changes to the underlying controls referenced in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e731-108">다음 코드 예제에는 몇 가지 사용 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-108">The following code example demonstrates several uses of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class.</span></span> <span data-ttu-id="0e731-109">이 코드 예제를 네 부분으로 이루어져 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-109">There are four parts to this code example:</span></span>  
  
-   <span data-ttu-id="0e731-110">웹 파트 페이지에서 디스플레이 모드를 변경할 수 있게 해 주는 사용자 정의 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-110">A user control that enables you to change display modes on a Web Parts page.</span></span>  
  
-   <span data-ttu-id="0e731-111">사용자 지정에 대 한 클래스 <xref:System.Web.UI.WebControls.WebParts.WebPart> 라는 컨트롤 `TextDisplayWebPart`, 웹 페이지에서 참조 하 고 중 하나에 포함 된 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-111">A class for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`, which is referenced in the Web page and is contained in one of the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls.</span></span>  
  
-   <span data-ttu-id="0e731-112">참조 하는 웹 페이지는 `TextDisplayWebPart` 제어 하 고, 포함는 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 컨트롤의 두 개와 함께 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 웹 파트 컨트롤 있는 영역에서 선언 된 설정에서 제어 하 고 만들고 조작 하는 이벤트 기반 코드를 포함 한 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-112">A Web page that references the `TextDisplayWebPart` control, contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control with two of the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls from the Web Parts control set declared in the zone, and contains event-driven code to create and manipulate a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object.</span></span>  
  
-   <span data-ttu-id="0e731-113">브라우저에 로드할 때 코드 예제에서는 작동 하는 방법 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-113">An explanation of how the code example works when you load it in a browser.</span></span>  
  
 <span data-ttu-id="0e731-114">코드 예제의 첫 번째 부분에 사용자 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-114">The first part of the code example is the user control.</span></span> <span data-ttu-id="0e731-115">사용자 정의 컨트롤에 대 한 소스 코드는 다른 항목에서에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-115">The source code for the user control comes from another topic.</span></span> <span data-ttu-id="0e731-116">실행 되도록이 코드 예제에서는.ascx 파일에서 사용자 정의 컨트롤을 가져올 해야는 [연습: 웹 파트 페이지의 디스플레이 모드를 변경](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0) 항목과이 코드 예제에서.aspx 페이지와 같은 폴더에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-116">For this code example to work, you need to obtain the .ascx file for the user control from the [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0) topic, and place the file in the same folder as the .aspx page in this code example.</span></span>  
  
 <span data-ttu-id="0e731-117">코드 예제에서는 두 번째 부분은 `TextDisplayWebPart` 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-117">The second part of the code example is the `TextDisplayWebPart` control.</span></span> <span data-ttu-id="0e731-118">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-118">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="0e731-119">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-119">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="0e731-120">또는 여기서 것 동적으로 컴파일되는 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-120">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="0e731-121">두 컴파일 방법을 보여 주는 연습을 참조 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-121">For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span> <span data-ttu-id="0e731-122">컨트롤에 라는 속성이 `ContentText`;이 속성은 사용자가 텍스트 상자에 입력 값을 보유 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-122">Note that the control has a property named `ContentText`; this property holds the value that the user enters in the text box.</span></span>  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/textdisplaywebpart.vb#3)]  
  
 <span data-ttu-id="0e731-123">코드 예제에서는 세 번째 부분에는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-123">The third part of the code example is the Web page.</span></span> <span data-ttu-id="0e731-124">에 `<asp:catalogzone>` 페이지에 대 한 요소에는 두에 대 한 선언이 포함 되어 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-124">Notice that the `<asp:catalogzone>` element for the page contains declarations for two <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls.</span></span> <span data-ttu-id="0e731-125">이러한 컨트롤은 사용자 지정의 일부가 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 때 만들어지는 개체는 `Button1_Click` 메서드가 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-125">These controls become part of a custom <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object that is created when the `Button1_Click` method executes.</span></span> <span data-ttu-id="0e731-126"><xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 컨트롤 런타임 시 사용자가 이전에 종료 된 스 웹 서버 컨트롤을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-126">The <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control contains Web server controls that have been previously closed by a user at run time.</span></span> <span data-ttu-id="0e731-127">컨트롤에 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 컨트롤을 페이지에 다시 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-127">Controls in the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control can be added back to a page.</span></span> <span data-ttu-id="0e731-128"><xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 사용자 지정의 선언이 포함 `TextDisplayWebPart` 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-128">The <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control contains a declaration of the custom `TextDisplayWebPart` control.</span></span> <span data-ttu-id="0e731-129">페이지 카탈로그 모드일 때 사용자를 추가할 수는 `TextDisplayWebPart` 표준 찾아보기 모드에서 사용할 수 있도록 컨트롤을 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-129">When the page is in catalog mode, a user can add the `TextDisplayWebPart` control to the page so that it can be used in normal browse mode.</span></span>  
  
 [!code-aspx-csharp[WebParts_CatalogPartCollection_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#1)]
 [!code-aspx-vb[WebParts_CatalogPartCollection_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#1)]  
  
 <span data-ttu-id="0e731-130">브라우저에서 페이지를 로드할 때를 전환할 수 있습니다 페이지 카탈로그 모드로 선택 하 여 **카탈로그** 에 **디스플레이 모드** 드롭 다운 목록 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-130">When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control.</span></span> <span data-ttu-id="0e731-131">사용자 지정을 추가할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 옆에 있는 확인란을 선택 하 고 클릭 하 여 페이지 **추가**합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-131">You can add the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page by selecting the check box next to it and clicking **Add**.</span></span> <span data-ttu-id="0e731-132">클릭 **닫기** 페이지 찾아보기 모드를 되돌립니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-132">Click **Close** to return the page to browse mode.</span></span> <span data-ttu-id="0e731-133">컨트롤에 방금 추가한 동사 메뉴 (제목 표시줄에 나타나는 아래쪽 화살표)를 클릭 한 다음 클릭 하는 경우 **닫기**, 컨트롤은 페이지에서 제거 하 고에 추가 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-133">On the control you just added, if you click the verbs menu (the down arrow that appears in the title bar) and then click **Close**, the control is removed from the page and added to the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control.</span></span> <span data-ttu-id="0e731-134">페이지 카탈로그 모드로로 돌아가서는 **페이지 카탈로그** 의 내용을 보려면 링크를는 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-134">Return the page to catalog mode, and click the **Page Catalog** link to view the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control.</span></span> <span data-ttu-id="0e731-135">이제 닫은 컨트롤 있습니다 나타나는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-135">Notice that the control you closed now appears there.</span></span> <span data-ttu-id="0e731-136">클릭 하 고 **표시 CatalogPart 속성** 액세스 단추는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체 및 포함 된의 특정 속성을 표시 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-136">Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0e731-137">
            <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-137">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e731-138"><xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 포함 된 영역 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 제어는 일반적으로 컨트롤을 만듭니다는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체를 통해는 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e731-138">The <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone that contains <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls is typically the control that creates a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object, through the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> method.</span></span> <span data-ttu-id="0e731-139">그러나 만들 수도 있습니다 직접 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 다른 프로그래밍 방식으로 용도 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-139">However, you can also create your own <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object for other programmatic purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e731-140">
            <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 클래스의 비어 있는 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-140">Initializes a new, empty instance of the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e731-141"><xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 생성자의 빈 인스턴스를 초기화 합니다.는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-141">The <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> constructor initializes an empty instance of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class.</span></span> <span data-ttu-id="0e731-142">이 생성자의 오버이 로드에서 내부적으로 사용 되는 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 클래스에 해당 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> 빈 컬렉션 개체를 만드는 메서드를 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-142">This overload of the constructor is used internally by the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class in its <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> method to create an empty collection object.</span></span> <span data-ttu-id="0e731-143">영역에는 다음의 모든 인스턴스 만듭니다는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤 자식 영역 서식 파일에서 선언 하 고 컬렉션의 내부 메서드를 사용 하 여 이러한 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-143">The zone then creates instances of all the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls declared in the child zone template, and uses an internal method of the collection to add them.</span></span>  
  
 <span data-ttu-id="0e731-144">이 오버 로드를 사용할 수 없습니다는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 의 새 인스턴스를 만드는 생성자는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 추가 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 에 컨트롤을 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-144">You cannot use this overload of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> constructor to create a new instance of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> and add <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls to it.</span></span> <span data-ttu-id="0e731-145">에 대 한 다른 오버 로드 중 하나를 사용 해야 합니다는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 생성자 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-145">You must use one of the other overloads for the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> constructor instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection (System.Collections.ICollection catalogParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection catalogParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalogParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection(System::Collections::ICollection ^ catalogParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.CatalogPartCollection : System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="new System.Web.UI.WebControls.WebParts.CatalogPartCollection catalogParts" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalogParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="catalogParts">
          <span data-ttu-id="0e731-146">
            <see cref="T:System.Collections.ICollection" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-146">An <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e731-147">
            <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 컨트롤의 <see cref="T:System.Collections.ICollection" /> 컬렉션을 전달하여 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-147">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> class by passing in an <see cref="T:System.Collections.ICollection" /> collection of <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e731-148"><xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 생성자의 인스턴스를 초기화 합니다.는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스 및 컬렉션을 전달 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-148">The <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> constructor initializes an instance of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class and passes in a collection of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls.</span></span> <span data-ttu-id="0e731-149">이 한 오버 로드는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 새 만드는 데 사용할 수 있는 생성자 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체를 추가 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 에 컨트롤을 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-149">This is one overload of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> constructor that you can use to create a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and add <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls to it.</span></span>  
  
 <span data-ttu-id="0e731-150">하지만 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 생성자가 만든 인스턴스는 읽기 전용, 개별에 액세스할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컬렉션에 프로그래밍 방식으로 제어 하 고 해당 속성 및 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-150">Although the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> instance created by the constructor is read-only, you can still access the individual <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the collection programmatically and call their properties and methods.</span></span>  
  
 <span data-ttu-id="0e731-151">이 생성자를 사용 하기 위한 한 가지 일반적인 시나리오의 전체 집합에 일괄 작업을 수행 하려면 것 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 콘텐츠, 모양 또는 항목의 관련된 그룹의 위치를 변경 하는 등의 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-151">One common scenario for using this constructor would be if you want to perform some batch operation on an entire set of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, such as changing the content, appearance, or position of a related group of items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e731-152">다음 코드 예제에서는 사용자 지정을 만드는 방법을 보여 줍니다. <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>, 개별 변경 하기 위한 일괄 처리 작업을 수행 하 고 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 경우에 읽기 전용 컬렉션에서 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-152">The following code example demonstrates how you can create a custom <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>, and perform a batch operation to change the individual <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the collection even though it is read-only.</span></span> <span data-ttu-id="0e731-153">예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-153">For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.</span></span>  
  
 <span data-ttu-id="0e731-154">코드는 `Button1_Click` 메서드를 만듭니다는 <xref:System.Collections.ArrayList> 개체를 추가 하는 두 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 페이지는 개체에 있는 컨트롤과 새로 만듭니다. 그런 다음 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 를 사용 하 여 개체는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-154">The code in the `Button1_Click` method creates an <xref:System.Collections.ArrayList> object, adds the two <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the page to the object, and then creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> constructor.</span></span> <span data-ttu-id="0e731-155">보여 줍니다 방법을 변경할 수 있습니다 일괄 처리를 내부 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컬렉션 자체는 읽기 전용으로 설정 하는 경우에 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-155">It also demonstrates how you can make batch changes to the underlying <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, even though the collection itself is read-only.</span></span> <span data-ttu-id="0e731-156">코드는 컬렉션을 반복 업데이트는 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> 각 컨트롤의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-156">The code loops through the collection, updating the <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> property of each control.</span></span>  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 <span data-ttu-id="0e731-157">브라우저에서 페이지를 로드할 때를 전환할 수 있습니다 페이지 카탈로그 모드로 선택 하 여 **카탈로그** 에 **디스플레이 모드** 드롭 다운 목록 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-157">When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control.</span></span> <span data-ttu-id="0e731-158">클릭 하 고 **표시 CatalogPart 속성** 액세스 단추는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체 및 포함 된의 특정 속성을 표시 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-158">Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls.</span></span> <span data-ttu-id="0e731-159">또한 제목 텍스트의 테두리 내 위에 마우스 포인터를 놓으면는 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 컨트롤 (설명은 도구 설명에 표시) 단추를 클릭할 때 컨트롤에 추가 된 새 설명 텍스트를 볼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-159">Also, if you position your mouse pointer over the title text within the border of the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control, you can see the new description text that was added to the control when you clicked the button (the description appears in a ToolTip).</span></span> <span data-ttu-id="0e731-160">클릭는 **페이지 카탈로그** 표시 하려면 링크는 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 컨트롤 있습니다 것 역시 설명을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-160">If you click the **Page Catalog** link to display the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, you will find that it also has an updated description.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection (System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, System.Collections.ICollection catalogParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, class System.Collections.ICollection catalogParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (existingCatalogParts As CatalogPartCollection, catalogParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection(System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ existingCatalogParts, System::Collections::ICollection ^ catalogParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.CatalogPartCollection : System.Web.UI.WebControls.WebParts.CatalogPartCollection * System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="new System.Web.UI.WebControls.WebParts.CatalogPartCollection (existingCatalogParts, catalogParts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="existingCatalogParts" Type="System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
        <Parameter Name="catalogParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="existingCatalogParts">
          <span data-ttu-id="0e731-161">영역에 있는 기존 <see cref="T:System.Collections.ICollection" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-161">An <see cref="T:System.Collections.ICollection" /> of existing <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls in a zone.</span>
          </span>
        </param>
        <param name="catalogParts">
          <span data-ttu-id="0e731-162">추가 <see cref="T:System.Collections.ICollection" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-162">An <see cref="T:System.Collections.ICollection" /> of additional <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e731-163">영역의 기존 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 컨트롤에 대한 <see cref="T:System.Collections.ICollection" /> 컬렉션과 컨트롤의 추가 컬렉션을 전달하여 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-163">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> class by passing in an <see cref="T:System.Collections.ICollection" /> collection of the existing <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls in a zone, and an additional collection of controls.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::WebParts::CatalogPart ^ catalogPart);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.WebParts.CatalogPart -&gt; bool" Usage="catalogPartCollection.Contains catalogPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalogPart" Type="System.Web.UI.WebControls.WebParts.CatalogPart" />
      </Parameters>
      <Docs>
        <param name="catalogPart">
          <span data-ttu-id="0e731-164">컬렉션에 있는지 여부를 확인하기 위해 검사할 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-164">A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> that is checked to determine whether it is in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e731-165">특정 컨트롤이 컬렉션에 있는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-165">Returns a value indicating whether a particular control exists in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e731-166">특정 컨트롤이 컬렉션에 있는지 여부를 나타내는 부울 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-166">A Boolean value that indicates whether a particular control is in the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e731-167"><xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> 메서드를 사용 하면 특정 지 여부를 결정 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 의 일부인 개체는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-167">The <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> method enables you to determine whether a particular <xref:System.Web.UI.WebControls.WebParts.CatalogPart> object is part of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e731-168">다음 코드 예제에서는 확인 하는 방법을 보여 줍니다. 하면 특정 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤은의 멤버는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-168">The following code example demonstrates how you can determine whether a particular <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control is a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object.</span></span> <span data-ttu-id="0e731-169">예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-169">For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.</span></span>  
  
 <span data-ttu-id="0e731-170">코드는 `Button1_Click` 메서드를 새로 만들고 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 라는 개체 `myParts`합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-170">The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`.</span></span> <span data-ttu-id="0e731-171">메서드에서 사용는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> 결정 하는 메서드 여부는 `PageCatalogPart1` 컨트롤이 있으며이 경우 컨트롤을 검색 하 고 속성 값을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-171">The method uses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> method to determine whether the `PageCatalogPart1` control exists, and if so, retrieves the control and changes a property value.</span></span>  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 <span data-ttu-id="0e731-172">브라우저에서 페이지를 로드할 때를 전환할 수 있습니다 페이지 카탈로그 모드로 선택 하 여 **카탈로그** 에 **디스플레이 모드** 드롭 다운 목록 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-172">When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control.</span></span> <span data-ttu-id="0e731-173">사용자 지정 추가 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 옆에 있는 확인란을 선택 하 고 클릭 하 여 페이지 **추가**합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-173">Add the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page by selecting the check box next to it and clicking **Add**.</span></span> <span data-ttu-id="0e731-174">클릭 **닫기** 페이지 찾아보기 모드를 되돌립니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-174">Click **Close** to return the page to browse mode.</span></span> <span data-ttu-id="0e731-175">컨트롤에 방금 추가한 동사 메뉴 (제목 표시줄에 나타나는 아래쪽 화살표)를 클릭 한 다음 클릭 하는 경우 **닫기**, 컨트롤은 페이지에서 제거 하 고에 추가 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-175">On the control you just added, if you click the verbs menu (the down arrow that appears in the title bar) and then click **Close**, the control is removed from the page and added to the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control.</span></span> <span data-ttu-id="0e731-176">페이지 카탈로그 모드로로 돌아가서는 **페이지 카탈로그** 의 내용을 보려면 링크를는 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-176">Return the page to catalog mode, and click the **Page Catalog** link to view the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control.</span></span> <span data-ttu-id="0e731-177">닫은 컨트롤에 추가 된 것을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-177">Notice that the control you closed has been added to it.</span></span> <span data-ttu-id="0e731-178">클릭 하 고 **표시 CatalogPart 속성** 액세스 단추는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체 및 포함 된의 특정 속성을 표시 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-178">Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls.</span></span> <span data-ttu-id="0e731-179">에 포함 된 서버 컨트롤 옆의 확인란을 선택는 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 컨트롤을 클릭 **추가** 페이지로 다시 추가 하 고 클릭 한 다음에 **닫기** 페이지 찾아보기 모드를 되돌립니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-179">Select the check box next to the server control contained in the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, click **Add** to add it back to the page, and then click **Close** to return the page to browse mode.</span></span> <span data-ttu-id="0e731-180">동사 메뉴 컨트롤을를 다시 클릭 하 고 닫기 동사는 삭제 사항에 유의 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-180">Click the verbs menu again on the control, and note that now the close verb is gone.</span></span> <span data-ttu-id="0e731-181">코드에 의해 제거 되었습니다는 `Button1_Click` 메서드를 사용는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> 에 대 한 검사 하도록 `PageCatalogPart1`를 설정한 해당 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> 속성을 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-181">It was removed by the code in the `Button1_Click` method, when it used the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> method to check for `PageCatalogPart1`, and then set its <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.WebParts.CatalogPart[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.WebParts.CatalogPart[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As CatalogPart(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::WebParts::CatalogPart ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.WebParts.CatalogPart[] * int -&gt; unit" Usage="catalogPartCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.WebParts.CatalogPart[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0e731-182">복사한 컬렉션이 포함될 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-182">An array of <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> objects to contain the copied collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0e731-183">배열에서 컬렉션 내용이 배치될 시작 지점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-183">The starting point in the array at which to place the collection contents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e731-184">컬렉션을 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 개체의 배열에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-184">Copies the collection to an array of <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e731-185"><xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo%2A> 메서드는 포함 될 수 있는 사용자 지정 배열을 어셈블하는 데는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤에 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체 또는 해당 컨트롤의 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-185">The <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo%2A> method is useful when you want to assemble a custom array that can contain the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object, or a subset of those controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As CatalogPartCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e731-186">컬렉션의 읽기 전용인 빈 정적 인스턴스를 참조합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-186">References a static, read-only, empty instance of the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e731-187">정적, 읽기 전용, 빈 인스턴스 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 다른 개체를 사용 하 여 인스턴스를 비교 하거나 메서드에서 올바른 개체 유형을 반환 하려면 빈 컬렉션 인스턴스를 원하는 있지만 멤버를 추가할 필요가 없습니다 메모리 사용량을 줄일 수는 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-187">A static, read-only, empty instance of <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> reduces memory usage in cases where you want an empty collection instance to return the proper object type from a method or to compare the instance with another object, but you do not need to add members to the instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::WebParts::CatalogPart ^ catalogPart);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.WebParts.CatalogPart -&gt; int" Usage="catalogPartCollection.IndexOf catalogPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalogPart" Type="System.Web.UI.WebControls.WebParts.CatalogPart" />
      </Parameters>
      <Docs>
        <param name="catalogPart">
          <span data-ttu-id="0e731-188">컬렉션의 멤버인 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-188">A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> that is a member of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e731-189">컬렉션의 특정 멤버 위치를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-189">Returns the position of a particular member of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e731-190">
            <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />의 멤버인 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-190">A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> that is a member of the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e731-191"><xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> 메서드는 여러 개 있을 경우 유용 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 웹 파트 페이지에서 컨트롤 컬렉션에서 특정 컨트롤을 찾을 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-191">The <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> method is useful if you have multiple <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls on a Web Parts page, and you need to locate a particular control in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e731-192">다음 코드 예제에서는 멤버의 위치를 확인 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 사용 하 여 컬렉션의 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-192">The following code example demonstrates how you can determine the position of a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> collection by using its <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> property.</span></span> <span data-ttu-id="0e731-193">예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-193">For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.</span></span>  
  
 <span data-ttu-id="0e731-194">코드는 `Button1_Click` 메서드를 새로 만들고 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 라는 개체 `myParts`합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-194">The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`.</span></span> <span data-ttu-id="0e731-195">메서드에서 사용 하는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> 속성의 위치를 검색 하는 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 컨트롤을 컨트롤에 속성 값으로 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-195">The method uses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> property to retrieve the position of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, and then changes a property value on the control.</span></span>  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 <span data-ttu-id="0e731-196">브라우저에서 페이지를 로드 한 후를 전환할 수 있습니다 페이지 카탈로그 모드로 선택 하 여 **카탈로그** 에 **디스플레이 모드** 드롭 다운 목록 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-196">After you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control.</span></span> <span data-ttu-id="0e731-197">클릭 하 고 **표시 CatalogPart 속성** 액세스 단추는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체 및 포함 된의 특정 속성을 표시 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-197">Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls.</span></span> <span data-ttu-id="0e731-198">클릭는 **페이지 카탈로그** 의 내용을 표시 하는 링크는 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-198">Click the **Page Catalog** link to display the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control.</span></span> <span data-ttu-id="0e731-199">때문에 제목과 테두리가 없습니다만 해당 <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> 변경 된 속성 값 <xref:System.Web.UI.WebControls.WebParts.PartChromeType.TitleOnly> 사용 하는 코드에서는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> 컨트롤을 검색 하도록 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-199">Note that it has only a title and no border, because its <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> property value was changed to <xref:System.Web.UI.WebControls.WebParts.PartChromeType.TitleOnly> in the code that used the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> property to retrieve the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0e731-200">위치와 고유 식별자에 따라 컬렉션의 특정 멤버를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-200">Returns a specific member of the collection according to its position or a unique identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPart this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPart Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As CatalogPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPart ^ default[int] { System::Web::UI::WebControls::WebParts::CatalogPart ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.WebParts.CatalogPart" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0e731-201">컬렉션에 있는 특정 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-201">The index of a particular <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e731-202">컬렉션에서의 위치를 기준으로 컬렉션의 멤버를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-202">Gets or sets a member of the collection, based on its position in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0e731-203">컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-203">A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> at the specified index in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e731-204"><xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 인덱서를 사용 하면 기본 액세스할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤에 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 인덱스로 개체 및 해당 속성 값을 변경 하거나 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-204">The <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indexer allows you to access the underlying <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object by index, and change their property values or call methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e731-205">다음 코드 예제에서는의 구성원이 액세스 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 해당 항목이 있는 인덱스를 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-205">The following code example demonstrates how you can access a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using its index.</span></span> <span data-ttu-id="0e731-206">예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-206">For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.</span></span>  
  
 <span data-ttu-id="0e731-207">코드는 `Button1_Click` 메서드를 새로 만들고 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 라는 개체 `myParts`합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-207">The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`.</span></span> <span data-ttu-id="0e731-208">메서드에서 사용 하는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 인덱서는 컬렉션의 첫 번째 구성원에서 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-208">Note that the method uses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indexer to retrieve information from the first member of the collection.</span></span>  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 <span data-ttu-id="0e731-209">브라우저에서 페이지를 로드할 때를 전환할 수 있습니다 페이지 카탈로그 모드로 선택 하 여 **카탈로그** 에 **디스플레이 모드** 드롭 다운 목록 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-209">When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control.</span></span> <span data-ttu-id="0e731-210">클릭 하 고 **표시 CatalogPart 속성** 액세스 단추는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체 및 포함 된의 특정 속성을 표시 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-210">Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls.</span></span> <span data-ttu-id="0e731-211">내에서 사용 가능한 서버 컨트롤의 수는 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 를 사용 하 여 가져올는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 인덱서는 `Button1_Click` 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e731-211">The count of available server controls within the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control is obtained by using the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indexer in the `Button1_Click` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPart this[string id] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPart Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(id As String) As CatalogPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPart ^ default[System::String ^] { System::Web::UI::WebControls::WebParts::CatalogPart ^ get(System::String ^ id); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.UI.WebControls.WebParts.CatalogPart" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="0e731-212">컬렉션의 특정 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />에 대한 고유한 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-212">The unique identifier for a particular <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> in a collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e731-213">고유한 문자열 식별자를 기반으로 컬렉션의 멤버를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-213">Returns a member of the collection based on a unique string identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0e731-214">컬렉션에서 ID가 <paramref name="id" /> 값과 동일한 첫 번째 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e731-214">The first <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> in the collection whose ID equals the value of <paramref name="id" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e731-215"><xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 인덱서를 사용 하면 기본 액세스할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤에 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 문자열 식별자를 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-215">The <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indexer allows you to access the underlying <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object by use of a string identifier.</span></span> <span data-ttu-id="0e731-216">하지만 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체는 읽기 전용, 속성 값을 변경 하거나 인덱서를 통해 액세스 하는 내부 컨트롤에서 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-216">Although the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object is read-only, you can change the property values or call methods on the underlying controls accessed by the indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e731-217">다음 코드 예제에서는의 구성원이 액세스 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 문자열 ID 값을 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-217">The following code example demonstrates how you can access a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using its string ID value.</span></span> <span data-ttu-id="0e731-218">예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-218">For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.</span></span>  
  
 <span data-ttu-id="0e731-219">코드는 `Button1_Click` 메서드를 새로 만들고 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 라는 개체 `myParts`합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-219">The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`.</span></span> <span data-ttu-id="0e731-220">메서드에서 사용 하는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 에 대 한 정보를 검색 하는 인덱서는 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 컨트롤 컬렉션의 두 번째 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-220">The method uses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indexer to retrieve information about the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control, which is the second member of the collection.</span></span>  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 <span data-ttu-id="0e731-221">브라우저에서 페이지를 로드할 때를 전환할 수 있습니다 페이지 카탈로그 모드로 선택 하 여 **카탈로그** 에 **디스플레이 모드** 드롭 다운 목록 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-221">When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control.</span></span> <span data-ttu-id="0e731-222">클릭 하 고 **표시 CatalogPart 속성** 액세스 단추는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체 및 포함 된의 특정 속성을 표시 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e731-222">Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls.</span></span> <span data-ttu-id="0e731-223">내에서 사용 가능한 서버 컨트롤의 수는 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 를 사용 하 여 가져올는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 인덱서는 `Button1_Click` 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e731-223">The count of available server controls within the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control is obtained by using the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indexer in the `Button1_Click` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>